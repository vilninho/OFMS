
//rarus vikhle 28.06.2021 АПК ++
#Область ОписаниеПеременных

//rarus vikhle 27.07.2021 17637 +++ Раскомментировал
//rarus vikhle 11.06.2021 mt 17637 +++
&НаКлиенте
Перем ПредыдущаяУникальностьСпецификации;
//rarus vikhle 11.06.2021 mt 17637 ---
//rarus vikhle 27.07.2021 17637 ---

#КонецОбласти
//rarus vikhle 28.06.2021 АПК ---

#Область СобытияФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	//rarus vikhle 08.06.2021 mt 17637 +++
	ЗаполнитьПрименение(); //rarus vikhle 27.07.2021 17637 Раскомментировал
	ОбновитьКолонкиПродуктов();
	//rarus vikhle 08.06.2021 mt 17637 ---
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//rarus vikhle 15.04.2021 mt 17651 +++
	Если НЕ Параметры.ЗначениеКопирования.Пустая() Тогда
		ВызватьИсключение "Создание специальных условий копированием запрещено.";
	КонецЕсли;	
	//rarus vikhle 15.04.2021 mt 17651 ---
	
	//rarus vikhle 15.04.2021 mt 17484 +++
	Если Объект.Ссылка.Пустая() И НЕ Объект.Дилер.Пустая() Тогда
		ДилерАктивен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер,"ДилерАктивен");
		Если НЕ ДилерАктивен Тогда
			СообщениеОбОшибке = СтрШаблон(Нстр("ru = 'Дилер ""%1"" не активен.'"),Объект.Дилер); 
			Если Scan_ПраваИНастройки.Scan_Право("ЗапретРаботыСНеактивнымиДилерами") Тогда
				Объект.Дилер = Неопределено;	
				СообщениеОбОшибке = СообщениеОбОшибке + " Поле очищено.";
			КонецЕсли;	
			ВывестиСообщениеПол(СообщениеОбОшибке,,"Объект.Дилер");
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 15.04.2021 mt 17484 ---
	
	ОбъектНастройки = Метаданные.Справочники.Scan_СпециальныеУсловия.Имя;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсполнителиЗадач.Исполнитель КАК Исполнитель,
		|	ИсполнителиЗадач.РольИсполнителя КАК РольИсполнителя
		|ИЗ
		|	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
		|ГДЕ
		|	ИсполнителиЗадач.Исполнитель = &Исполнитель";
	
	Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РольИсполнителя = ВыборкаДетальныеЗаписи.РольИсполнителя;
	КонецЦикла;
	
	НастройкаРазрешенныйПроцентМаржи = Scan_ПраваИНастройки.Scan_Право("РазрешенныйПроцентМаржиСУ");
	Если НастройкаРазрешенныйПроцентМаржи <> Неопределено и НастройкаРазрешенныйПроцентМаржи <> 0 Тогда
		РазрешенныйПроцентМаржи = НастройкаРазрешенныйПроцентМаржи;
		Элементы.ДекорацияРазрешеннаяМаржа.Заголовок = "Разрешенный процент маржи " + РазрешенныйПроцентМаржи;
	Иначе
		Элементы.ДекорацияРазрешеннаяМаржа.Видимость = ложь;
	КонецЕсли; 
	
	СформироватьHTMLСогласований();                  	
	
	//rarus vikhle 27.07.2021 17637 Раскомментировал +++
	//rarus vikhle 11.06.2021 mt 17637 +++
	ЗаполнитьСтандартныеУсловияОплаты(Объект.Ссылка.Пустая());	
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
	//rarus vikhle 11.06.2021 mt 17637 ---
	//rarus vikhle 27.07.2021 17637 ---
	
	РассчитатьДлительностьСогласования();
	
	//rarus vikhle 08.06.2021 mt 17637 +++
	//rarus vikhle 18.08.2020 mt 16181 +++
	//Для Каждого СтрокаПродукта Из Объект.СписокПродуктов Цикл
	//	Если ЗначениеЗаполнено(СтрокаПродукта.Продукт) Тогда
	//		СтрокаПродукта.ДокументУстановкиПлановыхЦен = СтрокаПродукта.Продукт.ДокументУстановкиПлановыхЦенПродукта;
	//	КонецЕсли;	
	//КонецЦикла;
	//rarus vikhle 18.08.2020 mt 16181	
	//rarus vikhle 08.06.2021 mt 17637 ---
	Элементы.ДекорацияСпецификация.Заголовок = НайтиСпецификациюСУ(); //rarus ozhnik 16453 08.09.2020 + 
	
	ОбщаяСумма = Объект.КоличествоПродуктов * Объект.СпецDealerNet; //rarus vikhle 17.12.2020 mt 16181 изменил на согласованную
	
	УправлениеДиалогомНаСервере();//rarus vikhle 08.06.2021 mt 17637 перенес из "приоткрытии"
	
	УстановитьУсловноеОформление();//rarus vikhle 18.12.2020 mt 16181
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//УправлениеДиалогомНаСервере();
	ПредыдущаяУникальностьСпецификации = Объект.УникальностьСпецификации;//rarus vikhle 11.06.2021 mt 17637 //rarus vikhle 27.07.2021 17637 Раскомментировал
	ПредыдущееЗначениеДилера = Объект.Дилер; //rarus vikhle 17.09.2021 mt 18288
КонецПроцедуры

&НаКлиенте  
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора) экспорт
	//rarus vikhle 18.08.2020 mt 16181 +++
	Если ВыбранноеЗначение <> Неопределено Тогда
		Обработатьподбор(ВыбранноеЗначение);	
	КонецЕсли;
	//rarus vikhle 18.08.2020 mt 16181 ---
	ОбновитьУсловияОплаты(); //rarus vikhle 05.10.2020 mt 16181
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОбработкаОповещенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//rarus vikhle 22.10.2021 m 18441 +++
	Если ТекущийОбъект.СрокДействияСпециальныхУсловий = Дата(1,1,1) И ТекущийОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Запрос Тогда 
		
		ПредыдущийСтатус = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Ссылка, "Статус"); 
		Если ТекущийОбъект.Статус <> ПредыдущийСтатус Тогда
			КоличествоДней = Scan_ПраваИНастройки.Scan_Право("КоличествоРабочихДнейДляРасчетаСрокаДействияСУ");
			ТекущаяДата = НачалоДня(ТекущаяДатаСеанса());
			ТекущийОбъект.СрокДействияСпециальныхУсловий = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ТекущаяДата, КоличествоДней);
			
			ВывестиСообщениеПол(Нстр("ru = 'Был автоматически заполнен срок действия СУ.'"));
		КонецЕсли;	
		
	КонецЕсли;	
	//rarus vikhle 22.10.2021 m 18441 ---
	
	Если ТекущийОбъект.Цены.Количество() > 0 Тогда
		ПоследниеУсловия = ТекущийОбъект.Цены[ТекущийОбъект.Цены.Количество()-1];
		Если ТекущийОбъект.СпецCustomerPrice <> ПоследниеУсловия.CustomerPrice 
			или ТекущийОбъект.СпецDealerNet <> ПоследниеУсловия.DealerNet 
			или ТекущийОбъект.Статус <> ПоследниеУсловия.Статус  
			или ТекущийОбъект.DeliveryDate <> ПоследниеУсловия.DeliveryDate
			или ТекущийОбъект.СрокДействияСпециальныхУсловий <> ПоследниеУсловия.СрокДействияСпециальныхУсловий
			ИЛИ ТекущийОбъект.КоличествоПродуктов <> ПоследниеУсловия.КоличествоПродуктов Тогда //rarus vikhle 03.12.2020 mt 16181
			НоваяСтрока = ТекущийОбъект.Цены.Добавить();
			//НоваяСтрока.CustomerPrice = ?(ТекущийОбъект.СпецCustomerPrice = 0, ТекущийОбъект.ЦенаДляКлиента, ТекущийОбъект.СпецCustomerPrice);
			НоваяСтрока.CustomerPrice = ТекущийОбъект.СпецCustomerPrice;//rarus vikhle 03.12.2020 mt 16181
			//НоваяСтрока.DealerNet = ?(ТекущийОбъект.СпецDealerNet = 0, ТекущийОбъект.ЦенаДляДилера, ТекущийОбъект.СпецDealerNet);
			НоваяСтрока.DealerNet = ТекущийОбъект.СпецDealerNet;//rarus vikhle 03.12.2020 mt 16181 
			НоваяСтрока.Статус = ТекущийОбъект.Статус;
			НоваяСтрока.ТекстСообщения = Примечание;
			НоваяСтрока.Период = ТекущаяДатаСеанса();
			НоваяСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			НоваяСтрока.DeliveryDate = ТекущийОбъект.DeliveryDate;
			НоваяСтрока.СрокДействияСпециальныхУсловий = ТекущийОбъект.СрокДействияСпециальныхУсловий;
			НоваяСтрока.КоличествоПродуктов = ТекущийОбъект.КоличествоПродуктов;//rarus vikhle 02.12.2020 mt 16181
		КонецЕсли; 
	Иначе
		Если ТекущийОбъект.СпецCustomerPrice <> 0 или ТекущийОбъект.СпецDealerNet <> 0 
			или ТекущийОбъект.Статус <> ТекущийОбъект.Ссылка.Статус Тогда	
		    НоваяСтрока = ТекущийОбъект.Цены.Добавить();
			//НоваяСтрока.CustomerPrice = ?(ТекущийОбъект.СпецCustomerPrice = 0, ТекущийОбъект.ЦенаДляКлиента, ТекущийОбъект.СпецCustomerPrice);
			НоваяСтрока.CustomerPrice = ТекущийОбъект.СпецCustomerPrice;//rarus vikhle 03.12.2020 mt 16181
			//НоваяСтрока.DealerNet = ?(ТекущийОбъект.СпецDealerNet = 0, ТекущийОбъект.ЦенаДляДилера, ТекущийОбъект.СпецDealerNet);
			НоваяСтрока.DealerNet = ТекущийОбъект.СпецDealerNet;//rarus vikhle 03.12.2020 mt 16181
			НоваяСтрока.Статус = ТекущийОбъект.Статус;
			НоваяСтрока.ТекстСообщения = Примечание;
			НоваяСтрока.Период = ТекущаяДатаСеанса();
			НоваяСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			НоваяСтрока.DeliveryDate = ТекущийОбъект.DeliveryDate;
			НоваяСтрока.СрокДействияСпециальныхУсловий = ТекущийОбъект.СрокДействияСпециальныхУсловий;
			НоваяСтрока.КоличествоПродуктов = ТекущийОбъект.КоличествоПродуктов;//rarus vikhle 02.12.2020 mt 16181
		КонецЕсли;
	КонецЕсли;    		
	
	//rarus vikhle 27.07.2021 17637 Раскомментировал +++
	//rarus vikhle 16.06.2021 mt 17637 +++
	ОбщийПроцентУсловийОплаты = ТекущийОбъект.УсловияОплаты.Итог("ПроцентОплаты"); 
	Если ОбщийПроцентУсловийОплаты <> 100 Тогда
		СтрокаПостоплаты = ТекущийОбъект.УсловияОплаты.Найти(Перечисления.Scan_ВидыОплат.Постоплата,"ВидОплаты");
		Если СтрокаПостоплаты = Неопределено Тогда
			НоваяСтрока 					= ТекущийОбъект.УсловияОплаты.Добавить();
			НоваяСтрока.ВидОплаты			= Перечисления.Scan_ВидыОплат.Постоплата; 
			НоваяСтрока.ПроцентОплаты 		= 100 - ОбщийПроцентУсловийОплаты;
			НоваяСтрока.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
			НоваяСтрока.СрокОплатыАванса	= 30;
			НоваяСтрока.КрайняяДатаОплаты 	= Дата(1,1,1);
		Иначе
			СтрокаПостоплаты.ПроцентОплаты = 100 - ОбщийПроцентУсловийОплаты;
		КонецЕсли;	
	КонецЕсли;
	//rarus vikhle 16.06.2021 mt 17637 ---
	//rarus vikhle 27.07.2021 17637 ---
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
  
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СформироватьHTMLСогласований();
	УправлениеДиалогомНаСервере();
	РассчитатьДлительностьСогласования();//rarus vikhle 03.12.2020 mt 16181
	//rarus vikhle 08.06.2021 mt 17637 +++
	ЗаполнитьПрименение();//rarus vikhle 27.07.2021 17637 Раскомментировал
	ОбновитьКолонкиПродуктов();
	//rarus vikhle 08.06.2021 mt 17637 ---
	
КонецПроцедуры

#КонецОбласти


&НаКлиенте
Процедура Запросить(Команда)
	//rarus agar 09.03.2021 17372 ++
	Если Объект.Дилер.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Поле ""Дилер"" не заполнено'"),ЭтотОбъект, "Объект.Дилер");
		Возврат;
	КонецЕсли;
	Если Объект.ПродавецДилера.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Поле ""Продавец дилера"" не заполнено'"),ЭтотОбъект, "Объект.ПродавецДилера");
		Возврат;
	КонецЕсли;
	//rarus agar 09.03.2021 17372 --
	
	СтарыйСтатус  = Объект.Статус;     	
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Запрос"); 	
	//rarus kabany Дата: 05/07/2021 17943 ++
	Если НЕ ПроверитьСтатусы(Объект.Статус, Объект.DeliveryDate) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Перед переводом в статус %1 требуется заполнить дату DD (DeliveryDate)'; en = 'Before transferring to status %1, you need to fill in the DD (DeliveryDate) date' "),ЭтотОбъект, "Объект.DeliveryDate",,,Объект.Статус);
		Возврат;	
	КонецЕсли;
	//rarus kabany Дата: 05/07/2021 17943 --
	Если Не Записать() Тогда
		Объект.Статус = СтарыйСтатус;
	КонецЕсли;   
КонецПроцедуры

&НаКлиенте
Процедура НаСогласование(Команда)
	СтарыйСтатус  = Объект.Статус;     	
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Согласование");
	
	//rarus kabany Дата: 05/07/2021 17943 ++
	Если НЕ ПроверитьСтатусы(Объект.Статус, Объект.DeliveryDate) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Перед переводом в статус %1 требуется заполнить дату DD (DeliveryDate)'; en = 'Before transferring to status %1, you need to fill in the DD (DeliveryDate) date' "),ЭтотОбъект, "Объект.DeliveryDate",,,Объект.Статус);
		Возврат;	
	КонецЕсли;
	//rarus kabany Дата: 05/07/2021 17943 --
	
	Если Не Записать() Тогда
		Объект.Статус = СтарыйСтатус;
	КонецЕсли;   

КонецПроцедуры

&НаКлиенте
Процедура Одобрить(Команда)
	Если РазрешенныйПроцентМаржи > Объект.СпецМаржаDist Тогда //rarus ozhnik 15888 31.08.2020 + 
		ВывестиСообщениеПол(Нстр("ru = 'Пользователю запрещено согласовывать специальные условия с данным процентом маржи.'"));							
		возврат;
	КонецЕсли;	       		
		
	СтарыйСтатус  = Объект.Статус;     	
	//Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено"); 	
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП");//rarus vikhle 25.01.2021 mt 16929
	
	//rarus kabany Дата: 05/07/2021 17943 ++
	Если НЕ ПроверитьСтатусы(Объект.Статус, Объект.DeliveryDate) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Перед переводом в статус %1 требуется заполнить дату DD (DeliveryDate)'; en = 'Before transferring to status %1, you need to fill in the DD (DeliveryDate) date' "),ЭтотОбъект, "Объект.DeliveryDate",,,Объект.Статус);
		Возврат;	
	КонецЕсли;
	//rarus kabany Дата: 05/07/2021 17943 --
	
	Если Не Записать() Тогда
		Объект.Статус = СтарыйСтатус;
	КонецЕсли;   

КонецПроцедуры

&НаКлиенте
Процедура Отклонить(Команда)
	СтарыйСтатус  = Объект.Статус;     	
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отменена"); 	
	Если Не Записать() Тогда
		Объект.Статус = СтарыйСтатус;
	КонецЕсли;   

КонецПроцедуры

&НаКлиенте
Процедура Пересмотр(Команда)
	СтарыйСтатус  = Объект.Статус;     	
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр"); 	
	Если Не Записать() Тогда
		Объект.Статус = СтарыйСтатус;
	КонецЕсли;   

КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	//rarus ozhnik 15888 31.08.2020 + 
	//ОбработкаПараметровВидимости();
	Scan_ПараметрыВидимостиОбъектовСервер.ОбработкаПараметровВидимости(ЭтотОбъект);
	
	Элементы.УсловияОплатыЗаполнитьСтандартныеУсловия.Доступность = НЕ Элементы.УсловияОплаты.ТолькоПросмотр;//rarus vikhle 28.06.2021 mt 17637 //rarus vikhle 27.07.2021 17637 Раскомментировал
	
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТЗ.ИмяЭлемента КАК ИмяЭлемента
	//	|ПОМЕСТИТЬ ВТ_ТЗ
	//	|ИЗ
	//	|	&ТаблицаЗаписей КАК ТЗ
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	Scan_ПараметрыВидимостиОбъектов.ИмяЭлемента КАК ИмяЭлемента,
	//	|	Scan_ПараметрыВидимостиОбъектов.Видимость КАК Видимость,
	//	|	Scan_ПараметрыВидимостиОбъектов.Доступность КАК Доступность
	//	|ПОМЕСТИТЬ ВТ_СохраненныеНастройки
	//	|ИЗ
	//	|	РегистрСведений.Scan_ПараметрыВидимостиОбъектов КАК Scan_ПараметрыВидимостиОбъектов
	//	|ГДЕ
	//	|	Scan_ПараметрыВидимостиОбъектов.ОбъектНастройки = &ОбъектНастройки
	//	|	И Scan_ПараметрыВидимостиОбъектов.РольИсполнителя = &РольИсполнителя
	//	|	И Scan_ПараметрыВидимостиОбъектов.Статус = &Статус
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_ТЗ.ИмяЭлемента КАК ИмяЭлемента,
	//	|	ЕСТЬNULL(ВТ_СохраненныеНастройки.Видимость, ЛОЖЬ) КАК Видимость,
	//	|	ЕСТЬNULL(ВТ_СохраненныеНастройки.Доступность, ЛОЖЬ) КАК Доступность
	//	|ИЗ
	//	|	ВТ_ТЗ КАК ВТ_ТЗ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СохраненныеНастройки КАК ВТ_СохраненныеНастройки
	//	|		ПО ВТ_ТЗ.ИмяЭлемента = ВТ_СохраненныеНастройки.ИмяЭлемента";
	//
	//Запрос.УстановитьПараметр("ТаблицаЗаписей", Справочники.Scan_СпециальныеУсловия.ПолучитьСписокЭлементовДляНастройки());
	//Запрос.УстановитьПараметр("ОбъектНастройки", ОбъектНастройки);
	//Запрос.УстановитьПараметр("РольИсполнителя", РольИсполнителя);
	//Запрос.УстановитьПараметр("Статус", Объект.Статус);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	НужныйЭлемент =  Элементы.Найти(Выборка.ИмяЭлемента);
	//	Если НужныйЭлемент <> Неопределено Тогда
	//		Элементы[Выборка.ИмяЭлемента].Видимость = Выборка.Видимость;	
	//		Если ТипЗнч(Элементы[Выборка.ИмяЭлемента]) = Тип("КнопкаФормы")	Тогда
	//			Элементы[Выборка.ИмяЭлемента].Доступность =  Выборка.Доступность;	
	//		Иначе
	//			Элементы[Выборка.ИмяЭлемента].ТолькоПросмотр = НЕ Выборка.Доступность;
	//		КонецЕсли; 
	//	Иначе
	//		ВывестиСообщениеПол("Не найден элемент формы с именем %1. Обратитесь к администратору",,,,,Выборка.ИмяЭлемента);
	//		Элементы.ГруппаФон.Видимость = ложь;
	//	КонецЕсли; 
	//КонецЦикла;
	//rarus ozhnik 15888 31.08.2020 -
	
	// доработка уникальных полей
	Если Элементы.УникальностьСпецификации.Видимость Тогда
		Если Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std Тогда
			Элементы.НомерКоммерческогоПредложенияSPORT.Видимость = Ложь;
			Элементы.ЗагрузитьКП.Видимость = Ложь;
			Элементы.СтандартнаяСпецификация.Видимость = Истина;
		Иначе
			Элементы.НомерКоммерческогоПредложенияSPORT.Видимость = Истина;
			Элементы.ЗагрузитьКП.Видимость = Истина;
			Элементы.СтандартнаяСпецификация.Видимость = ложь;
		КонецЕсли; 
	КонецЕсли;
	
	//rarus vikhle 04.12.2020 mt 16923 +++ закомментировал
	//Если не ЗначениеЗаполнено(Объект.RUНомер) Тогда
	//	Элементы.DistributorNet.ТолькоПросмотр = истина;
	//Иначе
	//	Элементы.DistributorNet.ТолькоПросмотр = ложь;
	//КонецЕсли; 	
	//rarus vikhle 04.12.2020 mt 16923 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	УправлениеДиалогомНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	СформироватьНаименование();
	ОбновитьПризнакСУНаАвтобусы();	// rarus tenkam 18.06.2021 mantis 17741 +
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаименование()
	Объект.Наименование = "СУ / " + Объект.Дилер + " / " + Объект.Модель + " / " + Объект.КонечныйКлиент;
	//rarus vikhle 15.09.2020 mt 16181 +++
	Если НЕ Объект.Ссылка.Пустая() Тогда
		Объект.Наименование = Объект.Наименование +  " / " + "(" + Объект.Код + ")";
	КонецЕсли;
	//rarus vikhle 15.09.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентПриИзменении(Элемент)
	//ЗаполнитьСписокВыбораКомпаний(); //rarus vikhle 03.12.2020 mt 16181
	СформироватьНаименование();
	
	//rarus vikhle 03.12.2020 mt 16181 +++
	КомпанииКонтрагентов = ПолучитьКомпанииКонтрагента(Объект.КонечныйКлиент);
	Если КомпанииКонтрагентов.Количество() = 1 Тогда
		Объект.КонечныйКлиентКомпания = КомпанииКонтрагентов[0];
	ИначеЕсли КомпанииКонтрагентов.Найти(Объект.КонечныйКлиентКомпания) = Неопределено Тогда
		Объект.КонечныйКлиентКомпания = Неопределено;
	КонецЕсли;
	//rarus vikhle 03.12.2020 mt 16181 ---
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораКомпаний()
	Элементы.КонечныйКлиентКомпания.СписокВыбора.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Период КАК Период,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания КАК Компания,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент КАК Контрагент,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.ВидВзаимодействия КАК ВидВзаимодействия,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Пользователь КАК Пользователь,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.ДокументИзмененияВ1БД КАК ДокументИзмененияВ1БД,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.РежимУстановкиВидаВзаимодействия КАК РежимУстановкиВидаВзаимодействия
	               |ИЗ
	               |	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	               |ГДЕ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Объект.КонечныйКлиент);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Если выгрузка.Количество() = 1 Тогда
		Объект.КонечныйКлиентКомпания = Выгрузка[0].Компания;
	КонецЕсли;   	

	Для каждого СтрокаВыгрузки Из  Выгрузка Цикл
		Элементы.КонечныйКлиентКомпания.СписокВыбора.Добавить(СтрокаВыгрузки.Компания);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура STDUOПриИзменении(Элемент)
	
	//rarus vikhle 27.07.2021 17637 Раскомментировал +++
	//rarus vikhle 11.06.2021 mt 17637 +++
	ТипSTD = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std");
	ТипUO  = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UO");
	ТипUUO = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UUO");
	//rarus vikhle 11.06.2021 mt 17637 ---
	//rarus vikhle 27.07.2021 17637 ---
	
	УправлениеДиалогомНаСервере();
	
	//rarus vikhle 27.07.2021 17637 Раскомментировал +++
	//rarus vikhle 11.06.2021 mt 17637 +++
	// При изменении STD на UO/UUO или UO/UUO на STD задаем вопрос о заполнении условий оплаты 
	Если (ПредыдущаяУникальностьСпецификации = ТипSTD
		И (Объект.УникальностьСпецификации = ТипUO
		ИЛИ Объект.УникальностьСпецификации = ТипUUO))
		ИЛИ ((ПредыдущаяУникальностьСпецификации = ТипUO
		ИЛИ ПредыдущаяУникальностьСпецификации = ТипUUO)
		И Объект.УникальностьСпецификации = ТипSTD) Тогда
		
		//rarus vikhle 17.09.2021 mt 18288 +++
		Если НЕ Объект.Дилер.Пустая() Тогда 
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеСменыТипаСпецификации",ЭтотОбъект);
			ВидДилера = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер, "ВидДилера");
			Принадлежность	= ?(ВидДилера = ПредопределенноеЗначение("Перечисление.Scan_ВидыДилеров.Собственный"), Нстр("ru = 'ОСП'"), Нстр("ru = 'независимых дилеров'")); //rarus vikhle 27.09.2021 АПК
			ТекстВопроса 	= СтрШаблон(Нстр("ru = 'Перезаполнить табличную часть «Условия оплаты» по умолчанию для %1 для %2?'"),
									Объект.УникальностьСпецификации,
									Принадлежность);
			//ТекстВопроса = СтрШаблон(Нстр("ru = 'Перезаполнить табличную часть «Условия оплаты» по умолчанию для %1?'"),Объект.УникальностьСпецификации);
			ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса,РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
		//rarus vikhle 17.09.2021 mt 18288 ---
	КонецЕсли;	
	ПредыдущаяУникальностьСпецификации = Объект.УникальностьСпецификации;
	//rarus vikhle 11.06.2021 mt 17637
	//rarus vikhle 27.07.2021 17637 ---
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьПродукты(Команда)
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Модель", Объект.Модель);
	СтруктураОтбора.Вставить("ОтборПоЧастичномуСовпадениюМодели",Истина); //rarus agar 10.02.2021 17117 +-
	СтруктураОтбора.Вставить("БУ", ложь);
	СтруктураОтбора.Вставить("ТипСпецификации",Объект.УникальностьСпецификации);//rarus vikhle 10.06.2021 mt 17637 //rarus vikhle 27.07.2021 17637 Раскомментировал
	// СтруктураОтбора.Вставить("ПустоеСоглашениеОПоставке", истина); //rarus ozhnik 15888 31.08.2020 + 
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбора", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаПодбораПродуктов",СтруктураОтбора,ЭтаФорма,,,,ОписаниеОповещения,);

КонецПроцедуры

&НаСервере
Процедура обработатьподбор(ВыбранноеЗначение)
	ТаблицаПодбора = ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
	ДобавленыПродукты = Ложь; //rarus vikhle 16.09.2021 mt 18288
	Для Каждого СтрокаПродукта Из ТаблицаПодбора Цикл   		
		Поиск = Новый Структура("Продукт", СтрокаПродукта.Продукт);	
			МассивСтрок = Объект.СписокПродуктов.НайтиСтроки(Поиск);	
			Если МассивСтрок.Количество() = 0 Тогда
		        НоваяСтрока = Объект.СписокПродуктов.Добавить();         		
				НоваяСтрока.Продукт = СтрокаПродукта.Продукт;
				НоваяСтрока.ДокументУстановкиПлановыхЦен = СтрокаПродукта.Продукт.ДокументУстановкиПлановыхЦенПродукта;//rarus vikhle 18.08.2020 mt 16181 
				ДобавленыПродукты = Истина;
			Иначе
				ВывестиСообщениеПол("Продукт %1 уже добавлен список продуктов.",ЭтотОбъект,,,,СтрокаПродукта.Продукт);
			КонецЕсли;
	КонецЦикла;
	//Объект.КоличествоПродуктов = Объект.СписокПродуктов.Количество(); //rarus vikhle 08.06.2021 mt 17637 //rarus vikhle 27.07.2021 17637 Закомментировал
	ОбщаяСумма = Объект.КоличествоПродуктов * Объект.СпецDealerNet; //rarus vikhle 17.12.2020 mt 16181 изменил на согласованную
	
	// rarus tenkam 19.01.2021 mantis 16345 +++
	Объект.КоличествоПрикрепленныхШасси = Объект.СписокПродуктов.Количество(); 
	Если Объект.КоличествоПрикрепленныхШасси <> 0 Тогда
		Элементы.ГруппаПродукты.Заголовок = "Продукты (" + Объект.КоличествоПрикрепленныхШасси + ")";
	Иначе
		Элементы.ГруппаПродукты.Заголовок = "Продукты";		
	КонецЕсли;	
	// rarus tenkam 19.01.2021 mantis 16345 ---
	
	//rarus vikhle 16.09.2021 mt 18288 +++
	Если ДобавленыПродукты Тогда
		Модифицированность = Истина;
	КонецЕсли;
	//rarus vikhle 16.09.2021 mt 18288 ---
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьПроцентыИЦены()
	Если ЗначениеЗаполнено(Объект.ЦенаДляДилера) Тогда 		
		Маржа = Объект.ЦенаДляДилера - Объект.СебестоимостьСНДС;
		Объект.МаржаДист = окр(Маржа/(Маржа+Объект.СебестоимостьСНДС) * 100,2);
	Иначе
		Объект.МаржаДист = 0;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ЦенаДляКлиента) Тогда 		
		Маржа = Объект.ЦенаДляКлиента - Объект.ЦенаДляДилера;
		СтароеЗначение = Объект.МаржаДилера;//rarus vikhle 04.12.2020 mt 16923
		Объект.МаржаДилера = окр(Маржа/(Маржа+Объект.ЦенаДляДилера) * 100,2);
		//rarus vikhle 04.12.2020 mt 16923 +++
		Если Объект.МаржаДилера < 0 И СтароеЗначение <> Объект.МаржаДилера Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Маржа дилера стала отрицательной.'"));
		КонецЕсли;
		//rarus vikhle 04.12.2020 mt 16923
	Иначе
		Объект.МаржаДилера = 0;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ПрайсDealerNet) Тогда 		
		Маржа = Объект.ПрайсDealerNet - Объект.СебестоимостьСНДС;
		Объект.ПрайсМаржаDist = окр(Маржа/(Маржа+Объект.СебестоимостьСНДС) * 100,2);
	Иначе
		Объект.ПрайсМаржаDist = 0;
	КонецЕсли; 	
	
	Если ЗначениеЗаполнено(Объект.ПрайсCustomerPrice) Тогда
		Маржа = Объект.ПрайсCustomerPrice - Объект.ПрайсDealerNet;
		СтароеЗначение = Объект.ПрайсМаржаDealer;//rarus vikhle 04.12.2020 mt 16923
		Объект.ПрайсМаржаDealer = окр(Маржа/(Маржа+Объект.ПрайсDealerNet) * 100,2);
		//rarus vikhle 04.12.2020 mt 16923 +++
		Если Объект.ПрайсМаржаDealer < 0 И СтароеЗначение <> Объект.ПрайсМаржаDealer Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Маржа дилера стала отрицательной.'"));
		КонецЕсли;
		//rarus vikhle 04.12.2020 mt 16923
	Иначе
		Объект.ПрайсМаржаDealer = 0;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.СпецDealerNet) Тогда 		
		Маржа = Объект.СпецDealerNet - Объект.СебестоимостьСНДС;
		Объект.СпецМаржаDist = окр(Маржа/(Маржа+Объект.СебестоимостьСНДС) * 100,2);
	Иначе
		Объект.СпецМаржаDist = 0;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.СпецCustomerPrice) Тогда
		Маржа = Объект.СпецCustomerPrice - Объект.СпецDealerNet;
		СтароеЗначение = Объект.СпецМаржаDealer;//rarus vikhle 04.12.2020 mt 16923
		Объект.СпецМаржаDealer = окр(Маржа/(Маржа+Объект.СпецDealerNet) * 100,2);
		//rarus vikhle 04.12.2020 mt 16923 +++
		Если Объект.СпецМаржаDealer < 0 И СтароеЗначение <> Объект.СпецМаржаDealer Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Маржа дилера стала отрицательной.'"));
		КонецЕсли;
		//rarus vikhle 04.12.2020 mt 16923
	Иначе
		Объект.СпецМаржаDealer = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СебестоимостьСНДСПриИзменении(Элемент)
	ОчиститьСообщения();//rarus vikhle 04.12.2020 mt 16923
	ПересчитатьПроцентыИЦены();
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере()
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПрайсDealerNetПриИзменении(Элемент)
	ОчиститьСообщения();//rarus vikhle 04.12.2020 mt 16923
	ПересчитатьПроцентыИЦены();
КонецПроцедуры

&НаКлиенте
Процедура СпецDealerNetПриИзменении(Элемент)
	ОчиститьСообщения();//rarus vikhle 04.12.2020 mt 16923
	РассчитатьЦенуБезНДС("ЦенаДляДилера");//rarus vikhle 17.12.2020 mt 16181
	ПересчитатьПроцентыИЦены();
	//rarus vikhle 17.12.2020 mt 16181 +++
	ОбщаяСумма = Объект.КоличествоПродуктов * Объект.СпецDealerNet;
	ОбновитьУсловияОплаты();
	//rarus vikhle 17.12.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура ПрайсCustomerPriceПриИзменении(Элемент)
	ОчиститьСообщения();//rarus vikhle 04.12.2020 mt 16923
	ПересчитатьПроцентыИЦены();
КонецПроцедуры

&НаКлиенте
Процедура СпецCustomerPriceПриИзменении(Элемент)
	ОчиститьСообщения();//rarus vikhle 04.12.2020 mt 16923
	РассчитатьЦенуБезНДС("ЦенаДляКлиента");//rarus vikhle 17.12.2020 mt 16181
	ПересчитатьПроцентыИЦены();
КонецПроцедуры

&НаСервере
Процедура СформироватьHTMLСогласований()
	
	СтрокаHTML = "<HTML><BODY style=""background-color:#f0f0f0"">";	
	ИндексСтроки = Объект.Цены.Количество()-1;
	Пока ИндексСтроки >= 0 Цикл
		СтрокаЦен = Объект.Цены[индексСтроки];
		Если СтрокаЦен.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Запрос Тогда
			ЦветСтатуса = "ffe0ab";
		ИначеЕсли СтрокаЦен.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр Тогда
			ЦветСтатуса = "ffbe9b";
		ИначеЕсли СтрокаЦен.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Согласование Тогда
			ЦветСтатуса = "ffe0ab";
		//rarus vikhle 25.01.2021 mt 16929 +++	
		//ИначеЕсли СтрокаЦен.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено Тогда
		//	ЦветСтатуса = "b4ffc0";
		ИначеЕсли СтрокаЦен.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП Тогда
			ЦветСтатуса = "b4ffc0";
		ИначеЕсли СтрокаЦен.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП Тогда
			ЦветСтатуса = "32CD32";
		//rarus vikhle 25.01.2021 mt 16929 ---	
		ИначеЕсли СтрокаЦен.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ Тогда
			ЦветСтатуса = "ffbe9b";
		ИначеЕсли СтрокаЦен.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Черновик Тогда
			ЦветСтатуса = "ffd074";
		КонецЕсли; 
		                                                 
		
		СтрокаHTML = СтрокаHTML + "<table border=""0"" cellpadding=""1"" cellspacing=""1"" style=""width:650px;background-color:#" + ЦветСтатуса + """><tbody><tr>";
		//СтрокаHTML = СтрокаHTML + "<td style=""color:#f12000;width:70px"">" + Формат(СтрокаЦен.DealerNet,"ЧДЦ=0; ЧРГ=")  + " &#x20bd; </td>";
		СтрокаHTML = СтрокаHTML + "<td style=""color:#f12000;width:70px"">" + Формат(СтрокаЦен.DealerNet,"ЧДЦ=0; ЧРГ=")  + "&nbsp&#x20bd; </td>"; //rarus vikhle 16.12.2020 mt 16181 "&nbsp&#x20bd" - пробел с знаком рубля, чтобы на одной строке сумма и символ были 
		//СтрокаHTML = СтрокаHTML + "<td style=""color:#2a60ff;width:70px"">" + Формат(СтрокаЦен.CustomerPrice,"ЧДЦ=0; ЧРГ=") + " &#x20bd; </td>";
		СтрокаHTML = СтрокаHTML + "<td style=""color:#2a60ff;width:70px"">" + Формат(СтрокаЦен.CustomerPrice,"ЧДЦ=0; ЧРГ=") + "&nbsp&#x20bd; </td>";//rarus vikhle 16.12.2020 mt 16181 "&nbsp&#x20bd" - пробел с знаком рубля, чтобы на одной строке сумма и символ были
		СтрокаHTML = СтрокаHTML + "<td style=""color:#000000;""> DD " + Формат(СтрокаЦен.DeliveryDate,"ДЛФ=D") + " </td>";
		СтрокаHTML = СтрокаHTML + "<td style=""color:#000000;""> Срок " + Формат(СтрокаЦен.СрокДействияСпециальныхУсловий,"ДЛФ=D") + " </td>";
		СтрокаHTML = СтрокаHTML + "<td>Квота</td>";
		//СтрокаHTML = СтрокаHTML + "<td>"+ Объект.КоличествоПродуктов + "</td>";
		СтрокаHTML = СтрокаHTML + "<td>"+ СтрокаЦен.КоличествоПродуктов + "</td>";//rarus vikhle 02.12.2020 mt 16181
		СтрокаHTML = СтрокаHTML + "<td>&nbsp;</td>";
		
		СтрокаHTML = СтрокаHTML + "<tr><td colspan=""7""><span style=""font-size:14px;color:#000000""><p><em>" + СтрокаЦен.ТекстСообщения + "</em></p></td></tr>";
		
		СтрокаHTML = СтрокаHTML + "<tr>	<td colspan=""6"" rowspan=""1"" style=""text-align:right""><span style=""font-size:12px""><em>" + СтрокаЦен.Период +" " + СтрокаЦен.Пользователь  
						+ ?(ЗначениеЗаполнено(СтрокаЦен.Пользователь.Сотрудник), "," + СтрокаЦен.Пользователь.Сотрудник.Должность,"")  + "</em></td>";
		
		СтрокаHTML = СтрокаHTML + "<td style=""width:80px;background-color:#ff8232""><span style=""font-size:12px"">" + СтрокаЦен.Статус + "</td></tr>	</tbody></table>";
		
		ИндексСтроки = ИндексСтроки - 1;
	КонецЦикла; 
	СтрокаHTML = СтрокаHTML + "</body></html>";
	ПолеHTML = СтрокаHTML;
КонецПроцедуры

&НаКлиенте
Процедура RUНомерПриИзменении(Элемент)
	УправлениеДиалогомНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЦенаДляДилераПриИзменении(Элемент)
	ОчиститьСообщения();//rarus vikhle 04.12.2020 mt 16923
	ПересчитатьПроцентыИЦены();
	//РассчитатьЦенуБезНДС();//rarus vikhle 17.12.2020 mt 16181
	//rarus vikhle 17.12.2020 mt 16181 +++
	//rarus vikhle 05.10.2020 mt 16181 +++
	//ОбщаяСумма = Объект.КоличествоПродуктов * Объект.ЦенаДляДилера;
	//ОбновитьУсловияОплаты();
	//rarus vikhle 05.10.2020 mt 16181 ---
	//rarus vikhle 17.12.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура ЦенаДляКлиентаПриИзменении(Элемент)
	ОчиститьСообщения();//rarus vikhle 04.12.2020 mt 16923
	ПересчитатьПроцентыИЦены();
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентКомпанияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//rarus vikhle 03.12.2020 mt 16181 +++
	Если Объект.КонечныйКлиент.Пустая() Тогда
		Возврат;
	КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	МассивКомпаний = ПолучитьКомпанииКонтрагента(Объект.КонечныйКлиент);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"Ссылка",
															ВидСравненияКомпоновкиДанных.ВСписке,
															МассивКомпаний,,Истина);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элемент);
	
	//стандартнаяобработка = ложь;
	//КомпанииДляВыбора =  ЗаполнитьКомпании();    
    //ВыбранныйЭлемент = Неопределено;
    
    //ПоказатьВыборИзСписка(Новый ОписаниеОповещения("КонечныйКлиентКомпанияНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент)), КомпанииДляВыбора, Элемент, );
	//rarus vikhle 03.12.2020 mt 16181 ---
	
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентКомпанияНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;  	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		объект.КонечныйКлиентКомпания = ВыбранныйЭлемент.Значение;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЗаполнитьКомпании()
	КомпанииДляВыбора = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Период КАК Период,
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания КАК Компания,
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент КАК Контрагент,
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.ВидВзаимодействия КАК ВидВзаимодействия,
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Пользователь КАК Пользователь,
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.ДокументИзмененияВ1БД КАК ДокументИзмененияВ1БД,
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.РежимУстановкиВидаВзаимодействия КАК РежимУстановкиВидаВзаимодействия
	|ИЗ
	|	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	|ГДЕ
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Объект.КонечныйКлиент);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаВыгрузки Из  Выгрузка Цикл
		КомпанииДляВыбора.Добавить(СтрокаВыгрузки.Компания,СтрокаВыгрузки.Компания);
	КонецЦикла;
	возврат КомпанииДляВыбора;
КонецФункции

&НаСервере
Процедура РассчитатьДлительностьСогласования()
	ДатаПоследнегоЗапроса = Неопределено;
	ДатаПоследнегоСогласования = Неопределено;
	
	Для каждого Строка Из Объект.Цены Цикл
		//Получим крайнюю дату установки статуса запроса
		Если Строка.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Запрос Тогда
			//rarus vikhle 25.01.2021 mt 16929 +++
			Если ДатаПоследнегоЗапроса = Неопределено ИЛИ ДатаПоследнегоЗапроса < Строка.Период Тогда 
				ДатаПоследнегоЗапроса = Строка.Период;	
			КонецЕсли;
			//rarus vikhle 25.01.2021 mt 16929 ---
		КонецЕсли; 	
		//rarus vikhle 25.01.2021 mt 16929 +++
		
		//Получим крайнюю дату установки статуса "Одобрено нет в СОП"
		//Если Строка.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено Тогда
		Если Строка.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП Тогда
			Если ДатаПоследнегоСогласования = Неопределено ИЛИ ДатаПоследнегоСогласования < Строка.Период Тогда
				ДатаПоследнегоСогласования = Строка.Период;	
			КонецЕсли;	
		КонецЕсли;
		//rarus vikhle 25.01.2021 mt 16929 ---
	КонецЦикла; 
	
	Если ДатаПоследнегоЗапроса <> Неопределено Тогда
		// Рассчитаем количество рабочих дней между крайним запросом и одобрением после него 
		Если ДатаПоследнегоСогласования = Неопределено ИЛИ ДатаПоследнегоЗапроса > ДатаПоследнегоСогласования Тогда //rarus vikhle 25.01.2021 mt 16929 добавил сравнение дат
			ДатаПоследнегоСогласования = ТекущаяДатаСеанса();
		КонецЕсли; 
		//rarus ozhnik 15888 04.08.2020 + 
		СтруктураДлительности = РассчитатьРазницуДней(ДатаПоследнегоЗапроса,ДатаПоследнегоСогласования);                         	
		Элементы.ДекорацияВремяСогласования.Заголовок = "Длительность согласования " + СтруктураДлительности.Дни + " д. " + СтруктураДлительности.Часы + " ч.";
		Элементы.ДекорацияВремяСогласования.Видимость = Истина;//rarus vikhle 03.12.2020 mt 16181
	Иначе
		Элементы.ДекорацияВремяСогласования.Видимость = Ложь;
	КонецЕсли;
	//rarus ozhnik 15888 04.08.2020 -
	КонецПроцедуры

&НаСервере
Функция РассчитатьРазницуДней(ДатаПоследнегоЗапроса, ДатаПоследнегоСогласования)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КалендарныеГрафики.ДатаГрафика) КАК КоличествоДней
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|ГДЕ
		|	КалендарныеГрафики.ДатаГрафика > &ДатаНачала И 
		|	КалендарныеГрафики.ДатаГрафика < &ДатаОкончания
		|	И КалендарныеГрафики.ДеньВключенВГрафик = ИСТИНА";
	
	Запрос.УстановитьПараметр("ДатаНачала", КонецДня(ДатаПоследнегоЗапроса));
	Запрос.УстановитьПараметр("ДатаОкончания", НачалоДня(ДатаПоследнегоСогласования));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() ТОгда
		КоличествоДней = ВыборкаДетальныеЗаписи.КоличествоДней;
	КонецЕсли;
	
	Если День(ДатаПоследнегоСогласования) = День(ДатаПоследнегоЗапроса) Тогда //rarus vikhle 03.12.2020 mt 16181
		КоличествоЧасов = (ДатаПоследнегоСогласования - НачалоДня(ДатаПоследнегоСогласования)) - (ДатаПоследнегоЗапроса - НачалоДня(ДатаПоследнегоЗапроса));//rarus vikhle 03.12.2020 mt 16181	
	Иначе	
		КоличествоЧасов = (ДатаПоследнегоСогласования - НачалоДня(ДатаПоследнегоСогласования)) + (КонецДня(ДатаПоследнегоЗапроса) - ДатаПоследнегоЗапроса);
	КонецЕсли;
	
	Если КоличествоЧасов >= 60*60*24 Тогда
		КоличествоДней = КоличествоДней+1;
		КоличествоЧасов = окр(((КоличествоЧасов - 60*60*24) / 3600),0);
	Иначе
		КоличествоЧасов = окр((КоличествоЧасов / 3600),0);
	КонецЕсли; 
	
	СтруктураВремени = Новый Структура;
	СтруктураВремени.Вставить("Часы", КоличествоЧасов);
	СтруктураВремени.Вставить("Дни", КоличествоДней);
	
	возврат СтруктураВремени;
КонецФункции

//rarus ozhnik 16453 07.09.2020 + 
&НаКлиенте
Процедура ЗагрузитьКП(Команда)
	
	//rarus vikhle 03.12.2020 mt 16181 +++
	ОчиститьСообщения();
	Если Объект.Ссылка.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Специальные условия не записаны. Загрузка КП невозможна.'"));
		Возврат;
	КонецЕсли;
	
	Если Объект.УникальностьСпецификации.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнена уникальность спецификации. Загрузка КП невозможна.'"),ЭтотОбъект,"Объект.УникальностьСпецификации");  //rarus vikhle 05.11.2020 mt 16723	
		Возврат;
	КонецЕсли;
	//rarus vikhle 03.12.2020 mt 16181 ---
	
	Если не ЗначениеЗаполнено(Объект.НомерКоммерческогоПредложенияSPORT) Тогда
		ВывестиСообщениеПол(нСтр( "ru = 'Не указан номер коммерческого предложения. Загрузка невозможна.'; en = 'Не указан номер коммерческого предложения. Загрузка невозможна.'"),ЭтотОбъект,"Объект.НомерКоммерческогоПредложенияSPORT");	
		возврат;		
	КонецЕсли; 	
	
	//rarus vikhle 03.12.2020 mt 16181 +++
	ВывестиСообщениеПол(Нстр("ru = 'Начата загрузка КП, она может занять некоторое время, не закрывайте программу'"));
	ПодключитьОбработчикОжидания("ОбработатьОжидание",0.1,Истина);
	//rarus vikhle 03.12.2020 mt 16181 ---
	
	//МассивСсылок = ЗагрузитьКПНаСервере();
	//Если  МассивСсылок <> Неопределено
	//	И ТипЗнч(МассивСсылок) = Тип("Массив")
	//	И МассивСсылок.Количество() <> 0 
	//	Тогда 	 	
	//	ПараметрыОткрытия = Новый Структура;
	//	ПараметрыОткрытия.Вставить("МассивКП",МассивСсылок);
	//	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораКП", ЭтотОбъект);
	//	ОткрытьФорму("Справочник.Scan_КоммерческиеПредложения.Форма.ФормаВыбора",ПараметрыОткрытия,ЭтаФорма,,,,ОписаниеОповещения);
	//Иначе
	//	ВывестиСообщениеПол("Не было загружено коммерческое предложение по данном номеру");
	//КонецЕсли;
	//rarus vikhle 03.12.2020 mt 16181 ---
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьКПНаСервере(НомерКПSPORTДляЗаказаНаЗавод = неопределено)    
	
	МассивСсылок = Новый Массив;
	
	//вызов метода GetListOfQuotation
	ИмяМетода = "GetListOfQuotation";
	СообщениеОбОшибке = "";
	Отказ = Ложь;
	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода);
	СтруктураПараметров.ЛогинПорталаПользователя = Пользователи.ТекущийПользователь().ЛогинНаПортале;
	СтруктураПараметров.QuotationNumber = ?(НомерКПSPORTДляЗаказаНаЗавод <> неопределено, НомерКПSPORTДляЗаказаНаЗавод, Объект.НомерКоммерческогоПредложенияSPORT);
	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
	ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
	Если НЕ Отказ Тогда
		МассивКП = Scan_ВебСервисыРазборОтветов.РазборОтветаСписокКПSPORT(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
	КонецЕсли;
	Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
		ВывестиСообщениеПол(СообщениеОбОшибке);
		возврат неопределено;
	КонецЕсли;
	// Либо Кп не найдено, либо КП найдено одно, либо КП найдено несколько
	Если МассивКп.Количество() = 0 Тогда
		ВывестиСообщениеПол(нстр("ru = 'Коммерческое предложение не найдено'; en = 'Quotation not found'"),ЭтаФорма,"НомерКПSPORT");
	//Rarus bonmak 28.12.2021 18713 ++
	//ИначеЕсли МассивКП.Количество() = 1 Тогда
	ИначеЕсли МассивКП.Количество() > 0 Тогда
		//Rarus bonmak 28.12.2021 18713 --
		// выполнить запрос детальной информации для единичного КП
		Для Каждого СтрМассивКП Из МассивКп Цикл //Rarus bonmak 28.12.2021 18713  добавил цикл
			ИмяМетода = "GetQuotation";
			СообщениеОбОшибке = "";
			Отказ = Ложь;
			СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода);
			СтруктураПараметров.GUID = СтрМассивКП.IDExternalSystem; //Rarus bonmak 28.12.2021 18713 было МассивКп[0].IDExternalSystem;
			ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
			ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
			Если НЕ Отказ Тогда
				СсылкаНаКП = Scan_ВебСервисыРазборОтветов.РазборОтветаКПSPORT(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
				Если СсылкаНаКП <> Неопределено Тогда
					МассивСсылок.Добавить(СсылкаНаКП);
				КонецЕсли;    		
			КонецЕсли;
			Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
				ВывестиСообщениеПол(СообщениеОбОшибке);
			КонецЕсли; 		
		КонецЦикла;
	КонецЕсли; 
	
	Возврат МассивСсылок; //rarus vikhle 13.08.2020 mt 15888 изменения из расширения 
КонецФункции

&НаКлиенте  
Процедура ОбработкаВыбораКП(ВыбранноеЗначение, ИсточникВыбора) экспорт
	Если ВыбранноеЗначение <> Неопределено Тогда
		обработатьВыборКП(ВыбранноеЗначение);
		//rarus vikhle 03.12.2020 mt 16181 +++
		Модифицированность = Истина;
		ВывестиСообщениеПол(Нстр("ru = 'Коммерческое предложение загружено.'"));
		//rarus vikhle 03.12.2020 mt 16181 ---
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура обработатьВыборКП(ВыбранноеЗначение)
	Если выбранноеЗначение <> неопределено Тогда
		СтруктураВыбора = ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
		Объект.КоммерческоеПредложениеSPORT = СтруктураВыбора.Ссылка;
		Объект.IDПродуктаКП = СтруктураВыбора.IDПродуктаКП;
		Объект.НомерКоммерческогоПредложенияSPORT = СтруктураВыбора.Ссылка.НомерКП;
		
		//rarus ozhnik 15888 30.06.2020 запросить спецификацию + 
		Если РезультатВыполнения <> Неопределено
			И ЗначениеЗаполнено(РезультатВыполнения.ИдентификаторЗадания) Тогда
			ДлительныеОперации.ОтменитьВыполнениеЗадания(РезультатВыполнения.ИдентификаторЗадания);
		КонецЕсли;
		
		ПараметрыДлительнойОперации = ПараметрыДлительнойОперации();
		
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
		ПараметрыВыполнения.ОжидатьЗавершение = 0; // запускать сразу
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'ЗагрузкаСпецификации'");
		
		РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне("Scan_ВебСервисы.ЗагрузкаСпецификацииSPORTФоновое",	ПараметрыДлительнойОперации, ПараметрыВыполнения);
		//rarus ozhnik 15888 30.06.2020 -
		//rarus ozhnik 16453 14.09.2020 + 
		Если  Объект.СписокПродуктов.Количество()=0 ТОгда 
			Для каждого СтрокаИзделияКп Из Объект.КоммерческоеПредложениеSPORT.ИзделияПоПродуктам Цикл
				Если  (не СтрокаИзделияКп.Изделие.Пустая()) и СтрокаИзделияКп.IDПродуктаКП = Объект.IDПродуктаКП Тогда
					НоваяСтрока = Объект.СписокПродуктов.Добавить();
					НоваяСтрока.Продукт = СтрокаИзделияКп.Изделие;
				КонецЕсли; 		
			КонецЦикла; 
		КонецЕсли;
		//rarus ozhnik 16453 14.09.2020 -
	КонецЕсли; 		
КонецПроцедуры

&НаСервере
Функция ПараметрыДлительнойОперации()
	
	ПараметрыДлительнойОперации = Новый Структура;
	ПараметрыДлительнойОперации.Вставить("КоммерческоеПредложениеSPORT",Объект.КоммерческоеПредложениеSPORT);
	ПараметрыДлительнойОперации.Вставить("IDПродуктаКП", Объект.IDПродуктаКП);
	ПараметрыДлительнойОперации.Вставить("ЛогинНаПортале",Пользователи.ТекущийПользователь().ЛогинНаПортале);
	ПараметрыДлительнойОперации.Вставить("ОбщаяСпецификация", НайтиСоздатьСпецификациюКП());
	ПараметрыДлительнойОперации.Вставить("ИсходныйОбъект", Объект.Ссылка);
	ЗаполнитьЗначенияСвойств(ПараметрыДлительнойОперации, ЭтотОбъект);
		
	Возврат ПараметрыДлительнойОперации;
	
КонецФункции

Функция НайтиСоздатьСпецификациюКП()
	
	СпецификацияСсылка = неопределено;
	Для каждого СтрокаПродукта Из Объект.КоммерческоеПредложениеSPORT.ПродуктыКП Цикл
		Если СтрокаПродукта.IDПродуктаКП = Объект.IDПродуктаКП Тогда
			Если ЗначениеЗаполнено(СтрокаПродукта.Спецификация) Тогда
				СпецификацияСсылка = СтрокаПродукта.Спецификация;
				//rarus bonmak 26.02.2021 17291 ++
				//В случае если продукт ранее был выбран для заявки Std и была создана спецификация (пустая), заявка отменилась
				//Потом этот продукт оказался в заявке UO/UUO, дозаполняем спецификацию данными
				Если НЕ ЗначениеЗаполнено(СпецификацияСсылка.НомерКПSPORT)
					ИЛИ НЕ ЗначениеЗаполнено(СпецификацияСсылка.ПродуктКП) Тогда
					СпецификацияОбъект = СпецификацияСсылка.ПолучитьОбъект();
					СпецификацияОбъект.МодельПродукта = Объект.Модель;
					СпецификацияОбъект.НомерКПSPORT = Объект.НомерКоммерческогоПредложенияSPORT;
					СпецификацияОбъект.ОписаниеПродукта = Объект.КоммерческоеПредложениеSPORT.Описание;
					СпецификацияОбъект.ПродуктКП = Объект.IDПродуктаКП;
					СпецификацияОбъект.Записать();
					
					СпецификацияСсылка = СпецификацияОбъект.Ссылка;
				КонецЕсли;
				//rarus bonmak 26.02.2021 17291 --
			Иначе
				СпецификацияОбъект = Справочники.Scan_СпецификацииПродуктов.СоздатьЭлемент();
				СпецификацияОбъект.Наименование = Объект.Код + " " + Объект.Модель;
				СпецификацияОбъект.МодельПродукта = Объект.Модель;
				СпецификацияОбъект.НомерКПSPORT = Объект.НомерКоммерческогоПредложенияSPORT;
				СпецификацияОбъект.ОписаниеПродукта = Объект.КоммерческоеПредложениеSPORT.Описание;
				СпецификацияОбъект.ПродуктКП = Объект.IDПродуктаКП;
				СпецификацияОбъект.Записать();
				
				Попытка
					ОбъектКП = Объект.КоммерческоеПредложениеSPORT.ПолучитьОбъект();
					Для каждого СтрокаПродуктаОбъект Из ОбъектКП.ПродуктыКП Цикл;
						Если СтрокаПродуктаОбъект.IDПродуктаКП = Объект.IDПродуктаКП Тогда
							СтрокаПродуктаОбъект.Спецификация = СпецификацияОбъект.Ссылка;	
						КонецЕсли;
					КонецЦикла;
					ОбъектКП.Записать();
					СпецификацияСсылка = СпецификацияОбъект.Ссылка;
				Исключение
					//ОписаниеОшибки()
				КонецПопытки;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	
	возврат СпецификацияСсылка;
	
КонецФункции

//rarus ozhnik 16453 07.09.2020 -

//rarus vikhle 04.08.2020 mt 16181 +++
&НаКлиенте
Процедура РассчитатьЦенуБезНДС(ТипБазовойЦены = Неопределено)
	Если ЗначениеЗаполнено(Объект.СтавкаНДС) Тогда
		//rarus vikhle 17.12.2020 mt 16181 +++
		ЗначениеСтавкиНДС =  Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтавкаНДС,"Ставка");
		Если ТипБазовойЦены = "ЦенаДляДилера" Тогда
			Объект.ЦенаБезНДС			= 100 * Объект.СпецDealerNet/ (100 + ЗначениеСтавкиНДС);
		ИначеЕсли ТипБазовойЦены = "ЦенаДляКлиента" Тогда
			Объект.ЦенаДляКлиентаБезНДС	= 100 * Объект.СпецCustomerPrice/ (100 + ЗначениеСтавкиНДС);	
		ИначеЕсли ТипБазовойЦены = Неопределено Тогда
			Объект.ЦенаБезНДС			= 100 * Объект.СпецDealerNet / (100 + ЗначениеСтавкиНДС);
			Объект.ЦенаДляКлиентаБезНДС	= 100 * Объект.СпецCustomerPrice/ (100 + ЗначениеСтавкиНДС);
		КонецЕсли;	
		//rarus vikhle 17.12.2020 mt 16181 ---
	Иначе
		Объект.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.БезНДС");
		//rarus vikhle 17.12.2020 mt 16181 +++
		Если ТипБазовойЦены = "ЦенаДляДилера" Тогда
			Объект.ЦенаБезНДС = Объект.СпецDealerNet;
		ИначеЕсли ТипБазовойЦены = "ЦенаДляКлиента" Тогда
			Объект.ЦенаДляКлиентаБезНДС = Объект.СпецCustomerPrice;	
		ИначеЕсли ТипБазовойЦены = Неопределено Тогда
			Объект.ЦенаБезНДС = Объект.СпецDealerNet;
			Объект.ЦенаДляКлиентаБезНДС = Объект.СпецCustomerPrice;
		КонецЕсли;
		//rarus vikhle 17.12.2020 mt 16181 ---
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыДатаНачалаОтсчетаАвансаПриИзменении(Элемент)
	//РассчитатьКрайнююДатуОплаты(); //rarus vikhle 01.10.2020 mt 16181 +++
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыСрокОплатыАвансаПриИзменении(Элемент)
	РассчитатьКрайнююДатуОплаты();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьКрайнююДатуОплаты()
	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
	//Если ЗначениеЗаполнено(ТекущиеДанные.ДатаНачалаОтсчетаАванса) Тогда
		//ТекущиеДанные.КрайняяДатаОплаты = ТекущиеДанные.ДатаНачалаОтсчетаАванса + ТекущиеДанные.СрокОплатыАванса * 60*60*24;
	//Иначе
	//	ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата");
		Элемент.ТекущиеДанные.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора"); //rarus vikhle 05.10.2020 mt 16181
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовДокументУстановкиПлановыхЦенОткрытие(Элемент, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДокументУстановкиПлановыхЦен) Тогда 
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.ДокументУстановкиПлановыхЦен);
		ОткрытьФорму("Документ.Scan_УстановкаПлановыхЦенПродукта.Форма.ФормаОтображения",
					ПараметрыОткрытия,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовДокументУстановкиПлановыхЦенНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	РассчитатьЦенуБезНДС();
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДокументУстановкиПлановыхЦен) 
		И Элемент.ТекущийЭлемент = Элементы.СписокПродуктовДокументУстановкиПлановыхЦен
		И Элемент.ТолькоПросмотр = Истина Тогда 
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.ДокументУстановкиПлановыхЦен);
		ОткрытьФорму("Документ.Scan_УстановкаПлановыхЦенПродукта.Форма.ФормаОтображения",
					ПараметрыОткрытия,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры
//rarus vikhle 04.08.2020 mt 16181 ---

//rarus ozhnik 16453 08.09.2020 + 

&НаСервере
Функция НайтиСпецификациюСУ()
	ЗаголовокНадписи = "";
	Для каждого СтрокаПродукта Из Объект.КоммерческоеПредложениеSPORT.ПродуктыКП Цикл
		Если СтрокаПродукта.IDПродуктаКП = Объект.IDПродуктаКП Тогда
			СпецификацияСУ = СтрокаПродукта.Спецификация;
			ЗаголовокНадписи = "Спецификация соглашения";
		КонецЕсли; 	
	КонецЦикла;
	возврат заголовокНадписи;
КонецФункции

&НаКлиенте
Процедура ДекорацияСпецификацияНажатие(Элемент)
	ПараметрыФормы = Новый Структура("Ключ", СпецификацияСУ);
	ОткрытьФорму("Справочник.Scan_СпецификацииПродуктов.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыВидОплатыПриИзменении(Элемент)
	//rarus vikhle 05.10.2020 mt 16181 +++
	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
	Если ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата") Тогда 
		ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
		СтрокиПостоплаты =  Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
		Если СтрокиПостоплаты.Количество() > 1 Тогда
			ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата");
			ТекущиеДанные.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора");
			ОчиститьСообщения();
			ВывестиСообщениеПол("В таблице уже есть строка с постоплатой.");
		Иначе
			ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата"));
			МассивСтрокПредоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
			ОбщаяСуммаПредоплаты = 0;
			ОбщийПроцентПредоплаты = 0;
			Для Каждого ЭлементМассива Из МассивСтрокПредоплаты Цикл
				ОбщаяСуммаПредоплаты = ОбщаяСуммаПредоплаты + ЭлементМассива.Сумма;
				ОбщийПроцентПредоплаты = ОбщийПроцентПредоплаты + ЭлементМассива.ПроцентОплаты;  
			КонецЦикла;	
			ТекущиеДанные.Сумма = ОбщаяСумма - ОбщаяСуммаПредоплаты;
			ТекущиеДанные.ПроцентОплаты = 100 - ОбщийПроцентПредоплаты;
			//rarus bonmak 13.01.2021 17041 ++
			ТекущиеДанные.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
			ТекущиеДанные.СрокОплатыАванса	= 30;
			ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1);
			//rarus bonmak 13.01.2021 17041 --
		КонецЕсли;
	КонецЕсли;	
	//rarus vikhle 05.10.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПродуктовПриИзменении(Элемент)
	//rarus vikhle 05.10.2020 mt 16181 +++
	ОбщаяСумма = Объект.КоличествоПродуктов * Объект.СпецDealerNet;//rarus vikhle 17.12.2020 изменил на согласованную	
	ОбновитьУсловияОплаты();
	//rarus vikhle 05.10.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыПроцентОплатыПриИзменении(Элемент)
	//rarus vikhle 12.10.2020 mt 16181 +++
	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
	
	ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
	СтрокаПредоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
	Если СтрокаПредоплаты.Количество() = 0 Тогда
		ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты");
		Если ОбщийПроцент  > 100 Тогда
			Сообщить("Общий процент превышает 100");
			ТекущиеДанные.ПроцентОплаты = 0;
			ТекущиеДанные.Сумма = 0;
		КонецЕсли;	
	Иначе
		ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты");
		Если ОбщийПроцент > 100 Тогда
			ДоляПредоплаты = СтрокаПредоплаты[0].ПроцентОплаты - (ОбщийПроцент - 100);
			Если ДоляПредоплаты < 0 Тогда 
				Сообщить("Общий процент превышает 100");
				ТекущиеДанные.ПроцентОплаты = 0;
				ТекущиеДанные.Сумма = 0;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	Если НЕ ТекущиеДанные.ПроцентОплаты = 0 И НЕ ОбщаяСумма = 0 Тогда
		ТекущиеДанные.Сумма = ТекущиеДанные.ПроцентОплаты / 100 * ОбщаяСумма;
	Иначе
		ТекущиеДанные.Сумма = 0;	
	КонецЕсли;
	ОбновитьСтрокуПостоплаты();
	//rarus vikhle 12.10.2020 mt 16181 ---
	
	//rarus vikhle 05.10.2020 mt 16181 +++
	//ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
	//Если НЕ ТекущиеДанные.ПроцентОплаты = 0 Тогда
	//	ТекущиеДанные.Сумма = ТекущиеДанные.ПроцентОплаты / 100 * ОбщаяСумма;
	//Иначе
	//	ТекущиеДанные.Сумма = 0;	
	//КонецЕсли;	
	//rarus vikhle 05.10.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыСуммаПриИзменении(Элемент)
	//rarus vikhle 12.10.2020 mt 16181 +++
	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
	Если ТекущиеДанные.Сумма > ОбщаяСумма  Тогда
		ТекущиеДанные.Сумма = 0;
		ТекущиеДанные.ПроцентОплаты = 0;
		ОбновитьСтрокуПостоплаты();
		Сообщить("Общий процент превышает 100");
	ИначеЕсли ТекущиеДанные.Сумма = 0 Тогда
		ТекущиеДанные.ПроцентОплаты = 0;	
	Иначе
		Если НЕ ОбщаяСумма = 0 Тогда
			ТекущиеДанные.ПроцентОплаты =  ТекущиеДанные.Сумма / ОбщаяСумма * 100;
						
			ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
			СтрокаПредоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
			Если СтрокаПредоплаты.Количество() = 0 Тогда
				ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты");
				Если ОбщийПроцент  > 100 Тогда
					Сообщить("Общий процент превышает 100");
					ТекущиеДанные.ПроцентОплаты = 0;
					ТекущиеДанные.Сумма = 0;
				КонецЕсли;	
			Иначе
				ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты");
				Если ОбщийПроцент > 100 Тогда
					ДоляПредоплаты = СтрокаПредоплаты[0].ПроцентОплаты - (ОбщийПроцент - 100);
					Если ДоляПредоплаты < 0 Тогда 
						Сообщить("Общий процент превышает 100");
						ТекущиеДанные.ПроцентОплаты = 0;
						ТекущиеДанные.Сумма = 0;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
	ОбновитьСтрокуПостоплаты();
	//rarus vikhle 12.10.2020 mt 16181 ---
	
	//rarus vikhle 05.10.2020 mt 16181 +++
	//ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
	//Если НЕ ТекущиеДанные.Сумма = 0 Тогда
	//	Если НЕ ОбщаяСумма = 0 Тогда
	//		ТекущиеДанные.ПроцентОплаты = ТекущиеДанные.Сумма / ОбщаяСумма * 100;
	//	КонецЕсли;	
	//Иначе
	//	ТекущиеДанные.ПроцентОплаты = 0;	
	//КонецЕсли;	
	//rarus vikhle 05.10.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыПриАктивизацииЯчейки(Элемент)
	//rarus vikhle 18.12.2020 mt 16181 +++ перенес в УО
	//rarus vikhle 05.10.2020 mt 16181 +++
	//Если  Элемент.ТекущийЭлемент = Элементы.УсловияОплатыКрайняяДатаОплаты Тогда
	//	ТекущиеДанные = Элемент.ТекущиеДанные;
	//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS")
	//		ИЛИ ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS")
	//		ИЛИ ТекущиеДанные.РасчетДатыОплаты.Пустая() Тогда
	//		Элементы.УсловияОплатыКрайняяДатаОплаты.ТолькоПросмотр = Истина;
	//	Иначе
	//		Элементы.УсловияОплатыКрайняяДатаОплаты.ТолькоПросмотр = Ложь;	
	//	КонецЕсли;
	//КонецЕсли;	
	//rarus vikhle 05.10.2020 mt 16181 ---
	//rarus vikhle 18.12.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьУсловияОплаты()
	//rarus vikhle 05.10.2020 mt 16181 +++
	Для Каждого СтрокаТаблицы Из Объект.УсловияОплаты Цикл
		СтрокаТаблицы.Сумма = СтрокаТаблицы.ПроцентОплаты / 100 * ОбщаяСумма; 
	КонецЦикла;
	//rarus vikhle 05.10.2020 mt 16181 ---
КонецПроцедуры	

&НаКлиенте
Процедура СписокПродуктовПослеУдаления(Элемент)
	//rarus vikhle 05.10.2020 mt 16181 +++
	//Объект.КоличествоПродуктов = Объект.СписокПродуктов.Количество();//rarus vikhle 08.06.2021 mt 17637 //rarus vikhle 27.07.2021 17637 Закомментировал
	ОбщаяСумма = Объект.КоличествоПродуктов * Объект.СпецDealerNet;//rarus vikhle 17.12.2020 изменил на согласованную

	ОбновитьУсловияОплаты();
	//rarus vikhle 05.10.2020 mt 16181 ---
	
	// rarus tenkam 19.01.2021 mantis 16345 +++
	Объект.КоличествоПрикрепленныхШасси = Объект.СписокПродуктов.Количество(); 
	Если Объект.КоличествоПрикрепленныхШасси <> 0 Тогда
		Элементы.ГруппаПродукты.Заголовок = "Продукты (" + Объект.КоличествоПрикрепленныхШасси + ")";
	Иначе
		Элементы.ГруппаПродукты.Заголовок = "Продукты";		
	КонецЕсли;	
	// rarus tenkam 19.01.2021 mantis 16345 ---
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтрокуПостоплаты()
	//rarus vikhle 09.10.2020 mt 16181 +++
	ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
	СтрокаПредоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
	Если СтрокаПредоплаты.Количество() = 0 Тогда
		Возврат;
	Иначе
		ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата"));
		МассивСтрокПредоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
		ОбщаяСуммаПредоплаты = 0;
		ОбщийПроцентПредоплаты = 0;
		Для Каждого ЭлементМассива Из МассивСтрокПредоплаты Цикл
			ОбщаяСуммаПредоплаты = ОбщаяСуммаПредоплаты + ЭлементМассива.Сумма;
			ОбщийПроцентПредоплаты = ОбщийПроцентПредоплаты + ЭлементМассива.ПроцентОплаты;  
		КонецЦикла;	
		СтрокаПредоплаты[0].Сумма = ОбщаяСумма - ОбщаяСуммаПредоплаты;
		СтрокаПредоплаты[0].ПроцентОплаты = 100 - ОбщийПроцентПредоплаты;
	КонецЕсли;	
		
	//rarus vikhle 09.10.2020 mt 16181 ---	
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//rarus vikhle 02.12.2020 mt 16181 +++
	СтандартнаяОбработка = Ложь;
	
	ЗначениеОтбора = Новый Структура("ПометкаУдаления", ложь);
	ЗначениеОтбора.Вставить("Статус", ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе"));
	Если НЕ Объект.Модель.Пустая() Тогда //rarus vikhle 03.12.2020 mt 16181
		ЗначениеОтбора.Вставить("Модель",Объект.Модель);	
	КонецЕсли;	
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	ОткрытьФорму("Документ.Scan_СпецификацияСтандартнойМодели.ФормаВыбора", 
					ПараметрыФормы,
					Элементы.СтандартнаяСпецификация,,,,,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//rarus vikhle 02.12.2020 mt 16181 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяСпецификацияПриИзменении(Элемент)
	
	//rarus vikhle 03.12.2020 mt 16181 +++
	Если НЕ Объект.СтандартнаяСпецификация.Пустая() Тогда
		Объект.SORDER = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"SOrder");
		Объект.FFU 	  = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"FFU");
		Объект.Модель = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"Модель"); 
		//Элементы.Модель.ТолькоПросмотр = Истина;
	Иначе
	 	Объект.SORDER = ПредопределенноеЗначение("Справочник.Scan_ОпцииПродуктов.Нет_SOrder");
		Объект.FFU 	  = ПредопределенноеЗначение("Справочник.Scan_ОпцииПродуктов.Нет_FFU");
		//Элементы.Модель.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Если Объект.SORDER.Пустая() Тогда
		Объект.SORDER = ПредопределенноеЗначение("Справочник.Scan_ОпцииПродуктов.Нет_SOrder");	
	КонецЕсли;	
	Если Объект.FFU.Пустая() Тогда
		Объект.FFU 	  = ПредопределенноеЗначение("Справочник.Scan_ОпцииПродуктов.Нет_FFU");	
	КонецЕсли;
	//rarus vikhle 03.12.2020 mt 16181 ---
	
КонецПроцедуры

//rarus vikhle 03.12.2020 mt 16181 +++
&НаКлиенте
Процедура ОбработатьОжидание()
	
	МассивСсылок = ЗагрузитьКПНаСервере();
	Если  МассивСсылок <> Неопределено
		И ТипЗнч(МассивСсылок) = Тип("Массив")
		И МассивСсылок.Количество() <> 0 
		Тогда 	 	
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("МассивКП",МассивСсылок);
		ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе",Ложь);//rarus vikhle 09.03.2021 mt 17386
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораКП", ЭтотОбъект);
		ОткрытьФорму("Справочник.Scan_КоммерческиеПредложения.Форма.ФормаЗагрузки", //rarus vikhle 10.11.2021 m 18471 заменил имя формы
					ПараметрыОткрытия,
					ЭтаФорма,,,,
					ОписаниеОповещения);
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'Не было загружено коммерческое предложение по данном номеру КП.'"));
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура КонечныйКлиентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//rarus vikhle 03.12.2020 mt 16181 +++
	
	//rarus vikhle 22.12.2020 mt 16997 +++
	//Если Объект.КонечныйКлиентКомпания.Пустая() Тогда
	//	Возврат;
	//КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок",Истина);
	Если НЕ Объект.КонечныйКлиентКомпания.Пустая() Тогда
		ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
		МассивКомпаний = ПолучитьКонтрагентовКомпании(Объект.КонечныйКлиентКомпания);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
																"Ссылка",
																ВидСравненияКомпоновкиДанных.ВСписке,
																МассивКомпаний,,Истина);
		ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);															
	КонецЕсли;
	ОткрытьФорму("Справочник.Scan_Контрагенты.ФормаВыбора", ПараметрыФормы, Элемент);
	//rarus vikhle 22.12.2020 mt 16997 ---
	
	//стандартнаяобработка = ложь;
	//КомпанииДляВыбора =  ЗаполнитьКомпании();    
    //ВыбранныйЭлемент = Неопределено;
    
    //ПоказатьВыборИзСписка(Новый ОписаниеОповещения("КонечныйКлиентКомпанияНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент)), КомпанииДляВыбора, Элемент, );
	//rarus vikhle 03.12.2020 mt 16181 ---
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКомпанииКонтрагента(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания КАК Компания
	               |ИЗ
	               |	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	               |ГДЕ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	РезультатЗапроса = Запрос.Выполнить();
	КомпанииКонтрагента = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Компания");
	
	Возврат КомпанииКонтрагента;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонтрагентовКомпании(Компания)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент КАК Контрагент
	               |ИЗ
	               |	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	               |ГДЕ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания = &Компания";
	Запрос.УстановитьПараметр("Компания",Компания);
	РезультатЗапроса = Запрос.Выполнить();
	КонтрагентыКомпании = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Контрагент");
	
	Возврат КонтрагентыКомпании;
	
КонецФункции

&НаКлиенте
Процедура КонечныйКлиентКомпанияПриИзменении(Элемент)
		
	КонтрагентыКомпании = ПолучитьКонтрагентовКомпании(Объект.КонечныйКлиентКомпания);
	Если КонтрагентыКомпании.Количество() = 1 Тогда
		Объект.КонечныйКлиент = КонтрагентыКомпании[0];
	ИначеЕсли КонтрагентыКомпании.Найти(Объект.КонечныйКлиент) = Неопределено  Тогда //rarus vikhle 23.12.2020 mt 16997
		Объект.КонечныйКлиент = Неопределено;
	КонецЕсли;
	СформироватьНаименование();
	
КонецПроцедуры
//rarus vikhle 03.12.2020 mt 16181 ---

//rarus vikhle 18.12.2020 mt 16181 +++
&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();
	
	//Условия оплаты
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УсловияОплатыКрайняяДатаОплаты.Имя);
	
	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УсловияОплаты.РасчетДатыОплаты");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УсловияОплаты.РасчетДатыОплаты");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS");
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УсловияОплаты.РасчетДатыОплаты");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// rarus tenkam 19.01.2021 mantis 16345 +++
	Если Объект.КоличествоПрикрепленныхШасси <> 0 Тогда
		Элементы.ГруппаПродукты.Заголовок = "Продукты (" + Объект.КоличествоПрикрепленныхШасси + ")";
	Иначе
		Элементы.ГруппаПродукты.Заголовок = "Продукты";		
	КонецЕсли;	
	// rarus tenkam 19.01.2021 mantis 16345 ---
	
	//rarus vikhle 27.07.2021 17637 Раскомментировал +++
	//rarus vikhle 18.06.2021 mt 17637 +++
	// Таблица фактическое применение
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ФактическоеПрименение.Имя);
	
	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ФактическоеПрименение.ТипПродукта");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Строка(Тип("СправочникСсылка.Scan_ДрафтыПродуктов"));
		
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоСерый);
	//rarus vikhle 18.06.2021 mt 17637 ---
	//rarus vikhle 27.07.2021 17637 ---
	
КонецПроцедуры	
//rarus vikhle 18.12.2020 mt 16181 ---

//rarus agar 09.03.2021 17372 ++
&НаСервереБезКонтекста
Функция ПолучитьКомпанииПользователя()
	
	КомпанииСКонтрагентами = РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПараметрыСеанса.ТекущийПользователь);
	КомпанииПользователя   = КомпанииСКонтрагентами.ВыгрузитьКолонку("Компания");
	
	Возврат КомпанииПользователя;
	
КонецФункции

&НаКлиенте
Процедура ДилерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок", Истина);
	
	МассивКомпаний = ПолучитьКомпанииПользователя();
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор, "Ссылка", ВидСравненияКомпоновкиДанных.ВСписке, МассивКомпаний,,Истина);
	ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораДилера", ЭтотОбъект);//rarus vikhle 17.09.2021 mt 18288
	
	ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элемент); //,,,, ОписаниеОповещения); //rarus vikhle 17.09.2021 mt 18288
	
КонецПроцедуры

//rarus vikhle 17.09.2021 mt 18288 закомментировал +++
//&НаКлиенте
//Процедура ПослеВыбораДилера(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
//	
//	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
//		Объект.Дилер = РезультатЗакрытия;
//		ПриИзмененииДилераНаСервере();
//	КонецЕсли;
//	
//КонецПроцедуры
//rarus vikhle 17.09.2021 mt 18288 ---

&НаКлиенте
Процедура ДилерПриИзменении(Элемент)
	
	Если Не Объект.Дилер.Пустая() Тогда
		МассивКомпаний = ПолучитьКомпанииПользователя();
		Если МассивКомпаний.Найти(Объект.Дилер) = Неопределено Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Дилер ""%1"" недоступен для выбора!'"), ЭтотОбъект,,,, Объект.Дилер);
			//rarus vikhle 17.09.2021 mt 18288 +++
			//Объект.Дилер = Неопределено;
			Объект.Дилер = ПредыдущееЗначениеДилера;
			//rarus vikhle 17.09.2021 mt 18288 ---
			Возврат;
		КонецЕсли;
		
		//rarus vikhle 16.09.2021 mt 18288 +++
		Если Scan_ВспомогательныеФункцииСервер.ИзменилсяВидДилера(ПредыдущееЗначениеДилера, Объект.Дилер) Тогда		
			ВидДилера = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер, "ВидДилера");
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеИзмененияВидаДилера", ЭтотОбъект);
			Принадлежность = ?(ВидДилера = ПредопределенноеЗначение("Перечисление.Scan_ВидыДилеров.Собственный"), Нстр("ru = 'ОСП'"), Нстр("ru = 'независимых дилеров'")); //rarus vikhle 27.09.2021 АПК
			ТекстВопроса = СтрШаблон(Нстр("ru = 'Перезаполнить табличную часть «Условия оплаты» по умолчанию для %1 для %2?'"),
									Объект.УникальностьСпецификации,
									Принадлежность); 
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;	
		//rarus vikhle 16.09.2021 mt 18288 ---
	Иначе
		ПредыдущееЗначениеДилера = ПредопределенноеЗначение("Справочник.Scan_Компании.ПустаяСсылка"); //rarus vikhle 17.09.2021 mt 18288
	КонецЕсли;
		
	СформироватьНаименование();//rarus vikhle 16.06.2021 mt 17637
	ПриИзмененииДилераНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДилераНаСервере()
	
	//СформироватьНаименование();//rarus vikhle 16.06.2021 mt 17637
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если Объект.Дилер.Пустая() Тогда
		Объект.ПродавецДилера = Неопределено;
	ИначеЕсли Объект.ПродавецДилера.Пустая() Тогда
		Объект.ПродавецДилера = ТекущийПользователь.КонтактноеЛицоКомпании;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродавецДилераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок", Истина);
	
	МассивКомпаний = ПолучитьКомпанииПользователя();
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор, "Владелец", ВидСравненияКомпоновкиДанных.ВСписке, МассивКомпаний,,Истина);
	ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	ПараметрыФормы.Вставить("ОтображатьВсеКонтактныеЛица", Ложь);
	
	ОткрытьФорму("Справочник.Scan_КонтактныеЛица.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры
//rarus agar 09.03.2021 17372 --

//rarus vikhle 06.04.2021 mt 17484 +++
&НаКлиенте
Процедура ДилерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПредыдущееЗначениеДилера = Объект.Дилер; //rarus vikhle 17.09.2021 mt 18288	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДилерОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение); //rarus vikhle 15.04.2021 mt 17484
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка,Ложь);
	
	//rarus vikhle 17.09.2021 mt 18288 +++
	// Для случая, когда установлено право 30057 "Запрет работы с неактивными дилерами"
	// возвращаем предыдущее непустое значение дилера (чтобы не отображалась пустая ссылка в истории выбора).
	Если ВыбранноеЗначение = Неопределено И НЕ ПредыдущееЗначениеДилера.Пустая() Тогда
		ВыбранноеЗначение = ПредыдущееЗначениеДилера;
	КонецЕсли;
	//rarus vikhle 17.09.2021 mt 18288 ---
	
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентКомпанияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КонечныйКлиентКомпанияОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение); //rarus vikhle 15.04.2021 mt 17484
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка);
	
КонецПроцедуры
//rarus vikhle 06.04.2021 mt 17484 ---

//rarus vikhle 15.04.2021 mt 17484 +++
&НаКлиенте
Процедура ДилерОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Дилер = ВыбраннаяКомпания;
	Иначе
		//rarus vikhle 17.09.2021 mt 18288 +++
		//Объект.Дилер = Неопределено;	
		Объект.Дилер = ПредыдущееЗначениеДилера;
		//rarus vikhle 17.09.2021 mt 18288 ---
	КонецЕсли;
	
	ДилерПриИзменении(Элементы.Дилер);
	
КонецПроцедуры
 
 &НаКлиенте
Процедура КонечныйКлиентКомпанияОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.КонечныйКлиентКомпания = ВыбраннаяКомпания;
	Иначе
		Объект.КонечныйКлиентКомпания = Неопределено;	
	КонецЕсли;
	
	КонечныйКлиентКомпанияПриИзменении(Элементы.КонечныйКлиентКомпания);
	
КонецПроцедуры
//rarus vikhle 15.04.2021 mt 17484 ---

//rarus vikhle 08.06.2021 mt 17637 +++

//rarus vikhle 27.07.2021 17637 +++ Раскомментировал
&НаКлиенте
Процедура ПослеСменыТипаСпецификации(Результат,ДопПараметры) Экспорт
	
	//rarus vikhle 11.06.2021 mt 17637 +++
	ЗаполнитьУсловияСУ = Результат = КодВозвратаДиалога.Да;
	ЗаполнитьСтандартныеУсловияОплаты(ЗаполнитьУсловияСУ);
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
	//rarus vikhle 11.06.2021 mt 17637 ---	
	//rarus vikhle 06.07.2021 17637 ---
КонецПроцедуры
//rarus vikhle 27.07.2021 17637 ---

//rarus vikhle 27.07.2021 17637 Раскомментировал +++
&НаСервере
Процедура ЗаполнитьСтандартныеУсловияОплаты(ЗаполнитьУсловияСУ)
	//rarus vikhle 11.06.2021 mt 17637 +++
	
	//rarus vikhle 16.09.2021 mt 18288 +++
	//Право = ?(Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std, 
	//		"ШаблонСтандартныхУсловийОплатыДляSTD", 
	//		"ШаблонСтандартныхУсловийОплатыДляUOUUO");
	ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер, "ВидДилера");
	
	Если Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
		И (ВидДилера = Перечисления.Scan_ВидыДилеров.Независимый 
		ИЛИ НЕ ЗначениеЗаполнено(ВидДилера)) Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляSTDДляНезависимыхДилеров";
	ИначеЕсли (Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UO
		ИЛИ Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UUO) 
		И (ВидДилера = Перечисления.Scan_ВидыДилеров.Независимый 
		ИЛИ НЕ ЗначениеЗаполнено(ВидДилера)) Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляUOUUOДляНезависимыхДилеров";
	ИначеЕсли Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
		И ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляSTDДляОСП";
	ИначеЕсли (Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UO
		ИЛИ Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UUO) 
		И ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляUOUUOДляОСП";
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" не загружены стандартные условия оплаты, т.к. не удалось определить настройку с шаблоном условий оплаты.'"));
		Возврат;
	КонецЕсли;
	//rarus vikhle 16.09.2021 mt 18288 ---
	
	ШаблонУсловийОплаты = Scan_ПраваИНастройки.Scan_Право(Право);
	Если ЗначениеЗаполнено(ШаблонУсловийОплаты) Тогда
		УсловияОплатыШаблона = ШаблонУсловийОплаты.УсловияОплаты.Выгрузить();
		СтандартныеУсловияОплаты.Загрузить(УсловияОплатыШаблона);
		Если ЗаполнитьУсловияСУ Тогда
			Объект.УсловияОплаты.Загрузить(УсловияОплатыШаблона);
			//rarus vikhle 16.09.2021 mt 18288 +++
			ПринадлежностьНастройки = ?(ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный, Нстр("ru = 'ОСП'"), Нстр("ru = 'независимых дилеров'")); //rarus vikhle 27.09.2021 АПК			
			//ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" загружены стандартные условия оплаты для %1'"),,,,,Объект.УникальностьСпецификации);	
			ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" загружены стандартные условия оплаты для %1 для %2'"),,,,,
								Объект.УникальностьСпецификации, ПринадлежностьНастройки);
			//rarus vikhle 16.09.2021 mt 18288 ---
		КонецЕсли;	
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'Не указан шаблон стандартных условий оплаты'"));
	КонецЕсли;	
	//rarus vikhle 11.06.2021 mt 17637 ---
		
КонецПроцедуры
//rarus vikhle 27.07.2021 17637 ---

//rarus vikhle 27.07.2021 17637 Раскомментировал +++
&НаСервере
Процедура ЗаполнитьПрименение();//rarus vikhle 08.06.2021 mt 17637
	
	НеактуальныеСтатусы = Новый Массив;
	НеактуальныеСтатусы.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	НеактуальныеСтатусы.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	НеактуальныеСтатусы.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	НеактуальныеСтатусы.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт КАК Продукт,
	               |	ВЫРАЗИТЬ(Scan_ИспользованиеСпециальныхУсловий.Ссылка КАК Справочник.Scan_СоглашенияОПоставке) КАК Заявка,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт.НомерИзделия КАК НомерПродукта,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(Scan_СоглашенияОПоставкеСписокПродуктов.Продукт) = ТИП(Справочник.Scan_Изделия)
	               |			ТОГДА Scan_СоглашенияОПоставкеСписокПродуктов.Продукт.МодельПродукта
	               |		ИНАЧЕ Scan_СоглашенияОПоставкеСписокПродуктов.Продукт.Модель
	               |	КОНЕЦ КАК Модель,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт.ЗаказНаЗавод КАК ЗаказНаЗавод,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(Scan_СоглашенияОПоставкеСписокПродуктов.Продукт) = ТИП(Справочник.Scan_Изделия)
	               |			ТОГДА ТИПЗНАЧЕНИЯ(Scan_СоглашенияОПоставкеСписокПродуктов.Продукт)
	               |		ИНАЧЕ ТИПЗНАЧЕНИЯ(Scan_СоглашенияОПоставкеСписокПродуктов.Продукт)
	               |	КОНЕЦ КАК ТипПродукта,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Количество КАК Количество
	               |ИЗ
	               |	КритерийОтбора.Scan_ИспользованиеСпециальныхУсловий(&СУ) КАК Scan_ИспользованиеСпециальныхУсловий
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	               |		ПО (Scan_ИспользованиеСпециальныхУсловий.Ссылка = Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка
	               |				И Scan_СоглашенияОПоставкеСписокПродуктов.СпециальныеУсловия = &СУ)
	               |ГДЕ
	               |	НЕ Scan_ИспользованиеСпециальныхУсловий.Ссылка.Статус В (&НеактуальныеСтатусы)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт.НомерИзделия";
	Запрос.УстановитьПараметр("СУ",Объект.Ссылка);
	Запрос.УстановитьПараметр("НеактуальныеСтатусы",НеактуальныеСтатусы);
	Результат = Запрос.Выполнить().Выгрузить();
	ФактическоеПрименение.Загрузить(Результат);
	
	ФактическоеПрименениеИтог = ФактическоеПрименение.Итог("Количество");//rarus vikhle 21.06.2021 mt 17637
	//rarus vikhle 06.07.2021 17637 ---
КонецПроцедуры	
//rarus vikhle 27.07.2021 17637 ---

&НаСервере
Процедура ОбновитьКолонкиПродуктов()
	
	МассивПродуктов = ОбщегоНазначения.ВыгрузитьКолонку(Объект.СписокПродуктов,"Продукт");
	ДокументыЦен 	= ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивПродуктов,"ДокументУстановкиПлановыхЦенПродукта");
	
	Для Каждого СтрокаСписка Из Объект.СписокПродуктов Цикл
		СтрокаСписка.ДокументУстановкиПлановыхЦен = ДокументыЦен[СтрокаСписка.Продукт];
		СтруктураОтбора	= Новый Структура("Продукт",СтрокаСписка.Продукт);
		СтрокаСписка.Применены = ФактическоеПрименение.НайтиСтроки(СтруктураОтбора).Количество() > 0; //rarus vikhle 27.07.2021 17637 Раскомментировал
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ФактическоеПрименениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//rarus vikhle 27.07.2021 17637 Раскомментировал +++
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.ФактическоеПрименениеПродукт Тогда
		//Rarus bonmak 18448 19.10.2021 ++
		Если Не Scan_ПраваИНастройки.Scan_Право("ПользовательЯвляетсяСотрудникомСканияРусь") Тогда
			ПараметрыФормы = Новый Структура("Ключ,ФормаОткрытаИзРабочегоМестаДилера",ТекущиеДанные.Продукт,Истина);
			ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
		Иначе
			ПоказатьЗначение(,ТекущиеДанные.Продукт);
		КонецЕсли;
		//Rarus bonmak 18448 19.10.2021 --
	ИначеЕсли Поле = Элементы.ФактическоеПрименениеЗаявка Тогда 	
		ПоказатьЗначение(,ТекущиеДанные.Заявка);	
	КонецЕсли;	
	//rarus vikhle 27.07.2021 17637 ---
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ВывестиСообщениеПол(Нстр("ru = 'Добавление продуктов возможно только по команде ""Подобрать""'"));
	Отказ = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура УникальностьСпецификацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	//rarus vikhle 27.07.2021 17637 Раскомментировал +++
	Если ВыбранноеЗначение = ПредыдущаяУникальностьСпецификации Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	//rarus vikhle 27.07.2021 17637 ---
	
КонецПроцедуры

//rarus vikhle 27.07.2021 17637 Раскомментировал +++
&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьСовпадениеУсловийОплаты(Форма)
	
	УсловияСовпадают = Ложь;
	
	Если Форма.Объект.УсловияОплаты.Количество() > 0 
		И Форма.Объект.УсловияОплаты.Количество() = Форма.СтандартныеУсловияОплаты.Количество() Тогда
		
		Отбор = Новый Структура("ВидОплаты,ПроцентОплаты,СрокОплатыАванса,РасчетДатыОплаты");
		МассивОбработанныхСтрок = Новый Массив;
		
		Для Каждого СтрокаУсловийСУ Из Форма.Объект.УсловияОплаты Цикл
			ЗаполнитьЗначенияСвойств(Отбор,СтрокаУсловийСУ);
			Строки = Форма.СтандартныеУсловияОплаты.НайтиСтроки(Отбор);
			Если Строки.Количество() = 0 Тогда 
				Прервать;
			Иначе	
				Для Каждого СтрокаСтандартныхУсловий Из Строки Цикл
					Если МассивОбработанныхСтрок.Найти(СтрокаСтандартныхУсловий) = Неопределено Тогда
						МассивОбработанныхСтрок.Добавить(СтрокаСтандартныхУсловий);
						Прервать;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;	
		
		УсловияСовпадают = Форма.Объект.УсловияОплаты.Количество() = МассивОбработанныхСтрок.Количество();	
	КонецЕсли;
			
	
	Если УсловияСовпадают Тогда
		Форма.Элементы.ДекорацияТипУсловийОплаты.Заголовок  = Нстр("ru = 'Условия оплаты Стандартные'");
		Форма.Элементы.ДекорацияТипУсловийОплаты.ЦветТекста = Новый Цвет();
	Иначе
		Форма.Элементы.ДекорацияТипУсловийОплаты.Заголовок  = Нстр("ru = 'Условия оплаты Нестандартные'");
		Форма.Элементы.ДекорацияТипУсловийОплаты.ЦветТекста = WebЦвета.ТемноОранжевый;
	КонецЕсли;
	
КонецПроцедуры
//rarus vikhle 27.07.2021 17637 ---

&НаКлиенте
Процедура УсловияОплатыПриИзменении(Элемент)
	
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект); //rarus vikhle 27.07.2021 17637 Раскомментировал
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыПослеУдаления(Элемент)
	
	ОбновитьСтрокуПостоплаты(); //rarus vikhle 27.07.2021 17637 Раскомментировал

КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Отказ = Истина;
		ВывестиСообщениеПол(Нстр("ru = 'Копирование строк табличной части запрещено'"));
	КонецЕсли;
	
КонецПроцедуры
//rarus vikhle 08.06.2021 mt 17637 ---

&НаСервере
Процедура ОбновитьПризнакСУНаАвтобусы()	// rarus tenkam 18.06.2021 mantis 17741 +++
	Объект.СУНаАвтобусы = Справочники.Scan_МоделиПродуктов.ЭтоМодельАвтобуса(Объект.Модель);	
КонецПроцедуры

//rarus vikhle 28.06.2021 mt 17637 +++
//rarus vikhle 27.07.2021 17637 +++ Раскомментировал
&НаКлиенте
Процедура ЗаполнитьСтандартнымиУсловиями(Команда)
	
	ЗаполнитьСтандартнымиУсловиямиНаСервере();
	
КонецПроцедуры
//rarus vikhle 27.07.2021 17637 ---

//rarus vikhle 27.07.2021 17637 Раскомментировал +++
&НаСервере
Процедура ЗаполнитьСтандартнымиУсловиямиНаСервере()
	
	Объект.УсловияОплаты.Загрузить(РеквизитФормыВЗначение("СтандартныеУсловияОплаты"));
	ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" загружены стандартные условия оплаты для %1'"),,,,,Объект.УникальностьСпецификации);
	
	Элементы.ДекорацияТипУсловийОплаты.Заголовок  = Нстр("ru = 'Условия оплаты Стандартные'");
	Элементы.ДекорацияТипУсловийОплаты.ЦветТекста = Новый Цвет();
		
КонецПроцедуры	
//rarus vikhle 27.07.2021 17637 ---
//rarus vikhle 28.06.2021 mt 17637 ---

//rarus kabany Дата: 05/07/2021 17943 ++
&НаСервереБезКонтекста
Функция ПроверитьСтатусы(Статус, DD)
	
	Если Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Запрос")
		ИЛИ Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Согласование")
		ИЛИ Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено") 		
		ИЛИ Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП") ТОГДА  //rarus kabany Дата: 05/07/2021 17943 +
		
		Если НЕ ЗначениеЗаполнено(DD) Тогда			
			Возврат Ложь; 		
		КонецЕсли;		
		
	КонецЕсли;

	Возврат Истина;
КонецФункции
//rarus kabany Дата: 05/07/2021 17943 --

&НаКлиенте
Процедура ПослеИзмененияВидаДилера(ОтветПользователя, ДопПараметры) Экспорт //rarus vikhle 16.09.2021 mt 18288 +++
	
	ЗаполнитьСтандартныеУсловияОплаты(ОтветПользователя = КодВозвратаДиалога.Да);
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
		
КонецПроцедуры //rarus vikhle 16.09.2021 mt 18288 ---	

