// rarus tenkam 23.08.2017 mantis 8465 +++
Функция СформироватьТекст(Шаблон,СсылкаНаОбъект,НесколькоПараметров = Ложь) Экспорт 
	
	Результат = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ШаблоныПисем.ФорматСообщения,
	               |	Scan_ШаблоныПисем.ТипПараметра
	               |ИЗ
	               |	Справочник.Scan_ШаблоныПисем КАК Scan_ШаблоныПисем
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ШаблоныПисемСтруктураШаблона.НомерСтроки,
	               |	ШаблоныПисемСтруктураШаблона.Запрос,
	               |	ШаблоныПисемСтруктураШаблона.Повторяющаяся,
	               |	ШаблоныПисемСтруктураШаблона.ШаблонТекста
	               |ПОМЕСТИТЬ ТабличнаяЧасть
	               |ИЗ
	               |	Справочник.Scan_ШаблоныПисем.СтруктураШаблона КАК ШаблоныПисемСтруктураШаблона
	               |ГДЕ
	               |	ШаблоныПисемСтруктураШаблона.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабличнаяЧасть.Запрос
	               |ИЗ
	               |	ТабличнаяЧасть КАК ТабличнаяЧасть
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабличнаяЧасть.Запрос
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	               |	ТабличнаяЧасть.Запрос,
	               |	ТабличнаяЧасть.Повторяющаяся,
	               |	ТабличнаяЧасть.ШаблонТекста
	               |ИЗ
	               |	ТабличнаяЧасть КАК ТабличнаяЧасть
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
	Запрос.УстановитьПараметр("Ссылка", Шаблон);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатШапка = МассивРезультатов[0];
	РезультатЗапросы = МассивРезультатов[2];
	РезультатСтруктура = МассивРезультатов[3];
	
	Если Не РезультатСтруктура.Пустой() Тогда
		
		ВыборкаЗапросов = РезультатЗапросы.Выбрать();
		СоответствиеДанных = Новый Соответствие;
		Пока ВыборкаЗапросов.Следующий() Цикл
			// rarus tenkam 16.08.2018 mantis 13381 +++
			Если НесколькоПараметров Тогда
				РезультатЗапроса = ПолучитьРезультатЗапросаСНесколькимиПараметрами(ВыборкаЗапросов.Запрос,СсылкаНаОбъект);
			Иначе
			// rarus tenkam 16.08.2018 mantis 13381 ---
				РезультатЗапроса = ПолучитьРезультатЗапроса(ВыборкаЗапросов.Запрос,СсылкаНаОбъект);
			КонецЕсли;		// rarus tenkam 16.08.2018 mantis 13381 +
			Если НЕ РезультатЗапроса.Пустой() Тогда
				СоответствиеДанных.Вставить(ВыборкаЗапросов.Запрос,РезультатЗапроса);	
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаСтруктуры = РезультатСтруктура.Выбрать();
		Пока ВыборкаСтруктуры.Следующий() Цикл
			
			ТекстШаблона = ВыборкаСтруктуры.ШаблонТекста;
			ТекТекстШаблона = "";
			Если НЕ ВыборкаСтруктуры.Запрос.Пустая() Тогда
				
				РезультатЗапроса = СоответствиеДанных.Получить(ВыборкаСтруктуры.Запрос);
				Если РезультатЗапроса <> Неопределено Тогда
					
					Если ВыборкаСтруктуры.Повторяющаяся Тогда
						ВыборкаДанных = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаДанных.Следующий() Цикл
							ТекТекстШаблона = ТекТекстШаблона + Символы.ПС + ЗаполнитьПараметрыШаблона(ТекстШаблона,ВыборкаДанных,РезультатЗапроса.Колонки);
						КонецЦикла;
					Иначе
						ВыборкаДанных = РезультатЗапроса.Выбрать();
						Если ВыборкаДанных.Следующий() Тогда
							ТекТекстШаблона = ЗаполнитьПараметрыШаблона(ТекстШаблона,ВыборкаДанных,РезультатЗапроса.Колонки);
						Иначе
							ТекТекстШаблона = ТекстШаблона;
						КонецЕсли;
					КонецЕсли;
					
				Иначе
					Если НЕ ВыборкаСтруктуры.Повторяющаяся Тогда
						ТекТекстШаблона = ТекстШаблона;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если НЕ ВыборкаСтруктуры.Повторяющаяся Тогда
					ТекТекстШаблона = ТекстШаблона;
				КонецЕсли;
			КонецЕсли;
			
			Результат = Результат  + Символы.ПС + ТекТекстШаблона;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СокрЛП(Результат);
	
КонецФункции

Функция ПолучитьЗаголовокПисьма(Шаблон,СсылкаНаОбъект) Экспорт 
		
	ШаблонЗаголовка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шаблон,"Заголовок"); 
	
	Возврат СформироватьТекст(ШаблонЗаголовка,СсылкаНаОбъект)
		
КонецФункции

Функция ПолучитьПолучателейПисьма(Шаблон,СсылкаНаОбъект) Экспорт 
	
	ШаблонПолучателей = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шаблон,"Получатели"); 
	
	Возврат СформироватьТекст(ШаблонПолучателей,СсылкаНаОбъект)
	
КонецФункции

Функция ПолучитьКопииПисьма(Шаблон,СсылкаНаОбъект, ПолучателиПисьма = "") Экспорт 
	
	ШаблонПолучателей = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шаблон,"Копии"); 
	
	ТекстКопииПисьма = СформироватьТекст(ШаблонПолучателей,СсылкаНаОбъект);
	Если ЗначениеЗаполнено(ПолучателиПисьма) Тогда
		Scan_ОтправкаПисемПоЭлектроннойПочте.УбратьДублиПолучателей(ПолучателиПисьма, ТекстКопииПисьма);
	Иначе
		ПолучателиПисьма = ПолучитьПолучателейПисьма(Шаблон,СсылкаНаОбъект);
		Scan_ОтправкаПисемПоЭлектроннойПочте.УбратьДублиПолучателей(ПолучателиПисьма, ТекстКопииПисьма);
	КонецЕсли;
	Возврат ТекстКопииПисьма; 
	
КонецФункции

Функция ПолучитьРезультатЗапроса(СсылкаНаЗапрос,СсылкаНаОбъект)
	
	Результат = ПолучитьПустойРезультатЗапроса();
	
	Запрос = Новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	|	Scan_Запросы.ТекстЗапроса,
	|	Scan_Запросы.ИмяПараметра,
	|	Scan_Запросы.Параметры.(
	|		ИмяПараметра,
	|		Значение
	|	)
	|ИЗ
	|	Справочник.Scan_Запросы КАК Scan_Запросы
	|ГДЕ
	|	Scan_Запросы.Ссылка = &СсылкаНаЗапрос"; 
	Запрос.УстановитьПараметр("СсылкаНаЗапрос",СсылкаНаЗапрос);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ТекстЗапроса = СокрЛП(Выборка.ТекстЗапроса);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			
			Запрос.Текст = ТекстЗапроса;
			ВыборкаПараметров = Выборка.Параметры.Выбрать();
			Пока ВыборкаПараметров.Следующий() Цикл
				Запрос.УстановитьПараметр(ВыборкаПараметров.ИмяПараметра,ВыборкаПараметров.Значение);
			КонецЦикла;
			Запрос.УстановитьПараметр(Выборка.ИмяПараметра,СсылкаНаОбъект);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
			Запрос.УстановитьПараметр("ТекущийПользователь", ПользователиКлиентСервер.ТекущийПользователь());
			Запрос.УстановитьПараметр("СимволПС", Символы.ПС);
			Попытка
				Результат = Запрос.Выполнить();
			Исключение
				//rarus FominskiyAS 21.04.2019  mantis 14191 +++
				//Сообщить("Не удалось выполнить запрос " + СсылкаНаЗапрос);
				Сообщить(НСтр("ru = 'Не удалось выполнить запрос '; en = 'Request failed '") + СсылкаНаЗапрос);
				//rarus FominskiyAS 21.04.2019  mantis 14191 ---  
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьПустойРезультатЗапроса()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	&Параметр
	|ГДЕ
	|	&Параметр = ИСТИНА";
	Запрос.УстановитьПараметр("Параметр",Ложь);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗаполнитьПараметрыШаблона(Знач ТекстШаблона,ВыборкаДанных,КолонкиЗапроса)
	
	Результат = ТекстШаблона;
	
	Для Каждого Колонка Из КолонкиЗапроса Цикл
		
		Если ТипЗнч(ВыборкаДанных[Колонка.Имя]) = Тип("Дата") Тогда
			ТекЗначениеВыборки = Формат(ВыборкаДанных[Колонка.Имя], "ДЛФ=Д");
			Результат = СтрЗаменить(Результат,"%%%" + Колонка.Имя + "%%%",ТекЗначениеВыборки);
		Иначе
				
			Результат = СтрЗаменить(Результат,"%%%" + Колонка.Имя + "%%%",ВыборкаДанных[Колонка.Имя]);
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат СокрЛП(Результат);
		
КонецФункции

Функция ПолучитьВложения(Знач Шаблон, Знач СсылкаНаОбъект) Экспорт 
	
	Вложения = Неопределено;
	
	КодВложений = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шаблон,"КодВложений"));
	
	Если НЕ ПустаяСтрока(КодВложений) Тогда
		
		Попытка
			
			Выполнить(КодВложений);
			
		Исключение          
			
			//////////////////////////////////////////////////////////////////////
			ИмяСобытия = "Scan_ШаблоныПисем.Вложения";
			УровеньЖурнала = УровеньЖурналаРегистрации.Информация;
			ОбъектМетаданных = Метаданные.Справочники.Scan_ШаблоныПисем;
			Данные = Шаблон;
			Комментарий = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурнала,ОбъектМетаданных,Данные,Комментарий);
			//////////////////////////////////////////////////////////////////////
			
		КонецПопытки;
		
	КонецЕсли;
		
	Возврат Вложения;
	
КонецФункции
// rarus tenkam 23.08.2017 mantis 9465 ---

// rarus tenkam 16.08.2018 mantis 13381 +++
Функция ПолучитьРезультатЗапросаСНесколькимиПараметрами(СсылкаНаЗапрос, МассивПараметров)
	Результат = ПолучитьПустойРезультатЗапроса();
	
	Запрос = Новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	|	Scan_Запросы.ТекстЗапроса,
	|	Scan_Запросы.ИмяПараметра,
	|	Scan_Запросы.Параметры.(
	|		ИмяПараметра,
	|		Значение
	|	)
	|ИЗ
	|	Справочник.Scan_Запросы КАК Scan_Запросы
	|ГДЕ
	|	Scan_Запросы.Ссылка = &СсылкаНаЗапрос"; 
	Запрос.УстановитьПараметр("СсылкаНаЗапрос",СсылкаНаЗапрос);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ТекстЗапроса = СокрЛП(Выборка.ТекстЗапроса);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			
			Запрос.Текст = ТекстЗапроса;
			ВыборкаПараметров = Выборка.Параметры.Выбрать();
			Пока ВыборкаПараметров.Следующий() Цикл
				Запрос.УстановитьПараметр(ВыборкаПараметров.ИмяПараметра,ВыборкаПараметров.Значение);
			КонецЦикла;
			Запрос.УстановитьПараметр(Выборка.ИмяПараметра,МассивПараметров[0]);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
			Запрос.УстановитьПараметр("ТекущийПользователь", ПользователиКлиентСервер.ТекущийПользователь());
			Запрос.УстановитьПараметр("СимволПС", Символы.ПС);

			Для Сч = 1 По МассивПараметров.Количество()-1 Цикл
				Запрос.УстановитьПараметр("Параметр" + Сч ,МассивПараметров[Сч]);
			КонецЦикла;
			
			Попытка
				Результат = Запрос.Выполнить();
			Исключение
				//rarus FominskiyAS 21.04.2019  mantis 14191 +++
				//Сообщить("Не удалось выполнить запрос " + СсылкаНаЗапрос);
				Сообщить(НСтр("ru = 'Не удалось выполнить запрос '; en = 'Request failed '") + СсылкаНаЗапрос);
				//rarus FominskiyAS 21.04.2019  mantis 14191 --- 
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
// rarus tenkam 16.08.2018 mantis 13381 ---

Функция ШаблонИспользуетсяВПравахИНастройках(Шаблон) Экспорт //rarus BProg_Gladkov 04.05.2020 0015962 +-
	Если НЕ ЗначениеЗаполнено(Шаблон) тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ Значение ИЗ РегистрСведений.Scan_ПраваИНастройки ГДЕ Значение = &Шаблон");
	Запрос.УстановитьПараметр("Шаблон", Шаблон);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ШаблонИспользуетсяВПравахИНастройках = Выборка.Следующий();
	Возврат ШаблонИспользуетсяВПравахИНастройках;	
КонецФункции
