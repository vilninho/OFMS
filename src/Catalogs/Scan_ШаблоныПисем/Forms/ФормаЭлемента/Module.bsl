//rarus tenkam 24.08.2017 mantis 8465 +++
&НаКлиенте
Перем СтрокаШаблонаТекста;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.СтраницаРезультатHTML.Видимость = Объект.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML;
	//Элементы.СтраницаРезультатHTML.Видимость = Объект.ФорматСообщения = Перечисления.Scan_ФорматыСообщений.HTML; 		//tenkam
	ЗаполнитьСписокВыбораИмяПФ();
	//rarus bonmak 01.07.2019 14433 ++
	ЗаполнитьСписокВыбораИмяТабДок(); 
	//rarus bonmak 01.07.2019 14433 --
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере(); //rarus BProg_Gladkov 03.05.2020 0015962 +- 	
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолонкиПоЗапросу(ТекЗапрос)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗапросыКолонки.ИмяКолонки,
	|	ЗапросыКолонки.Представление
	|ИЗ
	|	Справочник.Scan_Запросы.Колонки КАК ЗапросыКолонки
	|ГДЕ
	|	ЗапросыКолонки.Ссылка = &ТекЗапрос";
	Запрос.УстановитьПараметр("ТекЗапрос",ТекЗапрос);
	ТаблицаКолонок.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураШаблонаПриАктивизацииСтроки(Элемент)
	
	ТекСтрока = Элементы.СтруктураШаблона.ТекущиеДанные;
	
	Если ТекСтрока <> Неопределено Тогда
		
		ЗаполнитьКолонкиПоЗапросу(ТекСтрока.Запрос);
		
		Если СтрокаШаблонаТекста <> Неопределено Тогда
			СтрокаШаблонаТекста.ШаблонТекста = ШаблонТекста;
		КонецЕсли;
		
		ШаблонТекста = ТекСтрока.ШаблонТекста;
		СтрокаШаблонаТекста = ТекСтрока;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураШаблонаЗапросПриИзменении(Элемент)
	
	ТекСтрока = Элементы.СтруктураШаблона.ТекущиеДанные;
	
	Если ТекСтрока <> Неопределено Тогда
		
		ЗаполнитьКолонкиПоЗапросу(ТекСтрока.Запрос);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если СтрокаШаблонаТекста <> Неопределено Тогда
		СтрокаШаблонаТекста.ШаблонТекста = ШаблонТекста;
	КонецЕсли;
	
	//rarus BProg_Gladkov 04.05.2020 0015962 ++ Вопросы пользователю перед записью
	Если НЕ ПараметрыЗаписи.Свойство("ЗаменаТекущегоДействующегоШаблонаПодтверждена")
		И Объект.Действует И Объект.ПисьмоСПФ И ЗначениеЗаполнено(Объект.ИмяПФ) 
	Тогда
		ТекущийДействующийШаблон = Scan_ОтправкаПисемПоЭлектроннойПочте.ШаблонПоИмениПФ(Объект.ИмяПФ);
		Если ЗначениеЗаполнено(ТекущийДействующийШаблон) И ТекущийДействующийШаблон <> Объект.Ссылка тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодтвердитьЗаменуТекущегоДействующегоШаблонаЗавршение", ЭтаФорма, ПараметрыЗаписи); 
			ШаблонВопроса = НСтр("ru = 'Для выбранной печатной формы уже есть действующий шаблон ""%1"". 
										|При записи шаблон ""%1"" перестанет быть действующим. 
										|Продолжить?'; 
								 |en = 'There is already a valid template for the selected print form ""%1"". 
										|When writing, the template ""%1"" will no longer be valid. 
										|Continue?'");
			
			ТекстВопроса = СтрШаблон(ШаблонВопроса, ТекущийДействующийШаблон);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			Отказ = Истина; Возврат;
		КонецЕсли;
	КонецЕсли;

	Если НЕ ПараметрыЗаписи.Свойство("СнятиеФлагаДействуетПодтверждено")
		И НЕ Объект.Действует И ШаблонИспользуетсяВПравахИНастройках() 
	Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодтвердитьСнятиеФлагаДействуетЗавршение", ЭтаФорма, ПараметрыЗаписи); 
		ТекстВопроса = НСтр("ru = 'Шаблон используется в правах и настройках. 
									|Продолжить запись шаблона со снятым флагом ""Действует""?'; 
					   	 	|en = 'The template is used in permissions and settings. 
									|Continue recording the template with the flag removed ""Valid""?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Отказ = Истина; Возврат;
	КонецЕсли;
	//rarus BProg_Gladkov 04.05.2020 0015962 --
	
КонецПроцедуры

&НаСервере
Функция ШаблонИспользуетсяВПравахИНастройках()
	Возврат Справочники.Scan_ШаблоныПисем.ШаблонИспользуетсяВПравахИНастройках(Объект.Ссылка);		
КонецФункции

&НаКлиенте
Процедура ПодтвердитьЗаменуТекущегоДействующегоШаблонаЗавршение(Результат, ПараметрыЗаписи) Экспорт //rarus BProg_Gladkov 04.05.2020 0015962 +- 
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ПараметрыЗаписи.Вставить("ЗаменаТекущегоДействующегоШаблонаПодтверждена", Истина);
	Записать(ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьСнятиеФлагаДействуетЗавршение(Результат, ПараметрыЗаписи) Экспорт //rarus BProg_Gladkov 04.05.2020 0015962 +- 
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ПараметрыЗаписи.Вставить("СнятиеФлагаДействуетПодтверждено", Истина);
	Записать(ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКолонокНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если  ПараметрыПеретаскивания.Значение.Количество() > 0  Тогда
		НомерСтроки =  ПараметрыПеретаскивания.Значение[0];
		Если НомерСтроки >= 0 Тогда
			ДанныеСтроки = Элементы.ТаблицаКолонок.ДанныеСтроки(НомерСтроки);
			Если ДанныеСтроки <> Неопределено Тогда
				ЗначениеПеретаскивания = "%%%" + СокрЛП(ДанныеСтроки.ИмяКолонки) + "%%%";
				ПараметрыПеретаскивания.Значение = ЗначениеПеретаскивания;
			Иначе
				Выполнение = Ложь;
			КонецЕсли;
		Иначе
			Выполнение = Ложь;
		КонецЕсли;
	Иначе
		Выполнение = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыводСообщения(Команда)
	
	//Если НЕ ЗначениеЗаполнено(ТестоваяСсылка) Тогда
	//	Возврат;
	//КонецЕсли;
	
	ЭтаФорма.Записать();
	ПроверитьВыводСообщенияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьВыводСообщенияНаСервере()
	
	ВремТекст = Справочники.Scan_ШаблоныПисем.СформироватьТекст(Объект.Ссылка,ТестоваяСсылка);
	РезультатТекстовый = ВремТекст;
	
	//Если Объект.ФорматСообщения = Перечисления.Scan_ФорматыСообщений.HTML Тогда	//tenkam
	Если Объект.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML Тогда
		РезультатHTML = ВремТекст;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматСообщенияПриИзменении(Элемент)
	
	//Элементы.СтраницаРезультатHTML.Видимость =  Объект.ФорматСообщения = ПредопределенноеЗначение("Перечисление.Scan_ФорматыСообщений.HTML");	//tenkam
	Элементы.СтраницаРезультатHTML.Видимость =  Объект.ТипТекста = ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.HTML");
	
КонецПроцедуры

&НаКлиенте
Процедура ПисьмоСПФПриИзменении(Элемент)
	//rarus BProg_Gladkov 03.05.2020 0015962 ++ ПисьмоСПФПриИзменении
	Если Объект.ПисьмоСПФ тогда
		Объект.ПисьмоСТабДок = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	//rarus BProg_Gladkov 03.05.2020 0015962 -- 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораИмяПФ()
	СписокВыбора = Элементы.ИмяПФ.СписокВыбора;
	
	Для Каждого Документ ИЗ Метаданные.Документы Цикл
		Для Каждого ТекМакет Из Документ.Макеты Цикл
			СписокВыбора.Добавить(ТекМакет.Имя, Документ.Синоним +": " + ТекМакет.Синоним);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТипТекстаПриИзменении(Элемент)
	Элементы.СтраницаРезультатHTML.Видимость =  Объект.ТипТекста = ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.HTML");
КонецПроцедуры

&НаКлиенте
Процедура ПисьмоСТабДокПриИзменении(Элемент)
	//rarus BProg_Gladkov 03.05.2020 0015962 ++ ПисьмоСТабДокПриИзменении
	Если Объект.ПисьмоСТабДок тогда
		Объект.ПисьмоСПФ = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	//rarus BProg_Gladkov 03.05.2020 0015962 -- 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораИмяТабДок() //rarus bonmak 01.07.2019 14433 ++
	СписокВыбора = Элементы.ИмяТабДок.СписокВыбора;
		
	СписокВыбора.Добавить("DateDeviation", "Date Deviation");
	СписокВыбора.Добавить("OrderDeviation", "Order deviation"); //rarus bonmak 08.11.2019 14869 
		
КонецПроцедуры //rarus bonmak 01.07.2019 14433 --

//rarus tenkam 24.08.2017 mantis 8465 ---

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	//rarus BProg_Gladkov 03.05.2020 0015962 ++ УправлениеДиалогомНаСервере
	Элементы.ИмяПФ.Видимость = Объект.ПисьмоСПФ;   	
	Элементы.ИмяТабДок.Видимость = Объект.ПисьмоСТабДок;   	
	//rarus BProg_Gladkov 03.05.2020 0015962 -- 
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда) //rarus BProg_Gladkov 04.05.2020 0015962 +- 
	ПараметрыЗаписи = Новый Структура("ВыполнитьЗакрытиеФормы");
	Записать(ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	//rarus BProg_Gladkov 04.05.2020 0015962 ++ ПослеЗаписи 
	Если ПараметрыЗаписи.Свойство("ВыполнитьЗакрытиеФормы") тогда
		Закрыть();
	КонецЕсли;
	//rarus BProg_Gladkov 04.05.2020 0015962 -- 
КонецПроцедуры
  
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) // Rarus tenkam 11.04.2022 mantis 18433 +++

	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
КонецПроцедуры 	// Rarus tenkam 11.04.2022 mantis 18433 ---

