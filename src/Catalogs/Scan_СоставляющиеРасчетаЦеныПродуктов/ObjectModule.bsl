
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Перем ИзмРекв;
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ?(ЭтотОбъект.ЭтоНовый(), Истина, Ложь));
	
	ИзмРекв = Новый Массив;
	//Если новый - запишем заполненные реквизиты
	Если ЭтотОбъект.ЭтоНовый() тогда
		Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
			Если ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("Булево") и ЭтотОбъект[Рекв.Имя] = Ложь Тогда
				Продолжить;
			ИначеЕсли Не ЗначениеЗаполнено(ЭтотОбъект[Рекв.Имя]) Тогда
				Продолжить;
			ИначеЕсли ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("ХранилищеЗначения") Тогда
				Продолжить;
			КонецЕсли;
			ИзмРекв.Добавить(Рекв.Имя);
		КонецЦикла;
	Иначе  //если не новый - то измененные
		Если Не ЭтотОбъект.ДополнительныеСвойства.Свойство("НеЗаписыватьВРегистр") Тогда 
			Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
				Если  (ЭтотОбъект[Рекв.Имя] <> ссылка[Рекв.Имя])
					И ТипЗнч(ЭтотОбъект[Рекв.Имя]) <> Тип("ХранилищеЗначения")
					Тогда
					ИзмРекв.Добавить(Рекв.Имя);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	//для старых объектов, у которых нет данных в регистре - запишем заполненные
	Если ИзмРекв.Количество() = 0 и  НетИсторииВРегистре(ссылка) Тогда
		Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
			Если ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("Булево") и ЭтотОбъект[Рекв.Имя] = Ложь Тогда
				Продолжить;
			ИначеЕсли Не ЗначениеЗаполнено(ЭтотОбъект[Рекв.Имя]) Тогда
				Продолжить;
			ИначеЕсли ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("ХранилищеЗначения") Тогда
				Продолжить;
			КонецЕсли;
			ИзмРекв.Добавить(Рекв.Имя);
		КонецЦикла;
	КонецЕсли;
	
	Идентификатор  = СокрЛП(Идентификатор);
	ФормулаРасчета = СокрЛП(ФормулаРасчета);
	
	Если ДатаСоздания = Дата(1,1,1) Тогда
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	
	ДатаИзменения = ТекущаяДата();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Не Отказ Тогда
		АвторизованныйПользователь = ПользователиСлужебный.АвторизованныйПользователь();
		Для Каждого Реквизит Из ИзмРекв Цикл
			НоваяЗапись = РегистрыСведений.Scan_ХарактеристикиСоставляющейРасчетыЦеныПродуктов.СоздатьМенеджерЗаписи();
			НоваяЗапись.Период = ТекущаяДата();
			НоваяЗапись.СоставляющаяРасчета = Ссылка;
			НоваяЗапись.ВидЗначения         = Перечисления.Scan_ДополнительнаяИнформацияПоСоставляющимРасчетаЦен[Реквизит];
			НоваяЗапись.Значение            = Ссылка[Реквизит];
			НоваяЗапись.Пользователь        = АвторизованныйПользователь;
			НоваяЗапись.Записать();
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если СокрЛП(Идентификатор) <> "" Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Идентификатор", СокрЛП(Идентификатор));
		Запрос.УстановитьПараметр("Ссылка",        Ссылка);
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов КАК Scan_СоставляющиеРасчетаЦеныПродуктов
		|ГДЕ
		|	Scan_СоставляющиеРасчетаЦеныПродуктов.Идентификатор = &Идентификатор
		|	И Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка <> &Ссылка";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Идентификатор составляющей не уникальный! Составляющая '; en = 'Identifier of the component is not unique! Component ""'") + Выборка.Ссылка + НСтр("ru = ' имеет такой же идентификатор.'; en = ' has the same identifier.'");
			Сообщение.Поле = "Идентификатор";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НетИсторииВРегистре(СоставляющаяРасчета) 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СоставляющаяРасчета", СоставляющаяРасчета);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ХарактеристикиСоставляющейРасчетыЦеныПродуктов.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.Scan_ХарактеристикиСоставляющейРасчетыЦеныПродуктов КАК Scan_ХарактеристикиСоставляющейРасчетыЦеныПродуктов
	|ГДЕ
	|	Scan_ХарактеристикиСоставляющейРасчетыЦеныПродуктов.СоставляющаяРасчета = &СоставляющаяРасчета";
	
	Возврат Запрос.Выполнить().Выбрать().Количество() = 0;
	
КонецФункции

#КонецОбласти

#КонецЕсли