// Модуль формы элемента справочника "Составляющие расчета цены продуктов (scania)"	

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		УстановитьЗначенияПоУмолчанию();
	КонецЕсли;
	
	Если     Объект.ВыводитьВКалькуляцию 
		И Не Объект.Ссылка.Пустая()
		Тогда
		ЦветСтрокиКалькуляции       = РеквизитФормыВЗначение("Объект").ЦветСтрокиКалькуляции.Получить();
		ЦветТекстаСтрокиКалькуляции = РеквизитФормыВЗначение("Объект").ЦветТекстаСтрокиКалькуляции.Получить();
		ШрифтСтрокиКалькуляции      = РеквизитФормыВЗначение("Объект").ШрифтСтрокиКалькуляции.Получить();
	КонецЕсли;
	
	УстановитьПредупреждениеПриРедактированииИдентификатора();
	УправлениеДиалогомНаСервере();
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ВыводитьВКалькуляцию Тогда
		ТекущийОбъект.ЦветСтрокиКалькуляции       = Новый ХранилищеЗначения(ЦветСтрокиКалькуляции);
		ТекущийОбъект.ЦветТекстаСтрокиКалькуляции = Новый ХранилищеЗначения(ЦветТекстаСтрокиКалькуляции);
		ТекущийОбъект.ШрифтСтрокиКалькуляции      = Новый ХранилищеЗначения(ШрифтСтрокиКалькуляции);
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
  
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПредупреждениеПриРедактированииИдентификатора();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипСоставляющейЦеныПриИзменении(Элемент)
	
	Если    Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.КоэффициентДляЦеныDealerNet")
		Или Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.КоэффициентДляЦеныRetailPrice")
		Тогда
		Объект.ВыводитьВКалькуляцию   = Ложь;
		Объект.НомерСтрокиКалькуляции = "";
		ЦветСтрокиКалькуляции         = Новый Цвет(255, 255, 255);
		ЦветТекстаСтрокиКалькуляции   = Новый Цвет(0, 0, 0);
		ШрифтСтрокиКалькуляции        = Неопределено;
	КонецЕсли;
	
	ТипСоставляющейЦеныПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантФормированияРасчетаПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЯвляетсяПакетомУслугПриИзменении(Элемент)
	
	//rarus agar 20.07.2020 16123 ++
	//ЯвляетсяПакетомУслугПриИзмененииНаСервере();
	//rarus agar 20.07.2020 16123 --
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВКалькуляциюПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеЗначенийПоУмолчаниюРазделКалькуляцииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МассивРазделов = ПолучитьРазделыКалькуляцииВРаботе();
	
	СписокРазделов = Новый СписокЗначений;
	СписокРазделов.ЗагрузитьЗначения(МассивРазделов);
	
	//ДополнительныеПараметры = Новый Структура;
	//ДополнительныеПараметры.Вставить("Элемент", Элемент);
	//
	//ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборРаздела", ЭтотОбъект, ДополнительныеПараметры), СписокРазделов, Элемент);
	
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	эОтбор.ПравоеЗначение = СписокРазделов;
	эОтбор.Использование = Истина;
	
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	
	ОткрытьФорму("Справочник.Scan_РазделыКалькуляции.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияВыборРаздела(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения <> Неопределено Тогда
		Элементы.УточнениеЗначенийПоУмолчанию.ТекущиеДанные.РазделКалькуляции = РезультатОповещения.Значение;
		Элементы.УточнениеЗначенийПоУмолчанию.ЗакончитьРедактированиеСтроки(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеЗначенийПоУмолчаниюСтандартнаяСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеОтбора = Новый Структура();
	ЗначениеОтбора.Вставить("Статус",          ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе"));
	ЗначениеОтбора.Вставить("ПометкаУдаления", Ложь);
	
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	
	Результат = ОткрытьФорму("Документ.Scan_СпецификацияСтандартнойМодели.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры 

&НаКлиенте
Процедура ЦветСтрокиКалькуляцииПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветТекстаСтрокиКалькуляцииПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ШрифтСтрокиКалькуляцииПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьФормулу(Команда)
	
	ПараметрыРедактирования = Новый Структура;
	ПараметрыРедактирования.Вставить("Формула",                  Объект.ФормулаРасчета);
	ПараметрыРедактирования.Вставить("НаименованиеСоставляющей", Объект.Наименование);
	ПараметрыРедактирования.Вставить("Составляющая",             Объект.Ссылка);
	
	Оповещение = Новый ОписаниеОповещения("ИзменитьФормулуЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.Scan_РедактированиеФормулыРасчетаСоставляющей", ПараметрыРедактирования, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФормулуЗавершение(РезультатРедактирования, ДополнительныеПараметры) Экспорт 
	
	Если РезультатРедактирования = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ФормулаРасчета = РезультатРедактирования.Формула Тогда 
		Возврат;
	КонецЕсли;
	
	ФормулаПриИзмененииНаСервере(РезультатРедактирования);
	
КонецПроцедуры

&НаСервере
Процедура ФормулаПриИзмененииНаСервере(РезультатРедактирования)
	
	Объект.ФормулаРасчета = РезультатРедактирования.Формула;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВычислитьФормулу(Команда)
	
	ВычислитьФормулуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗначенияПоУмолчанию()
	
	Если Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.КоэффициентыДляЦеныНаДилера") Тогда
		Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.КоэффициентДляЦеныDealerNet");
	ИначеЕсли Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.КоэффициентыДляЦеныНаКлиента") Тогда
		Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.КоэффициентДляЦеныRetailPrice");
	ИначеЕсли Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.РасчетныеСоставляющие") Тогда
		Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.РасчетнаяСоставляющая");
	ИначеЕсли Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.НерасчетныеСоставляющие") Тогда
		Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.НерасчетнаяСоставляющая");
	ИначеЕсли Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ИтоговыеЦены") Тогда
		Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.РасчетнаяСоставляющая");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЦветСтрокиКалькуляции       = Параметры.ЗначениеКопирования.ЦветСтрокиКалькуляции.Получить();
		ЦветТекстаСтрокиКалькуляции = Параметры.ЗначениеКопирования.ЦветТекстаСтрокиКалькуляции.Получить();
		ШрифтСтрокиКалькуляции      = Параметры.ЗначениеКопирования.ШрифтСтрокиКалькуляции.Получить();
	Иначе
		ЦветСтрокиКалькуляции       = Новый Цвет(255, 255, 255);
		ЦветТекстаСтрокиКалькуляции = Новый Цвет(0, 0, 0);
		ШрифтСтрокиКалькуляции      = Неопределено;
		
		Объект.Применимость = ПредопределенноеЗначение("Справочник.Scan_ГруппыПродуктов.ТранспортныеСредства");
		Объект.ВариантФормированияРасчета = ПредопределенноеЗначение("Перечисление.Scan_ВариантыФормированияРасчетаСоставляющихЦены.ВводитсяВручную");
		Объект.Принадлежность = ПредопределенноеЗначение("Перечисление.Scan_ПринадлежностьСоставляющихКалькуляции.НеЗадана");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НаименованиеРус) Тогда
		Объект.Опция = Справочники.Scan_ОпцииПродуктов.НайтиПоНаименованию(Объект.НаименованиеРус, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()

	// Тип составляющей цены
	Если    Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.КоэффициентыДляЦеныНаДилера")
		Или Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.КоэффициентыДляЦеныНаКлиента")
		Или Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.РасчетныеСоставляющие")
		Или Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.НерасчетныеСоставляющие")
		Или Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ИтоговыеЦены")
		Тогда
		Элементы.ТипСоставляющейЦены.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	// Вариант формирования расчета
	//Если Объект.Родитель = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.НерасчетныеСоставляющие") Тогда
		Элементы.ВариантФормированияРасчета.ТолькоПросмотр = Истина;
	//КонецЕсли;
	
	// Настройки калькуляции
	Если    Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.КоэффициентДляЦеныDealerNet")
		Или Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.КоэффициентДляЦеныRetailPrice")
		Тогда
		Элементы.ВыводитьВКалькуляцию.ТолькоПросмотр        = Истина;
		Элементы.НомерСтрокиКалькуляции.ТолькоПросмотр      = Истина;
		Элементы.ЦветСтрокиКалькуляции.ТолькоПросмотр       = Истина;
		Элементы.ЦветТекстаСтрокиКалькуляции.ТолькоПросмотр = Истина;
		Элементы.ШрифтСтрокиКалькуляции.ТолькоПросмотр      = Истина;
		Элементы.Принадлежность.ТолькоПросмотр              = Истина;
	Иначе
		Элементы.ВыводитьВКалькуляцию.ТолькоПросмотр         = Ложь;
		Элементы.НомерСтрокиКалькуляции.ТолькоПросмотр       = Ложь;
		Элементы.ЦветСтрокиКалькуляции.ТолькоПросмотр        = Ложь;
		Элементы.ЦветТекстаСтрокиКалькуляции.ТолькоПросмотр  = Ложь;
		Элементы.ШрифтСтрокиКалькуляции.ТолькоПросмотр       = Ложь;
		Элементы.Принадлежность.ТолькоПросмотр               = Ложь;
	КонецЕсли;
	
	Элементы.НомерСтрокиКалькуляции.Видимость      = Объект.ВыводитьВКалькуляцию;
	Элементы.ЦветСтрокиКалькуляции.Видимость       = Объект.ВыводитьВКалькуляцию;
	Элементы.ЦветТекстаСтрокиКалькуляции.Видимость = Объект.ВыводитьВКалькуляцию;
	Элементы.ШрифтСтрокиКалькуляции.Видимость      = Объект.ВыводитьВКалькуляцию;
	Элементы.Принадлежность.Видимость              = Объект.ВыводитьВКалькуляцию;
	
	// Редактирование формулы и значение по умолчанию
	Если Объект.ВариантФормированияРасчета = ПредопределенноеЗначение("Перечисление.Scan_ВариантыФормированияРасчетаСоставляющихЦены.ВводитсяВручную") Тогда
		Элементы.ГруппаЗаголовокФормулаРасчета.Видимость = Ложь;
		Элементы.ФормулаРасчета.Видимость                = Ложь;
		Элементы.ГруппаВычислениеФормулы.Видимость       = Ложь;
		
		Элементы.ГруппаЗначениеПоУмолчанию.Видимость = Истина;
	ИначеЕсли Объект.ВариантФормированияРасчета = ПредопределенноеЗначение("Перечисление.Scan_ВариантыФормированияРасчетаСоставляющихЦены.РассчитываетсяПоФормуле") Тогда
		Элементы.ГруппаЗаголовокФормулаРасчета.Видимость = Истина;
		Элементы.ФормулаРасчета.Видимость                = Истина;
		Элементы.ГруппаВычислениеФормулы.Видимость       = Истина;
		
		Элементы.ГруппаЗначениеПоУмолчанию.Видимость = Ложь;
	ИначеЕсли Объект.ВариантФормированияРасчета = ПредопределенноеЗначение("Перечисление.Scan_ВариантыФормированияРасчетаСоставляющихЦены.РассчитываетсяАвтоматически") Тогда
		Элементы.ГруппаЗаголовокФормулаРасчета.Видимость = Ложь;
		Элементы.ФормулаРасчета.Видимость                = Ложь;
		Элементы.ГруппаВычислениеФормулы.Видимость       = Ложь;
		
		Элементы.ГруппаЗначениеПоУмолчанию.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.СтраницаОпцииПакетаУслуг.Видимость = Объект.ЯвляетсяПакетомУслуг;
	
	Если     Объект.Опция.Пустая()
		И Не Объект.ЯвляетсяПакетомУслуг
		Тогда
		Элементы.ЯвляетсяПакетомУслуг.Подсказка = Нстр("ru = 'При установке флажка будет заполнена опция'; en = 'When checked, the option will be filled'");
	Иначе
		Элементы.ЯвляетсяПакетомУслуг.Подсказка = "";
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьПредупреждениеПриРедактированииИдентификатора()
	
	Если СокрЛП(Объект.Идентификатор) = "" Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Идентификатор", СокрЛП(Объект.Идентификатор));
	Запрос.УстановитьПараметр("Ссылка",        Объект.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 2
	|	Scan_СоставляющиеРасчетаЦеныПродуктов.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов КАК Scan_СоставляющиеРасчетаЦеныПродуктов
	|ГДЕ
	| Scan_СоставляющиеРасчетаЦеныПродуктов.ФормулаРасчета ПОДОБНО ""%"" + &Идентификатор + ""%""
	|	И Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка <> &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Элементы.Идентификатор.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	Иначе
		МассивСоставляющих = Новый Массив;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСоставляющих.Добавить(Выборка.Наименование);
		КонецЦикла;
		
		СтрокаСоставляющих = СтрСоединить(МассивСоставляющих, ", ");
		
		ТекстПредупреждения = СтрШаблон(НСтр("ru = 'Идентификатор используется в формулах других составляющих: %1.';
		                                     |en = 'The identifier is used in the formulas of other components: %1'"),
		                                     СтрокаСоставляющих);
		
		Элементы.Идентификатор.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
		Элементы.Идентификатор.ПредупреждениеПриРедактировании = ТекстПредупреждения;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТипСоставляющейЦеныПриИзмененииНаСервере()
	
	Если    Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.РасчетнаяСоставляющая") 
		Или Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.КоэффициентДляЦеныDealerNet") 
		Или Объект.ТипСоставляющейЦены = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоставляющихРасчетаСоставляющихЦены.КоэффициентДляЦеныRetailPrice")
		Тогда
		Объект.ВариантФормированияРасчета = ПредопределенноеЗначение("Перечисление.Scan_ВариантыФормированияРасчетаСоставляющихЦены.РассчитываетсяПоФормуле");
	Иначе
		Объект.ВариантФормированияРасчета = ПредопределенноеЗначение("Перечисление.Scan_ВариантыФормированияРасчетаСоставляющихЦены.ВводитсяВручную");
	КонецЕсли;
		
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВычислитьФормулуНаСервере()
	
	РезультатВычисленияФормулы = Scan_ЦенообразованиеСервер.РассчитатьСоставляющую(Объект.Ссылка);
	
КонецПроцедуры	

&НаКлиенте
Процедура УточнениеЗначенийПоУмолчаниюПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если  Не ОтменаРедактирования
		И Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.ИдентификаторПрайсЛиста)
		И Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.РазделКалькуляции)
		И Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.СтандартнаяСпецификация)
		Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Необходимо указать идентификатор прайс-листа, или раздел, или спецификацию!'; en = 'ID (ETBO) or Section or STD must be specified!'"), 10);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРазделыКалькуляцииВРаботе()
	
	Возврат Scan_ЦенообразованиеСервер.РазделыКалькуляцииВРаботе();
	
КонецФункции

#КонецОбласти

