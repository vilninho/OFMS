//rarus kolg 20.11.2017 TLMS 9428 ++

// Модуль менеджера справочника "Scan_СтатусыЗаявокНаРаботы"


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполнения предопределенных элементов справочника
//
Процедура ВыполнитьНачальноеЗаполнение() Экспорт
	
	СостояниеОбъект=Справочники.Scan_СтатусыЗаявокНаРаботы.Новая.ПолучитьОбъект();
	СостояниеОбъект.РеквизитДопУпорядочивания=1;
	СостояниеОбъект.Цвет=Новый ХранилищеЗначения(Новый Цвет(255, 255, 200));
	СостояниеОбъект.ОбменДанными.Загрузка=Истина;
	Попытка
		СостояниеОбъект.Записать();
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка обновления элемента <%1>: %2'"),,,,, СостояниеОбъект, ОписаниеОшибки());
	КонецПопытки; 
	
	СостояниеОбъект=Справочники.Scan_СтатусыЗаявокНаРаботы.Рассмотрена.ПолучитьОбъект();
	СостояниеОбъект.РеквизитДопУпорядочивания=2;
	СостояниеОбъект.Цвет=Новый ХранилищеЗначения(Новый Цвет(200, 255, 200));
	СостояниеОбъект.ОбменДанными.Загрузка=Истина;
	Попытка
		СостояниеОбъект.Записать();
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка обновления элемента <%1>: %2'"),,,,, СостояниеОбъект, ОписаниеОшибки());
	КонецПопытки; 

	СостояниеОбъект=Справочники.Scan_СтатусыЗаявокНаРаботы.Подтверждена.ПолучитьОбъект();
	СостояниеОбъект.РеквизитДопУпорядочивания=3;
	СостояниеОбъект.Цвет=Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	СостояниеОбъект.ОбменДанными.Загрузка=Истина;
	Попытка
		СостояниеОбъект.Записать();
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка обновления элемента <%1>: %2'"),,,,, СостояниеОбъект, ОписаниеОшибки());
	КонецПопытки; 
	
	СостояниеОбъект=Справочники.Scan_СтатусыЗаявокНаРаботы.ВРаботе.ПолучитьОбъект();
	СостояниеОбъект.РеквизитДопУпорядочивания=4;
	СостояниеОбъект.Цвет=Новый ХранилищеЗначения(Новый Цвет(135, 206, 235));
	СостояниеОбъект.ОбменДанными.Загрузка=Истина;
	Попытка
		СостояниеОбъект.Записать();
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка обновления элемента <%1>: %2'"),,,,, СостояниеОбъект, ОписаниеОшибки());
	КонецПопытки;
	
	СостояниеОбъект=Справочники.Scan_СтатусыЗаявокНаРаботы.Исполнена.ПолучитьОбъект();
	СостояниеОбъект.РеквизитДопУпорядочивания=5;
	СостояниеОбъект.Цвет=Новый ХранилищеЗначения(Новый Цвет(150, 255, 150));
	СостояниеОбъект.ОбменДанными.Загрузка=Истина;
	Попытка
		СостояниеОбъект.Записать();
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка обновления элемента <%1>: %2'"),,,,, СостояниеОбъект, ОписаниеОшибки());
	КонецПопытки; 
			
	СостояниеОбъект=Справочники.Scan_СтатусыЗаявокНаРаботы.Аннулирована.ПолучитьОбъект();
	СостояниеОбъект.РеквизитДопУпорядочивания=6;
	СостояниеОбъект.НедоступноДляВыбора=Истина;
	СостояниеОбъект.Цвет=Новый ХранилищеЗначения(Новый Цвет(255, 180, 180));
	СостояниеОбъект.ОбменДанными.Загрузка=Истина;
	Попытка
		СостояниеОбъект.Записать();
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка обновления элемента <%1>: %2'"),,,,, СостояниеОбъект, ОписаниеОшибки());
	КонецПопытки; 
	
КонецПроцедуры // ВыполнитьНачальноеЗаполнение()

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Scan_СтатусыЗаявокНаРаботы.Ссылка КАК Ссылка,
	               |	Scan_СтатусыЗаявокНаРаботы.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.Scan_СтатусыЗаявокНаРаботы КАК Scan_СтатусыЗаявокНаРаботы
	               |ГДЕ
	               |	Scan_СтатусыЗаявокНаРаботы.ПометкаУдаления = ЛОЖЬ
	               |	И Scan_СтатусыЗаявокНаРаботы.НедоступноДляВыбора = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Scan_СтатусыЗаявокНаРаботы.РеквизитДопУпорядочивания";
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.Наименование);
	КонецЦикла;
	
КонецПроцедуры

Функция ЦветаСостоянийЗаявкиНаДействие() Экспорт
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Scan_СтатусыЗаявокНаРаботы.Ссылка КАК Состояние,
	|	Scan_СтатусыЗаявокНаРаботы.Цвет КАК Цвет
	|ИЗ
	|	Справочник.Scan_СтатусыЗаявокНаРаботы КАК Scan_СтатусыЗаявокНаРаботы";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.Состояние, Выборка.Цвет.Получить());
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ПОЛУЧЕНИЯ СПИСКОВ РЕКВИЗИТОВ ОБЪЕКТА

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности и уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов и вариант проверки его заполнения
//  (1-Обязательный, 2-Уникальный, 3-Уникальный и обязательный). Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Наименование");
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

//rarus kolg 20.11.2017 TLMS 9428 --