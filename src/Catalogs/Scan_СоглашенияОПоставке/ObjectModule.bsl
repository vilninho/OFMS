Перем СтруктураИзмененныеРеквизиты;	// rarus tenkam 30.09.2020 mantis 16181 +
Перем СтарыйСтатус; //rarus vikhle 22.01.2021 mt 16981

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
	//rarus vikhle 03.08.2020 mt 16181 +++
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Scan_СоглашенияОПоставке") Тогда
		//rarus vikhle 12.08.2021 17834 +++
		Если ДанныеЗаполнения.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU Тогда
			// Заполнения заявки на СОП на основании заявки на СОП (SRU)
			Если Не ДанныеЗаполнения.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено Тогда
				ВызватьИсключение Нстр("ru = 'Создание заявок на СОП возможно на основании заявок на СОП (SRU) в статусе ""Одобрено"".'");
			КонецЕсли;	
			
			// rarus tenkam 17.08.2021 mantis 17834 +++ Список продуктов может быть не из заявки-основания, а из подобранных
			//ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов();
			//МассивПродуктовОснования = ДанныеЗаполнения.СписокПродуктов.ВыгрузитьКолонку("Продукт");
			//МожноСоздатьЗаявку = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(МассивПродуктовОснования, ПроверяемыеРеквизиты);
			//Если Не МожноСоздатьЗаявку Тогда
			//	ВызватьИсключение Нстр("ru = 'Невозможно создать заявку на СОП: указанные продукты нельзя применять совместно в 1 заявке.'");	
			//КонецЕсли;	
			// rarus tenkam 17.08.2021 mantis 17834 ---
			
			Наименование = "Заявка на СОП";
			ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП;
			Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП;
			Основание = ДанныеЗаполнения;
			
			Дилер = ДанныеЗаполнения.Дилер;
			Контрагент = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Дилер);			
			РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер);
			ЗакрепленныйМенеджерОКП = Документы.Scan_ЗакреплениеМенеджеровОКПЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер);
			
			СтатусЗаявки = Перечисления.Scan_ТипыСтатусовЗаявки.Normal;
			Автор = Пользователи.ТекущийПользователь();
			
			SORDER = Справочники.Scan_ОпцииПродуктов.Нет_SOrder;
			FFU = Справочники.Scan_ОпцииПродуктов.Нет_FFU;
			
			ЗаявкаНаБУПродукты = ДанныеЗаполнения.ЗаявкаНаБУПродукты;
			
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.СписокПродуктов Цикл
				ЗаполнитьЗначенияСвойств(СписокПродуктов.Добавить(), СтрокаТЧ);	
			КонецЦикла;	
			
			Если СписокПродуктов.Количество() > 0 Тогда
				
				УникальностьСпецификации = СписокПродуктов[0].Продукт.ТипСпецификации;
				Если УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
					СтандартнаяСпецификация  = СписокПродуктов[0].Продукт.СтандартнаяСпецификация;
				КонецЕсли;
				
				Если СписокПродуктов[0].Продукт.МодельПродукта.МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania Тогда
					МодельСтрокой = Строка(СписокПродуктов[0].Продукт.МодельПродукта);
					Если    СтрНайти(МодельСтрокой, "*")
						Или СтрНайти(МодельСтрокой, "\")
						Или СтрНайти(МодельСтрокой, "/")
						Тогда
						Модель = СписокПродуктов[0].Продукт.МодельПродукта;
					Иначе
						НаименованиеМодели = Лев(СокрЛП(Строка(СписокПродуктов[0].Продукт.МодельПродукта)),10);
						Модель = Справочники.Scan_МоделиПродуктов.НайтиПоНаименованию(НаименованиеМодели,Истина);
					КонецЕсли;
					
				Иначе
					Модель = СписокПродуктов[0].Продукт.МодельПродукта; 	
				КонецЕсли;
				
			Иначе
				УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std");
			КонецЕсли;
			
			Количество = СписокПродуктов.Итог("Количество");
			
			Возврат;
		КонецЕсли;	
		//rarus vikhle 12.08.2021 17834 ---
		
		FFU = ДанныеЗаполнения.FFU;
		IDПродуктаКП = ДанныеЗаполнения.IDПродуктаКП;
		SORDER = ДанныеЗаполнения.SORDER;
		//Автор = ДанныеЗаполнения.Автор;
		//Дилер = ДанныеЗаполнения.Дилер; //rarus vikhle 26.05.2021 m 17653 заполняется в обработке корректировки
		КоличествоРабочихДней = ДанныеЗаполнения.КоличествоРабочихДней;
		КоммерческоеПредложениеSPORT = ДанныеЗаполнения.КоммерческоеПредложениеSPORT;
		КонечныйКлиент = ДанныеЗаполнения.КонечныйКлиент;
		КонечныйКлиентКомпания = ДанныеЗаполнения.КонечныйКлиентКомпания;
		Контрагент = ДанныеЗаполнения.Контрагент;
		Кузовостроитель = ДанныеЗаполнения.Кузовостроитель;
		МенеджерПоПродукту = ДанныеЗаполнения.МенеджерПоПродукту;
		Модель = ДанныеЗаполнения.Модель;
		НомерКоммерческогоПредложенияSPORT = ДанныеЗаполнения.НомерКоммерческогоПредложенияSPORT;
		НомерКоммерческогоПредложенияSPORTДляЗаказа = ДанныеЗаполнения.НомерКоммерческогоПредложенияSPORTДляЗаказа;
		Подразделение = ДанныеЗаполнения.Подразделение;
		ПродавецДилера = ДанныеЗаполнения.ПродавецДилера;
		ЗаявкаНаАвтобусы = ДанныеЗаполнения.ЗаявкаНаАвтобусы;	// rarus tenkam 21.06.2021 mnatis 17742 +
		РегиональныйМенеджер = ДанныеЗаполнения.РегиональныйМенеджер;
		ЗакрепленныйМенеджерОКП = ДанныеЗаполнения.ЗакрепленныйМенеджерОКП;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Основание = ДанныеЗаполнения.Ссылка;
		СтавкаНДС = ДанныеЗаполнения.СтавкаНДС;
		ЗаявкаНаБУПродукты = ДанныеЗаполнения.ЗаявкаНаБУПродукты; //rarus vikhle 13.05.2021 mt 17733
		СтандартнаяСпецификация = ДанныеЗаполнения.СтандартнаяСпецификация;
		//rarus vikhle 14.12.2020 mt 16977 +++
		//rarus vikhle 10.08.2021 mt 17637 +++
		//Если СписокПродуктов.Количество() = 1 И ДанныеЗаполнения.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично Тогда
		Если ДанныеЗаполнения.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично Тогда
			
			//rarus vikhle 13.10.2021 mt 18076 +++
			Статус = СтатусНаОсновеСопИсполненЧастично(ДанныеЗаполнения);
			
			//ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Дилер, "ВидДилера");
			//		
			//Запрос = Новый Запрос;
			//Запрос.Текст = "ВЫБРАТЬ
			//               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
			//               |	ВЫБОР
			//               |		КОГДА &СобственныйДилер
			//               |			ТОГДА ВЫБОР
			//               |					КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
			//               |						ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
			//               |					ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
			//               |				КОНЕЦ
			//               |		ИНАЧЕ ВЫБОР
			//               |				КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
			//               |					ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
			//               |				ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
			//               |			КОНЕЦ
			//               |	КОНЕЦ КАК ДатаПродажи
			//               |ПОМЕСТИТЬ ДатыПродажи
			//               |ИЗ
			//               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
			//               |ГДЕ
			//               |	Scan_СводнаяИнформацияПоПродукту.Продукт В(&ПродуктыЗаявки)
			//               |;
			//               |
			//               |////////////////////////////////////////////////////////////////////////////////
			//               |ВЫБРАТЬ
			//               |	КОЛИЧЕСТВО(ДатыПродажи.Продукт) КАК КолВоПроданныхПродуктов
			//               |ИЗ
			//               |	ДатыПродажи КАК ДатыПродажи
			//               |ГДЕ
			//               |	НЕ ДатыПродажи.ДатаПродажи = ДАТАВРЕМЯ(1, 1, 1)";
			//Запрос.УстановитьПараметр("СобственныйДилер", ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный); 
			//Запрос.УстановитьПараметр("ПродуктыЗаявки",   ОбщегоНазначения.ВыгрузитьКолонку(СписокПродуктов, "Продукт"));
			//
			//РезультатЗапроса = Запрос.Выполнить();
			//Выборка = РезультатЗапроса.Выбрать();
			//Если Выборка.Следующий() И Выборка.КолВоПроданныхПродуктов = СписокПродуктов.Количество() Тогда
			//	Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Исполнен;	
			//Иначе
			//	Статус = ДанныеЗаполнения.Статус;				
			//КонецЕсли;
			//rarus vikhle 13.10.2021 mt 18076 ---
		//rarus vikhle 28.02.2021 mt 17186 +++	
		ИначеЕсли ДанныеЗаполнения.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП Тогда 
			СтатусДоЗапросаИзменений = Справочники.Scan_СоглашенияОПоставке.ПолучитьСтатусДоЗапросаИзменений(ДанныеЗаполнения.Ссылка);
			//rarus vikhle 13.10.2021 mt 18076 +++
			//Статус = ?(ЗначениеЗаполнено(СтатусДоЗапросаИзменений),СтатусДоЗапросаИзменений,ДанныеЗаполнения.Статус);
			
			Если СтатусДоЗапросаИзменений = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично Тогда
				Статус = СтатусНаОсновеСопИсполненЧастично(ДанныеЗаполнения);
			ИначеЕсли ЗначениеЗаполнено(СтатусДоЗапросаИзменений) Тогда
				Статус = СтатусДоЗапросаИзменений;
			Иначе
				Статус = ДанныеЗаполнения.Статус;
			КонецЕсли; 	
			//rarus vikhle 13.10.2021 mt 18076 ---
			
			
		//rarus vikhle 28.02.2021 mt 17186 ---	
		Иначе	
			Статус = ДанныеЗаполнения.Статус;
		КонецЕсли;	
		//rarus vikhle 14.12.2020 mt 16977 ---
		СтатусЗаявки = ДанныеЗаполнения.СтатусЗаявки;
		ТипСоглашенияОПоставке = ДанныеЗаполнения.ТипСоглашенияОПоставке;
		УникальностьСпецификации = ДанныеЗаполнения.УникальностьСпецификации;
		ЦветКабины = ДанныеЗаполнения.ЦветКабины;
		ЦветФальшрадиаторнойРешетки = ДанныеЗаполнения.ЦветФальшрадиаторнойРешетки;
		ТребуетсяРазмещениеЗаказа = ДанныеЗаполнения.ТребуетсяРазмещениеЗаказа; //rarus vikhle 01.09.2020 mt 16181
		Основание = ДанныеЗаполнения.Ссылка;
		ИндексРазделителяНомераСоглашения = СтрНайти(ДанныеЗаполнения.НомерСоглашенияОПоставке,"-"); 
		Если НЕ ИндексРазделителяНомераСоглашения = 0 Тогда
			//имеются доп соглашения, прибавляем 1
			СтарыйНомерДопСоглашения = Число(Прав(ДанныеЗаполнения.НомерСоглашенияОПоставке,СтрДлина(ДанныеЗаполнения.НомерСоглашенияОПоставке)- ИндексРазделителяНомераСоглашения));
			НомерСоглашенияОПоставке = Лев(ДанныеЗаполнения.НомерСоглашенияОПоставке,СтрДлина(ДанныеЗаполнения.НомерСоглашенияОПоставке)
										- СтрДлина(СтарыйНомерДопСоглашения)) 
										+ (СтарыйНомерДопСоглашения + 1); 	
		Иначе
			//первое доп соглашение
			НомерСоглашенияОПоставке = ДанныеЗаполнения.Код + "-1";	
		КонецЕсли;	
		//Наименование = СокрЛП("СОП / " + ?(ЗначениеЗаполнено(Дилер),Дилер.Наименование + " / ","")
		Наименование = СокрЛП(?(ТипСоглашенияОПоставке.Пустая(),"",Строка(ТипСоглашенияОПоставке) + " / ") //rarus vikhle 05.11.2020 mt 16723
						+ ?(ЗначениеЗаполнено(Дилер),Дилер.Наименование + " / ","")
						+ ?(ЗначениеЗаполнено(Модель),Модель.Наименование + " / ","") 
						+ ?(ЗначениеЗаполнено(КонечныйКлиент),КонечныйКлиент.Наименование + " / ","") 
						+ ?(ЗначениеЗаполнено(НомерСоглашенияОПоставке),"(" + НомерСоглашенияОПоставке + ")",""));
		//rarus vikhle 03.08.2020 mt 16181 ---
	//rarus vikhle 22.12.2020 mt 16997 +++	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Scan_СпециальныеУсловия") Тогда
		ТекущийПользователь		= ПараметрыСеанса.ТекущийПользователь;//rarus vikhle 23.12.2020 mt 16997
		
		//rarus vikhle 25.01.2021 mt 16929 +++
		//Если НЕ ДанныеЗаполнения.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено Тогда
		//	ВызватьИсключение "Ввод заявок на СОП разрешен только для СУ в статусе ""Одобрено""!";
		//КонецЕсли;
		
		Если НЕ ДанныеЗаполнения.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП
			И НЕ ДанныеЗаполнения.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП Тогда
			ВызватьИсключение "Ввод заявок на СОП разрешен только для СУ в статусах ""Одобрено, есть в СОП"" или ""Одобрено, нет в СОП""!";
		КонецЕсли;
		//rarus vikhle 25.01.2021 mt 16929 ---
		
		//rarus vikhle 23.12.2020 mt 16997 +++
		Если ТекущийПользователь.ПользовательСотрудник Тогда
			ВызватьИсключение "Текущий пользователь является сотрудником Scania, ввод заявок на СОП запрещен.";	
		КонецЕсли;	
		//rarus vikhle 23.12.2020 mt 16997 ---
		
		Если ДанныеЗаполнения.СрокДействияСпециальныхУсловий < НачалоДня(ТекущаяДатаСеанса()) Тогда
			ВызватьИсключение "Срок действия СУ истек.";
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_ИспользованиеСпециальныхУсловий.Ссылка КАК Заявка
		               |ПОМЕСТИТЬ Заявки
		               |ИЗ
		               |	КритерийОтбора.Scan_ИспользованиеСпециальныхУсловий(&СУ) КАК Scan_ИспользованиеСпециальныхУсловий
		               |ГДЕ
		               |	НЕ Scan_ИспользованиеСпециальныхУсловий.Ссылка.Статус В (&МассивСтатусов)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(СУММА(Scan_СоглашенияОПоставкеСписокПродуктов.Количество),0) КАК КоличествоПрименений
		               |ИЗ
		               |	Заявки КАК Заявки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
		               |		ПО Заявки.Заявка = Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка
		               |ГДЕ
		               |	Scan_СоглашенияОПоставкеСписокПродуктов.СпециальныеУсловия = &СУ";
		МассивСтатусов = Новый Массив;
		//Массив статусов, с которыми не учитываются заявки 
		МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
		МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
		МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
		МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
		//МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП); //rarus vikhle 25.01.2021 mt 16929
		Запрос.УстановитьПараметр("МассивСтатусов",МассивСтатусов);
		Запрос.УстановитьПараметр("СУ",ДанныеЗаполнения);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.КоличествоПрименений >= ДанныеЗаполнения.КоличествоПродуктов Тогда
				ВызватьИсключение "Максимально допустимое количество применений СУ уже достигнуто, создание заявки невозможно.";	
			КонецЕсли;	
		КонецЕсли;	
		
		Наименование			= "Заявка на СОП";
		Статус					= Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП;
		ТипСоглашенияОПоставке	= Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП;
		СтатусЗаявки			= Перечисления.Scan_ТипыСтатусовЗаявки.Normal;
		
		Автор					= ТекущийПользователь.КонтактноеЛицоКомпании;
		ПродавецДилера			= ТекущийПользователь.КонтактноеЛицоКомпании;
		ТаблицаКомпаний			= РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ТекущийПользователь,Истина);
		Если ТаблицаКомпаний.Количество()>0 Тогда
			Дилер		= ТаблицаКомпаний[0].Компания;
			Контрагент	= ТаблицаКомпаний[0].Контрагент;
		КонецЕсли; 
		
		ЗаявкаНаАвтобусы = ДанныеЗаполнения.СУНаАвтобусы;	// rarus tenkam 21.06.2021 mnatis 17742 +
		
		Если НЕ Дилер.Пустая() Тогда
			// rarus tenkam 21.06.2021 mnatis 17742 +++
			Если ЗаявкаНаАвтобусы Тогда
				РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровДепартаментаПродажАвтобусовЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер);
			Иначе
			// rarus tenkam 21.06.2021 mantis 17742 ---
				РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер);
			КонецЕсли;	// rarus tenkam 21.06.2021 mantis 17742 +
			ЗакрепленныйМенеджерОКП = Документы.Scan_ЗакреплениеМенеджеровОКПЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер); //rarus ozhnik 17458 01.04.2021 + 
		КонецЕсли;
				
		Модель								= ДанныеЗаполнения.Модель;
		УникальностьСпецификации			= ДанныеЗаполнения.УникальностьСпецификации;
		НомерКоммерческогоПредложенияSPORT	= ДанныеЗаполнения.НомерКоммерческогоПредложенияSPORT;
		СтандартнаяСпецификация				= ДанныеЗаполнения.СтандартнаяСпецификация;
		SOrder								= ДанныеЗаполнения.SOrder;
		FFU									= ДанныеЗаполнения.FFU;
		КонечныйКлиент 						= ДанныеЗаполнения.КонечныйКлиент;
		КонечныйКлиентКомпания				= ДанныеЗаполнения.КонечныйКлиентКомпания;
		СтавкаНДС							= ДанныеЗаполнения.СтавкаНДС;
		КоммерческоеПредложениеSPORT		= ДанныеЗаполнения.КоммерческоеПредложениеSPORT;
		//ОтсрочкаПлатежа						= ДанныеЗаполнения.ОтсрочкаПлатежа; //rarus bonmak 13.01.2021 17041
		
		//rarus vikhle 20.01.2021 mt 16981 +++
		//ПриоритетныйСклад					= Дилер.ПриоритетныйСклад;
		ПриоритетныйСклад					= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Дилер,"ПриоритетныйСклад");//rarus vikhle 20.01.2021 mt 16981
		//ПриоритетныйСклад					= РегистрыСведений.Scan_СоответствиеСкладовИМестХранения.ПолучитьСклад(ПриоритетноеМестоХранения);
		//rarus vikhle 20.01.2021 mt 16981 ---
		
		//rarus vikhle 10.08.2021 17637 +++ Закомментировал
		//rarus vikhle 09.06.2021 mt 17637 +++
		//Для Каждого ТекСтрокаСписокПродуктов Из ДанныеЗаполнения.СписокПродуктов Цикл
		//	нСтрока							= СписокПродуктов.Добавить();
		//	нСтрока.Продукт 				= ТекСтрокаСписокПродуктов.Продукт;
		//	нСтрока.Количество 				= 1;
		//	нСтрока.СпециальныеУсловия		= ДанныеЗаполнения;
		//	нСтрока.ЦенаСНДС				= ДанныеЗаполнения.ПрайсDealerNet;
		//	нСтрока.ЦенаБезНДС				= 100 * нСтрока.ЦенаСНДС/ (100 + СтавкаНДС.Ставка);
		//	нСтрока.Себестоимость			= ДанныеЗаполнения.СебестоимостьСНДС;
		//	нСтрока.СкладОтгрузки			= ПриоритетныйСклад;
		//КонецЦикла;	
		//
		//Для Каждого ТекСтрокаУсловияОплаты Из ДанныеЗаполнения.УсловияОплаты Цикл
		//	нСтрока = УсловияОплаты.Добавить();
		//	ЗаполнитьЗначенияСвойств(нСтрока,ТекСтрокаУсловияОплаты);
		//КонецЦикла;
		//rarus vikhle 09.06.2021 mt 17637 ---
		//rarus vikhle 10.08.2021 17637 ---
		
		Количество = СписокПродуктов.Итог("Количество");
		ТребуетсяРазмещениеЗаказа = Ложь;
	//rarus vikhle 22.12.2020 mt 16997 ---	
	//rarus vikhle 11.08.2021 mt 17834 +++	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		// Заполнение заявки на СОП (SRU)
		Если ДанныеЗаполнения.Свойство("ТипЗаявки") Тогда
			ТипСоглашенияОПоставке = ДанныеЗаполнения.ТипЗаявки;
		КонецЕсли;	
		
		Наименование = СокрЛП(Строка(ТипСоглашенияОПоставке) + " / " + Дилер + " (" + НомерСоглашенияОПоставке + ")");
		ОтветственныйЗаРезерв = Пользователи.ТекущийПользователь();
		Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП;
		Если ДанныеЗаполнения.Свойство("ЗаявкаНаБУПродукты") Тогда
			ЗаявкаНаБУПродукты = ДанныеЗаполнения.ЗаявкаНаБУПродукты;
		КонецЕсли;
		
	//rarus vikhle 11.08.2021 mt 17834 ---	
	Иначе
		Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП;
		//УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std; //rarus vikhle 07.12.2021 m 18643
		СтатусЗаявки = Перечисления.Scan_ТипыСтатусовЗаявки.Normal;
		Наименование = "Заявка на СОП";
			
		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
		Автор = ТекущийПользователь.КонтактноеЛицоКомпании;//rarus vikhle 09.09.2020 mt 16181
		Если ТекущийПользователь.ПользовательСотрудник Тогда
			//Заявка на склад
			Сотрудник = ТекущийПользователь.Сотрудник;
			Подразделение = ТекущийПользователь.ПодразделениеОрганизации;
			ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад; 
		Иначе
			//соглашение о поставке
			ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП;
			ТаблицаКомпаний = РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ТекущийПользователь,Истина);
			Если ТаблицаКомпаний.Количество()>0 Тогда
				Дилер = ТаблицаКомпаний[0].Компания;
				Контрагент = ТаблицаКомпаний[0].Контрагент;
				Наименование = Наименование + " " + Дилер;
			КонецЕсли; 
			
			ПродавецДилера = ТекущийПользователь.КонтактноеЛицоКомпании;
			
			Если ЗначениеЗаполнено(Дилер) Тогда
				// rarus tenkam 21.06.2021 mnatis 17742 +++
				Если ЗаявкаНаАвтобусы Тогда
					РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровДепартаментаПродажАвтобусовЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер);
				Иначе
				// rarus tenkam 21.06.2021 mantis 17742 ---
					РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер);
				КонецЕсли;	// rarus tenkam 21.06.2021 mnatis 17742 +
				ЗакрепленныйМенеджерОКП = Документы.Scan_ЗакреплениеМенеджеровОКПЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер); //rarus ozhnik 17458 01.04.2021 + 
			КонецЕсли;
			//ОтсрочкаПлатежа = 30; //rarus bonmak 13.01.2021 17041 
		КонецЕсли;  	
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	СтарыйСтатус = Ссылка.Статус;//rarus vikhle 22.01.2021 mt 16981 //rarus vikhle 11.08.2021 mt 17834 перенес в начало
	
	//rarus vikhle mt 11.08.2020 mt 16181 +++
	Если НЕ ЗначениеЗаполнено(НомерСоглашенияОПоставке) Тогда
		Если ЭтоНовый() Тогда
			УстановитьНовыйКод();
		КонецЕсли;	
		НомерСоглашенияОПоставке = Код;
	КонецЕсли;	
	Если ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП Тогда
		//Наименование = СокрЛП("СОП / " + ?(ЗначениеЗаполнено(Дилер),Дилер.Наименование + " / ","")
		Наименование = СокрЛП(Строка(ТипСоглашенияОПоставке) + " / " //rarus vikhle 05.11.2020 mt 16723
						+ ?(ЗначениеЗаполнено(Дилер),Дилер.Наименование + " / ","")
						+ ?(ЗначениеЗаполнено(Модель),Модель.Наименование + " / ","") 
						+ ?(ЗначениеЗаполнено(КонечныйКлиент),КонечныйКлиент.Наименование + " / ","") 
						+ ?(ЗначениеЗаполнено(НомерСоглашенияОПоставке),"(" + НомерСоглашенияОПоставке + ")",""));
	ИначеЕсли ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад Тогда //rarus vikhle 23.07.2021 mt 17834
		//rarus vikhle 11.11.2020 mt 16181 +++
		Наименование = СокрЛП(Строка(ТипСоглашенияОПоставке) + " / " + Модель.Наименование + " / " 
						+ КонечныйКлиент.Наименование + " / " + "(" + НомерСоглашенияОПоставке + ")");
		//rarus vikhle 11.11.2020 mt 16181 ---				
	//rarus vikhle 23.07.2021 mt 17834 +++
	ИначеЕсли ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU Тогда 	
		Наименование = СокрЛП(Строка(ТипСоглашенияОПоставке) + " / " + Дилер + " (" + НомерСоглашенияОПоставке + ")");	
		Возврат;
	//rarus vikhle 23.07.2021 mt 17834 ---
	КонецЕсли;
	//rarus vikhle mt 11.08.2020 mt 16181 ---
	
	// rarus tenkam 16.06.2021 mantis 17742 +++
	Если ЗначениеЗаполнено(Модель) Тогда
		ЗаявкаНаАвтобусы = Справочники.Scan_МоделиПродуктов.ЭтоМодельАвтобуса(Модель);		
	КонецЕсли;                                                                    		
	// rarus tenkam 16.06.2021 mantis 17742 ---
	
	// rarus tenkam 30.09.2020 mantis 16181 +++
	СтруктураИзмененныеРеквизиты = Новый Структура;
	Если НЕ Отказ И ЗначениеЗаполнено(Договор) И ЗначениеЗаполнено(Договор.IDExternalSystem) Тогда
		Если Ссылка.Статус <> Статус Тогда
			СтруктураИзмененныеРеквизиты.Вставить("СтатусGUID",Статус.IDExternalSystem);
		КонецЕсли;
		
		Если Ссылка.ПродавецДилера <> ПродавецДилера Тогда
			ПродавецДилераПользователь = Справочники.Пользователи.НайтиПоРеквизиту("КонтактноеЛицоКомпании", ПродавецДилера);	
			Если ЗначениеЗаполнено(ПродавецДилераПользователь) Тогда
				ПродавецДилераIDПортала = ПродавецДилераПользователь.КодСотрудникаНаПортале;
				ПродавецДилераЛогинПортала = ПродавецДилераПользователь.ЛогинНаПортале;
				
				СтруктураИзмененныеРеквизиты.Вставить("ПродавецДилераIDПортала", ПродавецДилераIDПортала);
				СтруктураИзмененныеРеквизиты.Вставить("ПродавецДилераЛогинПортала", ПродавецДилераЛогинПортала);	
			КонецЕсли;
		КонецЕсли;
		// rarus tenkam 05.04.2021 mantis 17419 +++
		Если Ссылка.ЗаявкаНаБУПродукты <> ЗаявкаНаБУПродукты Тогда
			СтруктураИзмененныеРеквизиты.Вставить("ЗаявкаНаБУПродукты",ЗаявкаНаБУПродукты);			
		КонецЕсли;
		
		Если Ссылка.ВалютнаяОговорка <> ВалютнаяОговорка Тогда
			СтруктураИзмененныеРеквизиты.Вставить("ВалютнаяОговорка",ВалютнаяОговорка);			
		КонецЕсли;     		
		// rarus tenkam 05.04.2021 mantis 17419 ---
		
		//rarus bonmak 13.01.2021 17041 ++
		//Если Ссылка.ОтсрочкаПлатежа <> ОтсрочкаПлатежа Тогда
		//	СтруктураИзмененныеРеквизиты.Вставить("СрокОплатыОстатка", ОтсрочкаПлатежа); 		
		//КонецЕсли;	
		//rarus bonmak 13.01.2021 17041 --
		Если СписокПродуктов.Количество() = Ссылка.СписокПродуктов.Количество() Тогда	// rarus tenkam 02.12.2020 mantis 16344 +-
			Для Сч = 0 По СписокПродуктов.Количество()-1 Цикл
				Если СписокПродуктов.Получить(Сч).DDS <> Ссылка.СписокПродуктов.Получить(Сч).DDS ИЛИ
					СписокПродуктов.Получить(Сч).ДатаПерерасчета <> Ссылка.СписокПродуктов.Получить(Сч).ДатаПерерасчета Тогда	// rarus tenkam 05.04.2021 mantis 17419 +
					СтруктураИзмененныеРеквизиты.Вставить("GUID", Договор.IDExternalSystem);
					СтруктураИзмененныеРеквизиты.Вставить("ПередатьТЧПродукты", Истина);
					
					Прервать;
									
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;	
		
	//rarus vikhle 27.10.2021 m 18426 +++
	Если НЕ Отказ И ЗначениеЗаполнено(Договор) Тогда	
		
		Если НЕ ОбщегоНазначения.КоллекцииИдентичны(СписокПродуктов, Ссылка.СписокПродуктов, "Продукт, DDS") Тогда
			ДополнительныеСвойства.Вставить("ИзмененаDDS");
		КонецЕсли;
		//rarus vikhle 27.10.2021 m 18426 ---	
	КонецЕсли;
	//rarus vikhle 27.10.2021 m 18426 ---
	
	
	//rarus vikhle 06.04.2021 mt 17546 +++
	//rarus vikhle 16.11.2020 mt 16181 +++
	//ТаблицаПродуктов = СписокПродуктов.Выгрузить(,"Продукт");
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ВЫРАЗИТЬ(ТаблицаПродуктов.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
	//               |ПОМЕСТИТЬ ТаблицаПродуктов
	//               |ИЗ
	//               |	&ТаблицаПродуктов КАК ТаблицаПродуктов
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.ЗаказНаЗавод КАК ЗаказНаЗавод,
	//               |	ТаблицаПродуктов.Продукт КАК Продукт
	//               |ПОМЕСТИТЬ ЗаказыНаЗавод
	//               |ИЗ
	//               |	ТаблицаПродуктов КАК ТаблицаПродуктов
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних(
	//               |				,
	//               |				Изделие В
	//               |					(ВЫБРАТЬ
	//               |						ТаблицаПродуктов.Продукт
	//               |					ИЗ
	//               |						ТаблицаПродуктов КАК ТаблицаПродуктов)) КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних
	//               |		ПО ТаблицаПродуктов.Продукт = Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	ЗаказНаЗавод
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЗаказыНаЗавод.ЗаказНаЗавод КАК ЗаказНаЗавод,
	//               |	Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК ТипЗаказа,
	//               |	ЗаказыНаЗавод.Продукт КАК Продукт
	//               |ИЗ
	//               |	ЗаказыНаЗавод КАК ЗаказыНаЗавод
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
	//               |				,
	//               |				Заказ В
	//               |						(ВЫБРАТЬ
	//               |							ЗаказыНаЗавод.ЗаказНаЗавод КАК ЗаказНаЗавод
	//               |						ИЗ
	//               |							ЗаказыНаЗавод КАК ЗаказыНаЗавод)
	//               |					И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
	//               |		ПО ЗаказыНаЗавод.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
	//               |ИТОГИ
	//               |	ВЫБОР
	//               |		КОГДА КОЛИЧЕСТВО(ТипЗаказа) = КОЛИЧЕСТВО(Продукт)
	//               |				И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТипЗаказа) = 1
	//               |				И НЕ МАКСИМУМ(ТипЗаказа) ЕСТЬ NULL
	//               |			ТОГДА МАКСИМУМ(ТипЗаказа)
	//               |	КОНЕЦ КАК ТипЗаказа
	//               |ПО
	//               |	ОБЩИЕ";
	//Запрос.УстановитьПараметр("ТаблицаПродуктов",ТаблицаПродуктов);
	//РезультатЗапроса = Запрос.Выполнить();
	//Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Если Выборка.Следующий() Тогда
	//	ТипЗаказаНаЗавод = Выборка.ТипЗаказа;	
	//КонецЕсли;	
	//rarus vikhle 16.11.2020 mt 16181 ---
	//rarus vikhle 06.04.2021 mt 17546 ---
	// rarus tenkam 30.09.2020 mantis 16181 ---
	//СтарыйСтатус = Ссылка.Статус;//rarus vikhle 22.01.2021 mt 16981 //rarus vikhle 11.08.2021 mt 17834 перенес в начало процедуры
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	НаДату				= ТекущаяДата();
	ПривязанныеЗаказы	= Новый Массив; //rarus vikhle 03.09.2021 mt 17933 Массив заказов продуктов, которые привязываются к текущей заявке в регистре "Scan_СоставСоглашенийОПоставке" 
	СписокПродуктовТЗ	= СписокПродуктов.Выгрузить(); //rarus vikhle 17.01.2022 m 18269  
	
	Справочники.Scan_СоглашенияОПоставке.ЗаписьЗначенияРегистраСведения(Ссылка, Статус, НаДату); //rarus vikhle 11.08.2021 mt 17834 перенес в начало 
	
	//rarus vikhle 11.08.2021 mt 17834 +++ перенес выше
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	   |	ВЫРАЗИТЬ(СписокПродуктов.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
	   |	СписокПродуктов.DDS КАК DDS,
	   |	СписокПродуктов.СкладОтгрузки КАК СкладОтгрузки,
	   // rarus vikhle 17.01.2022 m 18269 +++
	   |	СписокПродуктов.Себестоимость КАК Себестоимость
	   // rarus vikhle 17.01.2022 m 18269 ---
	   |ПОМЕСТИТЬ СписокПродуктов
	   |ИЗ
	   |	&СписокПродуктов КАК СписокПродуктов
	   |ГДЕ
	   |	СписокПродуктов.Продукт ССЫЛКА Справочник.Scan_Изделия
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	СписокПродуктов.Продукт КАК Продукт,
	   |	СписокПродуктов.DDS КАК DDS,
	   |	СписокПродуктов.СкладОтгрузки КАК СкладОтгрузки,
	   |	СписокПродуктов.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	   |	СписокПродуктов.Продукт.БУ КАК БУ,
	   //rarus vikhle 11.08.2021 mt 17834 +++
	   |	СписокПродуктов.Продукт.СоглашениеОПоставке КАК Заявка,
	   //rarus vikhle 11.08.2021 mt 17834 ---
	   // rarus vikhle 17.01.2022 m 18269 +++
	   |	СписокПродуктов.Себестоимость КАК Себестоимость
	   // rarus vikhle 17.01.2022 m 18269 ---
	   |ИЗ
	   |	СписокПродуктов КАК СписокПродуктов";
				   
	//Запрос.УстановитьПараметр("СписокПродуктов",СписокПродуктов.Выгрузить());			   
	Запрос.УстановитьПараметр("СписокПродуктов", СписокПродуктовТЗ);//rarus vikhle 17.01.2022 m 18269
	ТаблицаИзделий = Запрос.Выполнить().Выгрузить();
	//rarus vikhle 11.08.2021 mt 17834 ---
	
#Область ЗаявкаНаСОПSRU
	//rarus vikhle 23.07.2021 mt 17834 +++
	// Алгоритмы для заявки на СОП SRU
	Если ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU Тогда
		Если Статус <> СтарыйСтатус Тогда
			Если Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено Тогда
				
				РегистрыСведений.Scan_СоставСоглашенийОПоставке.ЗаписатьСоставСоглашения(ТаблицаИзделий, Ссылка, Отказ);
				
				Если Не Отказ Тогда 
					Для Каждого СтрокаТаблицы Из ТаблицаИзделий Цикл
						Если СтрокаТаблицы.Заявка <> Ссылка Тогда
							ПродуктОбъект = СтрокаТаблицы.Продукт.ПолучитьОбъект();
							ПродуктОбъект.Заблокировать();
							ПродуктОбъект.СоглашениеОПоставке = Ссылка;
							
							// rarus vikhle 21.03.2022 m 18979 +++
							Если ДополнительныеСвойства.Свойство("ЗаявкаНаСОППродуктовДляРезерва") Тогда
								ТекстКомментария = СтрШаблон(Нстр("ru = 'EX ""%1"" (""%2"")'"), 
															ДополнительныеСвойства.ЗаявкаНаСОППродуктовДляРезерва.КонечныйКлиент, 
															ДополнительныеСвойства.ЗаявкаНаСОППродуктовДляРезерва.Дилер);
								
								Если ЗначениеЗаполнено(ПродуктОбъект.Комментарий) Тогда
									Если НЕ СтрЗаканчиваетсяНа(ПродуктОбъект.Комментарий, ".") Тогда
										ПродуктОбъект.Комментарий = ПродуктОбъект.Комментарий + ". " + ТекстКомментария;  	
									Иначе
										ПродуктОбъект.Комментарий = ПродуктОбъект.Комментарий + " " + ТекстКомментария;	
									КонецЕсли;
								Иначе
									ПродуктОбъект.Комментарий = ТекстКомментария;	
								КонецЕсли;	
									
							КонецЕсли;	
							// rarus vikhle 21.03.2022 m 18979 ---
							
							Попытка
								ПродуктОбъект.Записать()	
							Исключение	
								СообщениеОбОшибке = ОписаниеОшибки();	
							КонецПопытки;	
						КонецЕсли;	
					КонецЦикла;	
				КонецЕсли;	
				
			ИначеЕсли Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен ИЛИ
				Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие КАК Продукт,
				               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке КАК Заявка
				               |ИЗ
				               |	РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, Изделие В (&ПродуктыТекущейЗаявки)) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних";
				Запрос.УстановитьПараметр("ПродуктыТекущейЗаявки",ТаблицаИзделий.ВыгрузитьКолонку("Продукт"));
				ТаблицаАктуальныхЗаявок = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаТаблицы Из ТаблицаИзделий Цикл
						Если СтрокаТаблицы.Заявка <> Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка() Тогда
							ПродуктОбъект = СтрокаТаблицы.Продукт.ПолучитьОбъект();
							ПродуктОбъект.Заблокировать();
							ПродуктОбъект.СоглашениеОПоставке = Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
							Попытка
								ПродуктОбъект.Записать()	
							Исключение	
								СообщениеОбОшибке = ОписаниеОшибки();	
							КонецПопытки;	
						КонецЕсли;	
						
						СтрокаТаблицыЗаявок = ТаблицаАктуальныхЗаявок.Найти(СтрокаТаблицы.Продукт);
						Если СтрокаТаблицыЗаявок <> Неопределено И СтрокаТаблицыЗаявок.Заявка = Ссылка Тогда
							НоваяЗапись = РегистрыСведений.Scan_СоставСоглашенийОПоставке.СоздатьМенеджерЗаписи();
							НоваяЗапись.Изделие = СтрокаТаблицы.Продукт;
							НоваяЗапись.Период = НаДату;
							НоваяЗапись.СоглашениеОПоставке = Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
							НоваяЗапись.Записать();
						КонецЕсли;	
						
					КонецЦикла;
				
			КонецЕсли;	
		КонецЕсли;	
		
		Возврат;
	КонецЕсли;	
	//rarus vikhle 23.07.2021 mt 17834 ---
#КонецОбласти	

	//rarus vikhle 14.05.2021 mt 17733 +++
	НужноУстановитьDDДляБУИАвтобусов = ДополнительныеСвойства.Свойство("БылСозданДоговор") И ДополнительныеСвойства.БылСозданДоговор;
	ВидПродуктаАвтобус = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус");
	ДатаДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор,"ДатаНачала");
	//rarus vikhle 14.05.2021 mt 17733 ---
	
	//rarus vikhle 14.08.2020 mt 16181 +++
	
	//rarus ozhnik 15888  26.08.2020 + 
	//Для статусов отменен, отказ, расторгнут нужно очистить привязку изделий
	НужноОтвязать = ложь;
	ТаблицаАктуальныхЗаявок = Неопределено;//rarus vikhle 05.02.2021 mt 16181
	Если Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут тогда
		//rarus vikhle 05.02.2021 mt 16181 +++
		//Получим актуальные привязанные заявки продуктов
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие КАК Продукт,
		               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке КАК Заявка
		               |ИЗ
		               |	РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, Изделие В (&ПродуктыТекущейЗаявки)) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних";
		Запрос.УстановитьПараметр("ПродуктыТекущейЗаявки",ТаблицаИзделий.ВыгрузитьКолонку("Продукт"));
		ТаблицаАктуальныхЗаявок = Запрос.Выполнить().Выгрузить();
		//rarus vikhle 05.02.2021 mt 16181 ---
		
		НужноОтвязать = истина;
		//rarus vikhle 02.09.2020 mt 16181 +++
		Если НЕ Договор.Пустая() Тогда
			Если НЕ ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор,"ДатаОкончания")) Тогда //rarus vikhle 05.02.2021 mt 16181 чтобы не перезаписывалась дата окончания
				ДоговорОбъект = Договор.ПолучитьОбъект();
				ДоговорОбъект.ДатаОкончания = ТекущаяДатаСеанса();
				Попытка
					ДоговорОбъект.Записать();
				Исключение
					ТекстОшибки = "Произошла ошибка при записи текущего СОП: " + ОписаниеОшибки(); 
					Сообщить(ТекстОшибки);
					ЗаписьЖурналаРегистрации("Запись договора взаиморасчетов",
												УровеньЖурналаРегистрации.Ошибка,,,
												ТекстОшибки);
				КонецПопытки;
			КонецЕсли;							
		КонецЕсли;								
		 //rarus vikhle 02.09.2020 mt 16181 ---							
	 ИначеЕсли НЕ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП //rarus vikhle 10.11.2020 
		 И НЕ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда //rarus vikhle 26.10.2021 m 18426 
		РегистрыСведений.Scan_СоставСоглашенийОПоставке.ЗаписатьСоставСоглашения(ТаблицаИзделий, Ссылка, Отказ, ПривязанныеЗаказы); //rarus vikhle 14.12.2020 mt 16977 добавил параметр отказ //rarus vikhle 03.09.2021 mt 17933 + ПривязанныеЗаказы
	ИначеЕсли Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП Тогда //rarus vikhle 10.11.2020 
		//rarus vikhle 29.01.2021 mt 16929 +++
		Если ДополнительныеСвойства.Свойство("СписокПродуктовДоИзменений") Тогда
			Справочники.Scan_СпециальныеУсловия.ОбновитьСУ(ДополнительныеСвойства.СписокПродуктовДоИзменений,
															СписокПродуктов.Выгрузить(,"СпециальныеУсловия"));
		КонецЕсли;												
		//rarus vikhle 29.01.2021 mt 16929 ---												
		Возврат; //rarus vikhle 10.11.2020
	КонецЕсли;
	
	//rarus vikhle 14.12.2020 mt 16977 +++
	Если Отказ Тогда
		ВывестиСообщениеПол(НСтр("ru = 'Произошла ошибка при записи заявки.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 14.12.2020 mt 16977 ---
	
	//rarus ozhnik 15888 26.08.2020 - 
	Для Каждого СтрокаТаблицы Из ТаблицаИзделий Цикл 
		//rarus vikhle 14.05.2021 m 17733 +++
		КлючевыеДаты = Новый Структура;
		//rarus vikhle 14.05.2021 m 17733 ---
		
		ДатаDDS = Неопределено; //rarus vikhle 26.10.2021 m 18426
		
		//rarus agar 18.08.2020 16138 ++
		НадоЗаписатьПродукт = Ложь;
		//ПродуктОбъект = СтрокаТаблицы.Продукт.ПолучитьОбъект(); //rarus vikhle 22.10.2020 mt 16181 
		Если Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
			ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
			ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут 
			ИЛИ Статус	=	Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда
			//rarus vikhle 22.10.2020 mt 16181 +++
			//ПродуктОбъект = СтрокаТаблицы.Продукт.ПолучитьОбъект(); //rarus vikhle 27.10.2021 m 18426 //rarus vikhle 02.11.2021 m 18503
			Если НЕ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда
				//rarus vikhle 05.02.2021 mt 16181 +++ Продукты, которые привязаны к другой заявке, не отвязываем 
				Если ТаблицаАктуальныхЗаявок <> Неопределено Тогда
					СтрокаТаблицыЗаявок = ТаблицаАктуальныхЗаявок.Найти(СтрокаТаблицы.Продукт);
					Если СтрокаТаблицыЗаявок <> Неопределено И СтрокаТаблицыЗаявок.Заявка <> Ссылка Тогда
						Продолжить;	
					КонецЕсли;	 
				КонецЕсли; 
				//rarus vikhle 05.02.2021 mt 16181 ---
				Документы.Scan_УстановкаПлановыхЦенПродукта.ОтменитьДокументУстановкиЦенПоПродукту(СтрокаТаблицы.Продукт);	 
								
				//rarus vikhle 14.05.2021 mt 17733 +++ очистка DD для БУ и автобусов при расторжении заявки с СОП
				Если НЕ Договор.Пустая()
					И ((СтрокаТаблицы.Продукт.БУ И ЗаявкаНаБУПродукты) ИЛИ СтрокаТаблицы.Продукт.ТипПродукта.ВидПродукта = ВидПродуктаАвтобус) Тогда
					КлючевыеДаты.Вставить("DD",Дата(1,1,1));
				КонецЕсли;
				//rarus vikhle 14.05.2021 mt 17733 ---
				
				//Rarus bonmak 04.02.2022 18590 ++
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(СтрокаТаблицы.Продукт, 
										Перечисления.Scan_ОбъектыКлючевыхДат.Изделие, Дата('00010101'),
										Перечисления.Scan_КлючевыеДаты.ВнутреннийРезервДилера);
				//Rarus bonmak 04.02.2022 18590 --

				//rarus vikhle 26.10.2021 m 18426 +++
				
				ПродуктОбъект = СтрокаТаблицы.Продукт.ПолучитьОбъект();//rarus vikhle 02.11.2021 m 18503
				
				ПродуктОбъект.КлиентСоглашенияОПоставке = Справочники.Scan_Контрагенты.ПустаяСсылка();   
				ПродуктОбъект.СоглашениеОПоставке = Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
				ПродуктОбъект.СОП = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
				ПродуктОбъект.КомментарийДилера = ""; // rarus vikhle 09.11.2021 m 18485
				
				НадоЗаписатьПродукт = Истина; 
				//rarus vikhle 26.10.2021 m 18426 ---
				
				// rarus vikhle 17.01.2022 m 18269 +++
				//РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.УдалитьЗаписьПоПродукту(СтрокаТаблицы.Продукт); // rarus vikhle 21.12.2021 m 18269
				РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(СтрокаТаблицы.Продукт, 0);
				// rarus vikhle 17.01.2022 m 18269 ---
			КонецЕсли;
			//rarus vikhle 22.10.2020 mt 16181 ---
			//rarus vikhle 15.12.2020 mt 16977 +++
			//rarus vikhle 26.10.2021 m 18426 +++
			//Если Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда 
			//	ДатаDDS = СтрокаТаблицы.DDS;	
			//Иначе	
			//	ДатаDDS = Дата(1,1,1);
			//КонецЕсли;
			
			Если НЕ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда 
				ДатаDDS = Дата(1,1,1);
			КонецЕсли;
			//rarus vikhle 26.10.2021 m 18426 ---
			
			//ПродуктОбъект = СтрокаТаблицы.Продукт.ПолучитьОбъект();
			//rarus vikhle 14.12.2020 mt 16977 ---
			
			//rarus vikhle 26.10.2021 m 18426 +++
			//rarus vikhle 02.09.2020 mt 16181 +++
			//ПродуктОбъект.КлиентСоглашенияОПоставке = Справочники.Scan_Контрагенты.ПустаяСсылка();   
			//ПродуктОбъект.СоглашениеОПоставке = Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
			//ПродуктОбъект.СОП = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();	// rarus tenkam 06.10.2020 mantis 16181 +-
			//НадоЗаписатьПродукт = Истина; 
			 //rarus vikhle 02.09.2020 mt 16181 ---
			 //rarus vikhle 26.10.2021 m 18426 ---
			 		 
		Иначе
			ПродуктОбъект = СтрокаТаблицы.Продукт.ПолучитьОбъект(); //rarus vikhle 22.10.2020 mt 16181
			ДатаDDS = СтрокаТаблицы.DDS;
			//rarus vikhle 16.09.2020 mt 16526 +++
			ЗаказНаЗавод = СтрокаТаблицы.Продукт.ЗаказНаЗавод;	
			//rarus vikhle 22.01.2021 mt 16981 +++
			//ПродуктСНадстройкой = Справочники.Scan_ТипыПродуктов.ПолучитьПризнакНаличияНастройки(СтрокаТаблицы.Продукт.ТипПродукта);
			//Если НЕ ПродуктСНадстройкой = Неопределено И НЕ ПродуктСНадстройкой Тогда
			//	Если НЕ ЗаказНаЗавод.Пустая() Тогда
			//		ОбъектЗаказ = ЗаказНаЗавод.ПолучитьОбъект();
			//		Если НЕ ОбъектЗаказ.СкладОтгрузки = СтрокаТаблицы.СкладОтгрузки Тогда  
			//			//rarus agar 11.11.2020 16526 ++
			//			Если ОбъектЗаказ.ЗапретНаИзменениеСкладаОтгрузки Тогда
			//				ТекстОшибки = "Произошла ошибка при записи заказа на завод: Попытка изменения склада отгрузки при установленном запрете на изменение."; 
			//				Сообщить(ТекстОшибки);
			//				ЗаписьЖурналаРегистрации("Запись заказа на завод",УровеньЖурналаРегистрации.Ошибка,,ЗаказНаЗавод,ТекстОшибки);
			//				Отказ = Истина;
			//			Иначе
			//				ОбъектЗаказ.СкладОтгрузки = СтрокаТаблицы.СкладОтгрузки;
			//				Попытка
			//					ОбъектЗаказ.Записать();
			//				Исключение
			//					ТекстОшибки = "Произошла ошибка при записи заказа на завод: " + ОписаниеОшибки(); 
			//					Сообщить(ТекстОшибки);
			//					ЗаписьЖурналаРегистрации("Запись заказа на завод",УровеньЖурналаРегистрации.Ошибка,,ЗаказНаЗавод,ТекстОшибки);
			//				КонецПопытки;
			//			КонецЕсли;
			//			//rarus agar 11.11.2020 16526 --
			//		КонецЕсли;							
			//	КонецЕсли;	
			//КонецЕсли;	
			//rarus vikhle 16.09.2020 mt 16526 ---
			//rarus vikhle 22.01.2021 mt 16981 ---
			
			//rarus vikhle 23.09.2020 mt 16181 +++
			Если НЕ ПродуктОбъект.СОП = Договор Тогда
				ПродуктОбъект.СОП = Договор;
				НадоЗаписатьПродукт = Истина;
			КонецЕсли;	
			//rarus vikhle 23.09.2020 mt 16181 ---
			
			//rarus vikhle 04.09.2020 mt 16181 +++
			Если ПродуктОбъект.КлиентСоглашенияОПоставке.Пустая() И Не КонечныйКлиент.Пустая() Тогда
				ПродуктОбъект.КлиентСоглашенияОПоставке = КонечныйКлиент;
				НадоЗаписатьПродукт = Истина;
			КонецЕсли;
			//rarus vikhle 04.09.2020 mt 16181 ---	
			
			//rarus vikhle 23.11.2020 mt 16181 +++
			Если ПродуктОбъект.СоглашениеОПоставке <> Ссылка Тогда
				ПродуктОбъект.СоглашениеОПоставке = Ссылка;
				НадоЗаписатьПродукт = Истина;
			КонецЕсли;
			//rarus vikhle 23.11.2020 mt 16181 ---
			
			//rarus vikhle 14.05.2021 mt 17733 +++
			//Установка DD = дате созданного в форме СОП для бу и автобусов
			Если НужноУстановитьDDДляБУИАвтобусов И Не Договор.Пустая() 
				И ((ПродуктОбъект.БУ И ЗаявкаНаБУПродукты) ИЛИ ПродуктОбъект.ТипПродукта.ВидПродукта = ВидПродуктаАвтобус) Тогда
				КлючевыеДаты.Вставить("DD",ДатаДоговора);
			КонецЕсли;	
			//rarus vikhle 14.05.2021 mt 17733	
			
			// rarus vikhle 17.01.2022 m 18269 +++
			// Фиксация себестоимости в регистре "Плановая себестоимость продуктов" 
			// при переводе заявки со статуса "Проект заявки на СОП"
			Если СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП 
				И НЕ СтарыйСтатус = Статус 
				И СтрокаТаблицы.Себестоимость > 0 Тогда
				РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(СтрокаТаблицы.Продукт, СтрокаТаблицы.Себестоимость);
			КонецЕсли;	
			// rarus vikhle 17.01.2022 m 18269 ---
			
		КонецЕсли;	
		
		Если НЕ ДатаDDS = Неопределено Тогда //rarus vikhle 26.10.2021 m 18426
			КлючевыеДаты.Вставить("DDS", ДатаDDS);
			РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевыеДатыОбъекта(СтрокаТаблицы.Продукт.ЗаказНаЗавод, КлючевыеДаты);
		КонецЕсли;	
		
		//rarus vikhle 03.09.2021 mt 17933 +++
		// Для заказов продуктов, по которым добавлена запись с текущей заявкой с регистр "Scan_СоставСоглашенийОПоставке", 
		// проверяем необходимость добавления записи по заказу в регистр "Scan_ОчередьDD2DDSИнформера" с учетом новых дат DDS
		Для Каждого ПривязанныйЗаказ Из ПривязанныеЗаказы Цикл
			Если РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(ПривязанныйЗаказ) Тогда
				РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(ПривязанныйЗаказ);
			КонецЕсли;	
		КонецЦикла;	
		//rarus vikhle 03.09.2021 mt 17933 ---
				
		//rarus vikhle 21.07.2021 m 17933 +++
		// При расторжении заявки явно удаляем заказ из очереди DD2/DDS информера 
		Если (Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
			ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
			ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут) Тогда
			РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(СтрокаТаблицы.Продукт.ЗаказНаЗавод);
		КонецЕсли;
		//rarus vikhle 21.07.2021 m 17933 ---
		
		//rarus ozhnik 15888 26.08.2020 + 
		Если НужноОтвязать Тогда
			НоваяЗапись = РегистрыСведений.Scan_СоставСоглашенийОПоставке.СоздатьМенеджерЗаписи();
			НоваяЗапись.Изделие = СтрокаТаблицы.Продукт;
			НоваяЗапись.Период = ТекущаяДатаСеанса();
			НоваяЗапись.СоглашениеОПоставке = Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
			НоваяЗапись.Записать(); 	
		КонецЕсли;      		
		//rarus ozhnik 15888 26.08.2020 -
		
		//rarus vikhle 02.11.2021 m 18503 +++
		Если ПродуктОбъект = Неопределено Тогда
			ПродуктОбъект = СтрокаТаблицы.Продукт.ПолучитьОбъект();
		КонецЕсли;	
		//rarus vikhle 02.11.2021 m 18503 ---
		
		Если  Не ПродуктОбъект.БУ
			//rarus bonmak 17615 31.05.2021 вынес условия отдельно
			//И Не ЗначениеЗаполнено(ПродуктОбъект.ТипСпецификации) //rarus bonmak 17615 31.05.2021
			Тогда
			Если Не ЗначениеЗаполнено(ПродуктОбъект.ТипСпецификации) Тогда //rarus bonmak 17615 31.05.2021
				Если УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UO
					Или УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UUO
					Тогда
					ПродуктОбъект.ТипСпецификации = УникальностьСпецификации;
				ИначеЕсли Не СтандартнаяСпецификация.Пустая() Тогда
					//rarus agar 07.04.2021 17394 ++
					//ПродуктОбъект.ТипСпецификации = СтандартнаяСпецификация.НомерСпецификации;
					ПродуктОбъект.ТипСпецификации         = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std");
					ПродуктОбъект.СтандартнаяСпецификация = СтандартнаяСпецификация;
					//rarus agar 07.04.2021 17394 --
				КонецЕсли;
				
				НадоЗаписатьПродукт = Истина;
			КонецЕсли;
			//rarus bonmak 26.02.2021 17291 ++
			//rarus bonmak 17615 31.05.2021 Если Не ПродуктОбъект.БУ 
			Если УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std
				Тогда
				фСпецификацияПродукта = Справочники.Scan_СпецификацииПродуктов.ПолучитьСпецификациюПоИзделию(ПродуктОбъект.Ссылка); //rarus bonmak 17615 31.05.2021

				Если Не ЗначениеЗаполнено(ПродуктОбъект.СпецификацияПродукта)
					Тогда
					//фСпецификацияПродукта = Справочники.Scan_СпецификацииПродуктов.ПолучитьСпецификациюПоИзделию(ПродуктОбъект.Ссылка); //rarus bonmak 17615 31.05.2021 перенес выше
					Если фСпецификацияПродукта.Пустая() Тогда
						СпецификацияОбъект = Справочники.Scan_СпецификацииПродуктов.СоздатьЭлемент();
						СпецификацияОбъект.Наименование = "" + ПродуктОбъект.МодельПродукта + " " + ПродуктОбъект.Наименование;
						СпецификацияОбъект.МодельПродукта = ПродуктОбъект.МодельПродукта;
						СпецификацияОбъект.Изделие = ПродуктОбъект.Ссылка; 
						УстановитьПривилегированныйРежим(Истина);
						Попытка
							СпецификацияОбъект.Записать();
							фСпецификацияПродукта = СпецификацияОбъект.Ссылка;
						Исключение
							СообщениеОбОшибке = ОписаниеОшибки();
						КонецПопытки;
						УстановитьПривилегированныйРежим(Ложь);
					КонецЕсли;
					Если НЕ фСпецификацияПродукта.Пустая() Тогда
						ПродуктОбъект.СпецификацияПродукта = фСпецификацияПродукта;
						НадоЗаписатьПродукт = Истина;
					КонецЕсли;
				КонецЕсли;
				
				//rarus bonmak 17615 31.05.2021 ++
				Если НЕ фСпецификацияПродукта.Пустая() Тогда
					СпецификацияSport = Справочники.Scan_ВерсииБазовыхСпецификаций.НайтиПоРеквизиту("ВидСпецификации",Справочники.Scan_ВидыСпецификацийПродуктов.SPORTСпецификация,,фСпецификацияПродукта);
					Если СпецификацияSport.Пустая() Тогда
						Справочники.Scan_ВерсииБазовыхСпецификаций.СоздатьСпецификациюSport(СтрокаТаблицы.Продукт, фСпецификацияПродукта, Ссылка);
					КонецЕсли;
				КонецЕсли;
				//rarus bonmak 17615 31.05.2021 --
			КонецЕсли;
		КонецЕсли;
		//rarus bonmak 26.02.2021 17291 --
		Если НадоЗаписатьПродукт Тогда
			УстановитьПривилегированныйРежим(Истина);
			Попытка
				ПродуктОбъект.Записать();
			Исключение 
				СообщениеОбОшибке = ОписаниеОшибки();		// rarus tenkam 21.10.2020 mantis 16181 +
			КонецПопытки;
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		//rarus agar 18.08.2020 16138 --
		
	КонецЦикла;	
	//rarus vikhle 14.08.2020 mt 16181 ---	
	
	// rarus tenkam 30.09.2020 mantis 16181 +++
	Если НЕ Отказ И СтруктураИзмененныеРеквизиты.Количество() <> 0 Тогда
		Справочники.Scan_ДоговорыВзаиморасчетов.ИзменитьДоговорВ1БД(СтруктураИзмененныеРеквизиты, Договор);	
	КонецЕсли;
	// rarus tenkam 30.09.2020 mantis 16181 ---
	
	//rarus vikhle 21.01.2021 mt 16981
	Если НЕ Отказ
		И ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП //rarus vikhle 27.01.2021 mt 16981
		И СтарыйСтатус <> Статус
		И (Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут) Тогда
		Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьМеханизмШаблоновДляОтправкиПисем") Тогда	 
			РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонПисьмаПриРасторженииЗаявкиНаСОППоПродукту",Ссылка);
		КонецЕсли;
	ИначеЕсли Не Отказ И ДополнительныеСвойства.Свойство("СписокПродуктовДоИзменений") 
			И НЕ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП  Тогда  //rarus vikhle 29.01.2021 mt 16929
			ТЗСписокПродуктов = СписокПродуктов.Выгрузить(,"Продукт");
			мТекущихПродуктов = Новый Массив;
			Для Каждого СтрокаСписка Из ТЗСписокПродуктов Цикл
				Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
					мТекущихПродуктов.Добавить(СтрокаСписка.Продукт);	
				КонецЕсли;	
			КонецЦикла;	
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ВЫРАЗИТЬ(СписокПродуктовДоИзменений.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
			               |ПОМЕСТИТЬ СписокПродуктовДоИзменений
			               |ИЗ
			               |	&СписокПродуктовДоИзменений КАК СписокПродуктовДоИзменений
			               |ГДЕ
			               |	СписокПродуктовДоИзменений.Продукт ССЫЛКА Справочник.Scan_Изделия
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	СписокПродуктовДоИзменений.Продукт КАК Продукт
			               |ИЗ
			               |	СписокПродуктовДоИзменений КАК СписокПродуктовДоИзменений
			               |ГДЕ
			               |	НЕ СписокПродуктовДоИзменений.Продукт В (&мТекущихПродуктов)";
			Запрос.УстановитьПараметр("СписокПродуктовДоИзменений",ДополнительныеСвойства.СписокПродуктовДоИзменений);
			Запрос.УстановитьПараметр("мТекущихПродуктов",мТекущихПродуктов);
			РезультатЗапроса = Запрос.Выполнить();
						
			//Отвязка удаленных продуктов
			//rarus vikhle 01.02.2021 mt 16181 +++
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
								
				//Отмена документа установки цен
				Документы.Scan_УстановкаПлановыхЦенПродукта.ОтменитьДокументУстановкиЦенПоПродукту(Выборка.Продукт);
				//Очистка DDS
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Выборка.Продукт.ЗаказНаЗавод,
																						Перечисления.Scan_КлючевыеДаты.DDS,Дата(1,1,1)); 
				//Rarus bonmak 04.02.2022 18590 ++																		
				//Очистка Внутренний резерв дилера
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Выборка.Продукт,
																						Перечисления.Scan_КлючевыеДаты.ВнутреннийРезервДилера,Дата(1,1,1));
				//Rarus bonmak 04.02.2022 18590 --																		
				//rarus vikhle 21.07.2021 m 17933 +++																		
				// Явно удаляем заказ из очереди DD2/DDS информера
				РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(Выборка.Продукт.ЗаказНаЗавод);
				//rarus vikhle 21.07.2021 m 17933 ---
				
				//rarus vikhle 14.05.2021 mt 17733 +++
				
				//Очистка DD для удаленных автобусов и БУ
				Если Не Договор.Пустая() 
					И ((Выборка.Продукт.БУ И ЗаявкаНаБУПродукты) ИЛИ Выборка.Продукт.ТипПродукта.ВидПродукта = ВидПродуктаАвтобус) Тогда
					РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Выборка.Продукт.ЗаказНаЗавод,
																						Перечисления.Scan_КлючевыеДаты.DD,Дата(1,1,1));							
				КонецЕсли;	
				//rarus vikhle 14.05.2021 mt 17733 ---
				
				// rarus vikhle 17.01.2022 m 18269 +++
				//РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.УдалитьЗаписьПоПродукту(СтрокаТаблицы.Продукт); // rarus vikhle 21.12.2021 m 18269
				РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(СтрокаТаблицы.Продукт, 0);
				// rarus vikhle 17.01.2022 m 18269 ---
				
				
				//Очистка реквизитов продукта
				ПродуктОбъект 							= Выборка.Продукт.ПолучитьОбъект();
				ПродуктОбъект.КлиентСоглашенияОПоставке = Справочники.Scan_Контрагенты.ПустаяСсылка();   
				ПродуктОбъект.СоглашениеОПоставке 		= Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
				ПродуктОбъект.СОП 						= Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
				ПродуктОбъект.КомментарийДилера 		= ""; // rarus vikhle 09.11.2021 m 18485
				
				УстановитьПривилегированныйРежим(Истина);
				Попытка
					ПродуктОбъект.Записать();
				Исключение 
					СообщениеОбОшибке = ОписаниеОшибки();
				КонецПопытки;
				УстановитьПривилегированныйРежим(Ложь);

				//Отвязка в регистре состава заявок
				НоваяЗапись = РегистрыСведений.Scan_СоставСоглашенийОПоставке.СоздатьМенеджерЗаписи();
				НоваяЗапись.Изделие = Выборка.Продукт;
				НоваяЗапись.Период = ТекущаяДатаСеанса();
				НоваяЗапись.СоглашениеОПоставке = Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
				НоваяЗапись.Записать();
			КонецЦикла;	
			//rarus vikhle 01.02.2021 mt 16181 ---
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьМеханизмШаблоновДляОтправкиПисем") Тогда
					РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонПисьмаПриРасторженииЗаявкиНаСОППоПродукту",Ссылка);	
				КонецЕсли;	
			КонецЕсли;
			
			// Фиксация измененения себестоимости в регистре "Плановая себестоимость продуктов"
			// rarus vikhle 17.01.2022 m 18269 +++
			ПродуктыСИзмененнойСебестоимостью = Справочники.Scan_СоглашенияОПоставке.ПродуктыСИзмененнойСебестоимостью(ДополнительныеСвойства.СписокПродуктовДоИзменений,
																														СписокПродуктовТЗ);		
			Для Каждого СтрокаПродуктСебестоимость Из ПродуктыСИзмененнойСебестоимостью Цикл
				РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(СтрокаПродуктСебестоимость.Продукт, 
																							СтрокаПродуктСебестоимость.Себестоимость);
			КонецЦикла;	
			// rarus vikhle 17.01.2022 m 18269 ---
			
 	КонецЕсли;	
	//rarus vikhle 21.01.2021 mt 16981 ---
	
	//rarus vikhle 29.01.2021 mt 16929 +++
	Если Не Отказ И ДополнительныеСвойства.Свойство("СписокПродуктовДоИзменений") 
		И НЕ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП Тогда //Для проекта заявки обновляли ранее
		//Изменим, при необходимости, в СУ статус на "Одобрено, есть в СОП" или "Одобрено, нет в СОП"
		Справочники.Scan_СпециальныеУсловия.ОбновитьСУ(ДополнительныеСвойства.СписокПродуктовДоИзменений,
														СписокПродуктов.Выгрузить(,"СпециальныеУсловия"));//rarus vikhle 29.01.2021 mt 16929
	КонецЕсли;	
	//rarus vikhle 29.01.2021 mt 16929 ---
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	//rarus vikhle 15.10.2021 mt 18427 +++
	//rarus vikhle 05.10.2021 mt 18076 +++
	//Если ОбъектКопирования.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП Тогда
	//
	//	СписокПродуктов.Очистить();
	//	УсловияОплаты.Очистить();
	//	ГрафикПлатежей.Очистить();
	//	
	//	НомерСоглашенияОПоставке	= "";
	//	Статус						= Неопределено;
	//	Основание					= Неопределено;
	//	ИсходнаяЗаявка				= Неопределено;
	//	
	//	Договор						= Неопределено;
	//	НомерСОП					= "";
	//	
	//	DDS							= Неопределено;
	//	DeliveryDate				= Неопределено;
	//	КоличествоРабочихДней		= Неопределено;
	//	IDПродуктаКП				= "";
	//	СпециальныеУсловия			= Неопределено;
	//	
	//	НомерЗаявкиНаСОПSOWA		= "";
	//	КомментарийДилераSOWA		= "";
	//	КомментарийSRUSOWA			= "";
	//	КомментарийИзУТ				= "";
	//	ОтветственныйЗаРезерв		= Неопределено;
	//	
	//КонецЕсли;	
	//rarus vikhle 05.10.2021 mt 18076 ---
	//rarus vikhle 15.10.2021 mt 18427 ---
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//rarus vikle 11.11.2020 mt 16723 +++
	//Если УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
	//	И (ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад ИЛИ (ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП И ТребуетсяРазмещениеЗаказа))
	//	И НЕ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен //rarus vikhle 25.12.2020 mt 17036
	//	И НЕ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ //rarus vikhle 25.12.2020 mt 17036
	//	И НЕ Статус =  Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут//rarus vikhle 25.12.2020 mt 17036
	//	Тогда
	//	ПроверяемыеРеквизиты.Добавить("СтандартнаяСпецификация");	
	//КонецЕсли;	
	//rarus vikle 11.11.2020 mt 16723 ---
	
	
	//rarus vikhle 22.07.2021 m 17834 +++
	Если ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU Тогда
		// Удаляем из проверяемых реквизитов реквизиты, неиспользуемые в заявках на СОП (SRU)
		МассивНепроверяемыхРеквизитов = Новый Массив;
		
		МассивНепроверяемыхРеквизитов.Добавить("FFU");
		МассивНепроверяемыхРеквизитов.Добавить("Модель");
		МассивНепроверяемыхРеквизитов.Добавить("SORDER");
		МассивНепроверяемыхРеквизитов.Добавить("УникальностьСпецификации");
						
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
		
		Возврат;
	КонецЕсли;	
	//rarus vikhle 22.07.2021 m 17834 ---
	
	
	// rarus vikhle 07.09.2021 mt 18257 +++ Перенес в ОбработкаПроверкиЗаполненияНаСервере формы
	// rarus tenkam 21.06.2021 mantis 17742 +++
	
	//ТаблицаДляПроверки = Новый ТаблицаЗначений;
	//ТаблицаДляПроверки.Колонки.Добавить("Продукт");
	//ТаблицаДляПроверки.Колонки.Добавить("ВидПродукта");
	//
	//Для Каждого ТекСтрока Из СписокПродуктов Цикл
	//Если ТипЗнч(ТекСтрока.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
	//	НоваяСтрока = ТаблицаДляПроверки.Добавить();
	//	НоваяСтрока.Продукт = ТекСтрока.Продукт;
	//	НоваяСтрока.ВидПродукта = ТекСтрока.Продукт.ТипПродукта.ВидПродукта;
	//КонецЕсли;
	//КонецЦикла;
	//
	//ТаблицаДляПроверки.Свернуть("ВидПродукта",);
	//Если ТаблицаДляПроверки.Количество() > 1 Тогда
	//	Сообщение = Новый СообщениеПользователю();
	//	Сообщение.Текст = "В списке продуктов указаны продукты с разными видами!";
	//	Сообщение.Сообщить();
	//	Отказ = Истина;		
	//КонецЕсли;
	// rarus tenkam 21.06.2021 mantis 17742 ---
	// rarus vikhle 07.09.2021 mt 18257  ---
КонецПроцедуры

Функция СтатусНаОсновеСопИсполненЧастично(ДанныеЗаполнения) //rarus vikhle 13.10.2021 mt 18076 +++
	
	ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Дилер, "ВидДилера");
					
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА &СобственныйДилер
	               |			ТОГДА ВЫБОР
	               |					КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |						ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |					ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |					ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |				ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ДатаПродажи
	               |ПОМЕСТИТЬ ДатыПродажи
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт В(&ПродуктыЗаявки)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(ДатыПродажи.Продукт) КАК КолВоПроданныхПродуктов
	               |ИЗ
	               |	ДатыПродажи КАК ДатыПродажи
	               |ГДЕ
	               |	НЕ ДатыПродажи.ДатаПродажи = ДАТАВРЕМЯ(1, 1, 1)";
	Запрос.УстановитьПараметр("СобственныйДилер", ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный); 
	Запрос.УстановитьПараметр("ПродуктыЗаявки",   ОбщегоНазначения.ВыгрузитьКолонку(СписокПродуктов, "Продукт"));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() И Выборка.КолВоПроданныхПродуктов = СписокПродуктов.Количество() Тогда
		Возврат Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Исполнен;	
	Иначе
		Возврат ДанныеЗаполнения.Статус;				
	КонецЕсли;	
	
КонецФункции //rarus vikhle 13.10.2021 mt 18076 ---	
