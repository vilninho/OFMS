//rarus vikhle 11.08.2021 mt 17834 +++
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьКолонки();
	ЗаполнитьЧат();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СписокПродуктов") и ЗначениеЗаполнено(Параметры.СписокПродуктов) Тогда
		Для Каждого Продукт Из Параметры.СписокПродуктов Цикл
			НоваяСтрока = Объект.СписокПродуктов.Добавить();
			НоваяСтрока.Продукт = Продукт;
		КонецЦикла;
		ОбновитьКолонки();
		Объект.Количество = Объект.СписокПродуктов.Итог("Количество");
	КонецЕсли;	
		
	УправлениеДиалогом();
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеДиалогом();
	ОбновитьКолонки();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) // Rarus tenkam 11.04.2022 mantis 18433 +++

	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
КонецПроцедуры 	// Rarus tenkam 11.04.2022 mantis 18433 ---
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДилерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок", Истина);
	
	ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДилерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДилерОбработкаВыбораПродолжение", ЭтотОбъект,ВыбранноеЗначение);
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение, ОписаниеОповещения, СтандартнаяОбработка, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПродуктов

&НаКлиенте
Процедура СписокПродуктовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ВывестиСообщениеПол(Нстр("ru = 'Добавление продуктов возможно только с помощью команды ""Подобрать""'"));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПродуктНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьСообщение(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Не Записать() Тогда
			Возврат;	
		КонецЕсли; 
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Объект",Объект.Ссылка);
	
	Оповещение = Новый ОписаниеОповещения("ОповещениеЧата", ЭтотОбъект);
	Открытьформу("РегистрСведений.Scan_Сообщения.Форма.ФормаЗаписи",ПараметрыОткрытия,ЭтаФорма,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьПродукты(Команда)
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ПустоеСоглашениеОПоставке", Истина);
	СтруктураОтбора.Вставить("БУ", Объект.ЗаявкаНаБУПродукты);
	СтруктураОтбора.Вставить("Марка", ПредопределенноеЗначение("Справочник.Scan_МаркиПродуктов.Scania"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПродуктов", ЭтотОбъект);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаПодбораПродуктов",СтруктураОтбора,ЭтаФорма,,,,
				ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуСписка(Команда)
	
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Объект.СписокПродуктов.Удалить(ТекущиеДанные);
		Модифицированность = Истина;
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'В таблице не выбрана строка.'"));
	КонецЕсли;
	
	Объект.Количество = Объект.СписокПродуктов.Итог("Количество");
	
КонецПроцедуры

&НаКлиенте
Процедура Одобрено(Команда)
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено");
	
	Попытка
		Записать();
		ОповеститьОбИзменении(Объект.Ссылка);
	Исключение
		Объект.Статус = СтарыйСтатус;	
		ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи заявки: '") + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	Если Не ЕстьСообщениеТекушегоПользователя(Объект.Ссылка) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нельзя установить статус ""СОП отменен"" без добавления пояснительного сообщения.'"),ЭтотОбъект,"ПолеHTML");
		Возврат;	
	КонецЕсли;

	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен");
	
	Попытка
		Записать();
		ОповеститьОбИзменении(Объект.Ссылка);
	Исключение
		Объект.Статус = СтарыйСтатус;	
		ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи заявки: '") + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура РасторгнутьСОП(Команда)
	
	Если Не ЕстьСообщениеТекушегоПользователя(Объект.Ссылка) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нельзя установить статус ""СОП расторгнут"" без добавления пояснительного сообщения.'"),ЭтотОбъект,"ПолеHTML");
		Возврат;	
	КонецЕсли;

	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут");
	
	Попытка
		Записать();
		ОповеститьОбИзменении(Объект.Ссылка);
	Исключение
		Объект.Статус = СтарыйСтатус;	
		ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи заявки: '") + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте  
Процедура ОбработкаВыбораПродуктов(ВыбранноеЗначение, ИсточникВыбора) Экспорт 
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ОбработатьПодбор(ВыбранноеЗначение);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПодбор(ВыбранноеЗначение)
	
	ТаблицаПодбора = ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
		
	Если ТаблицаПодбора.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
			
	Для Каждого СтрокаПродукта Из ТаблицаПодбора Цикл   		
		Поиск = Новый Структура("Продукт", СтрокаПродукта.Продукт);	
	    МассивСтрок = Объект.СписокПродуктов.НайтиСтроки(Поиск);
		
		Если МассивСтрок.Количество() = 0 Тогда
	        НоваяСтрока 						= Объект.СписокПродуктов.Добавить();         		
			НоваяСтрока.Продукт 				= СтрокаПродукта.Продукт;
			НоваяСтрока.ЗаказНаЗавод 			= СтрокаПродукта.Продукт.ЗаказНаЗавод;
			НоваяСтрока.Количество 				= 1;
			НоваяСтрока.DD 						= СтрокаПродукта.DD; 
			НоваяСтрока.DD2 					= СтрокаПродукта.DD2;
			НоваяСтрока.НомерПродукта 			= СтрокаПродукта.Продукт.НомерИзделия;
			НоваяСтрока.Модель 					= СтрокаПродукта.Продукт.МодельПродукта;
			НоваяСтрока.ТипСпецификации 		= СтрокаПродукта.Продукт.ТипСпецификации;
			НоваяСтрока.СтандартнаяСпецификация = СтрокаПродукта.Продукт.СтандартнаяСпецификация;
			НоваяСтрока.ЛокальныйСтатусПродукта = СтрокаПродукта.Продукт.ЛокальныйСтатусПродукта;
			НоваяСтрока.СкладПродажи 			= СтрокаПродукта.Продукт.СкладПродажи;
			НоваяСтрока.Применены 				= Ложь;			
		Иначе
			ВывестиСообщениеПол(Нстр("ru = 'Продукт %1 уже добавлен список продуктов.'"),ЭтотОбъект,,,,СтрокаПродукта.Продукт);
		КонецЕсли;
	КонецЦикла;
	
	Объект.Количество = Объект.СписокПродуктов.Итог("Количество");
	
	Если НЕ Модифицированность Тогда
		Модифицированность = Объект.СписокПродуктов.Количество() <> 0;  	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогом()
	
	Scan_ПараметрыВидимостиОбъектовСервер.ОбработкаПараметровВидимости(ЭтотОбъект);
	Элементы.СписокПродуктов.КоманднаяПанель.Доступность = НЕ Элементы.СписокПродуктов.ТолькоПросмотр;
		
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьЧат()
	
	СтрокаHTML = "<HTML><BODY style=""background-color:#f0f0f0"">";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сообщения.Объект КАК Объект,
		|	Сообщения.Пользователь КАК Пользователь,
		|	Сообщения.ДоступноДилеру КАК ДоступноДилеру,
		|	Сообщения.ТекстСообщения КАК ТекстСообщения,
		|	Сообщения.Период КАК Период
		|ИЗ
		|	РегистрСведений.Scan_Сообщения КАК Сообщения
		|ГДЕ
		|	Сообщения.Объект В(&СвязанныеОбъекты)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	СвязанныеОбъекты = Scan_ВспомогательныеФункцииСервер.ПолучитьСтруктуруПодчиненности(Объект.Ссылка, "Основание", Истина); //rarus vikhle 06.10.2021 mt 18076 + 2й параметр
	Запрос.УстановитьПараметр("СвязанныеОбъекты", СвязанныеОбъекты);
		
	РезультатЗапроса		= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи	= РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаHTML = РегистрыСведений.Scan_Сообщения.ДобавитьСообщение(СтрокаHTML, 
																		ВыборкаДетальныеЗаписи.ТекстСообщения,
																		ВыборкаДетальныеЗаписи.Пользователь,
																		ВыборкаДетальныеЗаписи.Период); 		
	КонецЦикла;
	
   	СтрокаHTML	= СтрокаHTML + "</body></html>";
	ПолеHTML 	= СтрокаHTML;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеЧата(ВидХарактеристики, Параметры) Экспорт
	
	ЗаполнитьЧат();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКолонки()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод КАК ЗаказНаЗавод,
	               |	1 КАК Количество,
	               |	Scan_СводнаяИнформацияПоПродукту.DD КАК DD,
	               |	Scan_СводнаяИнформацияПоПродукту.DD2 КАК DD2,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СпецификацияПродукта КАК СтандартнаяСпецификация,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипСпецификации КАК ТипСпецификации,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ЛокальныйСтатусПродукта КАК ЛокальныйСтатусПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СкладПродажи КАК СкладПродажи,
	               |	НЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = &ТекущаяЗаявка
	               |		И НЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка) КАК Применены
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт В(&ПродуктыЗаявки)";
	Запрос.УстановитьПараметр("ТекущаяЗаявка",  Объект.Ссылка);
	Запрос.УстановитьПараметр("ПродуктыЗаявки", ОбщегоНазначения.ВыгрузитьКолонку(Объект.СписокПродуктов,"Продукт"));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокиПродукта = Объект.СписокПродуктов.НайтиСтроки(Новый Структура("Продукт",Выборка.Продукт));
		Для Каждого СтрокаПродукта Из СтрокиПродукта Цикл 
			ЗаполнитьЗначенияСвойств(СтрокаПродукта,Выборка);
		КонецЦикла;	
	КонецЦикла;	
			
КонецПроцедуры	

&НаКлиенте
Процедура ДилерОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Дилер = ВыбраннаяКомпания;
	КонецЕсли;
		
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ЕстьСообщениеТекушегоПользователя(СсылкаНаЗаявку)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_Сообщения.Объект КАК Объект,
	               |	Scan_Сообщения.Пользователь КАК Пользователь,
	               |	Scan_Сообщения.ТекстСообщения КАК ТекстСообщения
	               |ИЗ
	               |	РегистрСведений.Scan_Сообщения КАК Scan_Сообщения
	               |ГДЕ
	               |	Scan_Сообщения.Объект = &Объект
	               |	И Scan_Сообщения.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Объект",СсылкаНаЗаявку);
	Запрос.УстановитьПараметр("Пользователь",ТекущийПользователь);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции
 


#КонецОбласти
//rarus vikhle 11.08.2021 mt 17834 ---
