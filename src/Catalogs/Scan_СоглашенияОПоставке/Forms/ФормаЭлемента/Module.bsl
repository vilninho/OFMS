#Область ОписаниеПеременных
//rarus vikhle 26.05.2021 m 17653 +++
//&НаКлиенте
//Перем ПредыдущееЗначениеДилера; //rarus vikhle 17.09.2021 mt 18288 закомментировал, заменил на реквизит формы
//rarus vikhle 26.05.2021 m 17653 ---

//rarus vikhle 02.08.2021 m 17637 +++
&НаКлиенте
Перем УдаленныеПродукты; // Для фиксации фактических продуктов, удаленных стандартным платформенным способом из таблицы
//rarus vikhle 02.08.2021 m 17637 ---

//rarus vikhle 27.08.2021 m 18214 +++
&НаКлиенте
Перем ПредыдущаяМодель;
//rarus vikhle 27.08.2021 m 18214 ---

//rarus vikhle 27.12.2021 m 18269 +++
&НаКлиенте
Перем ПредыдущаяУникальностьСпецификации;
//rarus vikhle 27.12.2021 m 18269 ---

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//rarus vikhle 15.04.2021 mt 17651 +++
	Если НЕ Параметры.ЗначениеКопирования.Пустая() Тогда
		ВызватьИсключение "Создание заявок копированием запрещено.";
	КонецЕсли;	
	//rarus vikhle 15.04.2021 mt 17651 ---
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов 	
	
	 // Обработчик подсистемы запрета редактирования реквизитов объектов
    ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	ОбъектНастройки = Метаданные.Справочники.Scan_СоглашенияОПоставке.Имя;
	ТипСоглашенияОПоставке = Объект.ТипСоглашенияОПоставке;
	//rarus vikhle 20.01.2021 mt 16981 +++
	ПриоритетныйСклад	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер,"ПриоритетныйСклад");	
	//ПриоритетныйСклад           = РегистрыСведений.Scan_СоответствиеСкладовИМестХранения.ПолучитьСклад(ПриоритетноеМестоХранения); 
	//rarus vikhle 20.01.2021 mt 16981 ---
	
	//rarus vikhle 25.06.2020 mt 15888 +++
	Если Объект.Ссылка.Пустая() И Параметры.Основание = Неопределено Тогда //rarus vikhle 22.12.2020 mt 16997
		Объект.SORDER	= Справочники.Scan_ОпцииПродуктов.Нет_SOrder;
		Объект.FFU		= Справочники.Scan_ОпцииПродуктов.Нет_FFU;
				
		Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад Тогда
			Объект.КонечныйКлиент = Справочники.Scan_Контрагенты.СканияРусь;
			Запрос = Новый Запрос;
			Запрос.Текст =	"ВЫБРАТЬ
			              	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания КАК Компания
			              	|ИЗ
			              	|	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
			              	|ГДЕ
			              	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент = &Контрагент
			              	|	И Scan_ВзаимосвязьКомпанийСКонтрагентами.ВидВзаимодействия = &ВидВзаимодействияДилер";
			Запрос.УстановитьПараметр("Контрагент",Объект.КонечныйКлиент);
			ВидВзаимодействияДилер = Scan_ПраваИНастройки.Scan_Право("ВидВзаимодействияДилер");
			Запрос.УстановитьПараметр("ВидВзаимодействияДилер",ВидВзаимодействияДилер);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			Объект.КонечныйКлиентКомпания = Выборка.Компания;
			Элементы.КонечныйКлиентКомпания.СписокВыбора.Добавить(Выборка.Компания);
		КонецЕсли;
		Объект.СтавкаНДС = Справочники.Scan_СтавкиНДС.ОсновнаяСтавкаНДС;//rarus vikhle 11.08.2020 mt 16181
	КонецЕсли;	
	//rarus vikhle 25.06.2020 mt 15888 ---	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсполнителиЗадач.Исполнитель КАК Исполнитель,
		|	ИсполнителиЗадач.РольИсполнителя КАК РольИсполнителя
		|ИЗ
		|	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
		|ГДЕ
		|	ИсполнителиЗадач.Исполнитель = &Исполнитель";
	
	Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РольИсполнителя = ВыборкаДетальныеЗаписи.РольИсполнителя;
	КонецЦикла;
	
	Если не ЗначениеЗаполнено(РольИсполнителя) Тогда
		Если не ПараметрыСеанса.ТекущийПользователь.ПользовательСотрудник Тогда
			РольИсполнителя = Справочники.РолиИсполнителей.НайтиПоНаименованию("Дилер");	
		КонецЕсли; 
	КонецЕсли; 
	
	//ТребованияПоКПСправочник = Scan_ПраваИНастройки.Scan_Право("ТребованиеПоПрикреплениюКПОтКузовостроителяКСоглашениюОПоставке");
	ТребованияПоКПСправочник = Scan_ПраваИНастройки.Scan_Право("ТребованиеПоПрикреплениюКПОтКузовостроителяКЗаявке"); //rarus vikhle 09.11.2020 mt 16723
	Если ЗначениеЗаполнено(ТребованияПоКПСправочник) Тогда
		//rarus agar 20.02.2021 17230 ++
		//ТребованияПоКп = ТребованияПоКПСправочник.ТекстТребований;		
		ТребованияПоКп = ТребованияПоКПСправочник.ТекстТребований.Получить();
		//rarus agar 20.02.2021 17230 --
	КонецЕсли; 

	//rarus vikhle 11.08.2020 mt 16181 +++
	//Если ЗначениеЗаполнено(Объект.СпециальныеУсловия) Тогда
	//	//КоличествоРабочихДней = Объект.СпециальныеУсловия.КоличествоРабочихДней;
	//	УсловияОплаты.Загрузить(Объект.СпециальныеУсловия.УсловияОплаты.Выгрузить());
	//	Цена = Объект.СпециальныеУсловия.ЦенаДляДилера;
	//Иначе
	//	//КоличествоРабочихДней = Объект.КоличествоРабочихДней;
	//	УсловияОплаты.Загрузить(Объект.УсловияОплаты.Выгрузить());
	//	Цена = Объект.Цена;
	//КонецЕсли; 
	//rarus vikhle 04.08.2020 mt 16181 ---
	
	
	// Заполнить список продуктов актуальными значениями
	Если Не Объект.Ссылка.Пустая() Тогда
		//rarus vikhle 10.08.2020 mt 16181 +++
		//СоставСоглашения = РегистрыСведений.Scan_СоставСоглашенийОПоставке.ПолучитьСписокИзделий(Объект.Ссылка);
		//СписокПродуктов.Загрузить(СоставСоглашения);
		СписокПродуктов.Загрузить(Объект.СписокПродуктов.Выгрузить());
		//rarus vikhle 10.08.2020 mt 16181 ---
		
		//rarus vikhle 09.09.2020 mt 16181 +++
		Элементы.СписокПродуктов.ИзменятьСоставСтрок			= Объект.ТребуетсяРазмещениеЗаказа И Объект.Договор.Пустая(); //rarus vikhle 31.01.2022 m 18813 
		Элементы.СписокПродуктовDDЗапрошенная.ТолькоПросмотр	= НЕ Объект.ТребуетсяРазмещениеЗаказа;
		Элементы.Подобрать.Доступность							= НЕ Объект.ТребуетсяРазмещениеЗаказа; 
		//rarus vikhle 09.09.2020 mt 16181
		//rarus vikhle 22.12.2020 mt 16997 +++	
	ИначеЕсли Параметры.Основание <> Неопределено 
		И ТипЗнч(Параметры.Основание) = Тип("СправочникСсылка.Scan_СпециальныеУсловия") 
		ИЛИ ТипЗнч(Параметры.Основание) = Тип("СправочникСсылка.Scan_СоглашенияОПоставке") Тогда //rarus vikhle 13.08.2021 mt 17834
		// rarus tenkam 17.08.2021 mantis 17834 +++ Из РМ создаем по списку подобранных продуктов
		Если ТипЗнч(Параметры.Основание) = Тип("СправочникСсылка.Scan_СоглашенияОПоставке") И 
			Параметры.Основание.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU И
			Параметры.Свойство("СозданиеЗаявкиИзРМ") И 
			Параметры.Свойство("СписокПродуктов") И ЗначениеЗаполнено(Параметры.СписокПродуктов) Тогда
			
			СписокПродуктов.Очистить();
			
			ПроцентСтавкиНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтавкаНДС,"Ставка");
			Для Каждого ПродуктДляЗаполнения Из Параметры.СписокПродуктов Цикл
				НоваяСтрока = СписокПродуктов.Добавить();
				НоваяСтрока.Продукт = ПродуктДляЗаполнения;
				НоваяСтрока.СкладОтгрузки = ПриоритетныйСклад;  
				НоваяСтрока.МестоПередачи = ПриоритетныйСклад; 
				Если НЕ НоваяСтрока.Продукт.ЗапретИзмененияСкладаПродажи Тогда 
					НоваяСтрока.СкладПродажи = ПриоритетныйСклад; 
				Иначе
					НоваяСтрока.СкладПродажи = НоваяСтрока.Продукт.СкладПродажи;	
				КонецЕсли;
				НоваяСтрока.ПриоритетныйСклад = НЕ НоваяСтрока.СкладОтгрузки.Пустая(); 
				НоваяСтрока.Количество = 1;
				НоваяСтрока.Модель = НоваяСтрока.Продукт.МодельПродукта;
				НоваяСтрока.СпецификацияПродукта = НоваяСтрока.Продукт.СпецификацияПродукта;
				
				Если Параметры.Свойство("БУ") И Параметры.БУ Тогда //rarus vikhle 30.09.2021 m 18357
					НоваяСтрока.ЦенаСНДС	= НоваяСтрока.Продукт.СтоимостьПродажиБУ;
					НоваяСтрока.ЦенаБезНДС  = 100 * НоваяСтрока.ЦенаСНДС / (100 + ПроцентСтавкиНДС); 
				КонецЕсли;	
				
				Объект.ТребуетсяРазмещениеЗаказа = Ложь; 
				Элементы.СписокПродуктов.ИзменятьСоставСтрок = Ложь;
				Элементы.СписокПродуктовDDЗапрошенная.ТолькоПросмотр = Истина;
			КонецЦикла;
			Объект.Количество = СписокПродуктов.Итог("Количество");
			ТипСпецификации = СписокПродуктов[0].Продукт.ТипСпецификации; 
			
			Объект.УникальностьСпецификации = ТипСпецификации;
			Если ТипСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
				Объект.СтандартнаяСпецификация  = СписокПродуктов[0].Продукт.СтандартнаяСпецификация;
				ЗаполнитьСебестоимостьИзСпецификации();//rarus vikhle 28.12.2021 m 18698
			КонецЕсли;
			
			Если НоваяСтрока.Модель.МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania Тогда
				МодельСтрокой = Строка(НоваяСтрока.Модель);
				Если    СтрНайти(МодельСтрокой, "*")
					Или СтрНайти(МодельСтрокой, "\")
					Или СтрНайти(МодельСтрокой, "/")
					Тогда
					Объект.Модель = НоваяСтрока.Модель;
				Иначе
					НаименованиеМодели	= Лев(СокрЛП(Строка(НоваяСтрока.Модель)),10);
					Объект.Модель 		= Справочники.Scan_МоделиПродуктов.НайтиПоНаименованию(НаименованиеМодели,Истина);
				КонецЕсли;  				
			Иначе
				Объект.Модель = НоваяСтрока.Модель; 	
			КонецЕсли;	 			
		Иначе
		// При создании на основании не из РМ, а из заявки на соп SRU :
			Если ТипЗнч(Объект.Основание) = Тип("СправочникСсылка.Scan_СоглашенияОПоставке") И 
				Объект.Основание.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU Тогда
				ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов();
				МассивПродуктовОснования = Объект.Основание.СписокПродуктов.ВыгрузитьКолонку("Продукт");
				МожноСоздатьЗаявку = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(МассивПродуктовОснования, ПроверяемыеРеквизиты);
				Если Не МожноСоздатьЗаявку Тогда
					Отказ = Истина;
					ВызватьИсключение Нстр("ru = 'Невозможно создать заявку на СОП: указанные продукты нельзя применять совместно в 1 заявке.'");	
				КонецЕсли;	
			КонецЕсли;
		// rarus tenkam 17.08.2021 mantis 17834 ---
			СписокПродуктов.Загрузить(Объект.СписокПродуктов.Выгрузить());
			
			Если СписокПродуктов.Количество() > 0 Тогда
				Элементы.СписокПродуктов.ИзменятьСоставСтрок 			= Ложь; 
				Элементы.СписокПродуктовDDЗапрошенная.ТолькоПросмотр	= Истина;
				Элементы.Подобрать.Доступность							= Истина;	
				
				//rarus vikhle 13.08.2021 mt 17834 +++
				Для Каждого СтрокаСписка Из СписокПродуктов Цикл
					СтрокаСписка.СкладОтгрузки = ПриоритетныйСклад; //rarus vikhle 20.01.2021 mt 16981 
					СтрокаСписка.МестоПередачи = ПриоритетныйСклад; //rarus vikhle 05.02.2021 mt 16981
					Если НЕ СтрокаСписка.Продукт.ЗапретИзмененияСкладаПродажи Тогда 
						СтрокаСписка.СкладПродажи = ПриоритетныйСклад; //rarus vikhle 05.02.2021 mt 16981
					Иначе
						СтрокаСписка.СкладПродажи = СтрокаСписка.Продукт.СкладПродажи;	
					КонецЕсли;
					СтрокаСписка.ПриоритетныйСклад = НЕ СтрокаСписка.СкладОтгрузки.Пустая();	
				КонецЦикла;
				//rarus vikhle 13.08.2021 mt 17834 ---
			КонецЕсли;
		КонецЕсли; // rarus tenkam 17.08.2021 mantis 17834 +
	Иначе 
		Если Параметры.Свойство("СписокПродуктов") и ЗначениеЗаполнено(Параметры.СписокПродуктов) И Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП  Тогда
			//rarus vikhle 13.05.2021 mt 17733 +++
			//Если переданы продукты с закладки "Свободные б/у" рм дилера, тогда устанавливаем ставку НДС продуктов. 
			//Совпадение ставки НДС у всех передаваемых продуктов проверяется в рм дилера
			Если Параметры.Свойство("БУ") И Параметры.БУ Тогда //rarus vikhle 30.09.2021 m 18357
				СтавкаНДС = Параметры.СписокПродуктов[0].СтоимостьПродажиБУСтавкаНДС; 
				Объект.СтавкаНДС = ?(СтавкаНДС.Пустая(),Справочники.Scan_СтавкиНДС.ОсновнаяСтавкаНДС,СтавкаНДС); //Незаполненная ставка НДС считается как 20%
				ПроцентСтавкиНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтавкаНДС,"Ставка");
			КонецЕсли;	
			//rarus vikhle 13.05.2021 mt 17733 ---
			
			Для Каждого ПродуктДляЗаполнения Из Параметры.СписокПродуктов Цикл
				НоваяСтрока = СписокПродуктов.Добавить();//rarus vikhle 10.08.2020 mt 16181
				НоваяСтрока.Продукт = ПродуктДляЗаполнения;
				//rarus vikhle 10.08.2020 mt 16181 +++
				//НоваяСтрока.СкладОтгрузки = Объект.Дилер.ПриоритетныйСклад;
				НоваяСтрока.СкладОтгрузки = ПриоритетныйСклад; //rarus vikhle 20.01.2021 mt 16981 
				НоваяСтрока.МестоПередачи = ПриоритетныйСклад; //rarus vikhle 05.02.2021 mt 16981
				Если НЕ НоваяСтрока.Продукт.ЗапретИзмененияСкладаПродажи Тогда 
					НоваяСтрока.СкладПродажи = ПриоритетныйСклад; //rarus vikhle 05.02.2021 mt 16981
				Иначе
					НоваяСтрока.СкладПродажи = НоваяСтрока.Продукт.СкладПродажи;	
				КонецЕсли;
				НоваяСтрока.ПриоритетныйСклад = НЕ НоваяСтрока.СкладОтгрузки.Пустая(); 
				НоваяСтрока.Количество = 1;
				//ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(ПродуктДляЗаполнения); //rarus vikhle 05.02.2021 mt 16181 заполняется дальше
				//НоваяСтрока.ЗаказНаЗавод = ЗаказНаЗавод; //rarus vikhle 05.02.2021 mt 16181 заполняется дальше
				НоваяСтрока.Модель = НоваяСтрока.Продукт.МодельПродукта;
				НоваяСтрока.СпецификацияПродукта = НоваяСтрока.Продукт.СпецификацияПродукта;
				//НоваяСтрока.НомерПродукта = НоваяСтрока.Продукт.НомерИзделия; //rarus vikhle 05.02.2021 mt 16181 заполняется дальше
				//rarus vikhle 08.09.2020 mt 16181 +++
				//НоваяСтрока.DD = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "DD"); //rarus vikhle 05.02.2021 mt 16181 заполняется дальше
				//НоваяСтрока.DD2 = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "DD2"); //rarus vikhle 05.02.2021 mt 16181 заполняется дальше
				//НоваяСтрока.DDЗапрошенная = ?(ЗначениеЗаполнено(НоваяСтрока.DD2),НоваяСтрока.DD2,НоваяСтрока.DD);//rarus vikhle 05.02.2021 mt 16181 заполняется дальше
				//rarus vikhle 08.09.2020 mt 16181 ---
				//НоваяСтрока.ДокументУстановкиПлановыхЦен = НоваяСтрока.Продукт.ДокументУстановкиПлановыхЦенПродукта; //rarus vikhle 05.02.2021 mt 16181 заполняется дальше
				//rarus vikhle 01.02.2021 mt 17179 +++
				//rarus ozhnik 15888 27.08.2020 + заполнить модель СОП
				//Если объект.Модель.Пустая() Тогда
				//	Объект.Модель = НоваяСтрока.Модель; 					
				//КонецЕсли;
				//rarus ozhnik 15888 27.08.2020 - 
				//rarus vikhle 01.02.2021 mt 17179 ---
				
				//rarus vikhle 13.05.2021 mt 17733 +++
				Если Параметры.Свойство("БУ") И Параметры.БУ Тогда //rarus vikhle 30.09.2021 m 18357
					НоваяСтрока.ЦенаСНДС	= НоваяСтрока.Продукт.СтоимостьПродажиБУ;
					НоваяСтрока.ЦенаБезНДС  = 100 * НоваяСтрока.ЦенаСНДС / (100 + ПроцентСтавкиНДС); 
				КонецЕсли;	
				//rarus vikhle 13.05.2021 mt 17733 ---
				
				Объект.ТребуетсяРазмещениеЗаказа = Ложь; //rarus vikhle 09.09.2020 mt 16181
				Элементы.СписокПродуктов.ИзменятьСоставСтрок = Ложь;
				Элементы.СписокПродуктовDDЗапрошенная.ТолькоПросмотр = Истина;
			КонецЦикла;
			Объект.Количество = СписокПродуктов.Итог("Количество");
			//rarus vikhle 10.08.2020 mt 16181 ---
			//rarus agar 07.04.2021 17394 ++
			//rarus vikhle 12.11.2020 mt 16181 +++
			ТипСпецификации = СписокПродуктов[0].Продукт.ТипСпецификации; 
			//Если ТипЗнч(ТипСпецификации) = Тип("ПеречислениеСсылка.Scan_ТипыСпецификации") И НЕ ТипСпецификации.Пустая() Тогда 
			//	Объект.УникальностьСпецификации = ТипСпецификации;
			//ИначеЕсли ТипЗнч(ТипСпецификации) = Тип("Строка") И НЕ ТипСпецификации = "" Тогда
			//	Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std;
			//	Объект.СтандартнаяСпецификация = Документы.Scan_СпецификацияСтандартнойМодели.НайтиПоРеквизиту("НомерСпецификации",ТипСпецификации);
			//КонецЕсли;	
			//rarus vikhle 12.11.2020 mt 16181 ---
			
			Объект.УникальностьСпецификации = ТипСпецификации;
			Если ТипСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
				Объект.СтандартнаяСпецификация  = СписокПродуктов[0].Продукт.СтандартнаяСпецификация;
				ЗаполнитьСебестоимостьИзСпецификации(); //rarus vikhle 28.12.2021 m 18269
			КонецЕсли;
			//rarus agar 07.04.2021 17394 --
			
			Если НоваяСтрока.Модель.МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania Тогда
				//rarus agar 15.03.2021 17397 ++
				МодельСтрокой = Строка(НоваяСтрока.Модель);
				Если    СтрНайти(МодельСтрокой, "*")
					Или СтрНайти(МодельСтрокой, "\")
					Или СтрНайти(МодельСтрокой, "/")
					Тогда
					Объект.Модель = НоваяСтрока.Модель;
				Иначе
					//rarus vikhle 02.02.2021 mt 17179 +++
					НаименованиеМодели	= Лев(СокрЛП(Строка(НоваяСтрока.Модель)),10);
					Объект.Модель 		= Справочники.Scan_МоделиПродуктов.НайтиПоНаименованию(НаименованиеМодели,Истина);
					//rarus vikhle 02.02.2021 mt 17179 ---
				КонецЕсли;
				//rarus agar 15.03.2021 17397 --
			Иначе
				Объект.Модель = НоваяСтрока.Модель; 	
			КонецЕсли;	
			//rarus vikhle 21.09.2020 mt 16181 +++	
		ИначеЕсли Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад Тогда
			Объект.ТребуетсяРазмещениеЗаказа = Истина;
			Элементы.Подобрать.Доступность = Ложь;
			//rarus vikhle 21.09.2020 mt 16181 ---	
		КонецЕсли;
		//rarus agar 03.02.2020 17123 ++
		Если Параметры.Свойство("БУ") Тогда
			Объект.ЗаявкаНаБУПродукты = Параметры.БУ;
		КонецЕсли;
		//rarus agar 03.02.2020 17123 --
	КонецЕсли;
	
	//rarus vikhle 10.11.2020 mt 16181 +++
	ОбновитьСписокПродуктов();
	//rarus agar 03.08.2020 16055 ++
	//ДатыИСтатусыОтгрузки = ПолучитьДатыИСтатусыОтгрузкиПродуктов();
	////rarus agar 03.08.2020 16055 --
	//ПриоритетныйСклад = Объект.Дилер.ПриоритетныйСклад; //rarus vikhle 11.08.2020 mt 16526
	//Для Каждого СтрокаПродукта Из СписокПродуктов Цикл //rarus vikhle 10.08.2020 mt 16181
	//	
	//	СтрокаПродукта.ПриоритетныйСклад =  (СтрокаПродукта.СкладОтгрузки = ПриоритетныйСклад И НЕ ПриоритетныйСклад.Пустая());//rarus vikhle 11.08.2020 mt 16526
	//	ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(СтрокаПродукта.Продукт);
	//	
	//	КлючеваяДатаВСтроку = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "БроньДилера");
	//	СтрокаПродукта.ДатаБрони = КлючеваяДатаВСтроку;
	//	
	//	//rarus agar 03.08.2020 16055 ++
	//	НайденнаяСтрока = ДатыИСтатусыОтгрузки.Найти(СтрокаПродукта.Продукт, "Продукт");
	//	Если НайденнаяСтрока <> Неопределено Тогда
	//		СтрокаПродукта.ДатаОтгрузки   = НайденнаяСтрока.ДатаОтгрузки;
	//		СтрокаПродукта.СтатусОтгрузки = НайденнаяСтрока.СтатусОтгрузки;
	//	КонецЕсли;
	//	//rarus agar 03.08.2020 16055 --
	//	
	//	//rarus vikhle 10.08.2020 mt 16181 +++
	//	Если ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
	//		СтрокаПродукта.ЗаказНаЗавод = ЗаказНаЗавод;
	//		СтрокаПродукта.ТипЗаказа = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод); //rarus vikhle 14.10.2020 mt 16181
	//		СтрокаПродукта.Модель = СтрокаПродукта.Продукт.МодельПродукта;
	//		СтрокаПродукта.СпецификацияПродукта = СтрокаПродукта.Продукт.СпецификацияПродукта;
	//		СтрокаПродукта.НомерПродукта = СтрокаПродукта.Продукт.НомерИзделия;
	//		//rarus vikhle 08.09.2020 mt 16181 +++
	//		СтрокаПродукта.DD = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "DD");
	//		СтрокаПродукта.DD2 = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "DD2");
	//		Если НЕ ЗначениеЗаполнено(СтрокаПродукта.DDЗапрошенная) Тогда
	//		СтрокаПродукта.DDЗапрошенная = ?(ЗначениеЗаполнено(СтрокаПродукта.DD2),СтрокаПродукта.DD2,СтрокаПродукта.DD);//rarus vikhle 15.09.2020 mt 16181
	//		КонецЕсли;
	//		//rarus vikhle 08.09.2020 mt 16181 ---
	//		СтрокаПродукта.ДокументУстановкиПлановыхЦен = СтрокаПродукта.Продукт.ДокументУстановкиПлановыхЦенПродукта; 
	//		СтрокаПродукта.ИтоговаяСумма = СтрокаПродукта.ДокументУстановкиПлановыхЦен.ЦенаDealerNetСоСкидкой; //rarus vikhle 02.10.2020 mt 16181 
	//		ОбщаяСуммаСоглашения = ОбщаяСуммаСоглашения + СтрокаПродукта.ИтоговаяСумма; 
	//	ИначеЕсли ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда 
	//		//rarus vikhle 02.10.2020 mt 16181 +++
	//		Если СтрокаПродукта.СпециальныеУсловия.Пустая() Тогда
	//			СтрокаПродукта.ИтоговаяСумма = СтрокаПродукта.ЦенаСНДС;
	//		Иначе
	//			СтрокаПродукта.ИтоговаяСумма = СтрокаПродукта.СпециальныеУсловия.ЦенаДляДилера;	
	//		КонецЕсли;	
	//		Если НЕ СтрокаПродукта.ПроцентДрайв = 0 Тогда
	//			СтрокаПродукта.ИтоговаяСумма = СтрокаПродукта.ИтоговаяСумма - (СтрокаПродукта.ИтоговаяСумма * СтрокаПродукта.ПроцентДрайв / 100); 
	//		КонецЕсли;
	//		ОбщаяСуммаСоглашения = ОбщаяСуммаСоглашения + СтрокаПродукта.ИтоговаяСумма;
	//		//rarus vikhle 02.10.2020 mt 16181 ---
	//		СтрокаПродукта.Модель = СтрокаПродукта.Продукт.Модель;	
	//	КонецЕсли;	
	//	//rarus vikhle 10.08.2020 mt 16181 ---
	//КонецЦикла;
	//rarus vikhle 10.11.2020 mt 16181 ---
	Если НЕ Объект.Ссылка.Пустая() Тогда //rarus vikhle 13.01.2021 mt 17056
		ЗаполнитьЧат();
		ОбновитьДеревоГрафикПлатежей(); //rarus vikhle 28.07.2021 17637 Раскомментировал
	КонецЕсли;	
	//rarus agar 09.12.2020 16892 ++
	//rarus vikhle 26.06.2020 mt 15888 +++
	//Если НЕ Объект.Ссылка.Пустая() Тогда 
	//	ЗаполнитьСписокВыбораКомпаний();
	//КонецЕсли;	
	//rarus vikhle 26.06.2020 mt 15888 ---	
	//rarus agar 09.12.2020 16892 --
	
	//rarus vikhle 11.09.2020 mt 16526 +++	
	//Если ЗначениеЗаполнено(Объект.СкладОтгрузки) Тогда
	//	ПереключательСклада = 1;	
	//КонецЕсли; 
	//rarus vikhle 11.09.2020 mt 16526 ---
	
	//rarus vikhle 29.12.2020 mt 17026 +++
	//Если Элементы.ГрафикПлатежей.Видимость Тогда
	//	ОбновитьГрафикПлатежей();
	//КонецЕсли;	
	//rarus vikhle 29.12.2020 mt 17026 ---
	
	//rarus vikhle 15.04.2021 mt 17484 +++
	Если Объект.Ссылка.Пустая() И НЕ Объект.Дилер.Пустая() Тогда
		ДилерАктивен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер,"ДилерАктивен");
		Если НЕ ДилерАктивен Тогда
			СообщениеОбОшибке = СтрШаблон(Нстр("ru = 'Дилер ""%1"" не активен.'"),Объект.Дилер); 
			Если Scan_ПраваИНастройки.Scan_Право("ЗапретРаботыСНеактивнымиДилерами") Тогда
				Объект.Дилер = Неопределено;	
				СообщениеОбОшибке = СообщениеОбОшибке + " Поле очищено.";
			КонецЕсли;	
			ВывестиСообщениеПол(СообщениеОбОшибке,,"Объект.Дилер");
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 15.04.2021 mt 17484 ---
	
	//rarus vikhle 01.07.2021 m 17944 +++
	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП Тогда
		НужноЗаполнитьУсловияЗаявки = Объект.Ссылка.Пустая() И СписокПродуктов.Количество() > 0; //rarus vikhle 28.07.2021 mt 17637
		ЗаполнитьСтандартныеУсловияОплаты(НужноЗаполнитьУсловияЗаявки); //rarus vikhle 28.07.2021 mt 17637 было: "(Объект.Ссылка.Пустая())" 	
		//rarus vikhle 28.07.2021 mt 17637 +++
		Если Не НужноЗаполнитьУсловияЗаявки Тогда
			ЗаполнитьСгруппированныеУсловия();	
		КонецЕсли;
		//rarus vikhle 28.07.2021 mt 17637 ---
		ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект); //rarus vikhle 02.08.2021 mt 17637
		
		//rarus vikhle 14.02.2023 m 19839 +++
		МассивМарок = Справочники.Scan_МаркиПродуктов.МаркиДоступныеПользователю(Пользователи.ТекущийПользователь());
		ДоступныеМарки.ЗагрузитьЗначения(МассивМарок);
		ФиксМассивМарок = Новый ФиксированныйМассив(МассивМарок);
		
		МассивПараметровВыбора = Новый Массив;
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.МаркаПродукта", ФиксМассивМарок));
		НовыеПараметрыВыбора =  Новый ФиксированныйМассив(МассивПараметровВыбора);
		Элементы.Модель.ПараметрыВыбора = НовыеПараметрыВыбора;
		//rarus vikhle 14.02.2023 m 19839 ---
	КонецЕсли;	
	//rarus vikhle 01.07.2021 m 17944 ---
	
	ПроцентДрайв = СтрЗаменить(Scan_ПраваИНастройки.Scan_Право("ПроцентДрайв"),",","."); //rarus vikhle 25.11.2020 mt 16846 
	ИтогГрафикПлатежей = Окр(Объект.ГрафикПлатежей.Итог("Сумма"));//rarus vikhle 16.04.2021 mt 17616
	
	Элементы.ДекорацияСпецификация.Заголовок = НайтиСпецификациюСоглашения(); //rarus ozhnik 16453 14.09.2020 + 
	
	ЗаблокироватьФормуОтИзменения = Параметры.ЗаблокироватьФормуОтИзменения; //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	КПЗагружено = Не Объект.КоммерческоеПредложениеSPORT.Пустая(); //rarus agar 08.12.2020 16892 +-
	
	УправлениеДиалогомНаСервере(); //rarus vikhle 23.11.2020 mt 16181
	
	УстановитьУсловноеОформление(); //rarus vikhle 11.11.2020
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//УправлениеДиалогомНаСервере(); //rarus vikhle 23.11.2020 mt 16181
	ЗаблокироватьФормуОтИзменения();//rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	ПредыдущееЗначениеДилера = Объект.Дилер;//rarus vikhle 26.05.2021 mt 17653
	УдаленныеПродукты		 = Новый Массив; //rarus vikhle 02.08.2021 m 17637
	ПредыдущаяМодель		 = Объект.Модель;//rarus vikhle 27.08.2021 m 18214 
	ПредыдущаяУникальностьСпецификации = Объект.УникальностьСпецификации; //rarus vikhle 27.12.2021 m 18269
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "СозданоДопСоглашение" Тогда
		Закрыть();
		//rarus vikhle 09.11.2020 mt 16181 +++
		//ПоказатьЗначение(,Параметр);
		ПараметрыФормы = Новый Структура("Ключ",Параметр);
		ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",
		ПараметрыФормы,ВладелецФормы); //rarus vikhle 02.02.2021 убрал режим открытия
	ИначеЕсли ИмяСобытия = "ИзмененыСкладыОтгрузки" Тогда 				
		Прочитать();
		ОбновитьСписокПродуктов(Истина);	
		//rarus vikhle 09.11.2020 mt 16181 ---
		// rarus kabany 14.07.2021 17992 ++
	ИначеЕсли ИмяСобытия = "ИзменитьУсловияДоговора" Тогда 				
		НовоеСоглашениеОПоставке = СоздатьНовуюВерсиюЗаявкиНаСОП(Объект.Ссылка);	 
		Если НЕ НовоеСоглашениеОПоставке.Пустая() Тогда
		Закрыть();
		ПараметрыФормы = Новый Структура("Ключ",НовоеСоглашениеОПоставке);
		ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",
		ПараметрыФормы,ВладелецФормы);
		ОповеститьПользователяОбУспешномВыполнении();
		КонецЕсли;
		// rarus kabany 14.07.2021 17992 --
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// rarus vikhle 07.09.2021 mt 18257 +++
	ТаблицаДляПроверки = Новый ТаблицаЗначений;
	ТаблицаДляПроверки.Колонки.Добавить("Продукт");
	ТаблицаДляПроверки.Колонки.Добавить("ВидПродукта");
	// rarus vikhle 07.09.2021 mt 18257 ---
	
	
	// Rarus tenkam 25.10.2021 mantis 17822 +++
	МаркаДляПроверки = ПредопределенноеЗначение("Справочник.Scan_МаркиПродуктов.Scania");
	// Rarus tenkam 25.10.2021 mantis 17822 ---
	
	//rarus vikhle 15.01.2021 mt 17055 +++
	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
		
		Если СтрокаСписка.Продукт = Неопределено 
			ИЛИ СтрокаСписка.Продукт = Справочники.Scan_ДрафтыПродуктов.ПустаяСсылка()
			ИЛИ СтрокаСписка.Продукт = Справочники.Scan_Изделия.ПустаяСсылка() Тогда
			ВывестиСообщениеПол(Нстр("ru = 'В таблице продуктов имеются строки с незаполненным продуктом.'"));	
			Отказ = Истина;
			Возврат;	
		КонецЕсли;
		// rarus vikhle 07.09.2021 mt 18257 +++
		Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
	    	НоваяСтрока = ТаблицаДляПроверки.Добавить();
			НоваяСтрока.Продукт = СтрокаСписка.Продукт;
			НоваяСтрока.ВидПродукта = СтрокаСписка.Продукт.ТипПродукта.ВидПродукта;
			
			МаркаДляПроверки = СтрокаСписка.Продукт.МаркаПродукта; // Rarus tenkam 25.10.2021 mantis 17822 +
		КонецЕсли;
		// rarus vikhle 07.09.2021 mt 18257 ---
		
		// Rarus tenkam 25.10.2021 mantis 17822 +++
		Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
		 	МаркаДляПроверки = СтрокаСписка.Продукт.Модель.МаркаПродукта;
		КонецЕсли;
		// Rarus tenkam 25.10.2021 mantis 17822 ---
	КонецЦикла;
	//rarus vikhle 15.01.2021 mt 17055 ---
	
	// rarus vikhle 07.09.2021 mt 18257 +++
	ТаблицаДляПроверки.Свернуть("ВидПродукта",);
	Если ТаблицаДляПроверки.Количество() > 1 Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = Нстр("ru = 'В списке продуктов указаны продукты с разными видами!'"); //rarus vikhle 13.09.2021 АПК + НСТР
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	// rarus vikhle 07.09.2021 mt 18257 ---
	
	//rarus vikhle 05.11.2020 mt 16723 +++
	СтарыйСтатус = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка,"Статус");
	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад 
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
		И НЕ Объект.Статус = СтарыйСтатус Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ЦветКабины) Тогда
			Отказ = Истина;
			ВывестиСообщениеПол(Нстр("ru = 'Поле ""Цвет кабины"" не заполнено'"),ЭтотОбъект,"Объект.ЦветКабины");
			Возврат;
		КонецЕсли;	
		
		СтруктураОтбора = Новый Структура("DDЗапрошенная",Дата(1,1,1));
		СтрокиБезDDЗапрошенной = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
		Если СтрокиБезDDЗапрошенной.Количество() > 0 Тогда
			Отказ = Истина;
			ВывестиСообщениеПол(Нстр("ru = 'Не заполнена DD запрошенная!'"));
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 05.11.2020 mt 16723 ---
	
	//rarus vikhle 25.12.2020 mt 17036 +++
	Если Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
		И (Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад 
		ИЛИ (ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП И Объект.ТребуетсяРазмещениеЗаказа))
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут
		И НЕ Объект.Статус =  Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС 
		Тогда
		Если НЕ ЗначениеЗаполнено(Объект.СтандартнаяСпецификация) Тогда
			Отказ = Истина;
			ВывестиСообщениеПол(Нстр("ru = 'Поле ""Стандартная спецификация"" не заполнено'"),ЭтотОбъект,"Объект.СтандартнаяСпецификация");
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 25.12.2020 mt 17036 ---
	
	//rarus vihkle 05.02.2021 mt 17196 +++
	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП
		И Объект.ТребуетсяРазмещениеЗаказа
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут
		И НЕ Объект.Статус =  Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда
		  		
		Если МаркаДляПроверки = ПредопределенноеЗначение("Справочник.Scan_МаркиПродуктов.Scania") Тогда // Rarus tenkam 25.10.2021 mantis 17822 +
		
			Если Объект.ЦветФальшрадиаторнойРешетки = "" Тогда
				Отказ = Истина;
				ВывестиСообщениеПол(Нстр("ru = 'Поле ""Цвет фальшрадиаторной решетки"" не заполнено'"),ЭтотОбъект,"Объект.ЦветФальшрадиаторнойРешетки");
				Возврат;	
			ИначеЕсли Объект.ЦветКабины = "" Тогда
				Отказ = Истина;
				ВывестиСообщениеПол(Нстр("ru = 'Поле ""Цвет кабины"" не заполнено'"),ЭтотОбъект,"Объект.ЦветКабины");
				Возврат;	
			КонецЕсли;
		КонецЕсли; // Rarus tenkam 25.10.2021 mantis 17822 +
	КонецЕсли;	
	//rarus vihkle 05.02.2021 mt 17196 ---
	
	//rarus vikhle 31.05.2021 mt 17653 +++
	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
		И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут
		И НЕ Объект.Статус =  Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда
		Если Объект.Дилер.Пустая() Тогда
			Отказ = Истина;
			ВывестиСообщениеПол(Нстр("ru = 'Поле ""Дилер"" на заполнено'"),,"Объект.Дилер");
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 31.05.2021 mt 17653 ---
	
	//rarus vikhle 10.02.2022 m 18875 +++
	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП
		И СтарыйСтатус <> Объект.Статус
		И НЕ Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std
		И Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП Тогда
		
		СтруктураОтбора = Новый Структура("Себестоимость", 0);
		СтрокиБезСС = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
		
		Если СтрокиБезСС.Количество() > 0 Тогда
			Отказ = Истина;
			ВывестиСообщениеПол(Нстр("ru = 'В тч ""Список продуктов"" есть продукты с незаполненной себестоимостью'"));
			Возврат;
		КонецЕсли;
		
	КонецЕсли; 	
	//rarus vikhle 10.02.2022 m 18875 ---
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//rarus vikhle 04.03.2022 m 18956 +++
	Если Объект.ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП") 
		И НЕ ПараметрыЗаписи.Свойство("НеПроверятьУдаленные") Тогда
	
		Если ДоступенВыборРезерва(Объект.Статус) Тогда
			
			Если ЕстьУдаленныеПродукты() Тогда
				ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаУдаленныхПродуктов", ЭтотОбъект, ПараметрыЗаписи);
				ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = 'Перенести удаленные продукты в резерв?'"), РежимДиалогаВопрос.ДаНетОтмена);
				Отказ = Истина;
			КонецЕсли;	
			
		КонецЕсли; 
	КонецЕсли;	
	//rarus vikhle 04.03.2022 m 18956 ---
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//rarus vikhle 11.08.2020 mt 16181 +++	
	//Если не значениезаполнено(объект.СпециальныеУсловия) Тогда
	//	ТекущийОбъект.Цена = ЦеНа;
	//	//ТекущийОбъект.КоличествоРабочихДней = КоличествоРабочихДней;
	//	//ТекущийОбъект.УсловияОплаты.Загрузить(УсловияОплаты.Выгрузить());//rarus vikhle 04.08.2020 mt 16181
	//	ТекущийОбъект.СписокПродуктов.Загрузить(СписокПродуктов.Выгрузить());//rarus vikhle mt 11.08.2020 mt 16181	
	//КонецЕсли;
	
	//rarus vikhle 08.09.2020 mt 16181 +++	
	ТекущийОбъект.СписокПродуктов.Загрузить(СписокПродуктов.Выгрузить());
	
	//rarus vikhle 24.12.2020 mt 16181 +++
	//Если ТекущийОбъект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП Тогда 
	//	И НЕ ТекущийОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП  Тогда
	//	ПараметрыЗаписи.Вставить("СписокПродуктовДоИзменений",Объект.Ссылка.СписокПродуктов.Выгрузить());
	//	ТекущийОбъект.ДополнительныеСвойства.Вставить("СписокПродуктовДоИзменений",ПараметрыЗаписи.СписокПродуктовДоИзменений);//rarus vikhle 25.01.2021 mt 16981	
	//КонецЕсли;
	
	//rarus vikhle 29.01.2021 mt 16929 +++
	Если ТекущийОбъект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП Тогда 
		
		//rarus vikhle 07.10.2021 mt 18076 +++
		Если ТекущийОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП
			ИЛИ ТекущийОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Оформлен
			ИЛИ ТекущийОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично
			//ИЛИ ТекущийОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Исполнен //rarus vikhle 13.10.2021 m 18076
			ИЛИ ТекущийОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП Тогда
			
				Если Справочники.Scan_СоглашенияОПоставке.НужноПроверятьЛимиты(ТекущийОбъект.Дилер, ТекущийОбъект.Договор) Тогда //rarus vikhle 21.10.2021 m 18076 
			
					ЛимитПоКоличеству	= Scan_ПраваИНастройки.Scan_Право("ЛимитКоличестваПродуктовВЗаявкеНаСОП");
					ЛимитПоСумме		= Scan_ПраваИНастройки.Scan_Право("ЛимитСуммыПродуктовВЗаявкеНаСОП");
					
					Если СписокПродуктов.Итог("Количество") > ЛимитПоКоличеству Тогда
						ВывестиСообщениеПол(Нстр("ru = 'Превышен лимит по общему количеству продуктов. Заявка не записана.'"));
						Отказ = Истина;	
						Возврат;
					ИначеЕсли СписокПродуктов.Итог("ИтоговаяСумма") > ЛимитПоСумме Тогда 	
						ВывестиСообщениеПол(Нстр("ru = 'Превышен лимит по общей сумме заявки. Заявка не записана.'"));
						Отказ = Истина;
						Возврат;
					КонецЕсли;
					
				КонецЕсли; //rarus vikhle 21.10.2021 m 18076	
					
		КонецЕсли;
		//rarus vikhle 07.10.2021 mt 18076 ---
		
		СписокПродуктовДоИзменений = Объект.Ссылка.СписокПродуктов.Выгрузить(); 
		ТекущийОбъект.ДополнительныеСвойства.Вставить("СписокПродуктовДоИзменений",СписокПродуктовДоИзменений);
		Если НЕ ТекущийОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП  Тогда
			ПараметрыЗаписи.Вставить("СписокПродуктовДоИзменений",СписокПродуктовДоИзменений);
		КонецЕсли;
					
	КонецЕсли;
	//rarus vikhle 29.01.2021 mt 16929 ---
	
	//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
	////rarus vikhle 02.02.2021 mt 17179 +++
	//СуммаУсловийОплаты = Окр(ТекущийОбъект.УсловияОплаты.Итог("Сумма"));//rarus vikhle 10.06.2021 mt 17636 //rarus vikhle 06.07.2021 17637 Откат, раскомментировал //rarus vikhle 12.07.2021 18012 добавил округление
	//	
	//Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП //rarus vikhle 05.02.2021 mt 17179
	//	И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
	//	И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
	//	И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут 
	//	И НЕ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда
	//	
	//	СтрокаПостоплаты = ТекущийОбъект.УсловияОплаты.Найти(Перечисления.Scan_ВидыОплат.Постоплата,"ВидОплаты");//rarus vikhle 06.07.2021 17637 Откат, добавил как было
	//	
	//	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//	//rarus vikhle 10.06.2021 mt 17636 +++
	//	//СтрокаПостоплаты	= Неопределено;
	//	//СуммаУсловийОплаты	= 0;
	//	//ОбщийПроцентУсловий = 0;
	//	//СтруктураОтбора		= Новый Структура("Продукт",Справочники.Scan_Изделия.ПустаяСсылка());
	//	//СтрокиБезПродукта	= ТекущийОбъект.УсловияОплаты.НайтиСтроки(СтруктураОтбора);

	//	//Для Каждого СтрокаТаблицы Из СтрокиБезПродукта Цикл
	//	//	Если СтрокаТаблицы.ВидОплаты = Перечисления.Scan_ВидыОплат.Постоплата Тогда
	//	//		СтрокаПостоплаты = СтрокаТаблицы;
	//	//	КонецЕсли;	
	//	//	СуммаУсловийОплаты  = СуммаУсловийОплаты + СтрокаТаблицы.Сумма; 
	//	//	ОбщийПроцентУсловий = ОбщийПроцентУсловий + СтрокаТаблицы.ПроцентОплаты;
	//	//КонецЦикла;
	//	//rarus vikhle 06.07.2021 17637 ---
	//	
	//	//rarus vikhle 10.06.2021 mt 17636 ---
	//	Если СуммаУсловийОплаты < ОбщаяСуммаСоглашения Тогда //rarus vikhle 10.06.2021 mt 17636 //rarus vikhle 12.07.2021 18012 изменил на "<"
	//	    Если СтрокаПостоплаты = Неопределено Тогда
	//			СтрокаПостоплаты 					= ТекущийОбъект.УсловияОплаты.Добавить();
	//			СтрокаПостоплаты.ВидОплаты			= Перечисления.Scan_ВидыОплат.Постоплата;
	//			СтрокаПостоплаты.Сумма 				= ОбщаяСуммаСоглашения - СуммаУсловийОплаты;
	//			//СтрокаПостоплаты.ПроцентОплаты		= 100 - ОбщийПроцентУсловий;//rarus vikhle 10.06.2021 mt 17636 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	//			СтрокаПостоплаты.ПроцентОплаты		= 100 - ТекущийОбъект.УсловияОплаты.Итог("ПроцентОплаты");//rarus vikhle 06.07.2021 17637 Откат, добавил как было
	//			СтрокаПостоплаты.СрокОплатыАванса 	= 30;
	//			СтрокаПостоплаты.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
	//			СтрокаПостоплаты.КрайняяДатаОплаты 	= Дата(1,1,1);
	//			ОбновитьГрафикПлатежей(ТекущийОбъект);//rarus vikhle 16.04.2021 mt 17667
	//		Иначе
	//			Если НЕ ОбщаяСуммаСоглашения = 0 Тогда //rarus vikhle 05.02.2021 mt 17179
	//				СтрокаПостоплаты.Сумма 				= ОбщаяСуммаСоглашения - СуммаУсловийОплаты; 	
	//				СтрокаПостоплаты.ПроцентОплаты		= СтрокаПостоплаты.Сумма / ОбщаяСуммаСоглашения * 100; 
	//				ОбновитьГрафикПлатежей(ТекущийОбъект);	
	//			Иначе
	//				СтрокаПостоплаты.Сумма 				= 0; 	
	//				СтрокаПостоплаты.ПроцентОплаты		= 0;	
	//			КонецЕсли;	
	//		КонецЕсли;	
	//	КонецЕсли;	
	//	//rarus vikhle 10.06.2021 mt 17636 ---
	//КонецЕсли;	
	////rarus vikhle 02.02.2021 mt 17179 ---
	//rarus vikhle 28.07.2021 mt 17637 ---
		
	//rarus vikhle 14.05.2021 mt 17733 +++
	Если ПараметрыЗаписи.Свойство("БылСозданДоговор") И ПараметрыЗаписи.БылСозданДоговор Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("БылСозданДоговор",Истина);
	КонецЕсли;
	//rarus vikhle 14.05.2021 mt 17733 ---
	
	//Если НЕ ТекущийОбъект.Ссылка.Пустая() Тогда //rarus vikhle 18.12.2020 mt 16181 +++
	//	ИзделияСНовымиЦенами = ПолучитьИзделияСНовымиЦенами();
	//	Если НЕ ИзделияСНовымиЦенами.Количество() = 0 Тогда
	//		Для Каждого СтрокаИзделия Из ИзделияСНовымиЦенами Цикл
	//			СоздатьДокументУстановкиПлановыхЦен(СтрокаИзделия);	
	//		КонецЦикла;	
	//	КонецЕсли;
	//КонецЕсли; //rarus vikhle 18.12.2020 mt 16181 ---	
	//rarus vikhle 24.12.2020 mt 16181 ---
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	СтарыйСтатус = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Ссылка,"Статус");
	ПараметрыЗаписи.Вставить("СтарыйСтатус",СтарыйСтатус);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
		//Если Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено Тогда
		//	 ТекущийПользователь = Пользователи.АвторизованныйПользователь();
		//	 Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
		//	 	Если ТипЗнч(СтрокаТаблицы.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
		//			СоздатьДокументУстановкиПлановыхЦен(СтрокаТаблицы,ТекущийПользователь);				
		//		КонецЕсли;																												
		//	 КонецЦикла;	
		//КонецЕсли;	
	//rarus vikhle 08.09.2020 mt 16181 ---
	//rarus vikhle 11.08.2020 mt 16181 ---
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
  
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//rarus vikhle 02.07.2020 mt 15888 +++
	//Если ЗначениеЗаполнено(Объект.СпециальныеУсловия) Тогда //rarus vikhle 11.08.2020 mt 16181
	//	ПроверитьСпециальныеУсловия(Отказ);	//rarus vikhle 11.08.2020 mt 16181
	//КонецЕсли;//rarus vikhle 11.08.2020 mt 16181
	//rarus vikhle 02.07.2020 mt 15888 ---		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//rarus vikhle 24.12.2020 mt 16181 +++
	Если ПараметрыЗаписи.Свойство("СписокПродуктовДоИзменений") Тогда
		//rarus vikhle 14.05.2021 mt 17733 +++
		Если Объект.ЗаявкаНаБУПродукты И ПараметрыЗаписи.СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП 
			И ПараметрыЗаписи.СтарыйСтатус <> Объект.Статус 
			И Объект.Статус <> Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ 
			И Объект.Статус <> Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут
			И Объект.Статус <> Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен Тогда 
			//Для заявок по Б/У при отправке на согласование для продуктов с заполненной ценой создадим документы цен
			ПродуктыБУСЦенами = ПолучитьПродуктыБУСЦЕнами();
			Для Каждого СтрокаИзделия Из ПродуктыБУСЦенами Цикл
				СоздатьДокументУстановкиПлановыхЦен(СтрокаИзделия);	
			КонецЦикла;
		ИначеЕсли Объект.Статус <> Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ 
			И Объект.Статус <> Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут
			И Объект.Статус <> Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен Тогда 
		//rarus vikhle 14.05.2021 mt 17733 ---
		   // rarus vikhle 10.08.2021 mt 17637 +++
			Если ПараметрыЗаписи.СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП Тогда
				Для Каждого СтрокаПродукта Из СписокПродуктов Цикл
					Если ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_Изделия") И НЕ СтрокаПродукта.СпециальныеУсловия.Пустая() Тогда
						СоздатьДокументУстановкиПлановыхЦен(СтрокаПродукта);	
					КонецЕсли;	
				КонецЦикла;	
			Иначе
				ИзделияСНовымиЦенами = ПолучитьИзделияСНовымиЦенами(ПараметрыЗаписи.СписокПродуктовДоИзменений);
				Если НЕ ИзделияСНовымиЦенами.Количество() = 0 Тогда
					Для Каждого СтрокаИзделия Из ИзделияСНовымиЦенами Цикл
						СоздатьДокументУстановкиПлановыхЦен(СтрокаИзделия);	
					КонецЦикла;	
				КонецЕсли;	
			КонецЕсли;	
			 //rarus vikhle 10.08.2021 mt 17637 ---
		КонецЕсли;	
		
		//rarus vikhle 21.01.2021 mt 16981 +++
		//Сохраняем в ВТ список продуктов до и после записи 
		Запрос = Новый Запрос;
		МВТ = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МВТ;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫРАЗИТЬ(ТекущийСписок.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
		               |	ТекущийСписок.СкладОтгрузки КАК СкладОтгрузки,
		               |	ТекущийСписок.МестоПередачи КАК МестоПередачи,
		               |	ТекущийСписок.СкладПродажи КАК СкладПродажи
		               |ПОМЕСТИТЬ ТекущийСписок
		               |ИЗ
		               |	&ТекущийСписок КАК ТекущийСписок
		               |ГДЕ
		               |	ТекущийСписок.Продукт ССЫЛКА Справочник.Scan_Изделия
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЫРАЗИТЬ(СписокДоИзменений.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
		               |	СписокДоИзменений.СкладОтгрузки КАК СкладОтгрузки
		               |ПОМЕСТИТЬ СписокДоИзменений
		               |ИЗ
		               |	&СписокДоИзменений КАК СписокДоИзменений
		               |ГДЕ
		               |	СписокДоИзменений.Продукт ССЫЛКА Справочник.Scan_Изделия
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СписокДоИзменений.Продукт КАК Продукт
		               |ПОМЕСТИТЬ УдаленныеПродукты
		               |ИЗ
		               |	СписокДоИзменений КАК СписокДоИзменений
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТекущийСписок КАК ТекущийСписок
		               |		ПО СписокДоИзменений.Продукт = ТекущийСписок.Продукт
		               |ГДЕ
		               |	ТекущийСписок.Продукт ЕСТЬ NULL";
		ТекущийСписок = РеквизитФормыВЗначение("СписокПродуктов");
		Запрос.УстановитьПараметр("ТекущийСписок",ТекущийСписок);
		Запрос.УстановитьПараметр("СписокДоИзменений",ПараметрыЗаписи.СписокПродуктовДоИзменений);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ 
			ИЛИ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут
			ИЛИ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен Тогда
			//При отмене, расторжении, отказе получаем удаленные до записи продукты и записанные продукты
			ЗапросОбщегоСписка = Новый Запрос;
			ЗапросОбщегоСписка.МенеджерВременныхТаблиц = МВТ;
			ЗапросОбщегоСписка.Текст = "ВЫБРАТЬ
			                           |	УдаленныеПродукты.Продукт КАК Продукт
			                           |ИЗ
			                           |	УдаленныеПродукты КАК УдаленныеПродукты
			                           |
			                           |ОБЪЕДИНИТЬ ВСЕ
			                           |
			                           |ВЫБРАТЬ
			                           |	ТекущийСписок.Продукт
			                           |ИЗ
			                           |	ТекущийСписок КАК ТекущийСписок";
			РезультатЗапросаОбщегоСписка = ЗапросОбщегоСписка.Выполнить(); //rarus vikhle 04.03.2022 m 18956
			Выборка = РезультатЗапросаОбщегоСписка.Выбрать(); //rarus vikhle 04.03.2022 m 18956
			Пока Выборка.Следующий() Цикл
				//Очищаем реквизиты ЗапрашиваемоеМестоПередачи и МестоПередачи продуктов и склад продажи(если у продукта нет запрета изменять)  
				ПродуктОбъект = Выборка.Продукт.ПолучитьОбъект();
				//rarus vikhle 08.02.2021 mt 16981 +++ Для записи источника и статуса в регистре история продуктов
				ПродуктОбъект.ДополнительныеСвойства.Вставить("Источник",Объект.Ссылка);
				ПродуктОбъект.ДополнительныеСвойства.Вставить("Статус",Объект.Статус);
				//rarus vikhle 08.02.2021 mt 16981 ---
				Если ПродуктОбъект.ЗапрашиваемоеМестоПередачи <> Справочники.Scan_Склады.ПустаяСсылка() Тогда
					ПродуктОбъект.ЗапрашиваемоеМестоПередачи  = Справочники.Scan_Склады.ПустаяСсылка();		
				КонецЕсли;	
				Если ПродуктОбъект.МестоПередачи <> Справочники.Scan_Склады.ПустаяСсылка() Тогда
					ПродуктОбъект.МестоПередачи  = Справочники.Scan_Склады.ПустаяСсылка();		
				КонецЕсли;
				//rarus vikhle 05.02.2021 mt 16981 +++
				Если НЕ ПродуктОбъект.ЗапретИзмененияСкладаПродажи 
					И ПродуктОбъект.СкладПродажи <> Справочники.Scan_Склады.ПустаяСсылка() Тогда 
					ПродуктОбъект.СкладПродажи = Справочники.Scan_Склады.ПустаяСсылка(); 	
				КонецЕсли;	
				//rarus vikhle 05.02.2021 mt 16981	
				Если ПродуктОбъект.Модифицированность() Тогда
					Попытка
						ПродуктОбъект.Записать();
					Исключение 
						ТекстОшибки = "Произошла ошибка при записи продукта: " + ОписаниеОшибки(); 
						Сообщить(ТекстОшибки);
					КонецПопытки;
				КонецЕсли;
			КонецЦикла;	
		Иначе
			//Получаем удаленные продукты и продукты с изменившимся складом
			ЗапросИзменененныхПродуктов = Новый Запрос;		
			ЗапросИзменененныхПродуктов.МенеджерВременныхТаблиц = МВТ;
			ЗапросИзменененныхПродуктов.Текст = "ВЫБРАТЬ
			               |	ТекущийСписок.Продукт КАК Продукт,
			               |	ТекущийСписок.СкладОтгрузки КАК СкладОтгрузки,
			               |	ТекущийСписок.МестоПередачи КАК МестоПередачи,
			               |	ТекущийСписок.СкладПродажи КАК СкладПродажи
			               |ИЗ
			               |	ТекущийСписок КАК ТекущийСписок
						   //rarus vikhle 06.05.2021 mt 17748 +++
						   //|ГДЕ
						   //|	(НЕ ТекущийСписок.МестоПередачи = ТекущийСписок.Продукт.МестоПередачи
						   //|			ИЛИ НЕ ТекущийСписок.СкладПродажи = ТекущийСписок.Продукт.СкладПродажи
						   //|			ИЛИ НЕ ТекущийСписок.СкладОтгрузки = ТекущийСписок.Продукт.ЗапрашиваемоеМестоПередачи)
						   //rarus vikhle 06.05.2021 mt 17748 ---
						   |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	УдаленныеПродукты.Продукт КАК Продукт
			               |ИЗ
			               |	УдаленныеПродукты КАК УдаленныеПродукты";
			МассивРезультатов = ЗапросИзменененныхПродуктов.ВыполнитьПакет();
			
			ВыборкаТекущийСписок = МассивРезультатов[0].Выбрать();
			Пока ВыборкаТекущийСписок.Следующий() Цикл
				//rarus vikhle 05.05.2021 mt 17748 +++
				МестоПередачиПродукта = Неопределено;
				СкладПродажиПродукта  = Неопределено;
				//rarus vikhle 05.05.2021 mt 17748 ---
				
				//Обновляем при необходимости реквизиты-склады у продуктов
				ПродуктОбъект = ВыборкаТекущийСписок.Продукт.ПолучитьОбъект();
				//rarus vikhle 08.02.2021 mt 16981 +++ Для записи источника и статуса в регистре история продуктов
				ПродуктОбъект.ДополнительныеСвойства.Вставить("Источник",Объект.Ссылка);
				ПродуктОбъект.ДополнительныеСвойства.Вставить("Статус",Объект.Статус);
				//rarus vikhle 08.02.2021 mt 16981 ---
				
				Если ПродуктОбъект.ЗапрашиваемоеМестоПередачи <> ВыборкаТекущийСписок.СкладОтгрузки Тогда
					ПродуктОбъект.ЗапрашиваемоеМестоПередачи  = ВыборкаТекущийСписок.СкладОтгрузки;		
				КонецЕсли;	
				
				Если ПродуктОбъект.МестоПередачи <> ВыборкаТекущийСписок.МестоПередачи Тогда
					ПродуктОбъект.МестоПередачи  = ВыборкаТекущийСписок.МестоПередачи;
				ИначеЕсли ПродуктОбъект.МестоПередачи.Пустая() И ВыборкаТекущийСписок.МестоПередачи <> ВыборкаТекущийСписок.СкладОтгрузки Тогда
					ПродуктОбъект.МестоПередачи = ВыборкаТекущийСписок.СкладОтгрузки;
					МестоПередачиПродукта = ВыборкаТекущийСписок.СкладОтгрузки;//rarus vikhle 05.05.2021 mt 17748
				КонецЕсли;
				
				Если ПродуктОбъект.СкладПродажи <> ВыборкаТекущийСписок.СкладПродажи 
					И НЕ ПродуктОбъект.ЗапретИзмененияСкладаПродажи Тогда  //rarus vikhle 06.05.2021 mt 17748
					ПродуктОбъект.СкладПродажи  = ВыборкаТекущийСписок.СкладПродажи;
				ИначеЕсли ПродуктОбъект.СкладПродажи.Пустая() 
					И ВыборкаТекущийСписок.СкладПродажи <>  ВыборкаТекущийСписок.СкладОтгрузки
					И НЕ ПродуктОбъект.ЗапретИзмененияСкладаПродажи  Тогда
					ПродуктОбъект.СкладПродажи = ВыборкаТекущийСписок.СкладОтгрузки; 	
					СкладПродажиПродукта = ВыборкаТекущийСписок.СкладОтгрузки;//rarus vikhle 05.05.2021 mt 17748
				КонецЕсли;
				
				Если ПродуктОбъект.Модифицированность() Тогда
					Попытка
						ПродуктОбъект.Записать();
						
						//rarus vikhle 05.05.2021 mt 17748 +++
						Если НЕ МестоПередачиПродукта = Неопределено Тогда
							СтруктураОтбора = Новый Структура("Продукт",ПродуктОбъект.Ссылка);
							мСтрок = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
							Для Каждого СтрокаТаблицы Из мСтрок Цикл
								СтрокаТаблицы.МестоПередачи = МестоПередачиПродукта;
							КонецЦикла;	
						КонецЕсли;
						
						Если НЕ СкладПродажиПродукта = Неопределено Тогда
							СтруктураОтбора = Новый Структура("Продукт",ПродуктОбъект.Ссылка);
							мСтрок = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
							Для Каждого СтрокаТаблицы Из мСтрок Цикл
								СтрокаТаблицы.СкладПродажи = СкладПродажиПродукта;
							КонецЦикла;	
						КонецЕсли;
						//rarus vikhle 05.05.2021 mt 17748 ---
					Исключение 
						ТекстОшибки = "Произошла ошибка при записи продукта: " + ОписаниеОшибки(); 
						Сообщить(ТекстОшибки);
					КонецПопытки;
				КонецЕсли;
			КонецЦикла;
			
			ВыборкаУдаленные = МассивРезультатов[1].Выбрать();
			Пока ВыборкаУдаленные.Следующий() Цикл
				//Для удаленных из заявки продуктов очищаем реквизиты ЗапрашиваемоеМестоПередачи и МестоПередачи 
				ПродуктОбъект = ВыборкаУдаленные.Продукт.ПолучитьОбъект();
				//rarus vikhle 08.02.2021 mt 16981 +++ Для записи источника и статуса в регистре история продуктов
				ПродуктОбъект.ДополнительныеСвойства.Вставить("Источник",Объект.Ссылка);
				ПродуктОбъект.ДополнительныеСвойства.Вставить("Статус",Объект.Статус);
				//rarus vikhle 08.02.2021 mt 16981 ---
				Если ПродуктОбъект.ЗапрашиваемоеМестоПередачи <> Справочники.Scan_Склады.ПустаяСсылка() Тогда
					ПродуктОбъект.ЗапрашиваемоеМестоПередачи  = Справочники.Scan_Склады.ПустаяСсылка();		
				КонецЕсли;	
				Если ПродуктОбъект.МестоПередачи <> Справочники.Scan_Склады.ПустаяСсылка() Тогда
					ПродуктОбъект.МестоПередачи  = Справочники.Scan_Склады.ПустаяСсылка();		
				КонецЕсли;
				//rarus vikhle 16.02.2021 mt 16981 +++
				Если НЕ ПродуктОбъект.ЗапретИзмененияСкладаПродажи И ПродуктОбъект.СкладПродажи <> Справочники.Scan_Склады.ПустаяСсылка() Тогда
					ПродуктОбъект.СкладПродажи  = Справочники.Scan_Склады.ПустаяСсылка();		
				КонецЕсли;
				//rarus vikhle 16.02.2021 mt 16981 ---
								
				Если ПродуктОбъект.Модифицированность() Тогда
					Попытка
						ПродуктОбъект.Записать();
					Исключение 
						ТекстОшибки = "Произошла ошибка при записи продукта: " + ОписаниеОшибки(); 
						Сообщить(ТекстОшибки);
					КонецПопытки;
				КонецЕсли;
				
			КонецЦикла;	
		КонецЕсли;	
		//rarus vikhle 21.01.2021 mt 16981 ---
		
		//rarus vikhle 04.03.2022 m 18956 +++
		Если ПараметрыЗаписи.Свойство("ПереноситьВРезерв") Тогда
			Если Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут Тогда
				ТаблицаПродуктов = РезультатЗапросаОбщегоСписка.Выгрузить();
				ЗаявкаНаСОПSRU = Справочники.Scan_СоглашенияОПоставке.СоздатьЗаявкуНаСОПSRU(Объект.Ссылка, ТаблицаПродуктов, Ложь);
			Иначе
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = МВТ;
				Запрос.Текст = "ВЫБРАТЬ
				               |	УдаленныеПродукты.Продукт КАК Продукт
				               |ИЗ
				               |	УдаленныеПродукты КАК УдаленныеПродукты";
				ТаблицаПродуктов = Запрос.Выполнить().Выгрузить();	
				ЗаявкаНаСОПSRU = Справочники.Scan_СоглашенияОПоставке.СоздатьЗаявкуНаСОПSRU(Объект.Ссылка, ТаблицаПродуктов, Истина);	
			КонецЕсли;	
						
			Если НЕ ЗаявкаНаСОПSRU = Неопределено Тогда
				ПараметрыЗаписи.Вставить("ЗаявкаНаСОПSRU", ЗаявкаНаСОПSRU);
			КонецЕсли;	
		КонецЕсли;	
		//rarus vikhle 04.03.2022 m 18956 ---
		
		//Удаление перед переходом на клиент
		ПараметрыЗаписи.Удалить("СписокПродуктовДоИзменений");
	КонецЕсли;	
	//rarus vikhle 24.12.2020 mt 16181 ---
	
	//rarus vikhle 27.10.2021 m 18426 +++
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("ИзмененаDDS") Тогда
		ПараметрыЗаписи.Вставить("ИзмененаDDS");
	КонецЕсли;	
	//rarus vikhle 27.10.2021 m 18426 ---
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	Если ПараметрыЗаписи.Свойство("ЗакрыватьФорму") И ПараметрыЗаписи.ЗакрыватьФорму Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи.СтарыйСтатус <> Объект.Статус Тогда
		УправлениеДиалогомНаСервере();
	КонецЕсли;	
	ОбновитьДанныеПродуктов(); //rarus vikhle 10.11.2020 mt 16181
	//rarus vikhle 23.11.2020 mt 16181 ---	
	
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);//rarus vikhle 07.07.2021 17944
	
	//rarus ozhnik 15888 29.06.2020 + исправлена запись для новго объекта
	//РегистрыСведений.Scan_СоставСоглашенийОПоставке.ЗаписатьСоставСоглашения(СписокПродуктов.Выгрузить(), Объект.Ссылка);
	//МассивСтрок = Новый Массив;
	//ТЗСписокПродуктов = ДанныеФормыВЗначение(СписокПродуктов,Тип("ТаблицаЗначений"));
	//Для Каждого СтрокаТЗ Из ТЗСписокПродуктов Цикл
	//	Если ТипЗнч(СтрокаТЗ.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
	//		МассивСтрок.Добавить(СтрокаТЗ);							
	//	КонецЕсли;
	//КонецЦикла;
	//ТЗФактическихПродуктов = ТЗСписокПродуктов.Скопировать(МассивСтрок); 
	//РегистрыСведений.Scan_СоставСоглашенийОПоставке.ЗаписатьСоставСоглашения(ТЗФактическихПродуктов, Объект.Ссылка);//rarus vikhle 11.08.2020 mt 16181
	////rarus vikhle 25.06.2020 mt 15888 +++
	//Для Каждого СтрокаСписка Из ТЗФактическихПродуктов Цикл //rarus vikhle 12.08.2020 mt 16181	
	//	Если Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
	//		ИЛИ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
	//		ИЛИ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут
	//		ИЛИ	Объект.Статус =	Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС Тогда //rarus vikhle 05.08.2020 mt 16181 
	//		ДатаDDS = Дата(1,1,1);
	//	Иначе
	//		//rarus vikhle 05.08.2020 mt 16181 +++
	//		//ДатаDDS = Объект.DDS;
	//		
	//		ДатаDDS = СтрокаСписка.DDS;
	//		//rarus vikhle 05.08.2020 mt 16181 ---
	//	КонецЕсли;	
	//	КлючевыеДаты = Новый Структура("DDS",ДатаDDS);
	//	РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевыеДатыОбъекта(СтрокаСписка.Продукт.ЗаказНаЗавод,КлючевыеДаты);
	//КонецЦикла;	
	////rarus vikhle 25.06.2020 mt 15888

	////rarus vikhle 10.08.2020 mt 16181 +++	
	//Если Объект.Статус =  Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
	//	ИЛИ  Объект.Статус =  Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ
	//	ИЛИ  Объект.Статус =  Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут Тогда
	//	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
	//		Документы.Scan_УстановкаПлановыхЦенПродукта.ОтменитьДокументУстановкиЦенПоПродукту(СтрокаСписка.Продукт);	
	//	КонецЦикла;	
	//КонецЕсли;		
	////rarus vikhle 10.08.2020 mt 16181 ---
	
	
	//rarus ozhnik 15888 29.06.2020 + 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	//rarus vikhle 04.03.2022 m 18956 +++
	Если ПараметрыЗаписи.Свойство("ЗаявкаНаСОПSRU") Тогда
		ПараметрыОткрытия = Новый Структура("Ключ", ПараметрыЗаписи.ЗаявкаНаСОПSRU);
		ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаЭлементаЗаявкаНаСОПSRU", ПараметрыОткрытия);
	КонецЕсли;	
	//rarus vikhle 04.03.2022 m 18956 ---
	
	//rarus vikhle 27.10.2021 m 18426 +++
	Если ПараметрыЗаписи.Свойство("ИзмененаDDS") Тогда
		Scan_ВспомогательныеФункцииКлиент.НачатьФоновоеОбновлениеDDS(Объект.Ссылка);
	КонецЕсли;	
	//rarus vikhle 27.10.2021 m 18426 ---
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура STDUOПриИзменении(Элемент)
	
	//УправлениеДиалогомНаСервере();
	STDUOПриИзмененииНаСервере();//rarus vikhle 01.07.2021 m 17944
	
	//rarus vikhle 13.10.2020 mt 16181 +++
	Если Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UO")
		ИЛИ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UUO") Тогда 
		Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа = Объект.НомерКоммерческогоПредложенияSPORT;
		//ЗаполнитьСебестоимостьВСписке(Истина);//rarus vikhle 11.11.2020 mt 16181 //rarus vikhle 24.05.2021 mt 17780
		//rarus vikhle 11.11.2020 mt 16723 +++
		Объект.СтандартнаяСпецификация = ПредопределенноеЗначение("Документ.Scan_СпецификацияСтандартнойМодели.ПустаяСсылка");
		Объект.Модель = ПредопределенноеЗначение("Справочник.Scan_МоделиПродуктов.ПустаяСсылка"); 
		ПредыдущаяМодель = Объект.Модель; // rarus vikhle 27.08.2021 mt 18214
		
		// rarus vikhle 27.12.2021 m 18269 +++
		// Изменение с STD на UO/UUO, необходимо очистить себестоимость из документа спецификации
		Если ПредыдущаяУникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
			ОчиститьКолонкуСпискаПродуктов("Себестоимость");
		КонецЕсли;	
		// rarus vikhle 27.12.2021 m 18269 ---
		
	ИначеЕсли Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
		Элементы.Модель.ТолькоПросмотр = Истина;
		//rarus vikhle 11.11.2020 mt 16723 ---	
	Иначе
		Объект.НомерКоммерческогоПредложенияSPORT = "";
		Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа = "";
	КонецЕсли;
	//rarus vikhle 13.10.2020 mt 16181 ---
	
	ПредыдущаяУникальностьСпецификации = Объект.УникальностьСпецификации; // rarus vikhle 27.12.2021 m 18269
	
КонецПроцедуры

&НаКлиенте
Процедура STDUOОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//rarus vikhle 27.12.2021 m 18269 +++
	Если ВыбранноеЗначение = ПредыдущаяУникальностьСпецификации Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;	
	//rarus vikhle 27.12.2021 m 18269 ---
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	//rarus vikhle 11.09.2020 mt 16526 +++
	//Если ПереключательСклада = 0 Тогда
	//	Объект.СкладОтгрузки = неопределено;
	//КонецЕсли; 
	//УправлениеДиалогомНаСервере();
	//rarus vikhle 11.09.2020 mt 16526 ---
КонецПроцедуры

&НаКлиенте
Процедура СтатусСОППриИзменении(Элемент)
	УправлениеДиалогомНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КоличествоРабочихДнейПриИзменении(Элемент)
	//Объект.КоличествоРабочихДней = КоличествоРабочихДней;
КонецПроцедуры

&НаКлиенте
Процедура СпециальныеУсловияПриИзменении(Элемент)
	//СпециальныеУсловияПриИзмененииНаСервере();//rarus vikhle mt 11.08.2020 mt 16181 
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	
	//rarus vikhle 27.08.2021 m 18214 +++
	Если НЕ МоделиЗаявкиИТаблицыСовпадают() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Выбранная модель отличается от модели продуктов в табличной части ""Список продуктов""'"));
		Объект.Модель = ПредыдущаяМодель;
	Иначе
		ПредыдущаяМодель = Объект.Модель;
	КонецЕсли;	
	//rarus vikhle 27.08.2021 m 18214 --
	
	СформироватьНаименование();
	ОбновитьПризнакЗаявкаНаАвтобусы();	// rarus tenkam 18.06.2021 mantis 17741 +
	
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентПриИзменении(Элемент)
	
	//rarus agar 09.12.2020 16892 ++
	//ЗаполнитьСписокВыбораКомпаний();
	КомпанииКонтрагентов = ПолучитьКомпанииКонтрагента(Объект.КонечныйКлиент);
	Если КомпанииКонтрагентов.Количество() = 1 Тогда
		Объект.КонечныйКлиентКомпания = КомпанииКонтрагентов[0];
	ИначеЕсли КомпанииКонтрагентов.Найти(Объект.КонечныйКлиентКомпания) = Неопределено  Тогда
		Объект.КонечныйКлиентКомпания = Неопределено;
	КонецЕсли;
	//rarus agar 09.12.2020 16892 --
	
	СформироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентКомпанияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентКомпанияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//rarus agar 09.12.2020 16892 ++
	//Если Не Объект.КонечныйКлиент.Пустая() Тогда
	//	СтандартнаяОбработка = Ложь;
	//	ВыбранныйЭлемент     = Неопределено;
	//	КомпанииДляВыбора    = ЗаполнитьКомпании();
	//	
	//	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("КонечныйКлиентКомпанияНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент)), КомпанииДляВыбора, Элемент, );
	//КонецЕсли;
	Если Объект.КонечныйКлиент.Пустая() Тогда
		Возврат;
	КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	МассивКомпаний = ПолучитьКомпанииКонтрагента(Объект.КонечныйКлиент);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"Ссылка",
															ВидСравненияКомпоновкиДанных.ВСписке,
															МассивКомпаний,,Истина);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элемент);
	//rarus agar 09.12.2020 16892 --
	
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//rarus agar 09.12.2020 16892 ++
	//Если Не Объект.КонечныйКлиентКомпания.Пустая() Тогда
	//	СтандартнаяОбработка = Ложь;
	//	ВыбранныйЭлемент     = Неопределено;
	//	КонтрагентыДляВыбора = ЗаполнитьКонтрагентов();
	//	
	//	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("КонечныйКлиентНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент)), КонтрагентыДляВыбора, Элемент, );
	//КонецЕсли;
	
	//rarus vikhle 22.12.2020 mt 16997 +++
	//Если Объект.КонечныйКлиентКомпания.Пустая() Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	ПараметрыФормы = Новый Структура;
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок",Истина);
	Если НЕ Объект.КонечныйКлиентКомпания.Пустая() Тогда 
		ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
		МассивКомпаний = ПолучитьКонтрагентовКомпании(Объект.КонечныйКлиентКомпания);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
																"Ссылка",
																ВидСравненияКомпоновкиДанных.ВСписке,
																МассивКомпаний,,Истина);
		ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);															
	КонецЕсли;														
	//rarus vikhle 22.12.2020 mt 16997 ---
	
	ОткрытьФорму("Справочник.Scan_Контрагенты.ФормаВыбора", ПараметрыФормы, Элемент);
	//rarus agar 09.12.2020 16892 --
	
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.КонечныйКлиент = ВыбранныйЭлемент.Значение;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КПSPORTДляРазмещенияЗаказаНАЗаводПриИзменении(Элемент)
	//rarus vikhle 13.10.2020 mt 16181 +++
	// возврат 15888 отключил неявную загрузку
	//Если не ЗначениеЗаполнено(Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа) Тогда
	//	ВывестиСообщениеПол("ru = 'Не указан номер коммерческого предложения. Загрузка невозможна.'; en = 'Не указан номер коммерческого предложения. Загрузка невозможна.'",ЭтаФорма,"НомерКПSPORT");	
	//	возврат;		
	//КонецЕсли; 	
	//
	//МассивСсылок = ЗагрузитьКПНаСервере(Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа);
	//ПараметрыОткрытия = Новый Структура;
	//ПараметрыОткрытия.Вставить("МассивКП",МассивСсылок);
	//ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораКП", ЭтотОбъект);
	//ОткрытьФорму("Справочник.Scan_КоммерческиеПредложения.Форма.ФормаВыбора",ПараметрыОткрытия,ЭтаФорма,,,,ОписаниеОповещения);
	//rarus vikhle 13.10.2020 mt 16181 ---	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	РассчитатьЦенуБезНДС(,Истина);
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//rarus agar 13.04.2021 17622 ++
	//ЗначениеОтбора = Новый Структура("ПометкаУдаления", ложь);
	//ЗначениеОтбора.Вставить("Статус", ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе"));
	//ПараметрыВыбораМестаХранения = Новый Структура("Отбор", ЗначениеОтбора);
	ПараметрыВыбораМестаХранения = Новый Структура;
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
																"ПометкаУдаления",
																ВидСравненияКомпоновкиДанных.Равно,
																Ложь, "Пометка удаления", Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
																"Статус",
																ВидСравненияКомпоновкиДанных.Равно,
																ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе"), "Статус", Истина);
	//rarus agar 13.04.2021 17622 --
	
	//rarus vikhle 01.02.2021 mt 17179 +++
	Если НЕ Объект.Модель.Пустая() Тогда
		//rarus agar 13.04.2021 17622 ++
		//ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
		//rarus agar 13.04.2021 17622 --
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
																"Модель.Наименование",
																ВидСравненияКомпоновкиДанных.НачинаетсяС,
																Лев(СокрЛП(Строка(Объект.Модель)),10), "Наименование модели",Истина); //rarus agar 13.04.2021 17622 +-
		//rarus agar 13.04.2021 17622 ++
		//ПараметрыВыбораМестаХранения.Вставить("ФиксированныеНастройки",ФиксированныеНастройки);
		//rarus agar 13.04.2021 17622 --
	КонецЕсли;
	//rarus vikhle 01.02.2021 mt 17179 ---
	
	//rarus agar 13.04.2021 17622 ++
	ПараметрыВыбораМестаХранения.Вставить("ФиксированныеНастройки",ФиксированныеНастройки);
	//rarus agar 13.04.2021 17622 --
	
	Описание = Новый ОписаниеОповещения("ВыборСпецификации",ЭтотОбъект);
	ОткрытьФорму("Документ.Scan_СпецификацияСтандартнойМодели.ФормаВыбора", 
					ПараметрыВыбораМестаХранения,
					Элементы.СтандартнаяСпецификация,,,,, //rarus vikhle 09.11.2020 mt 16723 изменил владельца, убрал оповещение
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура НомерКПSPORTПриИзменении(Элемент)
	
	//rarus vikhle 13.10.2020 mt 16181 +++
	Если Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UO")
		ИЛИ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UUO") Тогда 
		Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа = Объект.НомерКоммерческогоПредложенияSPORT;
	КонецЕсли;	
	//rarus vikhle 13.10.2020 mt 16181 ---
	
КонецПроцедуры

//rarus vikhle 05.11.2020 mt 16723 +++
&НаКлиенте
Процедура СтандартнаяСпецификацияПриИзменении(Элемент)
	
	Если НЕ Объект.СтандартнаяСпецификация.Пустая() Тогда
		//rarus vikhle 27.08.2021 mt 18214 +++
		//Объект.SORDER = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"SOrder");
		//Объект.FFU 	  = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"FFU");
		//rarus vikhle 27.08.2021 mt 18214 ---
		Объект.Модель = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"Модель"); //rarus vikhle 11.11.2020 mt 16181 
		//rarus vikhle 27.08.2021 mt 18214 +++
		Если Не МоделиЗаявкиИТаблицыСовпадают() Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Модель из стандартной спецификации ""%1"" отличается от моделей продуктов в табличной части ""Список продуктов"". Поле ""Стандартная спецификация"" очищено.'"),,,,,Объект.СтандартнаяСпецификация);
			Объект.СтандартнаяСпецификация = Неопределено;
			Объект.Модель = ПредыдущаяМодель;
		Иначе
			//rarus vikhle 27.08.2021 mt 18214 +++
			Объект.SORDER 		= Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"SOrder");
			Объект.FFU 	  		= Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"FFU");
			ПредыдущаяМодель 	= Объект.Модель;
			
			Элементы.Модель.ТолькоПросмотр = Истина;
			//rarus vikhle 27.08.2021 mt 18214 ---
											
		КонецЕсли;	
		//rarus vikhle 27.08.2021 mt 18214 ---
		
	Иначе
	 	Объект.SORDER = ПредопределенноеЗначение("Справочник.Scan_ОпцииПродуктов.Нет_SOrder");
		Объект.FFU 	  = ПредопределенноеЗначение("Справочник.Scan_ОпцииПродуктов.Нет_FFU");
		Элементы.Модель.ТолькоПросмотр = Ложь; //rarus vikhle 11.11.2020 mt 16723
	КонецЕсли;
	
	ЗаполнитьСебестоимостьИзСпецификации();	//rarus vikhle 21.12.2021 m 18269
	
	Если Объект.SORDER.Пустая() Тогда
		Объект.SORDER = ПредопределенноеЗначение("Справочник.Scan_ОпцииПродуктов.Нет_SOrder");	
	КонецЕсли;	
	Если Объект.FFU.Пустая() Тогда
		Объект.FFU 	  = ПредопределенноеЗначение("Справочник.Scan_ОпцииПродуктов.Нет_FFU");	
	КонецЕсли;	
	
КонецПроцедуры
//rarus vikhle 05.11.2020 mt 16723 ---

&НаКлиенте
Процедура КонечныйКлиентКомпанияПриИзменении(Элемент)
	
	КонтрагентыКомпании = ПолучитьКонтрагентовКомпании(Объект.КонечныйКлиентКомпания);
	Если КонтрагентыКомпании.Количество() = 1 Тогда
		Объект.КонечныйКлиент = КонтрагентыКомпании[0];
	ИначеЕсли КонтрагентыКомпании.Найти(Объект.КонечныйКлиент) = Неопределено  Тогда //rarus vikhle 23.12.2020 mt 16997
		Объект.КонечныйКлиент = Неопределено;
	КонецЕсли;
	
	СформироватьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ДилерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	// rarus vikhle 27.08.2021 mt 17834 +++
	ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
	ПользовательСотрудник = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ПользовательСотрудник");
	// rarus vikhle 27.08.2021 mt 17834 ---
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок", Истина);
	
	Если НЕ ПользовательСотрудник Тогда // rarus vikhle 27.08.2021 mt 17834
		МассивКомпаний = ПолучитьКомпанииПользователя();
		
		ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор, "Ссылка", ВидСравненияКомпоновкиДанных.ВСписке, МассивКомпаний,,Истина);
		ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	КонецЕсли;	
		
	//ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораДилера", ЭтотОбъект); //rarus vikhle 25.05.2021 17653
	
	ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элемент); //rarus vikhle 25.05.2021 17653
	
КонецПроцедуры

&НаКлиенте
Процедура ПродавецДилераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок", Истина);
	
	МассивКомпаний = ПолучитьКомпанииПользователя();
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор, "Владелец", ВидСравненияКомпоновкиДанных.ВСписке, МассивКомпаний,,Истина);
	ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	ПараметрыФормы.Вставить("ОтображатьВсеКонтактныеЛица", Ложь);
	
	ОткрытьФорму("Справочник.Scan_КонтактныеЛица.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДилерПриИзменении(Элемент)
	
	Если Не Объект.Дилер.Пустая() Тогда
		// rarus vikhle 27.08.2021 mt 17834 +++
		ТекущийПользователь   = ПользователиКлиент.ТекущийПользователь();
		ПользовательСотрудник = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ПользовательСотрудник");
		
		Если Не ПользовательСотрудник Тогда // rarus vikhle 27.08.2021 mt 17834 ---
			МассивКомпаний = ПолучитьКомпанииПользователя();
			Если МассивКомпаний.Найти(Объект.Дилер) = Неопределено Тогда
				ВывестиСообщениеПол(Нстр("ru = 'Дилер ""%1"" недоступен для выбора!'"), ЭтотОбъект,,,, Объект.Дилер);
				Объект.Дилер = ПредыдущееЗначениеДилера;//rarus vikhle 26.05.2021 mt 17653 
				Возврат;
			КонецЕсли;
		КонецЕсли;	
				
		//rarus vikhle 26.05.2021 mt 17653 +++
		СУДругогоДилера = СУДругогоДилера();
    	Если СУДругогоДилера.Количество() > 0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаУдалениеСУ",ЭтотОбъект,СУДругогоДилера);	
			ТекстВопроса = СтрШаблон(Нстр("ru = 'В таблице ""Список продуктов"" имеются СУ с дилером, отличным от ""%1"". СУ будут удалены из заявки, продолжить?'"),Объект.Дилер);
			ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса,РежимДиалогаВопрос.ДаНет);			
			Возврат;
		КонецЕсли;
		//rarus vikhle 26.05.2021 mt 17653 ---
	Иначе
		ПредыдущееЗначениеДилера = ПредопределенноеЗначение("Справочник.Scan_Компании.ПустаяСсылка");
	КонецЕсли;
	
	ПриИзмененииДилераНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДилерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПредыдущееЗначениеДилера = Объект.Дилер;//rarus vikhle 26.05.2021 mt 17653
	ОписаниеОповещения = Новый ОписаниеОповещения("ДилерОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение); //rarus vikhle 15.04.2021 mt 17484
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка,Ложь);
	//rarus vikhle 26.05.2021 mt 17653 +++
	// Для случая, когда установлено право 30057 "Запрет работы с неактивными дилерами"
	// возвращаем предыдущее непустое значение дилера (чтобы не отображалась пустая ссылка в истории выбора).
	Если ВыбранноеЗначение = Неопределено И НЕ ПредыдущееЗначениеДилера.Пустая() Тогда
		ВыбранноеЗначение = ПредыдущееЗначениеДилера;
	КонецЕсли;	
	//rarus vikhle 26.05.2021 mt 17653 ---
	
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентКомпанияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КонечныйКлиентКомпанияОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение); //rarus vikhle 15.04.2021 mt 17484
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КузовостроительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КузовостроительОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение); //rarus vikhle 15.04.2021 mt 17484
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПродуктов

&НаКлиенте
Процедура СписокПродуктовПриИзменении(Элемент)
	Объект.Количество	 = СписокПродуктов.Итог("Количество");
	ОбщаяСуммаСоглашения = СписокПродуктов.Итог("ИтоговаяСумма");
	//СуммаЗаявки			= СписокПродуктов.Итог("ИтоговаяСумма");//rarus vikhle 16.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	Если СписокПродуктов.Количество() = 0 
		И Объект.ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП") Тогда //rarus vikhle 10.11.2020 mt 16181
		Элементы.СписокПродуктов.Доступность = Истина;
		Элементы.Подобрать.Доступность = Истина;
		
		//rarus vikhle 07.12.2021 m 18643 +++
		Объект.УникальностьСпецификации = Неопределено;
		Объект.СтандартнаяСпецификация	= Неопределено;
		ОчиститьУсловияОплатыГрафикПлатежей();		
		
		//rarus vikhle 22.09.2021 mt 18298 +++
		//Если Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
		//	Объект.СтандартнаяСпецификация = Неопределено;
		//КонецЕсли;	
		//rarus vikhle 22.09.2021 mt 18298 ---		
		//rarus vikhle 07.12.2021 m 18643 --- 
		
	КонецЕсли;
	
	//rarus vikhle 02.08.2021 mt 17637 +++
	// При наличии фактических продуктов, удаленных стандартным платформенным способом из таблицы, удаляем строки условий и графика по ним
	Если ТипЗнч(УдаленныеПродукты) = Тип("Массив") И УдаленныеПродукты.Количество() > 0 Тогда
		УдалитьУсловияОплатыПродуктов(УдаленныеПродукты);
		// rarus agar 22.09.2021 17739 ++
		ЗаписатьОтменуОплатыВРасчетOrderIntake(УдаленныеПродукты);
		// rarus agar 22.09.2021 17739 --
		УдаленныеПродукты.Очистить();
	КонецЕсли;	
	//rarus vikhle 02.08.2021 mt 17637 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСпециальныеУсловияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	
	//rarus viklhe 28.02.2021 mt 17186 +++
	Если Объект.Ссылка.Пустая() Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Заявка не записана. Добавление СУ невозможно.'"));
		Возврат;	
	КонецЕсли;	
	//rarus viklhe 28.02.2021 mt 17186 ---
	
	//rarus vikhle 28.01.2021 mt 16929 +++
	
	//rarus agar 02.02.2021 17117 ++
	//СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(ВыбранноеЗначение,"Статус,Модель,СрокДействияСпециальныхУсловий,Дилер");
	СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(ВыбранноеЗначение,"Статус,Модель,СрокДействияСпециальныхУсловий,Дилер,КонечныйКлиент,СтандартнаяСпецификация,ДрайвНеПрименим");
	//rarus agar 02.02.2021 17117 --
	Если СтруктураРеквизитов.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП")
		И СтруктураРеквизитов.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП") Тогда
		//rarus vikhle 24.03.2021 +++
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'У выбранных СУ статус не равен ""Одобрено, нет в СОП"" и ""Одобрено, нет в СОП"". Невозможно применить.'")); //rarus vikhle 09.08.2021 mt 17637 + "Невозможно применить"
		Возврат;
		//rarus agar 09.02.2021 17117 ++
		//ИЛИ СтруктураРеквизитов.Модель <> Объект.Модель 
	ИначеЕсли ВРег(Лев(СокрЛП(СтруктураРеквизитов.Модель),10)) <> Врег(Лев(СокрЛП(Объект.Модель),10)) Тогда //rarus vikhle 18.03.2021
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Различаются модели СУ и заявки. Невозможно применить.'")); //rarus vikhle 09.08.2021 mt 17637 + "Невозможно применить"
		Возврат;
		//rarus agar 09.02.2021 17117 --
	ИначеЕсли СтруктураРеквизитов.СрокДействияСпециальныхУсловий < НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса()) Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Срок действия СУ истек. Невозможно применить.'")); //rarus vikhle 09.08.2021 mt 17637 + "Невозможно применить"
		Возврат;
	ИначеЕсли  СтруктураРеквизитов.Дилер <> Объект.Дилер Тогда 
		//rarus vikhle 05.03.2021 mt 17186 +++
		//rarus vikhle 28.02.2021 mt 17186 +++
		//ИЛИ (Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std")
		//И СтруктураРеквизитов.СтандартнаяСпецификация <> Объект.СтандартнаяСпецификация)  Тогда
		//rarus vikhle 28.02.2021 mt 17186 ---
		//rarus vikhle 05.03.2021 mt 17186 ---
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Дилер СУ отличается от дилера заявки. Невозможно применить.'")); //rarus vikhle 09.08.2021 mt 17637 + "Невозможно применить"
		Возврат;
		//rarus vikhle 24.03.2021 ---
	//rarus vikhle 28.07.2021 17637 +++ Раскомментировал	
	//rarus vikhle 09.06.2021 mt 17637 +++	
	ИначеЕсли ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
		И НЕ ПродуктУказанВСУ(ВыбранноеЗначение,ТекущиеДанные.Продукт) Тогда
		СтандартнаяОбработка = Ложь;
		//ВывестиСообщениеПол(Нстр("ru = 'Продукт не указан в СУ.'"));
		//ВывестиСообщениеПол(Нстр("ru = 'Продукт отсутствует в табличной части ""Список продуктов"" СУ (закладка ""Продукты""). Невозможно применить.'")); //rarus vikhle 09.08.2021 mt 17637 + "Невозможно применить"
		ВывестиСообщениеПол(Нстр("ru = 'Продукт отсутствует в ограничивающем перечне СУ. Невозможно применить.'")); //rarus vikhle 11.08.2021 mt 17637
		Возврат;
	//rarus vikhle 28.07.2021 17637 ---	
	КонецЕсли;
	//rarus vikhle 09.06.2021 mt 17637 ---
	//rarus vikhle 28.01.2021 mt 16929
		
	//rarus vikhle 02.03.2021 mt 17344 +++
	//rarus agar 02.02.2021 17117 ++
	//Если СтруктураРеквизитов.КонечныйКлиент <> Объект.КонечныйКлиент Тогда 
	//	СтандартнаяОбработка = Ложь;
	//	ВывестиСообщениеПол(Нстр("ru = 'В выбранных Специальных условиях клиент-контрагент не совпадает с клиентом-контрагентом Заявки. Невозможно применить.'"));
	//	Возврат;
	//КонецЕсли;
	//rarus vikhle 02.03.2021 mt 17344 ---
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Если Не МодельЗаявкиСовпадаетСоСпециальнымиУсловиями(ВыбранноеЗначение, Объект.Модель) Тогда
			СтандартнаяОбработка = Ложь;
			ВывестиСообщениеПол(СтрШаблон(Нстр("ru = 'В выбранных Специальных условиях не найдено ни одного продукта с моделью %1. Невозможно применить.'"), Объект.Модель));
			Возврат;
		КонецЕсли;
		
		//rarus vikhle 22.06.2021 mt 17637 +++ Перенес в приизменении
		//Если ПримененияСпециальныхУсловийИсчерпаны(ВыбранноеЗначение) Тогда
		//	СтандартнаяОбработка = Ложь;
		//	ВывестиСообщениеПол(Нстр("ru = 'По выбранным Специальным условиям все применения исчерпаны. Невозможно применить.'"));
		//	Возврат;
		//КонецЕсли;
		//rarus vikhle 22.06.2021 mt 17637 ---
		
		//rarus vikhle 05.03.2021 mt 17186 +++
		//rarus vikhle 28.02.2021 mt 17186 +++
		//Если НЕ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
		//	Если НЕ СпецификацииСовпадают(Элементы.СписокПродуктов.ТекущиеДанные.Продукт,ВыбранноеЗначение,Объект.Ссылка) Тогда
		//		СтандартнаяОбработка = Ложь;
		//		ВывестиСообщениеПол(Нстр("ru = 'Отличаются спецификации SPORT. Специальные условия не были добавлены.'"));
		//		Возврат;	
		//	КонецЕсли;	
		//КонецЕсли;	
		//rarus vikhle 28.02.2021 mt 17186 ---
		//rarus vikhle 05.03.2021 mt 17186 ---
	КонецЕсли;
	//rarus agar 02.02.2021 17117 --
	
		
	//rarus vikhle 28.07.2021 17637 +++ Закомментировал
	//rarus vikhle 09.06.2021 mt 17637 +++
	//Если НЕ ПроверитьСпециальныеУсловия(ВыбранноеЗначение) Тогда
	//	//ВывестиСообщениеПол("Условия оплаты в специальных условиях %1 отличаются от условий оплаты в соглашении о поставке.",,,,,ВыбранноеЗначение);
	//	ВывестиСообщениеПол(Нстр("ru = 'Условия оплаты в специальных условиях %1 отличаются от условий оплаты в заявке.'"),,,,,ВыбранноеЗначение); //rarus vikhle 05.11.2020 mt 16723	
	//КонецЕсли;
	//rarus vikhle 09.06.2021 mt 17637 ---
	//rarus vikhle 28.07.2021 17637 ---
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ПроцентДрайв) Тогда
		Если СтруктураРеквизитов.ДрайвНеПрименим Тогда //rarus vikhle 09.06.2021 mt 17637 
			ТекущиеДанные.Драйв = Ложь; //rarus vikhle 25.11.2020 mt 16846
			ТекущиеДанные.ПроцентДрайв = 0;
			ВывестиСообщениеПол(Нстр("ru = 'При использовании специальных условий %1 драйв не применяется, поле очищено.'"),,,,,ВыбранноеЗначение);		
		КонецЕсли;	
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовДокументУстановкиПлановыхЦенОткрытие(Элемент, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДокументУстановкиПлановыхЦен) Тогда 
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.ДокументУстановкиПлановыхЦен);
		ОткрытьФорму("Документ.Scan_УстановкаПлановыхЦенПродукта.Форма.ФормаОтображения",
					ПараметрыОткрытия,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;			
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовДокументУстановкиПлановыхЦенНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПродуктНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//rarus vikhle 14.10.2020 mt 16181 +++
	ТекущийПродукт = Элементы.СписокПродуктов.ТекущиеДанные.Продукт; 
	Если ТипЗнч(ТекущийПродукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;	
	//rarus vikhle 14.10.2020 mt 16181 ---
	Элемент.ОграничениеТипа =  Новый ОписаниеТипов("СправочникСсылка.Scan_ДрафтыПродуктов");
	
	Если ЗначениеЗаполнено(Объект.Модель) Тогда
		МассивПараметров = Новый Массив();
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Модель", Объект.Модель));
		ЗначениеПараметровВыбора = Новый ФиксированныйМассив(МассивПараметров);
		Элемент.ПараметрыВыбора = ЗначениеПараметровВыбора;
	//rarus vikhle 14.02.2023 m 19839 +++	
	ИначеЕсли Объект.ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Марки", ДоступныеМарки.ВыгрузитьЗначения());
		ОткрытьФорму("Справочник.Scan_ДрафтыПродуктов.ФормаВыбора", ПараметрыОткрытия, Элемент);
	//rarus vikhle 14.02.2023 m 19839 ---
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент = Элементы.СписокПродуктовКоличество 
		И ТипЗнч(Элемент.ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия")  Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если Элемент.ТекущийЭлемент = Элементы.СписокПродуктовПродукт Тогда
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
			И Элемент.ТекущийЭлемент = Элементы.СписокПродуктовПродукт  Тогда
			Элемент.ТекущийЭлемент.ОграничениеТипа 			= Новый ОписаниеТипов("СправочникСсылка.Scan_Изделия");
			Элемент.ТекущийЭлемент.КнопкаВыпадающегоСписка 	= Ложь;
			Элемент.ТекущийЭлемент.КнопкаВыбора 			= Ложь;
			Элемент.ТекущийЭлемент.КнопкаОчистки 			= Ложь;
			Элемент.ТекущийЭлемент.КнопкаСоздания 			= Ложь;
			Элемент.ТекущийЭлемент.РедактированиеТекста 	= Ложь;
			Элемент.ТекущийЭлемент.ИсторияВыбораПриВводе 	= ИсторияВыбораПриВводе.НеИспользовать;
		Иначе 
			Элемент.ТекущийЭлемент.ОграничениеТипа 			= Новый ОписаниеТипов("СправочникСсылка.Scan_ДрафтыПродуктов");
			Элемент.ТекущийЭлемент.КнопкаВыпадающегоСписка 	= Неопределено;
			Элемент.ТекущийЭлемент.КнопкаВыбора 			= Неопределено;
			Элемент.ТекущийЭлемент.КнопкаОчистки 			= Неопределено;
			Элемент.ТекущийЭлемент.КнопкаСоздания 			= Неопределено;
			Элемент.ТекущийЭлемент.РедактированиеТекста 	= Истина;
			Элемент.ТекущийЭлемент.ИсторияВыбораПриВводе 	= ИсторияВыбораПриВводе.Авто;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПродуктОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") И НЕ ТекущиеДанные = Неопределено Тогда
		//rarus vikhle 14.02.2023 m 19839 +++
		МодельДрафта = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение,"Модель");
		
		Если ЗначениеЗаполнено(МодельДрафта) 
			И Объект.ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП") Тогда
			
			МаркаДрафта = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МодельДрафта, "МаркаПродукта"); 
			Если ЗначениеЗаполнено(МаркаДрафта) И ДоступныеМарки.НайтиПоЗначению(МаркаДрафта) = Неопределено Тогда
				ВыбранноеЗначение = Неопределено;
				
				ТекстСообщения = СтрШаблон(Нстр("ru = 'Марка %1 выбранного драфта недоступна пользователю'"), МаркаДрафта); 
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
				
				Возврат;
			КонецЕсли;	
			
		КонецЕсли;	
		//rarus vikhle 14.02.2023 m 19839 ---
		
		ТекущиеДанные.Количество = 1;
		ТекущиеДанные.Модель = МодельДрафта; //rarus vikhle 14.02.2023 m 19839
		//rarus vikhle 20.01.2021 mt 16981 +++
		//rarus vikhle 11.08.2020 mt 16526 +++
		//Если Элементы.СписокПродуктовСкладОтгрузки.Видимость Тогда
		//	ТекущиеДанные.СкладОтгрузки = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер,"ПриоритетныйСклад");
		ТекущиеДанные.СкладОтгрузки = ПриоритетныйСклад;
		ТекущиеДанные.ПриоритетныйСклад = НЕ ТекущиеДанные.СкладОтгрузки.Пустая();
		//КонецЕсли;	
		//rarus vikhle 11.08.2020 mt 16526 ---
		//rarus vikhle 20.01.2021 mt 16981 ---
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Элемент.ТекущийЭлемент = Элементы.СписокПродуктовПродукт Тогда
		Элемент.ТекущийЭлемент.ОграничениеТипа 			= Новый ОписаниеТипов("СправочникСсылка.Scan_ДрафтыПродуктов");
		Элемент.ТекущийЭлемент.КнопкаВыпадающегоСписка 	= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаВыбора 			= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаОчистки 			= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаСоздания 			= Неопределено;
		Элемент.ТекущийЭлемент.РедактированиеТекста 	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПродуктОткрытие(Элемент, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
		Если Не Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиент.ТекущийПользователь(),"ПользовательСотрудник") Тогда
			СтандартнаяОбработка = Ложь;
			ПараметрыФормы = Новый Структура("Ключ,ФормаОткрытаИзРабочегоМестаДилера",ТекущиеДанные.Продукт,Истина);
			ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущийЭлемент = Элементы.СписокПродуктовКоличество Тогда  
		Элемент.ТекущийЭлемент.ТолькоПросмотр = Ложь;
		ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
		Если НЕ ТекущиеДанные = Неопределено И Не ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
			Элемент.ТекущийЭлемент.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДокументУстановкиПлановыхЦен) 
		И Элемент.ТекущийЭлемент = Элементы.СписокПродуктовДокументУстановкиПлановыхЦен
		И Элемент.ТолькоПросмотр = Истина Тогда 
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.ДокументУстановкиПлановыхЦен);
		ОткрытьФорму("Документ.Scan_УстановкаПлановыхЦенПродукта.Форма.ФормаОтображения",
					ПараметрыОткрытия,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//rarus vikhle 25.09.2020 mt 16181 +++				
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.Продукт)
			И Элемент.ТекущийЭлемент = Элементы.СписокПродуктовПродукт
			И Элемент.ТолькоПросмотр = Истина Тогда 				
			Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
				И Не Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиент.ТекущийПользователь(),"ПользовательСотрудник") Тогда
				СтандартнаяОбработка = Ложь;
				ПараметрыФормы = Новый Структура("Ключ,ФормаОткрытаИзРабочегоМестаДилера",ТекущиеДанные.Продукт,Истина);
				ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
			Иначе	
				ПоказатьЗначение(,ТекущиеДанные.Продукт);	
			КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ЗаказНаЗавод)
			И Элемент.ТекущийЭлемент = Элементы.СписокПродуктовЗаказНаЗавод	 Тогда 				
			ПоказатьЗначение(,ТекущиеДанные.ЗаказНаЗавод);		
	КонецЕсли;
	//rarus vikhle 25.09.2020 mt 16181 ---	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦенаСНДСПриИзменении(Элемент)
	//rarus vikhle 15.06.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные; 
	ТекущаяСтрока = Элементы.СписокПродуктов.ТекущаяСтрока; //rarus vikhle 29.07.2021 mt 17637
	
	РассчитатьЦенуБезНДС(); //rarus vikhle 08.09.2020 mt 16181 +++
	
	//rarus vikhle 28.07.2021 17637 +++ Раскомментировал
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
		ОбновитьУсловияОплаты(ТекущаяСтрока); //rarus vikhle 02.10.2020 mt 16181 //rarus vikhle 29.07.2021 mt 17637 + параметр
	Иначе
		ОбновитьИтоговуюСуммуДрафта();
	КонецЕсли;	
	//rarus vikhle 28.07.2021 17637 --
	//rarus vikhle 15.06.2021 mt 17637 ---
	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	//rarus vikhle 16.12.2020 mt 16181 +++
	//rarus vikhle 09.09.2020 mt 16181 +++
	//ТекущиеДанные = Элемент.ТекущиеДанные;
	//Если Не ОтменаРедактирования И ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
	//	Объект.ТребуетсяРазмещениеЗаказа = Истина;
	//	Элементы.СписокПродуктов.ИзменятьСоставСтрок = Истина;
	//	Элементы.Подобрать.Доступность = Ложь;
	//	Элементы.СписокПродуктовDDЗапрошенная.ТолькоПросмотр = Ложь;
	//	УправлениеПолямиЗаявкиИзНаличия();//rarus vikhle 17.11.2020 mt 16181
	//КонецЕсли;
	//rarus vikhle 09.09.2020 mt 16181 ---
	//rarus vikhle 16.12.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСкладОтгрузкиПриИзменении(Элемент)
	//rarus vikhle 11.08.2020 mt 16526 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		//ПриоритетныйСклад = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер,"ПриоритетныйСклад"); 
		ТекущиеДанные.ПриоритетныйСклад = (ТекущиеДанные.СкладОтгрузки = ПриоритетныйСклад  И НЕ ПриоритетныйСклад.Пустая()); 
		//rarus vikhle 26.01.2021 mt 16981 +++
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(ТекущиеДанные.Продукт,"СкладПродажи,МестоПередачи,ЗапретИзмененияСкладаПродажи");
			//Если СтруктураРеквизитов.СкладПродажи = ПредопределенноеЗначение("Справочник.Scan_Склады.ПустаяСсылка")
			Если НЕ СтруктураРеквизитов.ЗапретИзмененияСкладаПродажи Тогда //rarus vikhle 04.02.2021 mt 16981
				ТекущиеДанные.СкладПродажи = ТекущиеДанные.СкладОтгрузки; 		
			КонецЕсли;
			Если СтруктураРеквизитов.МестоПередачи = ПредопределенноеЗначение("Справочник.Scan_Склады.ПустаяСсылка") Тогда
				ТекущиеДанные.МестоПередачи = ТекущиеДанные.СкладОтгрузки; 		
			КонецЕсли;
		КонецЕсли;	
		//rarus vikhle 26.01.2021 mt 16981 ---
	КонецЕсли;	
	//rarus vikhle 11.08.2020 mt 16526 ---
КонецПроцедуры

//rarus vikhle 06.05.2021 mt 17748 +++
&НаКлиенте
Процедура СписокПродуктовСкладПродажиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено 
		И ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
		И ТекущиеДанные.СкладПродажи.Пустая() 
		И НЕ ТекущиеДанные.ЗапретНаИзменениеСкладаОтгрузки Тогда
		ТекущиеДанные.СкладПродажи = ТекущиеДанные.СкладОтгрузки;
		ВывестиСообщениеПол(Нстр("ru = 'Был установлен склад продажи, равный запрашиваемому месту передачи'"));
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовМестоПередачиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено 
		И ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
		И ТекущиеДанные.МестоПередачи.Пустая() Тогда
		ТекущиеДанные.МестоПередачи = ТекущиеДанные.СкладОтгрузки;
		ВывестиСообщениеПол(Нстр("ru = 'Было установлено место передачи, равное запрашиваемому месту передачи'"));
	КонецЕсли;

КонецПроцедуры
//rarus vikhle 06.05.2021 mt 17748 ---

&НаКлиенте
Процедура СписокПродуктовПослеУдаления(Элемент)
	//rarus vikhle 02.10.2020 mt 16181 +++
	//ОбновитьУсловияОплаты();//rarus vikhle 09.06.2021 mt 17637 //rarus vikhle 29.07.2021 17637 Закомментировал
	//rarus vikhle 02.10.2020 mt 16181 ---
	//rarus vikhle 17.11.2020 mt 16181 +++
	Если СписокПродуктов.Количество() = 0 Тогда
		Объект.ТребуетсяРазмещениеЗаказа = Ложь;
		УправлениеПолямиЗаявкиИзНаличия();
	КонецЕсли;
	//rarus vikhle 17.11.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	//rarus vikhle 02.10.2020 mt 16181 +++
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
	//rarus vikhle 02.10.2020 mt 16181 ---
	
	//rarus agar 03.02.2021 17123 ++
	Если Объект.ЗаявкаНаБУПродукты Тогда
		Сообщить(Нстр("ru = 'Для заявок на Б/У продукты добавление драфтов запрещено!'"));
		Отказ = Истина;
	КонецЕсли;
	//rarus agar 03.02.2021 17123 --
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПроцентДрайвПриИзменении(Элемент)
	//rarus vikhle 02.10.2020 mt 16181 +++	
	//rarus vikhle 21.12.2020 mt 16846 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктов.ТекущаяСтрока;//rarus vikhle 29.07.2021 17637
	
	Если ЗначениеЗаполнено(ТекущиеДанные.СпециальныеУсловия) И ТекущиеДанные.ПроцентДрайв > 0 Тогда
		Если Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"ДрайвНеПрименим") Тогда
			ТекущиеДанные.Драйв = Ложь;
			ТекущиеДанные.ПроцентДрайв = 0;	
			ВывестиСообщениеПол("В указанных специальных условиях %1 установлен признак ""Драйв не применим"". Поле ""Драйв"" очищено.",,,,,
								ТекущиеДанные.СпециальныеУсловия);
		Иначе
			ТекущиеДанные.Драйв	= ТекущиеДанные.ПроцентДрайв > 0;						
			//rarus vikhle 29.07.2021 17637 Раскомментировал +++
			//rarus vikhle 15.06.2021 mt 17637 +++
			Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
				ОбновитьУсловияОплаты(ТекущаяСтрока); //rarus vikhle 29.07.2021 17637 + параметр
			Иначе 	
				ОбновитьИтоговуюСуммуДрафта();
			КонецЕсли;	
			//rarus vikhle 15.06.2021 mt 17637 ---
			//rarus vikhle 29.07.2021 17637 ---
		КонецЕсли;
	Иначе
		ТекущиеДанные.Драйв	= ТекущиеДанные.ПроцентДрайв > 0;
		//rarus vikhle 29.07.2021 17637 +++ Раскомментировал
		//rarus vikhle 15.06.2021 mt 17637 +++
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			ОбновитьУсловияОплаты(ТекущаяСтрока);//rarus vikhle 29.07.2021 17637 + Параметр
		Иначе 	
			ОбновитьИтоговуюСуммуДрафта();
		КонецЕсли;	
		//rarus vikhle 15.06.2021 mt 17637 ---
		//rarus vikhle 29.07.2021 17637 ---
	КонецЕсли;	
	//rarus vikhle 21.12.2020 mt 16846 ---
	//rarus vikhle 02.10.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСпециальныеУсловияПриИзменении(Элемент)
	
	//rarus vikhle 09.06.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные; 
	ТекущаяСтрока = Элементы.СписокПродуктов.ТекущаяСтрока; //rarus vikhle 29.07.2021 17637
	
	//rarus vikhle 22.06.2021 mt 17637 +++
	Если НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда 
		Если ПримененияСпециальныхУсловийИсчерпаны(ТекущиеДанные.СпециальныеУсловия) Тогда
			ТекущиеДанные.СпециальныеУсловия = Неопределено;
			ВывестиСообщениеПол(Нстр("ru = 'По выбранным Специальным условиям все применения исчерпаны. Невозможно применить.'"));
		КонецЕсли;
	КонецЕсли;	
	//rarus vikhle 22.06.2021 mt 17637 ---
	
	//rarus vikhle 28.07.2021 17637 +++ Раскомментировал
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		//СпециальныеУсловияПриИзмененииСервер(); //rarus vikhle 29.07.2021 17637
		ОбновитьУсловияОплаты(ТекущаяСтрока); //rarus vikhle 29.07.2021 17637
	Иначе
		ОбновитьИтоговуюСуммуДрафта();
	КонецЕсли;	
	//rarus vikhle 28.07.2021 17637 ---
	//ОбновитьУсловияОплаты();//rarus vikhle 02.10.2020 mt 16181 //rarus vikhle 28.07.2021 17637 Закомментировал
	//rarus vikhle 09.06.2021 mt 17637 ---
	
	ЗаполнитьСебестоимостьВСписке();//rarus vikhle 11.11.2020 mt 16181
		
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовDDSПриИзменении(Элемент)
	//rarus vikhle 29.07.2021 17637 Раскомментировал
	//rarus vikhle 15.06.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктов.ТекущаяСтрока; //rarus vikhle 29.07.2021 mt 17637
	
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		//rarus vikhle 29.07.2021 mt 17637 +++
		ОбновитьУсловияОплаты(ТекущаяСтрока, Ложь); 
		//Если ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
		//	ОбновитьГрафикПлатежей();
		//Иначе	
		//	ОбновитьУсловияОплаты(Ложь);//rarus vikhle 02.10.2020 mt 16181
		//КонецЕсли;	
		//rarus vikhle 29.07.2021 mt 17637 ---
	КонецЕсли;	
	//rarus vikhle 15.06.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
	
	//ОбновитьУсловияОплаты();//rarus vikhle 29.07.2021 17637 Закомментировал
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовДрайвПриИзменении(Элемент)
	
	//rarus vikhle 25.11.2020 mt 16846 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктов.ТекущаяСтрока; //rarus vikhle 29.07.2021 17637
	
	Если ЗначениеЗаполнено(ТекущиеДанные.СпециальныеУсловия) И ТекущиеДанные.Драйв Тогда
		Если Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"ДрайвНеПрименим") Тогда
			ТекущиеДанные.Драйв = Ложь;
			ТекущиеДанные.ПроцентДрайв = 0;	
			ВывестиСообщениеПол("В указанных специальных условиях %1 установлен признак ""Драйв не применим"". Поле ""Драйв"" очищено.",,,,,
								ТекущиеДанные.СпециальныеУсловия);
		Иначе
			ТекущиеДанные.ПроцентДрайв = ПроцентДрайв;						
			//rarus vikhle 29.07.2021 17637 +++ Раскомментировал
			//rarus vikhle 15.06.2021 mt 17637 +++
			Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
				ОбновитьУсловияОплаты(ТекущаяСтрока);//rarus vikhle 29.07.2021 17637 + параметр
			Иначе 	
				ОбновитьИтоговуюСуммуДрафта();
			КонецЕсли;	
			//rarus vikhle 15.06.2021 mt 17637 ---
			//rarus vikhle 29.07.2021 17637 ---
		КонецЕсли;	
	Иначе
		ТекущиеДанные.ПроцентДрайв = ?(ТекущиеДанные.Драйв,ПроцентДрайв,0);
		//rarus vikhle 29.07.2021 17637 +++ Раскомментировал
		//rarus vikhle 15.06.2021 mt 17637 +++
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			ОбновитьУсловияОплаты(ТекущаяСтрока);//rarus vikhle 29.07.2021 17637
		Иначе 	
			ОбновитьИтоговуюСуммуДрафта();
		КонецЕсли;	
		//rarus vikhle 15.06.2021 mt 17637 ---
		//rarus vikhle 29.07.2021 17637 ---
	КонецЕсли;
	//rarus vikhle 25.11.2020 mt 16846 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦенаПоВалютнойОговоркеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктов.ТекущаяСтрока;//rarus vikhle 29.07.2021 17637
	
	//Если ЗначениеЗаполнено(ТекущиеДанные.ЦенаПоВалютнойОговорке) Тогда
	//	ТекущиеДанные.ДатаПерерасчета = ТекущаяДата();
	//Иначе
	//	ТекущиеДанные.ДатаПерерасчета = Дата('00010101');
	//КонецЕсли;
	
	//rarus vikhle 29.07.2021 17637 +++ Откат, Раскомментировал
	//rarus vikhle 15.06.2021 mt 17637 +++
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		ОбновитьУсловияОплаты(ТекущаяСтрока);//rarus vikhle 29.07.2021 17637 + параметр
	Иначе
		ОбновитьИтоговуюСуммуДрафта();
	КонецЕсли;	
	//rarus vikhle 15.06.2021 mt 17637 ---
	//rarus vikhle 29.07.2021 17637 ---
	
	ОбновитьПризнакВалютнаяОговорка();
	
	//rarus vikhle 24.05.2021 mt 17780 +++
	Если ТекущиеДанные.ЦенаПоВалютнойОговорке = 0 И НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
		ТекущиеДанные.Себестоимость = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"СебестоимостьСНДС");
		ВывестиСообщениеПол(Нстр("ru = 'Себестоимость по продукту %1 была заполнена из СУ'"),,,,,ТекущиеДанные.Продукт);
	КонецЕсли;
	//rarus vikhle 24.05.2021 mt 17780 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСпециальныеУсловияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//rarus vikhle 28.01.2021 mt 16929 +++
	СтандартнаяОбработка	= Ложь;
	ТекущиеДанные			= Элементы.СписокПродуктов.ТекущиеДанные; 
	
	//rarus vikhle 02.08.2021 mt 17637 Закомментировал +++
	
	//МассивСтатусов 			= Новый Массив;
	//МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП"));
	//МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП"));
	//
	//ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	//ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
	//														"Статус",
	//														ВидСравненияКомпоновкиДанных.ВСписке,
	//														МассивСтатусов,,Истина);			
	////rarus agar 09.02.2021 17117 ++
	////ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
	////														"Модель",
	////														ВидСравненияКомпоновкиДанных.Равно,
	////														Объект.Модель,,Истина);														
	//ОсноваИмениМодели = Лев(СокрЛП(Объект.Модель),10);
	//ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
	//														"Модель.Наименование",
	//														ВидСравненияКомпоновкиДанных.НачинаетсяС,
	//														ОсноваИмениМодели, "Наименование модели",Истина); //rarus agar 13.04.2021 17622 +-
	////rarus agar 09.02.2021 17117 --
	//rarus vikhle 02.08.2021 mt 17637 ---
	
	//rarus vikhle 05.03.2021 mt 17186 +++
	//rarus vikhle 28.02.2021 mt 17186 +++
	//Если Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
	//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
	//															"СтандартнаяСпецификация",
	//															ВидСравненияКомпоновкиДанных.Равно,
	//															Объект.СтандартнаяСпецификация,,Истина);
	//КонецЕсли;															
	//rarus vikhle 28.02.2021 mt 17186 ---
	//rarus vikhle 05.03.2021 mt 17186 ---
	
	
	ФиксированныеНастройки = ФиксированныеНастройкиОтбораСУ();//rarus vikhle 02.08.2021 mt 17637
	ПараметрыФормы = Новый Структура("ФиксированныеНастройки",ФиксированныеНастройки);
	ОткрытьФорму("Справочник.Scan_СпециальныеУсловия.ФормаВыбора",ПараметрыФормы,Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//rarus vikhle 28.01.2021 mt 16929 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПродуктПриИзменении(Элемент)
	
	//rarus vikhle 16.12.2020 mt 16181 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
		Объект.ТребуетсяРазмещениеЗаказа = Истина;
		Если Объект.Договор.Пустая() Тогда // rarus vikhle 31.01.2022 m 18813
			Элементы.СписокПродуктов.ИзменятьСоставСтрок = Истина;
		КонецЕсли;
		Элементы.Подобрать.Доступность = Ложь;
		Элементы.СписокПродуктовDDЗапрошенная.ТолькоПросмотр = Ложь;
		УправлениеПолямиЗаявкиИзНаличия();
	КонецЕсли;
	//rarus vikhle 16.12.2020 mt 16181 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовПередУдалением(Элемент, Отказ) //rarus vikhle 02.08.2021 mt 17637 +++
	
	УдаленныеПродукты.Очистить();
	
	Для Каждого ИДСтроки Из Элемент.ВыделенныеСтроки Цикл
		ТекущиеДанные = СписокПродуктов.НайтиПоИдентификатору(ИДСтроки);
		// Запоминаем удаленные продукты, для последующей обработки в событии ПриИзменении с использованием серверных процедур
		Если НЕ ТекущиеДанные = Неопределено Тогда 
			ТекущийПродукт = ТекущиеДанные.Продукт; 
			Если ТипЗнч(ТекущийПродукт) = Тип("СправочникСсылка.Scan_Изделия") 
				И НЕ ТекущийПродукт.Пустая() Тогда
				УдаленныеПродукты.Добавить(ТекущийПродукт);	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
		
КонецПроцедуры //rarus vikhle 02.08.2021 mt 17637 ---

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура("ЗакрыватьФорму", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура Отказ(Команда)
	//Если не ЗначениеЗаполнено(Объект.ПримечаниеДистрибьютора) Тогда
	//	ВывестиСообщениеПол("Не заполнено примечание. Нельзя установить статус отказ.",Объект,"ПримечаниеДистрибьютора");
	//	возврат;
	//КонецЕсли; 
	
	//rarus vikhle 19.06.2020 mt 15888 +++
	Если Не ЕстьСообщениеТекушегоПользователя(Объект.Ссылка) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нельзя установить статус ""Отказ"" без добавления пояснительного сообщения.'"),ЭтотОбъект,"ПолеHTML");
		Возврат;	
	КонецЕсли;	
	//rarus vikhle 19.06.2020 mt 15888 ---
	
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ");
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
	//rarus vikhle 05.11.2020 mt 16723 +++
	Если Записать(ПараметрыЗаписи) Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
		Закрыть();
		Возврат;
	КонецЕсли;	
	//rarus vikhle 05.11.2020 mt 16723 ---
	
	УправлениеДиалогомНаСервере();
	//rarus ozhnik 15888 29.06.2020 + Модифицированность = Истина;//rarus vikhle 19.06.2020 mt 15888
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьДистрибьютору(Команда)
	//rarus vikhle 05.11.2020 mt 16723 +++
	ЗаявкаОтправлена = ОтправитьДистрибьюторуНаСервере();
	Если ЗаявкаОтправлена Тогда
		Закрыть();
		ОповеститьОбИзменении(Объект.Ссылка);
	КонецЕсли;	
	//rarus vikhle 05.11.2020 mt 16723 ---
КонецПроцедуры

&НаКлиенте
Процедура РасторгнутьСОП(Команда)
	//rarus vikhle 31.12.2020 mt 17055 +++
	Если Не ЕстьСообщениеТекушегоПользователя(Объект.Ссылка) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нельзя установить статус ""СОП расторгнут"" без добавления пояснительного сообщения.'"),ЭтотОбъект,"ПолеHTML");
		Возврат;	
	КонецЕсли;
	//rarus vikhle 31.12.2020 mt 17055 ---
	
	//rarus vikhle 03.03.2022 m 18956 +++
	Если НЕ Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП") Тогда
		ДопПараметры = Новый Структура; 
		ОписаниеОповещения = Новый ОписаниеОповещения("РасторгнутьСОППродолжение", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = 'Перенести продукты заявки в резерв?'"), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		
		КорректировкиЗаявокНаОтгрузку = КорректировкиПодчиненныхЗаявокНаОтгрузку();
		Если КорректировкиЗаявокНаОтгрузку <> Неопределено Тогда
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("АдресКорректировокЗаявокНаОтгрузку", КорректировкиЗаявокНаОтгрузку.АдресКорректировок);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("РасторгнутьСОПФрагмент", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = '"+КорректировкиЗаявокНаОтгрузку.ТекстКорректировок+"'"), РежимДиалогаВопрос.ДаНет);
		Иначе
			РасторгнутьСОПЗавершение();
		КонецЕсли;	
		
	КонецЕсли;	
		
	//rarus agar 25.12.2020 17006 ++
	//КорректировкиЗаявокНаОтгрузку = КорректировкиПодчиненныхЗаявокНаОтгрузку();
	//Если КорректировкиЗаявокНаОтгрузку <> Неопределено Тогда
	//	ДополнительныеПараметры = Новый Структура;
	//	ДополнительныеПараметры.Вставить("АдресКорректировокЗаявокНаОтгрузку", КорректировкиЗаявокНаОтгрузку.АдресКорректировок);
	//	
	//	ОписаниеОповещения = Новый ОписаниеОповещения("РасторгнутьСОПФрагмент", ЭтотОбъект, ДополнительныеПараметры);
	//	ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = '"+КорректировкиЗаявокНаОтгрузку.ТекстКорректировок+"'"), РежимДиалогаВопрос.ДаНет);
	//Иначе
	//	РасторгнутьСОПЗавершение();
	//КонецЕсли;
	//rarus agar 25.12.2020 17006 --
	//rarus vikhle 03.03.2022 m 18956 ---
	
КонецПроцедуры

&НаКлиенте
Процедура Одобрено(Команда)
	
	// rarus agar 15.03.2022 Itilium 0000118409 ++
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Команда", Команда);
	// rarus agar 15.03.2022 Itilium 0000118409 -- 
	
	//rarus vikhle 04.03.2022 m 18956 +++
	// rarus agar 15.03.2022 Itilium 0000118409 ++
	//ОписаниеОповещения = Новый ОписаниеОповещения("ОдобреноПродолжение", ЭтотОбъект, Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОдобреноПродолжение", ЭтотОбъект, ДопПараметры);
	// rarus agar 15.03.2022 Itilium 0000118409 --
	ПроверитьУдаленныеПродукты(ОписаниеОповещения, ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено"));
	
	////rarus vikhle 01.09.2020 mt 16181 +++ 
	//Если НЕ Объект.ТребуетсяРазмещениеЗаказа Тогда
	//	НачатьОформлениеСОП(Команда);
	//	Возврат;
	//КонецЕсли;	
	////rarus vikhle 01.09.2020 mt 16181 ---
	//
	//СтарыйСтатус  = Объект.Статус;
	//Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено");
	//
	////rarus vikhle 23.11.2020 mt 16181 +++
	//ПараметрыЗаписи = Новый Структура;
	//ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	////rarus vikhle 23.11.2020 mt 16181 ---
	//
	//Если Не Записать(ПараметрыЗаписи) Тогда
	//	Объект.Статус = СтарыйСтатус;
	//Иначе
	//	ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
	//	Закрыть(); //rarus vikhle 05.11.2020 mt 16723	
	//КонецЕсли;
	
	//rarus vikhle 04.03.2022 m 18956 ---
КонецПроцедуры

&НаКлиенте
Процедура Пересмотр(Команда)
	
	//rarus vikhle 04.03.2022 m 18956 +++
	ОписаниеОповещения = Новый ОписаниеОповещения("ПересмотрПродолжение", ЭтотОбъект);
	ПроверитьУдаленныеПродукты(ОписаниеОповещения, ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр"));
	
	
	//СтарыйСтатус  = Объект.Статус;
	//Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр");
	//
	//////rarus vikhle 23.11.2020 mt 16181 +++
	//ПараметрыЗаписи = Новый Структура;
	//ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	////rarus vikhle 23.11.2020 mt 16181 ---
	//
	//Если Не Записать(ПараметрыЗаписи) Тогда
	//	Объект.Статус = СтарыйСтатус;
	//Иначе
	//	ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
	//	Закрыть(); //rarus vikhle 05.11.2020 mt 16723	
	//КонецЕсли;
	//rarus vikhle 04.03.2022 m 18956 ---
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОформлениеСОП(Команда)
	
	//rarus vikhle 04.03.2022 m 18956 +++
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьОформлениеСОППродолжение", ЭтотОбъект);
	ПроверитьУдаленныеПродукты(ОписаниеОповещения, ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП"));
	
	////rarus vikhle 05.11.2020 mt 16723 +++
	////rarus vikhle 22.09.2020 mt 16181 +++
	//НачатоОформление = НачатьОформлениеСОПНаСервере();
	//
	////rarus vikhle 05.11.2020 mt 16723 +++
	//Если НачатоОформление Тогда 
	//	ОповеститьОбИзменении(Объект.Ссылка);
	//	Закрыть();
	//КонецЕсли;	
	////rarus vikhle 05.11.2020 mt 16723 ---
	//
	////КодДоговора = СоздатьДоговор();	
	////Если кодДоговора = неопределено Тогда
	////	возврат;		
	////КонецЕсли; 
	////СтарыйСтатус  = Объект.Статус;
	////Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП"); 	 
	////Объект.НомерСОП = Строка(Год(ТекущаяДата())) + "-" + КодДоговора;
	////	
	////Если Не Записать() Тогда
	////	Объект.Статус = СтарыйСтатус;
	////КонецЕсли;
	//////rarus vikhle 22.09.2020 mt 16181 ---
	
КонецПроцедуры

//rarus vikhle 12.04.2021 mt 17595 +++
&НаКлиенте
Процедура ОтклонитьЗапросИзменений(Команда)
	
	Если Не ЕстьСообщениеТекушегоПользователя(Объект.Ссылка) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Укажите причину отклонения запроса изменений.'"),ЭтотОбъект,"ПолеHTML");
		Возврат;	
	КонецЕсли;
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПолучитьСтатусДоЗапросаИзменений(Объект.Ссылка);
		
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	
	Если Не Записать(ПараметрыЗаписи) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		ОповеститьОбИзменении(Объект.Ссылка); 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры
//rarus vikhle 12.04.2021 mt 17595 ---

&НаКлиенте
Процедура ОтменитьСОП(Команда)
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен");
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
	Если Не Записать(ПараметрыЗаписи) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
		Закрыть(); //rarus vikhle 05.11.2020 mt 16723	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КРазмещению(Команда)
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.КРазмещению");
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
	Если Не Записать(ПараметрыЗаписи) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
		Закрыть(); //rarus vikhle 05.11.2020 mt 16723	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВБухгалтерию(Команда)
	
	//rarus vikhle 04.03.2022 m 18956 +++
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьВБухгалтериюПродолжение", ЭтотОбъект);
	ПроверитьУдаленныеПродукты(ОписаниеОповещения, ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Оформлен"));
	
	
	////rarus agar 10.12.2020 16930 ++
	//НомераПродуктовПустыхDDS = НомераПродуктовПустыхDDS();
	//Если НомераПродуктовПустыхDDS.Количество() <> 0 Тогда
	//	Сообщить(СтрШаблон(Нстр("ru = 'У продуктов %1 дата DDS не заполнена.'"),СтрСоединить(НомераПродуктовПустыхDDS, ", ")));
	//КонецЕсли;
	////rarus agar 10.12.2020 16930 --
	//
	////rarus vikhle 27.10.2021 m 18426 +++
	//ЗакрыватьФорму = НомераПродуктовПустыхDDS.Количество() = 0; 
	//
	//ПараметрыЗаписи = Новый Структура;
	//ПараметрыЗаписи.Вставить("ЗакрыватьФорму", ЗакрыватьФорму);
	////rarus vikhle 27.10.2021 m 18426 ---
	//
	////rarus vikhle 05.11.2020 mt 16723 +++
	//ЗаявкаОтправлена = ОтправитьВБухгалтериюНаСервере(ПараметрыЗаписи); //rarus vikhle 03.09.2020 mt 16181 //rarus vikhle 27.10.2021 m 18426
	//Если ЗаявкаОтправлена Тогда
	//	ОповеститьОбИзменении(Объект.Ссылка);
	//	
	//	//rarus vikhle 27.10.2021 m 18426 +++
	//	Если ПараметрыЗаписи.Свойство("ИзмененаDDS") Тогда
	//		Scan_ВспомогательныеФункцииКлиент.НачатьФоновоеОбновлениеDDS(Объект.Ссылка);	
	//	КонецЕсли;	
	//	//rarus vikhle 27.10.2021 m 18426 ---
	//	
	//	//rarus agar 10.12.2020 16930 ++
	//	//Если НомераПродуктовПустыхDDS.Количество() = 0 Тогда
	//	Если ЗакрыватьФорму Тогда //rarus vikhle 27.10.2021 m 18426
	//		Закрыть();
	//	КонецЕсли;
	//	//rarus agar 10.12.2020 16930 --
	//КонецЕсли;
	////rarus vikhle 05.11.2020 mt 16723 ---
	
	//rarus vikhle 04.03.2022 m 18956 ---
	
КонецПроцедуры

&НаКлиенте
Процедура НаСогласование(Команда)
	//rarus vikhle 04.03.2022 m 18956 +++
	ОписаниеОповещения = Новый ОписаниеОповещения("НаСогласованиеПродолжение", ЭтотОбъект);
	ПроверитьУдаленныеПродукты(ОписаниеОповещения, ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Согласование"));
	
	//СтарыйСтатус  = Объект.Статус;
	//Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Согласование");
	//
	////rarus vikhle 23.11.2020 mt 16181 +++
	//ПараметрыЗаписи = Новый Структура;
	//ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	////rarus vikhle 23.11.2020 mt 16181 ---
	//
	//Если Не Записать(ПараметрыЗаписи) Тогда
	//	Объект.Статус = СтарыйСтатус;
	//Иначе
	//	ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
	//	Закрыть(); //rarus vikhle 05.11.2020 mt 16723	
	//КонецЕсли;
	//rarus vikhle 04.03.2022 m 18956 ---

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСообщение(Команда)
	Если объект.Ссылка.Пустая() Тогда
		Если не записать() Тогда
			возврат;	
		КонецЕсли; 
	КонецЕсли; 
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Объект",Объект.Ссылка);
	Оповещ = Новый ОписаниеОповещения("ОповещениеЧата", ЭтотОбъект,,"ОповещениеЧата",ЭтотОбъект);
	открытьформу("РегистрСведений.Scan_Сообщения.Форма.ФормаЗаписи",ПараметрыОткрытия,ЭтаФорма,,,,Оповещ,);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКП(Команда)
	//rarus vikhle 22.09.2020 mt 16181 +++
	Если Объект.Ссылка.Пустая() Тогда
		//ВывестиСообщениеПол("Соглашение не записано. Загрузка невозможна.");
		ВывестиСообщениеПол(Нстр("ru = 'Заявка не записана. Загрузка КП невозможна.'")); //rarus vikhle 05.11.2020 mt 16723
		Возврат;
	КонецЕсли;	
	//rarus vikhle 22.09.2020 mt 16181 ---
	
	// rarus vikhle 13.10.2020 mt 16181 +++
	Если Объект.УникальностьСпецификации.Пустая() Тогда
		//ВывестиСообщениеПол("Не заполнена уникальность спецификации. Загрузка невозможна.",ЭтотОбъект," Объект.УникальностьСпецификации");
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнена уникальность спецификации. Загрузка КП невозможна.'"),ЭтотОбъект,"Объект.УникальностьСпецификации");  //rarus vikhle 05.11.2020 mt 16723	
		Возврат;
	КонецЕсли;	
	// rarus vikhle 13.10.2020 mt 16181 ---
	
	//rarus ozhnik 15888 07.10.2020 + 
	//Если ЗначениеЗаполнено (Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа) Тогда
	//	НомерКП = Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа;
	//Иначе
	//	НомерКП = Объект.НомерКоммерческогоПредложенияSPORT;
	//КонецЕсли;  
	//rarus ozhnik 15888 07.10.2020 -
	НомерКП = Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа; // rarus vikhle 13.10.2020 mt 16181 
	Если не ЗначениеЗаполнено(НомерКП) Тогда
		ВывестиСообщениеПол(нСтр( "ru = 'Не указан номер коммерческого предложения. Загрузка КП невозможна.'"),ЭтаФорма,"Объект.НомерКоммерческогоПредложенияSPORT"); 	
		возврат;		
	КонецЕсли; 	
	
	//rarus vikhle 23.09.2020 mt 16181 +++
	ВывестиСообщениеПол(Нстр("ru = 'Начата загрузка КП, она может занять некоторое время, не закрывайте программу'"));
	ПодключитьОбработчикОжидания("ОбработатьОжидание",0.1,Истина);
	
		
	//rarus vikhle 13.08.2020 mt 15888 +++ изменения из расширения
	//МассивСсылок = ЗагрузитьКПНаСервере();
	//Если  МассивСсылок <> Неопределено
	//	И ТипЗнч(МассивСсылок) = Тип("Массив")
	//	И МассивСсылок.Количество() <> 0 
	//	Тогда 	 	
	////rarus vikhle 13.08.2020 mt 15888 ---	
	//	ПараметрыОткрытия = Новый Структура;
	//	ПараметрыОткрытия.Вставить("МассивКП",МассивСсылок);
	//	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораКП", ЭтотОбъект);
	//	ОткрытьФорму("Справочник.Scan_КоммерческиеПредложения.Форма.ФормаВыбора",ПараметрыОткрытия,ЭтаФорма,,,,ОписаниеОповещения);
	//Иначе
	//	ВывестиСообщениеПол("Не было загружено коммерческое предложение по данном номеру");
	//КонецЕсли;
	//rarus vikhle 23.09.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСпецификации(Команда)
	СоздатьСпецификацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Скорректировать(Команда)
	
	Если НЕ Объект.ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП")
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут") 
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен")
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Исполнен") и НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") //rarus kabany 15.04.2021 17533 + 
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ")
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС") Тогда
		Возврат;
	КонецЕсли;	
	
	ОчиститьСообщения();//rarus vikhle 25.11.2020 mt 16846
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
		Сообщить(Нстр("ru = 'Данные не записаны!'; en = 'Data not saved!'")); 
		Возврат;
	КонецЕсли;
	
	//rarus vikhle 28.02.2021 mt 17186 +++
	//rarus vikhle 25.11.2020 mt 16846 +++
	//Если НЕ РольИсполнителя.Пустая() И СокрЛП(Строка(РольИсполнителя)) = "Дилер" Тогда
	//	Если НЕ ЕстьСообщениеТекушегоПользователя(Объект.Ссылка) Тогда
	//		ВывестиСообщениеПол(Нстр("ru = 'Укажите причину корректировки в сообщениях пользователя.'"),ЭтотОбъект,"ПолеHTML");
	//		Возврат;
	//	КонецЕсли;	
	//КонецЕсли;	
	//rarus vikhle 25.11.2020 mt 16846 ---
	//rarus vikhle 28.02.2021 mt 17186 ---
	
	
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораТипаКорректировки",ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Статус",Объект.Статус);
	ПараметрыОткрытия.Вставить("РольИсполнителя",РольИсполнителя);
	ПараметрыОткрытия.Вставить("Ссылка", Объект.Ссылка); // rarus vikhle 11.10.2021 m 18364
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаНастройкиКорректировки",
				 ПараметрыОткрытия,
				 ЭтаФорма,,,,
				 Оповещение,
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьИзменения(Команда)
	
	//rarus vikhle 20.02.2021 mt 17186 +++
	Если НЕ РольИсполнителя.Пустая() И СокрЛП(Строка(РольИсполнителя)) = "Дилер" Тогда
		Если НЕ ЕстьСообщениеТекушегоПользователя(Объект.Ссылка) Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Укажите причину запроса изменений.'"),ЭтотОбъект,"ПолеHTML");
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	//rarus vikhle 20.02.2021 mt 17186 ---
	
	//rarus vikhle 04.03.2022 m 18956 +++
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗапроситьИзмененияПродолжение", ЭтотОбъект);
	ПроверитьУдаленныеПродукты(ОписаниеОповещения, ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП"));
		
	//СтарыйСтатус  = Объект.Статус;
	//Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП");
	//
	//Если Не Записать() Тогда
	//	Объект.Статус = СтарыйСтатус;
	//КонецЕсли;
	
	//rarus vikhle 04.03.2022 m 18956 ---
КонецПроцедуры

&НаКлиенте
Процедура ОдобритьИзменения(Команда)
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПолучитьСтатусДоЗапросаИзменений(Объект.Ссылка);//rarus vikhle 11.01.2021 mt 17055
		
	//rarus vikhle 23.11.2020 mt 16181 +++
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	Если Не Записать(ПараметрыЗаписи) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
		Закрыть(); //rarus vikhle 05.11.2020 mt 16723
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СравнитьСпецификации(Команда)
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	СпециальныеУсловия = неопределено;
	Если ТекущиеДанные <> неопределено Тогда
		СпециальныеУсловия = ТекущиеДанные.СпециальныеУсловия;
	КонецЕсли; 
	ПараметрыОтбора = Новый Структура ("СоглашениеОПоставке, СпециальныеУсловия", Объект.Ссылка, СпециальныеУсловия);
	ОткрытьФорму("Отчет.Scan_СравнениеСпецификаций.Форма.ФормаОтчета",ПараметрыОтбора,);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗавершена(Команда)
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОбработкаЗавершена");
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
	Если Не Записать(ПараметрыЗаписи) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		ОповеститьОбИзменении(Объект.Ссылка);
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьDDИнформер(Команда)
	//rarus vikhle 18.12.2020 mt 16328 +++
	МассивЗаказов = ПолучитьМассивЗаказов();
	
	СписокЗаказов = Новый СписокЗначений;
	СписокЗаказов.ЗагрузитьЗначения(МассивЗаказов);
	ПараметрыФормы = Новый Структура;
	
	Если МассивЗаказов.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Список продуктов"" отсутствуют заказы на завод.'"));
		Возврат;
	КонецЕсли;
	
	Форма = ПолучитьФорму("Обработка.Scan_DDИнформер.Форма.Форма");
	Если Форма <> Неопределено И Форма.Открыта() Тогда
		Оповестить("УстановитьОтборЗаЗаказамНаЗавод",СписокЗаказов);
		Форма.Открыть();
	Иначе
		ПараметрыФормы.Вставить("МассивЗаказов",СписокЗаказов);
		ОткрытьФорму("Обработка.Scan_DDИнформер.Форма.Форма",ПараметрыФормы,,,,,,);
	КонецЕсли;	
	
	//rarus vikhle 18.12.2020 mt 16328 ---
КонецПроцедуры

&НаКлиенте
Процедура РасторгнутьСУстановкойСтатусаDELETED(Команда) // rarus tenkam 15.04.2021 mantis 17519 +++
	Если Не ЕстьСообщениеТекушегоПользователя(Объект.Ссылка) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нельзя установить статус ""СОП расторгнут"" без добавления пояснительного сообщения.'"),ЭтотОбъект,"ПолеHTML");
		Возврат;	
	КонецЕсли;
	
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьИзменениеСтатусовПродуктов") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение локальных статусов продуктов.'"));
		Возврат;	
	КонецЕсли;     		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("УстановитьСтатусDELETED", Истина);
	
	КорректировкиЗаявокНаОтгрузку = КорректировкиПодчиненныхЗаявокНаОтгрузку();
	Если КорректировкиЗаявокНаОтгрузку <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("АдресКорректировокЗаявокНаОтгрузку", КорректировкиЗаявокНаОтгрузку.АдресКорректировок);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("РасторгнутьСОПФрагмент", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = '"+КорректировкиЗаявокНаОтгрузку.ТекстКорректировок+"'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		РасторгнутьСОПЗавершение(ДополнительныеПараметры);
	КонецЕсли;

КонецПроцедуры // rarus tenkam 15.04.2021 mantis 17519 ---

&НаКлиенте
Процедура РазделитьПоПродуктам(Команда)//rarus vikhle 28.07.2021 mt 17637 +++
	
	ДобавитьУсловияОплаты();	
	
КонецПроцедуры //rarus vikhle 28.07.2021 mt 17637 ---


#КонецОбласти

#Область ОбработчикиКомандТаблицыФормыСписокПродуктов

&НаКлиенте
Процедура ПодобратьПродукты(Команда)
	
	УстановитьСтандартныеУсловия = Ложь; //rarus vikhle 28.09.2021 m 18286
		
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Модель", Объект.Модель);
	МаркаМодели = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Модель,"МаркаПродукта");//rarus vikhle 18.02.2021 mt 17123
	Если МаркаМодели = ПредопределенноеЗначение("Справочник.Scan_МаркиПродуктов.Scania") Тогда //rarus vikhle 18.02.2021 mt 17123
		СтруктураОтбора.Вставить("ОтборПоЧастичномуСовпадениюМодели",Истина);//rarus vikhle 01.02.2021 mt 17179
		//rarus vikhle 14.02.2023 m 19839 +++
		СтруктураОтбора.Вставить("Марки", ДоступныеМарки); 
		//rarus vikhle 14.02.2023 m 19839 ---	
	КонецЕсли;	
	
	//rarus agar 03.02.2021 17123 ++
	//СтруктураОтбора.Вставить("БУ", ложь);
	СтруктураОтбора.Вставить("БУ", Объект.ЗаявкаНаБУПродукты);
	//rarus agar 03.02.2021 17123 --
	
	//rarus vikhle 13.05.2021 mt 17733 +++
	Если НЕ СписокПродуктов.Количество() = 0 Тогда
		СтруктураОтбора.Вставить("СтавкаНДС",Объект.СтавкаНДС);
	КонецЕсли;	
	//rarus vikhle 13.05.2021 mt 17733 ---
	
	СтруктураОтбора.Вставить("ПустоеСоглашениеОПоставке", истина);
	Если Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") 
		И (НЕ Объект.СтандартнаяСпецификация.Пустая() 
		ИЛИ СписокПродуктов.Количество() > 0) Тогда //rarus vikhle 22.09.2021 mt 18298
		СтруктураОтбора.Вставить("НомерСпецификации",Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация,"НомерСпецификации"));	
	КонецЕсли;	
	Если НЕ Объект.УникальностьСпецификации.Пустая() Тогда // rarus vikhle 07.12.2021 m 18643
		СтруктураОтбора.Вставить("ТипСпецификации",Объект.УникальностьСпецификации); //rarus vikhle 23.11.2020 mt 16181
	КонецЕсли;	
	СтруктураОтбора.Вставить("ПроверятьСовпадениеСтандартнойСпецификации", Истина); //rarus vikhle 22.09.2021 mt 18298
		
	//rarus vikhle 28.09.2021 m 18286 +++
	Если НЕ Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично") 
		И НЕ УсловияОплатыСтандартные Тогда		
		СтруктураОтбора.Вставить("НестандартныеУсловияОплаты");
		УстановитьСтандартныеУсловия = Истина;
	ИначеЕсли Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично") 
		И НЕ УсловияОплатыСтандартные Тогда
		ВывестиСообщениеПол(НСтр("ru = 'Запрещено добавление продуктов, т.к. условия оплаты нестандартные и есть отгруженные ТС'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 28.09.2021 m 18286 ---
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПродуктов", ЭтотОбъект, УстановитьСтандартныеУсловия); //rarus ozhnik 15888 27.08.2020 + //rarus vikhle 28.09.2021 mt 18286 + УстановитьСтандартныеУсловия
	
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаПодбораПродуктов",СтруктураОтбора,ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);//rarus vikhle 02.02.2020 добавил режим

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьDD_DDS(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеЗаполненияДат",ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("ТипЗаполнения","Даты");
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаЗаполненияДатИЦен",ПараметрыОткрытия,
					ЭтаФорма,,,,
					Оповещение,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
				
&НаКлиенте
Процедура ОчиститьDD_DDS(Команда)
	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
		Если СтрокаСписка.Флаг Тогда
			СтрокаСписка.DDЗапрошенная  = Дата(1,1,1); //rarus vikhle 08.09.2020 mt 16181
			СтрокаСписка.DDS = Дата(1,1,1);	
		КонецЕсли;	
	КонецЦикла;
	//rarus vikhle 29.12.2020 mt 17026 +++
	//Если Элементы.ГрафикПлатежей.Видимость Тогда
	ОбновитьГрафикПлатежей();
	//КонецЕсли;	
	//rarus vikhle 29.12.2020 mt 17026 ---
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦены(Команда)
	// rarus agar 02.02.2021 17091 ++
	ОчиститьСообщения();
	ПараметрыОтбора = Новый Структура("Флаг",Истина);
	Если СписокПродуктов.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда 
		ВывестиСообщениеПол(Нстр("ru = 'В списке продуктов нет выделенных строк'"));
		Возврат;
	КонецЕсли;
	// rarus agar 02.02.2021 17091 --
	
	//rarus vikhle 08.09.2020 mt 16181 +++	
	Оповещение = Новый ОписаниеОповещения("ПослеЗаполненияЦен",ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("ТипЗаполнения","Цены");
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаЗаполненияДатИЦен",ПараметрыОткрытия,
					ЭтаФорма,,,,
					Оповещение,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	//rarus vikhle 08.09.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуСписка(Команда)
	//rarus vikhle 09.09.2020 mt 16181 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		СписокПродуктов.Удалить(ТекущиеДанные);
		//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
		//rarus vikhle 09.06.2021 mt 17637 +++
		//Если ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
			//ОбновитьУсловияОплаты(); //rarus vikhle 02.10.2020 mt 16181 //rarus vikhle 29.07.2021 mt 17637 закомментировал
		//Иначе	
		//	УдалитьУсловияОплатыПродукта(ТекущиеДанные.Продукт);
		//КонецЕсли;	
		//rarus vikhle 09.06.2021 mt 17637 ---
		//rarus vikhle 06.07.2021 17637 ---
		
		//rarus vikhle 29.07.2021 mt 17637 +++
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
			УдалитьУсловияОплатыПродукта(ТекущиеДанные.Продукт);
			// rarus agar 20.09.2021 17739 ++
			ЗаписатьОтменуОплатыВРасчетOrderIntake(ТекущиеДанные.Продукт);
			// rarus agar 20.09.2021 17739 --
		КонецЕсли;	
		
		ОбщаяСуммаСоглашения = СписокПродуктов.Итог("ИтоговаяСумма");
		//rarus vikhle 29.07.2021 mt 17637 ---
		
		Модифицированность = Истина;
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'В таблице не выбрана строка.'"));//rarus vikhle 29.12.2020 mt 16181
	КонецЕсли;
	
	Если СписокПродуктов.Количество() = 0 
		И Объект.ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП") Тогда //rarus vikhle 10.11.2020 mt 16181
		
		Если Объект.Договор.Пустая() Тогда // rarus vikhle 31.01.2022 m 18813
			Элементы.СписокПродуктов.ИзменятьСоставСтрок = Истина;
		КонецЕсли;
		
		Элементы.Подобрать.Доступность = Истина;
		//rarus vikhle 17.11.2020 mt 16181 +++
		Объект.ТребуетсяРазмещениеЗаказа = Ложь;
		УправлениеПолямиЗаявкиИзНаличия();
		//rarus vikhle 17.11.2020 mt 16181 ---
		
		//rarus vikhle 07.12.2021 m 18643 +++
		Объект.УникальностьСпецификации = Неопределено;
		Объект.СтандартнаяСпецификация	= Неопределено;
		ОчиститьУсловияОплатыГрафикПлатежей();
		
		//rarus vikhle 22.09.2021 mt 18298 +++
		//Если Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
		//	Объект.СтандартнаяСпецификация = Неопределено;
		//КонецЕсли;	
		//rarus vikhle 22.09.2021 mt 18298 ---
		//rarus vikhle 07.12.2021 m 18643 ---
		
	КонецЕсли;	
	Объект.Количество = СписокПродуктов.Итог("Количество");
	//rarus vikhle 09.09.2020 mt 16181 ---
	//СуммаЗаявки	= СписокПродуктов.Итог("ИтоговаяСумма");//rarus vikhle 16.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	//rarus vikhle 09.09.2020 mt 16181 +++
	Для Каждого СтрокаТЗ Из СписокПродуктов Цикл
		СтрокаТЗ.Флаг = Истина;
	КонецЦикла;
	//rarus vikhle 09.09.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	//rarus vikhle 09.09.2020 mt 16181 +++
	Для Каждого СтрокаТЗ Из СписокПродуктов Цикл
		СтрокаТЗ.Флаг = Ложь;
	КонецЦикла;
	//rarus vikhle 09.09.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьDDS(Команда)
	
	ОбработатьКомандуЗаполнения(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьDDЗапрошенную(Команда)
	
	ОбработатьКомандуЗаполнения(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСебестоимость(Команда)
	
	ОбработатьКомандуЗаполнения(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьDDS(Команда)
	
	ОчиститьКолонкуСпискаПродуктов("DDS");
	
КонецПроцедуры

//rarus vikhle 04.12.2020 mt 16892 +++
&НаКлиенте
Процедура ОчиститьDDЗапрошенную(Команда)
	
	ОчиститьКолонкуСпискаПродуктов("DDЗапрошенная");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСебестоимость(Команда)
	
	//rarus vikhle 13.01.2022 m 18269 +++
	//rarus vikhle 27.12.2021 m 18269 +++
	//Если НЕ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UO")
	//	И НЕ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UUO") Тогда
	//	ВывестиСообщениеПол(Нстр("ru = 'Изменение себестоимости доступно только для заявок с типом спецификации UO/UUO.'"));
	//	Возврат;
	//КонецЕсли;
	//rarus vikhle 27.12.2021 m 18269 ---
	//rarus vikhle 13.01.2022 m 18269 ---
	
	ОчиститьКолонкуСпискаПродуктов("Себестоимость");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДатаПерерасчета(Команда)
	ОбработатьКомандуЗаполнения(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦенаПоВалютнойОговорке(Команда)
	ОбработатьКомандуЗаполнения(Команда);
КонецПроцедуры

//rarus vikhle 19.01.2021 mt 16981 +++
&НаКлиенте
Процедура ЗаполнитьЗапрашиваемоеМестоПередачи(Команда)
	
	ОбработатьКомандуЗаполнения(Команда);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСкладПродажи(Команда)
	
	ОбработатьКомандуЗаполнения(Команда);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМестоПередачи(Команда)
	
	ОбработатьКомандуЗаполнения(Команда);	
	
КонецПроцедуры
//rarus vikhle 19.01.2021 mt 16981 ---

&НаКлиенте
Процедура ПрименитьСУДляВсех(Команда) //rarus vikhle 28.07.2021 mt 17637 +++
	
	СтруктураОтбора = Новый Структура("Флаг", Истина);
	ВыбранныеСтроки = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
	
	Если ВыбранныеСтроки.Количество() <> СписокПродуктов.Количество() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'В списке продуктов выделены не все строки.'"));
		Возврат;
	ИначеЕсли Объект.Ссылка.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Заявка не записана. Добавление СУ невозможно.'"));
		Возврат;	
	КонецЕсли;	
	
	ФиксированныеНастройки	= ФиксированныеНастройкиОтбораСУ();
	ПараметрыФормы			= Новый Структура("ФиксированныеНастройки",ФиксированныеНастройки);
	ОписаниеОповещения		= Новый ОписаниеОповещения("ПослеВыбораСУ",ЭтотОбъект);
	ОткрытьФорму("Справочник.Scan_СпециальныеУсловия.ФормаВыбора",ПараметрыФормы,,,,,ОписаниеОповещения);
			
КонецПроцедуры //rarus vikhle 28.07.2021 mt 17637 ---

&НаКлиенте
Процедура ОчиститьСУДляВсех(Команда) //rarus vikhle 28.07.2021 mt 17637 +++
	
	СтруктураОтбора = Новый Структура("Флаг", Истина);
	ВыбранныеСтроки = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
	
	Если ВыбранныеСтроки.Количество() <> СписокПродуктов.Количество() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'В списке продуктов выделены не все строки.'"));
		Возврат;
	КонецЕсли;	
	
	Если ЕстьПродуктыСДатойПродажи() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'В списке продуктов есть продукты с датой продажи.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОчисткиСУ",ЭтотОбъект);
	ТекстВопроса = СтрШаблон(Нстр("ru = 'Внимание! У всех продуктов заявки на СОП будут очищены СУ. Продолжить?'")); 
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры //rarus vikhle 28.07.2021 mt 17637 ---

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИзменениеСтатусов

&НаСервере
Функция ОтправитьДистрибьюторуНаСервере()
	//rarus vikhle 08.09.2020 mt 16181 +++
	//Объект.ТребуетсяРазмещениеЗаказа = Справочники.Scan_СоглашенияОПоставке.СоглашениеСодержитДрафты(СписокПродуктов);
	СтарыйСтатус  = Объект.Статус;
	НужноСоздатьДоговор = Ложь;//rarus vikhle 15.12.2020 mt 16977 +++
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---

	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП Тогда
		Объект.ТребуетсяРазмещениеЗаказа = Справочники.Scan_СоглашенияОПоставке.СоглашениеСодержитДрафты(СписокПродуктов); //rarus vikhle 30.09.2020 mt 16181
		
		//rarus agar 09.03.2021 17372 ++
		Если Объект.Дилер.Пустая() Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Поле ""Дилер"" не заполнено'"),ЭтотОбъект, "Объект.Дилер");
			Возврат Ложь;
		КонецЕсли;
		Если Объект.ПродавецДилера.Пустая() Тогда
			//ВывестиСообщениеПол(Нстр("ru = 'Поле ""Продавец дилера"" не заполнено'"),ЭтотОбъект, "Объект.ПродавецДилера");
			ВывестиСообщениеПол(Нстр("ru = 'Поле ""Продавец заявки"" не заполнено'"),ЭтотОбъект, "Объект.ПродавецДилера"); //rarus vikhle 01.07.2021 m 17944
			Возврат Ложь;
		КонецЕсли;
		Если Объект.РегиональныйМенеджер.Пустая() Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Поле ""Региональный менеджер"" не заполнено'"),ЭтотОбъект, "Объект.РегиональныйМенеджер");
			Возврат Ложь;
		КонецЕсли;
		//rarus agar 09.03.2021 17372 --
		
		//rarus vikhle 05.02.2021 mt 17196 +++
		Если Объект.КонечныйКлиент.Пустая() Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Поле ""Конечный клиент контрагент"" не заполнено'"),ЭтотОбъект,"Объект.КонечныйКлиент");
			Возврат Ложь;
		КонецЕсли;	
		//rarus vikhle 05.02.2021 mt 17196 ---
		
		//rarus vikhle 25.11.2020 mt 16846 +++
		СтруктураОтбора = Новый Структура("СкладОтгрузки",Справочники.Scan_Склады.ПустаяСсылка());
		СтрокиБезСклада = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
		Если СтрокиБезСклада.Количество() > 0 Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Не заполнен склад отгрузки!'"),ЭтотОбъект,"СписокПродуктов");
			Возврат Ложь;
		КонецЕсли;
		//rarus vikhle 25.11.2020 mt 16846 ---
		
		//rarus vikhle 22.09.2020 mt 16181 +++
		Если Объект.ТребуетсяРазмещениеЗаказа Тогда
			//ПараметрыОтбора = Новый Структура("СкладОтгрузки",Справочники.Scan_МестаХранения.ПустаяСсылка());
			//СтрокиБезСкладов = СписокПродуктов.НайтиСтроки(ПараметрыОтбора);
			ПараметрыОтбора = Новый Структура("DDЗапрошенная",Дата(1,1,1));
			СтрокиБезDDЗапрошенной = СписокПродуктов.НайтиСтроки(ПараметрыОтбора);
			Если НЕ СтрокиБезDDЗапрошенной.Количество() = 0 Тогда
				ВывестиСообщениеПол(Нстр("ru = 'Не заполнена DD запрошенная!'"),ЭтотОбъект,"СписокПродуктов");
				Возврат Ложь; //rarus vikhle 05.11.2020 mt 16723	
			КонецЕсли;	
		КонецЕсли;
		//rarus vikhle 22.09.2020 mt 16181 ---
		
		Если (НЕ Объект.ТребуетсяРазмещениеЗаказа 
			И Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
			И Не Объект.ЗаявкаНаБУПродукты) //rarus agar 04.02.2021 17123 +-
			//rarus vikhle 28.07.2021 mt 17637 Раскомментировал +++
			ИЛИ (НЕ Объект.ТребуетсяРазмещениеЗаказа 
			И НЕ Объект.ЗаявкаНаБУПродукты
			И ОдинаковыеСУУВсехПродуктов()) //rarus vikhle 09.06.2021 mt 17637 ---
			//rarus vikhle 28.07.2021 mt 17637 ---
			Тогда
			//rarus vikhle 15.12.2020 mt 16977 +++
			НужноСоздатьДоговор = Истина;
			//КодДоговора = СоздатьДоговор();	
			//Если КодДоговора = Неопределено Тогда
			//	Возврат Ложь; //rarus vikhle 05.11.2020 mt 16723		
			//КонецЕсли; 
			//СтарыйСтатус  = Объект.Статус;
			//Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП; 	 
			////Объект.НомерСОП = Строка(Год(ТекущаяДата())) + "-" + КодДоговора;
			//Объект.НомерСОП = КодДоговора.НомерДоговора; //rarus vikhle 12.11.2020 mt 167 
			//rarus vikhle 15.12.2020 mt 16977 ---
		Иначе
			Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗаявкаНаСОП;	
		КонецЕсли;
		
		//rarus vikhle 15.12.2020 mt 16977 +++
		ЗаявкаЗаписана = Ложь;
		//в одной транзакции, чтобы не создавать впустую СОП
		НачатьТранзакцию();
		Попытка
			Если НужноСоздатьДоговор Тогда
				
				// rarus tenkam 19.01.2021 mantis 17053 +++
				//КодДоговора = СоздатьДоговор();
				Если НЕ ЗначениеЗаполнено(Объект.Договор) Тогда	
					//rarus vikhle 21.10.2021 m 18076 +++
					//КодДоговора = СоздатьДоговор();	
					КодДоговора		= Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьДоговорСОП(Объект.Дилер, Объект.СтавкаНДС);
					Объект.Договор	= КодДоговора;
					//rarus vikhle 21.10.2021 m 18076 ---
				Иначе
					КодДоговора = Объект.Договор;
				КонецЕсли;	
				// rarus tenkam 19.01.2021 mantis 17053 ---
				
				Если КодДоговора = Неопределено Тогда
					ЗаявкаЗаписана = Ложь;
					ОтменитьТранзакцию();
					Возврат ЗаявкаЗаписана;
				КонецЕсли;	
			КонецЕсли;	
			
			Если НужноСоздатьДоговор Тогда
				Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП; 	 
				Объект.НомерСОП = КодДоговора.НомерДоговора;
				УстановитьДатуДоговораВУсловиях(КодДоговора.ДатаНачала);//rarus vikhle 23.06.2021 mt 17637
				//Для установки даты DD, равной дате договора у продуктов БУ или автобусов
				ПараметрыЗаписи.Вставить("БылСозданДоговор",Истина);//rarus vikhle 14.05.2021 mt 17733 +++
			КонецЕсли;	
			//rarus vikhle 15.01.2021 mt 17055 +++
			Если Записать(ПараметрыЗаписи) Тогда
				ЗафиксироватьТранзакцию();
				ЗаявкаЗаписана = Истина;
			Иначе
				ОтменитьТранзакцию();
				ЗаявкаЗаписана = Ложь;
				Объект.Статус = СтарыйСтатус;
				Объект.НомерСОП = "";
				Объект.Договор = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
				УстановитьДатуДоговораВУсловиях(Дата(1,1,1));//rarus vikhle 23.06.2021 mt 17637
			КонецЕсли;
			//rarus vikhle 15.01.2021 mt 17055 ---
		Исключение
			ОтменитьТранзакцию();
			ЗаявкаЗаписана = Ложь;
			Объект.Статус = СтарыйСтатус;
			Объект.НомерСОП = "";
			Объект.Договор = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
			УстановитьДатуДоговораВУсловиях(Дата(1,1,1));//rarus vikhle 23.06.2021 mt 17637
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи заявки: '") + ОписаниеОшибки());
		КонецПопытки;	
		Возврат ЗаявкаЗаписана;
		
	Иначе
		//для заявки на склад не создаются СОП
		Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗаявкаНаСклад;	
		Если Не Записать(ПараметрыЗаписи) Тогда
			Объект.Статус = СтарыйСтатус;
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;	
	//rarus vikhle 08.09.2020 mt 16181 ---
	
		
	
	//rarus vikhle 05.11.2020 mt 16723 +++
	//Если Не Записать(ПараметрыЗаписи) Тогда
	//	Объект.Статус = СтарыйСтатус;
	//	//Объект.ТребуетсяРазмещениеЗаказа = Ложь; //rarus vikhle 01.09.2020 mt 16181
	//	Возврат Ложь;
	//Иначе
	//	Возврат Истина;
	//КонецЕсли;	
	//rarus vikhle 05.11.2020 mt 16723 ---
	//rarus vikhle 14.12.2020 mt 16977 ---
КонецФункции

//rarus agar 25.12.2020 17006 ++
&НаКлиенте
Процедура РасторгнутьСОПФрагмент(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		РасторгнутьСОПЗавершение(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасторгнутьСОПЗавершение(ДополнительныеПараметры = Неопределено) Экспорт
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут");
	
	// rarus tenkam 05.11.2020 mantis 16759 +++
	Если ЗначениеЗаполнено(Объект.Договор) Тогда
		ДоговорРасторгнут = РасторгнутьДоговорНаСервере(Объект.Договор, Объект.Ссылка);
		Если НЕ ДоговорРасторгнут Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	// rarus tenkam 05.11.2020 mantis 16759 ---
	
	//rarus agar 25.12.2020 17006 ++
	Если  ДополнительныеПараметры <> Неопределено 
		И ДополнительныеПараметры.Свойство("АдресКорректировокЗаявокНаОтгрузку")
		Тогда
		ОбработатьКорректировкиЗаявокНаОтгрузку(ДополнительныеПараметры.АдресКорректировокЗаявокНаОтгрузку);
	КонецЕсли;
	//rarus agar 25.12.2020 17006 --
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
	//rarus vikhle 03.03.2022 m 18956 +++
	Если ДополнительныеПараметры.Свойство("ПереноситьВРезерв") Тогда
		ПараметрыЗаписи.Вставить("ПереноситьВРезерв");
	КонецЕсли;	
	//rarus vikhle 03.03.2022 m 18956 ---
	
	Если Не Записать(ПараметрыЗаписи) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		// rarus tenkam 15.04.2021 mantis 17519 +++
		Если  ДополнительныеПараметры <> Неопределено 
			И ДополнительныеПараметры.Свойство("УстановитьСтатусDELETED")
			Тогда
			УстановитьСтатусDELETED();
		КонецЕсли;                     		
		// rarus tenkam 15.04.2021 mantis 17519 ---
		
		ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
		Если Открыта() Тогда //rarus vikhle 04.03.2022 m 18956 +++
			Закрыть(); //rarus vikhle 05.11.2020 mt 16723
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 25.12.2020 17006 --

&НаСервереБезКонтекста
Функция РасторгнутьДоговорНаСервере(ДоговорСсылка, ЗаявкаНаСОП)	// rarus tenkam 05.11.2020 mantis 16759 +++
	ДатаРасторжения = Текущаядата();
	ДоговорРасторгнут = Справочники.Scan_ДоговорыВзаиморасчетов.РасторгнутьДоговор(ДоговорСсылка, ДатаРасторжения);
	Если ДоговорРасторгнут Тогда
		РегистрыСведений.Scan_OrderIntake.ЗаписатьДатуРасторженияПоЗаявкеНаСОП(ЗаявкаНаСОП, ДатаРасторжения);
		// rarus agar 10.01.2022 17739 ++
		АльтернативныйРасчет = Scan_ПраваИНастройки.Scan_Право("ИспользоватьАльтернативныйРасчетДатOrderIntake");
		Если АльтернативныйРасчет Тогда
			Для Каждого СтрокаПродукта Из ЗаявкаНаСОП.СписокПродуктов Цикл
				Scan_OrderIntake.ЗарегистрироватьРасторжение(ДатаРасторжения,, СтрокаПродукта.Продукт);
				Scan_OrderIntake.ЗарегистрироватьОтменуОплаты(ДатаРасторжения,, СтрокаПродукта.Продукт);
			КонецЦикла;
		КонецЕсли;
		// rarus agar 10.01.2022 17739 --
	КонецЕсли;
	
	Возврат ДоговорРасторгнут;
	
КонецФункции	// rarus tenkam 05.11.2020 mantis 16759 ---

&НаСервере
Функция НачатьОформлениеСОПНаСервере(ПараметрыЗаписи) //rarus vikhle 05.03.2022 m 18956 + ПараметрыЗаписи
	//rarus vikhle 22.09.2020 mt 16181 +++
	Если СоглашениеСодержитДрафты() Тогда
		//ВывестиСообщениеПол("В соглашении о поставке присутствуют драфты продуктов. Договор не может быть создан.");	
		ВывестиСообщениеПол(Нстр("ru = 'В заявке присутствуют драфты продуктов. Договор не может быть создан.'")); //rarus vikhle 05.11.2020 mt 16723
		Возврат Ложь; //rarus vikhle 05.11.2020 mt 16723	
	КонецЕсли;
	
	НачатьТранзакцию();//rarus vikhle 18.02.2021 +++
	Попытка
		Если НЕ ЗначениеЗаполнено(Объект.Договор) Тогда	// rarus tenkam 31.12.2020 mantis 17053 +
			//rarus vikhle 21.10.2021 m 18076 +++
			//КодДоговора = СоздатьДоговор();	 
			КодДоговора		= Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьДоговорСОП(Объект.Дилер, Объект.СтавкаНДС);
			Объект.Договор	= КодДоговора;
			//rarus vikhle 21.10.2021 m 18076 ---
			// rarus tenkam 31.12.2020 mantis 17053 +++
		Иначе
			КодДоговора = Объект.Договор;
		КонецЕсли;	
		// rarus tenkam 31.12.2020 mantis 17053 ---

		Если кодДоговора = неопределено Тогда
			ОтменитьТранзакцию();
			Возврат Ложь; //rarus vikhle 05.11.2020 mt 16723
		КонецЕсли; 
		СтарыйСтатус  = Объект.Статус;
		Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП"); 	 
		//Объект.НомерСОП = Строка(Год(ТекущаяДата())) + "-" + КодДоговора;
		Объект.НомерСОП = КодДоговора.НомерДоговора; //rarus vikhle 12.11.2020 mt 16723 +++	
		УстановитьДатуДоговораВУсловиях(КодДоговора.ДатаНачала);//rarus vikhle 23.06.2021 mt 17637
		
		//rarus vikhle 23.11.2020 mt 16181 +++
		//ПараметрыЗаписи = Новый Структура; //rarus vikhle 05.03.2022 m 18956
		ПараметрыЗаписи.Вставить("ЗакрыватьФорму",Истина);
		//rarus vikhle 23.11.2020 mt 16181 ---
		
		//Для установки даты DD, равной дате договора у продуктов БУ или автобусов
		ПараметрыЗаписи.Вставить("БылСозданДоговор",Истина);//rarus vikhle 14.05.2021 mt 17733 +++
		
		Если Записать(ПараметрыЗаписи) Тогда
			ЗафиксироватьТранзакцию();
			Возврат Истина;
		Иначе
			ОтменитьТранзакцию();
			Объект.Статус = СтарыйСтатус;
			Объект.НомерСОП = "";
			Объект.Договор = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
			УстановитьДатуДоговораВУсловиях(Дата(1,1,1));//rarus vikhle 23.06.2021 mt 17637
			Возврат Ложь;
		КонецЕсли;
		//rarus vikhle 22.09.2020 mt 16181 ---
	Исключение
		ОтменитьТранзакцию();
		Объект.Статус = СтарыйСтатус;
		Объект.НомерСОП = "";
		Объект.Договор = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
		УстановитьДатуДоговораВУсловиях(Дата(1,1,1));//rarus vikhle 23.06.2021 mt 17637
		ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи заявки: '") + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	//rarus vikhle 18.02.2021 ---
КонецФункции	

&НаСервере
Функция ОтправитьВБухгалтериюНаСервере(ПараметрыЗаписи) //rarus vikhle 27.10.2021 m 18426 заменил параметр
	
	// rarus vikhle 03.09.2020 mt 16181 +++
	Если СоглашениеСодержитДрафты() Тогда
		//ВывестиСообщениеПол("В соглашении о поставке присутствуют драфты продуктов. Договор не может быть отправлен в 1ДБ");	
		ВывестиСообщениеПол(Нстр("ru = 'В заявке присутствуют драфты продуктов. Договор не может быть отправлен в 1ДБ.'")); //rarus vikhle 05.11.2020 mt 16723 
		Возврат Ложь; //rarus vikhle 05.11.2020 mt 16723	
	КонецЕсли;	
	
	//rarus vikhle 10.02.2022 m 18875 +++
	СтруктураОтбора = Новый Структура("Себестоимость", 0);
	СтрокиБезСС = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
	
	Если СтрокиБезСС.Количество() > 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'В тч ""Список продуктов"" есть продукты с незаполненной себестоимостью'"));
		Возврат Ложь;
	КонецЕсли;
	//rarus vikhle 10.02.2022 m 18875 ---
	
	//rarus vikhle 27.10.2021 m 18426 +++ закомментировал
	//rarus vikhle 23.11.2020 mt 16181 +++
	//ПараметрыЗаписи = Новый Структура;
	//ПараметрыЗаписи.Вставить("ЗакрыватьФорму",ЗакрыватьФорму);//rarus vikhle 08.02.2021 mt 17196 Признак влияет на необходимость перерисовки формы по параметрам видимости после записи
	//rarus vikhle 23.11.2020 mt 16181 ---
	//rarus vikhle 27.10.2021 m 18426 +++ закомментировал ---
	
	// rarus tenkam 23.09.2020 mantis 16181 +++ 
	Если Модифицированность Тогда
		Если Не Записать(ПараметрыЗаписи) Тогда
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;
	
	// rarus tenkam 03.09.2021 mantis 18215 +++
	//// rarus tenkam 03.04.2021 mantis 17594 +++
	//// Проверим, созданы ли все документы установки плановых цен, иначе создадим
	//ВсеОК = ПроверитьСоздатьДокументыУстановкиПлановыхЦен(ПараметрыЗаписи);
	//Если НЕ ВсеОК Тогда
	//	Возврат Ложь;
	//КонецЕсли;
	//// rarus tenkam 03.04.2021 mantis 17594 ---  
	// rarus tenkam 03.09.2021 mantis 18215 ---
	
	// Отправим данные в 1БД
	ДанныеОтправлены = Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьДоговорВ1БД(Объект.Договор, Объект.Ссылка);		
	Если НЕ ДанныеОтправлены Тогда
		Возврат Ложь; //rarus vikhle 05.11.2020 mt 16723
	КонецЕсли;
	// rarus tenkam 23.09.2020 mantis 16181 ---
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Оформлен");
	       	
	//rarus vikhle 05.11.2020 mt 16723 +++
	Если Не Записать(ПараметрыЗаписи) Тогда
		Объект.Статус = СтарыйСтатус;
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	//rarus vikhle 05.11.2020 mt 16723 ---
	
	//rarus vikhle 03.09.2020 mt 16181 ---
КонецФункции

#КонецОбласти

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	//ОбработкаПараметровВидимости();
	Scan_ПараметрыВидимостиОбъектовСервер.ОбработкаПараметровВидимости(ЭтотОбъект);
	
	УправлениеПолямиЗаявкиИзНаличия(); //rarus vikhle 17.11.2020 mt 16181
	
	// доработка уникальных полей
	Если Элементы.STDUO.Видимость Тогда
		Если Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std Тогда
			Элементы.НомерКПSPORT.Видимость = Ложь;
			Элементы.ЗагрузитьКПИз1ДБ.Видимость = Ложь;
			Элементы.КПЗагружено.Видимость = Ложь; //rarus vikhle 28.12.2020 mt 17036
			Элементы.СтандартнаяСпецификация.Видимость = Истина;
		Иначе
			Элементы.НомерКПSPORT.Видимость = Истина;
			Элементы.ЗагрузитьКПИз1ДБ.Видимость = Истина;
			Элементы.КПЗагружено.Видимость = Истина; //rarus vikhle 28.12.2020 mt 17036
			Элементы.СтандартнаяСпецификация.Видимость = ложь;
		КонецЕсли; 
	КонецЕсли;
	
	//rarus vikhle 11.09.2020 mt 16526 +++
	//Если Элементы.Склад.Видимость Тогда
	//	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП Тогда
	//		Если ПереключательСклада = 0 Тогда
	//			Элементы.СкладОтгрузки.Видимость = Ложь;
	//			Элементы.ДекорацияПриоритетныйСклад.Видимость = истина;
	//			Если ЗначениеЗаполнено(Объект.Дилер) Тогда
	//				Элементы.ДекорацияПриоритетныйСклад.Заголовок = "Приоритетный склад - " + Объект.Дилер.ПриоритетныйСклад;	
	//			КонецЕсли;  
	//		Иначе 
	//			Элементы.СкладОтгрузки.Видимость = истина;
	//			Элементы.ДекорацияПриоритетныйСклад.Видимость = ложь;
	//		КонецЕсли;	
	//	КонецЕсли; 
	//Иначе
	//	Элементы.Склад.Видимость = ложь;
	//	Элементы.СкладОтгрузки.Видимость = истина;
	//	Элементы.ДекорацияПриоритетныйСклад.Видимость = ложь;
	//КонецЕсли; 
	//rarus vikhle 11.09.2020 mt 16526 ---
	
	//rarus vikhle 09.09.2020 mt 16181 +++
	Если НЕ Элементы.СписокПродуктов.ТолькоПросмотр И НЕ СписокПродуктов.Количество() = 0 Тогда 
		Элементы.СписокПродуктовDDЗапрошенная.ТолькоПросмотр = НЕ Справочники.Scan_СоглашенияОПоставке.СоглашениеСодержитДрафты(СписокПродуктов);	
	КонецЕсли;	
	
	Если НЕ Элементы.СписокПродуктовЦенаСНДС.ТолькоПросмотр
		И Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП
		И НЕ Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std Тогда 
		//РольКлиентскаяПоддержка = ПолучитьРоль("Сотрудник отдела клиентской поддержки");
		//rarus vikhle 26.05.2021 m 17780 +++
		НаименованиеРоли = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РольИсполнителя,"Наименование"));
		Если НаименованиеРоли = "Сотрудник отдела клиентской поддержки" ИЛИ НаименованиеРоли = "Руководитель отдела клиентской поддержки" Тогда
			ЭтоПользовательОКП = Истина;
		Иначе
			ЭтоПользовательОКП = Ложь;
		КонецЕсли;
		//rarus vikhle 26.05.2021 m 17780 ---
		
		Если ЭтоПользовательОКП Тогда //rarus vikhle 26.05.2021 m 17780  
			Элементы.СписокПродуктовЦенаСНДС.ТолькоПросмотр = Истина;
			Элементы.ЗаполнитьЦены.Доступность = Ложь;
		КонецЕсли;	
	КонецЕсли;
		
	//rarus vikhle 09.09.2020 mt 16181 ---
	
	//rarus vikhle 11.11.2020 mt 16723 +++
	Если НЕ Элементы.Модель.ТолькоПросмотр 
		И Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
		И НЕ Объект.СтандартнаяСпецификация.Пустая() Тогда
		Элементы.Модель.ТолькоПросмотр = Истина;
	КонецЕсли;	
	//rarus vikhle 11.11.2020 mt 16723 ---	
	
	//rarus vikhle 25.12.2020 mt 17036 +++
	Если (Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП 
		И (Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП 
		ИЛИ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр)
		И РольИсполнителя = ПолучитьРоль("Дилер"))
		ИЛИ (Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад 
		И (Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП 
		ИЛИ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр)
		И РольИсполнителя = ПолучитьРоль("Менеджер департамента продаж"))	Тогда
		Элементы.FFU.ТолькоПросмотр		= Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std;
		Элементы.SORDER.ТолькоПросмотр	=  Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std;  
	КонецЕсли;	
	//rarus vikhle 25.12.2020 mt 17036 ---
			
	//Если Объект.СписокПродуктов.Количество()> 0 Тогда
	//	Элементы.Пересмотр.Видимость = Ложь;
	//КонецЕсли; 
	
	//rarus vikhle 14.08.2020 mt 16181 +++
	//Если ЗначениеЗаполнено(Объект.СпециальныеУсловия) Тогда
	//	Элементы.КоличествоРабочихДней.ТолькоПросмотр = истина;
	//	Элементы.УсловияОплаты.ТолькоПросмотр = Истина;
	//КонецЕсли;
	//rarus vikhle 14.08.2020 mt 16181	
	
	// rarus vikhle 27.08.2021 mt 17834 +++
	ТекущийПользователь		 = Пользователи.ТекущийПользователь();
	ПользовательСотрудник	 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ПользовательСотрудник");
	ВОснованииЗаявкаНаСОПSRU = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Основание, "ТипСоглашенияОПоставке") = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU; 
	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП
		И ПользовательСотрудник
		И НЕ ВОснованииЗаявкаНаСОПSRU
		И НЕ Элементы.Дилер.ТолькоПросмотр Тогда
		Элементы.Дилер.ТолькоПросмотр = Истина;	
	КонецЕсли;
	// rarus vikhle 27.08.2021 mt 17834 ---
	
	//rarus vikhle 13.01.2022 m 18269 +++
	// rarus vikhle 23.12.2021 m 18269 +++
	//Если НЕ Элементы.СписокПродуктовСебестоимость.ТолькоПросмотр
	//	И НЕ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UO")
	//	И НЕ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UUO") Тогда 
	//	Элементы.СписокПродуктовСебестоимость.ТолькоПросмотр = Истина;
	//КонецЕсли;	
	// rarus vikhle 23.12.2021 m 18269 ---
	//rarus vikhle 13.01.2022 m 18269 ---
	//Rarus bonmak 09.03.2022 18956 ++
	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП
		И Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП
		И ПользовательСотрудник
		И ВОснованииЗаявкаНаСОПSRU Тогда
		Элементы.Модель.ТолькоПросмотр = Истина;
		Элементы.ПродавецДилера.ТолькоПросмотр =  Ложь;  
		Элементы.КонечныйКлиентКомпания.ТолькоПросмотр =  Ложь;
		Элементы.КонечныйКлиент.ТолькоПросмотр =  Ложь;
	КонецЕсли; 
	//Rarus bonmak 09.03.2022 18956 --

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	//rarus vikhle 11.11.2020 mt 16181 +++
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСебестоимость.Имя);
	
	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.СпециальныеУсловия");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	//rarus vikhle 24.05.2021 mt 17780 +++
	//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УникальностьСпецификации");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	//СписокТиповСпецификации = Новый СписокЗначений;
	//СписокТиповСпецификации.Добавить(Перечисления.Scan_ТипыСпецификации.UO);
	//СписокТиповСпецификации.Добавить(Перечисления.Scan_ТипыСпецификации.UUO);
	//ОтборЭлемента.ПравоеЗначение = СписокТиповСпецификации; 
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ЦенаПоВалютнойОговорке");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	//rarus vikhle 24.05.2021 mt 17780 ---
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//rarus vikhle 24.05.2021 mt 17780 +++
	//Элемент = УсловноеОформление.Элементы.Добавить();

	//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСебестоимость.Имя);

	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УникальностьСпецификации");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	//ОтборЭлемента.ПравоеЗначение = СписокТиповСпецификации;

	//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//rarus vikhle 24.05.2021 mt 17780 ---
	//rarus vikhle 11.11.2020 mt 16181 ---
	
	//rarus vikhle 25.01.2021 mt 16981 +++
	//rarus agar 11.12.2020 mt 16930 ++
	//Элемент = УсловноеОформление.Элементы.Добавить();

	//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСкладОтгрузки.Имя);

	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокПродуктов.ЗапретНаИзменениеСкладаОтгрузки");
	//ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = Истина;

	//Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(255,200,200));
	//rarus agar 11.12.2020 mt 16930 --
	//rarus vikhle 25.01.2021 mt 16981 ---
	
	//rarus vikhle 18.12.2020 mt 16181 +++ 
	//Условия оплаты
	
	//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
	//Элемент = УсловноеОформление.Элементы.Добавить();

	//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УсловияОплатыКрайняяДатаОплаты.Имя);
	//
	//ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	//
	//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УсловияОплаты.РасчетДатыОплаты");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	//
	//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УсловияОплаты.РасчетДатыОплаты");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS");
	//
	//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УсловияОплаты.РасчетДатыОплаты");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
	//
	//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//rarus vikhle 18.12.2020 mt 16181 ---
	//rarus vikhle 28.07.2021 mt 17637 ---
	
	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//rarus vikhle 08.06.2021 mt 17637 +++
	// Только просмотр во всех колонках т.ч. "Условия оплаты" для строк с заполненным продуктом 
	//Элемент = УсловноеОформление.Элементы.Добавить();

	//Для Каждого Колонка Из Элементы.УсловияОплаты.ПодчиненныеЭлементы Цикл
	//	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Колонка.Имя);
	//КонецЦикла;
	//	
	//ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.УсловияОплаты.Продукт");
	//ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	//
	//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//rarus vikhle 08.06.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
	
	//rarus vikhle 21.01.2021 mt 16981 +++
	//Склад продажи
	Если Элементы.СписокПродуктовСкладПродажи.Доступность Тогда
		Элемент = УсловноеОформление.Элементы.Добавить();

		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСкладПродажи.Имя);

		ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокПродуктов.ЗапретНаИзменениеСкладаОтгрузки");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);	
	КонецЕсли;
	//rarus vikhle 21.01.2021 mt 16981 ---
	
	//rarus vikhle 01.02.2021 mt 17179 +++
	//DDS
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовDDS.Имя);

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокПродуктов.DD");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);			
	//rarus vikhle 01.02.2021 mt 17179 ---
	
	//rarus vikhle 25.02.2021 mt 17186 +++
	
	//Если НЕ Элементы.СписокПродуктов.ТолькоПросмотр Тогда
	Если НЕ Элементы.СписокПродуктовСпециальныеУсловия.ТолькоПросмотр Тогда //rarus vikhle 31.01.2022 m 18813	
		//Доступность СУ для продуктов в зависимости от наличия даты продажи
		//rarus kabany 15.04.2021 17533 +++
		Если Объект.Дилер.ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
			
			Если НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда //rarus kabany 12.04.2021 17533 +
				Элемент = УсловноеОформление.Элементы.Добавить();
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСпециальныеУсловия.Имя);
				
				ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ДатаПродажиКлиенту");      
				ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
				
				Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
			КонецЕсли;
		Иначе 
			Если НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда
				Элемент = УсловноеОформление.Элементы.Добавить();
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСпециальныеУсловия.Имя);
				
				ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ДатаПродажиДилеру");
				ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
				
				Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
			КонецЕсли;
		КонецЕсли;
		//rarus kabany 15.04.2021 17533 ---
		
		//rarus kabany 14.04.2021 17533 +++
		//Доступность СУ для продуктов в зависимости от даты отгрузки
		//Элемент = УсловноеОформление.Элементы.Добавить();

		//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСпециальныеУсловия.Имя);
		//
		//ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		//ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		
		//Если дата отгрузки равна текущей или завтрашней дате, тогда только просмотр для колонки СУ
		//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ДатаБрони");
		//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ОтборЭлемента.ПравоеЗначение = НачалоДня(ТекущаяДатаСеанса()); 
		//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		//
		//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ДатаБрони");
		//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ОтборЭлемента.ПравоеЗначение = НачалоДня(ТекущаяДатаСеанса()) + 60 * 60 * 24; 
		//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		//rarus kabany 14.04.2021 17533 ---
	КонецЕсли;	
	//rarus vikhle 25.02.2021 mt 17186 ---
	
	//rarus vikhle 30.07.2021 17637 +++ Раскомментировал
	//rarus vikhle 22.06.2021 mt 17637 +++
	
	//Дерево график платежей
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоГрафикПлатежей.Имя);

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоГрафикПлатежей.ИмяГруппировки");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "ВидОплаты";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоЖелтый);
	
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоГрафикПлатежей.Имя);

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоГрафикПлатежей.ИмяГруппировки");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "ДатаПлатежа";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Лазурный);
	//rarus vikhle 22.06.2021 mt 17637 ---
	//rarus vikhle 30.07.2021 17637 ---
	
	//rarus vikhle 30.08.2021 mt 17933 +++
	//Заказы с записью в регистре "Очередь DD2/DDS информера"
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктов.Имя);

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокПродуктов.ВходитВОчередьDD2DDSИнформера");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
	//rarus vikhle 30.08.2021 mt 17933 ---
	
КонецПроцедуры	

//rarus vikhle 17.11.2020 mt 16181 +++
&НаСервере
Процедура УправлениеПолямиЗаявкиИзНаличия();
	
	Если Объект.ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад") Тогда //rarus vikhle 16.12.20220 mt 16181
		Возврат;
	КонецЕсли;	
	
	Элементы.СтатусЗаказа.Видимость 								= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.СравнитьСпецификации.Видимость 						= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.СтандартнаяСпецификация.Видимость 						= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.STDUO.Видимость 										= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.ЗагрузитьКПИз1ДБ.Видимость 							= (Объект.ТребуетсяРазмещениеЗаказа И Объект.УникальностьСпецификации <> Перечисления.Scan_ТипыСпецификации.Std);//rarus vikhle 18.12.2020 mt 16955;
	Элементы.КПЗагружено.Видимость 									= (Объект.ТребуетсяРазмещениеЗаказа И Объект.УникальностьСпецификации <> Перечисления.Scan_ТипыСпецификации.Std);//rarus vikhle 28.12.2020 mt 17036;
	Элементы.ЦветКабины.Видимость 									= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.ЦветФальшрадиаторнойРешетки.Видимость 					= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.Кузовостроитель.Видимость 								= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.ТребованиеПоПрикреплениюКПКузовостроителя.Видимость	= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.SORDER.Видимость 										= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.FFU.Видимость 											= Объект.ТребуетсяРазмещениеЗаказа;
	Элементы.НомерКПSPORT.Видимость									= Объект.ТребуетсяРазмещениеЗаказа;
	//rarus vikhle 18.12.2020 mt 16977 +++
	Если Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП 
		ИЛИ Объект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр Тогда
		Элементы.Модель.ТолькоПросмотр  								= (Объект.ТребуетсяРазмещениеЗаказа И Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std);
	КонецЕсли;	
	//rarus vikhle 18.12.2020 mt 16977 ---																	
	//rarus vikhle 01.12.2020 mt 16846 +++
	//Объект.НомерКоммерческогоПредложенияSPORT		= "";
	//Объект.ЦветКабины								= "";
	//Объект.ЦветФальшрадиаторнойРешетки				= "";
	//Объект.СтандартнаяСпецификация					= Документы.Scan_СпецификацияСтандартнойМодели.ПустаяСсылка();
	//Объект.Кузовостроитель							= Справочники.Scan_Компании.ПустаяСсылка();
	//Объект.SORDER 									= Справочники.Scan_ОпцииПродуктов.Нет_SOrder;
	//Объект.FFU 										= Справочники.Scan_ОпцииПродуктов.Нет_FFU;
		
	Если Элементы.STDUO.Видимость Тогда
		Если Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std Тогда
			Элементы.НомерКПSPORT.Видимость = Ложь;
			Элементы.СтандартнаяСпецификация.Видимость = Истина;
		Иначе
			Элементы.НомерКПSPORT.Видимость = Истина;
			Элементы.СтандартнаяСпецификация.Видимость = ложь;
		КонецЕсли; 
	КонецЕсли;
	//rarus vikhle 01.12.2020 mt 16846 ---
	
КонецПроцедуры	
//rarus vikhle 17.11.2020 mt 16181 ---

&НаСервере
Процедура УсловияОплатыПриИзмененииНаСервере()
	//Объект.УсловияОплаты.Загрузить(УсловияОплаты.Выгрузить()); //rarus vikhle 11.08.2020 mt 16181
	
	//rarus vikhle 30.06.2021 mt 17944 +++
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
	ОбновитьГрафикПлатежей();
	//rarus vikhle 30.06.2021 mt 17944 ---
КонецПроцедуры

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПриИзменении(Элемент)
//	УсловияОплатыПриИзмененииНаСервере();//rarus vikhle 04.08.2020 mt 16181 //rarus vikhle 30.06.2021 mt 17944
//	
//	//rarus vikhle 02.10.2020 mt 16181 +++
//	//Если Элементы.ГрафикПлатежей.Видимость Тогда //rarus vikhle 29.12.2020 mt 17026
//	//ОбновитьГрафикПлатежей();//rarus vikhle 30.06.2021 mt 17944
//	//КонецЕсли;
//	//rarus vikhle 02.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

&НаСервере
Процедура СпециальныеУсловияПриИзмененииНаСервере()
	//Если Объект.СписокПродуктов.Количество()>0 Тогда//rarus vikhle mt 11.08.2020 mt 16181 
		//rarus vikhle mt 02.07.2020 mt 15888 +++
		//rarus ozhnik проверить что все продукты совпадают 19.05.2020 + 
		//Для каждого СтрокаПродукта Из Объект.СписокПРодуктов Цикл
		//	ПродуктЕстьВСУ = Объект.СпециальныеУсловия.СписокПродуктов.Найти(СтрокаПродукта.Продукт,"Продукт");
		//	Если продуктЕстьВСУ = неопределено Тогда
		//		Объект.СпециальныеУсловия = неопределено;
		//		ВывестиСообщениеПол("Продукт %1 не входит в специальные условия",ЭтаФорма,,,,СтрокаПродукта.Продукт);				
		//	КонецЕсли; 
		//КонецЦикла;
		//ПроверитьСпециальныеУсловия();//rarus vikhle mt 11.08.2020 mt 16181 
		//rarus vikhle mt 02.07.2020 mt 15888 ---
	//КонецЕсли;//rarus vikhle mt 11.08.2020 mt 16181  
	
	//Если ЗначениеЗаполнено(Объект.СпециальныеУсловия) Тогда//rarus vikhle mt 11.08.2020 mt 16181 
		//КоличествоРабочихДней = Объект.СпециальныеУсловия.КоличествоРабочихДней;
		//УсловияОплаты.Загрузить(Объект.СпециальныеУсловия.УсловияОплаты.Выгрузить());//rarus vikhle mt 11.08.2020 mt 16181 
		//Цена = Объект.СпециальныеУсловия.ЦенаДляДилера;//rarus vikhle mt 11.08.2020 mt 16181 
	//Иначе//rarus vikhle mt 11.08.2020 mt 16181 
		//КоличествоРабочихДней = Объект.КоличествоРабочихДней;
		//УсловияОплаты.Загрузить(Объект.УсловияОплаты.Выгрузить());//rarus vikhle mt 11.08.2020 mt 16181 
		//Цена = Объект.Цена;//rarus vikhle mt 11.08.2020 mt 16181 
	//КонецЕсли;  //rarus vikhle mt 11.08.2020 mt 16181 
	//УправлениеДиалогомНаСервере();	//rarus vikhle mt 11.08.2020 mt 16181 
КонецПроцедуры

//rarus vikhle 21.10.2021 m 18076 +++ Закомментировал, перенес в Scan_ДоговорыВзаиморасчетов.СоздатьДоговорСОП()
//&НаСервере
//Функция СоздатьДоговор()
//	
//	КонтрагентДилера = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Объект.Дилер);
//	Если не ЗначениеЗаполнено(КонтрагентДилера) Тогда
//		ВывестиСообщениеПол(Нстр("ru = 'Не задан Контрагент дилера. Создание договора невозможно.'"));
//		возврат неопределено;
//	КонецЕсли;
//	
//	ДоговорОбъект = Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьЭлемент();
//	ДоговорОбъект.УстановитьНовыйКод();
//	ДоговорОбъект.Наименование = СТРЗАменить(Формат(Строка(Год(ТекущаяДата())),"ЧГ=0"),Символы.НПП,"") + "-" + ДоговорОбъект.Код;//rarus vikhle 23.11.2020 mt 16181 добавил формат 
//	ДоговорОбъект.Компания = Объект.Дилер;
//	ДоговорОбъект.Владелец = КонтрагентДилера;
//	ДоговорОбъект.ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение;
//	ДоговорОбъект.СОП_СтатусОплаты = Перечисления.Scan_СтатусыОплатПоСОП.НеОплачено;
//	ДоговорОбъект.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоКоду("643");//rarus vikhle 17.08.2020 mt 16181
//	ДоговорОбъект.СтавкаНДС = Объект.СтавкаНДС; //rarus vikhle 15.01.2021 mt 17055
//	
//	//rarus vikhle 06.10.2021 mt 18076 +++ закомментировал
//	//rarus vikhle 30.07.2021 mt 18078 +++
//	// Блокировка всей таблицы, возможна ошибка при одновременном создании договоров у других пользователей
//	// при превышении времени блокировки
//	//Блокировка					= Новый БлокировкаДанных;
//	//ЭлементБлокировки			= Блокировка.Добавить();
//	//ЭлементБлокировки.Область	= "Справочник.Scan_ДоговорыВзаиморасчетов";
//	//ЭлементБлокировки.Режим		= РежимБлокировкиДанных.Исключительный;
//	//Блокировка.Заблокировать();
//	////rarus vikhle 30.07.2021 mt 18078 ---
//	//
//	//Запрос = Новый Запрос;
//	//Запрос.Текст = 
//	//	"ВЫБРАТЬ
//	//	|	естьNULL(МАКСИМУМ(Scan_ДоговорыВзаиморасчетов.НомерСоглашения),0) КАК НомерСоглашения
//	//	|ИЗ
//	//	|	Справочник.Scan_ДоговорыВзаиморасчетов КАК Scan_ДоговорыВзаиморасчетов
//	//	|ГДЕ
//	//	|	Scan_ДоговорыВзаиморасчетов.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания";
//	//
//	//Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(ТекущаяДата()));
//	//Запрос.УстановитьПараметр("ДатаОкончания", КонецГода(ТекущаяДата()));
//	//
//	//РезультатЗапроса = Запрос.Выполнить();
//	//
//	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	//Номер =  0;
//	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//	//	//Номер = ВыборкаДетальныеЗаписи.НомерСоглашения;
//	//	Номер = ?(ВыборкаДетальныеЗаписи.НомерСоглашения = 0,1,ВыборкаДетальныеЗаписи.НомерСоглашения + 1); //rarus vikhle 15.01.2021 mt 17055
//	//КонецЦикла;
//	//фСтрокаНомера = СтрЗаменить(Строка(Номер),Символы.НПП,"");
//	//СтрокаНомера = СтрЗаменить(фСтрокаНомера, ",", ""); //rarus bonmak 05.07.2021 17977
//	//Пока СтрДлина(СтрокаНомера)<4 Цикл
//	//	СтрокаНомера = "0" + СтрокаНомера;	
//	//КонецЦикла; 
//	//ДоговорОбъект.НомерСоглашения = Номер; //rarus vikhle 15.01.2021 mt 17055 убрал "+1"
//	//ДоговорОбъект.НомерДоговора = СтрЗаменить("" + (Формат(Год(ТекущаяДата()),"ЧГ=0")) + "-" + СтрокаНомера, Символы.НПП,"");//rarus vikhle 23.11.2020 mt 16181 добавил формат
//	//ДоговорОбъект.ДатаНачала = ТекущаяДата();
//	//ДоговорОбъект.Наименование = "№ " + СокрЛП(ДоговорОбъект.НомерДоговора) + " от " + Формат(ДоговорОбъект.ДатаНачала,"ДФ=dd.MM.yyyy; ДЛФ=Д"); //rarus vikhle 25.11.2020 mt 16181 добавил формат
//	
//	ДоговорОбъект.ЗаполнитьДанныеНумерацииСОП();
//	//rarus vikhle 06.10.2021 mt 18076 ---
//	
//	ДоговорОбъект.Записать();
//	Объект.Договор = ДоговорОбъект.Ссылка;
//	возврат Объект.Договор;
//КонецФункции
//rarus vikhle 21.10.2021 m 18076 ---

&НаСервере
Процедура СформироватьНаименование()
	//Объект.Наименование = "СОП / " + Объект.Дилер + " / " + Объект.Модель + " / " + Объект.КонечныйКлиент;	
	Объект.Наименование = Строка(Объект.ТипСоглашенияОПоставке)+ " / " + Объект.Дилер + " / " + Объект.Модель + " / " + Объект.КонечныйКлиент; //rarus vikhle 05.11.2020 mt 16723	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораКомпаний()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Период КАК Период,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания КАК Компания,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент КАК Контрагент,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.ВидВзаимодействия КАК ВидВзаимодействия,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Пользователь КАК Пользователь,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.ДокументИзмененияВ1БД КАК ДокументИзмененияВ1БД,
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.РежимУстановкиВидаВзаимодействия КАК РежимУстановкиВидаВзаимодействия
	               |ИЗ
	               |	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	               |ГДЕ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Объект.КонечныйКлиент);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Если выгрузка.Количество() = 1 Тогда
		Объект.КонечныйКлиентКомпания = Выгрузка[0].Компания;
	КонецЕсли; 
	Элементы.КонечныйКлиентКомпания.СписокВыбора.Очистить();

	Для каждого СтрокаВыгрузки Из  Выгрузка Цикл
		Элементы.КонечныйКлиентКомпания.СписокВыбора.Добавить(СтрокаВыгрузки.Компания);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИзделияСНовымиЦенами(СписокПродуктовДоИзменений)
	//rarus vikhle 08.09.2020 mt 16181 +++
	Запрос = Новый Запрос;
	//rarus vikhle 24.12.2020 mt 16181 +++
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ТекущийСписокПродуктов.Продукт КАК Продукт,
	//               |	ТекущийСписокПродуктов.ЦенаСНДС КАК ЦенаСНДС,
	//               |	ТекущийСписокПродуктов.ЦенаБезНДС КАК ЦенаБезНДС,
	//               |	ТекущийСписокПродуктов.ПроцентДрайв КАК ПроцентДрайв,
	//               |	ТекущийСписокПродуктов.СпециальныеУсловия КАК СпециальныеУсловия,
	//               |	ТекущийСписокПродуктов.ДокументУстановкиПлановыхЦен КАК ДокументУстановкиПлановыхЦен
	//               |ПОМЕСТИТЬ ТекущийСписокПродуктов
	//               |ИЗ
	//               |	&ТекущийСписокПродуктов КАК ТекущийСписокПродуктов
	//               |ГДЕ
	//               |	ТекущийСписокПродуктов.Продукт ССЫЛКА Справочник.Scan_Изделия
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ТекущийСписокПродуктов.Продукт КАК Продукт,
	//               |	ТекущийСписокПродуктов.ЦенаСНДС КАК ЦенаСНДСТекущая,
	//               |	ТекущийСписокПродуктов.ЦенаБезНДС КАК ЦенаБезНДСТекущая,
	//               |	ЕСТЬNULL(Scan_СоглашенияОПоставкеСписокПродуктов.ЦенаСНДС, 0) КАК ЦенаСНДСДоИзменений,
	//               |	ЕСТЬNULL(Scan_СоглашенияОПоставкеСписокПродуктов.ЦенаБезНДС, 0) КАК ЦенаБезНДСДоИзменений,
	//               |	ТекущийСписокПродуктов.ПроцентДрайв КАК ПроцентДрайв,
	//               |	ТекущийСписокПродуктов.СпециальныеУсловия КАК СпециальныеУсловия,
	//               |	ТекущийСписокПродуктов.ДокументУстановкиПлановыхЦен КАК ДокументУстановкиПлановыхЦен,
	//               |	Scan_СоглашенияОПоставкеСписокПродуктов.ПроцентДрайв КАК ПроцентДрайвДоИзменений,
	//               |	Scan_СоглашенияОПоставкеСписокПродуктов.СпециальныеУсловия КАК СпециальныеУсловияДоИзменений
	//               |ПОМЕСТИТЬ СравнениеЦен
	//               |ИЗ
	//               |	ТекущийСписокПродуктов КАК ТекущийСписокПродуктов
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	//               |		ПО ТекущийСписокПродуктов.Продукт = Scan_СоглашенияОПоставкеСписокПродуктов.Продукт
	//               |ГДЕ
	//               |	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка = &СсылкаНаСоглашение
	//               |	И Scan_СоглашенияОПоставкеСписокПродуктов.Продукт ССЫЛКА Справочник.Scan_Изделия
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	СравнениеЦен.Продукт КАК Продукт,
	//               |	СравнениеЦен.ПроцентДрайв КАК ПроцентДрайв,
	//               |	СравнениеЦен.СпециальныеУсловия КАК СпециальныеУсловия,
	//               |	СравнениеЦен.ЦенаСНДСТекущая КАК ЦенаСНДС,
	//               |	СравнениеЦен.ЦенаБезНДСТекущая КАК ЦенаБезНДС,
	//               |	СравнениеЦен.ДокументУстановкиПлановыхЦен КАК ДокументУстановкиПлановыхЦен
	//               |ИЗ
	//               |	СравнениеЦен КАК СравнениеЦен
	//               |ГДЕ
	//               |	(СравнениеЦен.ЦенаСНДСДоИзменений <> СравнениеЦен.ЦенаСНДСТекущая
	//               |			ИЛИ СравнениеЦен.ЦенаБезНДСДоИзменений <> СравнениеЦен.ЦенаБезНДСТекущая
	//               |			ИЛИ СравнениеЦен.ПроцентДрайв <> СравнениеЦен.ПроцентДрайвДоИзменений
	//               |			ИЛИ СравнениеЦен.СпециальныеУсловияДоИзменений <> СравнениеЦен.СпециальныеУсловия)";
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(СписокПродуктовДоИзменений.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
	               |	СписокПродуктовДоИзменений.ЦенаСНДС КАК ЦенаСНДС,
	               |	СписокПродуктовДоИзменений.ЦенаБезНДС КАК ЦенаБезНДС,
	               |	СписокПродуктовДоИзменений.ПроцентДрайв КАК ПроцентДрайв,
	               |	СписокПродуктовДоИзменений.ЦенаПоВалютнойОговорке КАК ЦенаПоВалютнойОговорке, // rarus tenkam 06.04.2021 mants 17419 +
	               |	СписокПродуктовДоИзменений.СпециальныеУсловия КАК СпециальныеУсловия
	               |ПОМЕСТИТЬ СписокПродуктовДоИзменений
	               |ИЗ
	               |	&СписокПродуктовДоИзменений КАК СписокПродуктовДоИзменений
	               |ГДЕ
	               |	СписокПродуктовДоИзменений.Продукт ЕСТЬ НЕ NULL 
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт КАК Продукт,
	               |	ЕСТЬNULL(СписокПродуктовДоИзменений.ЦенаСНДС, 0) КАК ЦенаСНДСДоИзменений,
	               |	ЕСТЬNULL(СписокПродуктовДоИзменений.ЦенаБезНДС, 0) КАК ЦенаБезНДСДоИзменений,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.ЦенаСНДС КАК ЦенаСНДСТекущая,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.ЦенаБезНДС КАК ЦенаБезНДСТекущая,
	               |	ЕСТЬNULL(СписокПродуктовДоИзменений.ПроцентДрайв, 0) КАК ПроцентДрайвДоИзменений,
	               |	ЕСТЬNULL(СписокПродуктовДоИзменений.СпециальныеУсловия, ЗНАЧЕНИЕ(Справочник.Scan_СпециальныеУсловия.ПустаяСсылка)) КАК СпециальныеУсловияДоИзменений,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт.ДокументУстановкиПлановыхЦенПродукта КАК ДокументУстановкиПлановыхЦен,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.ПроцентДрайв КАК ПроцентДрайв,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.СпециальныеУсловия КАК СпециальныеУсловия,
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.ЦенаПоВалютнойОговорке КАК ЦенаПоВалютнойОговорке, // rarus tenkam 06.04.2021 mants 17419 +
	               |	ЕСТЬNULL(СписокПродуктовДоИзменений.ЦенаПоВалютнойОговорке, 0) КАК ЦенаПоВалютнойОговоркеДоИзменений // rarus tenkam 06.04.2021 mants 17419 +
	               |ПОМЕСТИТЬ СравнениеЦен
	               |ИЗ
	               |	Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СписокПродуктовДоИзменений КАК СписокПродуктовДоИзменений
	               |		ПО (СписокПродуктовДоИзменений.Продукт = Scan_СоглашенияОПоставкеСписокПродуктов.Продукт)
	               |ГДЕ
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка = &СсылкаНаСоглашение
	               |	И Scan_СоглашенияОПоставкеСписокПродуктов.Продукт ССЫЛКА Справочник.Scan_Изделия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СравнениеЦен.Продукт КАК Продукт,
	               |	СравнениеЦен.ПроцентДрайв КАК ПроцентДрайв,
	               |	СравнениеЦен.СпециальныеУсловия КАК СпециальныеУсловия,
	               |	СравнениеЦен.ЦенаСНДСТекущая КАК ЦенаСНДС,
	               |	СравнениеЦен.ЦенаБезНДСТекущая КАК ЦенаБезНДС,
	               |	СравнениеЦен.ЦенаПоВалютнойОговорке КАК ЦенаПоВалютнойОговорке, // rarus tenkam 06.04.2021 mants 17419 +
	               |	СравнениеЦен.ДокументУстановкиПлановыхЦен КАК ДокументУстановкиПлановыхЦен
	               |ИЗ
	               |	СравнениеЦен КАК СравнениеЦен
	               |ГДЕ
	               |	(СравнениеЦен.ЦенаСНДСДоИзменений <> СравнениеЦен.ЦенаСНДСТекущая
	               |			ИЛИ СравнениеЦен.ЦенаБезНДСДоИзменений <> СравнениеЦен.ЦенаБезНДСТекущая
	               |			ИЛИ СравнениеЦен.ПроцентДрайв <> СравнениеЦен.ПроцентДрайвДоИзменений
	               |			ИЛИ СравнениеЦен.СпециальныеУсловияДоИзменений <> СравнениеЦен.СпециальныеУсловия
	               |			ИЛИ СравнениеЦен.ЦенаПоВалютнойОговоркеДоИзменений <> СравнениеЦен.ЦенаПоВалютнойОговорке)";	// rarus tenkam 06.04.2021 mants 17419 +
	//Запрос.УстановитьПараметр("ТекущийСписокПродуктов",СписокПродуктов.Выгрузить());
	Запрос.УстановитьПараметр("СписокПродуктовДоИзменений",СписокПродуктовДоИзменений);
	Запрос.УстановитьПараметр("СсылкаНаСоглашение",Объект.Ссылка);
	//rarus vikhle 24.12.2020 mt 16181 ---
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
	//rarus vikhle 08.09.2020 mt 16181
КонецФункции	

&НаСервере
Функция ПолучитьПродуктыБУСЦЕнами()
	
	//rarus vikhle 14.05.2021 mt 17733 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ТекущийСписокПродуктов.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
	               |	ТекущийСписокПродуктов.ЦенаСНДС КАК ЦенаСНДС,
	               |	ТекущийСписокПродуктов.ЦенаБезНДС КАК ЦенаБезНДС,
	               |	ТекущийСписокПродуктов.ПроцентДрайв КАК ПроцентДрайв,
	               |	ТекущийСписокПродуктов.ЦенаПоВалютнойОговорке КАК ЦенаПоВалютнойОговорке,
	               |	ТекущийСписокПродуктов.СпециальныеУсловия КАК СпециальныеУсловия
	               |ПОМЕСТИТЬ ТекущиеПродуктыСЦеной
	               |ИЗ
	               |	&ТекущийСписокПродуктов КАК ТекущийСписокПродуктов
	               |ГДЕ
	               |	ТекущийСписокПродуктов.Продукт ЕСТЬ НЕ NULL 
	               |	И НЕ ТекущийСписокПродуктов.ЦенаСНДС = 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТекущиеПродуктыСЦеной.Продукт КАК Продукт,
	               |	ТекущиеПродуктыСЦеной.ЦенаСНДС КАК ЦенаСНДС,
	               |	ТекущиеПродуктыСЦеной.ЦенаБезНДС КАК ЦенаБезНДС,
	               |	ТекущиеПродуктыСЦеной.ПроцентДрайв КАК ПроцентДрайв,
	               |	ТекущиеПродуктыСЦеной.ЦенаПоВалютнойОговорке КАК ЦенаПоВалютнойОговорке,
	               |	ТекущиеПродуктыСЦеной.СпециальныеУсловия КАК СпециальныеУсловия,
	               |	ТекущиеПродуктыСЦеной.Продукт.ДокументУстановкиПлановыхЦенПродукта КАК ДокументУстановкиПлановыхЦен
	               |ИЗ
	               |	ТекущиеПродуктыСЦеной КАК ТекущиеПродуктыСЦеной";
	Запрос.УстановитьПараметр("ТекущийСписокПродуктов",Объект.СписокПродуктов.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
	//rarus vikhle 14.05.2021 mt 17733 ---
	
КонецФункции	

&НаКлиенте  
Процедура ОбработкаВыбораПродуктов(ВыбранноеЗначение, УстановитьСтандартныеУсловия) Экспорт  //rarus ozhnik 15888 27.08.2020 + //rarus vikhle 28.09.2021 mt 18286 + УстановитьСтандартныеУсловия 
	Если ВыбранноеЗначение <> Неопределено Тогда
		обработатьподбор(ВыбранноеЗначение, УстановитьСтандартныеУсловия); //rarus vikhle 28.09.2021 mt 18286 + УстановитьСтандартныеУсловия 	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОбработатьПодбор(ВыбранноеЗначение, УстановитьСтандартныеУсловия) //rarus vikhle 28.09.2021 mt 18286 + УстановитьСтандартныеУсловия
	
	ДобавленыПродуктыВПустуюЗаявку	= Ложь; //rarus vikhle 22.09.2021 mt 18298
	ТаблицаПодбора					= ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
		
	//rarus vikhle 13.05.2021 mt 17733 +++
	Если ТаблицаПодбора.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
			
	Если Объект.ЗаявкаНаБУПродукты Тогда
		//Для заявок по БУ при подборе в заявку без продуктов ставку НДС устанавливаем, равную ставке подобранных БУ продуктов
		Если СписокПродуктов.Количество() = 0 И Объект.СтавкаНДС <> ТаблицаПодбора[0].СтоимостьПродажиБУСтавкаНДС Тогда
			Объект.СтавкаНДС = ТаблицаПодбора[0].СтоимостьПродажиБУСтавкаНДС;		
		КонецЕсли;	
	КонецЕсли;	
	ЗначениеСтавкиНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтавкаНДС,"Ставка");
	//rarus vikhle 13.05.2021 mt 17733 ---
	
	МассивПродуктов = ТаблицаПодбора.ВыгрузитьКолонку("Продукт"); //rarus vikhle 22.09.2021 mt 18298 
	//rarus vikhle 31.08.2021 mt 17933 +++
	//ЗаказыСоответствие	= ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ТаблицаПодбора.ВыгрузитьКолонку("Продукт"), "ЗаказНаЗавод");
	ЗаказыСоответствие			= ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивПродуктов, "ЗаказНаЗавод"); //rarus vikhle 22.09.2021 mt 18298
	ЗаказыМассив				= ОбщегоНазначения.ВыгрузитьКолонку(ЗаказыСоответствие, "Значение");
	СебестоимостьПродуктов		= Новый Соответствие; // rarus vikhle 21.12.2021 m 18269
	
    НомераСтандартныхСпецификаций = НомераСтандартныхСпецификаций(МассивПродуктов); //rarus vikhle 22.09.2021 mt 18298
	
	НаличиеЗаписейВОчередиDD2DDSИнформера = РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ПолучитьНаличиеЗаписейПоЗаказам(ЗаказыМассив);
	//rarus vikhle 31.08.2021 mt 17933 ---
	СтандартныеУсловияУстановлены = Ложь; //rarus vikhle 28.09.2021 mt 18286
	
	// rarus vikhle 21.12.2021 m 18269 +++
	Если Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_Изделия.Ссылка КАК Продукт,
		               |	Scan_Изделия.СтандартнаяСпецификация.ПлановаяСебестоимостьСНДС КАК ПлановаяСебестоимостьСНДС
		               |ИЗ
		               |	Справочник.Scan_Изделия КАК Scan_Изделия
		               |ГДЕ
		               |	Scan_Изделия.Ссылка В(&Продукты)";
		Запрос.УстановитьПараметр("Продукты", МассивПродуктов);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СебестоимостьПродуктов.Вставить(Выборка.Продукт, Выборка.ПлановаяСебестоимостьСНДС);	
		КонецЦикла;	
		
   	КонецЕсли;
	// rarus vikhle 21.12.2021 m 18269 ---
	
	Для Каждого СтрокаПродукта Из ТаблицаПодбора Цикл   		
		Поиск = Новый Структура("Продукт", СтрокаПродукта.Продукт);	
	    //rarus vikhle 10.08.2020 mt 16181 +++
		МассивСтрок = СписокПродуктов.НайтиСтроки(Поиск);//rarus vikhle 10.08.2020 mt 16181
		Если МассивСтрок.Количество() = 0 Тогда
			
			//rarus vikhle 22.09.2021 mt 18298 +++
			Если СписокПродуктов.Количество() = 0 Тогда
				ДобавленыПродуктыВПустуюЗаявку = Истина;	
			КонецЕсли;	
			//rarus vikhle 22.09.2021 mt 18298 ---
			
			НоваяСтрока = СписокПродуктов.Добавить();//rarus vikhle 10.08.2020 mt 16181         		
			НоваяСтрока.Продукт = СтрокаПродукта.Продукт;
			НоваяСтрока.Количество = 1;
			//rarus vikhle 20.01.2021 mt 16981 +++
			НоваяСтрока.СкладОтгрузки		= ПриоритетныйСклад;
			НоваяСтрока.ПриоритетныйСклад	= НЕ НоваяСтрока.СкладОтгрузки.Пустая(); 
							
			//rarus vikhle 04.02.2021 mt 16981 +++
			Если НЕ НоваяСтрока.Продукт.ЗапретИзмененияСкладаПродажи Тогда
				НоваяСтрока.СкладПродажи  = ПриоритетныйСклад;
			Иначе
				НоваяСтрока.СкладПродажи = НоваяСтрока.Продукт.СкладПродажи;	
			КонецЕсли;	
			
			//Если НоваяСтрока.Продукт.СкладПродажи.Пустая() Тогда 
			//	НоваяСтрока.СкладПродажи  = ПриоритетныйСклад;
			//Иначе
			//	НоваяСтрока.СкладПродажи = НоваяСтрока.Продукт.СкладПродажи;	
			//КонецЕсли;	
			//rarus vikhle 04.02.2021 mt 16981
			
			Если НоваяСтрока.Продукт.МестоПередачи.Пустая() Тогда 
				НоваяСтрока.МестоПередачи  = ПриоритетныйСклад;	
			Иначе
				НоваяСтрока.МестоПередачи = НоваяСтрока.Продукт.МестоПередачи;	
			КонецЕсли;
			
			//rarus vikhle 11.08.2020 mt 16526 +++
			//Если Элементы.СписокПродуктовСкладОтгрузки.Видимость Тогда
			//	НоваяСтрока.СкладОтгрузки = Объект.Дилер.ПриоритетныйСклад;
			//	НоваяСтрока.ПриоритетныйСклад = НЕ НоваяСтрока.СкладОтгрузки.Пустая();
			//КонецЕсли;	
			//rarus vikhle 11.08.2020 mt 16526 ---
			//rarus vikhle 20.01.2021 mt 16981 ---
			НоваяСтрока.Модель = СтрокаПродукта.Продукт.МодельПродукта;
			НоваяСтрока.НомерПродукта = СтрокаПродукта.Продукт.НомерИзделия;
			НоваяСтрока.СпецификацияПродукта = СтрокаПродукта.Продукт.СпецификацияПродукта;
			//rarus vikhle 31.08.2021 mt 17933 +++
			//ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(СтрокаПродукта.Продукт);
			ЗаказНаЗавод = ЗаказыСоответствие[НоваяСтрока.Продукт];
			//rarus vikhle 31.08.2021 mt 17933 ---
			НоваяСтрока.ЗаказНаЗавод = ЗаказНаЗавод;
			НоваяСтрока.ТипЗаказа = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод);//rarus vikhle 14.10.2020 mt 16181
			//rarus vikhle 17.12.2020 mt 16977 +++ из формы подбора значения берутся
			//rarus vikhle 08.09.2020 mt 16181 +++
			//НоваяСтрока.DD = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(НоваяСтрока.ЗаказНаЗавод, "DD");
			//НоваяСтрока.DD2 = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(НоваяСтрока.ЗаказНаЗавод, "DD2");
			НоваяСтрока.DD = СтрокаПродукта.DD; 
			НоваяСтрока.DD2 = СтрокаПродукта.DD2; 
			НоваяСтрока.DDЗапрошенная = ?(ЗначениеЗаполнено(НоваяСтрока.DD2),НоваяСтрока.DD2,НоваяСтрока.DD);//rarus vikhle 15.09.2020 mt 16181
			НоваяСтрока.ДатаПродажиДилеру = СтрокаПродукта.ДатаПродажиДилеру;
			//rarus vikhle 08.09.2020 mt 16181 ---
			//rarus vikhle 17.12.2020 mt 16977 ---
			НоваяСтрока.ДатаПродажиКлиенту = СтрокаПродукта.ДатаПродажиКлиенту; //rarus vikhle 10.03.2021 mt 17324
			//НоваяСтрока.ДокументУстановкиПлановыхЦен = СтрокаПродукта.Продукт.ДокументУстановкиПлановыхЦенПродукта;
			НоваяСтрока.ДокументУстановкиПлановыхЦен = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьДокументУстановкиЦенПоПродукту(СтрокаПродукта.Продукт, Объект.Ссылка, Истина); //rarus vikhle 12.10.2021 m 18292
			//rarus vikhle 10.08.2020 mt 16181 ---
			НоваяСтрока.ВходитВОчередьDD2DDSИнформера = НаличиеЗаписейВОчередиDD2DDSИнформера[ЗаказНаЗавод];
			
			//rarus vikhle 22.09.2021 mt 18298 +++
			НоваяСтрока.УникальностьСпецификации = СтрокаПродукта.Продукт.ТипСпецификации;
			НоваяСтрока.НомерСпецификации		 = НомераСтандартныхСпецификаций[СтрокаПродукта.Продукт];
			//rarus vikhle 22.09.2021 mt 18298 ---
			
			//rarus vikhle 13.05.2021 mt 17733 +++
			Если Объект.ЗаявкаНаБУПродукты Тогда
				НоваяСтрока.ЦенаСНДС = СтрокаПродукта.СтоимостьПродажиБУ;
				НоваяСтрока.ЦенаБезНДС = 100 * НоваяСтрока.ЦенаСНДС / (100 + ЗначениеСтавкиНДС);
				ОбновитьИтоговуюСуммуПродукта(НоваяСтрока); //rarus vikhle 02.08.2021 mt 17637
			КонецЕсли;	
			//rarus vikhle 13.05.2021 mt 17733 ---	
			
			// rarus vihle 07.12.2021 m 18643 +++
			Если ДобавленыПродуктыВПустуюЗаявку Тогда
				Объект.УникальностьСпецификации = СписокПродуктов[0].Продукт.ТипСпецификации;
			КонецЕсли;	
			// rarus vihle 07.12.2021 m 18643 ---
			
			НоваяСтрока.Себестоимость = СебестоимостьПродуктов[НоваяСтрока.Продукт]; // rarus vikhle 21.12.2021 m 18269
			
			//rarus vikhle 27.09.2021 mt 18286 +++
			Если УстановитьСтандартныеУсловия И НЕ СтандартныеУсловияУстановлены Тогда
				ЗаполнитьСтандартныеУсловияОплаты(Истина);	
				ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
				СтандартныеУсловияУстановлены = Истина;
			КонецЕсли;	
			//rarus vikhle 27.09.2021 mt 18286 ---
			
			ДобавитьУсловияОплаты(НоваяСтрока.ПолучитьИдентификатор());//rarus vikhle 02.08.2021 mt 17637
						
		Иначе
			ВывестиСообщениеПол(Нстр("ru = 'Продукт %1 уже добавлен список продуктов.'"),ЭтотОбъект,,,,СтрокаПродукта.Продукт);
		КонецЕсли;
	КонецЦикла;
	Объект.Количество = СписокПродуктов.Итог("Количество");//rarus vikhle 10.08.2020 mt 16181	
	
	ПродуктыЗаявки = РеквизитФормыВЗначение("СписокПродуктов").ВыгрузитьКолонку("Продукт");//rarus vikhle 20.02.2021 mt 16181
			
	//rarus agar 03.08.2020 16055 ++
	ДатыИСтатусыОтгрузки = ПолучитьДатыИСтатусыОтгрузкиПродуктов(ПродуктыЗаявки);
	//rarus agar 03.08.2020 16055 --
	
	//rarus vikhle 02.08.2021 mt 17637 +++
	//rarus vikhle 14.05.2021 mt 17733 +++
	//Если Объект.ЗаявкаНаБУПродукты Тогда
	//	//ОбновитьУсловияОплаты(); //rarus vikhle 29.07.2021 mt 17637
	//Иначе
	//	//ОбновитьГрафикПлатежей();//rarus vikhle 18.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	//КонецЕсли;	
	//rarus vikhle 14.05.2021 mt 17733 ---
	//rarus vikhle 02.08.2021 mt 17637 ---
	
	Для Каждого СтрокаПродукта Из СписокПродуктов Цикл //rarus vikhle 10.08.2020 mt 16181 ---
		Если ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда //rarus vikhle 11.08.2020 mt 16181
			//rarus vikhle 17.12.2020 mt 16977 +++ закомментировал
			//ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(СтрокаПродукта.Продукт);
			
			//КлючеваяДатаВСтроку = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "БроньДилера");
			//СтрокаПродукта.ДатаБрони = КлючеваяДатаВСтроку;
			//rarus vikhle 17.12.2020 mt 16977 ---
			
			//rarus agar 03.08.2020 16055 ++
			НайденнаяСтрока = ДатыИСтатусыОтгрузки.Найти(СтрокаПродукта.Продукт, "Продукт");
			Если НайденнаяСтрока <> Неопределено Тогда
				//rarus vikhle 17.12.2020 mt 16977 +++
				//СтрокаПродукта.ДатаОтгрузки   = НайденнаяСтрока.ДатаОтгрузки;
				СтрокаПродукта.ДатаБрони   = НайденнаяСтрока.ДатаОтгрузки;
				//rarus vikhle 17.12.2020 mt 16977 ---
				СтрокаПродукта.СтатусОтгрузки = НайденнаяСтрока.СтатусОтгрузки;
			КонецЕсли;
			//rarus agar 03.08.2020 16055 --
		КонецЕсли;//rarus vikhle 10.08.2020 mt 16181 	
	КонецЦикла;
	
	//rarus vikhle 22.09.2021 m 18298 +++
	Если Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std")
		И ДобавленыПродуктыВПустуюЗаявку Тогда
		Объект.СтандартнаяСпецификация = СписокПродуктов[0].Продукт.СтандартнаяСпецификация;
	КонецЕсли;	
	//rarus vikhle 22.09.2021 m 18298 ---
	
	//rarus vikhle 09.09.2020 mt 16181 +++
	Если НЕ Модифицированность Тогда
		Модифицированность = СписокПродуктов.Количество() <> 0;  	
	КонецЕсли;
	Если СписокПродуктов.Количество() > 0 Тогда
		Объект.ТребуетсяРазмещениеЗаказа = Ложь;
		УправлениеПолямиЗаявкиИзНаличия();//rarus vikhle 17.11.2020 mt 16181
		Элементы.СписокПродуктов.ИзменятьСоставСтрок = Ложь;
		Элементы.СписокПродуктовDDЗапрошенная.ТолькоПросмотр = Истина;
	КонецЕсли;	
	//rarus vikhle 09.09.2020 mt 16181 ---
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЧат()
		
	//rarus vikhle 05.10.2021 mt 18076 +++
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Сообщения.Объект КАК Объект,
	//	|	Сообщения.Пользователь КАК Пользователь,
	//	|	Сообщения.ДоступноДилеру КАК ДоступноДилеру,
	//	|	Сообщения.ТекстСообщения КАК ТекстСообщения,
	//	|	Сообщения.Период КАК Период
	//	|ИЗ
	//	|	РегистрСведений.Scan_Сообщения КАК Сообщения
	//	|ГДЕ
	//	//rarus vikhle 12.01.2021 mt 17056 +++
	//	|	Сообщения.Объект В (&СвязанныеОбъекты)
	//	//rarus vikhle 12.01.2021 mt 17056 ---
	//	//rarus vikhle 10.08.2021 mt 17056 +++
	//	|	И НЕ Сообщения.Объект.ТипСоглашенияОПоставке = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU)
	//	//rarus vikhle 10.08.2021 mt 17056 ---
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Период убыв";
	//
	////rarus vikhle 12.01.2021 mt 17056 +++	
	////Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	//СвязанныеОбъекты = Scan_ВспомогательныеФункцииСервер.ПолучитьСтруктуруПодчиненности(Объект.Ссылка,Истина);
	//Запрос.УстановитьПараметр("СвязанныеОбъекты", СвязанныеОбъекты);
	////rarus vikhle 12.01.2021 mt 17056 ---
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	
	СтрокаHTML = "<HTML><BODY style=""background-color:#f0f0f0"">";
	
	ТЗСообщений = РегистрыСведений.Scan_Сообщения.СообщенияСвязанныхЗаявок(Объект.Ссылка);
	Для Каждого СтрокаТЗ Из ТЗСообщений Цикл
		//СтрокаHTML = Регистрысведений.Scan_Сообщения.ДобавитьСообщение(СтрокаHTML, ВыборкаДетальныеЗаписи.ТекстСообщения,ВыборкаДетальныеЗаписи.Пользователь,ВыборкаДетальныеЗаписи.Период);
		СтрокаHTML = Регистрысведений.Scan_Сообщения.ДобавитьСообщение(СтрокаHTML, СтрокаТЗ.ТекстСообщения,СтрокаТЗ.Пользователь,СтрокаТЗ.Период);
		//rarus vikhle 05.10.2021 mt 18076 ---
	КонецЦикла;
	
   	СтрокаHTML = СтрокаHTML + "</body></html>";
	ПолеHTML = СтрокаHTML;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеЧата(ВидХарактеристики, Параметры) экспорт
	ЗаполнитьЧат();
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентКомпанияНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;  	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		объект.КонечныйКлиентКомпания = ВыбранныйЭлемент.Значение;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЗаполнитьКомпании()
	КомпанииДляВыбора = Новый СписокЗначений;
	Запрос = Новый Запрос;
	//rarus agar 08.12.2020 16892 ++
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Период КАК Период,
	//|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания КАК Компания,
	//|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент КАК Контрагент,
	//|	Scan_ВзаимосвязьКомпанийСКонтрагентами.ВидВзаимодействия КАК ВидВзаимодействия,
	//|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Пользователь КАК Пользователь,
	//|	Scan_ВзаимосвязьКомпанийСКонтрагентами.ДокументИзмененияВ1БД КАК ДокументИзмененияВ1БД,
	//|	Scan_ВзаимосвязьКомпанийСКонтрагентами.РежимУстановкиВидаВзаимодействия КАК РежимУстановкиВидаВзаимодействия
	//|ИЗ
	//|	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	//|ГДЕ
	//|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент = &Контрагент";
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания КАК Компания
	|ИЗ
	|	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	|ГДЕ
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент = &Контрагент";
	//rarus agar 08.12.2020 16892 --
	Запрос.УстановитьПараметр("Контрагент", Объект.КонечныйКлиент);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаВыгрузки Из  Выгрузка Цикл
		КомпанииДляВыбора.Добавить(СтрокаВыгрузки.Компания,СтрокаВыгрузки.Компания);
	КонецЦикла;
	возврат КомпанииДляВыбора;
КонецФункции

//rarus agar 08.12.2020 16892 ++
&НаСервере
Функция ЗаполнитьКонтрагентов()
	
	КонтрагентыДляВыбора = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Компания", Объект.КонечныйКлиентКомпания);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент КАК Контрагент
	|ИЗ
	|	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	|ГДЕ
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания = &Компания";
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаВыгрузки Из  Выгрузка Цикл
		КонтрагентыДляВыбора.Добавить(СтрокаВыгрузки.Контрагент, СтрокаВыгрузки.Контрагент);
	КонецЦикла;
	
	Возврат КонтрагентыДляВыбора;
	
КонецФункции
//rarus agar 08.12.2020 16892 --

&НаКлиенте
Процедура ЗаблокироватьФормуОтИзменения();//rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	Если НЕ ЗаблокироватьФормуОтИзменения Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из Элементы Цикл
		Если (ТипЗнч(Элемент) = Тип("ГруппаФормы") И (Элемент.Вид = ВидГруппыФормы.Страницы ИЛИ Элемент.Вид = ВидГруппыФормы.Страница))
		ИЛИ ТипЗнч(Элемент) = Тип("ДекорацияФормы") ИЛИ Элемент = Элементы.ГруппаФон Тогда
			Продолжить;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Элемент.Имя, "Доступность", Ложь);
	КонецЦикла;
КонецПроцедуры

//rarus vikhle 19.06.2020 mt 15888 +++
&НаСервереБезКонтекста
Функция ЕстьСообщениеТекушегоПользователя(СсылкаНаЗаявку)
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_Сообщения.Объект КАК Объект,
	               |	Scan_Сообщения.Пользователь КАК Пользователь,
	               |	Scan_Сообщения.ТекстСообщения КАК ТекстСообщения
	               |ИЗ
	               |	РегистрСведений.Scan_Сообщения КАК Scan_Сообщения
	               |ГДЕ
	               |	Scan_Сообщения.Объект = &Объект
	               |	И Scan_Сообщения.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Объект",СсылкаНаЗаявку);
	Запрос.УстановитьПараметр("Пользователь",ТекущийПользователь);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат Не РезультатЗапроса.Пустой();
КонецФункции
//rarus vikhle 19.06.2020 mt 15888 ---

//rarus ozhnik 15888 23.06.2020 + 

&НаСервере
Функция ЗагрузитьКПНаСервере(НомерКПSPORTДляЗаказаНаЗавод = Неопределено)
	
	
	МассивСсылок = Новый Массив;//rarus vikhle 13.08.2020 mt 15888 изменения из расширения
	
	//вызов метода GetListOfQuotation
	ИмяМетода = "GetListOfQuotation";
	СообщениеОбОшибке = "";
	Отказ = Ложь;
	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода);
	СтруктураПараметров.ЛогинПорталаПользователя = Пользователи.ТекущийПользователь().ЛогинНаПортале;
	//СтруктураПараметров.QuotationNumber = ?(Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа <> неопределено, Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа, Объект.НомерКоммерческогоПредложенияSPORT);   //rarus ozhnik 15888 07.10.2020 + 
	СтруктураПараметров.QuotationNumber = Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа; // rarus vikhle 13.10.2020 mt 16181 	
	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
	ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
	Если НЕ Отказ Тогда
		МассивКП = Scan_ВебСервисыРазборОтветов.РазборОтветаСписокКПSPORT(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
	КонецЕсли;
	Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
		ВывестиСообщениеПол(СообщениеОбОшибке);
		возврат неопределено;
	КонецЕсли;
	// Либо Кп не найдено, либо КП найдено одно, либо КП найдено несколько
	
	//rarus agar 08.12.2020 16892 ++
	Если МассивКп = Неопределено Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Коммерческое предложение не найдено'; en = 'Quotation not found'"),ЭтаФорма,"НомерКПSPORT");
		Возврат Неопределено;
	КонецЕсли;
	//rarus agar 08.12.2020 16892 --
	
	Если МассивКп.Количество() = 0 Тогда
		//rarus agar 08.12.2020 16892 ++
		//ВывестиСообщениеПол("ru = 'Коммерческое предложение не найдено'; en = 'Quotation not found'",ЭтаФорма,"НомерКПSPORT");
		ВывестиСообщениеПол(Нстр("ru = 'Коммерческое предложение не найдено'; en = 'Quotation not found'"),ЭтаФорма,"НомерКПSPORT");
		//rarus agar 08.12.2020 16892 --
	//Rarus bonmak 28.12.2021 18713 ++
	//ИначеЕсли МассивКП.Количество() = 1 Тогда
	ИначеЕсли МассивКП.Количество() > 0 Тогда
		//Rarus bonmak 28.12.2021 18713 --
		// выполнить запрос детальной информации для единичного КП
		Для Каждого СтрМассивКП Из МассивКп Цикл //Rarus bonmak 28.12.2021 18713  добавил цикл
			ИмяМетода = "GetQuotation";
			СообщениеОбОшибке = "";
			Отказ = Ложь;
			СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода);
			СтруктураПараметров.GUID = СтрМассивКП.IDExternalSystem; //Rarus bonmak 28.12.2021 18713 было МассивКп[0].IDExternalSystem;
			ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
			ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
			Если НЕ Отказ Тогда
				//rarus vikhle 13.08.2020 mt 15888 изменения из расширения +++
				СсылкаНаКП = Scan_ВебСервисыРазборОтветов.РазборОтветаКПSPORT(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
				Если СсылкаНаКП <> Неопределено Тогда
					МассивСсылок.Добавить(СсылкаНаКП);
				КонецЕсли;
				//rarus vikhle 13.08.2020 mt 15888 изменения из расширения	
			КонецЕсли;
			Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
				ВывестиСообщениеПол(СообщениеОбОшибке);
			КонецЕсли; 		
		КонецЦикла;
	КонецЕсли; 
	
	Возврат МассивСсылок; //rarus vikhle 13.08.2020 mt 15888 изменения из расширения 
КонецФункции

&НаКлиенте
Процедура ОбработатьОжидание()
	//rarus vikhle 23.09.2020 mt 16181 +++
	МассивСсылок = ЗагрузитьКПНаСервере();
	Если  МассивСсылок <> Неопределено
		И ТипЗнч(МассивСсылок) = Тип("Массив")
		И МассивСсылок.Количество() <> 0 
		Тогда 	 	
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("МассивКП",МассивСсылок);
		ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе",Ложь);//rarus vikhle 09.03.2021 mt 17386
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораКП", ЭтотОбъект);
		ОткрытьФорму("Справочник.Scan_КоммерческиеПредложения.Форма.ФормаЗагрузки", //rarus vikhle 10.11.2021 m 18471 заменил имя формы
					ПараметрыОткрытия,
					ЭтаФорма,,,,
					ОписаниеОповещения);
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'Не было загружено коммерческое предложение по данном номеру КП.'"));
	КонецЕсли;
	//rarus vikhle 23.09.2020 mt 16181 ---
КонецПроцедуры	

&НаКлиенте  
Процедура ОбработкаВыбораКП(ВыбранноеЗначение, ИсточникВыбора) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		обработатьВыборКП(ВыбранноеЗначение);
		Модифицированность = Истина; //rarus vikhle 13.10.2020 mt 16181
		ВывестиСообщениеПол(Нстр("ru = 'Коммерческое предложение загружено.'")); //rarus vikhle 05.11.2020 mt 16723
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборКП(ВыбранноеЗначение)
	Если выбранноеЗначение <> неопределено Тогда
		СтруктураВыбора = ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
		Объект.КоммерческоеПредложениеSPORT = СтруктураВыбора.Ссылка;
		Объект.IDПродуктаКП = СтруктураВыбора.IDПродуктаКП;
		Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа = СтруктураВыбора.Ссылка.НомерКП;
		
		КПЗагружено = Не Объект.КоммерческоеПредложениеSPORT.Пустая(); //rarus agar 08.12.2020 16892 +-
		
		//rarus ozhnik 15888 30.06.2020 запросить спецификацию + 
		Если РезультатВыполнения <> Неопределено
			И ЗначениеЗаполнено(РезультатВыполнения.ИдентификаторЗадания) Тогда
			ДлительныеОперации.ОтменитьВыполнениеЗадания(РезультатВыполнения.ИдентификаторЗадания);
		КонецЕсли;
		
		ПараметрыДлительнойОперации = ПараметрыДлительнойОперации();
		
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
		ПараметрыВыполнения.ОжидатьЗавершение = 0; // запускать сразу
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'ЗагрузкаСпецификации'");
		
		РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне("Scan_ВебСервисы.ЗагрузкаСпецификацииSPORTФоновое",	ПараметрыДлительнойОперации, ПараметрыВыполнения);
		//rarus ozhnik 15888 30.06.2020 -
	    ПривязатьИзделия();
	КонецЕсли; 		
КонецПроцедуры

&НаСервере
Функция ПараметрыДлительнойОперации()
	
	ПараметрыДлительнойОперации = Новый Структура;
	ПараметрыДлительнойОперации.Вставить("КоммерческоеПредложениеSPORT",Объект.КоммерческоеПредложениеSPORT);
	ПараметрыДлительнойОперации.Вставить("IDПродуктаКП", Объект.IDПродуктаКП);
	ПараметрыДлительнойОперации.Вставить("ЛогинНаПортале",Пользователи.ТекущийПользователь().ЛогинНаПортале);
	ПараметрыДлительнойОперации.Вставить("ОбщаяСпецификация", НайтиСоздатьСпецификациюКП());
	ПараметрыДлительнойОперации.Вставить("ИсходныйОбъект", Объект.Ссылка); //rarus ozhnik 16453 14.09.2020 + 
	ЗаполнитьЗначенияСвойств(ПараметрыДлительнойОперации, ЭтотОбъект);
		
	Возврат ПараметрыДлительнойОперации;
	
КонецФункции
//rarus ozhnik 15888 23.06.2020 + 

&НаСервере
Процедура ПривязатьИзделия()
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_Изделия.Ссылка КАК Ссылка,
		|	естьNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)) КАК СоглашениеОПоставке
		|ИЗ
		|	Справочник.Scan_Изделия КАК Scan_Изделия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
		|		ПО (Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие = Scan_Изделия.Ссылка)
		|ГДЕ
		|	Scan_Изделия.IDПродуктаКП = &IDПродуктаКП
		|	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("IDПродуктаКП", Объект.IDПродуктаКП);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.СоглашениеОПоставке.Пустая() Тогда
			МенеджерЗаписи = РегистрыСведений.Scan_СоставСоглашенийОПоставке.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период = ТекущаяДатаСеанса();
			МенеджерЗаписи.Изделие = ВыборкаДетальныеЗаписи.Ссылка;
			МенеджерЗаписи.СоглашениеОПоставке = Объект.Ссылка;
			МенеджерЗаписи.Записать();

		КонецЕсли; 
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСпецификацииНаСервере()
	//вызов метода GetListOfQuotation
	ИмяМетода = "GetListOfSpecifications";
	СообщениеОбОшибке = "";
	Отказ = Ложь;
	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода);
	СтруктураПараметров.ЗапросИЗКП = "истина";
	СтруктураПараметров.ProductID = Объект.IDПродуктаКП;
	СтруктураПараметров.GUID = Объект.КоммерческоеПредложениеSPORT.IDExternalSystem;
	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
	ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
	
	ОбщаяСпецификация = НайтиСоздатьСпецификациюКП();
	Если Не ОбщаяСпецификация = Неопределено Тогда
		Если НЕ Отказ Тогда
			Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникВерсииСпецификацииПродуктов(ТекЭлементОтвет, Отказ, СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации, ИмяМетода, ОбщаяСпецификация);
		КонецЕсли;	
	КонецЕсли; 
	 
КонецПроцедуры

Функция НайтиСоздатьСпецификациюКП()
	
	СпецификацияСсылка = неопределено;
	Для каждого СтрокаПродукта Из Объект.КоммерческоеПредложениеSPORT.ПродуктыКП Цикл
		Если СтрокаПродукта.IDПродуктаКП = Объект.IDПродуктаКП Тогда
			Если ЗначениеЗаполнено(СтрокаПродукта.Спецификация) Тогда
				СпецификацияСсылка = СтрокаПродукта.Спецификация;
				//rarus bonmak 26.02.2021 17291 ++
				//В случае если продукт ранее был выбран для заявки Std и была создана спецификация (пустая), заявка отменилась
				//Потом этот продукт оказался в заявке UO/UUO, дозаполняем спецификацию данными
				Если НЕ ЗначениеЗаполнено(СпецификацияСсылка.НомерКПSPORT)
					ИЛИ НЕ ЗначениеЗаполнено(СпецификацияСсылка.ПродуктКП) Тогда
					СпецификацияОбъект = СпецификацияСсылка.ПолучитьОбъект();
					СпецификацияОбъект.МодельПродукта = Объект.Модель;
					СпецификацияОбъект.НомерКПSPORT = Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа;
					СпецификацияОбъект.ОписаниеПродукта = Объект.КоммерческоеПредложениеSPORT.Описание;
					СпецификацияОбъект.ПродуктКП = Объект.IDПродуктаКП;
					СпецификацияОбъект.Записать();
					
					СпецификацияСсылка = СпецификацияОбъект.Ссылка;
				КонецЕсли;
				//rarus bonmak 26.02.2021 17291 --
			Иначе
				СпецификацияОбъект = Справочники.Scan_СпецификацииПродуктов.СоздатьЭлемент();
				СпецификацияОбъект.Наименование = Объект.Код + " " + Объект.Модель;
				СпецификацияОбъект.МодельПродукта = Объект.Модель;
				СпецификацияОбъект.НомерКПSPORT = Объект.НомерКоммерческогоПредложенияSPORTДляЗаказа;
				СпецификацияОбъект.ОписаниеПродукта = Объект.КоммерческоеПредложениеSPORT.Описание;
				СпецификацияОбъект.ПродуктКП = Объект.IDПродуктаКП;
				СпецификацияОбъект.Записать();
				
				Попытка
					ОбъектКП = Объект.КоммерческоеПредложениеSPORT.ПолучитьОбъект();
					Для каждого СтрокаПродуктаОбъект Из ОбъектКП.ПродуктыКП Цикл;
						Если СтрокаПродуктаОбъект.IDПродуктаКП = Объект.IDПродуктаКП Тогда
							СтрокаПродуктаОбъект.Спецификация = СпецификацияОбъект.Ссылка;	
						КонецЕсли;
					КонецЦикла;
					ОбъектКП.Записать();
					СпецификацияСсылка = СпецификацияОбъект.Ссылка;
				Исключение
					//ОписаниеОшибки()
				КонецПопытки;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	
	возврат СпецификацияСсылка;
	
КонецФункции

//rarus vikhle 02.07.2020 mt 15888 +++
//&НаСервере
//Процедура ПроверитьСпециальныеУсловия(Отказ = Ложь)
	//rarus vikhle 12.08.2020 mt 16181	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	СписокПродуктов.Продукт КАК Продукт
	//               |ПОМЕСТИТЬ ТекущийСписокПродуктов
	//               |ИЗ
	//               |	&СписокПродуктов КАК СписокПродуктов
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Scan_СпециальныеУсловияСписокПродуктов.Продукт КАК Продукт
	//               |ПОМЕСТИТЬ СписокПродуктовСпецУсловия
	//               |ИЗ
	//               |	Справочник.Scan_СпециальныеУсловия.СписокПродуктов КАК Scan_СпециальныеУсловияСписокПродуктов
	//               |ГДЕ
	//               |	Scan_СпециальныеУсловияСписокПродуктов.Ссылка = &СпециальныеУсловия
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ТекущийСписокПродуктов.Продукт КАК Продукт
	//               |ИЗ
	//               |	ТекущийСписокПродуктов КАК ТекущийСписокПродуктов
	//               |ГДЕ
	//               |	НЕ ТекущийСписокПродуктов.Продукт В
	//               |				(ВЫБРАТЬ
	//               |					СписокПродуктовСпецУсловия.Продукт
	//               |				ИЗ
	//               |					СписокПродуктовСпецУсловия КАК СписокПродуктовСпецУсловия)";
	//ТаблицаПродуктов = РеквизитФормыВЗначение("СписокПродуктов",Тип("ТаблицаЗначений")); 
	//Запрос.УстановитьПараметр("СписокПродуктов",ТаблицаПродуктов);
	//Запрос.УстановитьПараметр("СпециальныеУсловия",Объект.СпециальныеУсловия);
	//Результат = Запрос.Выполнить();
	//Если НЕ Результат.Пустой() Тогда
	//	Отказ = Истина;
	//	Объект.СпециальныеУсловия = Справочники.Scan_СпециальныеУсловия.ПустаяСсылка();
	//	Выборка = Результат.Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		ВывестиСообщениеПол("Продукт %1 не входит в специальные условия.",
	//							ЭтаФорма,,,,Выборка.Продукт);	
	//	КонецЦикла;	
	//КонецЕсли;
	//rarus vikhle 12.08.2020 mt 16181
//КонецПроцедуры

//rarus vikhle 02.07.2020 mt 15888 ---

//rarus agar 03.08.2020 16055 ++
Функция ПолучитьДатыИСтатусыОтгрузкиПродуктов(ПродуктыЗаявки)
	
	ДатыИСтатусыОтгрузки = Новый ТаблицаЗначений;
	
	Если СписокПродуктов.Количество() > 0 Тогда  //rarus vikhle 10.08.2020 mt 16181 ---
		//СписокПродуктовТЗ = ДанныеФормыВЗначение(СписокПродуктов, Тип("ТаблицаЗначений"));
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СоглашениеОПоставке", Объект.Ссылка);
		//Запрос.УстановитьПараметр("Продукты",            СписокПродуктовТЗ.ВыгрузитьКолонку("Продукт")); //rarus vikhle 10.08.2020 mt 16181 ---
		Запрос.УстановитьПараметр("Продукты",ПродуктыЗаявки); //rarus vikhle 20.02.2021
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.ДатаОтгрузки КАК ДатаОтгрузки,
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус КАК СтатусОтгрузки,
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт КАК Продукт
		|ИЗ
		|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
		|ГДЕ
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.СоглашениеОПоставке = &СоглашениеОПоставке
		|	И Scan_ЗаявкаНаОтгрузкуПродукты.Продукт В(&Продукты)
		//rarus agar 26.01.2021 16981 ++
		|	И Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена)
		|	И Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отказ)";
		//rarus agar 26.01.2021 16981 --
		РезультатЗапроса = Запрос.Выполнить();
		ДатыИСтатусыОтгрузки = РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
	Возврат ДатыИСтатусыОтгрузки;
	
КонецФункции
//rarus agar 03.08.2020 16055 --

// rarus agar 23.06.2021 17892 ++
Функция ПолучитьКузовостроителейЗаказов(ЗаказыНаЗаводПродуктов)
	
	КузовостроителиЗаказов = Новый Соответствие;
	
	Если ЗаказыНаЗаводПродуктов.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("П1", ЗаказыНаЗаводПродуктов);
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка КАК ЗаказНаЗавод,
		|	МАКСИМУМ(Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку.Дата) КАК ЗаказНаЗакупкуДата
		|ПОМЕСТИТЬ ВТ_МаксимальныеДаты
		|ИЗ
		|	Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
		|ГДЕ
		|	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка В(&П1)
		|	И НЕ Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МаксимальныеДаты.ЗаказНаЗавод КАК ЗаказНаЗавод,
		|	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Кузовщик КАК Кузовщик
		|ИЗ
		|	ВТ_МаксимальныеДаты КАК ВТ_МаксимальныеДаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
		|		ПО ВТ_МаксимальныеДаты.ЗаказНаЗавод = Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка
		|			И ВТ_МаксимальныеДаты.ЗаказНаЗакупкуДата = Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку.Дата
		|			И (НЕ Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку.ПометкаУдаления)";
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				КузовостроителиЗаказов.Вставить(Выборка.ЗаказНаЗавод, Выборка.Кузовщик);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат КузовостроителиЗаказов;
	
КонецФункции
// rarus agar 23.06.2021 17892 --

//rarus vikhle 04.08.2020 mt 16181 +++

&НаКлиенте
Процедура РассчитатьЦенуБезНДС(ТекущиеДанные = Неопределено, ДляВсех = Ложь)
	//rarus vikhle 08.09.2020 mt 16181 +++
	ПроцентСтавкиНДС = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтавкаНДС,"Ставка"); 
	Если ПроцентСтавкиНДС = Неопределено Тогда
		Объект.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.БезНДС"); 
	КонецЕсли;
	
	Если ДляВсех Тогда 
		Для Каждого СтрокаСписка Из СписокПродуктов Цикл
			Если НЕ ПроцентСтавкиНДС = Неопределено Тогда
				СтрокаСписка.ЦенаБезНДС = 100 * СтрокаСписка.ЦенаСНДС/ (100 + ПроцентСтавкиНДС);
			Иначе
				СтрокаСписка.ЦенаБезНДС = СтрокаСписка.ЦенаСНДС;		
			КонецЕсли;		
		КонецЦикла;
	Иначе
		Если ТекущиеДанные = Неопределено Тогда
			ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
		КонецЕсли;	
		Если НЕ ПроцентСтавкиНДС = Неопределено Тогда
			ТекущиеДанные.ЦенаБезНДС = 100 * ТекущиеДанные.ЦенаСНДС/ (100 + ПроцентСтавкиНДС);
		Иначе
			ТекущиеДанные.ЦенаБезНДС = ТекущиеДанные.ЦенаСНДС;		
		КонецЕсли;	
	КонецЕсли;			
	//rarus vikhle 08.09.2020 mt 16181
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТипаКорректировки(ПараметрыФормы, ДопПараметры) Экспорт
	Если НЕ ПараметрыФормы = Неопределено Тогда
		// rarus kabany 13.07.2021 17992 ++
		// Если параметр изменить условия договора 
		Если ПараметрыФормы.ИзменитьУсловияДоговора
			И НЕ ПараметрыФормы.Состав 
			И НЕ ПараметрыФормы.Цены 
			И НЕ ПараметрыФормы.Условия 
			И НЕ ПараметрыФормы.Сроки 
			И НЕ ПараметрыФормы.ОбщиеДанныеЗаявки 
			И НЕ ПараметрыФормы.РазделениеЗаявки //rarus vikhle 29.09.2021 mt 18076
			Тогда
			
			НовоеСоглашениеОПоставке = СоздатьНовуюВерсиюЗаявкиНаСОП(Объект.Ссылка);
			Если НЕ НовоеСоглашениеОПоставке.Пустая() Тогда 
			Закрыть();
			ПараметрыФормы = Новый Структура("Ключ",НовоеСоглашениеОПоставке);
			ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",
			ПараметрыФормы,ВладелецФормы);
			ОповеститьПользователяОбУспешномВыполнении();
			КонецЕсли;
		// rarus kabany 13.07.2021 17992 ---	
		Иначе
			АдресВременногоХранилища = ПоместитьТаблицыВХранилище(ПараметрыФормы);
			ПараметрыФормы.Вставить("АдресВременногоХранилища",АдресВременногоХранилища);
			//rarus vikhle 03.09.2020 mt 16181 +++
			ПараметрыФормы.Вставить("Ссылка",Объект.Ссылка);
			ПараметрыФормы.Вставить("РольИсполнителя",РольИсполнителя);
			//rarus vikhle 03.09.2020 mt 16181 ---
			ПараметрыФормы.Вставить("ОбщаяСуммаСоглашения",ОбщаяСуммаСоглашения);//rarus vikhle 11.06.2021 mt 17637 переименовал
			ПараметрыФормы.Вставить("УсловияОплатыСтандартные", УсловияОплатыСтандартные); //rarus vikhle 17.09.2021 mt 18288
			ОткрытьФорму("Обработка.Scan_ИзменениеСоставаЦенУсловийОплаты.Форма",
						ПараметрыФормы,
						ЭтаФорма,,,,, 
						РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтатусДоЗапросаИзменений(Ссылка)
	
	Возврат Справочники.Scan_СоглашенияОПоставке.ПолучитьСтатусДоЗапросаИзменений(Ссылка); //rarus vikhle 28.02.2021 mt 17186
	
	//rarus vikhle 28.02.2021 mt 17186 +++ Перенес в модуль менеджера
	//rarus vikhle 11.01.2021 mt 17055 +++
	//Получим список родительских заявок из структуры подчиненности + текущая заявка
	//СписокЗаявок = Scan_ВспомогательныеФункцииСервер.ПолучитьРодительскиеОбъекты(Ссылка,,Истина);
	//	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	//               |	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.Статус КАК Статус,
	//               |	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.Период КАК Период
	//               |ИЗ
	//               |	РегистрСведений.Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий КАК Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних
	//               |ГДЕ
	//               |	НЕ Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.Статус В (&Статусы)
	//               |	И Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.ОбъектСтатуса В(&СписокЗаявок)
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	Период УБЫВ";
	//rarus vikhle 11.01.2021 mt 17055 ---
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Справочник.Scan_СоглашенияОПоставке) КАК Заявка
	//               |ПОМЕСТИТЬ СвязанныеЗаявки
	//               |ИЗ
	//               |	КритерийОтбора.СвязанныеДокументы(&ТекущийОбъект) КАК СвязанныеДокументы
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий.ОбъектСтатуса КАК ОбъектСтатуса,
	//               |	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий.Период КАК Период,
	//               |	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий.Статус КАК Статус
	//               |ИЗ
	//               |	РегистрСведений.Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий КАК Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий
	//               |ГДЕ
	//               |	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий.ОбъектСтатуса В
	//               |			(ВЫБРАТЬ
	//               |				СвязанныеЗаявки.Заявка
	//               |			ИЗ
	//               |				СвязанныеЗаявки КАК СвязанныеЗаявки)";
	//rarus vikhle 07.09.2020 mt 16181 +++
	//Статусы = Новый Массив;
	//Статусы.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	//Статусы.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП);
	//Запрос.УстановитьПараметр("Статусы",Статусы);
	////rarus vikhle 07.09.2020 mt 16181 ---
	////Запрос.УстановитьПараметр("ТекущийОбъект", Ссылка); ////rarus vikhle 11.01.2021 mt 17055
	//Запрос.УстановитьПараметр("СписокЗаявок", СписокЗаявок); ////rarus vikhle 11.01.2021 mt 17055
	//Выборка = Запрос.Выполнить().Выбрать();
	//Выборка.Следующий();
	//Возврат Выборка.Статус;
	//rarus vikhle 28.02.2021 mt 17186 ---
КонецФункции

&НаКлиенте
Процедура ПослеЗаполненияДат(Результат, ДопПараметры) Экспорт
	Если НЕ Результат = Неопределено Тогда
		Для Каждого СтрокаСписка Из СписокПродуктов Цикл
			Если СтрокаСписка.Флаг Тогда
				Если Результат.ВидДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.DD") Тогда
					Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
						СтрокаСписка.DDЗапрошенная = Результат.ЗначениеДаты; //rarus vikhle 08.09.2020 mt 16181
					Иначе
						ВывестиСообщениеПол(Нстр("ru = 'Заполнение запрошенной даты DD доступно только для драфтов продуктов (с размещением в производство).'"));//rarus vikhle 03.12.2020 mt 16892	
					КонецЕсли;
				Иначе
					СтрокаСписка.DDS = Результат.ЗначениеДаты;	
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		//rarus vikhle 29.12.2020 mt 17026 +++
		//Если Элементы.ГрафикПлатежей.Видимость Тогда
		ОбновитьГрафикПлатежей();
		//КонецЕсли;	
		//rarus vikhle 29.12.2020 mt 17026 ---
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаполненияЦен(Результат, ДопПараметры) Экспорт
	//rarus vikhle 08.09.2020 mt 16181 +++
	Если НЕ Результат = Неопределено Тогда
		//БылиИзмененыПродукты = Ложь; //rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
		МассивИДСтрокПродуктов = Новый Массив;//rarus vikhle 29.07.2021 mt 17637
		
		ПараметрыОтбора = Новый Структура("Флаг",Истина);
		ВыделенныеСтроки = СписокПродуктов.НайтиСтроки(ПараметрыОтбора);
		Если НЕ ВыделенныеСтроки.Количество() = 0 Тогда
		    Для Каждого СтрокаСписка Из ВыделенныеСтроки Цикл
				Если СтрокаСписка.Флаг Тогда 
					СтрокаСписка.ЦенаСНДС = Результат.Цена;
					РассчитатьЦенуБезНДС(СтрокаСписка);
					//rarus vikhle 29.07.2021 17637 +++ Раскомментировал
					//rarus vikhle 15.06.2021 mt 17637 +++
					Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
						//rarus vikhle 29.07.2021 mt 17637 +++
						//БылиИзмененыПродукты = Истина;
						МассивИДСтрокПродуктов.Добавить(СтрокаСписка.ПолучитьИдентификатор());
						//rarus vikhle 29.07.2021 mt 17637 ---
					Иначе
						ОбновитьИтоговуюСуммуДрафта(СтрокаСписка); //rarus vikhle 04.08.2021 mt 17637 + параметр
					КонецЕсли;	
					//rarus vikhle 15.06.2021 mt 17637 ---
					//rarus vikhle 29.07.2021 17637 ---
				КонецЕсли;	
			КонецЦикла;
			//Если БылиИзмененыПродукты Тогда //rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
			//	ОбновитьУсловияОплаты(); //rarus vikhle 02.10.2020 mt 16181
			//КонецЕсли;	
			
			//rarus vikhle 29.07.2021 mt 17637 +++
			Если МассивИДСтрокПродуктов.Количество() > 0 Тогда
				ОбновитьУсловияОплатыПоПродуктам(МассивИДСтрокПродуктов);
			КонецЕсли;
			//rarus vikhle 29.07.2021 mt 17637 ---
			
			Модифицированность = Истина;
		КонецЕсли;	
	КонецЕсли;
	//rarus vikhle 08.09.2020 mt 16181 ---
КонецПроцедуры

&НаСервере
Функция ПоместитьТаблицыВХранилище(ВидыКорректировки)
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ТаблицаУсловия",Объект.УсловияОплаты.Выгрузить());	
	СтруктураТаблиц.Вставить("ТаблицаСостав",СписокПродуктов.Выгрузить(,));//rarus vikhle 11.09.2020 m 16526  
	СтруктураТаблиц.Вставить("ТаблицаГрафикПлатежей",Объект.ГрафикПлатежей.Выгрузить()); //rarus vikhle 29.12.2020 mt 17026
	СтруктураТаблиц.Вставить("ТаблицаСгруппированныеУсловияОплаты", РеквизитФормыВЗначение("СгруппированныеУсловияОплаты")); //rarus vikhle 04.08.2021 mt 17637
	СтруктураТаблиц.Вставить("ТаблицаСтандартныеУсловияОплаты", РеквизитФормыВЗначение("СтандартныеУсловияОплаты")); //rarus vikhle 17.09.2021 mt 18288
	Возврат ПоместитьВоВременноеХранилище(СтруктураТаблиц,УникальныйИдентификатор);	
КонецФункции	

//rarus vikhle 03.09.2020 mt 16181 +++
&НаСервере
Функция СоглашениеСодержитДрафты()
	Возврат Справочники.Scan_СоглашенияОПоставке.СоглашениеСодержитДрафты(СписокПродуктов);
КонецФункции	
//rarus vikhle 03.09.2020 mt 16181 ---

//rarus agar 10.12.2020 16930 ++
&НаКлиенте
Функция НомераПродуктовПустыхDDS()
	
	НомераПродуктовПустыхDDS = Новый Массив;
	
	Для Каждого СтрокаПродукта Из СписокПродуктов Цикл
		Если Не ЗначениеЗаполнено(СтрокаПродукта.DDS) Тогда
			НомераПродуктовПустыхDDS.Добавить(СтрокаПродукта.НомерПродукта);
		КонецЕсли;
	КонецЦикла;
	
	Возврат НомераПродуктовПустыхDDS;
	
КонецФункции
//rarus agar 10.12.2020 16930 --

&НаКлиенте
Процедура ПослеЗакрытияОбработкиИзменения(Результат, ДопПараметры) Экспорт
	//rarus vikhle 27.08.2020 mt 16181 +++
	//Прочитать();
	//УправлениеДиалогомНаСервере();
	//rarus vikhle 27.08.2020 mt 16181 ---
КонецПроцедуры

&НаКлиенте
Процедура УсловияОплатыДатаНачалаОтсчетаАвансаПриИзменении(Элемент)
	//РассчитатьКрайнююДатуОплаты(); //rarus vikhle 06.10.2020 mt 16181
КонецПроцедуры

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыСрокОплатыАвансаПриИзменении(Элемент)
//	 //rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора") Тогда
//		РассчитатьКрайнююДатуОплаты();
//	КонецЕсли;	
//	 //rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 06.08.2021 АПК/17637 +++ закомментировал
//&НаКлиенте
//Процедура РассчитатьКрайнююДатуОплаты()
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	Если НЕ Объект.Договор.Пустая() Тогда
//		//ДатаНачалаДоговора = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор,"ДатаНачала");
//		// rarus tenkam 08.04.2021 mantis 17523 +++
//		//ДатаНачалаДоговора = ПолучитьДатуНачалаПервогоДоговора(Объект.Договор); //rarus vikhle 09.10.2020 mt 16181
//		ДатаНачалаДоговора = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор,"ДатаНачала");
//		// rarus tenkam 08.04.2021 mantis 17523 ---
//		Если ЗначениеЗаполнено(ДатаНачалаДоговора) Тогда
//			//ТекущиеДанные.КрайняяДатаОплаты = ТекущиеДанные.ДатаНачалаОтсчетаАванса + ТекущиеДанные.СрокОплатыАванса * 60*60*24;		
//			// rarus tenkam 08.04.2021 mantis 17523 +++
//			//ТекущиеДанные.КрайняяДатаОплаты = ДатаНачалаДоговора + ТекущиеДанные.СрокОплатыАванса * 60*60*24; //rarus vikhle 01.10.2020 mt 16181	
//			ТекущиеДанные.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора,ТекущиеДанные.СрокОплатыАванса); 	
//			// rarus tenkam 08.04.2021 mantis 17523 ---			
//		Иначе
//	 		ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1);
//		КонецЕсли;	
//	КонецЕсли;	
//	//rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 06.08.2021 АПК/17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
//	Если НоваяСтрока Тогда
//		Элемент.ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата");
//		//rarus vikhle 08.09.2020 mt 16181 +++
//		Элемент.ТекущиеДанные.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора"); //rarus vikhle 01.10.2020 mt 16181
//		Если НЕ Объект.Договор.Пустая() Тогда
//			//Элемент.ТекущиеДанные.ДатаНачалаОтсчетаАванса	= Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор,"ДатаНачала");
//			// rarus tenkam 08.04.2021 mantis 17523 +++
//			//ДатаНачалаДоговора 								= ПолучитьДатуНачалаПервогоДоговора(Объект.Договор);//rarus vikhle 09.10.2020 mt 16181
//			ДатаНачалаДоговора = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор,"ДатаНачала");
//			// rarus tenkam 08.04.2021 mantis 17523 ---
//			Элемент.ТекущиеДанные.КрайняяДатаОплаты	= ДатаНачалаДоговора;
//		КонецЕсли;
//		//rarus vikhle 08.09.2020 mt 16181 ---
//	КонецЕсли;
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus agar 02.02.2021 17117 ++
&НаСервереБезКонтекста
Функция МодельЗаявкиСовпадаетСоСпециальнымиУсловиями(СпециальныеУсловия, МодельПродукта)
	
	Если СпециальныеУсловия.СписокПродуктов.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СпециальныеУсловия", СпециальныеУсловия);
	//Запрос.УстановитьПараметр("МодельПродукта",     МодельПродукта);
	Запрос.УстановитьПараметр("МодельПродукта",     Лев(СокрЛП(МодельПродукта),10));
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СпециальныеУсловияСписокПродуктов.Продукт КАК Продукт
	|ИЗ
	|	Справочник.Scan_СпециальныеУсловия.СписокПродуктов КАК Scan_СпециальныеУсловияСписокПродуктов
	|ГДЕ
	|	Scan_СпециальныеУсловияСписокПродуктов.Ссылка = &СпециальныеУсловия
	//|	И Scan_СпециальныеУсловияСписокПродуктов.Продукт.МодельПродукта = &МодельПродукта";
	|	И ПодСтрока(Scan_СпециальныеУсловияСписокПродуктов.Продукт.МодельПродукта.Наименование,1,10) = &МодельПродукта";
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

&НаСервере
Функция ПримененияСпециальныхУсловийИсчерпаны(СпециальныеУсловия, ДляВсехПродуктов = Ложь) //rarus vikhle 03.08.2021 mt 17637 + "ДляВсехПродуктов"
	
	ПримененийВТекущейЗаявке = 0; //rarus vikhle 22.06.2021 mt 17637
	СтатусыЗаявок			 = Новый Массив;
	
	СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	
	//rarus vikhle 22.06.2021 mt 17637 +++
	
	//rarus vikhle 03.08.2021 mt 17637 +++
	Если ДляВсехПродуктов Тогда
		ПримененийВТекущейЗаявке = СписокПродуктов.Итог("Количество");	
	Иначе	
	//rarus vikhle 03.08.2021 mt 17637 ---	
		// Получим количество применений выбранных СУ в текущей заявке для ситуации, когда СУ применяются для отдельного продукта
		ПараметрыОтбора = Новый Структура("СпециальныеУсловия",СпециальныеУсловия);
		СтрокиСУ = СписокПродуктов.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаСУ Из СтрокиСУ Цикл
			ПримененийВТекущейЗаявке = ПримененийВТекущейЗаявке + СтрокаСУ.Количество;
		КонецЦикла;	
	//rarus vikhle 22.06.2021 mt 17637 ---
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтатусыЗаявок",      СтатусыЗаявок);
	Запрос.УстановитьПараметр("СпециальныеУсловия", СпециальныеУсловия);
	Запрос.УстановитьПараметр("ТекущаяЗаявка", 		Объект.Ссылка);//rarus vikhle 22.06.2021 mt 17637 Для текущей заявки подсчет отдельный с учетом незаписанных данных
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ИспользованиеСпециальныхУсловий.Ссылка КАК Заявка
	               |ПОМЕСТИТЬ Заявки
	               |ИЗ
	               |	КритерийОтбора.Scan_ИспользованиеСпециальныхУсловий(&СпециальныеУсловия) КАК Scan_ИспользованиеСпециальныхУсловий
	               |ГДЕ
	               |	НЕ Scan_ИспользованиеСпециальныхУсловий.Ссылка.Статус В (&СтатусыЗаявок)
	               |	И НЕ Scan_ИспользованиеСпециальныхУсловий.Ссылка = &ТекущаяЗаявка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(Scan_СоглашенияОПоставкеСписокПродуктов.Количество), 0) КАК КоличествоПрименений
	               |ИЗ
	               |	Заявки КАК Заявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	               |		ПО Заявки.Заявка = Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка
	               |ГДЕ
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.СпециальныеУсловия = &СпециальныеУсловия";
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(СпециальныеУсловия, "КоличествоПродуктов");
		ОбщееКоличествоПрименений = Выборка.КоличествоПрименений + ПримененийВТекущейЗаявке; //rarus vikhle 22.06.2021 mt 17637 
		//Если Выборка.КоличествоПрименений >= СтруктураРеквизитов.КоличествоПродуктов Тогда
		Если ОбщееКоличествоПрименений > СтруктураРеквизитов.КоличествоПродуктов Тогда //rarus vikhle 22.06.2021 mt 17637
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции
//rarus agar 02.02.2021 17117 --

//rarus vikhle 28.07.2021 17637 +++ Закомментировал
//rarus vikhle 09.06.2021 mt 17637 +++
//&НаСервере
//Функция ПроверитьСпециальныеУсловия(СУ)
//	//ИменаКолонок = "ПроцентОплаты,ДатаНачалаОтсчетаАванса,СрокОплатыАванса,КрайняяДатаОплаты,ВидОплаты";
//	ИменаКолонок = "ВидОплаты,ПроцентОплаты,СрокОплатыАванса,КрайняяДатаОплаты,Сумма,РасчетДатыОплаты"; //rarus vikhle 06.10.2020 mt 16181
//	Возврат ОбщегоНазначения.КоллекцииИдентичны(СУ.УсловияОплаты,Объект.УсловияОплаты,ИменаКолонок); 		
//КонецФункции	
//rarus vikhle 09.06.2021 mt 17637 ---
//rarus vikhle 28.07.2021 17637 ---

&НаСервере
Процедура СоздатьДокументУстановкиПлановыхЦен(СтрокаТаблицы)
	ТабРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(СтрокаТаблицы.Продукт);
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	// Установка Базовой цены
	СтрокаСоставляющей 				= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаДилера"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС 	= СтрокаТаблицы.ЦенаСНДС; //rarus vikhle 08.09.2020 mt 16181
	СтрокаСоставляющей.ЦенаБезНДС 	= СтрокаТаблицы.ЦенаБезНДС; //rarus vikhle 08.09.2020 mt 16181
	СтрокаСоставляющей.СтавкаНДС 	= Объект.СтавкаНДС;
	СтрокаСоставляющей.Пользователь = ТекущийПользователь;
	СтрокаСоставляющей.Источник 	= Объект.Ссылка; 
				
	// Установка СУ и цены для клиента
	Если ЗначениеЗаполнено(СтрокаТаблицы.СпециальныеУсловия) Тогда
		СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
		//СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.СпециальныеУсловия.ЦенаДляДилера;
		СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.СпециальныеУсловия.СпецDealerNet;//rarus vikhle 16.12.2020 mt 16181
		СтрокаСоставляющей.ЦенаБезНДС 		= СтрокаТаблицы.СпециальныеУсловия.ЦенаБезНДС;
		СтрокаСоставляющей.СтавкаНДС 		= СтрокаТаблицы.СпециальныеУсловия.СтавкаНДС;
		СтрокаСоставляющей.Пользователь		= ТекущийПользователь;
		СтрокаСоставляющей.Источник			= Объект.Ссылка;
		
		СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.СпециальныеУсловия.СпецCustomerPrice;//rarus vikhle 16.12.2020 mt 16181 заменил на согласованную
		СтрокаСоставляющей.ЦенаБезНДС		= СтрокаТаблицы.СпециальныеУсловия.ЦенаДляКлиентаБезНДС;//rarus vikhle 16.12.2020 mt 16181
		СтрокаСоставляющей.СтавкаНДС 		= СтрокаТаблицы.СпециальныеУсловия.СтавкаНДС;
		СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
		СтрокаСоставляющей.Источник 		= Объект.Ссылка;
	Иначе
		СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= 0;
		СтрокаСоставляющей.ЦенаБезНДС 		= 0;
		СтрокаСоставляющей.Пользователь		= ТекущийПользователь;
		СтрокаСоставляющей.Источник			= Объект.Ссылка;
		
		СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= 0;
		СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
		СтрокаСоставляющей.Источник 		= Объект.Ссылка;	
	КонецЕсли;
	
	// rarus tenkam 05.04.2021 mantis 17419 +++
	// Установка цены по валютной оговорке
	Если ЗначениеЗаполнено(СтрокаТаблицы.ЦенаПоВалютнойОговорке) Тогда
		СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаПоВалютнойОговорке"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.ЦенаПоВалютнойОговорке;
		СтрокаСоставляющей.СтавкаНДС 		= Объект.СтавкаНДС;
		СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
		СтрокаСоставляющей.Источник 		= Объект.Ссылка;
	//rarus vikhle 02.06.2021 17862 +++	
	Иначе
		СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаПоВалютнойОговорке"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= 0;
		СтрокаСоставляющей.СтавкаНДС 		= Объект.СтавкаНДС;
		СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
		СтрокаСоставляющей.Источник 		= Объект.Ссылка;	
	КонецЕсли;	
	//rarus vikhle 02.06.2021 17862 ---
	// rarus tenkam 05.04.2021 mantis 17419 ---
	
		// Установка % драйва
		СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ПроцентДрайва"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.ПроцентДрайв;
		СтрокаСоставляющей.ЦенаБезНДС 		= СтрокаТаблицы.ПроцентДрайв;	
		СтрокаСоставляющей.СтавкаНДС 		= Объект.СтавкаНДС;
		СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
		СтрокаСоставляющей.Источник 		= Объект.Ссылка;
			
				
		ДокументУстановкиЦен = Документы.Scan_УстановкаПлановыхЦенПродукта.СоздатьСкорректироватьДокументУстановкиЦен(СтрокаТаблицы.Продукт,ТабРучныхСоставляющих,Объект.Ссылка,СтрокаТаблицы.СпециальныеУсловия);	
		Если ДокументУстановкиЦен = Неопределено Тогда
			ВывестиСообщениеПол(НСтр("ru = 'Ошибка при создании документа установки плановых цен продукта %1: %2'"),,,,,
								СтрокаТаблицы.Продукт, ОписаниеОшибки());				
		Иначе
			ВывестиСообщениеПол(НСтр("ru = 'Успешно создан/скорректирован документ установки плановых цен для продукта %1.'"),,,,,
								СтрокаТаблицы.Продукт);						
		КонецЕсли;
		СтрокаТаблицы.ДокументУстановкиПлановыхЦен = СтрокаТаблицы.Продукт.ДокументУстановкиПлановыхЦенПродукта;	
КонецПроцедуры

//rarus vikhle 27.08.2020 mt 16181 +++

//rarus ozhnik 15888 27.08.2020 + 
&НаКлиенте
Процедура ВыборСпецификации(Результат,Параметры) Экспорт //rarus bonmak 15.04.2020 14456 ++
	//rarus vikhle 09.11.2020 mt 16723 +++
	//Если Результат <> Неопределено Тогда
	//	Объект.СтандартнаяСпецификация = Результат;
	//КонецЕсли;
	//rarus vikhle 09.11.2020 mt 16723 ---
КонецПроцедуры
//rarus ozhnik 15888 27.08.2020 -

&НаСервере
Функция ПолучитьРоль(НаименованиеРоли)
	//rarus vikhle 09.09.2020 mt 16181 +++
	Запрос = Новый Запрос;
	//rarus vikhle 28.12.2020 mt 17036 +++
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	РолиИсполнителей.Ссылка КАК Ссылка
	//               |ИЗ
	//               |	Справочник.РолиИсполнителей КАК РолиИсполнителей
	//               |ГДЕ
	//               |	РолиИсполнителей.Код = ""000000002""
	//               |	И РолиИсполнителей.Наименование = ""Сотрудник отдела клиентской поддержки""";
	Запрос.Текст = "ВЫБРАТЬ
	               |	РолиИсполнителей.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.РолиИсполнителей КАК РолиИсполнителей
	               |ГДЕ
	               |	РолиИсполнителей.Наименование = &НаименованиеРоли";
	Запрос.УстановитьПараметр("НаименованиеРоли",НаименованиеРоли);			   
	//rarus vikhle 28.12.2020 mt 17036 ---
	Выборка = Запрос.Выполнить().Выбрать();	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;	
	//rarus vikhle 09.09.2020 mt 16181 ---
КонецФункции	

//rarus ozhnik 16453 14.09.2020 + 
&НаСервере
Функция НайтиСпецификациюСоглашения()
	ЗаголовокНадписи = "";
	Для каждого СтрокаПродукта Из Объект.КоммерческоеПредложениеSPORT.ПродуктыКП Цикл
		Если СтрокаПродукта.IDПродуктаКП = Объект.IDПродуктаКП Тогда
			СпецификацияСоглашения = СтрокаПродукта.Спецификация;
			ЗаголовокНадписи = "Спецификация заявки"; //rarus vikhle 05.11.2020 mt 16723
		КонецЕсли; 	
	КонецЦикла;
	возврат заголовокНадписи;
КонецФункции
//rarus ozhnik 16453 14.09.2020 -

#Область ЗакомментированоПоУсловиямОплаты
//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыСуммаПриИзменении(Элемент)
//	//rarus vikhle 12.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.Сумма > ОбщаяСуммаСоглашения  Тогда
//		ТекущиеДанные.Сумма = 0;
//		ТекущиеДанные.ПроцентОплаты = 0;
//		ОбновитьСтрокуПостоплаты();
//		ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//	ИначеЕсли ТекущиеДанные.Сумма = 0 Тогда
//		ТекущиеДанные.ПроцентОплаты = 0;	
//	Иначе
//		Если НЕ ОбщаяСуммаСоглашения = 0 Тогда
//			ТекущиеДанные.ПроцентОплаты =  ТекущиеДанные.Сумма / ОбщаяСуммаСоглашения * 100;
//			//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//			//rarus vikhle 10.06.2021 mt 17637 +++
//			//ОбщийПроцент	 = 0;
//			//СтрокаПостоплаты = Неопределено;
//			//rarus vikhle 10.06.2021 mt 17637 ---
//			//rarus vikhle 06.07.2021 17637 ---
//			
//			//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//			//ПараметрыОтбора = Новый Структура;
//			////rarus vikhle 10.06.2021 mt 17637 +++
//			////ПараметрыОтбора.Вставить("ВидОплаты", ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
//			//ПараметрыОтбора.Вставить("Продукт", ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));
//			////rarus vikhle 10.06.2021 mt 17637 ---
//			//СтрокиБезПродукта = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//			//
//			//Для Каждого СтрокаТаблицы Из СтрокиБезПродукта Цикл
//			//	ОбщийПроцент = ОбщийПроцент + СтрокаТаблицы.ПроцентОплаты;
//			//	Если СтрокаТаблицы.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата") Тогда
//			//		СтрокаПостоплаты = СтрокаТаблицы;
//			//	КонецЕсли;	
//			//КонецЦикла;
//			//
//			//Если СтрокаПостоплаты = Неопределено Тогда
//			//	//ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты"); //rarus vikhle 10.06.2021 mt 17637
//			//	Если ОбщийПроцент  > 100 Тогда
//			//		ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//			//		ТекущиеДанные.ПроцентОплаты = 0;
//			//		ТекущиеДанные.Сумма = 0;
//			//	КонецЕсли;	
//			//Иначе
//			//	//ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты"); //rarus vikhle 10.06.2021 mt 17637
//			//	Если ОбщийПроцент > 100 Тогда
//			//		ДоляПредоплаты = СтрокаПостоплаты.ПроцентОплаты - (ОбщийПроцент - 100);
//			//		Если ДоляПредоплаты < 0 Тогда 
//			//			ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//			//			ТекущиеДанные.ПроцентОплаты = 0;
//			//			ТекущиеДанные.Сумма = 0;
//			//		КонецЕсли;	
//			//	КонецЕсли;	
//			//КонецЕсли;
//			//rarus vikhle 06.07.2021 17637 ---
//			
//			//rarus vikhle 06.07.2021 17637 +++ Откат, вернул как раньше
//			ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
//			СтрокаПредоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//			Если СтрокаПредоплаты.Количество() = 0 Тогда
//				ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты");
//				Если ОбщийПроцент  > 100 Тогда
//					ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//					ТекущиеДанные.ПроцентОплаты = 0;
//					ТекущиеДанные.Сумма = 0;
//				КонецЕсли;	
//			Иначе
//				ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты");
//				Если ОбщийПроцент > 100 Тогда
//					ДоляПредоплаты = СтрокаПредоплаты[0].ПроцентОплаты - (ОбщийПроцент - 100);
//					Если ДоляПредоплаты < 0 Тогда 
//						ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//						ТекущиеДанные.ПроцентОплаты = 0;
//						ТекущиеДанные.Сумма = 0;
//					КонецЕсли;	
//				КонецЕсли;	
//			КонецЕсли;
//			//rarus vikhle 06.07.2021 17637 ---
//					
//		КонецЕсли;	
//	КонецЕсли;	
//	
//	ОбновитьСтрокуПостоплаты();
//	//ОбновитьГрафикПлатежей(); //rarus vikhle 17.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//	
//	//Если Элементы.ГрафикПлатежей.Видимость Тогда //rarus vikhle 29.12.2020 mt 16181
//	//	ОбновитьГрафикПлатежей();
//	//КонецЕсли;
//	//
//	//rarus vikhle 12.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПроцентОплатыПриИзменении(Элемент)
//	//rarus vikhle 12.10.2020 mt 16181 +++
//	ТекущиеДанные		= Элементы.УсловияОплаты.ТекущиеДанные;
//	//rarus vikhle 06.07.2021 17637 +++
//	//rarus vikhle 09.06.2021 mt 17637 +++
//	//ОбщийПроцент		= 0;
//	//СтрокаПостоплаты	= Неопределено;
//	//rarus vikhle 09.06.2021 mt 17637 ---
//	//rarus vikhle 06.07.2021 17637 ---
//	
//	//rarus vikhle 06.07.2021 17637 Откат, закомментировал +++
//	////rarus vikhle 09.06.2021 mt 17637 +++
//	////ПараметрыОтбора.Вставить("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
//	//ПараметрыОтбора = Новый Структура("Продукт",ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));
//	////rarus vikhle 09.06.2021 mt 17637 ---
//	//СтрокиБезПродукта = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//	////rarus vikhle 09.06.2021 mt 17637 +++
//	////Расчет общего процента для строк без продукта и СУ
//	//Для Каждого СтрокаТаблицы Из СтрокиБезПродукта Цикл
//	//	ОбщийПроцент = ОбщийПроцент + СтрокаТаблицы.ПроцентОплаты;
//	//	Если СтрокаТаблицы.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата") Тогда
//	//		СтрокаПостоплаты = СтрокаТаблицы;
//	//	КонецЕсли;	
//	//КонецЦикла;	
//	//	
//	//Если СтрокаПостоплаты = Неопределено Тогда //rarus vikhle 09.06.2021 mt 17637
//	//	//ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты"); //rarus vikhle 09.06.2021 mt 17637
//	//	Если ОбщийПроцент > 100 Тогда
//	//		ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//	//		ТекущиеДанные.ПроцентОплаты = 0;
//	//		ТекущиеДанные.Сумма = 0;
//	//	КонецЕсли;	
//	//Иначе
//	//	//ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты"); //rarus vikhle 09.06.2021 mt 17637
//	//	Если ОбщийПроцент > 100 Тогда
//	//		//ДоляПредоплаты = СтрокиПостоплаты[0].ПроцентОплаты - (ОбщийПроцент - 100);
//	//		
//	//		// Проверка на превышение 100% после автоматической корректировки процента в строке постоплаты
//	//		ДоляПредоплаты = СтрокаПостоплаты.ПроцентОплаты - (ОбщийПроцент - 100); //rarus vikhle 09.06.2021 mt 17637
//	//		Если ДоляПредоплаты < 0 Тогда 
//	//			ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//	//			ТекущиеДанные.ПроцентОплаты = 0;
//	//			ТекущиеДанные.Сумма = 0;
//	//		КонецЕсли;	
//	//	КонецЕсли;	
//	//КонецЕсли;
//	
//	//rarus vikhle 09.06.2021 mt 17637 ---
//	//rarus vikhle 06.07.2021 17637 ---
//	
//	//rarus vikhle 06.07.2021 17637 +++ Добавил как раньше
//	ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
//	СтрокаПредоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//	Если СтрокаПредоплаты.Количество() = 0 Тогда
//		ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты");
//		Если ОбщийПроцент  > 100 Тогда
//			ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//			ТекущиеДанные.ПроцентОплаты = 0;
//			ТекущиеДанные.Сумма = 0;
//		КонецЕсли;	
//	Иначе
//		ОбщийПроцент = Объект.УсловияОплаты.Итог("ПроцентОплаты");
//		Если ОбщийПроцент > 100 Тогда
//			ДоляПредоплаты = СтрокаПредоплаты[0].ПроцентОплаты - (ОбщийПроцент - 100);
//			Если ДоляПредоплаты < 0 Тогда 
//				ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//				ТекущиеДанные.ПроцентОплаты = 0;
//				ТекущиеДанные.Сумма = 0;
//			КонецЕсли;	
//		КонецЕсли;	
//	КонецЕсли;
//	//rarus vikhle 06.07.2021 17637 ---
//		
//	Если НЕ ТекущиеДанные.ПроцентОплаты = 0 И НЕ ОбщаяСуммаСоглашения = 0 Тогда
//		ТекущиеДанные.Сумма = ТекущиеДанные.ПроцентОплаты / 100 * ОбщаяСуммаСоглашения;
//	Иначе
//		ТекущиеДанные.Сумма = 0;	
//	КонецЕсли;
//	ОбновитьСтрокуПостоплаты();
//	
//	//rarus vikhle 29.12.2020 mt 16181
//	//Если Элементы.ГрафикПлатежей.Видимость Тогда
//	//	ОбновитьГрафикПлатежей();
//	//КонецЕсли;
//	//rarus vikhle 12.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыРасчетДатыОплатыПриИзменении(Элемент)
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS")
//		ИЛИ ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS")
//		ИЛИ ТекущиеДанные.РасчетДатыОплаты.Пустая() Тогда
//		ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1);
//	ИначеЕсли ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1) Тогда
//		РассчитатьКрайнююДатуОплаты();
//	КонецЕсли;	
//	//rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//&НаКлиенте
//Процедура УсловияОплатыПриАктивизацииЯчейки(Элемент)
	//rarus vikhle 18.12.2020 mt 16181 +++ перенес в УО 
	//rarus vikhle 01.10.2020 mt 16181 +++
	//Если  Элемент.ТекущийЭлемент = Элементы.УсловияОплатыКрайняяДатаОплаты Тогда
	//	ТекущиеДанные = Элемент.ТекущиеДанные;
	//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS")
	//		ИЛИ ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS")
	//		ИЛИ ТекущиеДанные.РасчетДатыОплаты.Пустая() Тогда
	//		Элементы.УсловияОплатыКрайняяДатаОплаты.ТолькоПросмотр = Истина;
	//	Иначе
	//		Элементы.УсловияОплатыКрайняяДатаОплаты.ТолькоПросмотр = Ложь;	
	//	КонецЕсли;
	//КонецЕсли;	
	//rarus vikhle 01.10.2020 mt 16181 ---
	//rarus vikhle 18.12.2020 mt 16181 ---
//КонецПроцедуры

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыКрайняяДатаОплатыПриИзменении(Элемент)
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора") 
//		И НЕ Объект.Договор.Пустая() Тогда
//		// rarus tenkam 08.04.2021 mantis 17523 +++ дата начала текущего соглашения/доп. соглашения
//		//ДатаНачалаПервогоДоговора = ПолучитьДатуНачалаПервогоДоговора(Объект.Договор);
//		ДатаНачалаПервогоДоговора = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор,"ДатаНачала");
//		// rarus tenkam 08.04.2021 mantis 17523 ---
//		Если ЗначениеЗаполнено(ДатаНачалаПервогоДоговора) И ЗначениеЗаполнено(ТекущиеДанные.КрайняяДатаОплаты) 
//			И НачалоДня(ДатаНачалаПервогоДоговора) > НачалоДня(ТекущиеДанные.КрайняяДатаОплаты) Тогда
//			ОчиститьСообщения();
//			ВывестиСообщениеПол(Нстр("ru = 'Указанная дата меньше даты начала договора!'"));
//			ТекущиеДанные.СрокОплатыАванса = 0;
//		Иначе	
//			// rarus tenkam 07.04.2021 mantis 17523 +++
//			//ТекущиеДанные.СрокОплатыАванса = (НачалоДня(ТекущиеДанные.КрайняяДатаОплаты) - НачалоДня(ДатаНачалаПервогоДоговора)) / (60 * 60 * 24);
//			ТекущиеДанные.СрокОплатыАванса = Scan_ОбщегоНазначенияСервер.ПолучитьРазницуВРабочихДнях(ТекущиеДанные.КрайняяДатаОплаты, ДатаНачалаПервогоДоговора);
//			// rarus tenkam 07.04.2021 mantis 17523 ---			
//		КонецЕсли;	
//	КонецЕсли;
//	//rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыВидОплатыПриИзменении(Элемент)
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата") Тогда 
//		ПараметрыОтбора = Новый Структура;
//		ПараметрыОтбора.Вставить("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
//		//ПараметрыОтбора.Вставить("Продукт",ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));//rarus vikhle 09.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Закомментировал
//		СтрокиПостоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//		Если СтрокиПостоплаты.Количество() > 1 Тогда
//			ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата");
//			ТекущиеДанные.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора");
//			Если НЕ Объект.Договор.Пустая() Тогда
//				// rarus tenkam 08.04.2021 mantis 17523 +++
//				//ДатаНачалаДоговора = ПолучитьДатуНачалаПервогоДоговора(Объект.Договор);
//				ДатаНачалаДоговора = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор,"ДатаНачала");
//				// rarus tenkam 08.04.2021 mantis 17523 ---
//				ТекущиеДанные.КрайняяДатаОплаты	= ДатаНачалаДоговора;
//			КонецЕсли;
//			ОчиститьСообщения();
//			ВывестиСообщениеПол(Нстр("ru = 'В таблице уже есть строка с постоплатой.'"));
//		Иначе
//			ПараметрыОтбора = Новый Структура;
//			ПараметрыОтбора.Вставить("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата"));
//			//ПараметрыОтбора.Вставить("Продукт",ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));//rarus vikhle 09.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Закомментировал
//			МассивСтрокПредоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//			ОбщаяСуммаПредоплаты = 0;
//			ОбщийПроцентПредоплаты = 0;
//			Для Каждого ЭлементМассива Из МассивСтрокПредоплаты Цикл
//				ОбщаяСуммаПредоплаты   = ОбщаяСуммаПредоплаты + ЭлементМассива.Сумма;
//				ОбщийПроцентПредоплаты = ОбщийПроцентПредоплаты + ЭлементМассива.ПроцентОплаты;  
//			КонецЦикла;	
//			ТекущиеДанные.Сумма = ОбщаяСуммаСоглашения - ОбщаяСуммаПредоплаты;
//			ТекущиеДанные.ПроцентОплаты = 100 - ОбщийПроцентПредоплаты;
//			//rarus bonmak 13.01.2021 17041 ++
//			ТекущиеДанные.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
//			ТекущиеДанные.СрокОплатыАванса	= 30;
//			ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1);
//			//rarus bonmak 13.01.2021 17041 --
//		КонецЕсли;
//	КонецЕсли;	
//	//rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---
#КонецОбласти

&НаСервере
Процедура ОбновитьУсловияОплаты(ИДСтрокиСпискаПродуктов, ИзмененаЦена = Истина)//rarus vikhle 29.07.2021 17637 Добавил параметры ИДСтрокиСпискаПродуктов, ИзмененаЦена 
	//rarus vikhle 02.10.2020 mt 16181 +++
	//СписокПродуктовТЗ = РеквизитФормыВЗначение("СписокПродуктов");//rarus vikhle 25.06.2021 mt 17637
	
	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//Если ИзмененаЦена Тогда //rarus vikhle 17.06.2021 mt 17637
	//	ОбновитьИтоговыеСуммы();
	//	СписокПродуктовТЗ = РеквизитФормыВЗначение("СписокПродуктов");//rarus vikhle 25.06.2021 mt 17637
	//	// Для строк т.ч. Условия оплаты с неуказанным продуктом пересчитываем колонку "Сумма" ("руб.")  
	//	//rarus vikhle 09.06.2021 mt 17637 +++
	//	Для Каждого СтрокаТаблицы Из Объект.УсловияОплаты Цикл
	//		Если СтрокаТаблицы.Продукт.Пустая() Тогда
	//			СтрокаТаблицы.Сумма = СтрокаТаблицы.ПроцентОплаты / 100 * ОбщаяСуммаСоглашения; 
	//		Иначе
	//			СтрокаПродукта = СписокПродуктовТЗ.Найти(СтрокаТаблицы.Продукт);
	//			Если НЕ СтрокаПродукта = Неопределено Тогда
	//				СтрокаТаблицы.Сумма = СтрокаТаблицы.ПроцентОплаты / 100 * СтрокаПродукта.ИтоговаяСумма; 
	//			КонецЕсли;	
	//		КонецЕсли;	
	//	КонецЦикла;
	//Иначе
	//	//rarus vikhle 22.06.2021 mt 17637 +++
	//	СтрокиУсловийПродукта = Новый Массив;
	//	
	//	Если Продукты = Неопределено Тогда //Обработка текущей строки, при изменении в таблице
	//		СтрокаПродукта = СписокПродуктов.НайтиПоИдентификатору(Элементы.СписокПродуктов.ТекущаяСтрока);
	//		ТекущийПродукт = СтрокаПродукта.Продукт;	
	//		
	//		СтруктураОтбора	= Новый Структура("Продукт",ТекущийПродукт);
	//		СтрокиПродукта	= Объект.УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	//		
	//		Для Каждого Строка Из СтрокиПродукта Цикл
	//			Если Строка.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS Тогда
	//				Если НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда
	//					Строка.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), Строка.СрокОплатыАванса); 	
	//				Иначе
	//					Строка.КрайняяДатаОплаты = Дата(1,1,1);	
	//				КонецЕсли;	
	//			ИначеЕсли Строка.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS Тогда
	//				Если НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда 
	//					Строка.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), Строка.СрокОплатыАванса); 
	//				Иначе
	//					Строка.КрайняяДатаОплаты = Дата(1,1,1);	
	//				КонецЕсли;	
	//			КонецЕсли;	
	//		КонецЦикла;
	//	Иначе //Обработка переданного массива продуктов при групповом изменении DDS
	//		СписокПродуктовТЗ = РеквизитФормыВЗначение("СписокПродуктов");//rarus vikhle 25.06.2021 mt 17834
	//		
	//		Для Каждого Продукт Из Продукты Цикл
	//			СтруктураОтбора	= Новый Структура("Продукт",Продукт);
	//			СтрокиПродукта	= Объект.УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	//			Если СтрокиПродукта.Количество() > 0 Тогда
	//							
	//				СтрокаПродукта = СписокПродуктовТЗ.Найти(Продукт);
	//				
	//				Для Каждого Строка Из СтрокиПродукта Цикл
	//					Если Строка.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS Тогда
	//						Если НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда
	//							Строка.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), Строка.СрокОплатыАванса); 	
	//						Иначе
	//							Строка.КрайняяДатаОплаты = Дата(1,1,1);	
	//						КонецЕсли;	
	//					ИначеЕсли Строка.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS Тогда
	//						Если НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда 
	//							Строка.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), Строка.СрокОплатыАванса); 
	//						Иначе
	//							Строка.КрайняяДатаОплаты = Дата(1,1,1);	
	//						КонецЕсли;	
	//					КонецЕсли;	
	//				КонецЦикла;
	//			КонецЕсли;	
	//		КонецЦикла;	
	//	КонецЕсли;	
	//	//rarus vikhle 17.06.2021 mt 17637 ---
	//КонецЕсли;	
	// rarus vikhle 09.06.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
	
	//rarus vikhle 06.07.2021 17637 +++ Откат, добавил как раньше
	
	//rarus vikhle 29.07.2021 mt 17637 +++
	//ОбновитьОбщуюСуммуСоглашения();
	СтрокаСпискаПродуктов	= СписокПродуктов.НайтиПоИдентификатору(ИДСтрокиСпискаПродуктов); 
	Продукт					= СтрокаСпискаПродуктов.Продукт;
		
	// Ищем строки условий с продуктом
	СтруктураОтбора			= Новый Структура("Продукт", Продукт);
	СтрокиУсловийПродукта 	= Объект.УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	
	Если ИзмененаЦена Тогда
		
		// Обновляем итоговую сумму продажи в списке продуктов
		ОбновитьИтоговуюСуммуПродукта(СтрокаСпискаПродуктов);
				
		// Пересчет сумм в условиях оплаты продукта
		Для Каждого СтрокаУсловий Из СтрокиУсловийПродукта Цикл
			СтрокаУсловий.Сумма = СтрокаУсловий.ПроцентОплаты / 100 * СтрокаСпискаПродуктов.ИтоговаяСумма;				
		КонецЦикла;
				
	Иначе 
		// Изменена DDS
		Для Каждого СтрокаУсловий Из СтрокиУсловийПродукта Цикл 
			Если СтрокаУсловий.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS Тогда
				Если НЕ СтрокаСпискаПродуктов.DDS = Дата(1,1,1) Тогда
					СтрокаУсловий.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаСпискаПродуктов.DDS), СтрокаУсловий.СрокОплатыАванса); 	
				Иначе
					СтрокаУсловий.КрайняяДатаОплаты = Дата(1,1,1);	
				КонецЕсли;	
			ИначеЕсли СтрокаУсловий.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS Тогда
				Если НЕ СтрокаСпискаПродуктов.DDS = Дата(1,1,1) Тогда 
					СтрокаУсловий.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаСпискаПродуктов.DDS), СтрокаУсловий.СрокОплатыАванса); 
				Иначе
					СтрокаУсловий.КрайняяДатаОплаты = Дата(1,1,1);	
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;	
			
	КонецЕсли;	
	
	
	//Для Каждого СтрокаТаблицы Из Объект.УсловияОплаты Цикл
	//	СтрокаТаблицы.Сумма = СтрокаТаблицы.ПроцентОплаты / 100 * ОбщаяСуммаСоглашения; 
	//КонецЦикла;
	//rarus vikhle 29.07.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
	
	//rarus vikhle 29.12.2020 mt 17026 +++
	//Если Элементы.ГрафикПлатежей.Видимость Тогда
	ОбновитьГрафикПлатежей(Продукт);
	//КонецЕсли;	
	//rarus vikhle 29.12.2020 mt 17026 ---
	//rarus vikhle 02.10.2020 mt 16181  ---	
КонецПроцедуры	

// Обновляет итоговые цены, условия оплаты и графики платежей у продуктов 
// из переданных в массиве строк таблицы "СписокПродуктов" 
//
// Параметры:
//  ИДСтрокПродуктов - Массив	- Массив числовых идентификаторов строк таблицы "СписокПродуктов"
//  ИзмененаЦена	 - Булево	- Признак измененения составляющей цены
//
&НаСервере
Процедура ОбновитьУсловияОплатыПоПродуктам(ИДСтрокПродуктов, ИзмененаЦена = Истина) //rarus vikhle 29.07.2021 mt 17637 +++
	
	Если НЕ ТипЗнч(ИДСтрокПродуктов) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого ИДСтроки Из ИДСтрокПродуктов Цикл
		ОбновитьУсловияОплаты(ИДСтроки, ИзмененаЦена);
	КонецЦикла;	
	
КонецПроцедуры //rarus vikhle 29.07.2021 mt 17637 ---	

&НаСервере
Процедура ОбновитьГрафикПлатежей(Продукт = Неопределено) //rarus vikhle 29.07.2021 mt 17637 + параметр Продукт
	//rarus vikhle 24.12.2020 mt 17026 +++
	//rarus vikhle 02.10.2020 mt 16181 +++
	//Если НЕ Элементы.УсловияОплаты.Видимость Тогда
	//	Возврат;
	//КонецЕсли;	
		
	//тзГрафикПлатежей = РеквизитФормыВЗначение("ГрафикПлатежей");
	//тзГрафикПлатежей.Очистить();
	
	//rarus vikhle 29.07.2021 mt 17637 закомментировал +++
	//rarus vikhle 02.02.2021 mt 17179 +++
	//Если ТекущийОбъект = Неопределено Тогда
	ЗаявкаОбъект = РеквизитФормыВЗначение("Объект");	
	//rarus vikhle 27.10.2021 m 18426 +++
	Справочники.Scan_СоглашенияОПоставке.ОбновитьГрафикПлатежей(ЗаявкаОбъект.ГрафикПлатежей, ЗаявкаОбъект.УсловияОплаты, Продукт);
	ЗначениеВРеквизитФормы(ЗаявкаОбъект, "Объект");
	//rarus vikhle 27.10.2021 m 18426 ---
	
	//Иначе
	//	ЗаявкаОбъект = ТекущийОбъект;	
	//КонецЕсли;	
	//rarus vikhle 02.02.2021 mt 17179 ---
	//rarus vikhle 29.07.2021 mt 17637 ---
	
	//ЗаявкаОбъект = РеквизитФормыВЗначение("Объект");
	
	//rarus vikhle 27.10.2021 m 18426 +++ закомментировал
	// Если не передан продукт, полностью перезаполняем график
	//Если Продукт = Неопределено Тогда
	//	ЗаявкаОбъект.ГрафикПлатежей.Очистить();
	//	Для Каждого СтрокаУсловий Из ЗаявкаОбъект.УсловияОплаты Цикл
	//		//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//		//rarus vikhle 09.06.2021 mt 17637 +++
	//		//Строки условий оплаты с заполненным продуктом переносим без изменений
	//		//Если НЕ СтрокаУсловий.Продукт.Пустая() Тогда
	//		//rarus vikhle 29.07.2021 mt 17637 раскомментировал +++
	//		нСтрокаГрафика 				= ЗаявкаОбъект.ГрафикПлатежей.Добавить();
	//		нСтрокаГрафика.ВидОплаты 	= СтрокаУсловий.ВидОплаты;
	//		нСтрокаГрафика.ДатаПлатежа	= СтрокаУсловий.КрайняяДатаОплаты;
	//		нСтрокаГрафика.Продукт		= СтрокаУсловий.Продукт;
	//		нСтрокаГрафика.Сумма		= СтрокаУсловий.Сумма;
	//	КонецЦикла;	
	//Иначе // Передан продукт, добавляем строки по нему
	//	СтруктураОтбора = Новый Структура("Продукт", Продукт);
	//	
	//	// Удаляем имеющиеся строки графика по продукту
	//	СтрокиГрафикаПродукта = ЗаявкаОбъект.ГрафикПлатежей.НайтиСтроки(СтруктураОтбора);
	//	Для Каждого СтрокаГрафикаПродукта Из СтрокиГрафикаПродукта Цикл
	//		ЗаявкаОбъект.ГрафикПлатежей.Удалить(СтрокаГрафикаПродукта);
	//	КонецЦикла;	
	//	
	//	// Копируем строки условий по продукту в график
	//	СтрокиУсловийПродукта = Объект.УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	//	Для Каждого СтрокаУсловийПродукта Из СтрокиУсловийПродукта Цикл
	//		нСтрокаГрафика 				= ЗаявкаОбъект.ГрафикПлатежей.Добавить();
	//		нСтрокаГрафика.ВидОплаты 	= СтрокаУсловийПродукта.ВидОплаты;
	//		нСтрокаГрафика.ДатаПлатежа	= СтрокаУсловийПродукта.КрайняяДатаОплаты;
	//		нСтрокаГрафика.Продукт		= СтрокаУсловийПродукта.Продукт;
	//		нСтрокаГрафика.Сумма		= СтрокаУсловийПродукта.Сумма;
	//	КонецЦикла;
	//КонецЕсли;
	//rarus vikhle 27.10.2021 m 18426 ---
	
	//rarus vikhle 29.07.2021 mt 17637 ---
		//	Продолжить;
		//КонецЕсли;	
		//rarus vikhle 09.06.2021 mt 17637 ---
		//rarus vikhle 06.07.2021 17637 ---
		
	//rarus vikhle 29.07.2021 mt 17637 +++ закомментировал	
	//	Для Каждого СтрокаПродукта Из СписокПродуктов Цикл
	//		//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//		//rarus vikhle 09.06.2021 mt 17637 +++
	//		//Не учитываем драфты
	//		//Если НЕ ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
	//		//	ИЛИ НЕ СтрокаПродукта.СпециальныеУсловия.Пустая() Тогда
	//		//	Продолжить;
	//		//КонецЕсли;	
	//		//rarus vikhle 09.06.2021 mt 17637 ---
	//		//rarus vikhle 06.07.2021 17637 ---
	//		
	//		нСтрокаГрафика = ЗаявкаОбъект.ГрафикПлатежей.Добавить();
	//		нСтрокаГрафика.ВидОплаты = СтрокаУсловий.ВидОплаты;
	//		//нСтрокаГрафика.Продукт = СтрокаПродукта.Продукт;//rarus vikhle 17.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	//		Если СтрокаУсловий.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора") Тогда
	//			нСтрокаГрафика.ДатаПлатежа = СтрокаУсловий.КрайняяДатаОплаты;
	//			//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал, добавил
	//			//Если НЕ ОбщаяСуммаСоглашения = 0 Тогда //rarus vikhle 28.06.2021 mt 17637
	//			//	ПроцентПродукта = 100 * СтрокаПродукта.ИтоговаяСумма / ОбщаяСуммаСоглашения;
	//			//	СуммаПоПродукту = СтрокаУсловий.Сумма * ПроцентПродукта / 100;
	//			//	нСтрокаГрафика.Сумма = СуммаПоПродукту;
	//			//КонецЕсли;	
	//			нСтрокаГрафика.Сумма = СтрокаУсловий.Сумма;
	//			//rarus vikhle 06.07.2021 17637 ---
	//			Прервать;//rarus vikhle 17.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, раскомментировал
	//		ИначеЕсли СтрокаУсловий.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS") Тогда
	//			Если ЗначениеЗаполнено(СтрокаПродукта.DDS) Тогда
	//				// rarus tenkam 08.04.2021 mantis 17523 +++
	//				//нСтрокаГрафика.ДатаПлатежа = НачалоДня(СтрокаПродукта.DDS) - СтрокаУсловий.СрокОплатыАванса * 60 * 60 * 24;
	//				нСтрокаГрафика.ДатаПлатежа = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), СтрокаУсловий.СрокОплатыАванса);
	//				// rarus tenkam 08.04.2021 mantis 17523 ---
	//			КонецЕсли;
	//			Если НЕ ОбщаяСуммаСоглашения = 0 Тогда
	//				ПроцентПродукта = 100 * СтрокаПродукта.ИтоговаяСумма / ОбщаяСуммаСоглашения; 
	//				СуммаПоПродукту = СтрокаУсловий.Сумма * ПроцентПродукта / 100;
	//				нСтрокаГрафика.Сумма = СуммаПоПродукту;
	//			КонецЕсли;	
	//		ИначеЕсли СтрокаУсловий.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS") Тогда
	//			Если ЗначениеЗаполнено(СтрокаПродукта.DDS) Тогда
	//				// rarus tenkam 08.04.2021 mantis 17523 +++
	//				//нСтрокаГрафика.ДатаПлатежа = НачалоДня(СтрокаПродукта.DDS) + СтрокаУсловий.СрокОплатыАванса * 60 * 60 * 24;
	//				нСтрокаГрафика.ДатаПлатежа = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), СтрокаУсловий.СрокОплатыАванса);
	//				// rarus tenkam 08.04.2021 mantis 17523 ---     				
	//			КонецЕсли;
	//			Если НЕ ОбщаяСуммаСоглашения = 0 Тогда
	//				ПроцентПродукта = 100 * СтрокаПродукта.ИтоговаяСумма / ОбщаяСуммаСоглашения; 
	//				СуммаПоПродукту = СтрокаУсловий.Сумма * ПроцентПродукта / 100;
	//				нСтрокаГрафика.Сумма = СуммаПоПродукту;
	//			КонецЕсли;	
	//		КонецЕсли;
	//	КонецЦикла;	
	//rarus vikhle 29.07.2021 mt 17637 ---
	//КонецЦикла;
	//rarus vikhle 06.07.2021 17637 +++ Откат, заменил
	
	//rarus vikhle 27.10.2021 m 18426 +++ закомментировал
	//ЗаявкаОбъект.ГрафикПлатежей.Свернуть("ВидОплаты,ДатаПлатежа,Продукт","Сумма"); //rarus vikhle 09.06.2021 mt 17637 + Продукт
	////rarus vikhle 06.07.2021 17637 ---
	//ЗаявкаОбъект.ГрафикПлатежей.Сортировать("ВидОплаты Убыв,ДатаПлатежа");
	////rarus vikhle 29.07.2021 mt 17637 закомментировал +++
	////rarus vikhle 02.02.2021 mt 17179 +++
	////Если ТекущийОбъект = Неопределено Тогда
	//ЗначениеВРеквизитФормы(ЗаявкаОбъект,"Объект");
	//КонецЕсли;
	//rarus vikhle 02.02.2021 mt 17179 ---
	//rarus vikhle 29.07.2021 mt 17637 ---
	//rarus vikhle 27.10.2021 m 18426 ---
	
	ИтогГрафикПлатежей = Окр(ЗаявкаОбъект.ГрафикПлатежей.Итог("Сумма"));//rarus vikhle 16.04.2021 mt 17616
	
	ОбновитьДеревоГрафикПлатежей();//rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Раскомментировал, убрал параметр
	
	//Элементы.ГрафикПлатежейСумма.ТекстПодвала = Объект.ГрафикПлатежей.Итог("Сумма"); 
	//rarus vikhle 02.10.2020 mt 16181 ---	
	//rarus vikhle 24.12.2020 mt 17026 ---
КонецПроцедуры	

&НаСервере
Процедура ОбновитьИтоговуюСуммуПродукта(СтрокаСпискаПродуктов)
	//rarus vikhle 02.10.2020 mt 16181 +++
	Если ТипЗнч(СтрокаСпискаПродуктов.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		Если НЕ СтрокаСпискаПродуктов.ДокументУстановкиПлановыхЦен.Пустая() Тогда 
			ТаблицаРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(СтрокаСпискаПродуктов.Продукт);
			
			СтрокаБазовойЦены = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаДилера"),"СоставляющаяЦены");
			Если НЕ СтрокаБазовойЦены =  Неопределено Тогда
				СтрокаБазовойЦены.ЦенаСНДС = СтрокаСпискаПродуктов.ЦенаСНДС;
				СтрокаБазовойЦены.ЦенаБезНДС = СтрокаСпискаПродуктов.ЦенаБезНДС;	
				СтрокаБазовойЦены.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
			КонецЕсли;
			
			Если НЕ СтрокаСпискаПродуктов.СпециальныеУсловия.Пустая() Тогда
				СтрокаЦеныСУ	 			= ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
				Если НЕ СтрокаЦеныСУ = Неопределено Тогда
					СтрокаЦеныСУ.ЦенаСНДС 		= СтрокаСпискаПродуктов.СпециальныеУсловия.СпецDealerNet;//rarus vikhle 17.12.2020 mt 16181 заменил на согласованную
					СтрокаЦеныСУ.ЦенаБезНДС 	= СтрокаСпискаПродуктов.СпециальныеУсловия.ЦенаБезНДС;
					СтрокаЦеныСУ.СтавкаНДС 		= СтрокаСпискаПродуктов.СпециальныеУсловия.СтавкаНДС;
				КонецЕсли;
				
				СтрокаЦеныСУ = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice"),"СоставляющаяЦены");
				Если НЕ СтрокаЦеныСУ = Неопределено Тогда
					СтрокаЦеныСУ.ЦенаСНДС 		= СтрокаСпискаПродуктов.СпециальныеУсловия.СпецCustomerPrice;//rarus vikhle 17.12.2020 mt 16181 заменил на согласованную
					СтрокаЦеныСУ.ЦенаБезНДС		= СтрокаСпискаПродуктов.СпециальныеУсловия.ЦенаДляКлиентаБезНДС;//rarus vikhle 17.12.2020 mt 16181 
					СтрокаЦеныСУ.СтавкаНДС 		= СтрокаСпискаПродуктов.СпециальныеУсловия.СтавкаНДС;
				КонецЕсли;
			Иначе
				СтрокаЦеныСУ 				= ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
				СтрокаЦеныСУ.ЦенаСНДС 		= 0;
				СтрокаЦеныСУ.ЦенаБезНДС 	= 0;
								
				СтрокаЦеныСУ = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice"),"СоставляющаяЦены");
				СтрокаЦеныСУ.ЦенаСНДС 		= 0;
			КонецЕсли;
			
			// rarus tenkam 05.04.2021 mantis 17419 +++
			СтрокаЦенаПоВалОговорке = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаПоВалютнойОговорке"),"СоставляющаяЦены");
			Если НЕ СтрокаЦенаПоВалОговорке =  Неопределено Тогда
				СтрокаЦенаПоВалОговорке.ЦенаСНДС = СтрокаСпискаПродуктов.ЦенаПоВалютнойОговорке;
				СтрокаЦенаПоВалОговорке.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
			КонецЕсли;        			
			// rarus tenkam 05.04.2021 mantis 17419 ---
			
			СтрокаДрайва = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ПроцентДрайва"),"СоставляющаяЦены");
			Если НЕ СтрокаЦеныСУ =  Неопределено Тогда
				СтрокаДрайва.ЦенаСНДС = СтрокаСпискаПродуктов.ПроцентДрайв;
				СтрокаДрайва.ЦенаБезНДС = СтрокаСпискаПродуктов.ПроцентДрайв;	
				СтрокаДрайва.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
			КонецЕсли;
			
			ПолнаяТаблицаСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.РассчитатьПолнуюТаблицуСоставляющих(ТаблицаРучныхСоставляющих);
			СтрокаИтоговойЦены = ПолнаяТаблицаСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаDealerNetСоСкидкой"),"СоставляющаяЦены");
			Если НЕ СтрокаИтоговойЦены =  Неопределено Тогда
				СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаИтоговойЦены.ЦенаСНДС;
			КонецЕсли;	
		Иначе
			Если СтрокаСпискаПродуктов.СпециальныеУсловия.Пустая() Тогда
				СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.ЦенаСНДС;	
			Иначе
				СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.СпециальныеУсловия.СпецDealerNet;//rarus vikhle 17.12.2020 mt 16181 заменил на согласованную	
			КонецЕсли;	
			Если НЕ СтрокаСпискаПродуктов.ПроцентДрайв = 0 Тогда
				СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.ИтоговаяСумма - (СтрокаСпискаПродуктов.ИтоговаяСумма * СтрокаСпискаПродуктов.ПроцентДрайв / 100); 
			КонецЕсли;	
		КонецЕсли;
		//rarus vikhle 05.03.2021 mt 17388 +++ округление до рубля
		СтрокаСпискаПродуктов.ИтоговаяСумма = Окр(СтрокаСпискаПродуктов.ИтоговаяСумма);
		//rarus vikhle 31.12.2020 mt 17055 +++ округление до 50
		//СтрокаСпискаПродуктов.ИтоговаяСумма = ?(СтрокаСпискаПродуктов.ИтоговаяСумма % 50 = 0,
		//									Цел(СтрокаСпискаПродуктов.ИтоговаяСумма/50)*50,
		//									Цел(СтрокаСпискаПродуктов.ИтоговаяСумма/50)*50+50);
		//rarus vikhle 31.12.2020 mt 17055 ---
		//rarus vikhle 05.03.2021 mt 17388 ---
	//КонецЕсли;//rarus vikhle 06.07.2021 17637	Откат, закомментировал
	
	//rarus vikhle 29.07.2021 17637 +++ Закомментировал
	
	//rarus vikhle 15.06.2021 mt 17637 +++ Для драфтов расчитывается на клиенте
	//ИначеЕсли ТипЗнч(СтрокаСпискаПродуктов.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
	//	Если СтрокаСпискаПродуктов.СпециальныеУсловия.Пустая() Тогда
	//		СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.ЦенаСНДС * СтрокаСпискаПродуктов.Количество; //rarus vikhle 29.12.2020 mt 16181 добавил умножение на количество;
	//	Иначе
	//		СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.СпециальныеУсловия.СпецDealerNet * СтрокаСпискаПродуктов.Количество;//rarus vikhle 29.12.2020 mt 16181 добавил умножение на количество;	
	//	КонецЕсли;	
	//	
	//	// rarus tenkam 06.04.2021 mantis 17419 +++
	//	Если ЗначениеЗаполнено(СтрокаСпискаПродуктов.ЦенаПоВалютнойОговорке) Тогда
	//		СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.ЦенаПоВалютнойОговорке * СтрокаСпискаПродуктов.Количество;
	//	КонецЕсли;	
	//	// rarus tenkam 06.04.2021 mantis 17419 ---
	//	
	//	Если НЕ СтрокаСпискаПродуктов.ПроцентДрайв = 0 Тогда
	//		СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.ИтоговаяСумма - (СтрокаСпискаПродуктов.ИтоговаяСумма * СтрокаСпискаПродуктов.ПроцентДрайв / 100); 
	//	КонецЕсли;	
	//	//rarus vikhle 05.03.2021 mt 17388 +++ округление до рубля
	//	СтрокаСпискаПродуктов.ИтоговаяСумма = Окр(СтрокаСпискаПродуктов.ИтоговаяСумма);
	//	//rarus vikhle 31.12.2020 mt 17055 +++ округление до 50
	//	//СтрокаСпискаПродуктов.ИтоговаяСумма = ?(СтрокаСпискаПродуктов.ИтоговаяСумма % 50 = 0,
	//	//									Цел(СтрокаСпискаПродуктов.ИтоговаяСумма/50)*50,
	//	//									Цел(СтрокаСпискаПродуктов.ИтоговаяСумма/50)*50+50);
	//	//rarus vikhle 31.12.2020 mt 17055 ---								
	//	//rarus vikhle 05.03.2021 mt 17388 ---
	КонецЕсли;
	//rarus vikhle 15.06.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
	
	ОбщаяСуммаСоглашения = СписокПродуктов.Итог("ИтоговаяСумма");
	
	//rarus vikhle 02.10.2020 mt 16181 ---
КонецПроцедуры	

//rarus vikhle 04.08.2021 mt 17637 +++ Закомментировал
//&НаСервере
////Процедура ОбновитьИтоговыеСуммы()
//Процедура ОбновитьОбщуюСуммуСоглашения() //rarus vikhle 06.07.2021 17637 Откат, переименовал обратно
	////rarus vikhle 02.10.2020 mt 16181 +++	
	//ОбщаяСуммаСоглашения	= 0;
	//Для Каждого СтрокаСписка Из СписокПродуктов Цикл
	//	ОбновитьИтоговуюСуммуПродукта(СтрокаСписка);
	//	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//	//rarus vikhle 09.06.2021 mt 17637 +++
	//	//Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") И СтрокаСписка.СпециальныеУсловия.Пустая() Тогда
	//		ОбщаяСуммаСоглашения = ОбщаяСуммаСоглашения + СтрокаСписка.ИтоговаяСумма;
	//	//КонецЕсли;	
	//	//rarus vikhle 09.06.2021 mt 17637 ---
	//	//rarus vikhle 06.07.2021 17637 ---
	//КонецЦикла;
	////rarus vikhle 02.10.2020 mt 16181 ---
	//
	////СуммаЗаявки = СписокПродуктов.Итог("ИтоговаяСумма"); //rarus vikhle 09.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	
//КонецПроцедуры	
//rarus vikhle 04.08.2021 mt 17637 ---

&НаСервереБезКонтекста
Функция ПолучитьДатуНачалаПервогоДоговора(ПодчиненныйДоговор)
	//rarus vikhle 05.10.2020 mt 16181 +++
	
	Если ПодчиненныйДоговор.ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение Тогда
		Возврат ПодчиненныйДоговор.ДатаНачала; 
	КонецЕсли;	
	
	ДоговорОснование = ПодчиненныйДоговор.ДоговорОснование;
	Если НЕ ДоговорОснование.Пустая() И ДоговорОснование.ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение Тогда
		Возврат ДоговорОснование.ДатаНачала;
	КонецЕсли;
	
	МассивСОП = Новый Массив;
    МассивСОП.Добавить(ДоговорОснование);
			
	Для Каждого СОП Из МассивСОП Цикл
		ДоговорОснование = СОП.ДоговорОснование; 
		Если НЕ ДоговорОснование.Пустая() И ДоговорОснование.ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение Тогда
			Возврат ДоговорОснование.ДатаНачала;
		ИначеЕсли НЕ ДоговорОснование.Пустая() Тогда 
			МассивСОП.Добавить(ДоговорОснование);
        КонецЕсли;	
	КонецЦикла;
	
	Возврат Дата(1,1,1);
	
	//rarus vikhle 05.10.2020 mt 16181 ---
КонецФункции

//rarus vikhle 28.07.2021 mt 17637 Закомментировал +++
//&НаКлиенте
//Процедура ОбновитьСтрокуПостоплаты()
//	//rarus vikhle 09.10.2020 mt 16181 +++
//	//ПустаяСсылкаПродукта = ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка");//rarus vikhle 10.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//	
//	ПараметрыОтбора = Новый Структура;
//	ПараметрыОтбора.Вставить("ВидОплаты", ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
//	//ПараметрыОтбора.Вставить("Продукт",	  ПустаяСсылкаПродукта);//rarus vikhle 10.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//	
//	СтрокиПостоплаты = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);//rarus vikhle 10.06.2021 mt 17637
//	Если СтрокиПостоплаты.Количество() = 0 Тогда
//		Возврат;
//	Иначе
//		ПараметрыОтбора = Новый Структура;
//		ПараметрыОтбора.Вставить("ВидОплаты", ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата"));
//		//ПараметрыОтбора.Вставить("Продукт",   ПустаяСсылкаПродукта);//rarus vikhle 10.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//		МассивСтрокПредоплаты  = Объект.УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//		ОбщаяСуммаПредоплаты   = 0;
//		ОбщийПроцентПредоплаты = 0;
//		Для Каждого ЭлементМассива Из МассивСтрокПредоплаты Цикл
//			ОбщаяСуммаПредоплаты   = ОбщаяСуммаПредоплаты + ЭлементМассива.Сумма;
//			ОбщийПроцентПредоплаты = ОбщийПроцентПредоплаты + ЭлементМассива.ПроцентОплаты;  
//		КонецЦикла;	
//		СтрокиПостоплаты[0].Сумма         = ОбщаяСуммаСоглашения - ОбщаяСуммаПредоплаты;
//		СтрокиПостоплаты[0].ПроцентОплаты = 100 - ОбщийПроцентПредоплаты;
//	КонецЕсли;	
//	//rarus vikhle 09.10.2020 mt 16181 ---	
//	
//КонецПроцедуры	
//rarus vikhle 28.07.2021 mt 17637 ---

&НаСервере
Процедура ОбновитьДанныеПродуктов()
	
	//rarus vikhle 25.01.2021 mt 16981 +++
	
	//rarus vikhle 12.10.2021 mt 18292 +++
	//ТаблицаПродуктов = СписокПродуктов.Выгрузить(,"Продукт");
	
	МассивПродуктов = ОбщегоНазначения.ВыгрузитьКолонку(СписокПродуктов, "Продукт");
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияТипаИзМассива(МассивПродуктов, Тип("СправочникСсылка.Scan_ДрафтыПродуктов"));
	ДокументыЦен 	= Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьДокументыУстановкиЦенПоМассивуПродуктов(МассивПродуктов, Объект.Ссылка, Истина);
	
	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
		СтрокаСписка.ДокументУстановкиПлановыхЦен = ДокументыЦен[СтрокаСписка.Продукт];	
	КонецЦикла;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Scan_Изделия.Ссылка КАК Продукт,
	//               |	Scan_Изделия.ДокументУстановкиПлановыхЦенПродукта КАК ДокументУстановкиПлановыхЦен
	//               |ИЗ
	//               |	Справочник.Scan_Изделия КАК Scan_Изделия
	//               |ГДЕ
	//               |	Scan_Изделия.Ссылка В (&ТаблицаПродуктов)";
	//Запрос.УстановитьПараметр("ТаблицаПродуктов",ТаблицаПродуктов);
	//РезультатЗапроса = Запрос.Выполнить();
	//Выборка = РезультатЗапроса.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	СтруктураОтбора = Новый Структура("Продукт",Выборка.Продукт);
	//	НайденныеСтроки = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
	//	Для Каждого СтрокаПродукта Из НайденныеСтроки Цикл
	//		ЗаполнитьЗначенияСвойств(СтрокаПродукта,Выборка,"ДокументУстановкиПлановыхЦен");
	//	КонецЦикла;	
	//КонецЦикла;	
	
	//rarus vikhle 12.10.2021 mt 18292 ---
	
	//rarus vikhle 10.11.2020 mt 16181 +++
	//Для Каждого СтрокаСписка Из СписокПродуктов Цикл
	//	Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") И СтрокаСписка.ДокументУстановкиПлановыхЦен.Пустая() Тогда 
	//		СтрокаСписка.ДокументУстановкиПлановыхЦен = СтрокаСписка.Продукт.ДокументУстановкиПлановыхЦенПродукта; 
	//	КонецЕсли;	
	//КонецЦикла;
	//rarus vikhle 10.11.2020 mt 16181 ---
	//rarus vikhle 25.01.2021 mt 16981 ---
	
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьСписокПродуктов(Перезаполнить = Ложь)
	
	//rarus vikhle 10.11.2020 mt 16181 +++
	Если Перезаполнить Тогда
		СписокПродуктов.Загрузить(Объект.СписокПродуктов.Выгрузить());
	КонецЕсли;	
	
	ПродуктыЗаявки = РеквизитФормыВЗначение("СписокПродуктов").ВыгрузитьКолонку("Продукт");//rarus vikhle 20.02.2021 mt 16181
	
	ДатыИСтатусыОтгрузки	= ПолучитьДатыИСтатусыОтгрузкиПродуктов(ПродуктыЗаявки);
	//rarus vikhle 20.02.2021 mt 16181 +++
	ТаблицаКлючевыхДат 		= ПолучитьКлючевыеДаты(ПродуктыЗаявки);
	ТаблицаДанныхПоЗаказам	= ПолучитьДанныеПоЗаказам(ПродуктыЗаявки);
	//rarus vikhle 20.02.2021 mt 16181 ---
	// rarus agar 23.06.2021 17892 ++
	ЗаказыНаЗаводПродуктов = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаДанныхПоЗаказам, "ЗаказНаЗавод", Истина);
	КузовостроителиЗаказов = ПолучитьКузовостроителейЗаказов(ЗаказыНаЗаводПродуктов);
	// rarus agar 23.06.2021 17892 --
	// rarus agar 24.06.2021 17921 ++
	ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер, "ВидДилера");
	// rarus agar 24.06.2021 17921 --
	НаличиеЗаказовВDD2DDSИнформере = РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ПолучитьНаличиеЗаписейПоЗаказам(ЗаказыНаЗаводПродуктов); //rarus vikhle 31.08.2021 mt 17933
	ДокументыЦен = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьДокументыУстановкиЦенПоМассивуПродуктов(ПродуктыЗаявки, Объект.Ссылка, Истина); //rarus vikhle 12.10.2021 m 18292
	
	Для Каждого СтрокаПродукта Из СписокПродуктов Цикл 
		
		СтрокаПродукта.ПриоритетныйСклад =  (СтрокаПродукта.СкладОтгрузки = ПриоритетныйСклад И НЕ ПриоритетныйСклад.Пустая()); //rarus vikhle 20.01.2021 mt 16981
				
		//rarus vikhle 17.12.2020 mt 16977 +++
		//КлючеваяДатаВСтроку = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "БроньДилера");
		//СтрокаПродукта.ДатаБрони = КлючеваяДатаВСтроку;
		//rarus vikhle 17.12.2020 mt 16977 ---
		
		//rarus agar 10.20.2020 16930 ++
		//СтрокаПродукта.ЗапретНаИзменениеСкладаОтгрузки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаказНаЗавод, "ЗапретНаИзменениеСкладаОтгрузки"); //rarus vikhle 21.01.2021 mt 16981
		//rarus agar 10.20.2020 16930 --
		
		НайденнаяСтрока = ДатыИСтатусыОтгрузки.Найти(СтрокаПродукта.Продукт, "Продукт");
		Если НайденнаяСтрока <> Неопределено Тогда
			//rarus vikhle 17.12.2020 mt 16977 +++
			//СтрокаПродукта.ДатаОтгрузки   = НайденнаяСтрока.ДатаОтгрузки;
			СтрокаПродукта.ДатаБрони   = НайденнаяСтрока.ДатаОтгрузки;
			//rarus vikhle 17.12.2020 mt 16977 ---
			СтрокаПродукта.СтатусОтгрузки = НайденнаяСтрока.СтатусОтгрузки;
		КонецЕсли;
		
		//rarus vikhle 20.02.2021 mt 16181 +++
		НайденнаяСтрока = ТаблицаКлючевыхДат.Найти(СтрокаПродукта.Продукт, "Продукт");
		Если НайденнаяСтрока <> Неопределено Тогда
			//ЗаполнитьЗначенияСвойств(СтрокаПродукта, НайденнаяСтрока, "DD,DD2,ДатаПродажиДилеру,ДатаПродажиКлиенту");
			ЗаполнитьЗначенияСвойств(СтрокаПродукта, НайденнаяСтрока); //rarus vikhle 10.03.2021 mt 17324
			
			// rarus agar 24.06.2021 17921 ++
			Если Не СтрокаПродукта.Продукт.БУ Тогда
				ПерваяДатаLeadTime = Дата(1,1,1);
				ВтораяДатаLeadTime = Дата(1,1,1);
				
				Если     ЗначениеЗаполнено(НайденнаяСтрока.ДатаПоступленияИнвойса1С)
					И Не ЗначениеЗаполнено(НайденнаяСтрока.ДатаПродажиКлиенту)
					И Не ЗначениеЗаполнено(НайденнаяСтрока.ДатаПродажиИзделия)
					Тогда
					ПерваяДатаLeadTime = НайденнаяСтрока.ДатаПоступленияИнвойса1С;
					ВтораяДатаLeadTime = ТекущаяДатаСеанса();
				ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.ДатаПоступленияИнвойса1С)
					И     ЗначениеЗаполнено(НайденнаяСтрока.ДатаПродажиКлиенту)
					И     ВидДилера = ПредопределенноеЗначение("Перечисление.Scan_ВидыДилеров.Собственный")
					Тогда
					ПерваяДатаLeadTime = НайденнаяСтрока.ДатаПоступленияИнвойса1С;
					ВтораяДатаLeadTime = НайденнаяСтрока.ДатаПродажиКлиенту;
				ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.ДатаПоступленияИнвойса1С)
					И     ЗначениеЗаполнено(НайденнаяСтрока.ДатаПродажиИзделия)
					И     ВидДилера = ПредопределенноеЗначение("Перечисление.Scan_ВидыДилеров.Независимый")
					Тогда
					ПерваяДатаLeadTime = НайденнаяСтрока.ДатаПоступленияИнвойса1С;
					ВтораяДатаLeadTime = НайденнаяСтрока.ДатаПродажиИзделия;
				ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.ДатаПоступленияИнвойса1С)
					И     ЗначениеЗаполнено(НайденнаяСтрока.ДатаПродажиКлиенту)
					И Не  ЗначениеЗаполнено(НайденнаяСтрока.ДатаПродажиИзделия)
					Тогда
					ПерваяДатаLeadTime = НайденнаяСтрока.ДатаПоступленияИнвойса1С;
					ВтораяДатаLeadTime = НайденнаяСтрока.ДатаПродажиКлиенту;
					
				ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.ДатаПоступленияИнвойса1С)
					И Не  ЗначениеЗаполнено(НайденнаяСтрока.ДатаПродажиКлиенту)
					И     ЗначениеЗаполнено(НайденнаяСтрока.ДатаПродажиИзделия)
					Тогда
					ПерваяДатаLeadTime = НайденнаяСтрока.ДатаПоступленияИнвойса1С;
					ВтораяДатаLeadTime = НайденнаяСтрока.ДатаПродажиИзделия;
				КонецЕсли;
				СтрокаПродукта.LeadTime = (НачалоДня(ВтораяДатаLeadTime) - НачалоДня(ПерваяДатаLeadTime)) / (60 * 60 * 24);
			КонецЕсли;
			// rarus agar 24.06.2021 17921 --
		КонецЕсли;
		
		НайденнаяСтрока = ТаблицаДанныхПоЗаказам.Найти(СтрокаПродукта.Продукт, "Продукт");
		Если НайденнаяСтрока <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаПродукта, НайденнаяСтрока, "ЗаказНаЗавод,ТипЗаказа");
		КонецЕсли;
		//rarus vikhle 20.02.2021 mt 16181 ---
		
		Если ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			
			//rarus vikhle 20.02.2021 mt 16181 +++ заполняется ранее
			//ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(СтрокаПродукта.Продукт);
			
			//rarus vikhle 17.12.2020 mt 16977 +++
			//Если СтрокаПродукта.Продукт.БУ Тогда
			//	КлючеваяДатаВСтроку = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(СтрокаПродукта.Продукт, "ДатаПродажиБУДилеру");
			//Иначе
			//	КлючеваяДатаВСтроку = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "ДатаПродажиИзделия");
			//КонецЕсли;	
			//СтрокаПродукта.ДатаПродажиДилеру = КлючеваяДатаВСтроку;
			//rarus vikhle 17.12.2020 mt 16977 ---
			//СтрокаПродукта.ЗаказНаЗавод = ЗаказНаЗавод;
			//СтрокаПродукта.ТипЗаказа = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод); //rarus vikhle 14.10.2020 mt 16181
			//rarus vikhle 20.02.2021 mt 16181 ---
			СтрокаПродукта.Модель = СтрокаПродукта.Продукт.МодельПродукта;
			СтрокаПродукта.СпецификацияПродукта = СтрокаПродукта.Продукт.СпецификацияПродукта;
			СтрокаПродукта.НомерПродукта = СтрокаПродукта.Продукт.НомерИзделия;
			//rarus vikhle 20.02.2021 mt 16181 +++ заполняется ранее
			//СтрокаПродукта.DD = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "DD");
			//СтрокаПродукта.DD2 = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод, "DD2");
			//rarus vikhle 20.02.2021 mt 16181 --- 
			Если НЕ ЗначениеЗаполнено(СтрокаПродукта.DDЗапрошенная) Тогда
				СтрокаПродукта.DDЗапрошенная = ?(ЗначениеЗаполнено(СтрокаПродукта.DD2),СтрокаПродукта.DD2,СтрокаПродукта.DD);
			КонецЕсли;
			
			//rarus vikhle 12.10.2021 m 18292 +++
			//СтрокаПродукта.ДокументУстановкиПлановыхЦен = СтрокаПродукта.Продукт.ДокументУстановкиПлановыхЦенПродукта; 
			СтрокаПродукта.ДокументУстановкиПлановыхЦен = ДокументыЦен[СтрокаПродукта.Продукт];
			//rarus vikhle 12.10.2021 m 18292 ---
			
			//rarus vikhle 14.05.2021 mt 17733 +++
			Если НЕ СтрокаПродукта.ДокументУстановкиПлановыхЦен.Пустая() Тогда 
				СтрокаПродукта.ИтоговаяСумма = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПродукта.ДокументУстановкиПлановыхЦен,"ЦенаDealerNetСоСкидкой"); 
			ИначеЕсли Объект.ЗаявкаНаБУПродукты Тогда //rarus vikhle 14.09.2021 mt 18282 +++
				ОбновитьИтоговуюСуммуПродукта(СтрокаПродукта); //rarus vikhle 14.09.2021 mt 18282 ---
			КонецЕсли;	
			//rarus vikhle 14.05.2021 mt 17733 ---
			
			//rarus agar 10.20.2020 16930 ++
			СтрокаПродукта.Местонахождение = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестоположениеИзделия(СтрокаПродукта.Продукт);
			//rarus agar 10.20.2020 16930 --
			СтрокаПродукта.УникальностьСпецификации = СтрокаПродукта.Продукт.ТипСпецификации;//rarus vikhle 31.12.2020 mt 17056
			//rarus agar 07.04.2021 17394 ++
			Если     СтрокаПродукта.Продукт.ТипСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") 
				И Не СтрокаПродукта.Продукт.СтандартнаяСпецификация.Пустая()
				Тогда
				СтрокаПродукта.НомерСпецификации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПродукта.Продукт.СтандартнаяСпецификация, "НомерСпецификации");
			КонецЕсли;
			//rarus agar 07.04.2021 17394 --
			Если СтрокаПродукта.СпециальныеУсловия.Пустая() Тогда //rarus vikhle 10.06.2021 mt 17636
				ОбщаяСуммаСоглашения = ОбщаяСуммаСоглашения + СтрокаПродукта.ИтоговаяСумма; 
			КонецЕсли;	
			//rarus vikhle 21.01.2021 mt 16981 +++
			СтрокаПродукта.ЗапретНаИзменениеСкладаОтгрузки = СтрокаПродукта.Продукт.ЗапретИзмененияСкладаПродажи;
			Если СтрокаПродукта.СкладПродажи.Пустая() Тогда  
				СтрокаПродукта.СкладПродажи  = СтрокаПродукта.Продукт.СкладПродажи;
			КонецЕсли;	
								
			Если НЕ СтрокаПродукта.Продукт.МестоПередачи.Пустая() Тогда 
				СтрокаПродукта.МестоПередачи = СтрокаПродукта.Продукт.МестоПередачи;
			Иначе
				СтрокаПродукта.МестоПередачи = СтрокаПродукта.СкладОтгрузки;
			КонецЕсли;	
			//rarus vikhle 21.01.2021 mt 16981 ---
			
			// rarus agar 23.06.2021 17892 ++
			СтрокаПродукта.Кузовостроитель = КузовостроителиЗаказов.Получить(СтрокаПродукта.ЗаказНаЗавод);
			// rarus agar 23.06.2021 17892 --
			
			СтрокаПродукта.ВходитВОчередьDD2DDSИнформера = НаличиеЗаказовВDD2DDSИнформере[СтрокаПродукта.ЗаказНаЗавод];//rarus vikhle 31.08.2021 mt 17933
						
		ИначеЕсли ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда 
			Если СтрокаПродукта.СпециальныеУсловия.Пустая() Тогда
				СтрокаПродукта.ИтоговаяСумма = СтрокаПродукта.ЦенаСНДС * СтрокаПродукта.Количество;//rarus vikhle 29.12.2020 mt 16181 добавил количество
			Иначе
				СтрокаПродукта.ИтоговаяСумма = СтрокаПродукта.СпециальныеУсловия.СпецDealerNet * СтрокаПродукта.Количество;//rarus vikhle 29.12.2020 mt 16181 добавил количество
			КонецЕсли;	
			Если НЕ СтрокаПродукта.ПроцентДрайв = 0 Тогда
				СтрокаПродукта.ИтоговаяСумма = СтрокаПродукта.ИтоговаяСумма - (СтрокаПродукта.ИтоговаяСумма * СтрокаПродукта.ПроцентДрайв / 100); 
			КонецЕсли;
			ОбщаяСуммаСоглашения = ОбщаяСуммаСоглашения + СтрокаПродукта.ИтоговаяСумма; //rarus vikhle 10.06.2021 mt 17636 //rarus vikhle 06.07.2021 17637 Откат, раскомментировал
			СтрокаПродукта.Модель = СтрокаПродукта.Продукт.Модель;
		КонецЕсли;	
	КонецЦикла;
	//rarus vikhle 10.11.2020 mt 16181 ---
	//ОбновитьОбщуюСуммуСоглашения();//rarus vikhle 13.05.2021 mt 17733 //rarus vikhle 04.08.2021 mt 17637 закомментировал
	ОбщаяСуммаСоглашения = СписокПродуктов.Итог("ИтоговаяСумма");  //rarus vikhle 10.08.2021 mt 17637
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьСебестоимостьВСписке(ДляВсех = Ложь);
	
	//rarus vikhle 11.11.2020 mt 16181 +++
	//Если Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UO") ИЛИ //rarus vikhle 24.05.2021 mt 17780 +-
	//	Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UUO") Тогда
	Если ДляВсех И СписокПродуктов.Количество() > 1 Тогда
		ЗаполнитьСебестоимостьДляВсех();
	Иначе
		ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;	
		Если НЕ ТекущиеДанные = Неопределено И НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
			СебестоимостьСУ = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"СебестоимостьСНДС");
			ТекущиеДанные.Себестоимость = СебестоимостьСУ;
		КонецЕсли;
    КонецЕсли;	
	//КонецЕсли;
	//rarus vikhle 11.11.2020 mt 16181 ---
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСебестоимостьДляВсех()
	
	//rarus vikhle 11.11.2020 mt 16181 +++	
	СебестоимостьОбновлена = Ложь;
	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
		Если НЕ СтрокаСписка.СпециальныеУсловия.Пустая() Тогда
			СтрокаСписка.Себестоимость = СтрокаСписка.СпециальныеУсловия.СебестоимостьСНДС;	
			СебестоимостьОбновлена = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	Если СебестоимостьОбновлена Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Колонка ""Себестоимость"" обновлена из специальных условий'"));
	КонецЕсли;	
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Scan_КалькуляцияРасчетныеСоставляющие.Значение КАК Значение
	//               |ИЗ
	//               |	Документ.Scan_Калькуляция.РасчетныеСоставляющие КАК Scan_КалькуляцияРасчетныеСоставляющие
	//               |ГДЕ
	//               |	Scan_КалькуляцияРасчетныеСоставляющие.СоставляющаяРасчета.Идентификатор = ""СебестоимосьSRUСНДСПТС""
	//               |	И Scan_КалькуляцияРасчетныеСоставляющие.СтандартнаяСпецификация = &СтандартнаяСпецификация";
	//Запрос.УстановитьПараметр("СтандартнаяСпецификация",Объект.СтандартнаяСпецификация);
	//РезультатЗапроса = Запрос.Выполнить();
	//Выборка = РезультатЗапроса.Выбрать();
	//rarus vikhle 11.11.2020 mt 16181 ---
		
КонецПроцедуры	

&НаКлиенте
Процедура ОчиститьКолонкуСпискаПродуктов(ИмяКолонки)
	
	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//НужноОбновитьУсловияОплаты = Ложь; //rarus vikhle 17.06.2021 mt 17637
	//МассивПродуктов = Новый Массив; //rarus vikhle 22.06.2021 mt 17637
	//rarus vikhle 06.07.2021 17637 ---
	
	МассивИДСтрокПродуктов	= Новый Массив;//rarus vikhle 02.08.2021 m 17637
	
	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
		Если СтрокаСписка.Флаг Тогда
			//rarus vikhle 24.05.2021 mt 17780 +++
			Если ИмяКолонки = "Себестоимость" И (СтрокаСписка.ЦенаПоВалютнойОговорке = 0 И НЕ СтрокаСписка.СпециальныеУсловия.Пустая()) Тогда
				Если Элементы.СписокПродуктовСебестоимость.Видимость Тогда // rarus vikhle 27.12.2021 m 18269
					ИндексСтроки = СписокПродуктов.Индекс(СтрокаСписка);
					ПутьКПолюСс = "СписокПродуктов[" + ИндексСтроки + "]" + ".Себестоимость";
					ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 не была изменена с/с, т.к. указаны СУ и не заполнена цена по валютной оговорке.'"),,ПутьКПолюСс,,,СтрокаСписка.Продукт);
				КонецЕсли;
			Иначе
				СтрокаСписка[ИмяКолонки] = 0;	
				//rarus vikhle 02.08.2021 17637 +++ Раскомментировал
				//rarus vikhle 17.06.2021 mt 17637 +++
				Если ИмяКолонки = "DDS"
					И ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
					//И НЕ СтрокаСписка.СпециальныеУсловия.Пустая() Тогда
					//НужноОбновитьУсловияОплаты = Истина;
					//МассивПродуктов.Добавить(СтрокаСписка.Продукт)//rarus vikhle 22.06.2021 mt 17637
					
					МассивИДСтрокПродуктов.Добавить(СтрокаСписка.ПолучитьИдентификатор());
					
				КонецЕсли;	
				//rarus vikhle 17.06.2021 mt 17637 ---	
				//rarus vikhle 02.08.2021 17637 ---
			КонецЕсли;
			//rarus vikhle 24.05.2021 mt 17780 ---
		КонецЕсли;	
	КонецЦикла;
	
	//rarus vikhle 02.08.2021 mt 17637 +++ Закомментировал
	//Если ИмяКолонки = "DDS" 
	//	//И Элементы.ГрафикПлатежей.Видимость //rarus vikhle 24.12.2020 mt 17026  
	//	Тогда
	//	ОбновитьГрафикПлатежей();//rarus vikhle 06.07.2021 17637 Откат, раскомментировал
	//	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//	//rarus vikhle 17.06.2021 mt 17637 +++
	//	//Если НужноОбновитьУсловияОплаты Тогда
	//	//	ОбновитьУсловияОплаты(Ложь,МассивПродуктов);
	//	//Иначе	
	//	//	ОбновитьГрафикПлатежей();	
	//	//КонецЕсли;
	//	//rarus vikhle 17.06.2021 mt 17637 ---
	//	//rarus vikhle 06.07.2021 17637 ---
	//КонецЕсли;	
	//rarus vikhle 02.08.2021 mt 17637
	
	//rarus vikhle 02.08.2021 mt 17637 +++
	Если МассивИДСтрокПродуктов.Количество() > 0 Тогда
		ОбновитьУсловияОплатыПоПродуктам(МассивИДСтрокПродуктов, Ложь);
	КонецЕсли;	
	//rarus vikhle 02.08.2021 mt 17637 ---
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКомандуЗаполнения(Команда)
	ОчиститьСообщения();
	
	ПараметрыОтбора = Новый Структура("Флаг",Истина);
	Если СписокПродуктов.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда 
		ВывестиСообщениеПол(Нстр("ru = 'В списке продуктов нет выделенных строк'"));
		Возврат;
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗаполненияЗначения",ЭтотОбъект,Новый Структура("Команда",Команда));
	
	Если Команда = Команды.ЗаполнитьDDS Тогда
		ПоказатьВводДаты(ОписаниеОповещения,,Нстр("ru = 'Укажите дату DDS'"),ЧастиДаты.Дата);		
	ИначеЕсли Команда = Команды.ЗаполнитьDDЗапрошенную Тогда 	
		ПоказатьВводДаты(ОписаниеОповещения,,Нстр("ru = 'Укажите дату DD запрошенную'"),ЧастиДаты.Дата);	
	ИначеЕсли Команда = Команды.ЗаполнитьСебестоимость Тогда
		КвалификаторыЧисла = Новый КвалификаторыЧисла(15,2,ДопустимыйЗнак.Неотрицательный);
		ПоказатьВводЗначения(ОписаниеОповещения,0,Нстр("ru = 'Укажите себестоимость вкл. НДС'"),Новый ОписаниеТипов("Число",КвалификаторыЧисла));
	//rarus vikhle 19.01.2021 mt 16981 +++	
	ИначеЕсли Команда = Команды.ЗаполнитьЗапрашиваемоеМестоПередачи Тогда
		ОткрытьФорму("Справочник.Scan_Склады.ФормаВыбора",,,,,,ОписаниеОповещения);
	ИначеЕсли Команда = Команды.ЗаполнитьСкладПродажи Тогда
		ОткрытьФорму("Справочник.Scan_Склады.ФормаВыбора",,,,,,ОписаниеОповещения);
	ИначеЕсли Команда = Команды.ЗаполнитьМестоПередачи Тогда
		ОткрытьФорму("Справочник.Scan_Склады.ФормаВыбора",,,,,,ОписаниеОповещения);
	// rarus tenkam 02.04.2021 mantis 17419 +++
	ИначеЕсли Команда = Команды.ЗаполнитьЦенаПоВалютнойОговорке Тогда
		КвалификаторыЧисла = Новый КвалификаторыЧисла(15,2,ДопустимыйЗнак.Неотрицательный);
		ПоказатьВводЗначения(ОписаниеОповещения,0,Нстр("ru = 'Укажите цену по валютной оговорке'"),Новый ОписаниеТипов("Число",КвалификаторыЧисла));
	ИначеЕсли Команда = Команды.ЗаполнитьДатаПерерасчета Тогда 	
		ПоказатьВводДаты(ОписаниеОповещения,,Нстр("ru = 'Укажите дату перерасчета по валютной оговорке'"),ЧастиДаты.Дата);	
	// rarus tenkam 02.04.2021 mantis 17419 ---
	КонецЕсли;	
	//rarus vikhle 19.01.2021 mt 16981 ---
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаполненияЗначения(Результат,ДопПараметры) Экспорт 
	
	Если НЕ Результат = Неопределено Тогда
		
		//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
		//НужноОбновитьУсловияОплаты	= Ложь;//rarus vikhle 15.06.2021 mt 17637
		//МассивПродуктов				= Новый Массив;//rarus vikhle 22.06.2021 mt 17637
		//rarus vikhle 06.07.2021 17637 ---
		
		//rarus vikhle 29.07.2021 mt 17637 +++
		МассивИДСтрокПродуктов	= Новый Массив;
		ИзмененаЦена			= Истина;
		//rarus vikhle 29.07.2021 mt 17637 ---
				
		//rarus vikhle 13.01.2022 m 18269 +++
		// rarus vikhle 21.12.2021 m 18269 +++
		//Если ДопПараметры.Команда = Команды.ЗаполнитьСебестоимость
		//	И НЕ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UO")
		//	И НЕ Объект.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.UUO") Тогда
		//	ВывестиСообщениеПол(Нстр("ru = 'Изменение себестоимости доступно только для заявок с типом спецификации UO/UUO.'"));
		//	Возврат;
		//КонецЕсли;	
		// rarus vikhle 21.12.2021 m 18269 ---
		//rarus vikhle 13.01.2022 m 18269 ---
				
		Для Каждого СтрокаСписка Из СписокПродуктов Цикл
			Если СтрокаСписка.Флаг Тогда
				Если ДопПараметры.Команда = Команды.ЗаполнитьDDЗапрошенную Тогда
					Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
						СтрокаСписка.DDЗапрошенная = Результат;
					Иначе
						ВывестиСообщениеПол(Нстр("ru = 'Заполнение запрошенной даты DD доступно только для драфтов продуктов (с размещением в производство).'"));	
					КонецЕсли;
				ИначеЕсли ДопПараметры.Команда = Команды.ЗаполнитьDDS Тогда 
					Если ЗначениеЗаполнено(СтрокаСписка.DD) Тогда //rarus vikhle 01.02.2021 mt 17179
						СтрокаСписка.DDS = Результат;
						//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
						//rarus vikhle 15.06.2021 mt 17637 +++
						//Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия")
						//	И НЕ СтрокаСписка.СпециальныеУсловия.Пустая() Тогда//rarus vikhle 22.06.2021 mt 17637
						//	НужноОбновитьУсловияОплаты = Истина;
						//	МассивПродуктов.Добавить(СтрокаСписка.Продукт);
						//КонецЕсли;	
						//rarus vikhle 15.06.2021 mt 17637 ---
						//rarus vikhle 06.07.2021 17637 ---
						
						//rarus vikhle 29.07.2021 mt 17637 +++
						Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
							МассивИДСтрокПродуктов.Добавить(СтрокаСписка.ПолучитьИдентификатор());
							ИзмененаЦена = Ложь;
						КонецЕсли;	
						//rarus vikhle 29.07.2021 mt 17637 ---
						
					Иначе
						ВывестиСообщениеПол(Нстр("ru ='У продукта %1 отсутствует дата DD, заполнение не выполнено.'"),,,,,СтрокаСписка.Продукт); //rarus vikhle 01.02.2021 mt 17179	
					КонецЕсли;	
				ИначеЕсли ДопПараметры.Команда = Команды.ЗаполнитьСебестоимость Тогда 
					//rarus vikhle 24.05.2021 mt 17780 +++
					Если НЕ (СтрокаСписка.ЦенаПоВалютнойОговорке = 0 И НЕ СтрокаСписка.СпециальныеУсловия.Пустая()) Тогда
						СтрокаСписка.Себестоимость = Результат; 	
					Иначе
						ИндексСтроки = СписокПродуктов.Индекс(СтрокаСписка);
						ПутьКПолюСс = "СписокПродуктов[" + ИндексСтроки + "]" + ".Себестоимость";
						ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 не была изменена с/с, т.к. указаны СУ и не заполнена цена по валютной оговорке.'"),,ПутьКПолюСс,,,СтрокаСписка.Продукт);
					КонецЕсли;	
					//rarus vikhle 24.05.2021 mt 17780 ---
				//rarus viklhe 19.01.2021 mt 16981 +++	
				ИначеЕсли ДопПараметры.Команда = Команды.ЗаполнитьЗапрашиваемоеМестоПередачи Тогда
					СтрокаСписка.СкладОтгрузки = Результат;
					СтрокаСписка.ПриоритетныйСклад = (СтрокаСписка.СкладОтгрузки = ПриоритетныйСклад  И НЕ ПриоритетныйСклад.Пустая());
					Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда //rarus vikhle 11.02.2021
						СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(СтрокаСписка.Продукт,"СкладПродажи,МестоПередачи");
						Если СтруктураРеквизитов.СкладПродажи = ПредопределенноеЗначение("Справочник.Scan_Склады.ПустаяСсылка") Тогда
							СтрокаСписка.СкладПродажи = СтрокаСписка.СкладОтгрузки; 		
						КонецЕсли;
						Если СтруктураРеквизитов.МестоПередачи = ПредопределенноеЗначение("Справочник.Scan_Склады.ПустаяСсылка") Тогда
							СтрокаСписка.МестоПередачи = СтрокаСписка.СкладОтгрузки; 		
						КонецЕсли;
					КонецЕсли;	
				ИначеЕсли ДопПараметры.Команда = Команды.ЗаполнитьСкладПродажи Тогда
					Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
						Если НЕ СтрокаСписка.ЗапретНаИзменениеСкладаОтгрузки Тогда
							СтрокаСписка.СкладПродажи  = Результат;
						Иначе
							ВывестиСообщениеПол(Нстр("ru ='Для продукта %1 установлен запрет на изменение склада продажи, заполнение не выполнено.'"),,,,,СтрокаСписка.Продукт);
						КонецЕсли;	
					КонецЕсли;	
				ИначеЕсли ДопПараметры.Команда = Команды.ЗаполнитьМестоПередачи Тогда
					Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
						СтрокаСписка.МестоПередачи = Результат;
					КонецЕсли;
				// rarus tenkam 02.04.2021 mantis 17419 +++
				ИначеЕсли ДопПараметры.Команда = Команды.ЗаполнитьЦенаПоВалютнойОговорке Тогда
					Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
						//СтароеЗначениеЦены = СтрокаСписка.ЦенаПоВалютнойОговорке;
						СтрокаСписка.ЦенаПоВалютнойОговорке = Результат;
						
						//rarus vikhle 29.07.2021 17637 +++ Раскомментировал
						//rarus vikhle 15.06.2021 mt 17637 +++
						Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
							//rarus vikhle 29.07.2021 mt 17637 +++
							//И НЕ СтрокаСписка.СпециальныеУсловия.Пустая() Тогда//rarus vikhle 22.06.2021 mt 17637
							//НужноОбновитьУсловияОплаты = Истина;
							//МассивПродуктов.Добавить(СтрокаСписка.Продукт);
							
							Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
								МассивИДСтрокПродуктов.Добавить(СтрокаСписка.ПолучитьИдентификатор());
							КонецЕсли;	
							//rarus vikhle 29.07.2021 mt 17637 ---
						Иначе
							ОбновитьИтоговуюСуммуДрафта(СтрокаСписка);  //rarus vikhle 04.08.2021 mt 17637+ параметр
						КонецЕсли;	
						//rarus vikhle 15.06.2021 mt 17637 ---
						//rarus vikhle 06.07.2021 17637 ---
						
						//// Если изменилось значение цены, то обновим колонку с датой перерасчета
						//Если СтароеЗначениеЦены <> СтрокаСписка.ЦенаПоВалютнойОговорке Тогда
						//	Если ЗначениеЗаполнено(СтрокаСписка.ЦенаПоВалютнойОговорке) Тогда
						//		СтрокаСписка.ДатаПерерасчета = ТекущаяДата();
						//	Иначе
						//		СтрокаСписка.ДатаПерерасчета = Дата('00010101');
						//	КонецЕсли;
						//КонецЕсли; 						
					КонецЕсли;
				ИначеЕсли ДопПараметры.Команда = Команды.ЗаполнитьДатаПерерасчета Тогда
					Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
						СтрокаСписка.ДатаПерерасчета = Результат;
					КонецЕсли;
				// rarus tenkam 02.04.2021 mantis 17419 ---					
				КонецЕсли;
				//rarus viklhe 19.01.2021 mt 16981 ---
			КонецЕсли;	
		КонецЦикла;
		
		//rarus vikhle 15.06.2021 mt 17637 +++
		//rarus vikhle 29.07.2021 17637 Закомментировал
		//Если ДопПараметры.Команда = Команды.ЗаполнитьDDS 
		//	//И Элементы.ГрафикПлатежей.Видимость //rarus vikhle 24.12.2020 mt 17026 
		//	Тогда
		//	ОбновитьГрафикПлатежей();
		//КонецЕсли;
		//rarus vikhle 29.07.2021 17637 ---
		
		//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
		//Если ДопПараметры.Команда = Команды.ЗаполнитьDDS ИЛИ ДопПараметры.Команда = Команды.ЗаполнитьЦенаПоВалютнойОговорке Тогда
		//	Если НужноОбновитьУсловияОплаты Тогда
		//		ОбновитьУсловияОплаты(Ложь,МассивПродуктов);	
		//	Иначе
		//		ОбновитьГрафикПлатежей();
		//	КонецЕсли;
		//КонецЕсли;	
		//rarus vikhle 06.07.2021 17637 ---
		//rarus vikhle 15.06.2021 mt 17637 ---
		
		
		//rarus vikhle 29.07.2021 mt 17637 +++
		Если ДопПараметры.Команда = Команды.ЗаполнитьDDS 
			ИЛИ ДопПараметры.Команда = Команды.ЗаполнитьЦенаПоВалютнойОговорке
			И МассивИДСтрокПродуктов.Количество() > 0 Тогда
			ОбновитьУсловияОплатыПоПродуктам(МассивИДСтрокПродуктов, ИзмененаЦена);			
		КонецЕсли;	
		//rarus vikhle 29.07.2021 mt 17637 ---
		
		
		// rarus tenkam 02.04.2021 mantis 17419 +++
		Если ДопПараметры.Команда = Команды.ЗаполнитьЦенаПоВалютнойОговорке Тогда			
			//ОбновитьУсловияОплаты();//rarus vikhle 29.07.2021 17637 Закомментировал
			ОбновитьПризнакВалютнаяОговорка();
		КонецЕсли;
		// rarus tenkam 02.04.2021 mantis 17419 ---
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры	
//rarus vikhle 04.12.2020 mt 16892 ---

// rarus tenkam 02.04.2021 mantis 17419 +++
&НаКлиенте
Процедура ОбновитьПризнакВалютнаяОговорка()
	Объект.ВалютнаяОговорка = Ложь;
	Для Каждого ТекСтрока Из СписокПродуктов Цикл
		Если ЗначениеЗаполнено(ТекСтрока.ЦенаПоВалютнойОговорке) Тогда
			Объект.ВалютнаяОговорка = Истина;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры
// rarus tenkam 02.04.2021 mantis 17419 ---

//rarus agar 09.12.2020 16892 ++
&НаСервереБезКонтекста
Функция ПолучитьКомпанииКонтрагента(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания КАК Компания
	|ИЗ
	|	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	|ГДЕ
	|	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	РезультатЗапроса = Запрос.Выполнить();
	КомпанииКонтрагента = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Компания");
	
	Возврат КомпанииКонтрагента;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонтрагентовКомпании(Компания)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Контрагент КАК Контрагент
	               |ИЗ
	               |	РегистрСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами КАК Scan_ВзаимосвязьКомпанийСКонтрагентами
	               |ГДЕ
	               |	Scan_ВзаимосвязьКомпанийСКонтрагентами.Компания = &Компания";
	Запрос.УстановитьПараметр("Компания",Компания);
	РезультатЗапроса = Запрос.Выполнить();
	КонтрагентыКомпании = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Контрагент");
	
	Возврат КонтрагентыКомпании;
	
КонецФункции
//rarus agar 09.12.2020 16892 --

&НаСервере
Функция ПолучитьМассивЗаказов()
	
	МассивЗаказов = ОбщегоНазначения.ВыгрузитьКолонку(СписокПродуктов,"ЗаказНаЗавод",Истина);
	иПустогоЭлемента = МассивЗаказов.Найти(Справочники.Scan_ЗаказыНаЗавод.ПустаяСсылка()); 
	Если иПустогоЭлемента <> Неопределено Тогда
		МассивЗаказов.Удалить(иПустогоЭлемента);
	КонецЕсли;	
	Возврат МассивЗаказов;
	       	
КонецФункции	

//rarus vikhle 13.08.2021 АПК +++
//&НаКлиенте
//Процедура СписокПродуктовКоличествоПриИзменении(Элемент)
	//rarus vikhle 09.06.2021 mt 17637 +++
	//ОбновитьУсловияОплаты(); //rarus vikhle 29.12.2020 mt 16181 //rarus vikhle 29.07.2021 17637 Закомментировал
	//ОбновитьИтоговуюСуммуДрафта(); //rarus vikhle 29.07.2021 17637
	 //rarus vikhle 09.06.2021 mt 17637 ---
//КонецПроцедуры
//rarus vikhle 13.08.2021 АПК ---
	
//rarus agar 25.12.2020 17006 ++
&НаСервере
Функция КорректировкиПодчиненныхЗаявокНаОтгрузку()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заявка", Объект.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	СвязанныеДокументы.Ссылка КАК ЗаявкаНаОтгрузку,
	|	ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Документ.Scan_ЗаявкаНаОтгрузку).Номер КАК НомерЗаявкиНаОтгрузку
	|ИЗ
	|	КритерийОтбора.СвязанныеДокументы(&Заявка) КАК СвязанныеДокументы
	|ГДЕ
	|	НЕ СвязанныеДокументы.Ссылка ЕСТЬ NULL
	|	И СвязанныеДокументы.Ссылка ССЫЛКА Документ.Scan_ЗаявкаНаОтгрузку
	|	И НЕ ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Документ.Scan_ЗаявкаНаОтгрузку).ПометкаУдаления
	|	И ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Документ.Scan_ЗаявкаНаОтгрузку).Статус <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отказ)
	|	И ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Документ.Scan_ЗаявкаНаОтгрузку).Статус <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена)";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КорректируемыеЗаявкиНаОтгрузку = Новый Массив;
	НомераКорректируемыхЗаявок     = Новый Массив;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		КорректируемыеЗаявкиНаОтгрузку.Добавить(Выборка.ЗаявкаНаОтгрузку);
		НомераКорректируемыхЗаявок.Добавить(Выборка.НомерЗаявкиНаОтгрузку);
	КонецЦикла;
	
	АдресКорректировок = ПоместитьВоВременноеХранилище(КорректируемыеЗаявкиНаОтгрузку, Новый УникальныйИдентификатор);
	
	Если НомераКорректируемыхЗаявок.Количество() > 0 Тогда
		ШаблонФрагментаТекста = "Внимание! 
		                        |У расторгаемой заявки есть подчиненные заявки на отгрузку №№ %1 . При подтверждении расторжения у указанных заявок на отгрузку будет установлен статус ""Отменена"". 
								|Продолжить?";
		ТекстКорректировок = СтрШаблон(ШаблонФрагментаТекста, СтрСоединить(НомераКорректируемыхЗаявок, ", "));
	КонецЕсли;
		
	КорректировкиЗаявокНаОтгрузку = Новый Структура;
	КорректировкиЗаявокНаОтгрузку.Вставить("АдресКорректировок", АдресКорректировок);
	КорректировкиЗаявокНаОтгрузку.Вставить("ТекстКорректировок", ТекстКорректировок);
	
	Возврат КорректировкиЗаявокНаОтгрузку;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОбработатьКорректировкиЗаявокНаОтгрузку(АдресКорректировокЗаявокНаОтгрузку)
	
	КорректируемыеЗаявкиНаОтгрузку = ПолучитьИзВременногоХранилища(АдресКорректировокЗаявокНаОтгрузку);
	
	Для Каждого КорректируемаяЗаявкаНаОтгрузку Из КорректируемыеЗаявкиНаОтгрузку Цикл
		ЗаявкаНаОтгрузкуОбъект = КорректируемаяЗаявкаНаОтгрузку.ПолучитьОбъект();
		ЗаявкаНаОтгрузкуОбъект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена");
		
		Попытка
			ЗаявкаНаОтгрузкуОбъект.Записать();
			ВывестиСообщениеПол(Нстр("ru = 'Скорректирована заявка на отгрузку № '"+ЗаявкаНаОтгрузкуОбъект.Номер));
		Исключение
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при корректировке заявки на отгрузку №.'"+ЗаявкаНаОтгрузкуОбъект.Номер));
			ЗаписьЖурналаРегистрации(Нстр("ru = 'Корректировка заявки на отгрузку'"),
									УровеньЖурналаРегистрации.Ошибка,,,
									Нстр("ru = 'Произошла ошибка при корректировке заявки на отгрузку №.'"+ЗаявкаНаОтгрузкуОбъект.Номер) +  ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры
//rarus agar 25.12.2020 17006 --

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыОбъекта(Ссылка,Реквизиты)
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,Реквизиты); //rarus vikhle 26.01.2021 mt 16981
КонецФункции

//rarus vikhle 20.02.2021 mt 16181 +++
&НаСервере
Функция ПолучитьКлючевыеДаты(ПродуктыЗаявки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	|	Scan_СводнаяИнформацияПоПродукту.DD КАК DD,
	|	Scan_СводнаяИнформацияПоПродукту.DD2 КАК DD2,
	|	ВЫБОР
	|		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	|			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	|		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	|	КОНЕЦ КАК ДатаПродажиДилеру,
	|	ВЫБОР
	|		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	|			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	|		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
	|	КОНЕЦ КАК ДатаПродажиКлиенту,
	// rarus agar 24.06.2021 17921 ++
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПоступленияИнвойса1С КАК ДатаПоступленияИнвойса1С,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия КАК ДатаПродажиИзделия
	// rarus agar 24.06.2021 17921 --
	|ИЗ
	|	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	|ГДЕ
	|	Scan_СводнаяИнформацияПоПродукту.Продукт В(&ПродуктыЗаявки)";
	Запрос.УстановитьПараметр("ПродуктыЗаявки",ПродуктыЗаявки);
	ТаблицаКлючевыхДат = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаКлючевыхДат;
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеПоЗаказам(ПродуктыЗаявки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие КАК Продукт,
	               |	Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.ЗаказНаЗавод КАК ЗаказНаЗавод
	               |ПОМЕСТИТЬ СвязьЗаказовПродуктов
	               |ИЗ
	               |	РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних(, Изделие В (&ПродуктыЗаявки)) КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СвязьЗаказовПродуктов.Продукт КАК Продукт,
	               |	СвязьЗаказовПродуктов.ЗаказНаЗавод КАК ЗаказНаЗавод,
	               |	Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК ТипЗаказа
	               |ИЗ
	               |	СвязьЗаказовПродуктов КАК СвязьЗаказовПродуктов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
	               |				,
	               |				Заказ В
	               |						(ВЫБРАТЬ
	               |							СвязьЗаказовПродуктов.ЗаказНаЗавод
	               |						ИЗ
	               |							СвязьЗаказовПродуктов КАК СвязьЗаказовПродуктов)
	               |					И РЕКВИЗИТ = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
	               |		ПО СвязьЗаказовПродуктов.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ";
	Запрос.УстановитьПараметр("ПродуктыЗаявки",ПродуктыЗаявки);
	ТаблицаДанныхПоЗаказам = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаДанныхПоЗаказам;
	
КонецФункции	
//rarus vikhle 20.02.2021 mt 16181 ---

//rarus vikhle 28.02.2021 mt 17186 +++
&НаСервереБезКонтекста
Функция СпецификацииСовпадают(Продукт,СУ,Заявка)
	
	Возврат Scan_ВспомогательныеФункцииСервер.СпецификацииСовпадают(Продукт,СУ,Заявка);
		
КонецФункции	
//rarus vikhle 28.02.2021 mt 17186 ---

//rarus agar 09.03.2021 17372 ++
&НаСервереБезКонтекста
Функция ПолучитьКомпанииПользователя()
	
	КомпанииСКонтрагентами = РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПараметрыСеанса.ТекущийПользователь);
	КомпанииПользователя   = КомпанииСКонтрагентами.ВыгрузитьКолонку("Компания");
	
	Возврат КомпанииПользователя;
	
КонецФункции

//rarus vikhle 26.05.2021 17653 +++
//&НаКлиенте
//Процедура ПослеВыбораДилера(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
//	
//	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
//		Объект.Дилер = РезультатЗакрытия;
//		ПриИзмененииДилераНаСервере();
//	КонецЕсли;
//	
//КонецПроцедуры
//rarus vikhle 26.05.2021 17653 ---

&НаСервере
Процедура ПриИзмененииДилераНаСервере(ОчищеныСУ = Ложь) //rarus vikhle 17.09.2021 mt 18288 + параметр ОчищеныСУ 
	
	СформироватьНаименование();
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Объект.Контрагент = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Объект.Дилер);
	
	Если Объект.Дилер.Пустая() Тогда
		Объект.ПродавецДилера = Неопределено;
	ИначеЕсли Объект.ПродавецДилера.Пустая() Тогда
		Объект.ПродавецДилера = ТекущийПользователь.КонтактноеЛицоКомпании;
	КонецЕсли;
	
	Если Объект.Дилер.Пустая() Тогда
		Объект.РегиональныйМенеджер = Неопределено;
		Объект.ЗакрепленныйМенеджерОКП = Неопределено; //rarus ozhnik 17458 01.04.2021 + 
	Иначе
		// rarus tenkam 21.06.2021 mantis 17742 +++
		Если Объект.ЗаявкаНаАвтобусы Тогда
			Объект.РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровДепартаментаПродажАвтобусовЗаДилерами.ПолучитьЗакрепленногоМенеджера(Объект.Дилер);
		Иначе
		// rarus tenkam 21.06.2021 mantis 17742 ---
			Объект.РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровЗаДилерами.ПолучитьЗакрепленногоМенеджера(Объект.Дилер);
		КонецЕсли;	// rarus tenkam 21.06.2021 mantis 17742 +
		Объект.ЗакрепленныйМенеджерОКП = Документы.Scan_ЗакреплениеМенеджеровОКПЗаДилерами.ПолучитьЗакрепленногоМенеджера(Объект.Дилер); //rarus ozhnik 17458 01.04.2021 + 
	КонецЕсли;
	
	ОбновитьПриоритетныйСклад();//rarus vikhle 16.07.2021 m 18026
	
	//rarus vikhle 17.09.2021 mt 18288 +++
	Если НЕ Объект.Дилер.Пустая()
		И НЕ Объект.УникальностьСпецификации.Пустая()
		И УсловияОплатыСтандартные
		И Scan_ВспомогательныеФункцииСервер.ИзменилсяВидДилера(ПредыдущееЗначениеДилера, Объект.Дилер)
		ИЛИ ОчищеныСУ Тогда
		//rarus vikhle 20.09.2021 mt 18288 +++
		НужноЗаполнитьУсловияЗаявки = ВЗаявкеЕстьПродукты();
		ЗаполнитьСтандартныеУсловияОплаты(НужноЗаполнитьУсловияЗаявки);// Было "(Истина)"
		Если НЕ НужноЗаполнитьУсловияЗаявки Тогда
			ЗаполнитьСгруппированныеУсловия();
		КонецЕсли;	
		//ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
		//rarus vikhle 20.09.2021 mt 18288 ---
	КонецЕсли;	
	//rarus vikhle 17.09.2021 mt 18288 ---
	
КонецПроцедуры
//rarus agar 09.03.2021 17372 --

//rarus vikhle 07.04.2021 mt 17484 +++

//rarus vikhle 27.05.2021 mt 17653 +++ 
&НаКлиенте
Процедура ПослеВопросаУдалениеСУ(РезультатВопроса, СУДругогоДилера) Экспорт 
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОчиститьСУДругогоДилера(СУДругогоДилера);
	Иначе
		Объект.Дилер = ПредыдущееЗначениеДилера;	
	КонецЕсли;	
	
КонецПроцедуры
//rarus vikhle 27.05.2021 mt 17653 ---
//rarus vikhle 07.04.2021 mt 17484 ---

//rarus vikhle 15.04.2021 mt 17484 +++
&НаКлиенте
Процедура ДилерОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Дилер = ВыбраннаяКомпания;
	Иначе
		Объект.Дилер = ПредыдущееЗначениеДилера;//rarus vikhle 26.05.2021 m 17653	
	КонецЕсли;
	
	ДилерПриИзменении(Элементы.Дилер);
	
КонецПроцедуры

&НаКлиенте
Процедура КонечныйКлиентКомпанияОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.КонечныйКлиентКомпания = ВыбраннаяКомпания;
	Иначе
		Объект.КонечныйКлиентКомпания = Неопределено;	
	КонецЕсли;
	
	КонечныйКлиентКомпанияПриИзменении(Элементы.КонечныйКлиентКомпания);
	
КонецПроцедуры

&НаКлиенте
Процедура КузовостроительОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Кузовостроитель = ВыбраннаяКомпания;
	Иначе
		Объект.Кузовостроитель = Неопределено;	
	КонецЕсли;
	
КонецПроцедуры
//rarus vikhle 15.04.2021 mt 17484 ---

//rarus vikhle 07.09.2021 АПК +++
//&НаСервере
//Функция ПроверитьСоздатьДокументыУстановкиПлановыхЦен(ПараметрыЗаписи)	// rarus tenkam 03.04.2021 mantis 17594 +++
//	БылиИзменения = Ложь;
//	Для Каждого СтрокаИзделия Из СписокПродуктов Цикл
//		Если НЕ ЗначениеЗаполнено(СтрокаИзделия.ДокументУстановкиПлановыхЦен) Тогда
//			СоздатьДокументУстановкиПлановыхЦен(СтрокаИзделия);		
//			БылиИзменения = Истина;
//		КонецЕсли;
//	КонецЦикла;
//	Если БылиИзменения Тогда
//		//ОбновитьУсловияОплаты();//rarus vikhle 29.07.2021 mt 17637
//		Если Не Записать(ПараметрыЗаписи) Тогда
//			Возврат Ложь;
//		КонецЕсли;		
//	КонецЕсли;
//	Возврат Истина;
//КонецФункции	// rarus tenkam 03.04.2021 mantis 17594 ---
//rarus vikhle 07.09.2021 АПК ---

&НаСервере
Процедура УстановитьСтатусDELETED()	// rarus tenkam 15.04.2021 mantis 17519 +++
	
	Для Каждого ТекСтрока Из СписокПродуктов Цикл
		ПродуктОбъект = ТекСтрока.Продукт.ПолучитьОбъект();
		ПродуктОбъект.ЛокальныйСтатусПродукта = ПредопределенноеЗначение("Справочник.Scan_ЛокальныеСтатусыПродуктов.DELETED");		
		
		Попытка
			ПродуктОбъект.Записать();
		Исключение
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при установке статуса DELETED для продукта '"+ПродуктОбъект.Ссылка));
			ЗаписьЖурналаРегистрации(Нстр("ru = 'Установка статуса DELETED при расторжении заявк на СОП'"),
									УровеньЖурналаРегистрации.Ошибка,,,
									Нстр("ru = 'Произошла ошибка. Продукт '"+ПродуктОбъект.Ссылка) +  ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры // rarus tenkam 15.04.2021 mantis 17519 ---

//rarus vikhle 25.05.2021 mt 17653 +++
&НаСервере
Функция СУДругогоДилера()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВЫРАЗИТЬ(СписокПродуктов.СпециальныеУсловия КАК Справочник.Scan_СпециальныеУсловия) КАК СпециальныеУсловия
	               |ПОМЕСТИТЬ СУЗаявки
	               |ИЗ
	               |	&СписокПродуктов КАК СписокПродуктов
	               |ГДЕ
	               |	НЕ СписокПродуктов.СпециальныеУсловия = ЗНАЧЕНИЕ(Справочник.Scan_СпециальныеУсловия.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУЗаявки.СпециальныеУсловия КАК СпециальныеУсловия
	               |ИЗ
	               |	СУЗаявки КАК СУЗаявки
	               |ГДЕ
	               |	НЕ СУЗаявки.СпециальныеУсловия.Дилер = &ДилерЗаявки";
	Запрос.УстановитьПараметр("СписокПродуктов",РеквизитФормыВЗначение("СписокПродуктов"));
	Запрос.УстановитьПараметр("ДилерЗаявки",Объект.Дилер);
	СУДругогоДилера = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СпециальныеУсловия");
	
	Возврат СУДругогоДилера;
		
КонецФункции

&НаСервере
Процедура ОчиститьСУДругогоДилера(СУДругогоДилера)
	
	Для Каждого СУ Из СУДругогоДилера Цикл 
		СтруктураОтбора = Новый Структура("СпециальныеУсловия",СУ);
		мСтрокСпискаПродуктов = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
		Для Каждого СтрокаСпискаПродуктов Из мСтрокСпискаПродуктов Цикл
			СтрокаСпискаПродуктов.СпециальныеУсловия = Справочники.Scan_СпециальныеУсловия.ПустаяСсылка();
			ОбновитьУсловияОплаты(СтрокаСпискаПродуктов.ПолучитьИдентификатор());//rarus vikhle 03.08.2021 mt 17637	
		КонецЦикла;	
	КонецЦикла;
	
	//ОбновитьУсловияОплаты();//rarus vikhle 29.07.2021 mt 17637
	ПриИзмененииДилераНаСервере(Истина);
	
КонецПроцедуры	
//rarus vikhle 25.05.2021 mt 17653 ---	

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПередУдалением(Элемент, Отказ)
//	//rarus vikhle 06.07.2021 17637 +++ 
//	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//	//ТекущиеДанные = Элемент.ТекущиеДанные;
//	//Если НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
//	//	ВывестиСообщениеПол(Нстр("ru = 'Запрещено удалять строки с заполненными СУ'"));
//	//	Отказ = Истина;
//	//КонецЕсли;	
//	//rarus vikhle 08.06.2021 mt 17637 ---
//	//rarus vikhle 06.07.2021 17637 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 09.06.2021 mt 17637 +++
//rarus vikhle 28.07.2021 17637 +++ Раскомментировал
&НаСервере
Функция ОдинаковыеСУУВсехПродуктов()
	
	СУ = ОбщегоНазначения.ВыгрузитьКолонку(СписокПродуктов,"СпециальныеУсловия",Истина);
	Возврат СУ.Количество() = 1 И НЕ СУ[0].Пустая();
	
КонецФункции	
//rarus vikhle 28.07.2021 17637 ---

&НаСервереБезКонтекста
Функция ПродуктУказанВСУ(СУ, Продукт)
	// Для СУ с незаполненным списком продуктов не проверяем вхождение продукта из заявки, 
	// с заполненным списком - проверяем.  
	// Может принимать массив продуктов
	
	//rarus vikhle 02.08.2021 mt 17637 +++
	//Возврат СУ.СписокПродуктов.Количество() = 0 ИЛИ СУ.СписокПродуктов.Найти(Продукт) <> Неопределено; 
	Если СУ.СписокПродуктов.Количество() = 0 Тогда
		Возврат Истина;
	Иначе
		Если ТипЗнч(Продукт) = Тип("Массив") Тогда
			// Проверяем вхождение всех продуктов из переданного массива в тч СписокПродуктов СУ
			ПродуктыСУ				= ОбщегоНазначения.ВыгрузитьКолонку(СУ.СписокПродуктов, "Продукт");
			ОтсутствующиеПродукты	= ОбщегоНазначенияКлиентСервер.РазностьМассивов(Продукт, ПродуктыСУ); 
			Возврат ОтсутствующиеПродукты.Количество() = 0;
		Иначе 	
			Возврат СУ.СписокПродуктов.Найти(Продукт) <> Неопределено; 
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 02.08.2021 mt 1763 ---
	
КонецФункции	

//&НаСервере
//Процедура ОбработатьУсловияОплатыСУ()
//	
//	ТекущиеДанные		= СписокПродуктов.НайтиПоИдентификатору(Элементы.СписокПродуктов.ТекущаяСтрока);
//	СУ					= ТекущиеДанные.СпециальныеУсловия;
//	ДатаНачалаДоговора  = Неопределено;
//	
//	//Удаление существующих строк с текущим продуктом в т.ч. "Условия оплаты" заявки
//	УдалитьУсловияОплатыПродукта(ТекущиеДанные.Продукт);
//		
//	Если СУ.Пустая() Тогда
//		ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);//rarus vikhle 01.07.2021 m 17944
//		Возврат;
//	КонецЕсли;	
//	
//	//Перенос условий оплаты из СУ
//	Для Каждого СтрокаУсловийСУ Из СУ.УсловияОплаты Цикл
//		СтрокаУсловийЗаявки 					= Объект.УсловияОплаты.Добавить();
//		СтрокаУсловийЗаявки.Продукт				= ТекущиеДанные.Продукт;
//		СтрокаУсловийЗаявки.СпециальныеУсловия	= СУ;
//		ЗаполнитьЗначенияСвойств(СтрокаУсловийЗаявки, СтрокаУсловийСУ,,"Сумма,КрайняяДатаОплаты");
//		
//		Если СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора
//			И НЕ Объект.Договор.Пустая() Тогда 
//			Если ДатаНачалаДоговора = Неопределено Тогда
//				ДатаНачалаДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор,"ДатаНачала"); 
//			КонецЕсли;	
//			СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора,СтрокаУсловийЗаявки.СрокОплатыАванса);
//		ИначеЕсли СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS
//			И НЕ ТекущиеДанные.DDS = Дата(1,1,1) Тогда
//			СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ТекущиеДанные.DDS,СтрокаУсловийЗаявки.СрокОплатыАванса);	
//		ИначеЕсли СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS
//			И НЕ ТекущиеДанные.DDS = Дата(1,1,1) Тогда 	
//			СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(ТекущиеДанные.DDS,СтрокаУсловийЗаявки.СрокОплатыАванса);	
//		КонецЕсли;	
//	КонецЦикла;
//	
//	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);//rarus vikhle 01.07.2021 m 17944
//	
//КонецПроцедуры	

//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//&НаСервере
//Процедура СпециальныеУсловияПриИзмененииСервер()
//	
//	ОбработатьУсловияОплатыСУ();
//	ОбновитьУсловияОплаты();
//	
//КонецПроцедуры
//rarus vikhle 06.07.2021 17637 ---

//rarus vikhle 28.07.2021 17637 +++ Раскомментировал
&НаСервере
Процедура УдалитьУсловияОплатыПродукта(Продукт)
	
	СтруктураОтбора = Новый Структура("Продукт",Продукт);
	СтрокиПродукта	= Объект.УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого СтрокаПродукта ИЗ СтрокиПродукта Цикл
		Объект.УсловияОплаты.Удалить(СтрокаПродукта);
	КонецЦикла;
	
	//ПроверитьСовпадениеУсловийОплаты(); //rarus vikhle 29.07.2021 mt 17637
	
	УдалитьГрафикПродукта(Продукт);
		
КонецПроцедуры	

&НаСервере
Процедура УдалитьУсловияОплатыПродуктов(МассивПродуктов)
	
	Для Каждого Продукт ИЗ МассивПродуктов Цикл
		УдалитьУсловияОплатыПродукта(Продукт);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьГрафикПродукта(Продукт)
	
	СтруктураОтбора = Новый Структура("Продукт",Продукт);
	СтрокиПродукта	= Объект.ГрафикПлатежей.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого СтрокаПродукта ИЗ СтрокиПродукта Цикл
		Объект.ГрафикПлатежей.Удалить(СтрокаПродукта);
	КонецЦикла;
	
	ИтогГрафикПлатежей = Объект.ГрафикПлатежей.Итог("Сумма");
	
	ОбновитьДеревоГрафикПлатежей();
	
КонецПроцедуры	
//rarus vikhle 28.07.2021 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ Закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
//	
//	Если Копирование Тогда
//		Отказ = Истина;
//		ВывестиСообщениеПол(Нстр("ru = 'Копирование строк табличной части запрещено'"));
//	КонецЕсли;	
//	
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 17637 +++ Раскомментировал
&НаСервере
Процедура ОбновитьДеревоГрафикПлатежей()//rarus vikhle 29.07.2021 mt 17637 Убрал параметр
	
	//rarus vikhle 29.07.2021 mt 17637 +++
	//ГрафикПлатежейТЗ = ?(ТекущийОбъект = Неопределено,Объект.ГрафикПлатежей.Выгрузить(),ТекущийОбъект.ГрафикПлатежей.Выгрузить());
	ГрафикПлатежейТЗ = Объект.ГрафикПлатежей.Выгрузить(); 
	//rarus vikhle 29.07.2021 mt 17637 ---
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ГрафикПлатежей.ВидОплаты КАК ВидОплаты,
	               |	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	               |	ГрафикПлатежей.Сумма КАК Сумма,
	               |	ГрафикПлатежей.Продукт КАК Продукт
	               |ПОМЕСТИТЬ ГрафикПлатежей
	               |ИЗ
	               |	&ГрафикПлатежей КАК ГрафикПлатежей
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГрафикПлатежей.ВидОплаты КАК ВидОплаты,
	               |	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	               |	ГрафикПлатежей.Сумма КАК Сумма,
	               |	ГрафикПлатежей.Продукт КАК Продукт
	               |ИЗ
	               |	ГрафикПлатежей КАК ГрафикПлатежей
	               |ИТОГИ
	               |	СУММА(Сумма)
	               |ПО
	               |	ВидОплаты,
	               |	ДатаПлатежа";
	Запрос.УстановитьПараметр("ГрафикПлатежей",ГрафикПлатежейТЗ);
	
	Результат = Запрос.Выполнить();
	ВыборкаПервыйУровень = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Дерево = РеквизитФормыВЗначение("ДеревоГрафикПлатежей");
	Дерево.Строки.Очистить();
	
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень = Дерево.Строки.Добавить();
		Корень.КолонкаГруппировки = ВыборкаПервыйУровень.ВидОплаты;
		Корень.Сумма = ВыборкаПервыйУровень.Сумма; 
		Корень.ИмяГруппировки = "ВидОплаты";//rarus vikhle 22.06.2021 mt 17637
		
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВторойУровень.Следующий() Цикл
			ГруппировкаПоДате = Корень.Строки.Добавить();
			ГруппировкаПоДате.КолонкаГруппировки = ВыборкаВторойУровень.ДатаПлатежа; 
			ГруппировкаПоДате.Сумма = ВыборкаВторойУровень.Сумма;
			ГруппировкаПоДате.ИмяГруппировки = "ДатаПлатежа";//rarus vikhle 22.06.2021 mt 17637
			
			ВыборкаТретийУровень = ВыборкаВторойУровень.Выбрать();
			Пока ВыборкаТретийУровень.Следующий() Цикл
				ДетальнаяЗапись = ГруппировкаПоДате.Строки.Добавить();
				ДетальнаяЗапись.Продукт = ВыборкаТретийУровень.Продукт;
				ДетальнаяЗапись.Сумма 	= ВыборкаТретийУровень.Сумма;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево,"ДеревоГрафикПлатежей");
	
	ИтогГрафикПлатежейДерево = Окр(Дерево.Строки.Итог("Сумма"));
	
	Элементы.ДеревоГрафикПлатежей.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень; 
	
КонецПроцедуры	
//rarus vikhle 28.07.2021 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПослеУдаления(Элемент)
//	
//	ОбновитьСтрокуПостоплаты();
//		
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 17637 +++ Раскомментировал
&НаКлиенте
Процедура ОбновитьИтоговуюСуммуДрафта(СтрокаТаблицы = Неопределено); //rarus vikhle 04.08.2021 mt 17637 + СтрокаТаблицы
	
	//rarus vikhle 04.08.2021 mt 17637 +++
	Если СтрокаТаблицы = Неопределено Тогда
		ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Иначе
		ТекущиеДанные = СтрокаТаблицы;
	КонецЕсли;	
	//rarus vikhle 04.08.2021 mt 17637 ---
	
	Если ТипЗнч(ТекущиеДанные.Продукт) <> Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
		Возврат;
	КонецЕсли;	
		
	Если ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
		ТекущиеДанные.ИтоговаяСумма = ТекущиеДанные.ЦенаСНДС * ТекущиеДанные.Количество;
	Иначе
		ЦенаСУ = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"СпецDealerNet");
		ТекущиеДанные.ИтоговаяСумма = ЦенаСУ * ТекущиеДанные.Количество;	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ЦенаПоВалютнойОговорке) Тогда
		ТекущиеДанные.ИтоговаяСумма = ТекущиеДанные.ЦенаПоВалютнойОговорке * ТекущиеДанные.Количество;
	КонецЕсли;	
		
	Если НЕ ТекущиеДанные.ПроцентДрайв = 0 Тогда
		ТекущиеДанные.ИтоговаяСумма = ТекущиеДанные.ИтоговаяСумма - (ТекущиеДанные.ИтоговаяСумма * ТекущиеДанные.ПроцентДрайв / 100); 
	КонецЕсли;	
	
	//округление до рубля
	ТекущиеДанные.ИтоговаяСумма = Окр(ТекущиеДанные.ИтоговаяСумма);
	
	//rarus vikhle 29.07.2021 mt 17637 +++
	//СуммаЗаявки = СписокПродуктов.Итог("ИтоговаяСумма");
	ОбщаяСуммаСоглашения = СписокПродуктов.Итог("ИтоговаяСумма"); 
	//rarus vikhle 29.07.2021 mt 17637 ---
	
КонецПроцедуры	
//rarus vikhle 28.07.2021 17637 ---

//rarus vikhle 09.06.2021 mt 17637 ---

&НаСервере
Процедура ОбновитьПризнакЗаявкаНаАвтобусы()	// rarus tenkam 18.06.2021 mantis 17742 +++
	Объект.ЗаявкаНаАвтобусы = Справочники.Scan_МоделиПродуктов.ЭтоМодельАвтобуса(Объект.Модель);
	
	Если Объект.ЗаявкаНаАвтобусы Тогда
		Объект.РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровДепартаментаПродажАвтобусовЗаДилерами.ПолучитьЗакрепленногоМенеджера(Объект.Дилер);
	Иначе
		Объект.РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровЗаДилерами.ПолучитьЗакрепленногоМенеджера(Объект.Дилер);
	КонецЕсли;
		
КонецПроцедуры // rarus tenkam 18.06.2021 mantis 17742 ---

&НаСервере
Процедура УстановитьДатуДоговораВУсловиях(ДатаДоговора)
	//rarus vikhle 23.06.2021 mt 17637 +++
	СтруктураОтбора = Новый Структура("РасчетДатыОплаты",Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора);
	СтрокиТЧ = Объект.УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
		Если НЕ ДатаДоговора = Дата(1,1,1) Тогда
			СтрокаТЧ.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаДоговора, СтрокаТЧ.СрокОплатыАванса); 
		Иначе
			СтрокаТЧ.КрайняяДатаОплаты = ДатаДоговора;	
		КонецЕсли;	
	КонецЦикла;	
	
	ОбновитьГрафикПлатежей();
	//rarus vikhle 23.06.2021 mt 17637 ---
КонецПроцедуры	

//&НаСервере
&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьСовпадениеУсловийОплаты(Форма) //rarus vikhle 01.07.2021 17944 +++
	
	//rarus vikhle 02.08.2021 mt 17637 закомментировал +++
	//УсловияСовпадают = Ложь;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	УсловияОплаты.ВидОплаты КАК ВидОплаты,
	//               |	УсловияОплаты.ПроцентОплаты КАК ПроцентОплаты,
	//               |	УсловияОплаты.СрокОплатыАванса КАК СрокОплатыАванса,
	//               |	УсловияОплаты.РасчетДатыОплаты КАК РасчетДатыОплаты,
	//               |	УсловияОплаты.Продукт КАК Продукт
	//               |ПОМЕСТИТЬ УсловияОплаты
	//               |ИЗ
	//               |	&УсловияОплаты КАК УсловияОплаты
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	УсловияОплаты.ВидОплаты КАК ВидОплаты,
	//               |	УсловияОплаты.ПроцентОплаты КАК ПроцентОплаты,
	//               |	УсловияОплаты.СрокОплатыАванса КАК СрокОплатыАванса,
	//               |	УсловияОплаты.РасчетДатыОплаты КАК РасчетДатыОплаты,
	//               |	УсловияОплаты.Продукт КАК Продукт
	//               |ИЗ
	//               |	УсловияОплаты КАК УсловияОплаты
	//               |ИТОГИ ПО
	//               |	Продукт";
	//Запрос.УстановитьПараметр("УсловияОплаты",Объект.УсловияОплаты.Выгрузить());
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//
	//Пока Выборка.Следующий() Цикл
	//	ВыборкаДетальныеЗаписи = Выборка.Выбрать();
	//	
	//	Если ВыборкаДетальныеЗаписи.Количество() > 0 
	//	И ВыборкаДетальныеЗаписи.Количество() = СтандартныеУсловияОплаты.Количество() Тогда
	//	
	//		Отбор = Новый Структура("ВидОплаты,ПроцентОплаты,СрокОплатыАванса,РасчетДатыОплаты");
	//		МассивОбработанныхСтрок = Новый Массив;
	//		
	//		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//			ЗаполнитьЗначенияСвойств(Отбор,ВыборкаДетальныеЗаписи);
	//			Строки = СтандартныеУсловияОплаты.НайтиСтроки(Отбор);
	//			
	//			Если Строки.Количество() = 0 Тогда 
	//				Прервать;
	//			Иначе	
	//				Для Каждого СтрокаСтандартныхУсловий Из Строки Цикл
	//					Если МассивОбработанныхСтрок.Найти(СтрокаСтандартныхУсловий) = Неопределено Тогда
	//						МассивОбработанныхСтрок.Добавить(СтрокаСтандартныхУсловий);
	//						Прервать;
	//					КонецЕсли;	
	//				КонецЦикла;
	//			КонецЕсли;	
	//		КонецЦикла;
	//		
	//		УсловияСовпадают = ВыборкаДетальныеЗаписи.Количество() = МассивОбработанныхСтрок.Количество();
	//		Если НЕ УсловияСовпадают Тогда
	//			Прервать;
	//		КонецЕсли;	
	//	Иначе
	//		Прервать;
	//	КонецЕсли;
	//	
	//КонецЦикла;	
	//
	//Если УсловияСовпадают Тогда
	//	Элементы.ДекорацияТипУсловийОплаты.Заголовок  = Нстр("ru = 'Условия оплаты Стандартные'");
	//	Элементы.ДекорацияТипУсловийОплаты.ЦветТекста = Новый Цвет();
	//Иначе
	//	Элементы.ДекорацияТипУсловийОплаты.Заголовок  = Нстр("ru = 'Условия оплаты Нестандартные'");
	//	Элементы.ДекорацияТипУсловийОплаты.ЦветТекста = WebЦвета.ТемноОранжевый;
	//КонецЕсли;
	//rarus vikhle 02.08.2021 mt 17637 ---
	
	//rarus vikhle 02.08.2021 mt 17637 +++
	УсловияСовпадают = Ложь;
	
	Если Форма.СгруппированныеУсловияОплаты.Количество() > 0 
		И Форма.СгруппированныеУсловияОплаты.Количество() = Форма.СтандартныеУсловияОплаты.Количество() Тогда
		
		Отбор = Новый Структура("ВидОплаты,ПроцентОплаты,СрокОплатыАванса,РасчетДатыОплаты");
		МассивОбработанныхСтрок = Новый Массив;
		
		Для Каждого СтрокаУсловийСУ Из Форма.СгруппированныеУсловияОплаты Цикл
			ЗаполнитьЗначенияСвойств(Отбор,СтрокаУсловийСУ);
			Строки = Форма.СтандартныеУсловияОплаты.НайтиСтроки(Отбор);
			Если Строки.Количество() = 0 Тогда 
				Прервать;
			Иначе	
				Для Каждого СтрокаСтандартныхУсловий Из Строки Цикл
					Если МассивОбработанныхСтрок.Найти(СтрокаСтандартныхУсловий) = Неопределено Тогда
						МассивОбработанныхСтрок.Добавить(СтрокаСтандартныхУсловий);
						Прервать;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;	
		
		УсловияСовпадают = Форма.СгруппированныеУсловияОплаты.Количество() = МассивОбработанныхСтрок.Количество();	
	КонецЕсли;
			
	Форма.УсловияОплатыСтандартные = УсловияСовпадают; //rarus vikhle 16.09.2021 mt 18288
	
	Если УсловияСовпадают Тогда
		Форма.Элементы.ДекорацияТипУсловийОплаты.Заголовок  = Нстр("ru = 'Условия оплаты Стандартные'");
		Форма.Элементы.ДекорацияТипУсловийОплаты.ЦветТекста = Новый Цвет();
	Иначе
		Форма.Элементы.ДекорацияТипУсловийОплаты.Заголовок  = Нстр("ru = 'Условия оплаты Нестандартные'");
		Форма.Элементы.ДекорацияТипУсловийОплаты.ЦветТекста = WebЦвета.ТемноОранжевый;
	КонецЕсли;
	//rarus vikhle 02.08.2021 mt 17637 ---
	
КонецПроцедуры//rarus vikhle 01.07.2021 17944 ---	

&НаСервере
Процедура ЗаполнитьСтандартныеУсловияОплаты(ЗаполнитьУсловияЗаявки)//rarus vikhle 01.07.2021 17944 ++
	
	//rarus vikhle 16.09.2021 mt 18288
	//Право = ?(Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std, 
	//		"ШаблонСтандартныхУсловийОплатыДляSTD", 
	//		"ШаблонСтандартныхУсловийОплатыДляUOUUO");
	ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер, "ВидДилера");
	
	Если Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
		И (ВидДилера = Перечисления.Scan_ВидыДилеров.Независимый 
		ИЛИ НЕ ЗначениеЗаполнено(ВидДилера)) Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляSTDДляНезависимыхДилеров";
	ИначеЕсли (Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UO
		ИЛИ Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UUO) 
		И (ВидДилера = Перечисления.Scan_ВидыДилеров.Независимый 
		ИЛИ НЕ ЗначениеЗаполнено(ВидДилера)) Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляUOUUOДляНезависимыхДилеров";
	ИначеЕсли Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
		И ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляSTDДляОСП";
	ИначеЕсли (Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UO
		ИЛИ Объект.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UUO) 
		И ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляUOUUOДляОСП";
	ИначеЕсли СписокПродуктов.Количество() = 0 Тогда // rarus vikhle 07.12.2021 m 18643 +++
		ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" не загружены стандартные условия оплаты, т.к. в заявке не заполнен тип спецификации, необходимо добавить продукты в заявку.'"));
		Возврат;
		// rarus vikhle 07.12.2021 m 18643 ---
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" не загружены стандартные условия оплаты, т.к. не удалось определить настройку с шаблоном условий оплаты.'"));
		Возврат;	
	КонецЕсли;
	//rarus vikhle 16.09.2021 mt 18288 ---
	
	ШаблонУсловийОплаты = Scan_ПраваИНастройки.Scan_Право(Право);
	
	Если ЗначениеЗаполнено(ШаблонУсловийОплаты) Тогда
		УсловияОплатыШаблона = ШаблонУсловийОплаты.УсловияОплаты.Выгрузить();
		СтандартныеУсловияОплаты.Загрузить(УсловияОплатыШаблона);
		Если ЗаполнитьУсловияЗаявки Тогда
			//rarus vikhle 28.07.2021 mt 17637 +++
			//Объект.УсловияОплаты.Загрузить(УсловияОплатыШаблона);
			//ЗаполнитьУсловияОплатыПоПродуктам();
			СгруппированныеУсловияОплаты.Загрузить(УсловияОплатыШаблона);
			ДобавитьУсловияОплаты();
			//rarus vikhle 28.07.2021 mt 17637 ---
			
			//rarus vikhle 16.09.2021 mt 18288 +++
			ПринадлежностьНастройки = ?(ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный, Нстр("ru = 'ОСП'"), Нстр("ru = 'независимых дилеров'")); //rarus vikhle 27.09.2021 АПК
			//ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" загружены стандартные условия оплаты для %1'"),,,,,Объект.УникальностьСпецификации);	
			ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" загружены стандартные условия оплаты для %1 для %2'"),,,,,
								Объект.УникальностьСпецификации, ПринадлежностьНастройки);
			//rarus vikhle 16.09.2021 mt 18288 ---
			
			//ОбновитьГрафикПлатежей();	//rarus vikhle 17.09.2021 mt 18288 обновляется в ДобавитьУсловияОплаты()  
		КонецЕсли;	
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'Не указан шаблон стандартных условий оплаты'"));
	КонецЕсли;	
	
КонецПроцедуры//rarus vikhle 01.07.2021 17944 --	

&НаСервере
Процедура STDUOПриИзмененииНаСервере()//rarus vikhle 01.07.2021 m 17944
	
	Если Объект.ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП
		И УсловияОплатыСтандартные //rarus vikhle 17.09.2021 mt 18288
		И НЕ Объект.Дилер.Пустая() Тогда //rarus vikhle 17.09.2021 mt 18288
		//rarus vikhle 20.09.2021 mt 18288 +++
		НужноЗаполнитьУсловияЗаявки = ВЗаявкеЕстьПродукты();
		ЗаполнитьСтандартныеУсловияОплаты(НужноЗаполнитьУсловияЗаявки);// Было "(Истина)"
		Если НЕ НужноЗаполнитьУсловияЗаявки Тогда
			ЗаполнитьСгруппированныеУсловия();
		КонецЕсли;	
		//rarus vikhle 20.09.2021 mt 18288 ---
	КонецЕсли;	
	
	УправлениеДиалогомНаСервере();
		
КонецПроцедуры //rarus vikhle 01.07.2021 m 17944 ---

// rarus kabany 13.07.2021 17992 ++
//&НаКлиенте
//Процедура СоздатьНовуюВерсиюЗаявкиНаСОП(Команда)
//	
//КонецПроцедуры

&НаСервере
Функция СоздатьНовуюВерсиюЗаявкиНаСОП(ЗаявкаНаСОП)	
	Возврат Справочники.Scan_СоглашенияОПоставке.СоздатьНовуюВерсиюЗаявкиНаСОП(ЗаявкаНаСОП);
КонецФункции
// rarus kabany 14.07.2021 17992 ++
&НаКлиенте
Процедура ОповеститьПользователяОбУспешномВыполнении()
	
	ВывестиСообщениеПол(Нстр("ru = 'В предыдущей заявке установлен статус ""Неактуально. Есть ДС"".'; en = 'The previous application has the status ""Out of date. There is DS"".'")
	+ Символы.ПС + Нстр("ru = 'В предыдущем СОП установлена дата окончания.'; en = 'The previous SOP set an end date.'") 		
	+ Символы.ПС + Нстр("ru = 'Успешно создана новая версия СОП.'; en = 'A new version of the SOP has been successfully created.'")
	+ Символы.ПС + Нстр("ru = 'Успешно создана дополнительная заявка.'; en = 'Additional ticket has been successfully created.'"));
	
КонецПроцедуры
// rarus kabany 14.07.2021 17992 --
// rarus kabany 13.07.2021 17992 --

&НаСервере
Процедура ОбновитьПриоритетныйСклад();//rarus vikhle 16.07.2021 m 18026 +++
	
	ПриоритетныйСклад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер,"ПриоритетныйСклад"); 
	
	Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
		СтрокаТаблицы.ПриоритетныйСклад = (СтрокаТаблицы.СкладОтгрузки =  ПриоритетныйСклад И НЕ ПриоритетныйСклад.Пустая());	
	КонецЦикла;	
	
КонецПроцедуры //rarus vikhle 16.07.2021 m 18026 ---

&НаКлиенте
Процедура ПослеВыбораСУ(ВыбранныеСУ, ДопПараметры) Экспорт //rarus vikhle 28.07.2021 mt 17637 +++ 
	
	Если НЕ ВыбранныеСУ = Неопределено Тогда
		Если ВозможноПрименитьСУДляВсех(ВыбранныеСУ) Тогда
			ОписаниеОповещения	= Новый ОписаниеОповещения("ПослеВопросаВыбораСУ", ЭтотОбъект, ВыбранныеСУ);
			ТекстВопроса		= СтрШаблон(Нстр("ru = 'Внимание! У всех продуктов заявки на СОП будут применены СУ № %1. Ранее указанные СУ по продуктам будут заменены на выбранные. Продолжить?'"), ВыбранныеСУ); 
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ВывестиСообщениеПол(Нстр("ru = 'СУ № %1 нельзя применить ко всем продуктам заявки на СОП'"),,,,, ВыбранныеСУ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //rarus vikhle 28.07.2021 mt 17637 ---	

&НаКлиенте
Процедура ПослеВопросаВыбораСУ(ОтветПользователя, ВыбранныеСУ) Экспорт //rarus vikhle 28.07.2021 mt 17637 +++ 
	
	Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
		ПрименитьСУДляВсехНаСервере(ВыбранныеСУ);	
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 28.07.2021 mt 17637 ---

&НаСервере
Функция ВозможноПрименитьСУДляВсех(СУ) //rarus vikhle 28.07.2021 mt 17637 +++
	
	Реквизиты			= "Статус,Модель,СрокДействияСпециальныхУсловий,Дилер"; 
	СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(СУ, Реквизиты);
	
	Если СтруктураРеквизитов.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП")
		И СтруктураРеквизитов.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'У выбранных СУ статус не равен ""Одобрено, нет в СОП"" и ""Одобрено, нет в СОП"".'"));
		Возврат Ложь;
	ИначеЕсли ВРег(Лев(СокрЛП(СтруктураРеквизитов.Модель),10)) <> Врег(Лев(СокрЛП(Объект.Модель),10)) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Различаются модели СУ и заявки.'"));
		Возврат Ложь;
	ИначеЕсли СтруктураРеквизитов.СрокДействияСпециальныхУсловий < НачалоДня(ТекущаяДатаСеанса()) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Срок действия СУ истек.'"));
		Возврат Ложь;
	ИначеЕсли  СтруктураРеквизитов.Дилер <> Объект.Дилер Тогда 
		ВывестиСообщениеПол(Нстр("ru = 'Дилер СУ отличается от дилера заявки.'"));
		Возврат Ложь;
	КонецЕсли;
	
	МассивПродуктов = ОбщегоНазначения.ВыгрузитьКолонку(СписокПродуктов, "Продукт");
	Если НЕ ПродуктУказанВСУ(СУ, МассивПродуктов) Тогда
		//ВывестиСообщениеПол(Нстр("ru = ' Не все продукты указаны в СУ.'"));
		//ВывестиСообщениеПол(Нстр("ru = 'Не все продукты текущей заявки указаны в табличной части ""Список продуктов"" СУ (закладка ""Продукты"").'")); //rarus vikhle 09.08.2021 mt 17637 
		ВывестиСообщениеПол(Нстр("ru = 'Не все продукты текущей заявки указаны в ограничивающем перечне СУ.'")); //rarus vikhle 11.08.2021 mt 17637
		Возврат Ложь;
	КонецЕсли;	
	
	Если Не МодельЗаявкиСовпадаетСоСпециальнымиУсловиями(СУ, Объект.Модель) Тогда
		ВывестиСообщениеПол(СтрШаблон(Нстр("ru = 'В выбранных Специальных условиях не найдено ни одного продукта с моделью %1. Невозможно применить.'"), Объект.Модель));
		Возврат Ложь;
	КонецЕсли;
	
	Если ПримененияСпециальныхУсловийИсчерпаны(СУ) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'По выбранным Специальным условиям все применения исчерпаны. Невозможно применить.'"));
		Возврат Ложь;
	КонецЕсли;
	
	Если ЕстьПродуктыСДатойПродажи() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'В списке продуктов есть продукты с датой продажи.'"));
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат Истина;
		
КонецФункции //rarus vikhle 28.07.2021 mt 17637 ---	
	
&НаСервере
Процедура ПрименитьСУДляВсехНаСервере(СУ) //rarus vikhle 28.07.2021 mt 17637 +++
	
	ДрайвНеПрименим = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СУ, "ДрайвНеПрименим");
	
	Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
		
		СтрокаТаблицы.СпециальныеУсловия = СУ;
		
		Если СтрокаТаблицы.Драйв И ДрайвНеПрименим Тогда
			СтрокаТаблицы.Драйв			= Ложь;
			СтрокаТаблицы.ПроцентДрайв	= 0;
			ВывестиСообщениеПол(Нстр("ru = 'При использовании специальных условий %1 драйв не применяется, поле очищено в строке продукта %2.'"),,,,,СУ, СтрокаТаблицы.Продукт);	
		КонецЕсли;
		
		ОбновитьИтоговуюСуммуПродукта(СтрокаТаблицы);
	КонецЦикла;	
	
	ЗаполнитьСебестоимостьДляВсех();
	
	ЗаполнитьСгруппированныеУсловия(СУ);
	ДобавитьУсловияОплаты();
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
	
	ВывестиСообщениеПол(Нстр("ru = 'СУ № %1 применены ко всем продуктам заявки (включая условия оплаты).'"),,,,, СУ); //rarus vikhle 11.08.2021 mt 17637 + "(включая условия оплаты)"
	
КонецПроцедуры //rarus vikhle 28.07.2021 mt 17637 ---

&НаСервере
Процедура ОчиститьСУДляВсехНаСервере() //rarus vikhle 28.07.2021 mt 17637 +++
	
	Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
		СтрокаТаблицы.СпециальныеУсловия = Неопределено;
		ОбновитьИтоговуюСуммуПродукта(СтрокаТаблицы);
	КонецЦикла;	
	
	// Сгруппированными условиями считаем стандартные условия, перезаполняем тч условия оплаты по всем продуктам
	//rarus vikhle 17.09.2021 mt 18288 +++
	//СгруппированныеУсловияОплаты.Загрузить(РеквизитФормыВЗначение("СтандартныеУсловияОплаты"));
	//ДобавитьУсловияОплаты();
	
	//rarus vikhle 20.09.2021 mt 18288 +++
	НужноЗаполнитьУсловияЗаявки = ВЗаявкеЕстьПродукты();
	ЗаполнитьСтандартныеУсловияОплаты(НужноЗаполнитьУсловияЗаявки);// Было "(Истина)"
	Если НЕ НужноЗаполнитьУсловияЗаявки Тогда
		ЗаполнитьСгруппированныеУсловия();
	КонецЕсли;	
	//rarus vikhle 20.09.2021 mt 18288 ---
	//rarus vikhle 17.09.2021 mt 18288 ---
	
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
	
	ВывестиСообщениеПол(Нстр("ru = 'У всех продуктов заявки были очищены СУ.'"));
	
КонецПроцедуры //rarus vikhle 28.07.2021 mt 17637 ---

&НаКлиенте
Процедура ПослеВопросаОчисткиСУ(ОтветПользователя, ДопПараметры) Экспорт //rarus vikhle 02.08.2021 mt 17637 +++
	
	Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
		ОчиститьСУДляВсехНаСервере();	
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 02.08.2021 mt 17637	

&НаКлиенте
Функция ФиксированныеНастройкиОтбораСУ() //rarus vikhle 02.08.2021 mt 17637 +++
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП"));
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"Статус",
															ВидСравненияКомпоновкиДанных.ВСписке,
															МассивСтатусов,,Истина);			
	ОсноваИмениМодели = Лев(СокрЛП(Объект.Модель),10);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"Модель.Наименование",
															ВидСравненияКомпоновкиДанных.НачинаетсяС,
															ОсноваИмениМодели, "Наименование модели",Истина);
	Возврат ФиксированныеНастройки;
	
КонецФункции //rarus vikhle 02.08.2021 mt 17637 +++	
	
&НаСервере
Процедура ЗаполнитьСгруппированныеУсловия(СУ = Неопределено) //rarus vikhle 02.08.2021 mt 17637 +++
	
	СгруппированныеУсловияОплаты.Очистить();
	
	// Переданы спец. условия, сгруппированные условия заявки заполняем условиями из спец. условий 
	Если НЕ СУ = Неопределено Тогда
		СгруппированныеУсловияОплаты.Загрузить(СУ.УсловияОплаты.Выгрузить());
		Возврат;
	КонецЕсли;	
	
	// При пустой тч условий оплаты сгруппированными условиями считаем стандартные для типа спецификации
	Если Объект.УсловияОплаты.Количество() = 0 Тогда
		СгруппированныеУсловияОплаты.Загрузить(РеквизитФормыВЗначение("СтандартныеУсловияОплаты"));
		Возврат;
	КонецЕсли;	
	
	
	// При заполненной тч условий оплаты сгруппированные условия получаем из группировки по продукту
	СгруппированныеУсловияОплаты.Загрузить(Справочники.Scan_СоглашенияОПоставке.СгруппированныеУсловияОплаты(Объект.УсловияОплаты.Выгрузить()));
				
КонецПроцедуры //rarus vikhle 02.08.2021 mt 17637 ---

&НаСервере
Процедура ДобавитьУсловияОплаты(ИДСтрокиПродукта = Неопределено)//rarus vikhle 02.08.2021 mt 17637 +++ 
	
	Если ИДСтрокиПродукта = Неопределено Тогда 
		ДатаНачалаДоговора = Неопределено;
		
		// Не передан ИД строки продукт, нужно полностью перезаполнить условия оплаты и график
		Объект.УсловияОплаты.Очистить();
				
		
		Для Каждого СтрокаСписка Из СписокПродуктов Цикл
			Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") И НЕ СтрокаСписка.Продукт.Пустая() Тогда
				Для Каждого СтрокаУсловий Из СгруппированныеУсловияОплаты Цикл
					НоваяСтрока = Объект.УсловияОплаты.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУсловий);
					НоваяСтрока.Сумма = НоваяСтрока.ПроцентОплаты / 100 * СтрокаСписка.ИтоговаяСумма;
					НоваяСтрока.Продукт = СтрокаСписка.Продукт;
					
					Если НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора И НЕ Объект.Договор.Пустая() Тогда  
						Если ДатаНачалаДоговора = Неопределено Тогда
							ДатаНачалаДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ДатаНачала"); 
						КонецЕсли;	
						
						НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора,НоваяСтрока.СрокОплатыАванса);
					ИначеЕсли НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS И НЕ СтрокаСписка.DDS = Дата(1,1,1) Тогда
						НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаСписка.DDS), НоваяСтрока.СрокОплатыАванса); 
					ИначеЕсли НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS И НЕ СтрокаСписка.DDS = Дата(1,1,1) Тогда
						НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаСписка.DDS), НоваяСтрока.СрокОплатыАванса); 	
					КонецЕсли;	
					
				КонецЦикла;
			КонецЕсли;		
		КонецЦикла;
		
		ОбновитьГрафикПлатежей();
		
	Иначе	
		
		СтрокаПродукта = СписокПродуктов.НайтиПоИдентификатору(ИДСтрокиПродукта);
		ДатаНачалаДоговора = Неопределено;
		
		// Удаляем имеющиеся условия с продуктом
		УдалитьУсловияОплатыПродукта(СтрокаПродукта.Продукт);
		
		// Передан ИД строки продукта, добавляем условия и график по продукту строки
		Для Каждого СтрокаУсловий Из СгруппированныеУсловияОплаты Цикл
			СтрокаУсловийЗаявки 		= Объект.УсловияОплаты.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаУсловийЗаявки, СтрокаУсловий);//rarus vikhle 14.09.2021 18282
			СтрокаУсловийЗаявки.Продукт	= СтрокаПродукта.Продукт;
			СтрокаУсловийЗаявки.Сумма	= СтрокаУсловийЗаявки.ПроцентОплаты / 100 * СтрокаПродукта.ИтоговаяСумма;
			//ЗаполнитьЗначенияСвойств(СтрокаУсловийЗаявки, СтрокаУсловий); //rarus vikhle 14.09.2021 18282
			
			Если СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора
				И НЕ Объект.Договор.Пустая() Тогда 
				
				Если ДатаНачалаДоговора = Неопределено Тогда
					ДатаНачалаДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ДатаНачала"); 
				КонецЕсли;	
				
				СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора,СтрокаУсловийЗаявки.СрокОплатыАванса);
			ИначеЕсли СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS
				И НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда
				СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(СтрокаПродукта.DDS,СтрокаУсловийЗаявки.СрокОплатыАванса);	
			ИначеЕсли СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS
				И НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда 	
				СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(СтрокаПродукта.DDS,СтрокаУсловийЗаявки.СрокОплатыАванса);	
			КонецЕсли;	
		КонецЦикла;
		
		ОбновитьГрафикПлатежей(СтрокаПродукта.Продукт);
	КонецЕсли;	
	
	Модифицированность = Истина;
	
КонецПроцедуры //rarus vikhle 02.08.2021 mt 17637 ---	

&НаСервере
Функция ЕстьПродуктыСДатойПродажи() //rarus vikhle 03.08.2021 mt 17637 +++
	
	Если Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	ВидДилера  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дилер, "ВидДилера");
	ИмяКолонки = ?(ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный, "ДатаПродажиКлиенту", "ДатаПродажиДилеру");
	
	Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
		Если НЕ СтрокаТаблицы[ИмяКолонки] = Дата(1,1,1) Тогда
			Возврат Истина;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Ложь;
	
КонецФункции //rarus vikhle 03.08.2021 mt 17637 ---	

&НаСервере
Функция МоделиЗаявкиИТаблицыСовпадают() //rarus vikhle 27.08.2021 m 18214 +++
	
	МоделиСовпадают = Истина;
	
	МассивПродуктов	= ОбщегоНазначения.ВыгрузитьКолонку(СписокПродуктов, "Продукт");
	
	КоличествоЭлементовКоллекции = МассивПродуктов.Количество();
	Для ОбратныйИндекс = 1 По КоличествоЭлементовКоллекции Цикл
		Индекс = КоличествоЭлементовКоллекции - ОбратныйИндекс;
		Если ТипЗнч(МассивПродуктов[Индекс]) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов")
			ИЛИ ТипЗнч(МассивПродуктов[Индекс]) = Тип("Неопределено") Тогда
			МассивПродуктов.Удалить(Индекс);
		КонецЕсли;
	КонецЦикла;	
	
	МаркиПродуктов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивПродуктов, "МаркаПродукта");
		
	Для Каждого СтрокаПродукта Из СписокПродуктов Цикл
		Если ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			
			МодельПродукта	= СтрокаПродукта.Модель;
			Марка			= МаркиПродуктов[СтрокаПродукта.Продукт]; 
						
			Если (Марка = Справочники.Scan_МаркиПродуктов.Scania 
				И Врег(Лев(СокрЛП(МодельПродукта), 10)) <> Врег(Лев(СокрЛП(Объект.Модель),10)))
				ИЛИ (Марка <> Справочники.Scan_МаркиПродуктов.Scania 
				И МодельПродукта <> Объект.Модель) Тогда 
				МоделиСовпадают = Ложь;
				Прервать;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда 	
			
			МодельДрафта	= СтрокаПродукта.Модель;
			Марка			= МодельДрафта.МаркаПродукта;
						
			Если (Марка = Справочники.Scan_МаркиПродуктов.Scania 
				И Врег(Лев(СокрЛП(МодельДрафта), 10)) <> Врег(Лев(СокрЛП(Объект.Модель),10)))
				ИЛИ (Марка <> Справочники.Scan_МаркиПродуктов.Scania 
				И МодельДрафта <> Объект.Модель) Тогда 
				МоделиСовпадают = Ложь;
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;	
	
	Возврат МоделиСовпадают;
	
КонецФункции //rarus vikhle 27.08.2021 m 18214 ---

&НаСервере
Функция ВЗаявкеЕстьПродукты() //rarus vikhle 20.09.2021 mt 18288 +++
	
	ЕстьПродукты = Ложь;
	
	Для Каждого СтрокаСписка ИЗ СписокПродуктов Цикл
		Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") И НЕ СтрокаСписка.Продукт.Пустая() Тогда
			ЕстьПродукты = Истина;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат ЕстьПродукты;
	
КонецФункции //rarus vikhle 20.09.2021 mt 18288 ---	

// rarus agar 20.09.2021 17739 ++
&НаСервере
Процедура ЗаписатьОтменуОплатыВРасчетOrderIntake(Продукт)
	
	Если ТипЗнч(Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		// rarus agar 31.01.2022 17739 ++
		//РегистрыСведений.Scan_РасчетOrderIntake.ЗаписатьОтменуОплаты(ТекущаяДатаСеанса(),, Продукт);
		Scan_OrderIntake.ЗарегистрироватьРасторжение(ТекущаяДатаСеанса(),  , Продукт);
		Scan_OrderIntake.ЗарегистрироватьОтменуОплаты(ТекущаяДатаСеанса(), , Продукт);
		// rarus agar 31.01.2022 17739 --
	ИначеЕсли ТипЗнч(Продукт) = Тип("Массив") Тогда
		Для Каждого ТекущийПродукт Из Продукт Цикл
			// rarus agar 31.01.2022 17739 ++
			//РегистрыСведений.Scan_РасчетOrderIntake.ЗаписатьОтменуОплаты(ТекущаяДатаСеанса(),, ТекущийПродукт);
			Scan_OrderIntake.ЗарегистрироватьРасторжение(ТекущаяДатаСеанса(),  , ТекущийПродукт);
			Scan_OrderIntake.ЗарегистрироватьОтменуОплаты(ТекущаяДатаСеанса(), , ТекущийПродукт);
			// rarus agar 31.01.2022 17739 --
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
// rarus agar 20.09.2021 17739 --

&НаСервереБезКонтекста
Функция НомераСтандартныхСпецификаций(Продукты) //rarus vikhle 22.09.2021 mt 18298 +++
	
	НомераСтандартныхСпецификаций = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_Изделия.Ссылка КАК Продукт,
	               |	Scan_Изделия.СтандартнаяСпецификация.НомерСпецификации КАК НомерСпецификации
	               |ИЗ
	               |	Справочник.Scan_Изделия КАК Scan_Изделия
	               |ГДЕ
	               |	Scan_Изделия.Ссылка В(&Продукты)";
	Запрос.УстановитьПараметр("Продукты", Продукты);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НомераСтандартныхСпецификаций.Вставить(Выборка.Продукт, Выборка.НомерСпецификации);	
	КонецЦикла;	
	
	Возврат НомераСтандартныхСпецификаций;
	
КонецФункции //rarus vikhle 22.09.2021 mt 1829 ---	

&НаСервере
Процедура ОчиститьУсловияОплатыГрафикПлатежей() // rarus vikhle 07.12.2021 m 18643 +++
	
	Объект.УсловияОплаты.Очистить();
	СтандартныеУсловияОплаты.Очистить();
	СгруппированныеУсловияОплаты.Очистить();
	ПроверитьСовпадениеУсловийОплаты(ЭтотОбъект);
	
	ДеревоЗначений = РеквизитФормыВЗначение("ДеревоГрафикПлатежей");
	ДеревоЗначений.Строки.Очистить();
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоГрафикПлатежей");
	
КонецПроцедуры // rarus vikhle 07.12.2021 m 18643 ---	

&НаСервере
Процедура ЗаполнитьСебестоимостьИзСпецификации() //rarus vikhle 27.12.2021 m 18269 +++
	
	Себестоимость = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтандартнаяСпецификация, "ПлановаяСебестоимостьСНДС");
	
	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
		
		Если НЕ (СтрокаСписка.ЦенаПоВалютнойОговорке = 0 И НЕ СтрокаСписка.СпециальныеУсловия.Пустая()) Тогда
			СтрокаСписка.Себестоимость = Себестоимость; 	
		Иначе
			Если Элементы.СписокПродуктовСебестоимость.Видимость Тогда
				ИндексСтроки = СписокПродуктов.Индекс(СтрокаСписка);
				ПутьКПолюСс = "СписокПродуктов[" + ИндексСтроки + "]" + ".Себестоимость";
				ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 не была изменена с/с, т.к. указаны СУ и не заполнена цена по валютной оговорке.'"),,ПутьКПолюСс,,,СтрокаСписка.Продукт);
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если Элементы.СписокПродуктовСебестоимость.Видимость Тогда
		ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Список продуктов"" была заполнена себестоимость из спецификации STD.'"));
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 27.12.2021 m 18269 ---	 

&НаСервере
Функция ЕстьУдаленныеПродукты() //rarus vikhle 04.03.2022 m 18956 +++
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат Ложь;
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт КАК Продукт
	               |ИЗ
	               |	Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	               |ГДЕ
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка = &Заявка
	               |	И Scan_СоглашенияОПоставкеСписокПродуктов.Продукт ССЫЛКА Справочник.Scan_Изделия
	               |	И НЕ Scan_СоглашенияОПоставкеСписокПродуктов.Продукт В (&ПродуктыТекущейЗаявки)";
	ПродуктыТекущейЗаявки = ОбщегоНазначения.ВыгрузитьКолонку(СписокПродуктов, "Продукт");
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияТипаИзМассива(ПродуктыТекущейЗаявки, Тип("СправочникСсылка.Scan_ДрафтыПродуктов"));
	
	Запрос.УстановитьПараметр("Заявка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ПродуктыТекущейЗаявки", ПродуктыТекущейЗаявки);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции //rarus vikhle 04.03.2022 m 18956 ---

&НаСервереБезКонтекста
Функция ДоступенВыборРезерва(Статус) //rarus vikhle 04.03.2022 m 18956 +++
	
	ДоступенВыборРезерва = Ложь;
	
	Если Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗаявкаНаСОП
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Согласование
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично
		ИЛИ Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Оформлен Тогда
		
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ПользовательСотрудник") Тогда
			ДоступенВыборРезерва = Истина;
		КонецЕсли;	
		
	КонецЕсли;	
	
	Возврат ДоступенВыборРезерва;	
	
КонецФункции //rarus vikhle 04.03.2022 m 18956 ---

&НаКлиенте
Процедура ПослеВопросаУдаленныхПродуктов(Результат, ДопПараметры) Экспорт  //rarus vikhle 05.03.2022 m 18956 ++++
	
	ДопПараметры.Вставить("НеПроверятьУдаленные");
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДопПараметры.Вставить("ПереноситьВРезерв");	
	ИначеЕсли Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;	
	
	Если НЕ ДопПараметры.Свойство("ОписаниеОповещения") Тогда 
		Записать(ДопПараметры);
	Иначе
		ОписаниеОповещения  = ДопПараметры.ОписаниеОповещения;
		ДопПараметры.Удалить("ОписаниеОповещения");
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, ДопПараметры);
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 05.03.2022 m 18956 ---

#Область ОповещенияНижнихКоманд

&НаКлиенте
Процедура РасторгнутьСОППродолжение(Результат, ДопПараметры) Экспорт //rarus vikhle 03.03.2022 m 18956 +++  
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДопПараметры.Вставить("ПереноситьВРезерв");
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена ИЛИ Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	КорректировкиЗаявокНаОтгрузку = КорректировкиПодчиненныхЗаявокНаОтгрузку();
	Если КорректировкиЗаявокНаОтгрузку <> Неопределено Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("АдресКорректировокЗаявокНаОтгрузку", КорректировкиЗаявокНаОтгрузку.АдресКорректировок);
		
		//rarus vikhle 04.03.2022 m 18956 +++
		Если ДопПараметры.Свойство("ПереноситьВРезерв") Тогда
			ДополнительныеПараметры.Вставить("ПереноситьВРезерв");
		КонецЕсли;	
		//rarus vikhle 04.03.2022 m 18956 ---
		
		ОписаниеОповещения = Новый ОписаниеОповещения("РасторгнутьСОПФрагмент", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = '"+КорректировкиЗаявокНаОтгрузку.ТекстКорректировок+"'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		РасторгнутьСОПЗавершение(ДопПараметры); //rarus vikhle 03.03.2022 m 18956 + ДопПараметры
	КонецЕсли;
	
КонецПроцедуры	//rarus vikhle 03.03.2022 m 18956 ---

&НаКлиенте
Процедура НачатьОформлениеСОППродолжение(Результат, ДопПараметры) Экспорт //rarus vikhle 05.03.2022 m 18956 +++
	
	//rarus vikhle 05.11.2020 mt 16723 +++
	//rarus vikhle 22.09.2020 mt 16181 +++
	НачатоОформление = НачатьОформлениеСОПНаСервере(Результат);
	
	//rarus vikhle 05.11.2020 mt 16723 +++
	Если НачатоОформление Тогда 
		ОповеститьОбИзменении(Объект.Ссылка);
		Закрыть();
	КонецЕсли;	
	//rarus vikhle 05.11.2020 mt 16723 ---
	
	//КодДоговора = СоздатьДоговор();	
	//Если кодДоговора = неопределено Тогда
	//	возврат;		
	//КонецЕсли; 
	//СтарыйСтатус  = Объект.Статус;
	//Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП"); 	 
	//Объект.НомерСОП = Строка(Год(ТекущаяДата())) + "-" + КодДоговора;
	//	
	//Если Не Записать() Тогда
	//	Объект.Статус = СтарыйСтатус;
	//КонецЕсли;
	////rarus vikhle 22.09.2020 mt 16181 ---
	
	
КонецПроцедуры //rarus vikhle 05.03.2022 m 18956 ---

&НаКлиенте
Процедура ЗапроситьИзмененияПродолжение(Результат, ДопПараметры) Экспорт //rarus vikhle 05.03.2022 m 18956 +++
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП");
	
	Если Не Записать(Результат) Тогда
		Объект.Статус = СтарыйСтатус;
	КонецЕсли; 
	
КонецПроцедуры //rarus vikhle 05.03.2022 m 18956 ---

&НаКлиенте
Процедура ПересмотрПродолжение(Результат, ДопПараметры) Экспорт //rarus vikhle 05.03.2022 m 18956 +++ 
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Пересмотр");
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	//ПараметрыЗаписи = Новый Структура; //rarus vikhle 04.03.2022 m 18956
	Результат.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
	Если Не Записать(Результат) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
		Если Открыта() Тогда
			Закрыть(); //rarus vikhle 05.11.2020 mt 16723	
		КонецЕсли;	
	КонецЕсли;

	
КонецПроцедуры //rarus vikhle 05.03.2022 m 18956 ---

&НаКлиенте
Процедура НаСогласованиеПродолжение(Результат, ДопПараметры) Экспорт //rarus vikhle 05.03.2022 m 18956 +++
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Согласование");
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	Результат.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
	Если Не Записать(Результат) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
		Если Открыта() Тогда
			Закрыть(); //rarus vikhle 05.11.2020 mt 16723	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры //rarus vikhle 05.03.2022 m 18956 ---

&НаКлиенте
Процедура ОдобреноПродолжение(Результат, ДопПараметры) Экспорт //rarus vikhle 05.03.2022 m 18956 +++
	
	//rarus vikhle 01.09.2020 mt 16181 +++ 
	Если НЕ Объект.ТребуетсяРазмещениеЗаказа Тогда
		НачатьОформлениеСОП(ДопПараметры.Команда);
		Возврат;
	КонецЕсли;	
	//rarus vikhle 01.09.2020 mt 16181 ---
	
	СтарыйСтатус  = Объект.Статус;
	Объект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено");
	
	//rarus vikhle 23.11.2020 mt 16181 +++
	Результат.Вставить("ЗакрыватьФорму",Истина);
	//rarus vikhle 23.11.2020 mt 16181 ---
	
	Если Не Записать(Результат) Тогда
		Объект.Статус = СтарыйСтатус;
	Иначе
		ОповеститьОбИзменении(Объект.Ссылка);  //rarus vikhle 05.11.2020 mt 16723
		Если Открыта() Тогда
			Закрыть(); //rarus vikhle 05.11.2020 mt 16723	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры //rarus vikhle 05.03.2022 m 18956 ---

&НаКлиенте
Процедура ОтправитьВБухгалтериюПродолжение(Результат, ДопПараметры) Экспорт //rarus vikhle 05.03.2022 m 18956 +++
	
	//rarus agar 10.12.2020 16930 ++
	НомераПродуктовПустыхDDS = НомераПродуктовПустыхDDS();
	Если НомераПродуктовПустыхDDS.Количество() <> 0 Тогда
		Сообщить(СтрШаблон(Нстр("ru = 'У продуктов %1 дата DDS не заполнена.'"),СтрСоединить(НомераПродуктовПустыхDDS, ", ")));
	КонецЕсли;
	//rarus agar 10.12.2020 16930 --
	
	//rarus vikhle 27.10.2021 m 18426 +++
	ЗакрыватьФорму = НомераПродуктовПустыхDDS.Количество() = 0; 
	
	//ПараметрыЗаписи = Новый Структура; //rarus vikhle 04.03.2022 m 18956
	Результат.Вставить("ЗакрыватьФорму", ЗакрыватьФорму);
	//rarus vikhle 27.10.2021 m 18426 ---
	
	//rarus vikhle 05.11.2020 mt 16723 +++
	ЗаявкаОтправлена = ОтправитьВБухгалтериюНаСервере(Результат); //rarus vikhle 03.09.2020 mt 16181 //rarus vikhle 27.10.2021 m 18426
	Если ЗаявкаОтправлена Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
		
		//rarus vikhle 27.10.2021 m 18426 +++
		Если Результат.Свойство("ИзмененаDDS") Тогда
			Scan_ВспомогательныеФункцииКлиент.НачатьФоновоеОбновлениеDDS(Объект.Ссылка);	
		КонецЕсли;	
		//rarus vikhle 27.10.2021 m 18426 ---
		
		//rarus agar 10.12.2020 16930 ++
		//Если НомераПродуктовПустыхDDS.Количество() = 0 Тогда
		Если ЗакрыватьФорму И Открыта() Тогда //rarus vikhle 27.10.2021 m 18426
			Закрыть();
		КонецЕсли;
		//rarus agar 10.12.2020 16930 --
	КонецЕсли;
	//rarus vikhle 05.11.2020 mt 16723 ---
	
КонецПроцедуры //rarus vikhle 05.03.2022 m 18956 ---

#КонецОбласти

&НаКлиенте
Процедура ПроверитьУдаленныеПродукты(ОписаниеОповещения, Статус) //rarus vikhle 05.03.2022 m 18956 +++
	
	Если ДоступенВыборРезерва(Статус) Тогда
			
		Если ЕстьУдаленныеПродукты() Тогда
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("НеЗаписывать");
			ДопПараметры.Вставить("ОписаниеОповещения", ОписаниеОповещения);
			ОписаниеОповещенияВопроса = Новый ОписаниеОповещения("ПослеВопросаУдаленныхПродуктов", ЭтотОбъект, ДопПараметры);
			ПоказатьВопрос(ОписаниеОповещенияВопроса, Нстр("ru = 'Перенести удаленные продукты в резерв?'"), РежимДиалогаВопрос.ДаНетОтмена);
		Иначе
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, Новый Структура);	
		КонецЕсли;	
		
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Новый Структура);
	КонецЕсли;

	
КонецПроцедуры //rarus vikhle 05.03.2022 m 18956 ---  

#КонецОбласти

