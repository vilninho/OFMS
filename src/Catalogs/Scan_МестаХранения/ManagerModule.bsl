//rarus tenkam 05.10.2016 mantis 7161 ++

// Функция записи параметров в регистр сведений
Функция ЗаписьЗначенияРСМатрицаСроковДоставкиИзделий(АдресОтгрузки, АдресДоставки, СпособДоставки, СрокДоставки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МатрицаСроковДоставкиИзделийАвтовозом.АдресОтгрузки,
	               |	Scan_МатрицаСроковДоставкиИзделийАвтовозом.АдресДоставки,
	               |	Scan_МатрицаСроковДоставкиИзделийАвтовозом.СпособДоставки,
	               |	Scan_МатрицаСроковДоставкиИзделийАвтовозом.СрокДоставки
	               |ИЗ
	               |	РегистрСведений.Scan_МатрицаСроковДоставкиИзделийАвтовозом КАК Scan_МатрицаСроковДоставкиИзделийАвтовозом
	               |ГДЕ
	               |	Scan_МатрицаСроковДоставкиИзделийАвтовозом.СрокДоставки = &СрокДоставки
	               |	И Scan_МатрицаСроковДоставкиИзделийАвтовозом.АдресОтгрузки = &АдресОтгрузки
	               |	И Scan_МатрицаСроковДоставкиИзделийАвтовозом.АдресДоставки = &АдресДоставки
	               |	И Scan_МатрицаСроковДоставкиИзделийАвтовозом.СпособДоставки = &СпособДоставки";
	Запрос.УстановитьПараметр("СрокДоставки", СрокДоставки);
	Запрос.УстановитьПараметр("АдресОтгрузки", АдресОтгрузки);
	Запрос.УстановитьПараметр("АдресДоставки", АдресДоставки);
	Запрос.УстановитьПараметр("СпособДоставки", СпособДоставки);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		//записи нет - добавим
		
		Если СрокДоставки = 0 Тогда
			
			//rarus tenkam 07.02.2017 TLMS 011 +++
			НаборЗаписей = РегистрыСведений.Scan_МатрицаСроковДоставкиИзделийАвтовозом.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.АдресОтгрузки.Установить(АдресОтгрузки);
			НаборЗаписей.Отбор.АдресДоставки.Установить(АдресДоставки);
			НаборЗаписей.Отбор.СпособДоставки.Установить(СпособДоставки);
			НаборЗаписей.Записать();
			
			НаборЗаписей = РегистрыСведений.Scan_МатрицаСроковДоставкиИзделийАвтовозом.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.АдресОтгрузки.Установить(АдресДоставки);
			НаборЗаписей.Отбор.АдресДоставки.Установить(АдресОтгрузки);
			НаборЗаписей.Отбор.СпособДоставки.Установить(СпособДоставки);
			НаборЗаписей.Записать();
			//rarus tenkam 07.02.2017 TLMS 011 ---
			Возврат Ложь;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.Scan_МатрицаСроковДоставкиИзделийАвтовозом.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.АдресОтгрузки.Установить(АдресОтгрузки);
		НаборЗаписей.Отбор.АдресДоставки.Установить(АдресДоставки);
		НаборЗаписей.Отбор.СпособДоставки.Установить(СпособДоставки);
		
		НаборЗаписей.Прочитать();
		
		НаборЗаписей.Очистить();
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.АдресОтгрузки = АдресОтгрузки;
		НоваяЗапись.АдресДоставки = АдресДоставки;
		НоваяЗапись.СпособДоставки = СпособДоставки;
		НоваяЗапись.СрокДоставки = СрокДоставки;
		НоваяЗапись.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
		
		НаборЗаписей.Записать();
		
		НаборЗаписей = РегистрыСведений.Scan_МатрицаСроковДоставкиИзделийАвтовозом.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.АдресОтгрузки.Установить(АдресДоставки);
		НаборЗаписей.Отбор.АдресДоставки.Установить(АдресОтгрузки);
		НаборЗаписей.Отбор.СпособДоставки.Установить(СпособДоставки);
		
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.АдресОтгрузки = АдресДоставки;
		НоваяЗапись.АдресДоставки = АдресОтгрузки;
		НоваяЗапись.СпособДоставки = СпособДоставки;
		НоваяЗапись.СрокДоставки = СрокДоставки;
		НоваяЗапись.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
		
		НаборЗаписей.Записать();
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

// Функция возвращает срок доставки для указанных адресов в разрезе способа доставки
Функция ПолучитьСрокДоставки(АдресОтгрузки, АдресДоставки, СпособДоставки) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МатрицаСроковДоставкиИзделийАвтовозом.СпособДоставки,
	               |	Scan_МатрицаСроковДоставкиИзделийАвтовозом.СрокДоставки
	               |ИЗ
	               |	РегистрСведений.Scan_МатрицаСроковДоставкиИзделийАвтовозом КАК Scan_МатрицаСроковДоставкиИзделийАвтовозом
	               |ГДЕ
	               |	Scan_МатрицаСроковДоставкиИзделийАвтовозом.АдресОтгрузки = &АдресОтгрузки
	               |	И Scan_МатрицаСроковДоставкиИзделийАвтовозом.АдресДоставки = &АдресДоставки
	               |	И Scan_МатрицаСроковДоставкиИзделийАвтовозом.СпособДоставки = &СпособДоставки";
				   
	Запрос.УстановитьПараметр("АдресОтгрузки", АдресОтгрузки);
	Запрос.УстановитьПараметр("АдресДоставки", АдресДоставки);
	Запрос.УстановитьПараметр("СпособДоставки", СпособДоставки);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СрокДоставки;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции
//rarus tenkam 05.10.2016 mantis 7161 --

//rarus tenkam 05.10.2016 mantis 7183 ++

// Функция возвращает маршрут между двумя местами хранения либо пустую ссылку на справочник 
Функция ПолучитьМаршрут(МестоИсходное, МестоКонечное) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестаХранения.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Scan_МестаХранения КАК Scan_МестаХранения
	               |ГДЕ
	               |	Scan_МестаХранения.ИсходныйПункт = &ИсходныйПункт
	               |	И Scan_МестаХранения.КонечныйПункт = &КонечныйПункт
	               |	И Scan_МестаХранения.Маршрут = ИСТИНА
				   //rarus bonmak 19.06.2020 15981
	               |	И НЕ Scan_МестаХранения.Недействительный";
	Запрос.УстановитьПараметр("ИсходныйПункт", МестоИсходное);
	Запрос.УстановитьПараметр("КонечныйПункт", МестоКонечное);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.Scan_МестаХранения.ПустаяСсылка();
	КонецЕсли;
КонецФункции
//rarus tenkam 05.10.2016 mantis 7183 --

// Функция записи параметров в регистр сведений
Функция ЗаписьЗначенияРегистраСведения(Знач МестоХранения, Знач КонтактныеЛица, НаДату = Неопределено) Экспорт
	
	Отказ = Ложь;
	
	НаборЗаписей = РегистрыСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.МестоХранения.Установить(МестоХранения); 
	
	Для Каждого СтрокаМассива Из КонтактныеЛица Цикл 
		
		НоваяЗапись = НаборЗаписей.Добавить(); 
		
		НоваяЗапись.МестоХранения = МестоХранения; 
		НоваяЗапись.КонтактноеЛицо = СтрокаМассива.КонтактноеЛицо;
		//rarus pechek 2.04.2020 15672 +++
		НоваяЗапись.ДоступностьВПФ = СтрокаМассива.ДоступностьВПФ;
		//rarus pechek 2.04.2020 15672 ---
	КонецЦикла; 
	Попытка
		НаборЗаписей.Записать(); 
	Исключение
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить(НСтр("ru = 'Ошибка записи Контактного лица по месту хранения в регистр сведений'"));
		Сообщить(НСтр("ru = 'Ошибка записи Контактного лица по месту хранения в регистр сведений'; en = 'Contact person saving failed'"));
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
		Отказ = Истина;	
	КонецПопытки;
	
	Возврат Отказ;
		
КонецФункции // ЗаписьЗначенияРегистраСведения()