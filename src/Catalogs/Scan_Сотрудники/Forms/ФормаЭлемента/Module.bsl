
// Обработчик события возникающего на клиенте при изменении данных реквизита "Флаг уволен" в контексте сервера.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаСервере
Процедура ФлагУволенПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.Scan_Сотрудники.ФлагУволенПриИзменении(Объект, ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ФлагУволенПриИзмененииНаСервере()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Флаг уволен".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ФлагУволенПриИзменении(Элемент)
	
	ФлагУволенПриИзмененииНаСервере();
	
КонецПроцедуры // ФлагУволенПриИзменении()

// Производит настройку параметров отображения элементов управления диалога в зависимости от значений реквизитов
// объекта.
//
&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	Элементы.ДатаУвольнения.Доступность = Объект.ФлагУволен;
	//rarus ozhnik 05.01.2020 14927 ++
	Если РольДоступна("ПолныеПрава") Тогда
		Элементы.МенеджерСканияРусь.ТолькоПросмотр = ложь;
	Иначе
		Элементы.МенеджерСканияРусь.ТолькоПросмотр = истина;
	КонецЕсли;
	//rarus ozhnik 05.01.2020 14927 --
КонецПроцедуры // УправлениеДиалогомНаСервере()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//rarus bonmak 05.12.2019 14456 ++
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация");
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	//rarus bonmak 05.12.2019 14456 --
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	НастроитьПараметрыВыбораЭлементовФормы(); //rarus bonmak 05.12.2019 14456
	
	УправлениеДиалогомНаСервере();
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

//rarus sergei 25.08.2016 mantis 7163 ++ 
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// rarus tenkam 05.04.2019 mantis 14316 +++
	//ПрисоединенныеФайлы.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	РаботаСФайлами.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	// rarus tenkam 05.04.2019 mantis 14316 ---
КонецПроцедуры
//rarus sergei 25.08.2016 mantis 7163 --

&НаКлиенте
Процедура КонтактныеЛицаПриАктивизацииСтроки(Элемент) //rarus bonmak 05.12.2019 14456 ++
	Если НЕ Элементы.КонтактныеЛица.ТекущиеДанные = Неопределено Тогда
		ТекущееКонтактноеЛицо = Элементы.КонтактныеЛица.ТекущиеДанные.Ссылка;	
	КонецЕсли;
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()//rarus bonmak 05.12.2019 14456 ++
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если КонтактныеЛица.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Количество() = 0 Тогда
			ЭлементОтбора = КонтактныеЛица.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Владелец");
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование    = Истина;
			ЭлементОтбора.ПравоеЗначение   = Объект.Ссылка;
		Иначе
			ЭлементОтбора = КонтактныеЛица.Отбор.Элементы.Получить(0);
			Если НЕ ЗначениеЗаполнено(ЭлементОтбора.ПравоеЗначение) Тогда
				ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;	
			КонецЕсли;
		КонецЕсли;	
	Иначе
		ЭлементОтбора = КонтактныеЛица.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Владелец");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.ПравоеЗначение   = Справочники.Scan_Сотрудники.ПустаяСсылка();		
	КонецЕсли;	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи) //rarus bonmak 05.12.2019 14456 ++
	НастроитьПараметрыВыбораЭлементовФормы();
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) //rarus bonmak 05.12.2019 14456 ++
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	Отказ = Отказ или ПроверитьДублированиеФлагаМенеджерСканияРусь(Отказ); //rarus ozhnik 05.01.2020 14927 ++ 
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
  	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

//rarus ozhnik 05.01.2020 14927 ++
Функция ПроверитьДублированиеФлагаМенеджерСканияРусь(Отказ)
	
	Если Объект.МенеджерСканияРусь Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Scan_Сотрудники.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Scan_Сотрудники КАК Scan_Сотрудники
			|ГДЕ
			|	НЕ Scan_Сотрудники.Ссылка = &Ссылка
			|	И Scan_Сотрудники.МенеджерСканияРусь = ИСТИНА";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Отказ = Истина;
			ВывестиСообщениеПол(НСТР( "ru = 'В базе может быть только один сотрудник с установленным флагом ""Менеджер Скания-Русь""'; en = 'В базе может быть только один сотрудник с установленным флагом ""Менеджер Скания-Русь""'"),Объект,"МенеджерСканияРусь");
		КонецЕсли;
	
	КонецЕсли;

	Возврат отказ;
	
КонецФункции
//rarus ozhnik 05.01.2020 14927 --

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты) //rarus bonmak 05.12.2019 14456 ++
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект) //rarus bonmak 05.12.2019 14456 ++
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	ОбновитьКонтактнуюИнформацию(Результат);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаСервере
Функция ОбновитьКонтактнуюИнформацию(Результат = Неопределено) //rarus bonmak 05.12.2019 14456 ++	
	Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);	
КонецФункции //rarus bonmak 05.12.2019 14456 --

////////////////////////////////////////////////////////////////////////////////
// Поддержка контактной информации.

&НаСервере
Функция Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)  Экспорт	// rarus tenkam 29.06.2021 mantis 17939 + (добавлен Экспорт) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформацией =
		ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
	
	Возврат МодульУправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(
		ЭтотОбъект, Объект, Результат);	
КонецФункции //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_EMailОчистка(Элемент, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++	
	Если Не Элемент.РедактированиеТекста Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	
	МодульУправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --



