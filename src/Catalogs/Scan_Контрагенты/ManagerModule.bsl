//rarus tenkam 21.10.2016 mantis 6897 ++
Функция ЗаполнитьКонтрагентаИз1БД(НовыйОбъект, ЗначениеПоиска) Экспорт
	ИмяМетода = "GetListOfContragents";
	СообщениеОбОшибке = "";
	Отказ = Ложь;
	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода);
	СтруктураПараметров.Вставить("ИНН", ЗначениеПоиска);
		
	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
	ТекстОтвета = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
	Если НЕ Отказ Тогда
		
		ОбъектКонтрагенты = Scan_ВебСервисы.РазобратьОтветВебСервиса(ТекстОтвета, "Answer.Result.СписокБазовыхОбъектов.Контрагенты", Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетода); 
		Если Отказ Тогда 
			СообщениеОбОшибке = "Не удалось разобрать ответ веб-сервиса. См. журнал регистрации";
			Возврат Ложь;
		КонецЕсли;
		
		Если ОбъектКонтрагенты.Количество() = 0 Тогда
			Возврат Ложь;
		Иначе
			ТекЭлемент = ОбъектКонтрагенты[0]; 
			Для Каждого ЭлементXDTO Из ОбъектКонтрагенты Цикл
				Если ЭлементXDTO.ДатаИзменения > ТекЭлемент.ДатаИзменения Тогда
					ТекЭлемент = ЭлементXDTO;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИмяМетодаНовое = "GetContragents";
		СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетодаНовое, Ложь);
		СтруктураПараметров.GUID = ТекЭлемент.GUID;
		
		ИмяНовогоСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетодаНовое;
		ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетодаНовое, СтруктураПараметров, Отказ, ИмяНовогоСобытияЖурналаРегистрации);
		Если Отказ Тогда 
			СообщениеОбОшибке = "Не удалось разобрать ответ веб-сервиса. См. журнал регистрации";
			Возврат Ложь;
		КонецЕсли;
		ОбъектКонтрагент = Scan_ВебСервисы.РазобратьОтветВебСервиса(ТекЭлементОтвет, "Answer.Result.ДанныеКонтрагента", Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетодаНовое);	
		Если Отказ Тогда 
			СообщениеОбОшибке = "Не удалось разобрать ответ веб-сервиса. См. журнал регистрации";
			Возврат Ложь;
		КонецЕсли;
		
		НовыйОбъект.IDExternalSystem = ОбъектКонтрагент.GUID;
		НовыйОбъект.Наименование = ОбъектКонтрагент.Наименование;
		НовыйОбъект.НаименованиеПолное = ОбъектКонтрагент.НаименованиеПолное;
		
		Если ОбъектКонтрагент.ДополнительныеРеквизиты <> Неопределено Тогда
			Для Каждого ТекСвойство Из ОбъектКонтрагент.ДополнительныеРеквизиты.СписокЗначенийСвойств Цикл
				
				Если ТекСвойство.Свойство.Наименование = "Юридический адрес" Тогда
					НоваяКИ = НовыйОбъект.КонтактнаяИнформация.Добавить();	
					НоваяКИ.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
					НоваяКИ.Представление = ТекСвойство.Значение.Строка;
					// rarus tenkam 02.04.2019 mantis 14298 +++
					//НоваяКИ.ЗначенияПолей = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияXMLПоПредставлению(НоваяКИ.Представление, НоваяКИ.Вид);
					НоваяКИ.Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(НоваяКИ.Представление, НоваяКИ.Вид);
					НоваяКИ.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(НоваяКИ.Значение);
					// rarus tenkam 02.04.2019 mantis 14298 ---
					НоваяКИ.Страна = "РОССИЯ";
					НоваяКИ.Тип = НоваяКИ.Вид.Тип;
				ИначеЕсли ТекСвойство.Свойство.Наименование = "Почтовый адрес" Тогда
					НоваяКИ = НовыйОбъект.КонтактнаяИнформация.Добавить();	
					НоваяКИ.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
					НоваяКИ.Представление = ТекСвойство.Значение.Строка;
					// rarus tenkam 02.04.2019 mantis 14298 +++
					//НоваяКИ.ЗначенияПолей = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияXMLПоПредставлению(НоваяКИ.Представление, НоваяКИ.Вид);
					НоваяКИ.Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(НоваяКИ.Представление, НоваяКИ.Вид);
					НоваяКИ.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(НоваяКИ.Значение);
					// rarus tenkam 02.04.2019 mantis 14298 ---
					НоваяКИ.Страна = "РОССИЯ";
					НоваяКИ.Тип = НоваяКИ.Вид.Тип;
				ИначеЕсли ТекСвойство.Свойство.Наименование = "Наименование" Тогда
					НовыйОбъект.Наименование = ТекСвойство.Значение.Строка;	
				ИначеЕсли ТекСвойство.Свойство.Наименование = "Наименование полное" Тогда
					НовыйОбъект.НаименованиеПолное = ТекСвойство.Значение.Строка	
				ИначеЕсли ТекСвойство.Свойство.Наименование = "Контактный телефон" Тогда
					НоваяКИ = НовыйОбъект.КонтактнаяИнформация.Добавить();	
					НоваяКИ.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
					НоваяКИ.Представление = ТекСвойство.Значение.Строка;
					// rarus tenkam 02.04.2019 mantis 14298 +++
					//НоваяКИ.ЗначенияПолей = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияXMLПоПредставлению(НоваяКИ.Представление, НоваяКИ.Вид);
					НоваяКИ.Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(НоваяКИ.Представление, НоваяКИ.Вид);
					НоваяКИ.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(НоваяКИ.Значение);
					// rarus tenkam 02.04.2019 mantis 14298 ---
					НоваяКИ.НомерТелефона = ТекСвойство.Значение.Строка;
					НоваяКИ.НомерТелефонаБезКодов = ТекСвойство.Значение.Строка;
					НоваяКИ.Тип = НоваяКИ.Вид.Тип;	
				ИначеЕсли ТекСвойство.Свойство.Наименование = "Адрес электронной почты" Тогда
					НоваяКИ = НовыйОбъект.КонтактнаяИнформация.Добавить();
					НоваяКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтрагента;
					НоваяКИ.Представление = ТекСвойство.Значение.Строка;
					// rarus tenkam 02.04.2019 mantis 14298 +++
					//НоваяКИ.ЗначенияПолей = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияXMLПоПредставлению(НоваяКИ.Представление, НоваяКИ.Вид);
					НоваяКИ.Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(НоваяКИ.Представление, НоваяКИ.Вид);
					НоваяКИ.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(НоваяКИ.Значение);
					// rarus tenkam 02.04.2019 mantis 14298 ---
					НоваяКИ.АдресЭП = ТекСвойство.Значение.Строка;
					Поз = СтрНайти(НоваяКИ.Представление, "@");
					Если Поз <> 0 Тогда
						НоваяКИ.ДоменноеИмяСервера = Сред(НоваяКИ.Представление, Поз+1);
					КонецЕсли;
					НоваяКИ.Тип = НоваяКИ.Вид.Тип;
				Иначе
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		НовыйОбъект.Комментарий = "Заполнен по данным из 1БД";
		НовыйОбъект.ДатаОбновления = ТекущаяДата();
	КонецЕсли;	
	Если Отказ Тогда
		Сообщить(ТекстОтвета); 
		Если СообщениеОбОшибке <> "" Тогда
			Сообщить(СообщениеОбОшибке);
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции
//rarus tenkam 21.10.2016 mantis 6897 --

//rarus vikhle 29.06.2020 mt 15888 +++
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	    //rarus ozhnik 16347 20.07.2020 + 
	
		СтандартнаяОбработка = Ложь;
			Если ЗначениеЗаполнено(Параметры.СтрокаПоиска) ТОгда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 10
			|	Scan_Контрагенты.Ссылка.Наименование КАК Представление,
			|	Scan_Контрагенты.Ссылка КАК Значение,
			|	Scan_Контрагенты.ИНН КАК ИНН
			|ИЗ
			|	Справочник.Scan_Контрагенты КАК Scan_Контрагенты
			|ГДЕ
			|	Scan_Контрагенты.Наименование ПОДОБНО &СтрокаПоиска
			|	И Scan_Контрагенты.Недействителен = ЛОЖЬ";	// rarus tenkam 03.08.2020 mantis 16401 +
			
			Запрос.УстановитьПараметр("СтрокаПоиска", Параметры.СтрокаПоиска + "%");
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			ДанныеВыбора = Новый СписокЗначений;
			Пока Выборка.Следующий() Цикл
				ПредставлениеКонтрагента = Новый ФорматированнаяСтрока(
				Новый ФорматированнаяСтрока(
				Лев(Выборка.Представление, СтрДлина(Параметры.СтрокаПоиска)),
				Новый Шрифт(,, Истина),
				ЦветаСтиля.РезультатУспехЦвет),
				Сред(Выборка.Представление, СтрДлина(Параметры.СтрокаПоиска) + 1)+ " " + Выборка.ИНН);
				
				ДанныеВыбора.Добавить(Выборка.Значение, ПредставлениеКонтрагента);
				
			КонецЦикла; 
		КонецЕсли;
		//rarus ozhnik 16347 20.07.2020 - 
КонецПроцедуры

//rarus vikhle 29.06.2020 mt 15888 ---

Процедура ОбработатьНедействительногоКонтрагента(КонтрагентСсылка) Экспорт	// rarus tenkam 02.08.2020 mantis 16401 +++
	Если НЕ ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ КонтрагентСсылка.Недействителен Тогда
		Возврат;
	КонецЕсли;
	
	// Установим признак Недействителен для КЛ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_КонтактныеЛица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_КонтактныеЛица КАК Scan_КонтактныеЛица
		|ГДЕ
		|	Scan_КонтактныеЛица.Владелец = &КонтрагентСсылка
		|	И Scan_КонтактныеЛица.Недействителен = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("КонтрагентСсылка", КонтрагентСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КЛОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		КЛОбъект.Недействителен = Истина;
		
		Попытка
			КЛОбъект.Записать();
		Исключение
			ВывестиСообщениеПол(НСтр("ru = 'Не удалось установить признак Недействителен у контактного лица <%1>: %2'"),,,,, КЛОбъект, ОписаниеОшибки());
		КонецПопытки;		
	КонецЦикла;
	
	// Установим признак Недействителен для мест хранения
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_МестаХранения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_МестаХранения КАК Scan_МестаХранения
		|ГДЕ
		|	Scan_МестаХранения.Контрагент = &КонтрагентСсылка
		|	И Scan_МестаХранения.Недействительный = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("КонтрагентСсылка", КонтрагентСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МестоХраненияОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		МестоХраненияОбъект.Недействительный = Истина;
		
		Попытка
			МестоХраненияОбъект.Записать();
		Исключение
			ВывестиСообщениеПол(НСтр("ru = 'Не удалось установить признак Недействительный у места хранения <%1>: %2'"),,,,, МестоХраненияОбъект, ОписаниеОшибки());
		КонецПопытки;		
	КонецЦикла;
	
	// Установим признак Недействителен для договоров взаиморасчетов с видом Подряда и Хранения
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ДоговорыВзаиморасчетов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_ДоговорыВзаиморасчетов КАК Scan_ДоговорыВзаиморасчетов
		|ГДЕ
		|	Scan_ДоговорыВзаиморасчетов.Владелец = &КонтрагентСсылка
		|	И (Scan_ДоговорыВзаиморасчетов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДоговоров.Подряда)
		|			ИЛИ Scan_ДоговорыВзаиморасчетов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДоговоров.Хранения)
		|			ИЛИ Scan_ДоговорыВзаиморасчетов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДоговоров.Перевозки))	// rarus tenkam 24.03.2021 mantis 17101 +
		|	И Scan_ДоговорыВзаиморасчетов.Недействителен = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("КонтрагентСсылка", КонтрагентСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДоговорОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ДоговорОбъект.Недействителен = Истина;
		// rarus tenkam 24.03.2021 mantis 17101 +++
		Если НЕ ЗначениеЗаполнено(ДоговорОбъект.ДатаОкончанияДействия) Тогда
			ДоговорОбъект.ДатаОкончанияДействия = КонтрагентСсылка.ДатаОкончанияДействия;
		КонецЕсли;		
		// rarus tenkam 24.03.2021 mantis 17101 ---
		Попытка
			ДоговорОбъект.Записать();
		Исключение
			ВывестиСообщениеПол(НСтр("ru = 'Не удалось установить признак Недействителен у договора взаиморасчетов <%1>: %2'"),,,,, ДоговорОбъект, ОписаниеОшибки());
		КонецПопытки;		
	КонецЦикла;   	
	
КонецПроцедуры	// rarus tenkam 02.08.2020 mantis 16401 ---