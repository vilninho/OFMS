
&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	СтраницыПриСменеСтраницы(Элементы.СтраницыРасширеннаяИнформация, Элементы.СтраницыРасширеннаяИнформация.ТекущаяСтраница);
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено ИЛИ Элементы.СтраницыРасширеннаяИнформация.ТекущаяСтраница = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ТекущаяСтрока = Неопределено;
	//Иначе
	//	ОсновнойБанковскийСчет = Элементы.Список.ТекущиеДанные.ОсновнойБанковскийСчет;
	КонецЕсли;
	
	Если Элементы.СтраницыРасширеннаяИнформация.ТекущаяСтраница.Имя = "СтраницаКонтактныеЛица"  Тогда
		КонтактныеЛица.Отбор.Элементы.Очистить();
		ЭлементОтбора = КонтактныеЛица.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Владелец");
		ЭлементОтбора.Использование  = ИСТИНА;
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ТекущаяСтрока;
		//ТаблицаПризнаковОткрытияВкладок.НайтиПоЗначению("СтраницаКонтактныеЛица").Пометка = Истина;
		
	
	ИначеЕсли Элементы.СтраницыРасширеннаяИнформация.ТекущаяСтраница.Имя = "СтраницаДоговоры" Тогда
		Договоры.Отбор.Элементы.Очистить();
		ЭлементОтбора = Договоры.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Владелец");
		ЭлементОтбора.Использование  = ИСТИНА;
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ТекущаяСтрока;
		//ТаблицаПризнаковОткрытияВкладок.НайтиПоЗначению("СтраницаДоговоры").Пометка = Истина;
		
	КонецЕсли;

КонецПроцедуры

//rarus tenkam 21.10.2016 mantis 6897 ++
&НаКлиенте
Процедура СоздатьКонтрагента(Команда)
	Обработчик = Новый ОписаниеОповещения("ОбработатьИНН", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
	ОткрытьФорму("Справочник.Scan_Контрагенты.Форма.ФормаИНН",,,,,, Обработчик, Режим);
КонецПроцедуры

//Описание оповещения о закрытии формы подбора по ИНН
&НаКлиенте
Процедура ОбработатьИНН(ЗначениеВозвр, Параметры) Экспорт
	Если ЗначениеВозвр = Неопределено ИЛИ
		ЗначениеВозвр = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеВозвр.Свойство("ИНН") И ЗначениеВозвр.Свойство("Резидент") Тогда		//rarus tenkam 22.12.2016 mantis 8207 + 
		Если ЗначениеВозвр.Резидент Тогда //rarus bonmak 15.04.2020 14456 добавил условие и отработку истина
			НайденныйКонтрагент =  ТакойКонтрагентУжеЕсть(ЗначениеВозвр.ИНН, ЗначениеВозвр.КПП);	
		Иначе	
			НайденныйКонтрагент =  ТакойКонтрагентУжеЕсть(ЗначениеВозвр.ИНН);
		КонецЕсли;
		Если НайденныйКонтрагент <> Неопределено Тогда
			//rarus FominskiyAS 19.04.2019  mantis 14191 +++
			//Сообщить("Контрагент с таким ИНН уже есть в базе!");
			Сообщить(НСтр("ru = 'Контрагент с таким ИНН уже есть в базе!'; en = 'Counteragent with same INN (tax number) already exists!'"));
			//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
			Элементы.Список.ТекущаяСтрока = НайденныйКонтрагент;
			//НайденныйКонтрагент = Справочники.Scan_Контрагенты.СоздатьЭлемент();
			ПараметрыФормы = Новый Структура("Ключ", НайденныйКонтрагент);
			ОткрытьФорму("Справочник.Scan_Контрагенты.ФормаОбъекта",ПараметрыФормы);
			Возврат;
		Иначе
			//rarus bonmak 15.04.2020 14456 ++
			//	ПараметрыСоздания = Новый Структура;
			//	ПараметрыСоздания.Вставить("ИНН", ЗначениеВозвр.ИНН);
			//	ПараметрыСоздания.Вставить("Родитель", Элементы.Список.ТекущийРодитель);
			//	ПараметрыСоздания.Вставить("Резидент", ЗначениеВозвр.Резидент);	//rarus tenkam 22.12.2016 mantis 8207 +
			//
			//	ОткрытьФорму("Справочник.Scan_Контрагенты.Форма.ФормаЭлемента",ПараметрыСоздания);
			
			ИмяМетода = "GetListOfContragents";
			СообщениеОбОшибке = "";
			Отказ = Ложь;
			СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода, Истина);
			СтруктураПараметров.Вставить("ИНН", ЗначениеВозвр.ИНН);
			Если ЗначениеВозвр.Резидент Тогда
				СтруктураПараметров.Вставить("КПП", ЗначениеВозвр.КПП);
			КонецЕсли;
			ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
			ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
			Если НЕ Отказ Тогда
				ГруппаКонтрагента = ВернутьПапкуКлиенты(); //rarus bonmak 26.01.2021 17092
				СсылкаЭлемента = Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникКонтрагенты(ТекЭлементОтвет, Отказ, СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации, ИмяМетода, ГруппаКонтрагента);
			КонецЕсли;
			
			Если Отказ Тогда
				Сообщить(НСтр("ru = 'По заданным отборам контрагент не найден. Просьба обратиться к администратору 1БД для создания контрагента в 1ДБ'; en = 'No counterparty was found for the given selections. Please contact the administrator of 1BD to create a counterparty in 1DB'"));
			Иначе
				//rarus bonmak 24.09.2020 14456 ++
				Если ЗначениеВозвр.Резидент Тогда 
					НайденныйКонтрагент =  ТакойКонтрагентУжеЕсть(ЗначениеВозвр.ИНН, ЗначениеВозвр.КПП);	
				Иначе	
					НайденныйКонтрагент =  ТакойКонтрагентУжеЕсть(ЗначениеВозвр.ИНН);
				КонецЕсли;

				ПараметрыФормы = Новый Структура("Ключ", НайденныйКонтрагент);
				ОткрытьФорму("Справочник.Scan_Контрагенты.ФормаОбъекта",ПараметрыФормы);
				//rarus bonmak 24.09.2020 14456 --
			КонецЕсли;
			Элементы.Список.Обновить();
			//rarus bonmak 15.04.2020 14456 --
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ВернутьПапкуКлиенты() //rarus bonmak 26.01.2021 17092 ++
	Возврат Справочники.Scan_Контрагенты.Клиенты;	
КонецФункции //rarus bonmak 26.01.2021 17092 --

// Функция проверяет, существует ли в базе контрагент с указанным ИНН
&НаСервереБезКонтекста
Функция ТакойКонтрагентУжеЕсть(ЗначениеПоискаИНН, ЗначениеПоискаКПП = Неопределено)
	//rarus bonmak 15.04.2020 14456 ++	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_Контрагенты.Ссылка КАК КонтрагентСсылка
	|ИЗ
	|	Справочник.Scan_Контрагенты КАК Scan_Контрагенты
	|ГДЕ
	|	Scan_Контрагенты.ИНН = &ИНН
	|	И (Scan_Контрагенты.КПП = &КПП
	|			ИЛИ ИСТИНА)";
	
	Запрос.УстановитьПараметр("ИНН", ЗначениеПоискаИНН);
	Запрос.УстановитьПараметр("КПП", ЗначениеПоискаКПП);
	
	РезультатЗапроса = Запрос.Выполнить();
	//rarus bonmak 24.09.2020 14456 ++
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	//rarus bonmak 24.09.2020 14456 --
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	НайденныйКонтрагент = ВыборкаДетальныеЗаписи.КонтрагентСсылка; 		
	
	//rarus bonmak 24.09.2020 14456 ++
	//НайденныйКонтрагент = Справочники.Scan_Контрагенты.НайтиПоРеквизиту("ИНН", ЗначениеПоиска);
	//rarus bonmak 15.04.2020 14456 --	
	//Если НайденныйКонтрагент = Справочники.Scan_Контрагенты.ПустаяСсылка() Тогда
	//	Возврат Неопределено;
	//Иначе
	Возврат НайденныйКонтрагент;
	//КонецЕсли;
	//rarus bonmak 24.09.2020 14456 --
КонецФункции

&НаСервере
Процедура ОбновитьКонтрагентовНаСервере()
	Для Каждого ТекСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ЗначениеЗаполнено(ТекСтрока.IDExternalSystem) Тогда
			ИмяМетода = "GetContragents";
			СообщениеОбОшибке = "";
			Отказ = Ложь;
			СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода, Ложь);
			СтруктураПараметров.Вставить("GUID", ТекСтрока.IDExternalSystem);
			ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
			ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
			Если НЕ Отказ Тогда
				СсылкаЭлемента = Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникКонтрагенты(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
			КонецЕсли;
			//rarus bonmak 15.04.2020 14456 ++
			//ИначеЕсли ЗначениеЗаполнено(ТекСтрока.ИНН) Тогда
		//	ИмяМетода = "GetListOfContragents";
		//	СообщениеОбОшибке = "";
		//	Отказ = Ложь;
		//	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода, Истина);
		//	СтруктураПараметров.Вставить("ИНН", ТекСтрока.ИНН);
		//	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
		//	ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
		//	Если НЕ Отказ Тогда
		//		СсылкаЭлемента = Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникКонтрагенты(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
		//	КонецЕсли;
		//rarus bonmak 15.04.2020 14456 --
		КонецЕсли;
	КонецЦикла;
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКонтрагентов(Команда)
	ОбновитьКонтрагентовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеДиалогомНаСервере();
	ОформитьИСкрытьНедействительных();	// rarus tenkam 02.09.2020 mantis 16401 +
КонецПроцедуры

//rarus vikhle 07.05.2020 mt 15695 +++
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();
КонецПроцедуры
//rarus vikhle 07.05.2020 mt 15695 ---

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	Элементы.ФормаГруппаИнтеграция.Видимость = Scan_ПраваИНастройки.Scan_Право("ОбменСПредставительством");
КонецПроцедуры
//rarus tenkam 21.10.2016 mantis 6897 --  

//rarus tenkam 24.10.2017 mantis 11269 баг платформы +++ 
&НаКлиенте
Процедура СписокПриСменеТекущегоРодителя(Элемент)
	// rarus tenkam 19.04.2019 mantis 14195 +++
	#Если Не ВебКлиент Тогда	
	// rarus tenkam 19.04.2019 mantis 14195 ---
		WSHShell = Новый COMОбъект("WScript.Shell");
		WSHShell.SendKeys("{UP}");
	// rarus tenkam 19.04.2019 mantis 14195 +++
	#КонецЕсли
	// rarus tenkam 19.04.2019 mantis 14195 ---	
КонецПроцедуры
//rarus tenkam 24.10.2017 mantis 11269 баг платформы ---

&НаКлиенте
Процедура ПереместитьЭлементВверх()
	
	// rarus agar 25.05.2021 16927 ++
	//Если Не ВозможноПеремещениеЭлемента(Элементы.Список.ТекущиеДанные.Ссылка, "Вверх") Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Перемещение данного вида контактной информации не предусмотрено'"));
	//	Возврат;
	//КонецЕсли;
	//
	//НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВверхВыполнить(Список, Элементы.Список);
	// rarus agar 25.05.2021 16927 --
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВниз()
	
	// rarus agar 25.05.2021 16927 ++
	//Если Не ВозможноПеремещениеЭлемента(Элементы.Список.ТекущиеДанные.Ссылка, "Вниз") Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Перемещение данного вида контактной информации не предусмотрено'"));
	//	Возврат;
	//КонецЕсли;
	//
	//НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВнизВыполнить(Список, Элементы.Список);
	// rarus agar 25.05.2021 16927 --
	
КонецПроцедуры

//rarus vikhle 05.07.2021 апк +++
//&НаСервере
//Функция ВозможноПеремещениеЭлемента(ТекущийЭлемент, Направление)
//	
//	// rarus agar 25.05.2021 16927 ++
//	//СоседнийЭлемент = НастройкаПорядкаЭлементовСлужебный.СоседнийЭлемент(ТекущийЭлемент, Список, Направление);
//	//
//	//Возврат СоседнийЭлемент = Неопределено Или Не (ТекущийЭлемент.ЗапретитьРедактированиеПользователем Или СоседнийЭлемент.ЗапретитьРедактированиеПользователем);
//	// rarus agar 25.05.2021 16927 --
//	
//КонецФункции
//rarus vikhle 05.07.2021 апк ---

&НаКлиенте
Процедура ПоказатьНедействительныхПриИзменении(Элемент)	// rarus tenkam 02.09.2020 mantis 16401 +++
	ПереключитьОтображениеНедействительныхКонтрагентов(ПоказатьНедействительныхКонтрагентов);             	
КонецПроцедуры	// rarus tenkam 02.09.2020 mantis 16401 ---

&НаКлиенте
Процедура ПереключитьОтображениеНедействительныхКонтрагентов(ПоказатьНедействительных)	// rarus tenkam 02.09.2020 mantis 16401 +++
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Недействителен", Ложь, , ,
		НЕ ПоказатьНедействительных);
	
КонецПроцедуры	// rarus tenkam 02.09.2020 mantis 16401 ---
	
&НаСервере
Процедура ОформитьИСкрытьНедействительных()	// rarus tenkam 02.09.2020 mantis 16401 +++
	
	// Оформление.
	ЭлементОформления = Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ЭлементЦветаОформления = ЭлементОформления.Оформление.Элементы.Найти("TextColor");
	ЭлементЦветаОформления.Значение = Метаданные.ЭлементыСтиля.ТекстЗапрещеннойЯчейкиЦвет.Значение;
	ЭлементЦветаОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Недействителен");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Истина;
	ЭлементОтбора.Использование  = Истина;
	
	// Скрытие.
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Недействителен", Ложь, , , Истина);
	
КонецПроцедуры	// rarus tenkam 02.09.2020 mantis 16401 ---
