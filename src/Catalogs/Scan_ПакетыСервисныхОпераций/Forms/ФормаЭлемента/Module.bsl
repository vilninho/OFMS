//rarus tenkam 06.11.2017 mantis 9427 +++

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Заполним логистическими типами
	ЗаполнитьЛогистическиеТипыСрокКТС();
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если Объект.Недействителен Тогда
		//Удалим записи из регистра
		РегистрыСведений.Scan_СрокиВыполненияКонтроляТехническогоCостояния.ОчиститьЗаписиНедействительногоПакета(ТекущийОбъект.Ссылка);
	Иначе 		
		Для Каждого ТекЛогТип Из ЛогистическиеТипыПакета Цикл
			ТекСрокКТС = ?(ТекЛогТип.Выбрано, Объект.СрокКТС, 0);
			РегистрыСведений.Scan_СрокиВыполненияКонтроляТехническогоCостояния.ЗаписатьСрокиВыполненияКТСВРегистр(ТекущийОбъект.Ссылка, ТекЛогТип.ЛогистическийТипИзделий, ТекСрокКТС, ТекущаяДата());
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если НЕ Отказ И ТекущийОбъект.СервисныеОперацииПакета.Количество() <> 0 Тогда
		ПерваяСервиснаяОперация = ТекущийОбъект.СервисныеОперацииПакета[0];
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ПакетыСервисныхОперацийСервисныеОперацииПакета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_ПакетыСервисныхОпераций.СервисныеОперацииПакета КАК Scan_ПакетыСервисныхОперацийСервисныеОперацииПакета
		|ГДЕ
		|	Scan_ПакетыСервисныхОперацийСервисныеОперацииПакета.Ссылка <> &Ссылка
		|	И Scan_ПакетыСервисныхОперацийСервисныеОперацииПакета.СервиснаяОперацияПакета = &СервиснаяОперацияПакета
		|	И Scan_ПакетыСервисныхОперацийСервисныеОперацииПакета.НомерСтроки = &НомерСтроки";
		
		Запрос.УстановитьПараметр("НомерСтроки", ПерваяСервиснаяОперация.НомерСтроки);
		Запрос.УстановитьПараметр("СервиснаяОперацияПакета", ПерваяСервиснаяОперация.СервиснаяОперацияПакета);
		Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НайденныйПакет = ВыборкаДетальныеЗаписи.Ссылка;
			Если НайденныйПакет.СервисныеОперацииПакета.Количество() <> ТекущийОбъект.СервисныеОперацииПакета.Количество() Тогда
				Продолжить;
			КонецЕсли;
			ПакетДругой = Ложь;
			Для Каждого ТекОперация Из ТекущийОбъект.СервисныеОперацииПакета Цикл
				НайденнаяОперация = НайденныйПакет.СервисныеОперацииПакета[ТекОперация.НомерСтроки - 1];
				Если ТекОперация.СервиснаяОперацияПакета <> НайденнаяОперация.СервиснаяОперацияПакета Тогда
					ПакетДругой = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НЕ ПакетДругой Тогда
				//Проверим отмечены ли для этого пакета те же логистические типы
				ПараметрыОтбора = Новый Структура("Выбрано", Истина);
				ОтмеченныеЛогистичТипы = ЛогистическиеТипыПакета.НайтиСтроки(ПараметрыОтбора);
				Для Каждого ТекЛогТип Из ОтмеченныеЛогистичТипы Цикл
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних.ПакетСервисныхОпераций КАК ПакетСервисныхОпераций
					|ИЗ
					|	РегистрСведений.Scan_СрокиВыполненияКонтроляТехническогоCостояния.СрезПоследних(
					|			&НаДату,
					|			ПакетСервисныхОпераций = &ТекПакет
					|				И ЛогистическийТип = &ЛогистическийТип) КАК Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних
					|ГДЕ
					|	Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних.СрокКТС <> 0";
					Запрос.УстановитьПараметр("ЛогистическийТип", ТекЛогТип.ЛогистическийТипИзделий);
					Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
					Запрос.УстановитьПараметр("ТекПакет", НайденныйПакет);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Если ВыборкаДетальныеЗаписи.Следующий() Тогда
												
						//rarus FominskiyAS 13.06.2019  mantis 14191 +++
						//Сообщить("Для логистического типа " + ТекЛогТип.ЛогистическийТипИзделий + " уже задан пакет " + НайденныйПакет);
						Сообщить(НСтр("ru = 'Для логистического типа '; en = 'For logistics  type '") + ТекЛогТип.ЛогистическийТипИзделий + НСтр("ru = ' уже задан пакет '; en = '""package"" already selected '") + НайденныйПакет);
						//rarus FominskiyAS 13.06.2019  mantis 14191 ---  
						
						Отказ = Истина;
						Прервать;
					КонецЕсли;					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) // Rarus tenkam 11.04.2022 mantis 18433 +++

	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
КонецПроцедуры 	// Rarus tenkam 11.04.2022 mantis 18433 ---

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого ТекЛогистическийТип Из ЛогистическиеТипыПакета Цикл
		ТекЛогистическийТип.Выбрано = Ложь;
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого ТекЛогистическийТип Из ЛогистическиеТипыПакета Цикл
		ТекЛогистическийТип.Выбрано = Истина;
	КонецЦикла;		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЛогистическиеТипыСрокКТС()
	ЛогистическиеТипыПакета.Очистить();
	МассивЛогистическихТипов = ПолучитьВсеЛогистическиеТипы();
	Для Каждого ТекЛогистическийТип Из МассивЛогистическихТипов Цикл
		НоваяСтрока = ЛогистическиеТипыПакета.Добавить();
		НоваяСтрока.ЛогистическийТипИзделий = ТекЛогистическийТип;
	КонецЦикла;
			
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	МАКСИМУМ(Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних.СрокКТС) КАК СрокКТС
		//|ИЗ
		//|	РегистрСведений.Scan_СрокиВыполненияКонтроляТехническогоCостояния.СрезПоследних(&НаДату, ПакетСервисныхОпераций = &ТекПакет) КАК Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних";
		//
		//Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
		//Запрос.УстановитьПараметр("ТекПакет", Объект.Ссылка);
		//РезультатЗапроса = Запрос.Выполнить();
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		//
		//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		//	СрокКТССтарый = ВыборкаДетальныеЗаписи.СрокКТС;
		//Иначе
		//	СрокКТССтарый = 0;
		//КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СрокКТС) Тогда
			//Проставим флажки у логистических типов
			МассивЛогТиповВыбрано = ПолучитьЛогистическиеТипыПоСрокуКТС(Объект.Ссылка, Объект.СрокКТС);
			ПараметрыОтбора = Новый Структура("ЛогистическийТипИзделий", Неопределено);
			Для Каждого ТекСтрока Из МассивЛогТиповВыбрано Цикл
				ПараметрыОтбора.ЛогистическийТипИзделий = ТекСтрока;	
				НайденныеСтроки = ЛогистическиеТипыПакета.НайтиСтроки(ПараметрыОтбора); 
				Если НайденныеСтроки.Количество() > 0 Тогда
					НайденныеСтроки[0].Выбрано = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;		  		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВсеЛогистическиеТипы()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ТипыПродуктовЛогистика.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_ТипыПродуктовЛогистика КАК Scan_ТипыПродуктовЛогистика
		|ГДЕ
		|	Scan_ТипыПродуктовЛогистика.ПометкаУдаления = &Ложь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("Ложь", Ложь);
	
	РезультатЗапроса = Запрос.Выполнить();
	МассивЛогистическихТипов = Новый Массив;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		МассивЛогистическихТипов = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	Возврат МассивЛогистическихТипов;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЛогистическиеТипыПоСрокуКТС(ТекПакет, ТекСрокКТС)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних.ЛогистическийТип КАК ЛогистическийТип
		|ИЗ
		|	РегистрСведений.Scan_СрокиВыполненияКонтроляТехническогоCостояния.СрезПоследних(&НаДату, ПакетСервисныхОпераций = &ТекПакет) КАК Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних
		|ГДЕ
		|	Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних.СрокКТС = &ТекСрокКТС
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_СрокиВыполненияКонтроляТехническогоCостоянияСрезПоследних.ЛогистическийТип
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЛогистическийТип";
	
	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Запрос.УстановитьПараметр("ТекПакет", ТекПакет);
	Запрос.УстановитьПараметр("ТекСрокКТС", ТекСрокКТС);

	РезультатЗапроса = Запрос.Выполнить();
	МассивЛогистическихТипов = Новый Массив;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		МассивЛогистическихТипов = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ЛогистическийТип");
	КонецЕсли;
	Возврат МассивЛогистическихТипов;
КонецФункции

&НаКлиенте
Процедура ЛогистическиеТипыПакетаВыбраноПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СрокКТСПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СервисныеОперацииПакетаСервиснаяОперацияПакетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Элементы.СервисныеОперацииПакета.ТекущиеДанные.СервиснаяОперацияПакета = ВыбранноеЗначение;
	Если УжеЕстьВТаблице(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		Элементы.СервисныеОперацииПакета.ТекущиеДанные.СервиснаяОперацияПакета = "";
		
		//rarus FominskiyAS 21.04.2019  mantis 14191 +++
		//Сообщить("Выбранная сервисная операция уже есть в табличной части!");
		Сообщить(НСтр("ru = 'Выбранная сервисная операция уже есть в табличной части!'; en = 'The selected service operation is already in the table!'"));
		//rarus FominskiyAS 21.04.2019  mantis 14191 ---  
	ИначеЕсли НЕ ИспользуетсяПриКТС(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		Элементы.СервисныеОперацииПакета.ТекущиеДанные.СервиснаяОперацияПакета = "";
		
		//rarus FominskiyAS 21.04.2019  mantis 14191 +++
		//Сообщить("Выбранная сервисная операция не используется при контроле технического состояния!");
		Сообщить(НСтр("ru = 'Выбранная сервисная операция не используется при контроле технического состояния!'; en = 'The selected service operation is not used in the control of a technical condition!'"));
		//rarus FominskiyAS 21.04.2019  mantis 14191 ---  	
	КонецЕсли;   
КонецПроцедуры

&НаСервере
Функция УжеЕстьВТаблице(Выбор)
    МассивНайденныхСтрок = Объект.СервисныеОперацииПакета.НайтиСтроки(Новый Структура("СервиснаяОперацияПакета",Выбор));
    Возврат МассивНайденныхСтрок.Количество() > 1;
КонецФункции

&НаСервере
Функция ИспользуетсяПриКТС(Выбор)
    Возврат Выбор.ИспользуетсяПриКонтролеТехническогоСостояния;
КонецФункции


//rarus tenkam 06.11.2017 mantis 9427 ---


//rarus FominskiyAS 12.08.2019  mantis 14760 +++

&НаКлиенте
Процедура Печать(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		Обработчик = Новый ОписаниеОповещения("ПечатьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(
			Обработчик,
			НСтр("ru = 'Печать возможна только после записи данных.
                  |Записать?'"),
			РежимДиалогаВопрос.ДаНет,
			,
			КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	ПечатьЗавершение(-1);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗавершение(ОтветНаПредложениеЗаписать, ПараметрыВыполнения = Неопределено) Экспорт
	
	Если ОтветНаПредложениеЗаписать <> -1 Тогда
		Если ОтветНаПредложениеЗаписать <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		Записан = Записать();
		Если Не Записан Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПечати = Новый Структура;
	МассивОбъектов = Новый Массив; 
	МассивОбъектов.Добавить(Объект.Ссылка);
	ПараметрыПечати.Вставить("МассивОбъектов",МассивОбъектов);
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(Объект.Ссылка);
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		МодульУправлениеПечатьюКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");
		МодульУправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Справочник.Scan_ПакетыСервисныхОпераций", "СервисныеОперацииПриКТС", 
			ПараметрКоманды, ЭтотОбъект, ПараметрыПечати);
	КонецЕсли;
	
КонецПроцедуры




//rarus FominskiyAS 12.08.2019  mantis 14760 ---  
