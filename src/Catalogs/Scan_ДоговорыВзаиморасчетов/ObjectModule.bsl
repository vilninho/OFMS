Перем СтруктураИзмененныеРеквизиты;	// rarus tenkam 30.09.2020 mantis 16181 +
Перем НужноПересчитатьТарифы; // rarus tenkam 24.03.2021 mantis 17101 +

//rarus sergei 09.11.2016 mantis 7163 ++
Процедура ПередЗаписью(Отказ)
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ?(ЭтотОбъект.ЭтоНовый(), ИСТИНА, ЛОЖЬ));
	
	// rarus tenkam 30.09.2020 mantis 16181 +++
	СтруктураИзмененныеРеквизиты = Новый Структура;
	Если ЗначениеЗаполнено(IDExternalSystem) И 
		(ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение ИЛИ
		ВидДоговора = Перечисления.Scan_ВидыДоговоров.ДопСоглашениеКСОП) Тогда
		
		Если Ссылка.Наименование <> Наименование Тогда
			СтруктураИзмененныеРеквизиты.Вставить("Наименование", Наименование);
		КонецЕсли;
		
		Если Ссылка.НомерДоговора <> НомерДоговора Тогда
			СтруктураИзмененныеРеквизиты.Вставить("НомерДоговора", НомерДоговора);
		КонецЕсли;
		
		Если Ссылка.ДатаНачала <> ДатаНачала Тогда
			СтруктураИзмененныеРеквизиты.Вставить("Дата", ДатаНачала);
		КонецЕсли;   		
		
		Если Ссылка.ВидДоговора <> ВидДоговора Тогда
			СтруктураИзмененныеРеквизиты.Вставить("ВидДоговора", ?(ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение, "Соглашение", "Дополнительное соглашение"));
		КонецЕсли;
		
		Если Ссылка.Компания <> Компания Тогда
			СтруктураИзмененныеРеквизиты.Вставить("ДилерGUID", Компания.IDExternalSystem);
		КонецЕсли;
		
		Если Ссылка.ВалютаВзаиморасчетов <> ВалютаВзаиморасчетов Тогда
			СтруктураИзмененныеРеквизиты.Вставить("ВалютаCode", ВалютаВзаиморасчетов.Код);
			СтруктураИзмененныеРеквизиты.Вставить("ВалютаDescription", ВалютаВзаиморасчетов.Наименование);		
		КонецЕсли;
	КонецЕсли;
	// rarus tenkam 30.09.2020 mantis 16181 ---
	
	// rarus tenkam 24.03.2021 mantis 17101 +++
	НужноПересчитатьТарифы = Ложь;
	
	// Rarus tenkam 17.05.2022 mantis 17628 +++
	Если ЗначениеЗаполнено(ДатаОкончания) ИЛИ ЗначениеЗаполнено(ДатаОкончанияДействия) Тогда
		
		// Rarus tenkam 20.06.2022 АПК +++
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.Scan_МатрицаТарифовПоДоставкеИзделий");
			ЭлементБлокировки.УстановитьЗначение("ДоговорКонтрагента", Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			// Rarus tenkam 20.06.2022 АПК ---
			
			// Получим тарифы, действующие по договору после даты окончания	
			ТекДатаОкончания = ?(ЗначениеЗаполнено(ДатаОкончания), ДатаОкончания, ДатаОкончанияДействия);
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Scan_МатрицаТарифовПоДоставкеИзделий.Период КАК Период,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.Контрагент КАК Контрагент,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.ДоговорКонтрагента КАК ДоговорКонтрагента,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.НоменклатураУслуги КАК НоменклатураУслуги,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.ГруппаПродукта КАК ГруппаПродукта,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.СтавкаНДС КАК СтавкаНДС,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.СпособДоставки КАК СпособДоставки,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.АдресПолучения КАК АдресПолучения,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.АдресДоставки КАК АдресДоставки,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.ЛогистическийТип КАК ЛогистическийТип,
			|	Scan_МатрицаТарифовПоДоставкеИзделий.КолеснаяФормула КАК КолеснаяФормула
			|ИЗ
			|	РегистрСведений.Scan_МатрицаТарифовПоДоставкеИзделий КАК Scan_МатрицаТарифовПоДоставкеИзделий
			|ГДЕ
			|	Scan_МатрицаТарифовПоДоставкеИзделий.ДоговорКонтрагента = &Договор
			|	И Scan_МатрицаТарифовПоДоставкеИзделий.Период >= &ДатаОкончания";
			
			Запрос.УстановитьПараметр("ДатаОкончания", ТекДатаОкончания);
			Запрос.УстановитьПараметр("Договор", Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Удалим записи
				НаборЗаписей = РегистрыСведений.Scan_МатрицаТарифовПоДоставкеИзделий.СоздатьНаборЗаписей();
				
				НаборЗаписей.Отбор.Период.Установить(ВыборкаДетальныеЗаписи.Период);
				НаборЗаписей.Отбор.Контрагент.Установить(ВыборкаДетальныеЗаписи.Контрагент);
				НаборЗаписей.Отбор.ДоговорКонтрагента.Установить(ВыборкаДетальныеЗаписи.ДоговорКонтрагента);
				НаборЗаписей.Отбор.НоменклатураУслуги.Установить(ВыборкаДетальныеЗаписи.НоменклатураУслуги);
				НаборЗаписей.Отбор.ГруппаПродукта.Установить(ВыборкаДетальныеЗаписи.ГруппаПродукта);
				НаборЗаписей.Отбор.СтавкаНДС.Установить(ВыборкаДетальныеЗаписи.СтавкаНДС);
				НаборЗаписей.Отбор.СпособДоставки.Установить(ВыборкаДетальныеЗаписи.СпособДоставки);
				НаборЗаписей.Отбор.АдресПолучения.Установить(ВыборкаДетальныеЗаписи.АдресПолучения);
				НаборЗаписей.Отбор.АдресДоставки.Установить(ВыборкаДетальныеЗаписи.АдресДоставки);
				НаборЗаписей.Отбор.ЛогистическийТип.Установить(ВыборкаДетальныеЗаписи.ЛогистическийТип);
				НаборЗаписей.Отбор.КолеснаяФормула.Установить(ВыборкаДетальныеЗаписи.КолеснаяФормула);
				
				НаборЗаписей.Записать();
				НужноПересчитатьТарифы = Истина;
			КонецЦикла;
			
			// Rarus tenkam 20.06.2022 АПК +++
			ЗафиксироватьТранзакцию();
		Исключение
			// 5. Если при установке блокировки возникла исключительная ситуация из-за того, что регистр уже заблокирован в другом сеансе (или по другим причинам),
			// отменить транзакцию и записать сведения об ошибке в журнал регистрации.
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Матрица тарифов по доставке изделий'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение;
		КонецПопытки;   
		// Rarus tenkam 20.06.2022 АПК ---
		
		
	КонецЕсли;
	// Rarus tenkam 17.05.2022 mantis 17628 ---
	
	Если ВидДоговора = Перечисления.Scan_ВидыДоговоров.Перевозки Тогда
		// Изменилась дата окончания действия, дата окончания или договор стал недействителен
		Если (Ссылка.ДатаОкончанияДействия <> ДатаОкончанияДействия) ИЛИ
			(НЕ Ссылка.Недействителен И Недействителен) ИЛИ
			(Ссылка.ДатаОкончания <> ДатаОкончания)Тогда
			НужноПересчитатьТарифы = Истина;
		КонецЕсли;
	КонецЕсли;
	// rarus tenkam 24.03.2021 mantis 17101 --- 	
	
КонецПроцедуры

//rarus tenkam 14.11.2016 mantis 6897, TLMS 011 ++
Процедура ПриЗаписи(Отказ)
	НаДату = ТекущаяДата();
	Если ВидДоговора = Перечисления.Scan_ВидыДоговоров.Подряда Тогда
		Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведения(Ссылка, СрокБесплатногоХраненияПродукта, НаДату);
	ИначеЕсли ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение ИЛИ
		ВидДоговора = Перечисления.Scan_ВидыДоговоров.ДопСоглашениеКСОП Тогда	// rarus tenkam 30.09.2020 mantis 16181 + 	
		
		// rarus tenkam 09.11.2020 mantis 16759 +++		
		Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовыйАлгоритмСозданияДоговоров") Тогда
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, Владелец, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.Владелец, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, ВидДоговора, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.ВидДоговора, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, Наименование, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.Наименование, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, НомерДоговора, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.НомерДоговора, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, Компания, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.Компания, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, СОП_СтатусОплаты, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.СтатусОплаты, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, СтавкаНДС, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.СтавкаНДС, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, ВключаетНДС, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.ВключаетНДС, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, ВалютаВзаиморасчетов, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.Валюта, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, Бессрочный, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.Бессрочный, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, ДатаНачала, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.ДатаНачала, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, ДатаОкончания, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.ДатаОкончания, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, Недействителен, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.Недействителен, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, Расторгнут, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.Расторгнут, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, ДатаРасторжения, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.ДатаРасторжения, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, ДатаОбновления, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.ДатаОбновления, НаДату);
			Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияИзмененияДанныхПоСОП(Ссылка, IDExternalSystem, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.IDExternalSystem, НаДату);
	    Иначе
		// rarus tenkam 09.11.2020 mantis 16759 ---		
		
			//Для Каждого ТекСтрока Из СпецификацияКСОП Цикл //rarus bonmak 09.08.2021 16834 
				// rarus tenkam 28.06.2019 mantis 14427 +++
				//Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияПоСОП(Ссылка, Владелец, СОП_ОсновнойДоговор, ТекСтрока.СОП_Продукт, НомерДоговора, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.НомерДоговора, НаДату);
				//Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияПоСОП(Ссылка, Владелец, СОП_ОсновнойДоговор, ТекСтрока.СОП_Продукт, СОП_СтатусОплаты, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.СтатусОплаты, НаДату);
				//Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияПоСОП(Ссылка, Владелец, СОП_ОсновнойДоговор, ТекСтрока.СОП_Продукт, СОП_ДатаОбновления, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.ДатаОбновления, НаДату);
				//Если ТекСтрока.СОП_Продукт.СОП <> Ссылка Тогда
				//	ЗаполнитьСОПВПродукте(ТекСтрока.СОП_Продукт, Ссылка);	
				//КонецЕсли; 
				
				//rarus bonmak 09.08.2021 16834 ++
				//Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияПоСОП(Ссылка, Владелец, СОП_ОсновнойДоговор, ТекСтрока.СОП_Изделие, НомерДоговора, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.НомерДоговора, НаДату);
				//Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияПоСОП(Ссылка, Владелец, СОП_ОсновнойДоговор, ТекСтрока.СОП_Изделие, СОП_СтатусОплаты, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.СтатусОплаты, НаДату);
				//Справочники.Scan_ДоговорыВзаиморасчетов.ЗаписьЗначенияРегистраСведенияИсторияПоСОП(Ссылка, Владелец, СОП_ОсновнойДоговор, ТекСтрока.СОП_Изделие, СОП_ДатаОбновления, Перечисления.Scan_ДополнительнаяИнформацияПоСОП.ДатаОбновления, НаДату);
				//rarus bonmak 09.08.2021 16834 --
				//rarus bonmak 09.08.2021 16834 ++
				//Если ТекСтрока.СОП_Изделие.СОП <> Ссылка Тогда
					//ЗаполнитьСОПВИзделии(ТекСтрока.СОП_Изделие, Ссылка);	
				//КонецЕсли;
				//rarus bonmak 09.08.2021 16834 --
				// rarus tenkam 28.06.2019 mantis 14427 ---
				
				//// rarus tenkam 10.07.2019 mantis 14634 удалить по 14430 +++			
				//Если ЗначениеЗаполнено(ТекСтрока.СОП_Продукт) И ТекСтрока.СОП_Продукт.СОП <> Ссылка Тогда
				//	ЗаполнитьСОПВПродукте(ТекСтрока.СОП_Продукт, Ссылка);	
				//КонецЕсли;  			
				//// rarus tenkam 10.07.2019 mantis 14634 удалить по 14430 --- 

			//КонецЦикла;
		КонецЕсли;	// rarus tenkam 09.11.2020 mantis 16759 +
		
		// rarus tenkam 30.09.2020 mantis 16181 +++
		Если НЕ Отказ И СтруктураИзмененныеРеквизиты.Количество() <> 0 Тогда
			Справочники.Scan_ДоговорыВзаиморасчетов.ИзменитьДоговорВ1БД(СтруктураИзмененныеРеквизиты, Ссылка);	
		КонецЕсли;
		// rarus tenkam 30.09.2020 mantis 16181 ---
		
		// rarus tenkam 03.11.2020 mantis 16759 +++
		Если НЕ Отказ И Расторгнут Тогда
			
			Если ЗначениеЗаполнено(ДоговорОснование) Тогда     
				Справочники.Scan_ДоговорыВзаиморасчетов.РасторгнутьДоговор(ДоговорОснование, ДатаРасторжения);
			КонецЕсли;
		КонецЕсли;
		// rarus tenkam 03.11.2020 mantis 16759 ---
	КонецЕсли;
	
	// rarus tenkam 24.03.2021 mantis 17101 +++
	Если НужноПересчитатьТарифы Тогда
		Сообщить(НСтр("ru = 'Запущен фоновый пересчет тарифов.'; en = 'Tariff recalculation'"));
		// rarus tenkam 31.08.2021 mantis 17628 +++
		//ФоновыеЗадания.Выполнить("Scan_Тарифы.ПересчитатьДоставкуПолнуюЛьготную", , Новый УникальныйИдентификатор,	"Пересчет полной и льготной доставки");	
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить(Scan_Тарифы.ПолучитьСтруктуруПараметровПоКонтрагенту(Владелец));
		ФоновыеЗадания.Выполнить("Scan_Тарифы.ПересчитатьДоставкуПолнуюЛьготную", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор,	"Пересчет полной и льготной доставки");	
		// rarus tenkam 31.08.2021 mantis 17628 ---
	КонецЕсли;
	// rarus tenkam 24.03.2021 mantis 17101 ---
	
	// Rarus tenkam 12.01.2022 mantis 18672 +++
	Если ДОДоговорПолученИз1СДО И ДополнительныеСвойства.ЭтоНовый Тогда
		Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьМеханизмШаблоновДляОтправкиПисем") Тогда
			РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонПисьмаОПоявленииНовогоДоговораИз1СДО",НомерДоговора);
		КонецЕсли;
	КонецЕсли; 
	// Rarus tenkam 12.01.2022 mantis 18672 ---
	
КонецПроцедуры

//// rarus tenkam 10.07.2019 mantis 14634 удалить по 14430 +++			

//// Процедура заполняет у продукта СОП 
//Процедура ЗаполнитьСОПВПродукте(ПродуктСсылка, СОПСсылка)
//	Если НЕ ЗначениеЗаполнено(ПродуктСсылка) Тогда
//		Возврат;
//	КонецЕсли;
//	
//	ПродуктОбъект = ПродуктСсылка.ПолучитьОбъект();
//	СтарыйСОП = ПродуктОбъект.СОП;  	//rarus tenkam 27.10.2017 mantis 10204 +
//	
//	ПродуктОбъект.СОП = СОПСсылка;
//	//rarus abrant 18.04.2017 9275 +++
//	ПродуктОбъект.Заказчик = СОПСсылка.Владелец;
//	//rarus abrant 18.04.2017 9275 +++
//	Попытка
//		ПродуктОбъект.Записать();
//		Справочники.Scan_ДоговорыВзаиморасчетов.УдалитьПродуктИзСОП(СтарыйСОП, ПродуктОбъект.Ссылка);		//rarus tenkam 27.10.2017 mantis 10204 +
//	Исключение
//	КонецПопытки;
//КонецПроцедуры
//// rarus tenkam 10.07.2019 mantis 14634 удалить по 14430 ---			

//rarus tenkam 14.11.2016 mantis 6897, TLMS 011 --

// rarus tenkam 28.06.2019 mantis 14427 +++

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	//rarus vikhle 18.08.2020 mt 16181 +++
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Scan_ДоговорыВзаиморасчетов") Тогда
		IDExternalSystem = ДанныеЗаполнения.IDExternalSystem;
		Бессрочный = ДанныеЗаполнения.Бессрочный;
		ВалютаВзаиморасчетов = ДанныеЗаполнения.ВалютаВзаиморасчетов;
		ВключаетНДС = ДанныеЗаполнения.ВключаетНДС;
		Владелец = ДанныеЗаполнения.Владелец;
		ДатаНачала = ДанныеЗаполнения.ДатаНачала;
		ДатаОбновления = ДанныеЗаполнения.ДатаОбновления;
		//Компания = ДанныеЗаполнения.Компания; //rarus vikhle 26.05.2021 m 17653 заполняется в обработке корректировки
		НомерСоглашения = ДанныеЗаполнения.НомерСоглашения;
		Основной = ДанныеЗаполнения.Основной;
		СОП_ДатаОбновления = ДанныеЗаполнения.СОП_ДатаОбновления;
		//rarus bonmak 09.08.2021 16834 СОП_Закрыт = ДанныеЗаполнения.СОП_Закрыт;
		//rarus bonmak 09.08.2021 16834 СОП_СебестоимостьСумма = ДанныеЗаполнения.СОП_СебестоимостьСумма;
		//rarus bonmak 09.08.2021 16834 СОП_СебестоимостьСуммаБезНДС = ДанныеЗаполнения.СОП_СебестоимостьСуммаБезНДС;
		СОП_СтатусОплаты = ДанныеЗаполнения.СОП_СтатусОплаты;
		//rarus bonmak 09.08.2021 16834 СОП_СуммаПоСОПБезНДС = ДанныеЗаполнения.СОП_СуммаПоСОПБезНДС;
		СрокБесплатногоХраненияПродукта = ДанныеЗаполнения.СрокБесплатногоХраненияПродукта;
		//rarus bonmak 09.08.2021 16834 СОП_ОсновнойДоговор = ДанныеЗаполнения.Ссылка;
		ДоговорОснование = ДанныеЗаполнения.Ссылка;
		СтавкаНДС = ДанныеЗаполнения.СтавкаНДС;
		Для Каждого ТекСтрокаМестаХранения Из ДанныеЗаполнения.МестаХранения Цикл
			НоваяСтрока = МестаХранения.Добавить();
			НоваяСтрока.МестоХранения = ТекСтрокаМестаХранения.МестоХранения;
		КонецЦикла;
		Если НЕ Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовыйАлгоритмСозданияДоговоров") Тогда //rarus bonmak 25.03.2021 17443 добавил условие		
			//rarus bonmak 09.08.2021 16834 ++
			//Для Каждого ТекСтрокаСпецификацияКСОП Из ДанныеЗаполнения.СпецификацияКСОП Цикл
			//	НоваяСтрока = СпецификацияКСОП.Добавить();
			//	НоваяСтрока.СОП_Изделие = ТекСтрокаСпецификацияКСОП.СОП_Изделие;
			//	НоваяСтрока.СОП_Количество = ТекСтрокаСпецификацияКСОП.СОП_Количество;
			//	НоваяСтрока.СОП_МестоДоставки = ТекСтрокаСпецификацияКСОП.СОП_МестоДоставки;
			//	НоваяСтрока.СОП_Себестоимость = ТекСтрокаСпецификацияКСОП.СОП_Себестоимость;
			//	НоваяСтрока.СОП_СебестоимостьБезНДС = ТекСтрокаСпецификацияКСОП.СОП_СебестоимостьБезНДС;
			//	НоваяСтрока.СОП_СрокПоставки = ТекСтрокаСпецификацияКСОП.СОП_СрокПоставки;
			//	НоваяСтрока.СОП_СуммаПродажиБезНДС = ТекСтрокаСпецификацияКСОП.СОП_СуммаПродажиБезНДС;
			//	НоваяСтрока.СОП_ЦенаПродажиБезНДС = ТекСтрокаСпецификацияКСОП.СОП_ЦенаПродажиБезНДС;
			//КонецЦикла;
			//rarus bonmak 09.08.2021 16834 --
			//rarus vikhle 18.08.2020 mt 16181 ---
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// rarus tenkam 28.06.2019 mantis 14427 ---

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)	// rarus tenkam 03.11.2020 mantis 16759 +++
	
	Если (ВидДоговора = ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.Соглашение") ИЛИ
		ВидДоговора = ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.ДопСоглашениеКСОП")) 
		И Расторгнут И НЕ ЗначениеЗаполнено(ДатаРасторжения) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не заполнено поле Дата расторжения!";
		Сообщение.Поле = "ДатаРасторжения";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина;         		
	КонецЕсли;
	
	// rarus tenkam 24.03.2021 mantis 17101 +++
	Если Недействителен И НЕ ЗначениеЗаполнено(ДатаОкончанияДействия) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не указана дата окончания действия!'; en = 'Expiration date is empty!'");
		Сообщение.Поле = "ДатаОкончанияДействия";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина;     			
	КонецЕсли;  	
	// rarus tenkam 24.03.2021 mantis 17101 ---
	
	// rarus tenkam 26.07.2021 mantis 17628 +++
	Если ВидДоговора = ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.Перевозки") Тогда
		Если ЗначениеЗаполнено(ДатаОкончания) И ДатаОкончания < ДатаНачала Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Дата окончания меньше даты начала!'; en = 'Expiration date is before start date!'");
			Сообщение.Поле = "ДатаОкончания";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			
			Отказ = Истина;			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаОкончанияДействия) И ДатаОкончанияДействия < ДатаНачала Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Дата окончания действия меньше даты начала!'; en = 'Expiration date is before start date!'");
			Сообщение.Поле = "ДатаОкончанияДействия";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			
			Отказ = Истина;				
		КонецЕсли; 		
		
		// Rarus tenkam 17.05.2022 mantis 17628 +++
		//КрайняяДатаНачалаТарифов = Scan_Тарифы.ПолучитьКрайнююДатуНачалаТарифовПоДоговору(Ссылка);
		//Если ЗначениеЗаполнено(КрайняяДатаНачалаТарифов) И (ЗначениеЗаполнено(ДатаОкончанияДействия)) И 
		//	КрайняяДатаНачалаТарифов > ДатаОкончанияДействия Тогда
		//	Отказ = Истина;
		//	ВывестиСообщениеПол("По договору есть тарифы, действующие с %1. Дата окончания действия не может быть раньше даты начала действия тарифов.",,,,,КрайняяДатаНачалаТарифов);
		//КонецЕсли;

		//КрайняяДатаНачалаТарифов = Scan_Тарифы.ПолучитьКрайнююДатуНачалаТарифовПоДоговору(Ссылка);
		//Если ЗначениеЗаполнено(КрайняяДатаНачалаТарифов) И (ЗначениеЗаполнено(ДатаОкончания)) И 
		//	КрайняяДатаНачалаТарифов > ДатаОкончания Тогда
		//	Отказ = Истина;
		//	ВывестиСообщениеПол("По договору есть тарифы, действующие с %1. Дата окончания действия не может быть раньше даты начала действия тарифов.",,,,,КрайняяДатаНачалаТарифов);
		//КонецЕсли;
		
		// Rarus tenkam 17.05.2022 mantis 17628 ---
	КонецЕсли;
	// rarus tenkam 26.07.2021 mantis 17628 ---	
	
КонецПроцедуры

// Заполняет реквизиты "НомерСоглашения", "НомерДоговора", "ДатаНачала" и "Наименование" переданного договора с видом "Соглашение".
// Устанавливает блокировку на всю таблицу "Справочник.Scan_ДоговорыВзаиморасчетов" для избежания коллизий по нумерации. 
// Должнао вызываться в транзакции.
Процедура ЗаполнитьДанныеНумерацииСОП() Экспорт //rarus vikhle 06.10.2021 mt 18076 +++
	
	Если НЕ ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение Тогда
		Возврат;
	КонецЕсли;	
	
	// Блокировка всей таблицы, возможна ошибка при одновременном создании договоров у других пользователей
	// при превышении времени блокировки
	Блокировка					= Новый БлокировкаДанных;
	ЭлементБлокировки			= Блокировка.Добавить();
	ЭлементБлокировки.Область	= "Справочник.Scan_ДоговорыВзаиморасчетов";
	ЭлементБлокировки.Режим		= РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(Scan_ДоговорыВзаиморасчетов.НомерСоглашения), 0) КАК НомерСоглашения
		|ИЗ
		|	Справочник.Scan_ДоговорыВзаиморасчетов КАК Scan_ДоговорыВзаиморасчетов
		|ГДЕ
		|	Scan_ДоговорыВзаиморасчетов.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Scan_ДоговорыВзаиморасчетов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДоговоров.Соглашение)"; //rarus vikhle 11.01.2021 m 18750
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецГода(ТекущаяДатаСеанса()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Номер =  0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Номер = ?(ВыборкаДетальныеЗаписи.НомерСоглашения = 0, 1, ВыборкаДетальныеЗаписи.НомерСоглашения + 1);
	КонецЦикла;
	
	фСтрокаНомера	= СтрЗаменить(Строка(Номер),Символы.НПП,"");
	СтрокаНомера	= СтрЗаменить(фСтрокаНомера, ",", "");
	Пока СтрДлина(СтрокаНомера) < 4 Цикл
		СтрокаНомера = "0" + СтрокаНомера;	
	КонецЦикла; 
	
	НомерСоглашения = Номер;
	НомерДоговора	= СтрЗаменить("" + (Формат(Год(ТекущаяДатаСеанса()),"ЧГ=0")) + "-" + СтрокаНомера, Символы.НПП,""); //rarus vikhle 11.10.2021 АПК текдатасеанса
	ДатаНачала		= ТекущаяДатаСеанса();
	Наименование	= "№ " + СокрЛП(НомерДоговора) + " от " + Формат(ДатаНачала,НСтр("ru='ДФ=дд.ММ.гггг; ДЛФ=Д'"));
	
КонецПроцедуры //rarus vikhle 06.10.2021 mt 18076 ---


