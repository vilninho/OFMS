
//&НаКлиенте
//Процедура КонтрагентПриИзменении(Элемент)
//	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
//		УстановитьКодSOWA(Объект.Контрагент);
//	КонецЕсли;
//КонецПроцедуры

//&НаСервере
//Процедура УстановитьКодSOWA(Контрагент)
//	Объект.КодДилераSOWA = Контрагент.КодДилераSOWA;	
//КонецПроцедуры

//rarus tenkam 23.06.2016 mantis 6897 --

//rarus tenkam 18.10.2016 mantis 6897 ++
&НаСервере
Процедура ОбновитьЭлементНаСервере()
	Если НЕ ЗначениеЗаполнено(Объект.IDExternalSystem) Тогда
		//Создан вручную
	Иначе
		//rarus bonmak 15.04.2020 14456 ++
		//ИмяМетода = "GetDealers";
		//СообщениеОбОшибке = "";
		//Отказ = Ложь;
		//СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода ,Ложь);
		//СтруктураПараметров.Вставить("GUID", Объект.IDExternalSystem);
		//ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
		//ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
		//Если НЕ Отказ Тогда
		//	СсылкаПродукта = Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникДилеры(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
		//КонецЕсли;
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("GUID", Объект.IDExternalSystem);
		Scan_ВебСервисыРазборОтветов.ВызватьМетод_GetCompany(ДопПараметры);
		//rarus bonmak 15.04.2020 14456 --
		ЭтаФорма.Прочитать();
		УправлениеДиалогомНаСервере();
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлемент(Команда)
	ОбновитьЭлементНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//rarus bonmak 05.12.2019 14456 ++
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация");
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	//rarus bonmak 05.12.2019 14456 --
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	//rarus bonmak 05.12.2019 14456 ++
	НастроитьПараметрыВыбораЭлементовФормы();
	Если Объект.Ссылка.Пустая() Тогда
		СвязьКомпанийКонтрагентовИВидовВзаимодействия2.Отбор.Компания.Значение = Справочники.Scan_Компании.ПустаяСсылка();
		СвязьКомпанийКонтрагентовИВидовВзаимодействия2.Отбор.Компания.Использование = Истина;
	Иначе
		СвязьКомпанийКонтрагентовИВидовВзаимодействия2.Отбор.Компания.Значение = Объект.Ссылка;
		СвязьКомпанийКонтрагентовИВидовВзаимодействия2.Отбор.Компания.Использование = Истина;
	КонецЕсли;
	Набор = ДанныеФормыВЗначение(СвязьКомпанийКонтрагентовИВидовВзаимодействия2, Тип("РегистрСведенийНаборЗаписей.Scan_ВзаимосвязьКомпанийСКонтрагентами"));
	Набор.прочитать();
	ЗначениеВРеквизитФормы(Набор, "СвязьКомпанийКонтрагентовИВидовВзаимодействия2");
	
	//rarus bonmak 05.12.2019 14456 --
	
	//rarus ozhnik 06.01.2020 14927 ++
	
	ЗакрепленныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровЗаДилерами.ПолучитьЗакрепленногоМенеджера(Объект.Ссылка);
	
	//rarus ozhnik 06.01.2020 14927 --
	
	//rarus agar 02.10.2020 16596 ++
	ЗакрепленныйМенеджерОКП = Документы.Scan_ЗакреплениеМенеджеровОКПЗаДилерами.ПолучитьЗакрепленногоМенеджера(Объект.Ссылка);
	//rarus agar 02.10.2020 16596 --
	
	УправлениеДиалогомНаСервере();
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

//rarus vikhle 07.05.2020 mt 15695 +++
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();
КонецПроцедуры
//rarus vikhle 07.05.2020 mt 15695 ---

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	Элементы.ФормаГруппаИнтеграция.Видимость = Scan_ПраваИНастройки.Scan_Право("ОбменСПредставительством");
	Элементы.ФормаОбновитьЭлемент.Доступность = (ЗначениеЗаполнено(Объект.IDExternalSystem));
	
	Если ЗначениеЗаполнено(Объект.ДатаОбновления) Тогда
		Элементы.ФормаОбновитьЭлемент.Заголовок = Объект.ДатаОбновления;
	КонецЕсли;
	
	//rarus vikhle 18.06.2020 mt 15695 +++ добавил префикс scan к имени роли
	Элементы.ВидДилера.Доступность = РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Scan_ДобавлениеИзменениеАРМОтделаПланирования"); //rarus bonmak 05.12.2019 14456 //rarus bonmak 15.04.2020 14456
	//rarus vikhle 18.06.2020 mt 15695 ---
	
	//rarus bonmak 15.04.2020 14456 ++
	Набор = ДанныеФормыВЗначение(СвязьКомпанийКонтрагентовИВидовВзаимодействия2, Тип("РегистрСведенийНаборЗаписей.Scan_ВзаимосвязьКомпанийСКонтрагентами"));
	Набор.прочитать();
	ЗначениеВРеквизитФормы(Набор, "СвязьКомпанийКонтрагентовИВидовВзаимодействия2");
	//rarus bonmak 15.04.2020 14456 --
	
	//rarus vikhle 14.02.2023 m 19839 +++
	Элементы.ГруппаДоступныеМарки.Видимость = Объект.Дилер;
	Элементы.ГруппаДоступныеМарки.ТолькоПросмотр = НЕ Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактированиеДоступныхМарокДилера");
	//rarus vikhle 14.02.2023 m 19839 ---
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеЛицаПриАктивизацииСтроки(Элемент) //rarus bonmak 05.12.2019 14456 ++
	Если НЕ Элементы.КонтактныеЛица.ТекущиеДанные = Неопределено Тогда
		ТекущееКонтактноеЛицо = Элементы.КонтактныеЛица.ТекущиеДанные.Ссылка;	
	КонецЕсли;
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()//rarus bonmak 05.12.2019 14456 ++
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если КонтактныеЛица.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Количество() = 0 Тогда
			ЭлементОтбора = КонтактныеЛица.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Владелец");
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование    = Истина;
			ЭлементОтбора.ПравоеЗначение   = Объект.Ссылка;
		Иначе
			ЭлементОтбора = КонтактныеЛица.Отбор.Элементы.Получить(0);
			Если НЕ ЗначениеЗаполнено(ЭлементОтбора.ПравоеЗначение) Тогда
				ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;	
			КонецЕсли;
		КонецЕсли;	
	Иначе
		ЭлементОтбора = КонтактныеЛица.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Владелец");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.ПравоеЗначение   = Справочники.Scan_Сотрудники.ПустаяСсылка();		
	КонецЕсли;	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи) //rarus bonmak 05.12.2019 14456 ++
	НастроитьПараметрыВыбораЭлементовФормы();
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) //rarus bonmak 05.12.2019 14456 ++
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	//rarus bonmak 15.04.2020 14456 ++
	Набор = ДанныеФормыВЗначение(СвязьКомпанийКонтрагентовИВидовВзаимодействия2, Тип("РегистрСведенийНаборЗаписей.Scan_ВзаимосвязьКомпанийСКонтрагентами"));
	Если Набор.Количество() > 0 Тогда
		Для Каждого Стр Из Набор Цикл
			Если Стр.РежимУстановкиВидаВзаимодействия <> Перечисления.Scan_РежимУстановкиВидаВзаимодействия.Автоматически Тогда
				Если НЕ ЗначениеЗаполнено(Стр.Контрагент) ИЛИ  НЕ ЗначениеЗаполнено(Стр.ВидВзаимодействия) Тогда
					Сообщить(Нстр("ru = 'Не заполненные поля в таблице взаимодействия с контрагентом'; en = 'Unfilled fields in the counterparty interaction table'"));	
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	//rarus bonmak 15.04.2020 14456 --

	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
  
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты) //rarus bonmak 05.12.2019 14456 ++
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект) //rarus bonmak 05.12.2019 14456 ++
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформациейКлиент =
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	ОбновитьКонтактнуюИнформацию(Результат);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформациейКлиент =
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаСервере
Функция ОбновитьКонтактнуюИнформацию(Результат = Неопределено) //rarus bonmak 05.12.2019 14456 ++	
	Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);	
КонецФункции //rarus bonmak 05.12.2019 14456 --

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) //rarus bonmak 05.12.2019 14456 ++
	
	Набор = ДанныеФормыВЗначение(СвязьКомпанийКонтрагентовИВидовВзаимодействия2, Тип("РегистрСведенийНаборЗаписей.Scan_ВзаимосвязьКомпанийСКонтрагентами"));
	Если Набор.Количество() > 0 Тогда
		Для Каждого Стр Из Набор Цикл 
			Если Стр.Период = Дата(1,1,1,0,0,0) Тогда
				ТекПериод = ТекущаяДата();
				ТекПериод = ПроверитьПериодЗаписи(ТекПериод);
				Стр.Период = ТекПериод;
				Стр.Компания = Объект.Ссылка;
				Стр.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
				Стр.РежимУстановкиВидаВзаимодействия = ПолучитьРежимВидаВзаимодействия();
			Иначе
				НаборЗаписейРегистра = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.СоздатьНаборЗаписей();
				НаборЗаписейРегистра.Отбор.Период.Значение = Стр.Период;
				НаборЗаписейРегистра.Отбор.Период.Использование = Истина;
				НаборЗаписейРегистра.Отбор.Компания.Значение = Стр.Компания;
				НаборЗаписейРегистра.Отбор.Компания.Использование = Истина;
				НаборЗаписейРегистра.Отбор.Контрагент.Значение = Стр.Контрагент;
				НаборЗаписейРегистра.Отбор.Контрагент.Использование = Истина;
				НаборЗаписейРегистра.Отбор.ВидВзаимодействия.Значение = Стр.ВидВзаимодействия;
				НаборЗаписейРегистра.Отбор.ВидВзаимодействия.Использование = Истина;
				НаборЗаписейРегистра.Прочитать();
				Если НаборЗаписейРегистра.Количество() = 0 Тогда
					ТекПериод = ТекущаяДата();
					ТекПериод = ПроверитьПериодЗаписи(ТекПериод);
					Стр.Период = ТекПериод;
					Стр.Компания = Объект.Ссылка;
					Стр.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
					Стр.РежимУстановкиВидаВзаимодействия = ПолучитьРежимВидаВзаимодействия();
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Набор.Записать();
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

////////////////////////////////////////////////////////////////////////////////
// Поддержка контактной информации.

&НаСервере
Функция Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)  Экспорт	// rarus tenkam 29.06.2021 mantis 17939 + (добавлен Экспорт) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформацией =
	ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
	
	Возврат МодульУправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(
	ЭтотОбъект, Объект, Результат);	
КонецФункции //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_EMailОчистка(Элемент, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++	
	Если Не Элемент.РедактированиеТекста Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;	
	МодульУправлениеКонтактнойИнформациейКлиент =
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	
	МодульУправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++
	МодульУправлениеКонтактнойИнформациейКлиент =
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформациейКлиент =
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка) //rarus bonmak 05.12.2019 14456 ++	
	МодульУправлениеКонтактнойИнформациейКлиент =
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаКлиенте
Процедура СвязьКомпанийКонтрагентовИВидовВзаимодействия2ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр) //rarus bonmak 05.12.2019 14456 ++
	Если Объект.Ссылка.Пустая() Тогда
		Сообщить(Нстр("ru = 'Перед добавлением связи необходимо записать элемент справочника'; en = 'Before adding a link, you must write a dictionary element'"));
		Отказ = Истина;
	КонецЕсли;
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры //rarus bonmak 05.12.2019 14456 --

&НаСервере
Функция ПолучитьРежимВидаВзаимодействия() //rarus bonmak 05.12.2019 14456 ++
	Возврат Перечисления.Scan_РежимУстановкиВидаВзаимодействия.Вручную;	
КонецФункции //rarus bonmak 05.12.2019 14456 --

&НаСервере
Функция ПроверитьПериодЗаписи(ТекПериод) //rarus bonmak 05.12.2019 14456 ++	
	Отбор = Новый Структура;
	Отбор.Вставить("Период",ТекПериод);
	НайденныеСтроки = СвязьКомпанийКонтрагентовИВидовВзаимодействия2.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		ТекПериод = ТекПериод + 1;
		ТекПериод = ПроверитьПериодЗаписи(ТекПериод);	
	КонецЕсли;		
	Возврат ТекПериод;	
КонецФункции //rarus bonmak 05.12.2019 14456 --

&НаСервере
Процедура СвязьКомпанийКонтрагентовИВидовВзаимодействия2ВидВзаимодействияПриИзмененииНаСервере(ВыбранныйВидВзаимодействия, Отказ) //rarus bonmak 15.04.2020 14456 ++
	Если ВыбранныйВидВзаимодействия = Scan_ПраваИНастройки.Scan_Право("ВидВзаимодействияДилер") Тогда
		Набор = ДанныеФормыВЗначение(СвязьКомпанийКонтрагентовИВидовВзаимодействия2, Тип("РегистрСведенийНаборЗаписей.Scan_ВзаимосвязьКомпанийСКонтрагентами"));
		ТаблицаВыгрузка = Набор.Выгрузить();
		Отбор = Новый Структура();
		Отбор.Вставить("ВидВзаимодействия", ВыбранныйВидВзаимодействия);
		Строки = ТаблицаВыгрузка.НайтиСтроки(Отбор);
		Если Строки.Количество() = 2 Тогда
			ВыбранныйВидВзаимодействия = Справочники.Scan_ВидыВзаимодействий.ПустаяСсылка();
			Отказ = Истина;
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры //rarus bonmak 15.04.2020 14456 --

&НаКлиенте
Процедура СвязьКомпанийКонтрагентовИВидовВзаимодействия2ВидВзаимодействияПриИзменении(Элемент) //rarus bonmak 15.04.2020 14456 ++
	Отказ = Ложь;
	СвязьКомпанийКонтрагентовИВидовВзаимодействия2ВидВзаимодействияПриИзмененииНаСервере(Элементы.СвязьКомпанийКонтрагентовИВидовВзаимодействия2.ТекущиеДанные.ВидВзаимодействия, Отказ);
	
	Если Отказ Тогда
		Сообщить(Нстр("ru = 'Вид взаимодействия дилер добавлен!'; en = 'Dealer interaction type added!'"));
		Возврат;
	КонецЕсли;
	
КонецПроцедуры //rarus bonmak 15.04.2020 14456 --

&НаКлиенте
Процедура ДоступныеМаркиДилераПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	//ТекущиеДанные = Элемент.ТекущиеДанные;
	//Если НЕ ТекущиеДанные = Неопределено Тогда
	//	ТекущиеДанные.Период = ОбщегоНазначенияКлиент.ДатаСеанса();
	//	ТекущиеДанные.Автор = ПользователиКлиент.ТекущийПользователь();
	//КонецЕсли;
	
КонецПроцедуры
//rarus tenkam 18.10.2016 mantis 6897 --

//rarus vikhle 15.02.2023 m 19839 +++
&НаКлиенте
Процедура ДоступныеМаркиДилераПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ЗаполнитьСлужебныеКолонкиДоступныхМарок(ТекущиеДанные);
	КонецЕсли;

КонецПроцедуры
//rarus vikhle 15.02.2023 m 19839 ---

//rarus vikhle 15.02.2023 m 19839 +++
&НаКлиенте
Процедура ДоступныеМаркиДилераМаркаПриИзменении(Элемент)
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	ЗаполнитьСлужебныеКолонкиДоступныхМарок(ТекущиеДанные);
		
КонецПроцедуры
//rarus vikhle 15.02.2023 m 19839 ---

//rarus vikhle 15.02.2023 m 19839 +++
&НаКлиенте
Процедура ЗаполнитьСлужебныеКолонкиДоступныхМарок(ТекущиеДанные)
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные.Период = ОбщегоНазначенияКлиент.ДатаСеанса();
		ТекущиеДанные.Автор = ПользователиКлиент.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры	
//rarus vikhle 15.02.2023 m 19839 ---
