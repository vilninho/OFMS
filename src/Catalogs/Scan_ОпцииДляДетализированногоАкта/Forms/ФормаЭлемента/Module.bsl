
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.БезОпций = Истина;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) // Rarus tenkam 11.04.2022 mantis 18433 +++

	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
КонецПроцедуры 	// Rarus tenkam 11.04.2022 mantis 18433 ---

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПорядковыйНомерВДетализированномАктеПриИзменении(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПорядковыйНомерВДетализированномАктеПриИзмененииФрагмент", ЭтотОбъект),
		Нстр("ru = 'Перед изменением порядкового номера необходимо записать элемент. Продолжить?'; en = 'It is necessary to save the item. Proceed?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьВопросОНайденныхЭлементах();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядковыйНомерВДетализированномАктеПриИзмененииФрагмент(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если  РезультатВопроса = КодВозвратаДиалога.Да 
		И Записать()
		Тогда
		ПоказатьВопросОНайденныхЭлементах();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядковыйНомерВДетализированномАктеПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПорядковыйНомерВДетализированномАктеПриИзмененииНаСервере();
		Записать();
		Оповестить("ПеренумерацияОпцийДетАкта");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БезОпцийПриИзменении(Элемент)
	
	Если Объект.БезОпций Тогда
		Объект.ВключаетОпции  = Ложь;
		Объект.ИсключитьОпции = Ложь;
		
		Объект.ПредставлениеДляДетализированногоАкта = Неопределено;
		Объект.Опции.Очистить();
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВключаетОпцииПриИзменении(Элемент)
	
	Если Объект.ВключаетОпции Тогда
		Объект.БезОпций       = Ложь;
		Объект.ИсключитьОпции = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьОпцииПриИзменении(Элемент)
	
	Если Объект.ИсключитьОпции Тогда
		Объект.БезОпций      = Ложь;
		Объект.ВключаетОпции = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииОпцияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РодительОпций = ПолучитьРодителяОпций();
	Если РодительОпций.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Родитель");
	эОтбор.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	эОтбор.ПравоеЗначение   = РодительОпций;
	эОтбор.Использование    = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	эОтбор.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	эОтбор.ПравоеЗначение   = Ложь;
	эОтбор.Использование    = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ЭтоГруппа");
	эОтбор.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	эОтбор.ПравоеЗначение   = Ложь;
	эОтбор.Использование    = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	
	ОткрытьФорму("Справочник.Scan_ОпцииПродуктов.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииОпцияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НайденныеСтроки = Объект.Опции.НайтиСтроки(Новый Структура("Опция", ВыбранноеЗначение));
	Если  НайденныеСтроки.Количество() > 0
		И НайденныеСтроки[0].НомерСтроки <> ТекущийЭлемент.ТекущаяСтрока + 1
		Тогда
		СтандартнаяОбработка = Ложь;
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Опция ""%1"" уже подобрана в табличную часть в строке ""%2"".';
		                                |en = 'The item ""1%"" is already picked up in the line ""2%"".'"), 
		                                ВыбранноеЗначение, НайденныеСтроки[0].НомерСтроки);
		Сообщить(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПроверитьВхождениеВыбраннойОпцииВСемействоНаСервере(ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииОпцияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Опции.ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(Объект.ПредставлениеДляДетализированногоАкта) 
		  И ЗначениеЗаполнено(ТекущиеДанные.Опция)
		Тогда
		ОпцияПриИзмененииНаСервере(ТекущиеДанные.Опция);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	Элементы.Опции.ТолькоПросмотр = Объект.БезОпций;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОНайденныхЭлементах()
	
	ПоследующиеНомераЭлементов = ПоследующиеНомераЭлементов(Объект.Ссылка, Объект.Родитель, Объект.ПорядковыйНомерВДетализированномАкте);
	Если  Объект.ПорядковыйНомерВДетализированномАкте <> 0 
		И ПоследующиеНомераЭлементов.Найти(Объект.ПорядковыйНомерВДетализированномАкте) <> Неопределено 
		Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПорядковыйНомерВДетализированномАктеПриИзмененииЗавершение", ЭтотОбъект),
		Нстр("ru = 'Найдены элементы с равным или бОльшим порядковым номером. 
					|Номера этих элементов будут увеличены на 1. 
					|Продолжить?'; 
			 |en = 'Found items with redundant or higher sequence number. 
					|They will be increased by 1
					|Proceed?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоследующиеНомераЭлементов(СсылкаНаЭлемент, Родитель, ПорядковыйНомерВДетализированномАкте)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("П1", СсылкаНаЭлемент);
	Запрос.УстановитьПараметр("П2", Родитель);
	Запрос.УстановитьПараметр("П3", ПорядковыйНомерВДетализированномАкте);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ОпцииДляДетализированногоАкта.ПорядковыйНомерВДетализированномАкте КАК НомерЭлемента
	|ИЗ
	|	Справочник.Scan_ОпцииДляДетализированногоАкта КАК Scan_ОпцииДляДетализированногоАкта
	|ГДЕ
	|	НЕ Scan_ОпцииДляДетализированногоАкта.ЭтоГруппа
	|	И НЕ Scan_ОпцииДляДетализированногоАкта.ПометкаУдаления
	|	И Scan_ОпцииДляДетализированногоАкта.Ссылка <> &П1
	|	И Scan_ОпцииДляДетализированногоАкта.Родитель = &П2
	|	И Scan_ОпцииДляДетализированногоАкта.ПорядковыйНомерВДетализированномАкте >= &П3
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЭлемента";
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("НомерЭлемента");
	
КонецФункции

&НаСервере
Процедура ПорядковыйНомерВДетализированномАктеПриИзмененииНаСервере()
	
	Справочники.Scan_ОпцииДляДетализированногоАкта.ПеренумероватьЭлементыСправочника(Объект.Родитель, Объект.Ссылка, Объект.ПорядковыйНомерВДетализированномАкте);
	
КонецПроцедуры

&НаСервере
Процедура ОпцияПриИзмененииНаСервере(ОпцияСсылка)
	
	Объект.ПредставлениеДляДетализированногоАкта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОпцияСсылка, "Родитель.Наименование");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРодителяОпций()
	
	РодительОпций = Справочники.Scan_ОпцииПродуктов.ПустаяСсылка();
	
	МассивОпций = Объект.Опции.Выгрузить().ВыгрузитьКолонку("Опция");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("П1", МассивОпций);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Scan_ОпцииПродуктов.Родитель КАК Родитель
	|ИЗ
	|	Справочник.Scan_ОпцииПродуктов КАК Scan_ОпцииПродуктов
	|ГДЕ
	|	Scan_ОпцииПродуктов.Ссылка В(&П1)";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		РодительОпций = Выборка.Родитель;
	КонецЕсли;
	
	Возврат РодительОпций;
	
КонецФункции

Процедура ПроверитьВхождениеВыбраннойОпцииВСемействоНаСервере(ВыбраннаяОпция, СтандартнаяОбработка);
	
	РодительОпций = ПолучитьРодителяОпций();
	Если РодительОпций.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	РодительВыбраннойОпции = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбраннаяОпция, "Родитель");
	Если РодительОпций <> РодительВыбраннойОпции Тогда
		СтандартнаяОбработка = Ложь;
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Опция ""%1"" не входит в семейство опций ""%2"".';
		                                |en = 'The item ""1%"" is not a part of an option family ""2%"".'"), 
		                                ВыбраннаяОпция, РодительОпций);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти