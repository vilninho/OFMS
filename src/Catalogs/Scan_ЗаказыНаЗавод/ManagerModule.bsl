//rarus BProg_Dekin 29.10.2019 0014452 ++ Удалил обработку реквизитов "ПродуктДатаГотовности" и "ПродуктГотов" 
//Процедура ФлагПродуктГотовПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
//	
//	Если Объект.ПродуктГотов Тогда
//		Если НЕ ЗначениеЗаполнено(Объект.ПродуктДатаГотовности) Тогда
//			Объект.ПродуктДатаГотовности = ТекущаяДата();
//		КонецЕсли; 
//	Иначе
//		Если ЗначениеЗаполнено(Объект.ПродуктДатаГотовности) Тогда
//			Объект.ПродуктДатаГотовности = Неопределено;
//		КонецЕсли;
//	КонецЕсли;
//	
//КонецПроцедуры
//rarus BProg_Dekin 29.10.2019 0014452 --

Процедура ФлагЕстьБукингЛистПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	Если Объект.ЕстьБукингЛист Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДатаБукингЛиста) Тогда
			Объект.ДатаБукингЛиста = ТекущаяДата();
		КонецЕсли; 
	Иначе
		Если ЗначениеЗаполнено(Объект.ДатаБукингЛиста) Тогда
			Объект.ДатаБукингЛиста = Неопределено;
			Объект.НомерБукингЛиста = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//rarus BProg_Gladkov 21.11.2019 0014452 +- УстановитьCDDX НЕ используется
//Процедура устанавливает крайние даты за сколько нужно отправить напоминание дилеру и администратору продаж  
//Процедура УстановитьCDDX(Объект, КлючевыеДаты) Экспорт //rarus BProg_Gladkov 21.11.2019 0014452 +- Передается параметр КлючевыеДаты вкотором будут заполнены даты CDDX.
//	
//	Если ЗначениеЗаполнено(КлючевыеДаты.CDD) ИЛИ ЗначениеЗаполнено(КлючевыеДаты.CDD2) Тогда		//tenkam 06.09.2017 mantis 10085 + (CDD2)
//			
//		КоличествоДнейX = Scan_ПраваИНастройки.Scan_Право("КоличествоДнейДоCDDДляОтправкиНапоминанияДилерам");
//		КоличествоДнейY = Scan_ПраваИНастройки.Scan_Право("КоличествоДнейДоCDDДляПроверкиЗаполненияИнфоПоДоставкеПродуктов");
//		
//		//rarus tenkam 06.09.2017 mantis 10085 +++
//		АктуальнаяCDD = ?(ЗначениеЗаполнено(КлючевыеДаты.CDD2), КлючевыеДаты.CDD2, КлючевыеДаты.CDD);
//		Если НЕ Объект.НапоминаниеДилерамОтправлено Тогда
//			КлючевыеДаты.CDDX = АктуальнаяCDD - 24*60*60*КоличествоДнейX;
//		КонецЕсли;
//		
//		Если Не Объект.НапоминаниеАдмПродажОтправлено Тогда
//			Объект.CDDY = АктуальнаяCDD - 24*60*60*КоличествоДнейY;
//		КонецЕсли; 
//		
//		////rarus abrant 10.04.2017 9196 +++
//		//Если ЗначениеЗаполнено(Объект.CDD2) Тогда
//		//	Если НЕ Объект.НапоминаниеДилерамОтправлено Тогда
//		//		Объект.CDDX = Объект.CDD2 - 24*60*60*КоличествоДнейX;
//		//	КонецЕсли;
//		//	Если Не Объект.НапоминаниеАдмПродажОтправлено Тогда
//		//		Объект.CDDY = Объект.CDD2 - 24*60*60*КоличествоДнейY;
//		//	КонецЕсли;
//		//Иначе
//		//	Объект.CDDX = Объект.CDD - 24*60*60*КоличествоДнейX;
//		//	Объект.CDDY = Объект.CDD - 24*60*60*КоличествоДнейY;
//		//КонецЕсли;
//		////rarus abrant 10.04.2017 9196 ---
//		//rarus tenkam 06.09.2017 mantis 10085 ---
//	Иначе 
//		КлючевыеДаты.CDDX = Дата('00010101');
//		КлючевыеДаты.CDDY = Дата('00010101'); 
//	КонецЕсли;

//КонецПроцедуры

// rarus tenkam 29.05.2019 mantis 14224 +++
Функция РассчитатьCDDX(CDD, CDD2, НапоминаниеДилерамОтправлено) Экспорт
	CDDX = Дата('00010101');
	
	Если ЗначениеЗаполнено(CDD) ИЛИ ЗначениеЗаполнено(CDD2) Тогда
			
		КоличествоДнейX = Scan_ПраваИНастройки.Scan_Право("КоличествоДнейДоCDDДляОтправкиНапоминанияДилерам");
		
		АктуальнаяCDD = ?(ЗначениеЗаполнено(CDD2), CDD2, CDD);
		Если НЕ НапоминаниеДилерамОтправлено Тогда
			CDDX = АктуальнаяCDD - 24*60*60*КоличествоДнейX;
		КонецЕсли;
	КонецЕсли;	
	Возврат CDDX;
	
КонецФункции

//rarus BProg_Gladkov 21.11.2019 0014452 +- РассчитатьCDDY НЕ используется
//Функция РассчитатьCDDY(CDD, CDD2, НапоминаниеАдмПродажОтправлено) Экспорт
//	
//	CDDY = Дата('00010101');
//	
//	Если ЗначениеЗаполнено(CDD) ИЛИ ЗначениеЗаполнено(CDD2) Тогда
//			
//		КоличествоДнейY = Scan_ПраваИНастройки.Scan_Право("КоличествоДнейДоCDDДляПроверкиЗаполненияИнфоПоДоставкеПродуктов");
//		
//		АктуальнаяCDD = ?(ЗначениеЗаполнено(CDD2), CDD2, CDD);
//		Если Не НапоминаниеАдмПродажОтправлено Тогда
//			CDDY = АктуальнаяCDD - 24*60*60*КоличествоДнейY;
//		КонецЕсли;
//	КонецЕсли;	
//	Возврат CDDY;
//	
//КонецФункции
// rarus tenkam 29.05.2019 mantis 14224 ---

//rarus tenkam 18.01.2017 mantis 7185 ++ (закомментировала)
//Процедура УстановитьФлагЕстьАдресДоставки(Объект) Экспорт
//	//Если ЗначениеЗаполнено(Объект.МестоДоставки) И ЗначениеЗаполнено(Объект.ДатаДоставкиПланДилер) Тогда
//	//	Объект.ЕстьАдресДоставки = Истина;
//	//Иначе
//	//	Объект.ЕстьАдресДоставки = Ложь;
//	//КонецЕсли;
//	УстановитьНапоминаниеАдмПродажОтправлено(Объект);
//	
//КонецПроцедуры

//Процедура УстановитьНапоминаниеАдмПродажОтправлено(Объект) Экспорт
//	Если ЗначениеЗаполнено(Объект.CDDY) И Объект.ЕстьАдресДоставки Тогда
//		Объект.НапоминаниеАдмПродажОтправлено = Истина;
//	Иначе
//		Объект.НапоминаниеАдмПродажОтправлено = Ложь;
//	КонецЕсли;	
//КонецПроцедуры
//rarus tenkam 18.01.2017 mantis 7185 --

//Функция возвращает отсортированный список контрольных точек заказа на завод
Функция ПолучитьСписокРеквизитовКонтрольныхТочек() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		           |	Scan_КонтрольныеТочкиБизнесПроцессов.Ссылка КАК КТСсылка,
	               |	Scan_КонтрольныеТочкиБизнесПроцессов.РеквизитОбъекта,
	               |	Scan_КонтрольныеТочкиБизнесПроцессов.НомерКТПоБизнесПроцессу КАК НомерКТПоБизнесПроцессу
	               |ИЗ
	               |	Справочник.Scan_КонтрольныеТочкиБизнесПроцессов КАК Scan_КонтрольныеТочкиБизнесПроцессов
	               |ГДЕ
	               |	Scan_КонтрольныеТочкиБизнесПроцессов.ОбъектМетаданных = &ОбъектМетаданных
				   //rarus BProg_Gladkov 24.11.2019 0014452 ++ Пропускать контрольные точки с пометкой удаления.
				   |    И НЕ ПометкаУдаления
				   //rarus BProg_Gladkov 24.11.2019 0014452 -- 
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерКТПоБизнесПроцессу";
	Запрос.УстановитьПараметр("ОбъектМетаданных", "Scan_ЗаказыНаЗавод");
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;	
КонецФункции

//rarus tenkam 05.08.2016 mantis 7219 ++
Процедура ЗаписатьЛогКонтрольныхТочек(Объект) Экспорт
	//Получим список реквизитов, из справочника контрольных точек, отсортированный по номеру
	//В цикле заполним регистр "Лог контрольных точек", проверяя, что реквизит заполнен
	СписокРеквизитов = ПолучитьСписокРеквизитовКонтрольныхТочек();
	
	Если СписокРеквизитов.Количество() <> 0 Тогда	
		
		НаборЗаписей = РегистрыСведений.Scan_ЛогКонтрольныхТочек.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ЗаказНаЗавод.Установить(Объект.Ссылка);
		
		Для Каждого Рекв Из СписокРеквизитов Цикл
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, Рекв.РеквизитОбъекта) ТОГДА  // rarus kabany 15.06.2021 17886 + // добавил проверку на существование реквизита
				ЗначениеРекв = Объект[Рекв.РеквизитОбъекта];
				Если НЕ((ТипЗнч(ЗначениеРекв) = Тип("Булево") И ЗначениеРекв = Ложь) ИЛИ
					(ТипЗнч(ЗначениеРекв) = Тип("Дата") И ЗначениеРекв = Дата('00010101'))) Тогда
					ЗаписатьКонтрольнуТочкуВЛог(Объект,Рекв.КТСсылка, ЗначениеРекв, НаборЗаписей);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьКонтрольнуТочкуВЛог(Объект, СсылкаКТ, ЗначениеКТ, НаборЗаписей)
	ЗаписьЖурналаРегистрации("Запись контрольной точки в лог", УровеньЖурналаРегистрации.Информация, , ,СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Для заказа на завод %1 установлена контрольная точка %2, значение контрольной точки: %3'"), Объект.Ссылка,СсылкаКТ,ЗначениеКТ));	//rarus tenkam 04.04.2017 TLMS 011 +

	НоваяЗапись = НаборЗаписей.Добавить();
	
	НоваяЗапись.ЗаказНаЗавод = Объект.Ссылка;
	НоваяЗапись.КонтрольнаяТочка = СсылкаКТ;
	НоваяЗапись.ЗначениеКонтрольнойТочки = ЗначениеКТ;
	НоваяЗапись.ПорядковыйНомер = СсылкаКТ.НомерКТПоБизнесПроцессу;
	НоваяЗапись.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
КонецПроцедуры
//rarus tenkam 05.08.2016 mantis 7219 --

//rarus tenkam 03.10.2016 mantis 7183 ++
//Процедура устанавливает дату и признак готовности продукта, а также формирует поступление изделия на склад
Процедура УстановитьДатуГотовностиПродукта(Объект, ПродуктДатаГотовности) Экспорт
	Если КонтрольнаяТочкаУжеЕсть("ПродуктДатаГотовности", Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ПродуктДатаГотовности) Тогда
		//rarus BProg_Dekin 29.10.2019 0014452 ++ Удалил обработку реквизита "ПродуктГотов"
		//Если Объект.ПродуктГотов = Ложь Тогда
		//	Объект.ПродуктГотов = Истина;
		//КонецЕсли;
		//rarus BProg_Dekin 29.10.2019 0014452 --
		
		// rarus tenkam 07.08.2019 mantis 14427 +++
		//ТекИзделие = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьИзделиеПоЗаказу(Объект.Ссылка);
		ТекИзделие = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьИзделиеПоЗаказу(Объект.Ссылка);
		// rarus tenkam 07.08.2019 mantis 14427 ---
		Если НЕ ПоступлениеУжеЕсть(ТекИзделие, ПродуктДатаГотовности) Тогда
			//rarus tenkam 09.03.2017 (update) +++ (раскомментировала 16.03.2017)
			Документы.Scan_ДвижениеИзделий.СформироватьПоступлениеНаСклад(ТекИзделие, ПродуктДатаГотовности);
			//rarus tenkam 09.03.2017 (update) ---
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//Функция проверяет, было ли сформировано поступление изделия на указанную дату
Функция ПоступлениеУжеЕсть(ИзделиеСсылка, ДатаПрихода = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ДвижениеИзделийСоставЗаявки.Ссылка
	               |ИЗ
	               |	Документ.Scan_ДвижениеИзделий.СоставЗаявки КАК Scan_ДвижениеИзделийСоставЗаявки
	               |ГДЕ
	               |	(Scan_ДвижениеИзделийСоставЗаявки.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПоступлениеНаСклад) ИЛИ
	               |	Scan_ДвижениеИзделийСоставЗаявки.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ВводНачальныхОстатков))	//rarus tenkam 17.03.2017 mantis 7623 +
	               |	И Scan_ДвижениеИзделийСоставЗаявки.Изделие = &Изделие";
				   //|	И Scan_ДвижениеИзделийСоставЗаявки.ДатаПрихода = &ДатаПрихода";		//rarus tenkam 20.02.2017 mantis 8331 +
	Запрос.УстановитьПараметр("Изделие",ИзделиеСсылка);
	//Запрос.УстановитьПараметр("ДатаПрихода", ДатаПрихода); 	//rarus tenkam 20.02.2017 mantis 8331 +
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

//Функция проверяет, была ли уже установленауказанная  контрольная точка в указаннос заказе на завод 
Функция КонтрольнаяТочкаУжеЕсть(НаименованиеРеквизита, ЗаказНаЗаводСсылка)
	КТСсылка = Справочники.Scan_КонтрольныеТочкиБизнесПроцессов.НайтиПоРеквизиту("РеквизитОбъекта", НаименованиеРеквизита);
	Если НЕ ЗначениеЗаполнено(КТСсылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ЛогКонтрольныхТочек.КонтрольнаяТочка,
	               |	Scan_ЛогКонтрольныхТочек.ЗаказНаЗавод,
	               |	Scan_ЛогКонтрольныхТочек.ЗначениеКонтрольнойТочки
	               |ИЗ
	               |	РегистрСведений.Scan_ЛогКонтрольныхТочек КАК Scan_ЛогКонтрольныхТочек
	               |ГДЕ
	               |	Scan_ЛогКонтрольныхТочек.КонтрольнаяТочка = &КонтрольнаяТочка
	               |	И Scan_ЛогКонтрольныхТочек.ЗаказНаЗавод = &ЗаказНаЗавод";
	Запрос.УстановитьПараметр("КонтрольнаяТочка", КТСсылка);
	Запрос.УстановитьПараметр("ЗаказНаЗавод",ЗаказНаЗаводСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();
КонецФункции
//rarus tenkam 03.10.2016 mantis 7183 --

//rarus tenkam 31.07.2017 mantis 10271 +++
//Функция проверяет, было ли сформировано перемещение к кузовостроителю
Функция ПеремещениеККузовостроителюУжеЕсть(ИзделиеСсылка, ЗаказНаЗаводСсылка) Экспорт
	МестоСоответствующееКоду = РегистрыСведений.Scan_СоответствиеКодовАдресовДоставки.ПолучитьМестоХранения(ЗаказНаЗаводСсылка.КодАдресаДоставки);
	Если НЕ ЗначениеЗаполнено(МестоСоответствующееКоду) Тогда
		Возврат Ложь;
	КонецЕсли; 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка
	|ИЗ
	|	Документ.Scan_ПеремещениеИзделий.ИзделияДляПеремещения КАК Scan_ПеремещениеИзделийИзделияДляПеремещения
	|ГДЕ
	|	Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка.МестоОтгрузки = &МестоПроизводства
	|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка.МестоДоставки = &МестоКодаАдреса
	|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка.Проведен = ИСТИНА
	|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки = &ДатаДоставки
	|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.Изделие = &ИзделиеСсылка";
	Запрос.УстановитьПараметр("ИзделиеСсылка",ИзделиеСсылка);			   
	Запрос.УстановитьПараметр("МестоПроизводства",ИзделиеСсылка.МестоПроизводства);
	Запрос.УстановитьПараметр("МестоКодаАдреса",МестоСоответствующееКоду);
	
	//rarus BProg_Gladkov 21.11.2019 0014452 ++ ADD перенесен в регистр
	//Запрос.УстановитьПараметр("ДатаДоставки",ЗаказНаЗаводСсылка.ADD + 9*60*60);
	Запрос.УстановитьПараметр("ДатаДоставки", РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗаводСсылка, "ADD") + 9*60*60);
	//rarus BProg_Gladkov 21.11.2019 0014452 -- 
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции 
//rarus tenkam 31.07.2017 mantis 10271 ---

// rarus tenkam 25.04.2019 mantis 14327 +++

// Функция записи параметров в регистр сведений
// Параметры
//  ТекСсылка – СправочникСсылка.Scan_ЗаказыНаЗавод – Заказ на завод
//  Значение   – Произвольный – Значение регистра сведений
//  ВидОбъекта – ПеречислениеСсылка.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод – 
//                 Описание вида значения регистра сведений
// Возвращаемое значение:
//   Булево   – ошибка записи значения
Функция ЗаписьЗначенияРегистраСведения(ТекСсылка, Значение, ВидЗначения, НаДату = Неопределено, Записывать = Ложь) Экспорт	// rarus tenkam 16.04.2020 mantis 15797 + Записывать
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(ТекСсылка) Тогда
		Возврат Отказ;
	КонецЕсли;
	
	Если НаДату = Неопределено Тогда
		ДатаЗаписи = ТекущаяДата();
	Иначе
		ДатаЗаписи = НаДату;
	КонецЕсли; 
	
	Если НЕ Отказ Тогда
		//Чтение старого значения регистра
		СтруктураОтбора   = Новый Структура("Заказ,Реквизит", ТекСсылка,ВидЗначения);
		СтруктураСведений = РегистрыСведений.Scan_ХарактеристикиЗаказовНаЗавод.ПолучитьПоследнее(ДатаЗаписи, СтруктураОтбора);
		ЗначениеСтарое    = СтруктураСведений.Значение;
		Записывать        = Ложь;
		//Введено значение, а старое отсутствует
		Если ЗначениеЗаполнено(Значение) И ЗначениеСтарое = Неопределено Тогда 
			Записывать = Истина; 
		КонецЕсли; 
		//Значение стерто, а старое значение было введено
		Если НЕ ЗначениеЗаполнено(Значение) И ЗначениеСтарое <> Неопределено Тогда 
			Записывать = Истина; 
		КонецЕсли; 
		//Введено значение и было введено старое
		Если ЗначениеЗаполнено(Значение) И ЗначениеСтарое <> Неопределено Тогда
			//Значение изменилось
			Если Значение <> ЗначениеСтарое Тогда 
				Записывать = Истина; 
			КонецЕсли; 
		КонецЕсли; 
		Если Записывать Тогда
			//Значение параметра изменилось
			ЗаписьРегСведений = РегистрыСведений.Scan_ХарактеристикиЗаказовНаЗавод.СоздатьМенеджерЗаписи();
			ЗаписьРегСведений.Заказ	  = ТекСсылка;
			ЗаписьРегСведений.Реквизит = ВидЗначения;
			ЗаписьРегСведений.Значение    = Значение;
			ЗаписьРегСведений.Период      = ДатаЗаписи;
			ЗаписьРегСведений.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
			
			Попытка
				ЗаписьРегСведений.Записать();
			Исключение
				//rarus FominskiyAS 08.07.2019  mantis 14191 +++
				//Сообщить(НСтр("ru = 'Ошибка записи параметра изделия в регистр сведений'"));
				Сообщить(НСтр("ru = 'Ошибка записи параметра продукта в регистр сведений'; en = 'Action failed'"));
				//rarus FominskiyAS 08.07.2019  mantis 14191 ---  
				Отказ = Истина;
			КонецПопытки; 
		КонецЕсли;
		//rarus pechek 20.04.2020 mantis 15943 +++
		Если Не Отказ Тогда
			Если Scan_ПраваИНастройки.Scan_Право("ЗаполнятьРегистрСводнаяИнформацияПоПродукту") Тогда
				РегистрыСведений.Scan_СводнаяИнформацияПоПродукту.ЗаписьЗначенияРегистраСводнаяИнформацияПоПродукту(Неопределено,ТекСсылка,ВидЗначения,Значение)
			КонецЕсли;
		КонецЕсли;
		//rarus pechek 20.04.2020 mantis 15943 --- 		
	КонецЕсли; 
		
	Возврат Отказ;
КонецФункции // ЗаписьЗначенияРегистраСведения()

// Функция чтения параметров в регистр сведений
// Параметры
//  ТекСсылка – СправочникСсылка.Scan_ЗаказыНаЗавод – Заказ на завод
//  ВидОбъекта – ПеречислениеСсылка.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод – 
//                 Описание вида значения регистра сведений
// Возвращаемое значение:
//   Булево   – ошибка записи значения
Функция ЧтениеЗначенияРегистраСведения(ТекСсылка, ВидЗначения, НаДату = Неопределено) Экспорт
	Если НЕ ЗначениеЗаполнено(ТекСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если НаДату = Неопределено Тогда
		ДатаЗаписи = Неопределено;
	Иначе
		//ДатаЗаписи = НачалоДня(НаДату);
		ДатаЗаписи = НаДату;
	КонецЕсли;
	СтруктураОтбора   = Новый Структура("Заказ, Реквизит", ТекСсылка, ВидЗначения);
	СтруктураСведений = РегистрыСведений.Scan_ХарактеристикиЗаказовНаЗавод.ПолучитьПоследнее(ДатаЗаписи, СтруктураОтбора);
	Возврат СтруктураСведений.Значение;
КонецФункции

// rarus tenkam 25.04.2019 mantis 14327 ---

// rarus tenkam 13.05.2019 mantis 14226 +++
Функция ПолучитьТипЗаказаНаЗаводПоСимволу(ЗначениеСтрока) Экспорт
	ТекЗначение = СокрЛП(ЗначениеСтрока);
	
	Если ТекЗначение = "A" Тогда
		Возврат Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderNormal;	
	ИначеЕсли ТекЗначение = "B" Тогда
		Возврат Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderUrgent;
	ИначеЕсли ТекЗначение = "C" Тогда
		Возврат Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderRefill;
	ИначеЕсли ТекЗначение = "P" Тогда
		Возврат Перечисления.Scan_ТипыЗаказовНаЗавод.OpenOrder;
	// A-Order пока не возвращается из 1БД 
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

//rarus bonmak 15.08.2019 14576 ++
//Процедура УстановитьСтатусЗаказаНаЗавод(ЗаказНаЗаводСсылка, СтатусЗаказа, НаДату = Неопределено) Экспорт
//	Если НЕ ЗначениеЗаполнено(НаДату) Тогда
//		НаДату = ТекущаяДата();
//	КонецЕсли;
//	Справочники.Scan_ЗаказыНаЗавод.ЗаписьЗначенияРегистраСведения(ЗаказНаЗаводСсылка, СтатусЗаказа, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.СтатусЗаказаЛокальный, НаДату);	
//КонецПроцедуры
//rarus bonmak 15.08.2019 14576 --
// rarus tenkam 13.05.2019 mantis 14226 ---

// rarus tenkam 02.12.2020 mantis 16697 +++

Функция ТабличныйДокументКарточкиЗаказа(Заказ, Форма, НастройкиКарточкиЗаказа) Экспорт	// rarus tenkam 02.12.2020 mantis 16697 +-
	
	Перем Заголовок;
	
	Объект = Неопределено;
	Если ТипЗнч(Заказ) = Тип("СправочникСсылка.Scan_ЗаказыНаЗавод") Тогда
		Объект = Заказ.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(Заказ) = Тип("СправочникОбъект.Scan_ЗаказыНаЗавод")
		Или ТипЗнч(Заказ) = Тип("ДанныеФормыСтруктура") Тогда
		Объект = Заказ;
	Иначе
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	СтруктураВидимости   = НастройкиКарточкиЗаказа.ВидимостьЭлементов;
	СтруктураЗаголовков  = НастройкиКарточкиЗаказа.ЗаголовкиЭлементов;
	//СтруктураКлючевыхДат = НастройкиКарточкиЗаказа.КлючевыеДаты;
	
	ТабличныйДокументКарточка = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПФ_MXL_КарточкаЗаказа");
	
	#Область Шапка
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, Объект);
	
	ОбластьШапка.Параметры.ТипЗаказа = Форма.ТипЗаказа;
	ОбластьШапка.Параметры.ЗаводскойСтатусЗаказа = Форма.ТекЗаводскойСтатусЗаказа;
	ОбластьШапка.Параметры.ЗакрепленныйМенеджер = Форма.ЗакрепленныйМенеджер;
	
	ОбластьШапка.Параметры.РасшифровкаНаименование = "Наименование";
	ОбластьШапка.Параметры.РасшифровкаТипЗаказа = "ТипЗаказа";
	ОбластьШапка.Параметры.РасшифровкаЗаводскойСтатусЗаказа = "ТекЗаводскойСтатусЗаказа";
	ОбластьШапка.Параметры.РасшифровкаЗакрепленныйМенеджер  = "ЗакрепленныйМенеджер";
	
	ТабличныйДокументКарточка.Присоединить(ОбластьШапка);
	
	Если Форма.Изделие.МаркаПродукта <> Справочники.Scan_МаркиПродуктов.Scania Тогда
		ТабличныйДокументКарточка.Рисунки.Удалить(ТабличныйДокументКарточка.Рисунки["ЛоготипScania"]);
	КонецЕсли;
	
	#КонецОбласти
	
	ТабличныйДокументКолонки = Новый ТабличныйДокумент;
	
	ТабличныйДокументЛево = Новый ТабличныйДокумент;
	
	#Область ДанныеПоЗаказуНаЗавод
	
	Если РазделКарточкиВиден("ДанныеПоЗаказуНаЗавод", СтруктураВидимости) Тогда
		ОбластьДанныеПоЗаказуНаЗаводЗаголовок = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьДанныеПоЗаказуНаЗаводЗаголовок);
		
		Если СтрокаКарточкиВидна("БуквенныйКод", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводЗаводСтрока");
			Область.Параметры.МестоПроизводстваБуквенныйКод            = Объект.МестоПроизводства.БуквенныйКод;
			Область.Параметры.РасшифровкаМестоПроизводстваБуквенныйКод = "МестоПроизводстваБуквенныйКод";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("КомплектностьПоставки", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводКомплектностьПоставкиСтрока");
			Область.Параметры.КомплектностьПоставки            = Форма.КомплектностьПоставки;
			Область.Параметры.РасшифровкаКомплектностьПоставки = "КомплектностьПоставки";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТягачШасси", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводТягачШассиСтрока");
			Область.Параметры.ТягачШасси            = Форма.ТягачШасси;
			Область.Параметры.РасшифровкаТягачШасси = "ТягачШасси";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ЗаказчикCOW", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводЗаказчикCOWСтрока");
			Область.Параметры.ЗаказчикCOW            = Объект.ЗаказчикCOW;
			Область.Параметры.РасшифровкаЗаказчикCOW = "ЗаказчикCOW";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;             		
		
		Если СтрокаКарточкиВидна("Заказчик", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводДилерСтрока");
			Область.Параметры.Заказчик            = Объект.Заказчик;
			Область.Параметры.РасшифровкаЗаказчик = "Заказчик";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;   		
		
		Если СтрокаКарточкиВидна("ПродавецЗаказчика", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводПродавецДилераСтрока");
			Область.Параметры.ПродавецЗаказчика            = Объект.ПродавецЗаказчика;
			Область.Параметры.РасшифровкаПродавецЗаказчика = "ПродавецЗаказчика";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если СтрокаКарточкиВидна("Клиент", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводКлиентСтрока");
			Область.Параметры.Клиент            = Форма.Клиент;
			Область.Параметры.РасшифровкаКлиент = "Клиент";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("MarketChange", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоЗаказуНаЗаводMarketChangeСтрока");
			Область.Параметры.MarketChange            = Форма.MarketChange;
			Область.Параметры.РасшифровкаMarketChange = "MarketChange";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	      	
	#Область Производство
	
	Если РазделКарточкиВиден("Производство", СтруктураВидимости) Тогда
		ОбластьПроизводствоЗаголовок = Макет.ПолучитьОбласть("ПроизводствоЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьПроизводствоЗаголовок);
		
		Если СтрокаКарточкиВидна("Спецификация", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоСпецификацияСтрока");
			Область.Параметры.Спецификация			  = Форма.Спецификация;
			Область.Параметры.РасшифровкаСпецификация = "Спецификация";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипСпецификации", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоТипСпецификацииСтрока");
			Область.Параметры.ТипСпецификации            = Форма.Изделие.ТипСпецификации;
			Область.Параметры.РасшифровкаТипСпецификации = "ТипСпецификации";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		//rarus agar 05.04.2021 17394 ++
		Если СтрокаКарточкиВидна("СтандартнаяСпецификация", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоСтандартнаяСпецификацияСтрока");
			Область.Параметры.СтандартнаяСпецификация            = Форма.Изделие.СтандартнаяСпецификация;
			Область.Параметры.РасшифровкаСтандартнаяСпецификация = "СтандартнаяСпецификация";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		//rarus agar 05.04.2021 17394 --
			
		Если СтрокаКарточкиВидна("PartPeriod", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоPartPeriodСтрока");
			Область.Параметры.PartPeriod            = Форма.PartPeriod;
			Область.Параметры.РасшифровкаPartPeriod = "PartPeriod";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("SOrder", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоSOrderСтрока");
			Область.Параметры.SOrder            = Форма.SOrder;
			Область.Параметры.РасшифровкаSOrder = "SOrder";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("FFU", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоFFUСтрока");
			Область.Параметры.FFU            = Форма.FFU;
			Область.Параметры.РасшифровкаFFU = "FFU";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		//rarus vikhle 12.11.2021 m 18500 +++
		//Если СтрокаКарточкиВидна("Квота", СтруктураВидимости) Тогда
		//	Область = Макет.ПолучитьОбласть("ПроизводствоКвотаСтрока");
		//	Область.Параметры.Квота				= Объект.Квота;
		//	Область.Параметры.РасшифровкаКвота	= "Квота";
		//	ТабличныйДокументЛево.Вывести(Область);
		//КонецЕсли;
		//rarus vikhle 12.11.2021 m 18500 ---
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроизводствоКлючевыеДаты
	
	Если РазделКарточкиВиден("ПроизводствоКлючевыеДаты", СтруктураВидимости) И
		Форма.КлючевыеДатыПроизводство.Количество() <> 0 Тогда
		ОбластьПроизводствоКлючевыеДатыЗаголовок = Макет.ПолучитьОбласть("ПроизводствоКлючевыеДатыЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьПроизводствоКлючевыеДатыЗаголовок);
		
		ИдентификаторСтроки = 0;
		Для Каждого ТекСтрокаКД Из Форма.КлючевыеДатыПроизводство Цикл
			Область = Макет.ПолучитьОбласть("ПроизводствоКлючевыеДатыСтрока");
			Область.Параметры.КлючевыеДатыПроизводствоДата			      = ТекСтрокаКД.КлючеваяДата;
			Область.Параметры.КлючевыеДатыПроизводствоЗначение			  = ТекСтрокаКД.Значение;
			
			Расшифровка = Новый Структура("ИмяЭлемента, ИдентификаторСтроки");
			Расшифровка.ИмяЭлемента = "КлючевыеДатыПроизводствоЗначение";
			Расшифровка.ИдентификаторСтроки = ИдентификаторСтроки;
		    Область.Параметры.РасшифровкаКлючевыеДатыПроизводствоЗначение = Расшифровка;
			ИдентификаторСтроки = ИдентификаторСтроки +1;
			
			ТабличныйДокументЛево.Вывести(Область);	
		КонецЦикла;

	КонецЕсли;
	
	#КонецОбласти
	
	#Область Надстройка
	
	Если РазделКарточкиВиден("Надстройка", СтруктураВидимости) Тогда
		ОбластьНадстройкаЗаголовок = Макет.ПолучитьОбласть("НадстройкаЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьНадстройкаЗаголовок); 		

		Если СтрокаКарточкиВидна("КузовщикиПредставление", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("НадстройкаКузовщикиПредставлениеСтрока");
			Область.Параметры.КузовщикиПредставление			= Объект.КузовщикиПредставление;
			Область.Параметры.РасшифровкаКузовщикиПредставление = "КузовщикиПредставление";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ЗаказыНаЗакупкуПредставление", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("НадстройкаЗаказыНаЗакупкуПредставлениеСтрока");
			Область.Параметры.ЗаказыНаЗакупкуПредставление            = Объект.ЗаказыНаЗакупкуПредставление;
			Область.Параметры.РасшифровкаЗаказыНаЗакупкуПредставление = "ЗаказыНаЗакупкуПредставление";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		//rarus kabany 20.04.2021 17469 +++
		Если СтрокаКарточкиВидна("ЗаказыНаЗакупкуOFMSПредставление", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("НадстройкаЗаказыНаЗакупкуOFMSПредставлениеСтрока");
			Область.Параметры.ЗаказыНаЗакупкуOFMSПредставление            = Объект.ЗаказыНаЗакупкуOFMSПредставление;
			Область.Параметры.РасшифровкаЗаказыНаЗакупкуOFMSПредставление = "ЗаказыНаЗакупкуOFMSПредставление";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		//rarus kabany 20.04.2021 17469 ---
		
		Если СтрокаКарточкиВидна("ГотовностьТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("НадстройкаГотовностьТССтрока");
			Область.Параметры.ГотовностьТС            = Объект.ГотовностьТС;
			Область.Параметры.РасшифровкаГотовностьТС = "ГотовностьТС";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти

	#Область НадстройкаЗаказыНаЗакупку
	
	Если РазделКарточкиВиден("НадстройкаЗаказыНаЗакупку", СтруктураВидимости) И
		Объект.ЗаказыНаЗакупку.Количество() <> 0 Тогда
		ОбластьНадстройкаЗаказыНаЗакупкуЗаголовок = Макет.ПолучитьОбласть("НадстройкаЗаказыНаЗакупкуЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьНадстройкаЗаказыНаЗакупкуЗаголовок);
							
		ИдентификаторСтроки = 0;
		Для Каждого ТекСтрока Из Объект.ЗаказыНаЗакупку Цикл
			Область = Макет.ПолучитьОбласть("НадстройкаЗаказыНаЗакупкуСтрока");
			Область.Параметры.ПорядковыйНомер		  = ТекСтрока.ПорядковыйНомер; // Rarus tenkam 14.12.2021 mantis 18574 +
			Область.Параметры.Основной			      = ТекСтрока.Основной;
			Область.Параметры.Кузовщик			      = ТекСтрока.Кузовщик;
			//Область.Параметры.ЗаказНаЗакупку		  = ТекСтрока.ЗаказНаЗакупку.Номер;
			//rarus vikhle 11.02.2021 mt 17179 +++
			Если ТипЗнч(ТекСтрока.ЗаказНаЗакупку) = Тип("ДокументСсылка.Scan_ЗаказНаЗакупку") Тогда 
				Область.Параметры.ЗаказНаЗакупку		  = ТекСтрока.ЗаказНаЗакупку.Номер;
				Область.Параметры.ДОНомерЗаказаНаЗакупку  = ТекСтрока.ЗаказНаЗакупку.ДОНомерЗаказаНаЗакупку;	
			Иначе
				Область.Параметры.ЗаказНаЗакупку		  = ТекСтрока.ЗаказНаЗакупку;
				Область.Параметры.ДОНомерЗаказаНаЗакупку  = "";	
			КонецЕсли;	
			//rarus vikhle 11.02.2021 mt 17179 ---
			Расшифровка = Новый Структура("ИмяЭлемента, ИдентификаторСтроки");
			Расшифровка.ИмяЭлемента = "ЗаказыНаЗакупкуОсновной";
			Расшифровка.ИдентификаторСтроки = ИдентификаторСтроки;
		    Область.Параметры.РасшифровкаОсновной = Расшифровка;
			ИдентификаторСтроки = ИдентификаторСтроки +1;
			
			ТабличныйДокументЛево.Вывести(Область);	
		КонецЦикла;

	КонецЕсли;
	
	#КонецОбласти
	
	#Область НадстройкаКлючевыеДаты
	
	Если РазделКарточкиВиден("НадстройкаКлючевыеДаты", СтруктураВидимости) И
		Форма.КлючевыеДатыНадстройка.Количество() <> 0 Тогда
		ОбластьНадстройкаКлючевыеДатыЗаголовок = Макет.ПолучитьОбласть("НадстройкаКлючевыеДатыЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьНадстройкаКлючевыеДатыЗаголовок);
		
		ИдентификаторСтроки = 0;
		Для Каждого ТекСтрокаКД Из Форма.КлючевыеДатыНадстройка Цикл
			Область = Макет.ПолучитьОбласть("НадстройкаКлючевыеДатыСтрока");
			Область.Параметры.КлючевыеДатыНадстройкаДата			      = ТекСтрокаКД.КлючеваяДата;
			Область.Параметры.КлючевыеДатыНадстройкаЗначение			  = ТекСтрокаКД.Значение;
			
			Расшифровка = Новый Структура("ИмяЭлемента, ИдентификаторСтроки");
			Расшифровка.ИмяЭлемента = "КлючевыеДатыНадстройкаЗначение";
			Расшифровка.ИдентификаторСтроки = ИдентификаторСтроки;
		    Область.Параметры.РасшифровкаКлючевыеДатыНадстройкаЗначение = Расшифровка;
			ИдентификаторСтроки = ИдентификаторСтроки +1;
			
			ТабличныйДокументЛево.Вывести(Область);	
		КонецЦикла;

	КонецЕсли;
	
	#КонецОбласти
	       	
	#Область Гиперссылки
	
	Если РазделКарточкиВиден("Гиперссылки", СтруктураВидимости) Тогда
		ОбластьГиперссылкиЗаголовок = Макет.ПолучитьОбласть("ГиперссылкиЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьГиперссылкиЗаголовок);
		
		Если СтрокаКарточкиВидна("ГиперссылкиЗамечания", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиЗамечанияСтрока");
			Область.Параметры.ГиперссылкиЗамечания                    = СтруктураЗаголовков.ГиперссылкиЗамечания;
			Область.Параметры.РасшифровкаГиперссылкиЗамечания         = "ГиперссылкиЗамечания";
			Если ЗначениеЗаполнено(Форма.Изделие) Тогда
				Область.Параметры.ГиперссылкиЗамечанияИзменить            = СтруктураЗаголовков.ГиперссылкиЗамечанияИзменить;
				Область.Параметры.РасшифровкаГиперссылкиЗамечанияИзменить = "ГиперссылкиЗамечанияИзменить";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;      
		
		Если СтрокаКарточкиВидна("ГиперссылкиИсторияЗаказовНаЗавод", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиИсторияЗаказовНаЗаводСтрока");
			Область.Параметры.ГиперссылкиИсторияЗаказовНаЗавод                    = СтруктураЗаголовков.ГиперссылкиИсторияЗаказовНаЗавод;
			Область.Параметры.РасшифровкаГиперссылкиИсторияЗаказовНаЗавод         = "ГиперссылкиИсторияЗаказовНаЗавод";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
				
		Если СтрокаКарточкиВидна("ГиперссылкиКлючевыеДаты", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиКлючевыеДатыСтрока");
			Область.Параметры.ГиперссылкиКлючевыеДаты            = СтруктураЗаголовков.ГиперссылкиКлючевыеДаты;
			Область.Параметры.РасшифровкаГиперссылкиКлючевыеДаты = "ГиперссылкиКлючевыеДаты";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГиперссылкиСводнаяИнформация", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиСводнаяИнформацияСтрока");
			Область.Параметры.ГиперссылкиСводнаяИнформация            = СтруктураЗаголовков.ГиперссылкиСводнаяИнформация;
			Область.Параметры.РасшифровкаГиперссылкиСводнаяИнформация = "ГиперссылкиСводнаяИнформация";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГиперссылкиФайлы", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиФайлыСтрока");
			Область.Параметры.ГиперссылкиФайлы            = СтруктураЗаголовков.ГиперссылкиФайлы;
			Область.Параметры.РасшифровкаГиперссылкиФайлы = "ГиперссылкиФайлы";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	ТабличныйДокументКолонки.Присоединить(ТабличныйДокументЛево);
	
	ТабличныйДокументПраво = Новый ТабличныйДокумент;
	
	#Область ДанныеПоПродукту
	         	
	Если РазделКарточкиВиден("ДанныеПоПродукту", СтруктураВидимости) Тогда
		ОбластьДанныеПоПродуктуЗаголовок = Макет.ПолучитьОбласть("ДанныеПоПродуктуЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьДанныеПоПродуктуЗаголовок); 		
												
		Если СтрокаКарточкиВидна("ТипПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоПродуктуТипПродуктаСтрока");
			Область.Параметры.ИзделиеТипПродукта			= Форма.Изделие.ТипПродукта;
			Область.Параметры.РасшифровкаИзделиеТипПродукта = "ИзделиеТипПродукта";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипыМаркетинговые", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоПродуктуТипМаркетинговыйСтрока");
			Область.Параметры.ИзделиеТипыМаркетинговые            = Форма.Изделие.ТипыМаркетинговые;
			Область.Параметры.РасшифровкаИзделиеТипыМаркетинговые = "ИзделиеТипыМаркетинговые";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
			
		Если СтрокаКарточкиВидна("НомерИзделия", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоПродуктуНомерИзделияСтрока");
			Область.Параметры.ИзделиеНомерИзделия            = Форма.Изделие.НомерИзделия;
			Область.Параметры.РасшифровкаИзделиеНомерИзделия = "ИзделиеНомерИзделия";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("МодельПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоПродуктуМодельСтрока");
			Область.Параметры.ИзделиеМодельПродукта            = Форма.Изделие.МодельПродукта;
			Область.Параметры.РасшифровкаИзделиеМодельПродукта = "ИзделиеМодельПродукта";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("НомерПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДанныеПоПродуктуНомерПТССтрока");
			Область.Параметры.ИзделиеНомерПТС            = Форма.Изделие.НомерПТС;
			Область.Параметры.РасшифровкаИзделиеНомерПТС = "ИзделиеНомерПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти

	#Область Логистика    		
   	
	Если РазделКарточкиВиден("Логистика", СтруктураВидимости) Тогда
		ОбластьЛогистикаЗаголовок = Макет.ПолучитьОбласть("ЛогистикаЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьЛогистикаЗаголовок); 		
												
		Если СтрокаКарточкиВидна("DDPriority", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаDDPriorityСтрока");
			Область.Параметры.DDPriority			= Объект.DDPriority;
			Область.Параметры.РасшифровкаDDPriority = "DDPriority";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
												
		Если СтрокаКарточкиВидна("DDDeviation", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаDDDeviationСтрока");
			Область.Параметры.DDDeviation			= Объект.DDDeviation;
			Область.Параметры.РасшифровкаDDDeviation = "DDDeviation";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
										
		Если СтрокаКарточкиВидна("ДатаБукингЛиста", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаДатаБукингЛистаСтрока");
			Область.Параметры.ДатаБукингЛиста			= Объект.ДатаБукингЛиста;
			Область.Параметры.РасшифровкаДатаБукингЛиста = "ДатаБукингЛиста";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
										
		Если СтрокаКарточкиВидна("НомерБукингЛиста", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаНомерБукингЛистаСтрока");
			Область.Параметры.НомерБукингЛиста			= Объект.НомерБукингЛиста;
			Область.Параметры.РасшифровкаНомерБукингЛиста = "НомерБукингЛиста";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
										
		Если СтрокаКарточкиВидна("НапоминаниеДилерамОтправлено", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаНапоминаниеДилерамОтправленоСтрока");
			Область.Параметры.НапоминаниеДилерамОтправлено			= Объект.НапоминаниеДилерамОтправлено;
			Область.Параметры.РасшифровкаНапоминаниеДилерамОтправлено = "НапоминаниеДилерамОтправлено";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
										
		Если СтрокаКарточкиВидна("КодАдресаДоставки", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаКодАдресаДоставкиСтрока");
			Область.Параметры.КодАдресаДоставки			= Объект.КодАдресаДоставки;
			Область.Параметры.РасшифровкаКодАдресаДоставки = "КодАдресаДоставки";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		//rarus agar 19.01.2021 16981 ++
		//Если СтрокаКарточкиВидна("СкладОтгрузки", СтруктураВидимости) Тогда
		//	Область = Макет.ПолучитьОбласть("ЛогистикаСкладОтгрузкиСтрока");
		//	Область.Параметры.СкладОтгрузки			= Объект.СкладОтгрузки;
		//	Область.Параметры.РасшифровкаСкладОтгрузки = "СкладОтгрузки";
		//	ТабличныйДокументПраво.Вывести(Область);
		//КонецЕсли;
		//						
		//Если СтрокаКарточкиВидна("ЗапретНаИзменениеСкладаОтгрузки", СтруктураВидимости) Тогда
		//	Область = Макет.ПолучитьОбласть("ЛогистикаЗапретНаИзменениеСкладаОтгрузкиСтрока");
		//	Область.Параметры.ЗапретНаИзменениеСкладаОтгрузки			= Объект.ЗапретНаИзменениеСкладаОтгрузки;
		//	Область.Параметры.РасшифровкаЗапретНаИзменениеСкладаОтгрузки = "ЗапретНаИзменениеСкладаОтгрузки";
		//	ТабличныйДокументПраво.Вывести(Область);
		//КонецЕсли;
		
		Если СтрокаКарточкиВидна("ЗапрашиваемоеМестоПередачи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаЗапрашиваемоеМестоПередачиСтрока");
			Область.Параметры.ЗапрашиваемоеМестоПередачи            = Форма.Изделие.ЗапрашиваемоеМестоПередачи;
			Область.Параметры.РасшифровкаЗапрашиваемоеМестоПередачи = "ЗапрашиваемоеМестоПередачи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("МестоПередачи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаМестоПередачиСтрока");
			Область.Параметры.МестоПередачи            = Форма.Изделие.МестоПередачи;
			Область.Параметры.РасшифровкаМестоПередачи = "МестоПередачи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СкладПродажи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаСкладПродажиСтрока");
			Область.Параметры.СкладПродажи            = Форма.Изделие.СкладПродажи;
			Область.Параметры.РасшифровкаСкладПродажи = "СкладПродажи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ЗапретИзмененияСкладаПродажи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаЗапретИзмененияСкладаПродажиСтрока");
			Область.Параметры.ЗапретИзмененияСкладаПродажи            = Форма.Изделие.ЗапретИзмененияСкладаПродажи;
			Область.Параметры.РасшифровкаЗапретИзмененияСкладаПродажи = "ЗапретИзмененияСкладаПродажи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		//rarus agar 19.01.2021 16981 --
								
		Если СтрокаКарточкиВидна("Тахограф", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаТахографСтрока");
			Область.Параметры.Тахограф			= Форма.Тахограф;
			Область.Параметры.РасшифровкаТахограф = "Тахограф";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;

	КонецЕсли;
	
	#КонецОбласти
										
	#Область ЛогистикаКлючевыеДаты
	
	Если РазделКарточкиВиден("ЛогистикаКлючевыеДаты", СтруктураВидимости) И
		Форма.КлючевыеДатыЛогистика.Количество() <> 0 Тогда
		ОбластьЛогистикаКлючевыеДатыЗаголовок = Макет.ПолучитьОбласть("ЛогистикаКлючевыеДатыЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьЛогистикаКлючевыеДатыЗаголовок);
		
		ИдентификаторСтроки = 0;
		Для Каждого ТекСтрокаКД Из Форма.КлючевыеДатыЛогистика Цикл
			Область = Макет.ПолучитьОбласть("ЛогистикаКлючевыеДатыСтрока");
			Область.Параметры.КлючевыеДатыЛогистикаДата			      = ТекСтрокаКД.КлючеваяДата;
			Область.Параметры.КлючевыеДатыЛогистикаЗначение			  = ТекСтрокаКД.Значение;
			
			Расшифровка = Новый Структура("ИмяЭлемента, ИдентификаторСтроки");
			Расшифровка.ИмяЭлемента = "КлючевыеДатыЛогистикаЗначение";
			Расшифровка.ИдентификаторСтроки = ИдентификаторСтроки;
		    Область.Параметры.РасшифровкаКлючевыеДатыЛогистикаЗначение = Расшифровка;
			ИдентификаторСтроки = ИдентификаторСтроки +1;
			
			ТабличныйДокументПраво.Вывести(Область);	
		КонецЦикла;

	КонецЕсли;
	
	#КонецОбласти
	
	#Область Отгрузка    		
   	
	Если РазделКарточкиВиден("Отгрузка", СтруктураВидимости) Тогда
		ОбластьОтгрузкаЗаголовок = Макет.ПолучитьОбласть("ОтгрузкаЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьОтгрузкаЗаголовок); 		
		
		Если СтрокаКарточкиВидна("ЗаявкаНаСОП", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОтгрузкаЗаявкаНаСОПСтрока");
			Область.Параметры.ЗаявкаНаСОП			 = Форма.ЗаявкаНаСОП;
			Область.Параметры.РасшифровкаЗаявкаНаСОП = "ЗаявкаНаСОП";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СУ", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОтгрузкаСУСтрока");
			Область.Параметры.СУ	    	= Форма.СУ;
			Область.Параметры.РасшифровкаСУ = "СУ";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("Драйв", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОтгрузкаДрайвСтрока");
			Область.Параметры.Драйв			   = Форма.Драйв;
			Область.Параметры.РасшифровкаДрайв = "Драйв";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СОП", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОтгрузкаСОПСтрока");
			Область.Параметры.ИзделиеСОП			= Форма.Изделие.СОП;
			Область.Параметры.РасшифровкаИзделиеСОП = "ИзделиеСОП";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СрокОплатыАванса", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОтгрузкаСрокОплатыАвансаСтрока");
			Область.Параметры.СрокОплатыАванса			  = Форма.СрокОплатыАванса;
			Область.Параметры.РасшифровкаСрокОплатыАванса = "СрокОплатыАванса";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("SpecialCampaign", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОтгрузкаSpecialCampaignСтрока");
			Область.Параметры.SpecialCampaign			 = Форма.SpecialCampaign;
			Область.Параметры.РасшифровкаSpecialCampaign = "SpecialCampaign";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СкладДоставки", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОтгрузкаСкладДоставкиСтрока");
			Область.Параметры.СкладДоставки			 = Форма.СкладДоставки;
			Область.Параметры.РасшифровкаСкладДоставки = "СкладДоставки";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;  										
		
	КонецЕсли;
	
	#КонецОбласти

	#Область ОтгрузкаКлючевыеДаты
	
	Если РазделКарточкиВиден("ОтгрузкаКлючевыеДаты", СтруктураВидимости) И
		Форма.КлючевыеДатыОтгрузка.Количество() <> 0 Тогда
		ОбластьОтгрузкаКлючевыеДатыЗаголовок = Макет.ПолучитьОбласть("ОтгрузкаКлючевыеДатыЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьОтгрузкаКлючевыеДатыЗаголовок);
		
		ИдентификаторСтроки = 0;
		Для Каждого ТекСтрокаКД Из Форма.КлючевыеДатыОтгрузка Цикл
			Область = Макет.ПолучитьОбласть("ОтгрузкаКлючевыеДатыСтрока");
			Область.Параметры.КлючевыеДатыОтгрузкаДата			      = ТекСтрокаКД.КлючеваяДата;
			Область.Параметры.КлючевыеДатыОтгрузкаЗначение			  = ТекСтрокаКД.Значение;
			
			Расшифровка = Новый Структура("ИмяЭлемента, ИдентификаторСтроки");
			Расшифровка.ИмяЭлемента = "КлючевыеДатыОтгрузкаЗначение";
			Расшифровка.ИдентификаторСтроки = ИдентификаторСтроки;
		    Область.Параметры.РасшифровкаКлючевыеДатыОтгрузкаЗначение = Расшифровка;
			ИдентификаторСтроки = ИдентификаторСтроки +1;
			
			ТабличныйДокументПраво.Вывести(Область);	
		КонецЦикла;

	КонецЕсли;
	
	#КонецОбласти

	#Область ДилерКлючевыеДаты
	
	Если РазделКарточкиВиден("ДилерКлючевыеДаты", СтруктураВидимости) И
		Форма.КлючевыеДатыДилер.Количество() <> 0 Тогда
		ОбластьДилерКлючевыеДатыЗаголовок = Макет.ПолучитьОбласть("ДилерКлючевыеДатыЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьДилерКлючевыеДатыЗаголовок);
		
		Для Каждого ТекСтрокаКД Из Форма.КлючевыеДатыДилер Цикл
			Область = Макет.ПолучитьОбласть("ДилерКлючевыеДатыСтрока");
			Область.Параметры.КлючевыеДатыДилерДата			      = ТекСтрокаКД.КлючеваяДата;
			Область.Параметры.КлючевыеДатыДилерЗначение			  = ТекСтрокаКД.Значение;
			ТабличныйДокументПраво.Вывести(Область);	
		КонецЦикла;

	КонецЕсли;
	
	#КонецОбласти
	
	ТабличныйДокументКолонки.Присоединить(ТабличныйДокументПраво);
	
	ТабличныйДокументКарточка.Вывести(ТабличныйДокументКолонки);
	
	Возврат ТабличныйДокументКарточка;
	
КонецФункции

Функция НастройкиКарточкиЗаказа(Заказ, Форма) Экспорт		// rarus tenkam 03.12.2020 mantis 16697 +-
	
	НастройкиКарточкиЗаказа = Новый Структура;
	
	ВидимостьЭлементов = СтруктураВидимостиСтрокКарточки(Форма);
	ЗаголовкиЭлементов = СтруктураЗаголовковКарточки(Заказ.Ссылка, Форма.Изделие, ВидимостьЭлементов);
	//КлючевыеДаты       = СтруктураКлючевыхДат();
	
	НастройкиКарточкиЗаказа.Вставить("ВидимостьЭлементов", ВидимостьЭлементов);
	НастройкиКарточкиЗаказа.Вставить("ЗаголовкиЭлементов", ЗаголовкиЭлементов);
	//НастройкиКарточкиЗаказа.Вставить("КлючевыеДаты",       КлючевыеДаты);
		
	Возврат НастройкиКарточкиЗаказа;
	
КонецФункции

Функция РазделКарточкиВиден(ИмяРаздела, СтруктураВидимости)		// rarus tenkam 03.12.2020 mantis 16697 +-
	
	Если ИмяРаздела = "ДанныеПоЗаказуНаЗавод" Тогда
		Возврат СтрокаКарточкиВидна("БуквенныйКод", СтруктураВидимости)
			Или СтрокаКарточкиВидна("КомплектностьПоставки",         СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТягачШасси",         			 СтруктураВидимости)
			Или СтрокаКарточкиВидна("ЗаказчикCOW",				     СтруктураВидимости)
			Или СтрокаКарточкиВидна("Заказчик",      				 СтруктураВидимости)
			Или СтрокаКарточкиВидна("ПродавецЗаказчика",     		 СтруктураВидимости)
			Или СтрокаКарточкиВидна("Клиент",     					 СтруктураВидимости)
			Или СтрокаКарточкиВидна("MarketChange",     			 СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "Производство" Тогда
		Возврат (СтрокаКарточкиВидна("Спецификация",           СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипСпецификации",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("СтандартнаяСпецификация", СтруктураВидимости) // rarus agar 05.04.2021 17394 ++
			Или СтрокаКарточкиВидна("PartPeriod",         СтруктураВидимости)
			Или СтрокаКарточкиВидна("SOrder",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("FFU", СтруктураВидимости))
			//ИЛИ СтрокаКарточкиВидна("Квота", СтруктураВидимости)) //rarus vikhle 12.11.2021 m 18500
			И СтрокаКарточкиВидна("ГруппаРеквизитыПроизводство", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "ПроизводствоКлючевыеДаты" Тогда
		Возврат СтрокаКарточкиВидна("ГруппаРеквизитыПроизводствоКлючевыеДаты", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "Надстройка" Тогда
		Возврат (СтрокаКарточкиВидна("КузовщикиПредставление",           СтруктураВидимости)
		Или СтрокаКарточкиВидна("ЗаказыНаЗакупкуПредставление",    СтруктураВидимости)
		Или СтрокаКарточкиВидна("ГотовностьТС",         СтруктураВидимости))
		И СтрокаКарточкиВидна("ГруппаРеквизитыНадстройка", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "НадстройкаЗаказыНаЗакупку" Тогда
		Возврат СтрокаКарточкиВидна("ГруппаРеквизитыНадстройкаЗаказыНаЗакупку", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "НадстройкаКлючевыеДаты" Тогда
		Возврат СтрокаКарточкиВидна("ГруппаРеквизитыНадстройкаКлючевыеДаты", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "ДанныеПоПродукту" Тогда
		Возврат СтрокаКарточкиВидна("ТипПродукта",           СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипыМаркетинговые",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерИзделия",         СтруктураВидимости)
			Или СтрокаКарточкиВидна("МодельПродукта",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерПТС", СтруктураВидимости);
		КонецЕсли;
		
	Если ИмяРаздела = "Логистика" Тогда
		Возврат (СтрокаКарточкиВидна("DDPriority",           СтруктураВидимости)
			Или СтрокаКарточкиВидна("DDDeviation",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаБукингЛиста",         СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерБукингЛиста",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("НапоминаниеДилерамОтправлено",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("КодАдресаДоставки",  СтруктураВидимости)
			//Или СтрокаКарточкиВидна("СкладОтгрузки",  СтруктураВидимости) //rarus agar 19.01.2021 16981 +-
			//Или СтрокаКарточкиВидна("ЗапретНаИзменениеСкладаОтгрузки",  СтруктураВидимости) //rarus agar 19.01.2021 16981 +-
			Или СтрокаКарточкиВидна("ЗапрашиваемоеМестоПередачи", СтруктураВидимости) //rarus agar 19.01.2021 16981 +-
			Или СтрокаКарточкиВидна("МестоПередачи", СтруктураВидимости) //rarus agar 19.01.2021 16981 +-
			Или СтрокаКарточкиВидна("СкладПродажи", СтруктураВидимости) //rarus agar 19.01.2021 16981 +-
			Или СтрокаКарточкиВидна("ЗапретИзмененияСкладаПродажи", СтруктураВидимости) //rarus agar 19.01.2021 16981 +-
			Или СтрокаКарточкиВидна("Тахограф",  СтруктураВидимости))
			И СтрокаКарточкиВидна("ГруппаРеквизитыЛогистика", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "ЛогистикаКлючевыеДаты" Тогда
		Возврат СтрокаКарточкиВидна("ГруппаРеквизитыЛогистикаКлючевыеДаты", СтруктураВидимости);
	КонецЕсли;
									
	Если ИмяРаздела = "Отгрузка" Тогда
		Возврат (СтрокаКарточкиВидна("ЗаявкаНаСОП",           СтруктураВидимости)
			Или СтрокаКарточкиВидна("СУ",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("Драйв",         СтруктураВидимости)
			Или СтрокаКарточкиВидна("СОП",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("СрокОплатыАванса",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("SpecialCampaign",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("СкладДоставки",  СтруктураВидимости))
			И СтрокаКарточкиВидна("ГруппаРеквизитыОтгрузка", СтруктураВидимости);
	КонецЕсли;
		
	Если ИмяРаздела = "ОтгрузкаКлючевыеДаты" Тогда
		Возврат СтрокаКарточкиВидна("ГруппаРеквизитыОтгрузкаКлючевыеДаты", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "ДилерКлючевыеДаты" Тогда
		Возврат СтрокаКарточкиВидна("ГруппаРеквизитыДилерКлючевыеДаты", СтруктураВидимости);
	КонецЕсли;

	ПользовательЯвляетсяСотрудникомСканияРусь = Scan_ПраваИНастройки.Scan_Право("ПользовательЯвляетсяСотрудникомСканияРусь");
	
	Если ИмяРаздела = "Гиперссылки" Тогда
		Возврат (СтрокаКарточкиВидна("ГиперссылкиЗамечания",         СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиИсторияЗаказовНаЗавод",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиКлючевыеДаты", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиСводнаяИнформация",      СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиФайлы",     СтруктураВидимости))
			И ПользовательЯвляетсяСотрудникомСканияРусь;
	КонецЕсли;
	
КонецФункции

Функция СтрокаКарточкиВидна(ИмяСтроки, СтруктураВидимости)	// rarus tenkam 03.12.2020 mantis 16697 +-
	
	Видимость = Ложь;
	
	Если СтруктураВидимости.Свойство(ИмяСтроки) Тогда
		Видимость = СтруктураВидимости[ИмяСтроки];
	КонецЕсли;
		
	Возврат Видимость;
	
КонецФункции

Функция СтруктураВидимостиСтрокКарточки(Форма)	// rarus tenkam 03.12.2020 mantis 16697 +-
	
	СтруктураВидимостиЭлементовФормы = Новый Структура;
	
	Для Каждого ЭлементФормы Из Форма.Элементы Цикл
		Если ТипЗнч(ЭлементФормы) = Тип("ПолеФормы") Тогда
			ПутьКДаннымМассив = СтрРазделить(ЭлементФормы.ПутьКДанным, ".", Ложь);
			ПутьКДанным = ПутьКДаннымМассив[ПутьКДаннымМассив.Количество()-1];
			
			СтруктураВидимостиЭлементовФормы.Вставить(ПутьКДанным, ЭлементФормы.Видимость);
		ИначеЕсли ТипЗнч(ЭлементФормы) = Тип("ГруппаФормы") И 
			(ЭлементФормы.Имя = "ГруппаРеквизитыПроизводствоКлючевыеДаты" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыНадстройкаКлючевыеДаты" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыЛогистикаКлючевыеДаты" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыОтгрузкаКлючевыеДаты" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыДилерКлючевыеДаты" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыНадстройкаЗаказыНаЗакупку" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыПроизводство" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыНадстройка" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыЛогистика" ИЛИ
			ЭлементФормы.Имя = "ГруппаРеквизитыОтгрузка") Тогда
				
			СтруктураВидимостиЭлементовФормы.Вставить(ЭлементФормы.Имя, ЭлементФормы.Видимость);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиЗамечания",         		Истина);
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиИсторияЗаказовНаЗавод",	Истина);
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиКлючевыеДаты",			Истина);
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиСводнаяИнформация",		Истина);
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиФайлы",					Истина);
	
	Возврат СтруктураВидимостиЭлементовФормы;
	
КонецФункции

Функция СтруктураЗаголовковКарточки(ЗаказНаЗавод, Изделие, СтруктураВидимости)	// rarus tenkam 03.12.2020 mantis 16697 +-
	
	СтруктураЗаголовков = Новый Структура;
	
	#Область ЗаголовкиГиперссылок
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Продукт", Изделие);
	Запрос.УстановитьПараметр("ЗаказНаЗавод", ЗаказНаЗавод);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.Замечание КАК Замечание
	               |ИЗ
	               |	РегистрСведений.Scan_ЗамечанияПоАктамПриемоПередачи КАК Scan_ЗамечанияПоАктамПриемоПередачи
	               |ГДЕ
	               |	&ГиперссылкиЗамечания
	               |	И Scan_ЗамечанияПоАктамПриемоПередачи.Изделие = &Продукт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_ХарактеристикиЗаказовНаЗавод.Период КАК Период
	               |ИЗ
	               |	РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод КАК Scan_ХарактеристикиЗаказовНаЗавод
	               |ГДЕ
	               |	&ГиперссылкиИсторияЗаказовНаЗавод
	               |	И Scan_ХарактеристикиЗаказовНаЗавод.Заказ = &ЗаказНаЗавод
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод КАК ЗаказНаЗавод
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |ГДЕ
	               |	&ГиперссылкиСводнаяИнформация
	               |	И Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод = &ЗаказНаЗавод
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_КлючевыеДатыПроцессов.Значение КАК КлючеваяДата
	               |ИЗ
	               |	РегистрСведений.Scan_КлючевыеДатыПроцессов КАК Scan_КлючевыеДатыПроцессов
	               |ГДЕ
	               |	&ГиперссылкиКлючевыеДаты
	               |	И Scan_КлючевыеДатыПроцессов.ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.Изделие)
	               |	И Scan_КлючевыеДатыПроцессов.Объект = &Продукт
	               //|	И Scan_КлючевыеДатыПроцессов.Значение <> ДАТАВРЕМЯ(1, 1, 1)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Scan_КлючевыеДатыПроцессов.Значение
	               |ИЗ
	               |	РегистрСведений.Scan_КлючевыеДатыПроцессов КАК Scan_КлючевыеДатыПроцессов
	               |ГДЕ
	               |	&ГиперссылкиКлючевыеДаты
	               |	И Scan_КлючевыеДатыПроцессов.ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)
	               |	И Scan_КлючевыеДатыПроцессов.Объект = &ЗаказНаЗавод
	               //|	И Scan_КлючевыеДатыПроцессов.Значение <> ДАТАВРЕМЯ(1, 1, 1)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_ЗаказыНаЗаводПрисоединенныеФайлы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Scan_ЗаказыНаЗаводПрисоединенныеФайлы КАК Scan_ЗаказыНаЗаводПрисоединенныеФайлы
	               |ГДЕ
	               |	&ГиперссылкиФайлы
	               |	И Scan_ЗаказыНаЗаводПрисоединенныеФайлы.ВладелецФайла = &ЗаказНаЗавод";
		
	ПараметрыЗапроса = Запрос.НайтиПараметры();
	
	Для Каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл
		Если СтрНайти(ПараметрЗапроса.Имя, "Гиперссылки") <> 0 Тогда
			Запрос.УстановитьПараметр(ПараметрЗапроса.Имя, СтрокаКарточкиВидна(ПараметрЗапроса.Имя, СтруктураВидимости));
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если СтрокаКарточкиВидна("ГиперссылкиЗамечания", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[0].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Неисправности';en='Malfunctions'") + " (" + Количество + ")",,,,"ЗамечанияКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиЗамечания", ЗаголовокГиперссылки);
		СтруктураЗаголовков.Вставить("ГиперссылкиЗамечанияИзменить", НСтр("ru = 'Изменить';en='Edit'"));
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиИсторияЗаказовНаЗавод", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[1].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'История заказов на завод';en='Orders to plant history'") + " (" + Количество + ")",,,,"ИсторияЗаказовНаЗаводКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиИсторияЗаказовНаЗавод", ЗаголовокГиперссылки);
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиСводнаяИнформация", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[2].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Сводная информация по заказу и продукту';en='Order and product summary'") + " (" + Количество + ")",,,,"СводнаяИнформацияКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиСводнаяИнформация", ЗаголовокГиперссылки);
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиКлючевыеДаты", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[3].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Ключевые даты';en='Key process dates'") + " (" + Количество + ")",,,,"КлючевыеДатыКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиКлючевыеДаты", ЗаголовокГиперссылки);
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиФайлы", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[4].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Присоединенные файлы';en='Attached files'") + " (" + Количество + ")",,,,"ФайлыКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиФайлы", ЗаголовокГиперссылки);
	КонецЕсли;
		
	#КонецОбласти
	
	Возврат СтруктураЗаголовков;
	
КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)	// rarus tenkam 14.12.2020 mantis 16697 +-
	Если ВидФормы = "ФормаОбъекта" Тогда
		СтандартнаяОбработка = Ложь;
		Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовуюКарточкуЗаказаНаЗавод") Тогда
			ВыбраннаяФорма = "ФормаЭлементаНовая";
		Иначе
			ВыбраннаяФорма = "ФормаЭлемента";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// rarus tenkam 02.12.2020 mantis 16697 ---