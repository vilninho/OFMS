// Модуль менеджера справочника "Значимые события"


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполнения предопределённых элементов справочника
//
Процедура ВыполнитьНачальноеЗаполнение() Экспорт
	
	// Дозаполим события после переноса данных
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначимыеСобытия.Ссылка,
	               |	ЗначимыеСобытия.ПредставлениеИсточника
	               |ИЗ
	               |	Справочник.Scan_ЗначимыеСобытия КАК ЗначимыеСобытия
	               |ГДЕ
	               |	ЗначимыеСобытия.Источник = Значение(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	//Сохранение справочника
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Метаданные.НайтиПоПолномуИмени(Выборка.ПредставлениеИсточника) = Неопределено ИЛИ Найти(Выборка.ПредставлениеИсточника,".")=0 Тогда
			СобытиеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			СобытиеОбъект.Источник = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Выборка.ПредставлениеИсточника);
			
			Попытка
				СобытиеОбъект.Записать();
				ВывестиСообщениеПол(НСтр("ru='Справочник ""Значимые события"". %1 элемент ""%2""'"),,,,,"Обновлен",Выборка.Ссылка);
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ВыполнитьНачальноеЗаполнение()

//Формирует стандартное наименование и представление карточки.
//
// Параметры:
//  Объект   - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
Процедура СформироватьНаименованиеПоУмолчанию(Объект,ПараметрыДействия=Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Объект.Источник) И ЗначениеЗаполнено(Объект.Событие) Тогда
		
		ИмяМетаданных = "";
		ИндексТочки = Найти(Объект.Источник.ПолноеИмя, ".");
		Если ИндексТочки > 0 Тогда
			ИмяМетаданных = "" + Лев(Объект.Источник.ПолноеИмя, ИндексТочки-1) + " ";
		КонецЕсли;
		
		Объект.Наименование = ""+ ИмяМетаданных + """"+ Объект.Источник.Синоним + """" + " (" + Объект.Событие + ")";
	КонецЕсли;
	
КонецПроцедуры // СформироватьНаименованиеПоУмолчанию()


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ПОЛУЧЕНИЯ СПИСКОВ РЕКВИЗИТОВ ОБЪЕКТА

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	Если НЕ Объект.ЭтоГруппа Тогда
		ОбязательныеРеквизиты.Добавить("Источник");
		ОбязательныеРеквизиты.Добавить("Событие");
		ОбязательныеРеквизиты.Добавить("РежимВыполнения");
	КонецЕсли;
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности и уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов и вариант проверки его заполнения
//  (1-Обязательный, 2-Уникальный, 3-Уникальный и обязательный). Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ИЗМЕНЕНИЯ ДАННЫХ РЕКВИЗИТОВ ШАПКИ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ПЕЧАТНЫХ ФОРМ

// Процедура используется для указания доступного данному виду объектов перечня вариантов печати.
//
// Параметры:
//  КомандыПечати - ТаблицаЗначений - Каждая строка таблицы соответствует одному из вариантов печати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры // ДобавитьКомандыПечати()

// Производит формирование структуры с доступностью и видимостью команд печати объекта
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//
Функция ПолучитьПараметрыКомандПечати(Объект) Экспорт
	
	// Команды печати могут быть недоступны и/или невидимы в зависимости от параметров объекта
	ПараметрыКоманд = Новый Соответствие;
	
	// Возвращаем сформированные параметры доступности команд проверки
	Возврат ПараметрыКоманд;
	
КонецФункции // ПолучитьПараметрыКомандПечати()

// Обработчик события формирования печатной формы.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры // Печать()


