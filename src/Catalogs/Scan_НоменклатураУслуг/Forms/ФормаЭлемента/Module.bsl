//rarus tenkam 04.08.2017 mantis 10589 +++

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ГруппаПлатон.Видимость = Ложь;
	Элементы.ГруппаОСАГО.Видимость = Ложь;
	Элементы.ГруппаДопУслуга.Видимость = Ложь;
	Если Объект.Предопределенный Тогда
		// Если это Платон
		Если Объект.Ссылка = Справочники.Scan_НоменклатураУслуг.УслугаПлатон Тогда
			Элементы.ГруппаПлатон.Видимость = Истина;
			ПолучитьДанныеДляРасчетаУслугиПлатон();
			ЗаполнитьТарифыПлатона();
			ДействующийРазмерПлатыЗа1Км = КоэффициентВзиманияПлаты * ТарифОплатыЗа1Км;
		ИначеЕсли Объект.Ссылка = Справочники.Scan_НоменклатураУслуг.ПолисОСАГО ИЛИ
			Объект.Ссылка = Справочники.Scan_НоменклатураУслуг.ПолучениеТранзитныхНомеров Тогда		//08.09
			//Если это ОСАГО
			Элементы.ГруппаОСАГО.Видимость = Истина;
			ЗаполнитьТарифыОСАГО();    	
		КонецЕсли;
	Иначе
		// Если это дополнительные услуги
		Элементы.ГруппаДопУслуга.Видимость = Истина;
		ЗаполнитьТарифыДопУслуги();
	КонецЕсли;
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ТекущийОбъект.Ссылка = Справочники.Scan_НоменклатураУслуг.УслугаПлатон Тогда
		// Если это Платон, то запишем параметры и тарифы
		Справочники.Scan_НоменклатураУслуг.ЗаписьДанныхДляРасчетаУслугиПлатон(КоэффициентВзиманияПлаты, ТарифОплатыЗа1Км, ОснованиеИзменений, ДействующийРазмерПлатыЗа1Км, ДатаНачалаПримененияКоэффициента);
		Для Каждого ТекТариф Из Тарифы Цикл
			Справочники.Scan_НоменклатураУслуг.ЗаписьСтоимостейВРегистр(ТекущийОбъект.Ссылка, ТекТариф.Стоимость, ТекТариф.СпособДоставки, ТекТариф.АдресПолучения, ТекТариф.АдресДоставки,, ТекТариф.Дата);
		КонецЦикла;
	ИначеЕсли ТекущийОбъект.Ссылка = Справочники.Scan_НоменклатураУслуг.ПолисОСАГО ИЛИ
		ТекущийОбъект.Ссылка = Справочники.Scan_НоменклатураУслуг.ПолучениеТранзитныхНомеров Тогда	//08.09
		// Если это Полис ОСАГО
		Для Каждого ТекТариф Из ТарифыОСАГО Цикл
			Справочники.Scan_НоменклатураУслуг.ЗаписьСтоимостейВРегистр(ТекущийОбъект.Ссылка, ТекТариф.Стоимость, ТекТариф.СпособДоставки,,,, ТекТариф.Период);
		КонецЦикла;  		
	ИначеЕсли НЕ ТекущийОбъект.Предопределенный Тогда
		Для Каждого ТекСтрока Из Стоимость Цикл
			Справочники.Scan_НоменклатураУслуг.ЗаписьСтоимостейВРегистр(ТекущийОбъект.Ссылка, ТекСтрока.Стоимость, , , , ТекСтрока.ОсновнаяУслуга, ТекСтрока.Период);
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	н=0;
	Для каждого ПервыйТариф из Стоимость Цикл
		н=н+1;
		м=0;
		Для каждого ВторойТариф из Стоимость Цикл
			м=м+1;
			Если ПервыйТариф.Период = ВторойТариф.Период И н < м Тогда
				//rarus FominskiyAS 19.04.2019  mantis 14191 +++
				//Сообщить("Даты в строках №"+н+" и №"+м+" совпадают. На одну дату можно установить только один тариф.");
				Сообщить(НСтр("ru = 'Даты в строках № '; en = 'Dates in row number '")+н+НСтр("ru = '  и № '; en = ' and row number '")+м+НСтр("ru = '  совпадают. На одну дату можно установить только один тариф.'; en = ' match. You can set only one tariff per one date.'"));
				//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Если Объект.Ссылка = ПредопределенноеЗначение("Справочник.Scan_НоменклатураУслуг.ПолисОСАГО") ИЛИ
		Объект.Ссылка = ПредопределенноеЗначение("Справочник.Scan_НоменклатураУслуг.ПолучениеТранзитныхНомеров") Тогда	//08.09
		Для Сч = 0 По ТарифыОСАГО.Количество()-1 Цикл
			ТекТариф = ТарифыОСАГО[Сч];
			Если ЗначениеЗаполнено(ТекТариф.Стоимость) И НЕ ЗначениеЗаполнено(ТекТариф.Период) Тогда
				//rarus FominskiyAS 21.04.2019  mantis 14191 +++
				//Сообщить("В строке " + (Сч+1) + " не заполнена дата начала действия тарифа!");
				Сообщить(Нстр("ru = 'В строке '; en = 'In row '") + (Сч+1) + НСтр("ru = ' не заполнена дата начала действия тарифа!'; en = ' tariff starting date is not filled!'"));
				//rarus FominskiyAS 21.04.2019  mantis 14191 ---  				
				Отказ = Истина;
			ИначеЕсли ЗначениеЗаполнено(ТекТариф.Период) И НЕ ЗначениеЗаполнено(ТекТариф.Стоимость) Тогда
				//rarus FominskiyAS 21.04.2019  mantis 14191 +++
				//Сообщить("В строке " + (Сч+1) + " не заполнена стоимость тарифа!");
				Сообщить(НСтр("ru = 'В строке '; en = 'In row '") + (Сч+1) + НСтр("ru = ' не заполнена стоимость тарифа!'; en = ' tariff cost is not filled!'"));
				//rarus FominskiyAS 21.04.2019  mantis 14191 ---  
				Отказ = Истина;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) // Rarus tenkam 11.04.2022 mantis 18433 +++

	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
КонецПроцедуры 	// Rarus tenkam 11.04.2022 mantis 18433 ---

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//////////// Услуга Платон /////////////      
&НаСервере
Процедура ПолучитьДанныеДляРасчетаУслугиПлатон()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ЗначенияДанныхДляРасчетаУслугиПлатонСрезПоследних.Услуга,
		|	Scan_ЗначенияДанныхДляРасчетаУслугиПлатонСрезПоследних.КоэффициентВзиманияПлаты,
		|	Scan_ЗначенияДанныхДляРасчетаУслугиПлатонСрезПоследних.ТарифОплатыЗа1Км,
		|	Scan_ЗначенияДанныхДляРасчетаУслугиПлатонСрезПоследних.ДействующийРазмерПлатыЗа1Км,
		|	Scan_ЗначенияДанныхДляРасчетаУслугиПлатонСрезПоследних.ОснованиеИзменений,
		|	Scan_ЗначенияДанныхДляРасчетаУслугиПлатонСрезПоследних.Период
		|ИЗ
		|	РегистрСведений.Scan_ЗначенияДанныхДляРасчетаУслугиПлатон.СрезПоследних(&НаДату, Услуга = ЗНАЧЕНИЕ(Справочник.Scan_НоменклатураУслуг.УслугаПлатон)) КАК Scan_ЗначенияДанныхДляРасчетаУслугиПлатонСрезПоследних";
	
	Запрос.УстановитьПараметр("НаДату", НачалоДня(ТекущаяДата()));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Заполним параметры Платона
		КоэффициентВзиманияПлаты = ВыборкаДетальныеЗаписи.КоэффициентВзиманияПлаты;
		ТарифОплатыЗа1Км = ВыборкаДетальныеЗаписи.ТарифОплатыЗа1Км;
		ДействующийРазмерПлатыЗа1Км = ВыборкаДетальныеЗаписи.ДействующийРазмерПлатыЗа1Км;
		ОснованиеИзменений = ВыборкаДетальныеЗаписи.ОснованиеИзменений;
		ДатаНачалаПримененияКоэффициента = ВыборкаДетальныеЗаписи.Период;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТарифыПлатона()
	Тарифы.Очистить();
	ГраницыПримененияУслуги.Очистить();
	
	// Заполним сначала актуальные тарифы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.Период,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.Услуга,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.СпособДоставки,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.АдресПолучения,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.АдресДоставки,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.Стоимость,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.ОсновнаяУслуга,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.Пользователь
	|ИЗ
	|	РегистрСведений.Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки.СрезПоследних(&ДатаНачалаПримененияКоэффициента, Услуга = &Услуга) КАК Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних";
	
	Запрос.УстановитьПараметр("Услуга", Объект.Ссылка);
	Запрос.УстановитьПараметр("ДатаНачалаПримененияКоэффициента", ДатаНачалаПримененияКоэффициента);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Тарифы.Добавить();
		НоваяСтрока.Стоимость = ВыборкаДетальныеЗаписи.Стоимость;
		НоваяСтрока.АдресПолучения = ВыборкаДетальныеЗаписи.АдресПолучения;
		НоваяСтрока.АдресДоставки = ВыборкаДетальныеЗаписи.АдресДоставки;			
		НоваяСтрока.СпособДоставки = ВыборкаДетальныеЗаписи.СпособДоставки;
		НоваяСтрока.Дата = ВыборкаДетальныеЗаписи.Период;
	КонецЦикла;	
	
	// Теперь заполним способы доставки соответствующие этим тарифам	
	Если Не РезультатЗапроса.Пустой() Тогда
		ТаблицаСпособов = РезультатЗапроса.Выгрузить();
		ТаблицаСпособов.Свернуть("СпособДоставки");
		Для Каждого ТекСтрока Из ТаблицаСпособов Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.СпособДоставки) Тогда
				Продолжить;
			КонецЕсли;
			
			НовыйСпособ = ГраницыПримененияУслуги.Добавить();
			НовыйСпособ.СпособДоставки = ТекСтрока.СпособДоставки;
		КонецЦикла;
	КонецЕсли;  	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРасчетСтоимостиНаСервере()
	Тарифы.Очистить();
	Для Каждого ТекСтрокаСпособа Из ГраницыПримененияУслуги Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Scan_РасстояниеМеждуАдресами.АдресПолучения,
			|	Scan_РасстояниеМеждуАдресами.АдресДоставки,
			|	Scan_РасстояниеМеждуАдресами.Расстояние
			|ИЗ
			|	РегистрСведений.Scan_РасстояниеМеждуАдресами КАК Scan_РасстояниеМеждуАдресами";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяСтрока = Тарифы.Добавить();
			НоваяСтрока.Стоимость = ВыборкаДетальныеЗаписи.Расстояние * ДействующийРазмерПлатыЗа1Км;
			НоваяСтрока.АдресПолучения = ВыборкаДетальныеЗаписи.АдресПолучения;
			НоваяСтрока.АдресДоставки = ВыборкаДетальныеЗаписи.АдресДоставки;			
			НоваяСтрока.СпособДоставки = ТекСтрокаСпособа.СпособДоставки;
			НоваяСтрока.Дата = ДатаНачалаПримененияКоэффициента;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРасчетСтоимости(Команда)
	Если НЕ ЗначениеЗаполнено(ДействующийРазмерПлатыЗа1Км) ИЛИ ГраницыПримененияУслуги.Количество() = 0 ИЛИ НЕ ЗначениеЗаполнено(ДатаНачалаПримененияКоэффициента) Тогда
		//rarus FominskiyAS 21.04.2019  mantis 14191 +++
		//Сообщить("Не удалось выполнить расчет стоимости тарифов. Заполните все параметры!");
		Сообщить(НСтр("ru = 'Не удалось выполнить расчет стоимости тарифов. Заполните все параметры!'; en = 'Unable to perform the calculation of tariffs. Fill in all the parameters!'"));
		//rarus FominskiyAS 21.04.2019  mantis 14191 ---  
		Возврат;
	Иначе
		ВыполнитьРасчетСтоимостиНаСервере();
		Элементы.Перерасчет.Видимость = Ложь;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентВзиманияПлатыПриИзменении(Элемент)
	РассчитатьДействующийРазмерПлаты();
КонецПроцедуры

&НаКлиенте
Процедура ТарифОплатыЗа1КмПриИзменении(Элемент)
	РассчитатьДействующийРазмерПлаты();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьДействующийРазмерПлаты()
	СтароеЗначение = ДействующийРазмерПлатыЗа1Км;
	ДействующийРазмерПлатыЗа1Км = КоэффициентВзиманияПлаты * ТарифОплатыЗа1Км;
	Если Тарифы.Количество() <> 0 И СтароеЗначение <> ДействующийРазмерПлатыЗа1Км Тогда
		Элементы.Перерасчет.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры       

&НаКлиенте
Процедура ГраницыПримененияУслугиПриИзменении(Элемент)
	Элементы.Перерасчет.Видимость = Истина;	
КонецПроцедуры

//////////// Услуга ОСАГО /////////////

&НаСервере
Процедура ЗаполнитьТарифыОСАГО()
	ТарифыОСАГО.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_СпособыДоставкиПродуктов.Ссылка КАК Ссылка
		|ИЗ
		|	Перечисление.Scan_СпособыДоставкиПродуктов КАК Scan_СпособыДоставкиПродуктов";
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовыйСпособДоставки = ТарифыОСАГО.Добавить();
		НовыйСпособДоставки.СпособДоставки = ВыборкаДетальныеЗаписи.Ссылка;	
	КонецЦикла;
	
	// Заполним актуальные тарифы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.Период,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.Услуга,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.СпособДоставки,
	|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних.Стоимость
	|ИЗ
	|	РегистрСведений.Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки.СрезПоследних(&НаДату, Услуга = &Услуга) КАК Scan_СтоимостьУслугДляРасчетаСтоимостиДоставкиСрезПоследних";
	
	Запрос.УстановитьПараметр("Услуга", Объект.Ссылка);
	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("СпособДоставки",ВыборкаДетальныеЗаписи.СпособДоставки);
		НайденныеСтроки = ТарифыОСАГО.НайтиСтроки(ПараметрыПоиска);
		Если НайденныеСтроки.Количество() <> 0 Тогда
			ТекСтрока = НайденныеСтроки[0];
			ТекСтрока.Стоимость = ВыборкаДетальныеЗаписи.Стоимость;
			ТекСтрока.Период = ВыборкаДетальныеЗаписи.Период;
		КонецЕсли;
	КонецЦикла;	
  	
КонецПроцедуры

////////// Дополнительные услуги  ////////////
&НаСервере
Процедура ЗаполнитьТарифыДопУслуги()
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	Стоимость.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрСведенийScan_СтоимостьУслугДляРасчетаСтоимостиДоставки.Период,
		|	РегистрСведенийScan_СтоимостьУслугДляРасчетаСтоимостиДоставки.Стоимость,
		|	РегистрСведенийScan_СтоимостьУслугДляРасчетаСтоимостиДоставки.ОсновнаяУслуга
		|ИЗ
		|	РегистрСведений.Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки КАК РегистрСведенийScan_СтоимостьУслугДляРасчетаСтоимостиДоставки
		|ГДЕ
		|	РегистрСведенийScan_СтоимостьУслугДляРасчетаСтоимостиДоставки.Услуга = &Услуга";
	
	Запрос.УстановитьПараметр("Услуга", Объект.Ссылка);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Стоимость.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СтоимостьОсновнаяУслугаПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Элементы.Стоимость.ТекущиеДанные.Период) Тогда
		//rarus FominskiyAS 21.04.2019  mantis 14191 +++
		//Сообщить("Не указана дата начала действия тарифа");
		Сообщить(НСтр("ru = 'Не указана дата начала действия тарифа'; en = 'Tariff starting date is not filled'"));
		//rarus FominskiyAS 21.04.2019  mantis 14191 ---  
		Элементы.Стоимость.ТекущиеДанные.ОсновнаяУслуга = НЕ Элементы.Стоимость.ТекущиеДанные.ОсновнаяУслуга;
		Возврат;
	КонецЕсли;
	// Если пытаемся установить основную услугу
	Если Элементы.Стоимость.ТекущиеДанные.ОсновнаяУслуга Тогда
		ТекОсновнаяУслуга = ПолучитьОсновнуюУслугуНаДату(Элементы.Стоимость.ТекущиеДанные.Период);
		Если ЗначениеЗаполнено(ТекОсновнаяУслуга) Тогда
			//rarus FominskiyAS 21.04.2019  mantis 14191 +++
			//Сообщить("На дату установки тарифа 'Основной' услугой считается '" + ТекОсновнаяУслуга + "'. Для продолжения, пожалуйста, отмените статус 'Основной' услуги '" + ТекОсновнаяУслуга + "'.");
			Сообщить(НСтр("ru = 'На дату установки тарифа ''Основной'' услугой считается '''; en = 'On the date of setting the tariff ''Basic'' service is '''") + ТекОсновнаяУслуга + НСтр("ru = '''. Для продолжения, пожалуйста, отмените статус ''Основной'' услуги '''; en = '''. To continue, please cancel the ""Basic"" service status for '''") + ТекОсновнаяУслуга + "'.");
			//rarus FominskiyAS 21.04.2019  mantis 14191 ---  
			Элементы.Стоимость.ТекущиеДанные.ОсновнаяУслуга = НЕ Элементы.Стоимость.ТекущиеДанные.ОсновнаяУслуга;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьОсновнуюУслугуНаДату(НаДату)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки.Услуга
		|ИЗ
		|	РегистрСведений.Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки КАК Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки
		|ГДЕ
		|	Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки.Период = &НаДату
		|	И Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки.ОсновнаяУслуга = ИСТИНА
		|	И Scan_СтоимостьУслугДляРасчетаСтоимостиДоставки.Услуга <> &ТекУслуга";
	
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("ТекУслуга", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Услуга;
	КонецЕсли;
	Возврат Справочники.Scan_НоменклатураУслуг.ПустаяСсылка(); 	
КонецФункции

&НаКлиенте
Процедура СтоимостьПериодПриИзменении(Элемент)
	н=0;
	Для каждого Тариф из Стоимость Цикл
		н=н+1;
		Если Элементы.Стоимость.ТекущиеДанные.Период = Тариф.Период
		   И Элементы.Стоимость.ТекущаяСтрока <> н - 1 Тогда 
		//rarus FominskiyAS 21.04.2019  mantis 14191 +++
		//Сообщить("На "+Формат(Тариф.Период,"ДЛФ = Д")+" уже установлен тариф в строке №"+н+".")
		Сообщить(НСтр("ru = 'На '; en = 'For '")+Формат(Тариф.Период,"ДЛФ = Д")+НСтр("ru = ' уже установлен тариф в строке № '; en = ' tariff already selected for line '")+н+".")
		//rarus FominskiyAS 21.04.2019  mantis 14191 ---     
	    КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
//rarus tenkam 04.08.2017 mantis 10589 ---
