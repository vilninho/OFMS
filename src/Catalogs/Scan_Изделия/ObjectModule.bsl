Перем ИзмененныеРеквизиты; 	//rarus tenkam 07.03.2017 mantis 7175 +
Перем ИзмененныеРеквизитыПродукт; //rarus bonmak 18.05.2020 14375
Перем ИзмененныеРеквизитыПродуктCreate; //rarus bonmak 18.05.2020 14375
Перем ИзмРекв; //rarus tenkam 06.06.2019 mantis 13865 +
Перем НеобходимоЗаписатьДилераЗаказчика;	// rarus tenkam 11.01.2021 mantis 16934 +
Перем ИзмененныеРеквизитыAddProperty; // rarus vikhle 18.01.2022 m 18755

Процедура ПередЗаписью(Отказ)
	//rarus sergei 09.11.2016 mantis 7163 ++ 
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ?(ЭтотОбъект.ЭтоНовый(), ИСТИНА, ЛОЖЬ));
	//rarus sergei 09.11.2016 mantis 7163 --
	
	//rarus BProg_Dekin 18.05.2020 mantis 0015999 ++ Установка локального статуса
	Если НЕ ЗначениеЗаполнено(ЛокальныйСтатусПродукта) Тогда
		Если (ЭтоНовый() И (БУ ИЛИ МаркаПродукта <> Справочники.Scan_МаркиПродуктов.Scania)) 
			ИЛИ (МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania И ЗначениеЗаполнено(ЗаказНаЗавод)) Тогда
			
			ЛокальныйСтатусПродукта = Справочники.Scan_ЛокальныеСтатусыПродуктов.NEW;
		КонецЕсли;
	КонецЕсли;
	//rarus BProg_Dekin 18.05.2020 mantis 0015999 --
	
	//rarus agar 23.09.2020 15696 ++
	// У надстройки или услуги, очищаем локальный статус, если был заполнен
	ТипыПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	ЭтоНадстройкаИлиУслуга       = ТипыПродуктовНадстроекИУслуг.Найти(ТипПродукта) <> Неопределено;
	Если ЭтоНадстройкаИлиУслуга Тогда
		ЛокальныйСтатусПродукта = Неопределено;
	КонецЕсли;
	//rarus agar 23.09.2020 15696 --
	
	// rarus tenkam 11.01.2021 mantis 16934 +++
	НеобходимоЗаписатьДилераЗаказчика = Ложь;
	Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовыйАлгоритмСозданияДоговоров") Тогда
		Если Ссылка.СОП <> СОП И ЗначениеЗаполнено(ЗаказНаЗавод) Тогда
			НеобходимоЗаписатьДилераЗаказчика = Истина;
		КонецЕсли;
	КонецЕсли;
	// rarus tenkam 11.01.2021 mantis 16934 ---
	
	Если ЗначениеЗаполнено(IDExternalSystem) ИЛИ БУ Тогда //rarus bonmak 12.02.2020 15706 добавил условие
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_Изделия.Ссылка
		|ИЗ
		|	Справочник.Scan_Изделия КАК Scan_Изделия
		|ГДЕ
		|	Scan_Изделия.НомерИзделия = &НомерИзделия
		|	И Scan_Изделия.МаркаПродукта = &МаркаПродукта
		|	И Scan_Изделия.ТипПродукта.ВидПродукта = &ВидПродукта";
		Запрос.УстановитьПараметр("НомерИзделия", НомерИзделия);
		Запрос.УстановитьПараметр("МаркаПродукта", МаркаПродукта);
		Запрос.УстановитьПараметр("ВидПродукта", ТипПродукта.ВидПродукта);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.Ссылка = Ссылка Тогда
				Продолжить;
			КонецЕсли;
			Отказ = Истина;
			//rarus FominskiyAS 19.04.2019  mantis 14191 +++
			//Сообщить("Изделие с таким номером, маркой и видом уже есть!");
			//rarus bonmak 20.12.2019 15531 ++
			//Сообщить(НСтр("ru = 'Изделие с таким номером, маркой и видом уже есть!'; en = 'Product with the same number, brand and view already exists!'"));
			ТекстОшибки = НСтр("ru = 'Изделие с таким номером, маркой и видом уже есть!'; en = 'Product with the same number, brand and view already exists!'"); 
			Сообщить (ТекстОшибки);
			ЗаписьЖурналаРегистрации("Ошибка справочника", УровеньЖурналаРегистрации.Ошибка,, Ссылка, ТекстОшибки); 
			//rarus bonmak 20.12.2019 15531 --
			//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
		КонецЦикла;
	КонецЕсли;
	
	//rarus tenkam 07.03.2017 mantis 7175 +++
	// Для передачи в 1БД
	ИзмененныеРеквизиты = Новый Массив;
	Если Ссылка["Замечание"] <> Замечание Тогда 
		ИзмененныеРеквизиты.Добавить("Замечание");
	КонецЕсли;
	Если Ссылка["НомерПолисаОСАГО"] <> НомерПолисаОСАГО Тогда 
		ИзмененныеРеквизиты.Добавить("НомерПолисаОСАГО");
	КонецЕсли;
	Если Ссылка["ДатаИстеченияПолиса"] <> ДатаИстеченияПолиса Тогда 
		ИзмененныеРеквизиты.Добавить("ДатаИстеченияПолиса");
	КонецЕсли;
	Если Ссылка["УстановленныйТахограф"] <> УстановленныйТахограф Тогда 
		ИзмененныеРеквизиты.Добавить("УстановленныйТахограф");
	КонецЕсли;
	Если Ссылка["СрокУстраненияНедостатковДоп"] <> СрокУстраненияНедостатковДоп Тогда 
		ИзмененныеРеквизиты.Добавить("СрокУстраненияНедостатковДоп");
	КонецЕсли;
	Если Ссылка["КрайняяДатаУстраненияНедостатков"] <> КрайняяДатаУстраненияНедостатков Тогда 
		ИзмененныеРеквизиты.Добавить("КрайняяДатаУстраненияНедостатков");
	КонецЕсли;
	Если Ссылка["МодельПТС"] <> МодельПТС Тогда 
		ИзмененныеРеквизиты.Добавить("МодельПТС");
	КонецЕсли;
	//rarus tenkam 07.03.2017 mantis 7175 ---
		
	// rarus tenkam 20.08.2019 mantis 14427 +++
	Если ЭтоНовый() И ЗначениеЗаполнено(ТипПродукта) Тогда
		ТекТип = ТипПродукта;
		ТекВид = ТипПродукта.ВидПродукта;
		ТекГруппа = ?(ЗначениеЗаполнено(ТекВид), ТекВид.ГруппаПродукта, Справочники.Scan_ГруппыПродуктов.ПустаяСсылка());
		ГруппаИзделийOFMS = РегистрыСведений.Scan_СоответствияТиповВидовИГрупп.ПолучитьГруппуИзделийOFMS(ТекГруппа, ТекВид, ТекТип);
	КонецЕсли;
	// rarus tenkam 20.08.2019 mantis 14427 --- 
	
	// rarus tenkam 19.09.2019 mantis 14442 +++
	Если ЗначениеЗаполнено(ТипГИБДД) И ГруппаИзделийOFMS <> Перечисления.Scan_ГруппыИзделийOFMS.ТранспортноеСредство Тогда
		ЗаписьЖурналаРегистрации("Проверка типа ГИБДД",,,,"Тип ГИБДД очищен т.к. у изделия " + Наименование + " группа изделий OFMS не Транспортные средства",);
		ТипГИБДД = Справочники.Scan_ТипыГИБДД.ПустаяСсылка();
	КонецЕсли;     	
	// rarus tenkam 19.09.2019 mantis 14442 ---

	// rarus tenkam 06.06.2019 mantis 13865 +++
	ИзмРекв = Новый Массив;
	//Если новый - запишем заполненные реквизиты
	Если ЭтотОбъект.ЭтоНовый() тогда
		Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
			Если ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("Булево") и ЭтотОбъект[Рекв.Имя] = Ложь Тогда
				Продолжить;
			ИначеЕсли Не ЗначениеЗаполнено(ЭтотОбъект[Рекв.Имя]) Тогда
				Продолжить;
			КонецЕсли;
			ИзмРекв.Добавить(Рекв.Имя);
		КонецЦикла;
	Иначе  //если не новый - то измененные
		Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеЗаписыватьВРегистр") Тогда //rarus bonmak 04.09.2019 14442 добавил условие, используется в внешней обработке
			Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
				Если (ЭтотОбъект[Рекв.Имя] <> ссылка[Рекв.Имя]) Тогда
					ИзмРекв.Добавить(Рекв.Имя);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	//для старых объектов, у которых нет данных в регистре - запишем заполненные
	Если ИзмРекв.Количество() = 0 и  НетИсторииВРегистре(ссылка) Тогда
		Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
			Если ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("Булево") и ЭтотОбъект[Рекв.Имя] = Ложь Тогда
				Продолжить;
			ИначеЕсли Не ЗначениеЗаполнено(ЭтотОбъект[Рекв.Имя]) Тогда
				Продолжить;
			КонецЕсли;
			ИзмРекв.Добавить(Рекв.Имя);
		КонецЦикла;
	КонецЕсли;
	//rarus tenkam 06.06.2019 mantis 13865 ---	
	
	СоздатьИПодставитьФиктивныйЗаказНаЗавод(); //rarus BProg_Dekin 26.05.2020 mantis 0015893 +- Создание фиктивного заказа на завод, если продукт НЕ сканиа
	
	//rarus bonmak 18.05.2020 14375 ++
	// Для передачи в 1БД данных по продуктам
	ИзмененныеРеквизитыПродукт = Новый Массив; //данные для метода SetProduct
	ИзмененныеРеквизитыПродуктCreate = Новый Массив; //данные для метода CreateProduct
	ИзмененныеРеквизитыAddProperty	= Новый Массив; // данные для метода SetAdditionalProperty //rarus vikhle 18.01.2022 m 18755
	Если НЕ Отказ Тогда
		// rarus tenkam 18.02.2021 mantis 17190 +++
		Если Ссылка["DLV"] <> DLV Тогда 
			ИзмененныеРеквизитыПродукт.Добавить("DLV");
		КонецЕсли;
		// rarus tenkam 18.02.2021 mantis 17190 ---
		
		// rarus vikhle 18.01.2022 m 18755 +++
		Если Ссылка["ТипСпецификации"] <> ТипСпецификации И ЗначениеЗаполнено(ТипСпецификации) Тогда
			ИзмененныеРеквизитыAddProperty.Добавить("ТипСпецификации");
		КонецЕсли;	
		
		Если Ссылка["СтандартнаяСпецификация"] <> СтандартнаяСпецификация Тогда
			ИзмененныеРеквизитыAddProperty.Добавить("СтандартнаяСпецификация");
		КонецЕсли;
		// rarus vikhle 18.01.2022 m 18755 ---
		//Rarus bonmak 16.05.2022 19158 ++
		Если Ссылка["Аренда"] <> Аренда И Аренда Тогда
			ИзмененныеРеквизитыAddProperty.Добавить("Аренда");
		КонецЕсли;
		
		Если Ссылка["Демо"] <> Демо И Демо Тогда
			ИзмененныеРеквизитыAddProperty.Добавить("Демо");
		КонецЕсли;
		
		Если Ссылка["Тест"] <> Тест И Тест Тогда
			ИзмененныеРеквизитыAddProperty.Добавить("Тест");
		КонецЕсли;
		
		//Rarus bonmak 16.05.2022 19158 --
		
		Если БУ Тогда			
			Если ЭтотОбъект.ЭтоНовый() И НЕ ЗначениеЗаполнено(IDExternalSystemProduct) //rarus bonmak 07.08.2020 14375 добавил второе условие 
				И НЕ ЗначениеЗаполнено(IDExternalSystem) //rarus bonmak 04.03.2021 17375 
				Тогда 
				Если Ссылка["НомерИзделия"] <> НомерИзделия Тогда 
					ИзмененныеРеквизитыПродуктCreate.Добавить("НомерИзделия");
				КонецЕсли;
				Если Ссылка["МаркаПродукта"] <> МаркаПродукта И ЗначениеЗаполнено(МаркаПродукта.IDExternalSystem) Тогда 
					ИзмененныеРеквизитыПродуктCreate.Добавить("МаркаПродукта");
				КонецЕсли;
				Если Ссылка["ТипПродукта"] <> ТипПродукта И ЗначениеЗаполнено(ТипПродукта.IDExternalSystem) Тогда 
					ИзмененныеРеквизитыПродуктCreate.Добавить("ТипПродукта");
				КонецЕсли;
				// Rarus tenkam 31.03.2022 mantis 19047 +++
				Если Ссылка["БУ"] <> БУ Тогда
					ИзмененныеРеквизитыПродуктCreate.Добавить("БУ");
					ИзмененныеРеквизитыПродуктCreate.Добавить("TLMS");										
				КонецЕсли;				
				// Rarus tenkam 31.03.2022 mantis 19047 ---
				
				//Преопразуем массив в структуру
				СтруктураИзмененныеРеквизитыПродуктCreate = Новый Структура;
				Для Каждого СтрМассива Из ИзмененныеРеквизитыПродуктCreate Цикл
					// Rarus tenkam 31.03.2022 mantis 19047 +++
					Если СтрМассива = "TLMS" Тогда
						Продолжить;
					КонецЕсли;
					// Rarus tenkam 31.03.2022 mantis 19047 ---
					СтруктураИзмененныеРеквизитыПродуктCreate.Вставить(СтрМассива, ЭтотОбъект[СтрМассива]);		
				КонецЦикла;                                      			
				
				// Rarus tenkam 31.03.2022 mantis 19047 +++
				Если Ссылка["БУ"] <> БУ Тогда
					СтруктураИзмененныеРеквизитыПродуктCreate.Вставить("TLMS", Истина);
				КонецЕсли;				
				// Rarus tenkam 31.03.2022 mantis 19047 ---
				
				//создадим продукт
				ГУИДПродукта = Scan_ВебСервисыРазборОтветов.ВызватьМетод_CreateProduct(СтруктураИзмененныеРеквизитыПродуктCreate);
				Если ГУИДПродукта <> Неопределено Тогда
					IDExternalSystemProduct = ГУИДПродукта;
					ИзмененныеРеквизитыПродуктCreate.Очистить();
				КонецЕсли;
			КонецЕсли;
			
			//rarus bonmak 07.08.2020 14375 добавил условие ++
			Если (ЭтотОбъект.ЭтоНовый() И (ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитБУВ1БД")
				ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД"))) 
				ИЛИ (НЕ ЭтотОбъект.ЭтоНовый()) Тогда 						
				Если ЗначениеЗаполнено(IDExternalSystemProduct) Тогда
					Если Ссылка["VIN"] <> VIN 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("VIN");
					КонецЕсли;
					Если Ссылка["ТипПродуктаЛогистический"] <> ТипПродуктаЛогистический 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД")
						И ЗначениеЗаполнено(ТипПродуктаЛогистический.IDExternalSystem) Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("ТипПродуктаЛогистический");
					КонецЕсли;
					
					Если Ссылка["МодельПродукта"] <> МодельПродукта 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") 
						И ЗначениеЗаполнено(МодельПродукта.IDExternalSystem) Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("МодельПродукта");
					КонецЕсли;
					Если Ссылка["УстановленныйТахограф"] <> УстановленныйТахограф 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("УстановленныйТахограф");
					КонецЕсли;
					Если Ссылка["МодельДвигателяТС"] <> МодельДвигателяТС 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") 
						И ЗначениеЗаполнено(МодельДвигателяТС.IDExternalSystem) Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("МодельДвигателяТС");
					КонецЕсли;
					Если Ссылка["НомерДвигателяТС"] <> НомерДвигателяТС 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("НомерДвигателяТС");
					КонецЕсли;
					Если Ссылка["НомерПолисаОСАГО"] <> НомерПолисаОСАГО 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("НомерПолисаОСАГО");
					КонецЕсли;
					Если Ссылка["ДатаИстеченияПолиса"] <> ДатаИстеченияПолиса 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("ДатаИстеченияПолиса");
					КонецЕсли;
					Если Ссылка["Комментарий"] <> Комментарий 
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") Тогда 
						ИзмененныеРеквизитыПродукт.Добавить("Комментарий");
					КонецЕсли;
					//rarus bonmak 07.08.2020 14375 ++
					ПроверятьБУ = Ложь;
					Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитБУВ1БД")
						ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") Тогда 						
						ПроверятьБУ = Истина;
					КонецЕсли;
					//rarus bonmak 07.08.2020 14375 --
					
					Если ПроверятьБУ Тогда //rarus bonmak 07.08.2020 14375 добавил условие
						Если Ссылка["БУ"] <> БУ Тогда 
							ИзмененныеРеквизитыПродукт.Добавить("БУ");
						КонецЕсли;
					КонецЕсли;
					Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ОтправитьРеквизитыВ1БД") Тогда
						Справочники.Scan_Изделия.ПоставитьВОчередьРеквизитыФормыВ1БД(Ссылка, Истина);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; //rarus bonmak 07.08.2020 14375 --
		КонецЕсли;
	КонецЕсли;
	//rarus bonmak 18.05.2020 14375 --
КонецПроцедуры

//rarus tenkam 16.12.2016 mantis 6897 ++
Процедура ПриЗаписи(Отказ)
	Если НЕ Отказ Тогда
		// rarus tenkam 13.08.2019 mantis 14427 +++
		НаДату = ТекущаяДата();	
		Источник = Неопределено; //rarus vikhle 08.02.2021 mt 16981
		Статус = Неопределено; //rarus vikhle 08.02.2020 mantis 16981
		
		РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ЗаписатьЗначенияРСВзаимосвязьИзделийИЗаказов(Ссылка, ЗаказНаЗавод, НаДату); 	
		// rarus tenkam 13.08.2019 mantis 14427 ---
		
		// rarus tenkam 06.06.2019 mantis 13865 +++
		//НаДату = ТекущаяДата();
		////rarus abrant 30.06.2017 mantis 10065 +++
		////Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, VIN,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.VIN, НаДату);
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, VIN,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.НомерШассиПолный, НаДату);
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, VIN2,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.VIN, НаДату);
		////rarus abrant 30.06.2017 mantis 10065 ---
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, ТипПродуктаЛогистический,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ТипПродуктаЛогистика, НаДату);
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, МодельПродукта,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Модель, НаДату);
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, ТипПродукта, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ТипПродукта, НаДату);
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, ТипПродуктаМаркетинговый, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ТипПродуктаМаркетинговый, НаДату);
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, СпецификацияПродукта, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Спецификация, НаДату);
		////rarus tenkam 05.07.2017 mantis 10084 +++		
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, Аренда, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Аренда, НаДату);
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, ДемоИТест, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ДемоИТест, НаДату);
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, ДатаУстановки, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ДатаУстановки, НаДату);
		////rarus tenkam 05.07.2017 mantis 10084 ---
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, БУ, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.БУ, НаДату); //rarus tenkam 07.11.2017 mantis 11856 +
		//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, НомерЭРАГЛОНАСС, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.НомерЭРАГЛОНАСС, НаДату); //rarus tenkam 13.02.2018 mantis 12574 +
		
		Для Каждого Реквизит из	ИзмРекв Цикл
			//rarus BProg_Dekin 21.05.2020 mantis 0015999 ++ Переделал запись значений в характеристики изделия для исключения дублей
			//нЗапись = РегистрыСведений.Scan_ХарактеристикиИзделия.СоздатьМенеджерЗаписи();
			//нЗапись.Период = ТекущаяДата();
			//нЗапись.Изделие = Ссылка;
			//нЗапись.ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям[Реквизит];
			//нЗапись.Значение = Ссылка[Реквизит];
			//			
			//нЗапись.Пользователь = ПользователиСлужебный.АвторизованныйПользователь();
			//			
			//нЗапись.Записать();
			ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям[Реквизит];
			//rarus vikhle 08.02.2020 mantis 16981 +++
			ДополнительныеСвойства.Свойство("Источник",Источник);
			ДополнительныеСвойства.Свойство("Статус",Статус);
			Если ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.СкладПродажи И Источник = Неопределено Тогда
				Источник = Пользователи.ТекущийПользователь();
			КонецЕсли;	
			//rarus vikhle 08.02.2020 mantis 16981 ---
			//rarus bonmak 10.08.2021 18073 ++
			Если Реквизит = ЭтотОбъект.Метаданные().Реквизиты.НомерИзделия.Имя Тогда
				ДополнительныеСвойства.Свойство("ИсточникНомерИзделия", Источник);
			КонецЕсли;
			//rarus bonmak 10.08.2021 18073 --
			Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Ссылка, Ссылка[Реквизит], ВидЗначения,,,Источник,Статус); //rarus vikhle 08.02.2020 mantis 16981 + источник, статус  
			//rarus BProg_Dekin 21.05.2020 mantis 0015999 --
			
			//rarus vikhle 11.03.2021 mt 17340 +++
			//Отправка письма при установке локального статуса Deleted
			Если Реквизит = ЭтотОбъект.Метаданные().Реквизиты.ЛокальныйСтатусПродукта.Имя 
				И ЛокальныйСтатусПродукта = Справочники.Scan_ЛокальныеСтатусыПродуктов.DELETED Тогда
				РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонПисьмаОбУстановкеЛокальногоСтатусаDeleted",Ссылка);	
			КонецЕсли;	
			//rarus vikhle 11.03.2021 mt 17340 ---
		КонецЦикла;
		// rarus tenkam 06.06.2019 mantis 13865 ---
		
		//rarus tenkam 07.03.2017 mantis 7175 +++
		Для Каждого ИмяРеквизита Из ИзмененныеРеквизиты Цикл
			//Запишем в регистр
			//Если ЗначениеЗаполнено(Ссылка[ИмяРеквизита]) Тогда // Rarus tenkam 17.11.2021 mantis 18493 
				//rarus bonmak 15.08.2019 14576 ++
				//РегистрыСведений.Scan_Обмен1БДДанныеДляОтправки.ЗаписатьРеквизит(Ссылка, ИмяРеквизита, Ссылка[ИмяРеквизита]);
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.SetChassis, ИмяРеквизита, Ссылка[ИмяРеквизита]); //rarus bonmak 21.08.2020 16210 изменено с перечисления на справочник 	
                //rarus bonmak 15.08.2019 14576 --
			//КонецЕсли;
		КонецЦикла;
		//rarus tenkam 07.03.2017 mantis 7175 ---
		
		//rarus bonmak 18.05.2020 14375 ++
		Для Каждого ИмяРеквизитаПродуктCreate Из ИзмененныеРеквизитыПродуктCreate Цикл
			// Rarus tenkam 31.03.2022 mantis 19047 +++
			Если ИмяРеквизитаПродуктCreate = "TLMS" Тогда
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.CreateProduct, ИмяРеквизитаПродуктCreate, Истина);	
				Продолжить;	
			КонецЕсли;				
			// Rarus tenkam 31.03.2022 mantis 19047 ---
			
			//Запишем в регистр
			Если ЗначениеЗаполнено(Ссылка[ИмяРеквизитаПродуктCreate]) Тогда
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.CreateProduct, ИмяРеквизитаПродуктCreate, Ссылка[ИмяРеквизитаПродуктCreate]); //rarus bonmak 21.08.2020 16210 изменено с перечисления на справочник	
			КонецЕсли;            			
		КонецЦикла;
		
		Для Каждого ИмяРеквизитаПродукт Из ИзмененныеРеквизитыПродукт Цикл
			//Запишем в регистр
			Если ЗначениеЗаполнено(Ссылка[ИмяРеквизитаПродукт]) Тогда
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.SetProduct, ИмяРеквизитаПродукт, Ссылка[ИмяРеквизитаПродукт]); //rarus bonmak 21.08.2020 16210 изменено с перечисления на справочник	
			КонецЕсли;
		КонецЦикла;

		//rarus bonmak 18.05.2020 14375 ++
		
		// rarus vikhle 18.01.2022 m 18755 +++
		Для Каждого ИмяРеквизитаAddProperty Из ИзмененныеРеквизитыAddProperty Цикл
			Если ИмяРеквизитаAddProperty = "ТипСпецификации" Тогда
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.SetAdditionalProperty, ИмяРеквизитаAddProperty, ВРег(ТипСпецификации));					
			ИначеЕсли ИмяРеквизитаAddProperty = "СтандартнаяСпецификация" Тогда 
				НомерСпецификации = "";
				Если НЕ СтандартнаяСпецификация.Пустая() Тогда
					НомерСпецификации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтандартнаяСпецификация, "НомерСпецификации");
				КонецЕсли;	
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.SetAdditionalProperty, ИмяРеквизитаAddProperty, НомерСпецификации);
				//Rarus bonmak 16.05.2022 19158 ++
			ИначеЕсли ИмяРеквизитаAddProperty = "Аренда" Тогда
				GuidСтатусаПродукта = Scan_ПраваИНастройки.Scan_Право("GUIDСтатусаПродуктаАренда"); 
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.SetAdditionalProperty, "СтатусПродукта", GuidСтатусаПродукта);
			ИначеЕсли ИмяРеквизитаAddProperty = "Демо" Тогда
				GuidСтатусаПродукта = Scan_ПраваИНастройки.Scan_Право("GUIDСтатусаПродуктаДемо"); 
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.SetAdditionalProperty, "СтатусПродукта", GuidСтатусаПродукта);
			ИначеЕсли ИмяРеквизитаAddProperty = "Тест" Тогда
				GuidСтатусаПродукта = Scan_ПраваИНастройки.Scan_Право("GUIDСтатусаПродуктаТест"); 
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.SetAdditionalProperty, "СтатусПродукта", GuidСтатусаПродукта);
				
				//Rarus bonmak 16.05.2022 19158 ++
			Иначе
				РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(Ссылка, Справочники.Scan_ВидыЗапроса.SetAdditionalProperty, ИмяРеквизитаAddProperty, Ссылка[ИмяРеквизитаAddProperty]);
			КонецЕсли;	
		КонецЦикла;	
		// rarus vikhle 18.01.2022 m 18755 ---
		
		//rarus pechek 20.04.2020 mantis 15943 +++
		Если Не Отказ Тогда
			Если Scan_ПраваИНастройки.Scan_Право("ЗаполнятьРегистрСводнаяИнформацияПоПродукту") Тогда
				Для Каждого СтрокаРеквизит Из Метаданные.Справочники.Scan_Изделия.Реквизиты Цикл
					Попытка
						ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям[СтрокаРеквизит.Имя];
					Исключение
						Продолжить; 
					КонецПопытки;
					РегистрыСведений.Scan_СводнаяИнформацияПоПродукту.ЗаписьЗначенияРегистраСводнаяИнформацияПоПродукту(Ссылка,Ссылка.ЗаказНаЗавод,ВидЗначения,Ссылка[СтрокаРеквизит.Имя]);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		//rarus pechek 20.04.2020 mantis 15943 --- 
		
		// rarus tenkam 11.01.2021 mantis 16934 +++
		Если НеобходимоЗаписатьДилераЗаказчика Тогда
			ЗаказОбъект = ЗаказНаЗавод.ПолучитьОбъект();
			Если ЗначениеЗаполнено(СОП) Тогда
				ТекДилер = СОП.Владелец;
			Иначе
				ТекДилер = ПредопределенноеЗначение("Справочник.Scan_Контрагенты.ПустаяСсылка");
			КонецЕсли;
			ЗаказОбъект.Заказчик = ТекДилер;
			Попытка
				ЗаказОбъект.Записать();
			Исключение
				ТекстОшибки = "Произошла ошибка при записи Дилера в заказ на завод: " + ОписаниеОшибки(); 
				Сообщить(ТекстОшибки);    								
			КонецПопытки;
		КонецЕсли;
		// rarus tenkam 11.01.2021 mantis 16934 ---
		
		//rarus vikhle 28.01.2021 mt 16328 +++
		//Добавление записи в DD информер для ситуации когда продукт создался после заказа и по заказу есть даты pdd,cdd,cdd2,edd
		Если НЕ Отказ И ДополнительныеСвойства.ЭтоНовый Тогда
			Если НЕ БУ 
				И НЕ ГруппаИзделийOFMS = Перечисления.Scan_ГруппыИзделийOFMS.Услуга 
				И МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania Тогда
				
				СтруктураОтбора = Новый Структура;
				СтруктураОтбора.Вставить("Заказ",ЗаказНаЗавод);
				СтруктураОтбора.Вставить("Реквизит",Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод);
				ТипЗаказа = РегистрыСведений.Scan_ХарактеристикиЗаказовНаЗавод.ПолучитьПоследнее(,СтруктураОтбора);
				
				//Заказы с типом Open не учитываются
				Если НЕ ЗначениеЗаполнено(ТипЗаказа.Значение) 
					ИЛИ (ТипЗаказа.Значение <> Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderNormal 
					И ТипЗаказа.Значение <> Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderRefill
					И ТипЗаказа.Значение <> Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderUrgent) Тогда
					Возврат;
				КонецЕсли;	
				
				мВидыКлючевыхДат = Новый Массив;
				мВидыКлючевыхДат.Добавить(Перечисления.Scan_КлючевыеДаты.PDD);
				мВидыКлючевыхДат.Добавить(Перечисления.Scan_КлючевыеДаты.CDD);
				мВидыКлючевыхДат.Добавить(Перечисления.Scan_КлючевыеДаты.CDD2);
				мВидыКлючевыхДат.Добавить(Перечисления.Scan_КлючевыеДаты.EDD);
				мВидыКлючевыхДат.Добавить(Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия);
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	Scan_КлючевыеДатыПроцессовСрезПоследних.Объект КАК Объект,
				               |	Scan_КлючевыеДатыПроцессовСрезПоследних.ВидКлючевойДаты КАК ВидКлючевойДаты,
				               |	Scan_КлючевыеДатыПроцессовСрезПоследних.Значение КАК Значение
				               |ИЗ
				               |	РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
				               |			,
				               |			ВидКлючевойДаты В (&ВидыКлючевыхДат)
				               |				И Объект = &Объект
				               |				И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследних";
				Запрос.УстановитьПараметр("ВидыКлючевыхДат",мВидыКлючевыхДат);
				Запрос.УстановитьПараметр("Объект",ЗаказНаЗавод);
				РезультатЗапроса = Запрос.Выполнить();
				Если НЕ РезультатЗапроса.Пустой() Тогда
					МенеджерЗаписи =  РегистрыСведений.Scan_ОчередьDDИнформера.СоздатьМенеджерЗаписи(); 
					МенеджерЗаписи.ЗаказНаЗавод = ЗаказНаЗавод;
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						//При наличии даты продажи заказ не должен попадать в информер
						Если Выборка.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия И ЗначениеЗаполнено(Выборка.Значение) Тогда
							Возврат;
						КонецЕсли;	
						МенеджерЗаписи.ИзмененаДатаCDD  = МенеджерЗаписи.ИзмененаДатаCDD  ИЛИ Выборка.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CDD;
						МенеджерЗаписи.ИзмененаДатаCDD2 = МенеджерЗаписи.ИзмененаДатаCDD2 ИЛИ Выборка.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CDD2;
						МенеджерЗаписи.ИзмененаДатаPDD  = МенеджерЗаписи.ИзмененаДатаPDD  ИЛИ Выборка.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.PDD;
						МенеджерЗаписи.ИзмененаДатаEDD  = МенеджерЗаписи.ИзмененаДатаEDD  ИЛИ Выборка.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.EDD;						
					КонецЦикла;	
					МенеджерЗаписи.Пользователь = Пользователи.ТекущийПользователь();
					МенеджерЗаписи.Записать();
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		//rarus vikhle 28.01.2021 mt 16328 ---
		
	КонецЕсли;
КонецПроцедуры
//rarus tenkam 16.12.2016 mantis 6897 --

Процедура СоздатьИПодставитьФиктивныйЗаказНаЗавод() //rarus BProg_Dekin 26.05.2020 mantis 0015893 +- Создание фиктивного заказа на завод, если продукт НЕ сканиа
	Если ЗначениеЗаполнено(ЗаказНаЗавод) Тогда
		Возврат;
	КонецЕсли;
	
	Если МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania Тогда
		Возврат;
	КонецЕсли;
	
	//rarus agar 13.09.2020 15696 ++
	// У надстройки или услуги, очищаем локальный статус, если был заполнен
	ТипыПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	Если ТипыПродуктовНадстроекИУслуг.Найти(ТипПродукта) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	//rarus agar 13.09.2020 15696 --
	
	НаименованиеМарки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МаркаПродукта, "Наименование");
	НовыйЗаказНаЗавод = Справочники.Scan_ЗаказыНаЗавод.СоздатьЭлемент();
	НовыйЗаказНаЗавод.Наименование = СокрЛП(НомерИзделия) + СокрЛП(НаименованиеМарки);
	НовыйЗаказНаЗавод.Записать();
	
	ЗаказНаЗавод = НовыйЗаказНаЗавод.Ссылка;
КонецПроцедуры
//rarus tenkam 16.12.2016 mantis 6897 --

// rarus tenkam 06.06.2019 mantis 13865 +++
Функция НетИсторииВРегистре(Изделие) 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Изделие",Изделие);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ХарактеристикиИзделия.Значение КАК Значение
	               |ИЗ
	               |	РегистрСведений.Scan_ХарактеристикиИзделия КАК Scan_ХарактеристикиИзделия
	               |ГДЕ
	               |	Scan_ХарактеристикиИзделия.Изделие = &Изделие";
	Возврат Запрос.Выполнить().Выбрать().Количество() = 0;				   				   
КонецФункции
// rarus tenkam 06.06.2019 mantis 13865 ---

// rarus tenkam 12.08.2019 mantis 14427 +++
Процедура ПередУдалением(Отказ)
	Если НЕ Отказ И ЗначениеЗаполнено(IDExternalSystemProduct) Тогда
		
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить(IDExternalSystemProduct);
		ПараметрыФоновогоЗадания.Добавить(Ложь);	
		ФоновыеЗадания.Выполнить("Scan_ВспомогательныеФункцииСервер.УстановитьПризнакTLMSВ1БД", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, "Отправка отмены признака TLMS в 1БД");	
	КонецЕсли;  
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ЭтоНовый() И ЗначениеЗаполнено(ТипПродукта) И Scan_ПраваИНастройки.Scan_Право("ПроверятьСоответствиеТиповВидовИГруппПродукта") Тогда
		ВсеОк = РегистрыСведений.Scan_СоответствияТиповВидовИГрупп.ПроверитьКорректностьТиповВидовИГрупп(ТипПродукта.ВидПродукта.ГруппаПродукта, ТипПродукта.ВидПродукта, ТипПродукта);
		Если НЕ ВсеОк Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Некорректная структура продуктов! Указанного типа, вида и группы продукта нет в соответствиях!";
			Сообщение.Поле = "ТипПродукта";
      		Сообщение.УстановитьДанные(ЭтотОбъект);
        	Сообщение.Сообщить();
			
			Отказ = Истина;			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) //rarus bonmak 18.05.2020 14375 ++
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда //rarus agar 28.01.2021 +-
		Если ДанныеЗаполнения.Свойство("БУ") Тогда
			БУ = ДанныеЗаполнения.БУ;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("НомерИзделия") Тогда
			НомерИзделия = ДанныеЗаполнения.НомерИзделия;
		КонецЕсли;
		
		//rarus agar 17.09.2020 15696 ++
		Если ДанныеЗаполнения.Свойство("Надстр_Поставщик") Тогда
			Надстр_Поставщик = ДанныеЗаполнения.Надстр_Поставщик;
		КонецЕсли;
		
		//rarus agar 20.02.2021 17230 ++
		Если ДанныеЗаполнения.Свойство("Наименование") Тогда
			Наименование = ДанныеЗаполнения.Наименование;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("МаркаПродукта") Тогда
			МаркаПродукта = ДанныеЗаполнения.МаркаПродукта;
		КонецЕсли;
		//rarus agar 20.02.2021 17230 --
	КонецЕсли;  //rarus agar 28.01.2021 +-
	//rarus agar 17.09.2020 15696 --
	
КонецПроцедуры //rarus bonmak 18.05.2020 14375 --
// rarus tenkam 12.08.2019 mantis 14427 ---

