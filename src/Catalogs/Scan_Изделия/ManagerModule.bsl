//rarus sergei 16.08.2016 mantis 7110 +
Функция ПересчитатьКрайнююДатуУстраненияНедостатков(ИзделиеСсылка,СрокУстраненияНедостатковДоп = Неопределено)Экспорт 	// rarus tenkam 03.02.2021 в рамках упр. проектом, было "=0" стало "=Неопределено"
	// rarus tenkam 12.08.2019 mantis 14427 +++
	//ДатаПродажи = ПолучитьДатуПродажиПоИзделию(ИзделиеСсылка);
	//rarus bonmak 17.08.2020 14375 ++
	ЭтоБУ = Ложь;
	Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьЗадачиСНакладными") Тогда 
		ЭтоБУ = ИзделиеСсылка.БУ; 
	КонецЕсли;
	//rarus bonmak 17.08.2020 14375 --
	Если НЕ ЭтоБУ Тогда //rarus bonmak 17.08.2020 14375 добавил условие
		Если НЕ ЗначениеЗаполнено(ИзделиеСсылка.ЗаказНаЗавод) Тогда
			Возврат Дата(1,1,1);
		КонецЕсли;
	КонецЕсли;
	Если ЭтоБУ Тогда //rarus bonmak 17.08.2020 14375 добавил условие и отработку истина
		ДатаПродажи = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ИзделиеСсылка,
		Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру),
		Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру, ТекущаяДата());
	Иначе
		ДатаПродажи = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ИзделиеСсылка.ЗаказНаЗавод,
		Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия),
		Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия, ТекущаяДата());
	КонецЕсли;
	// rarus tenkam 12.08.2019 mantis 14427 ---
	
	Если ЗначениеЗаполнено(ДатаПродажи) Тогда
		СрокУстраненияНедостатков = Scan_ПраваИНастройки.Scan_Право("СрокУстраненияНедостатковПослеПродажиИзделия");
		// rarus tenkam 03.02.2021 +++ не работало, если пользователь установил = 0
		Если СрокУстраненияНедостатковДоп <> Неопределено Тогда 
		//Если ЗначениеЗаполнено(СрокУстраненияНедостатковДоп) Тогда 
		// rarus tenkam 03.02.2021 ---
		КрайняяДатаУстраненияНедостатков =ДатаПродажи+ 24*60*60*СрокУстраненияНедостатков + 24*60*60*СрокУстраненияНедостатковДоп;
		Иначе
			КрайняяДатаУстраненияНедостатков =ДатаПродажи+ 24*60*60*СрокУстраненияНедостатков + 24*60*60*ИзделиеСсылка.СрокУстраненияНедостатковДоп;
		КонецЕсли;
	КонецЕсли; 
	Возврат КрайняяДатаУстраненияНедостатков; 
 КонецФункции
 
Функция ОбновитьКрайнююДатуУстраненияНедостатковИзделия(ИзделиеСсылка, ДатаПродажи = Неопределено) Экспорт	// rarus tenkam 03.02.2021 обнаружено, что при появлении даты продажи крайняя дата не пересчитывается
	КрайняяДатаУстраненияНедостатков = Дата(1,1,1);
	
	ЭтоБУ = Ложь;
	Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьЗадачиСНакладными") Тогда 
		ЭтоБУ = ИзделиеСсылка.БУ; 
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ДатаПродажи) Тогда
		Если ЭтоБУ Тогда 
			ДатаПродажи = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ИзделиеСсылка,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру),
			Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру, ТекущаяДата());
		Иначе
			ДатаПродажи = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ИзделиеСсылка.ЗаказНаЗавод,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия),
			Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия, ТекущаяДата());
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПродажи) Тогда
		СрокУстраненияНедостатков = Scan_ПраваИНастройки.Scan_Право("СрокУстраненияНедостатковПослеПродажиИзделия");		
		СрокУстраненияНедостатковДоп = ?(ЗначениеЗаполнено(ИзделиеСсылка.СрокУстраненияНедостатковДоп), ИзделиеСсылка.СрокУстраненияНедостатковДоп, 0);
		
		КрайняяДатаУстраненияНедостатков = ДатаПродажи+ 24*60*60*СрокУстраненияНедостатков + 24*60*60*СрокУстраненияНедостатковДоп;
	КонецЕсли; 
	
	Если ИзделиеСсылка.КрайняяДатаУстраненияНедостатков <> КрайняяДатаУстраненияНедостатков Тогда
		ИзделиеОбъект = ИзделиеСсылка.ПолучитьОбъект();
		ИзделиеОбъект.КрайняяДатаУстраненияНедостатков = КрайняяДатаУстраненияНедостатков;
		
		Попытка
			ИзделиеОбъект.Записать();
		Исключение
			Сообщить(НСтр("ru='Не удалось обновить крайнюю дату устранения недостатков'"));
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	Возврат Истина;
		
КонецФункции
 // rarus tenkam 12.08.2019 mantis 14427 +++	
//Функция ПолучитьДатуПродажиПоИзделию(ИзделиеСсылка)
//	Продукт = Справочники.Scan_Продукты.НайтиПоРеквизиту("Изделие",ИзделиеСсылка);
//	ДатаПродажи=Продукт.ДатаПродажиИзделия;
//	Возврат ДатаПродажи;
//КонецФункции
// rarus tenkam 12.08.2019 mantis 14427 ---
//rarus sergei 16.08.2016 mantis 7110 -

//rarus sergei 12.09.2016 mantis 7167 ++
&НаСервере
Функция ПолучитьДилера(ИзделиеСсылка) Экспорт
	// rarus tenkam 13.08.2019 mantis 14427 +++
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Scan_Продукты.Заказчик
	//               |ИЗ
	//               |	Справочник.Scan_Продукты КАК Scan_Продукты
	//               |ГДЕ
	//               |	Scan_Продукты.Изделие = &СсылкаИзделие";
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(Scan_Изделия.ЗаказНаЗавод.Заказчик, ЗНАЧЕНИЕ(Справочник.Scan_Контрагенты.ПустаяСсылка)) КАК Заказчик
	               |ИЗ
	               |	Справочник.Scan_Изделия КАК Scan_Изделия
	               |ГДЕ
	               |	Scan_Изделия.Ссылка = &СсылкаИзделие";
	// rarus tenkam 13.08.2019 mantis 14427 ---
	Запрос.УстановитьПараметр("СсылкаИзделие",ИзделиеСсылка);
	Результат = Запрос.Выполнить().Выгрузить();
	Дилер = Результат[0].Заказчик;
	
	Возврат Дилер;
КонецФункции

//rarus sergei 12.09.2016 mantis 7167 --

// Функция записи параметров в регистр сведений
// Параметры
//  Продукт – СправочникСсылка.Scan_Изделия – Продукт для которого за
//  Значение   – Произвольный – Значение регистра сведений
//  ВидОбъекта – ПеречислениеСсылка.Scan_ДополнительнаяИнформацияПоПродуктам – 
//                 Описание вида значения регистра сведений
// Возвращаемое значение:
//   Булево   – ошибка записи значения
Функция ЗаписьЗначенияРегистраСведения(Изделие, Значение,ВидЗначения,НаДату = Неопределено, Записывать = Ложь,Источник = Неопределено,Статус = Неопределено) Экспорт  //rarus vikhle 08.02.2020 mantis 16981
	
	Отказ = Ложь;
	
	Если НаДату = Неопределено Тогда
		ДатаЗаписи = ТекущаяДата();
	Иначе
		ДатаЗаписи = НаДату;
	КонецЕсли; 
	
	Если НЕ Отказ Тогда
		//Чтение старого значения регистра
		СтруктураОтбора   = Новый Структура("Изделие,ВидЗначения", Изделие,ВидЗначения);
		СтруктураСведений = РегистрыСведений.Scan_ХарактеристикиИзделия.ПолучитьПоследнее(ДатаЗаписи, СтруктураОтбора);
		ЗначениеСтарое    = СтруктураСведений.Значение;
		Записывать        = Ложь;
		//Введено значение, а старое отсутствует
		Если ЗначениеЗаполнено(Значение) И ЗначениеСтарое = Неопределено Тогда 
			Записывать = Истина; 
		КонецЕсли; 
		//Значение стерто, а старое значение было введено
		Если НЕ ЗначениеЗаполнено(Значение) И ЗначениеСтарое <> Неопределено Тогда 
			//rarus pechek 13.03.2020 mantis 15831 +++
			//Записывать = Истина;
			Если НЕ ЗначениеЗаполнено(Значение) И ЗначениеЗаполнено(ЗначениеСтарое) Тогда
				Записывать = Истина;
			КонецЕсли;
			//rarus pechek 13.03.2020 mantis 15831 ---	
		КонецЕсли; 
		//Введено значение и было введено старое
		Если ЗначениеЗаполнено(Значение) И ЗначениеСтарое <> Неопределено Тогда
			//Значение изменилось
			Если Значение <> ЗначениеСтарое Тогда 
				Записывать = Истина; 
			КонецЕсли; 
		КонецЕсли;
		Если Записывать Тогда
			//Значение параметра изменилось
			ЗаписьРегСведений = РегистрыСведений.Scan_ХарактеристикиИзделия.СоздатьМенеджерЗаписи();
			ЗаписьРегСведений.Изделие	  = Изделие;
			ЗаписьРегСведений.ВидЗначения = ВидЗначения;
			ЗаписьРегСведений.Значение    = Значение;
			ЗаписьРегСведений.Период      = ДатаЗаписи;
			ЗаписьРегСведений.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
			ЗаписьРегСведений.Источник    = Источник; //rarus vikhle 08.02.2020 mantis 16981
			ЗаписьРегСведений.Статус      = Статус; //rarus vikhle 08.02.2020 mantis 16981
			Попытка
				ЗаписьРегСведений.Записать();
			Исключение
				//rarus FominskiyAS 08.07.2019  mantis 14191 +++
				//Сообщить(НСтр("ru = 'Ошибка записи параметра изделия в регистр сведений'"));
				Сообщить(НСтр("ru = 'Ошибка записи параметра продукта в регистр сведений'; en = 'Action failed'"));
				//rarus FominskiyAS 08.07.2019  mantis 14191 ---  
				Отказ = Истина;
			КонецПопытки; 
		КонецЕсли;
		//rarus pechek 20.04.2020 mantis 15943 +++
		Если Не Отказ Тогда
			Если Scan_ПраваИНастройки.Scan_Право("ЗаполнятьРегистрСводнаяИнформацияПоПродукту") Тогда
				РегистрыСведений.Scan_СводнаяИнформацияПоПродукту.ЗаписьЗначенияРегистраСводнаяИнформацияПоПродукту(Изделие,Изделие.ЗаказНаЗавод,ВидЗначения,Значение);
			КонецЕсли;
			
			//rarus bonmak 18.05.2020 14375 ++
			Если Записывать Тогда
				ПоставитьВОчередьРеквизитыФормыВ1БД(Изделие, Ложь, ВидЗначения, Значение);
			КонецЕсли;
			//rarus bonmak 18.05.2020 14375 --
		КонецЕсли;
		//rarus pechek 20.04.2020 mantis 15943 --- 		
	КонецЕсли; 
		
	Возврат Отказ;
КонецФункции // ЗаписьЗначенияРегистраСведения()

Процедура ПоставитьВОчередьРеквизитыФормыВ1БД(СсылкаИзделия, ВсеРеквизиты = Истина, ВидЗначения = Неопределено, Значение = Неопределено) Экспорт //rarus bonmak 18.05.2020 14375 ++
	Если ЗначениеЗаполнено(СсылкаИзделия.IDExternalSystemProduct) И СсылкаИзделия.БУ Тогда
		ИзмененныеРеквизитыПродукт = Новый Структура;
		Если ВсеРеквизиты Тогда
			//обрабатываем все реквизиты которые описаны
			ВесПродукта = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(СсылкаИзделия, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Вес);
			Если ЗначениеЗаполнено(ВесПродукта) Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ВесПродукта", ВесПродукта);
			КонецЕсли;
			ДлинаПродукта = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(СсылкаИзделия, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Длина);
			Если ЗначениеЗаполнено(ДлинаПродукта) Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ДлинаПродукта", ДлинаПродукта);
			КонецЕсли;
			ВысотаПродукта = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(СсылкаИзделия, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Высота);
			Если ЗначениеЗаполнено(ВысотаПродукта) Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ВысотаПродукта", ВысотаПродукта);
			КонецЕсли;
			ШиринаПродукта = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(СсылкаИзделия, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Ширина);	
			Если ЗначениеЗаполнено(ШиринаПродукта) Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ШиринаПродукта", ШиринаПродукта);
			КонецЕсли;
			ГосударственныйНомер = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(СсылкаИзделия, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГосударственныйНомер);
			Если ЗначениеЗаполнено(ГосударственныйНомер) Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ГосударственныйНомер", ГосударственныйНомер);
			КонецЕсли;
			ГосударственныйНомерДатаПолучения = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(СсылкаИзделия, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГосударственныйНомерДатаПолучения);
			Если ЗначениеЗаполнено(ГосударственныйНомерДатаПолучения) Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ГосударственныйНомерДатаПолучения", ГосударственныйНомерДатаПолучения);
			КонецЕсли;
		Иначе
			//обрабатываем по одному измененному реквизиту
			Если ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Вес Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ВесПродукта", Значение);
			ИначеЕсли ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Длина Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ДлинаПродукта", Значение);
			ИначеЕсли ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Высота Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ВысотаПродукта", Значение);
			ИначеЕсли ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Ширина Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ШиринаПродукта", Значение);
			ИначеЕсли ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГосударственныйНомер Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ГосударственныйНомер", Значение);
			ИначеЕсли ВидЗначения = Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГосударственныйНомерДатаПолучения Тогда
				ИзмененныеРеквизитыПродукт.Вставить("ГосударственныйНомерДатаПолучения", Значение);	
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого ИмяРеквизитаПродукт Из ИзмененныеРеквизитыПродукт Цикл
			//Запишем в регистр
			РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(СсылкаИзделия, Справочники.Scan_ВидыЗапроса.SetProduct, ИмяРеквизитаПродукт.Ключ, ИмяРеквизитаПродукт.Значение); //rarus bonmak 21.08.2020 16210 изменено с перечисления на справочник 	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры //rarus bonmak 18.05.2020 14375 --

// Функция чтения параметров в регистр сведений
// Параметры
//  Продукт – СправочникСсылка.Автомобили – Автомобиль для которого за
//  ВидОбъекта – ПеречислениеСсылка.Scan_ДополнительнаяИнформацияПоПродуктам – 
//                 Описание вида значения регистра сведений
// Возвращаемое значение:
//   Булево   – ошибка записи значения
Функция ЧтениеЗначенияРегистраСведения(Изделие, ВидЗначения, НаДату = Неопределено) Экспорт
	Если НаДату = Неопределено Тогда
		ДатаЗаписи = Неопределено;
	Иначе
		//ДатаЗаписи = НачалоДня(НаДату);
		ДатаЗаписи = НаДату;
	КонецЕсли;
	СтруктураОтбора   = Новый Структура("Изделие, ВидЗначения", Изделие, ВидЗначения);
	СтруктураСведений = РегистрыСведений.Scan_ХарактеристикиИзделия.ПолучитьПоследнее(ДатаЗаписи, СтруктураОтбора);
	Возврат СтруктураСведений.Значение;
КонецФункции

//rarus tenkam mantis 7072 ++
Функция СформироватьНаименованиеПоНастройке(ПродуктОбъект, ИмяРеквизита = "") Экспорт
	Наименование = "";
	НастройкаНаименования = Scan_ПраваИНастройки.Scan_Право("НастройкаВыводаНаименованияИзделия");	
	МассивНастроек = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НастройкаНаименования, "+");
	Для Сч = 0 По МассивНастроек.Количество()-1 Цикл
		МассивНастроек[Сч] = СокрЛП(МассивНастроек[Сч]);
	КонецЦикла;
	Если ИмяРеквизита <> "" И МассивНастроек.Найти(ИмяРеквизита) = Неопределено Тогда
		//Этот реквизит не используется в настройке
		Возврат Неопределено;
	КонецЕсли;
	
	Для Каждого СтрокаМассива Из МассивНастроек Цикл
		Если ЗначениеЗаполнено(ПродуктОбъект[СтрокаМассива]) Тогда
			Наименование = Наименование + ПродуктОбъект[СтрокаМассива] + " ";
		КонецЕсли;
	КонецЦикла;
	Возврат Наименование;		
КонецФункции 
//rarus tenkam mantis 7072 --

//rarus tenkam mantis 7077 ++
Функция ЧтениеЗначенияРCВГХ(Модель) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ВГХМоделейПродуктов.ДлинаПродукта,
	               |	Scan_ВГХМоделейПродуктов.ВысотаПродукта,
	               |	Scan_ВГХМоделейПродуктов.ШиринаПродукта,
	               |	Scan_ВГХМоделейПродуктов.ВесПродукта
	               |ИЗ
	               |	РегистрСведений.Scan_ВГХМоделейПродуктов КАК Scan_ВГХМоделейПродуктов
	               |ГДЕ
	               |	Scan_ВГХМоделейПродуктов.МодельПродукта = &МодельПродукта";
	Запрос.УстановитьПараметр("МодельПродукта", Модель);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураВГХ = Новый Структура;
		СтруктураВГХ.Вставить("ДлинаПродукта", Выборка.ДлинаПродукта);
		СтруктураВГХ.Вставить("ВысотаПродукта", Выборка.ВысотаПродукта);
		СтруктураВГХ.Вставить("ШиринаПродукта", Выборка.ШиринаПродукта);
		СтруктураВГХ.Вставить("ВесПродукта", Выборка.ВесПродукта);
		
		Возврат СтруктураВГХ;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции
//rarus tenkam mantis 7077 --

//rarus tenkam mantis 7219 ++ (осаго)
Функция ЗаписьЗначенияРСПолисыОСАГО(Изделие,НомерПолиса, ДатаИстеченияСрока) Экспорт
	
	Отказ = Ложь;

	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(НомерПолиса) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_ПолисыОСАГОИзделий.Изделие,
		               |	Scan_ПолисыОСАГОИзделий.НомерПолиса,
		               |	Scan_ПолисыОСАГОИзделий.ДатаИстеченияСрока
		               |ИЗ
		               |	РегистрСведений.Scan_ПолисыОСАГОИзделий КАК Scan_ПолисыОСАГОИзделий
		               |ГДЕ
		               |	Scan_ПолисыОСАГОИзделий.Изделие = &Изделие
		               |	И Scan_ПолисыОСАГОИзделий.НомерПолиса = &НомерПолиса";
		Запрос.УстановитьПараметр("Изделие", Изделие);
		Запрос.УстановитьПараметр("НомерПолиса", НомерПолиса);
	
		Результат = Запрос.Выполнить().Выгрузить();
		Если Результат.Количество() = 0  Тогда
			//Записи с таким номера полиса нет - запишем
			НаборЗаписей = РегистрыСведений.Scan_ПолисыОСАГОИзделий.СоздатьНаборЗаписей();
			
			НаборЗаписей.Отбор.НомерПолиса.Установить(НомерПолиса);
			НаборЗаписей.Прочитать();
			
			НоваяЗапись = НаборЗаписей.Добавить();
			
			НоваяЗапись.НомерПолиса = НомерПолиса;
			НоваяЗапись.Изделие = Изделие;
			НоваяЗапись.ДатаИстеченияСрока = ДатаИстеченияСрока;
			НоваяЗапись.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
			
			Попытка
				НаборЗаписей.Записать();
			Исключение
				Отказ = Истина;
			КонецПопытки;
		Иначе
			//Запись с таким же номером полиса есть
			Если Результат[0].ДатаИстеченияСрока <> ДатаИстеченияСрока Тогда
				//Дата полиса отличается - перезапишем эту запись
				НаборЗаписей = РегистрыСведений.Scan_ПолисыОСАГОИзделий.СоздатьНаборЗаписей();
			
				НаборЗаписей.Отбор.НомерПолиса.Установить(НомерПолиса);
				
				НоваяЗапись = НаборЗаписей.Добавить();
				
				НоваяЗапись.НомерПолиса = НомерПолиса;
				НоваяЗапись.Изделие = Изделие;
				НоваяЗапись.ДатаИстеченияСрока = ДатаИстеченияСрока;
				НоваяЗапись.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
				
				НаборЗаписей.Записать();
			КонецЕсли;
		КонецЕсли;
	
	Иначе
		//Номер полиса не заполнен, значит заполнена дата
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_ПолисыОСАГОИзделий.Изделие,
		               |	Scan_ПолисыОСАГОИзделий.НомерПолиса,
		               |	Scan_ПолисыОСАГОИзделий.ДатаИстеченияСрока
		               |ИЗ
		               |	РегистрСведений.Scan_ПолисыОСАГОИзделий КАК Scan_ПолисыОСАГОИзделий
		               |ГДЕ
		               |	Scan_ПолисыОСАГОИзделий.Изделие = &Изделие
		               |	И Scan_ПолисыОСАГОИзделий.НомерПолиса = &НомерПолиса
					   |	И Scan_ПолисыОСАГОИзделий.ДатаИстеченияСрока = &ДатаИстеченияСрока";
		Запрос.УстановитьПараметр("Изделие", Изделие);
		Запрос.УстановитьПараметр("НомерПолиса", НомерПолиса);
		Запрос.УстановитьПараметр("ДатаИстеченияСрока", ДатаИстеченияСрока);
		
		
		Результат = Запрос.Выполнить().Выгрузить();
		Если Результат.Количество() = 0  Тогда
			//Записи с такой же датой нет - запишем
			НаборЗаписей = РегистрыСведений.Scan_ПолисыОСАГОИзделий.СоздатьНаборЗаписей();
			
			НаборЗаписей.Отбор.НомерПолиса.Установить(НомерПолиса);
			НаборЗаписей.Прочитать();
			
			НоваяЗапись = НаборЗаписей.Добавить();
			
			НоваяЗапись.НомерПолиса = НомерПолиса;
			НоваяЗапись.Изделие = Изделие;
			НоваяЗапись.ДатаИстеченияСрока = ДатаИстеченияСрока;
			НоваяЗапись.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
			
			Попытка
				НаборЗаписей.Записать();
			Исключение
				Отказ = Истина;
			КонецПопытки;
		КонецЕсли;

	КонецЕсли;
	
	Возврат Отказ;
КонецФункции 
//rarus tenkam mantis 7219 -- (осаго)


//rarus tenkam 03.08.2016 mantis 7219 ++ (документы)
//Формирует список, состоящий из всех документов конфигурации
//
Функция СформироватьСписокДокументов() Экспорт 
	СписокДокументов = Новый Массив;
	Для Каждого Документ ИЗ Метаданные.Документы Цикл
		СписокДокументов.Добавить(Документ.Синоним);
	КонецЦикла; 
	Возврат СписокДокументов; 
КонецФункции //СформироватьСписокДокументов()
//rarus tenkam 03.08.2016 mantis 7219 -- (документы)

//rarus sergei 08.09.2016 mantis 7167 ++
Процедура УстановитьСтатусИзделия(Изделие, Статус) Экспорт
	ИзделиеОбъект = Изделие.ПолучитьОбъект();
	ИзделиеОбъект.СтатусИзделия = Статус;
	ИзделиеОбъект.Записать();
КонецПроцедуры
//rarus sergei 08.09.2016 mantis 7167 --

//rarus tenkam 14.08.2017 mantis 10490 +++

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//  Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//           где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы,
//           связанного с реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
    Результат = Новый Массив;
    Результат.Добавить("НеОбновлятьМоделиИз1БД");
    Результат.Добавить("НеОбновлятьЛогистическиеТипыИз1БД");

    Возврат Результат;
КонецФункции
//rarus tenkam 14.08.2017 mantis 10490 ---

//Функция проверяет, было ли сформировано убытие изделия из учета на указанную дату
Функция УбытиеУжеЕсть(ИзделиеСсылка, ДатаУбытия) Экспорт //rarus bonmak 05.08.2019 14427 ++ перенес из продуктов
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ДвижениеИзделийСоставЗаявки.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.Scan_ДвижениеИзделий.СоставЗаявки КАК Scan_ДвижениеИзделийСоставЗаявки
	               |ГДЕ
	               |	Scan_ДвижениеИзделийСоставЗаявки.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.УбытиеИзУчета)
	               |	И Scan_ДвижениеИзделийСоставЗаявки.Изделие = &Изделие
	               |	И Scan_ДвижениеИзделийСоставЗаявки.ДатаПрихода = &ДатаУбытия
	               |	И Scan_ДвижениеИзделийСоставЗаявки.Ссылка.Проведен = ИСТИНА   //rarus tenkam 08.11.2017 mantis 11774 +
	               |	И Scan_ДвижениеИзделийСоставЗаявки.Ссылка.ПометкаУдаления = ЛОЖЬ";		//rarus tenkam 08.11.2017 mantis 11774 +
	Запрос.УстановитьПараметр("Изделие",ИзделиеСсылка);
	Запрос.УстановитьПараметр("ДатаУбытия", ДатаУбытия);
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции  //rarus bonmak 05.08.2019 14427 --

// Процедура - Установить статус DELETE Для продукта
//
// Параметры:
//  ЗаказНаЗавод - СправочникСсылка.Scan_ЗаказыНаЗавод - Заказ на завод, от которого зависит статус продукта "DELETE" 
//
Процедура УстановитьСтатусПродуктаDELETE(ЗаказНаЗавод) Экспорт //rarus BProg_Dekin 19.05.2020 mantis 0015999 +-
	ДопустимыеТипыЗаказа = Новый Массив;
	ДопустимыеТипыЗаказа.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderNormal);
	ДопустимыеТипыЗаказа.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderRefill);
	ДопустимыеТипыЗаказа.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderUrgent);
	
	Продукт = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьИзделиеПоЗаказу(ЗаказНаЗавод);
	Если НЕ ЗначениеЗаполнено(Продукт) Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗаказа = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод); 		
	Если ДопустимыеТипыЗаказа.Найти(ТипЗаказа) <> Неопределено 
		И Продукт.МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania И Продукт.ЛокальныйСтатусПродукта <> Справочники.Scan_ЛокальныеСтатусыПродуктов.Deleted
		И ЗаказНаЗавод.ЗаводскойСтатусЗаказа.СтатусCOW = 45 Тогда
		
		ПродуктОбъект = Продукт.ПолучитьОбъект();
		ПродуктОбъект.ЛокальныйСтатусПродукта = Справочники.Scan_ЛокальныеСтатусыПродуктов.Deleted;
		ПродуктОбъект.ОбменДанными.Загрузка = Истина;
		ПродуктОбъект.Записать();
	КонецЕсли;
КонецПроцедуры

//rarus agar 27.08.2020 15696 ++
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		Если Параметры.Свойство("Ключ") Тогда // Получение формы существующего элемента
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Продукт", Параметры.Ключ);
			Запрос.Текст = "ВЫБРАТЬ
			|	Scan_Изделия.ТипПродукта.ВидПродукта.ГруппаПродукта КАК ГруппаПродукта
			|ИЗ
			|	Справочник.Scan_Изделия КАК Scan_Изделия
			|ГДЕ
			|	Scan_Изделия.Ссылка = &Продукт";
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			Если  Выборка.Следующий() 
				И  (Выборка.ГруппаПродукта = Scan_ПраваИНастройки.Scan_Право("ГруппаПродуктовНадстроекИОборудования")
				Или Выборка.ГруппаПродукта = Scan_ПраваИНастройки.Scan_Право("ГруппаПродуктовУслуг"))
				Тогда
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаНадстройкиУслуги";
				//rarus agar 14.12.2020 16691 ++
			Иначе
				СтандартнаяОбработка = Ложь;
				Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовуюКарточкуПродукта") Тогда
					ВыбраннаяФорма = "ФормаЭлементаНовая";
				Иначе
					ВыбраннаяФорма = "ФормаЭлемента";
				КонецЕсли;
				//rarus agar 14.12.2020 16691 --
			КонецЕсли;
		ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда // Получение формы нового элемента
			ЗначенияЗаполнения = Параметры.ЗначенияЗаполнения;
			Если ЗначенияЗаполнения.Свойство("Надстр_Поставщик") Тогда
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаНадстройкиУслуги";
				//rarus agar 14.12.2020 16691 ++
			Иначе
				СтандартнаяОбработка = Ложь;
				Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовуюКарточкуПродукта") Тогда
					ВыбраннаяФорма = "ФормаЭлементаНовая";
				Иначе
					ВыбраннаяФорма = "ФормаЭлемента";
				КонецЕсли;
				//rarus agar 14.12.2020 16691 --	
			КонецЕсли;
		ИначеЕсли Параметры.Свойство("ЗначениеКопирования") Тогда // Получение формы нового элемента при копировании
			ЗначениеКопирования = Параметры.ЗначениеКопирования;
			Если ЗначениеЗаполнено(ЗначениеКопирования.Надстр_Поставщик) Тогда
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаНадстройкиУслуги";
				//rarus agar 14.12.2020 16691 ++
			Иначе
				СтандартнаяОбработка = Ложь;
				Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовуюКарточкуПродукта") Тогда
					ВыбраннаяФорма = "ФормаЭлементаНовая";
				Иначе
					ВыбраннаяФорма = "ФормаЭлемента";
				КонецЕсли;
				//rarus agar 14.12.2020 16691 --	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПродуктЯвляетсяНадстройкойИлиУслугой(ПродуктСсылка) Экспорт
	
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Продукт", ПродуктСсылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_Изделия.ТипПродукта КАК ТипПродукта
	|ИЗ
	|	Справочник.Scan_Изделия КАК Scan_Изделия
	|ГДЕ
	|	Scan_Изделия.Ссылка = &Продукт";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Возврат МассивТиповПродуктовНадстроекИУслуг.Найти(Выборка.ТипПродукта) <> Неопределено;
	КонецЕсли;
	
КонецФункции
//rarus agar 27.08.2020 15696 --

//rarus agar 30.11.2020 16691 ++
Функция ТабличныйДокументКарточкиПродукта(Продукт, Форма, НастройкиКарточкиПродукта) Экспорт
	
	Перем Заголовок;
	
	Объект = Неопределено;
	Если ТипЗнч(Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		Объект = Продукт.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(Продукт) = Тип("СправочникОбъект.Scan_Изделия")
		Или ТипЗнч(Продукт) = Тип("ДанныеФормыСтруктура") Тогда
		Объект = Продукт;
	Иначе
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	СтруктураВидимости   = НастройкиКарточкиПродукта.ВидимостьЭлементов;
	СтруктураЗаголовков  = НастройкиКарточкиПродукта.ЗаголовкиЭлементов;
	СтруктураКлючевыхДат = НастройкиКарточкиПродукта.КлючевыеДаты;
	
	ТабличныйДокументКарточка = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПФ_MXL_КарточкаПродукта");
	
	#Область Шапка
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, Объект);
		
	ОбластьШапка.Параметры.РасшифровкаНаименование            = "Наименование";
	ОбластьШапка.Параметры.РасшифровкаЛокальныйСтатусПродукта = "ЛокальныйСтатусПродукта";
	ОбластьШапка.Параметры.РасшифровкаМаркаПродукта           = "МаркаПродукта";
	ОбластьШапка.Параметры.РасшифровкаНомерИзделия            = "НомерИзделия";
	ОбластьШапка.Параметры.РасшифровкаVIN                     = "VIN";
	ОбластьШапка.Параметры.РасшифровкаVIN2                    = "VIN2";
	
	ТабличныйДокументКарточка.Присоединить(ОбластьШапка);
	
	Если Объект.МаркаПродукта <> Справочники.Scan_МаркиПродуктов.Scania Тогда
		ТабличныйДокументКарточка.Рисунки.Удалить(ТабличныйДокументКарточка.Рисунки["D1"]);
	КонецЕсли;
	
	#КонецОбласти
	
	ТабличныйДокументКолонки = Новый ТабличныйДокумент;
	
	ТабличныйДокументЛево = Новый ТабличныйДокумент;
	
	#Область Основное
	
	Если РазделКарточкиВиден("Основное", СтруктураВидимости) Тогда
		ОбластьОсновноеЗаголовок = Макет.ПолучитьОбласть("ОсновноеЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьОсновноеЗаголовок);
		
		Если СтрокаКарточкиВидна("МодельПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОсновноеМодельПродуктаСтрока");
			Область.Параметры.МодельПродукта            = Объект.МодельПродукта;
			Область.Параметры.РасшифровкаМодельПродукта = "МодельПродукта";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипКабины", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОсновноеТипКабиныСтрока");
			Область.Параметры.ТипКабины            = Объект.ТипКабины;
			Область.Параметры.РасшифровкаТипКабины = "ТипКабины";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипКузова", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОсновноеТипКузоваСтрока");
			Область.Параметры.ТипКузова            = Объект.ТипКузова;
			Область.Параметры.РасшифровкаТипКузова = "ТипКузова";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Производство
	
	Если РазделКарточкиВиден("Производство", СтруктураВидимости) Тогда
		ОбластьПроизводствоЗаголовок = Макет.ПолучитьОбласть("ПроизводствоЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьПроизводствоЗаголовок);
		
		Если СтрокаКарточкиВидна("ТягачШасси", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоТягачШассиСтрока");
			Область.Параметры.ТягачШасси            = Форма.ТягачШасси;
			Область.Параметры.РасшифровкаТягачШасси = "ТягачШасси";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("МестоПроизводства", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоМестоПроизводстваСтрока");
			Область.Параметры.МестоПроизводства            = Объект.МестоПроизводства;
			Область.Параметры.РасшифровкаМестоПроизводства = "МестоПроизводства";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ЗаказНаЗавод", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоЗаказНаЗаводСтрока");
			Область.Параметры.ЗаказНаЗавод            = Объект.ЗаказНаЗавод;
			Область.Параметры.РасшифровкаЗаказНаЗавод = "ЗаказНаЗавод";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("КлиентЗаказаНаЗавод", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоКлиентЗаказаНаЗаводСтрока");
			Область.Параметры.КлиентЗаказаНаЗавод            = Форма.КлиентЗаказаНаЗавод;
			Область.Параметры.РасшифровкаКлиентЗаказаНаЗавод = "КлиентЗаказаНаЗавод";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СпецификацияПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоСпецификацияПродуктаСтрока");
			Область.Параметры.СпецификацияПродукта            = Объект.СпецификацияПродукта;
			Область.Параметры.РасшифровкаСпецификацияПродукта = "СпецификацияПродукта";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипСпецификации", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоТипСпецификацииСтрока");
			Область.Параметры.ТипСпецификации            = Объект.ТипСпецификации;
			Область.Параметры.РасшифровкаТипСпецификации = "ТипСпецификации";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		//rarus agar 05.04.2021 17394 ++
		Если СтрокаКарточкиВидна("СтандартнаяСпецификация", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПроизводствоСтандартнаяСпецификацияСтрока");
			Область.Параметры.СтандартнаяСпецификация            = Объект.СтандартнаяСпецификация;
			Область.Параметры.РасшифровкаСтандартнаяСпецификация = "СтандартнаяСпецификация";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		//rarus agar 05.04.2021 17394 --
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ГосНомер
	
	Если РазделКарточкиВиден("ГосНомер", СтруктураВидимости) Тогда
		ОбластьГосНомерЗаголовок = Макет.ПолучитьОбласть("ГосНомерЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьГосНомерЗаголовок);
		
		Если СтрокаКарточкиВидна("ГосударственныйНомер", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГосНомерГосударственныйНомерСтрока");
			Область.Параметры.ГосударственныйНомер            = Форма.ГосударственныйНомер;
			Область.Параметры.РасшифровкаГосударственныйНомер = "ГосударственныйНомер";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГосударственныйНомерДатаПолучения", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГосНомерГосударственныйНомерДатаПолученияСтрока");
			Область.Параметры.ГосударственныйНомерДатаПолучения            = Форма.ГосударственныйНомерДатаПолучения;
			Область.Параметры.РасшифровкаГосударственныйНомерДатаПолучения = "ГосударственныйНомерДатаПолучения";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
		
	#КонецОбласти
	
	#Область Состояние
	
	Если РазделКарточкиВиден("Состояние", СтруктураВидимости) Тогда
		ОбластьСостояниеЗаголовок = Макет.ПолучитьОбласть("СостояниеЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьСостояниеЗаголовок);
		
		ОбластьСостояниеОтступСтрока = Макет.ПолучитьОбласть("СостояниеОтступСтрока");
		ТабличныйДокументЛево.Вывести(ОбластьСостояниеОтступСтрока);
		
		Если СтрокаКарточкиВидна("БУ", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СостояниеБУСтрока");
			Область.Параметры.БУ            = Объект.БУ;
			Область.Параметры.РасшифровкаБУ = "БУ";
			ТабличныйДокументЛево.Присоединить(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("Аренда", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СостояниеАрендаСтрока");
			Область.Параметры.Аренда            = Объект.Аренда;
			Область.Параметры.РасшифровкаАренда = "Аренда";
			ТабличныйДокументЛево.Присоединить(Область);
		КонецЕсли;
		//Rarus bonmak 16.05.2022 19158 ++
		//Если СтрокаКарточкиВидна("ДемоИТест", СтруктураВидимости) Тогда
		//	Область = Макет.ПолучитьОбласть("СостояниеДемоИТестСтрока");
		//	Область.Параметры.ДемоИТест            = Объект.ДемоИТест;
		//	Область.Параметры.РасшифровкаДемоИТест = "ДемоИТест";
		//	ТабличныйДокументЛево.Присоединить(Область);
		//КонецЕсли;
		
		Если СтрокаКарточкиВидна("Демо", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СостояниеДемоСтрока");
			Область.Параметры.Демо            = Объект.Демо;
			Область.Параметры.РасшифровкаДемо = "Демо";
			ТабличныйДокументЛево.Присоединить(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("Тест", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СостояниеТестСтрока");
			Область.Параметры.Тест            = Объект.Тест;
			Область.Параметры.РасшифровкаТест = "Тест";
			ТабличныйДокументЛево.Присоединить(Область);
		КонецЕсли;		
		//Rarus bonmak 16.05.2022 19158 --
		
		// Rarus tenkam 30.05.2022 mantis 19189 +++
		Если СтрокаКарточкиВидна("ДатаУстановки", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СостояниеДатаУстановкиСтрока");
			Область.Параметры.ДатаУстановки   = Объект.ДатаУстановки;
			Область.Параметры.РасшифровкаДатаУстановки = "ДатаУстановки";
			ТабличныйДокументЛево.Присоединить(Область);
		КонецЕсли;	
		// Rarus tenkam 30.05.2022 mantis 19189 ---
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Тахограф
		
	Если РазделКарточкиВиден("Тахограф", СтруктураВидимости) Тогда
		ОбластьТахографЗаголовок = Макет.ПолучитьОбласть("ТахографЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьТахографЗаголовок);
		
		Если СтрокаКарточкиВидна("ТахографСЗаводаСкания", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ТахографТахографСЗаводаСканияСтрока");
			Область.Параметры.ТахографСЗаводаСкания            = Объект.ТахографСЗаводаСкания;
			Область.Параметры.РасшифровкаТахографСЗаводаСкания = "ТахографСЗаводаСкания";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("УстановленныйТахограф", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ТахографУстановленныйТахографСтрока");
			Область.Параметры.УстановленныйТахограф            = Объект.УстановленныйТахограф;
			Область.Параметры.РасшифровкаУстановленныйТахограф = "УстановленныйТахограф";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Глонасс
	
	Если РазделКарточкиВиден("Глонасс", СтруктураВидимости) Тогда
		ОбластьГлонассЗаголовок = Макет.ПолучитьОбласть("ГлонассЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьГлонассЗаголовок);
		
		Если СтрокаКарточкиВидна("НомерЭРАГЛОНАСС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГлонассНомерЭРАГЛОНАСССтрока");
			Область.Параметры.НомерЭРАГЛОНАСС            = Объект.НомерЭРАГЛОНАСС;
			Область.Параметры.РасшифровкаНомерЭРАГЛОНАСС = "НомерЭРАГЛОНАСС";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		//rarus bonmak 17095 15.01.2021 ++
		Если СтрокаКарточкиВидна("ЭраГлонассАктивирована", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГлонассЭраГлонассАктивированаСтрока");
			Область.Параметры.ЭраГлонассАктивирована            = Объект.ЭраГлонассАктивирована;
			Область.Параметры.РасшифровкаЭраГлонассАктивирована = "ЭраГлонассАктивирована";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		//rarus bonmak 17095 15.01.2021 --
		Если СтрокаКарточкиВидна("НомерБортовогоУстройстваПлатон", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГлонассНомерБортовогоУстройстваПлатонСтрока");
			Область.Параметры.НомерБортовогоУстройстваПлатон            = Форма.НомерБортовогоУстройстваПлатон;
			Область.Параметры.РасшифровкаНомерБортовогоУстройстваПлатон = "НомерБортовогоУстройстваПлатон";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	//rarus ozhnik 17366 22.03.2021 + 
	#Область ИнформацияОтДилера
	
	Если РазделКарточкиВиден("ИнформацияОтДилера", СтруктураВидимости) Тогда
		ОбластьИнформацияОтДилераЗаголовок = Макет.ПолучитьОбласть("ИнформацияОтДилераЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьИнформацияОтДилераЗаголовок);
		
		Если СтрокаКарточкиВидна("КлиентПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ИнформацияОтДилераКлиентПродуктаСтрока");
			Область.Параметры.КлиентПродукта            = Объект.КлиентПродукта;
			Область.Параметры.РасшифровкаКлиентПродукта = "КлиентПродукта";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		Если СтрокаКарточкиВидна("ПродавецПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ИнформацияОтДилераПродавецПродуктаСтрока");
			Область.Параметры.ПродавецПродукта            = Объект.ПродавецПродукта;
			Область.Параметры.РасшифровкаПродавецПродукта = "ПродавецПродукта";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	//rarus ozhnik 17366 22.03.2021 -
	
	#Область Прочее
	
	Если РазделКарточкиВиден("Прочее", СтруктураВидимости) Тогда
		ОбластьПрочееЗаголовок = Макет.ПолучитьОбласть("ПрочееЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьПрочееЗаголовок);
		
		Если СтрокаКарточкиВидна("Пробег", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПрочееПробегСтрока");
			Область.Параметры.Пробег            = Форма.Пробег;
			Область.Параметры.РасшифровкаПробег = "Пробег";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ДатаВводаДанныхОПробеге", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПрочееДатаВводаДанныхОПробегеСтрока");
			Область.Параметры.ДатаВводаДанныхОПробеге            = Форма.ДатаВводаДанныхОПробеге;
			Область.Параметры.РасшифровкаДатаВводаДанныхОПробеге = "ДатаВводаДанныхОПробеге";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГодВыпускаПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПрочееГодВыпускаПродуктаСтрока");
			Область.Параметры.ГодВыпускаПродукта            = Форма.ГодВыпускаПродукта;
			Область.Параметры.РасшифровкаГодВыпускаПродукта = "ГодВыпускаПродукта";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Гиперссылки
	
	Если РазделКарточкиВиден("Гиперссылки", СтруктураВидимости) Тогда
		ОбластьГиперссылкиЗаголовок = Макет.ПолучитьОбласть("ГиперссылкиЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьГиперссылкиЗаголовок);
		
		Если СтрокаКарточкиВидна("ГиперссылкиЗамечания", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиЗамечанияСтрока");
			Область.Параметры.ГиперссылкиЗамечания                    = СтруктураЗаголовков.ГиперссылкиЗамечания;
			Область.Параметры.РасшифровкаГиперссылкиЗамечания         = "ГиперссылкиЗамечания";
			Область.Параметры.ГиперссылкиЗамечанияИзменить            = СтруктураЗаголовков.ГиперссылкиЗамечанияИзменить;
			Область.Параметры.РасшифровкаГиперссылкиЗамечанияИзменить = "ГиперссылкиЗамечанияИзменить";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГиперссылкиМестоположение", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиМестоположениеСтрока");
			Область.Параметры.ГиперссылкиМестоположение            = СтруктураЗаголовков.ГиперссылкиМестоположение;
			Область.Параметры.РасшифровкаГиперссылкиМестоположение = "ГиперссылкиМестоположение";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГиперссылкиХарактеристикиАКБ", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиХарактеристикиАКБСтрока");
			Область.Параметры.ГиперссылкиХарактеристикиАКБ            = СтруктураЗаголовков.ГиперссылкиХарактеристикиАКБ;
			Область.Параметры.РасшифровкаГиперссылкиХарактеристикиАКБ = "ГиперссылкиХарактеристикиАКБ";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГиперссылкиКлючевыеДаты", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиКлючевыеДатыСтрока");
			Область.Параметры.ГиперссылкиКлючевыеДаты                    = СтруктураЗаголовков.ГиперссылкиКлючевыеДаты;
			Область.Параметры.РасшифровкаГиперссылкиКлючевыеДаты         = "ГиперссылкиКлючевыеДаты";
			Область.Параметры.ГиперссылкиКлючевыеДатыИзменить            = СтруктураЗаголовков.ГиперссылкиКлючевыеДатыИзменить;
			Область.Параметры.РасшифровкаГиперссылкиКлючевыеДатыИзменить = "ГиперссылкиКлючевыеДатыИзменить";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГиперссылкиСоставИзделия", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиСоставИзделияСтрока");
			Область.Параметры.ГиперссылкиСоставИзделия                    = СтруктураЗаголовков.ГиперссылкиСоставИзделия;
			Область.Параметры.РасшифровкаГиперссылкиСоставИзделия         = "ГиперссылкиСоставИзделия";
			Область.Параметры.ГиперссылкиСоставИзделияИзменить            = СтруктураЗаголовков.ГиперссылкиСоставИзделияИзменить;
			Область.Параметры.РасшифровкаГиперссылкиСоставИзделияИзменить = "ГиперссылкиСоставИзделияИзменить";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ГиперссылкиДокументы", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкиДокументыСтрока");
			Область.Параметры.ГиперссылкиДокументы            = СтруктураЗаголовков.ГиперссылкиДокументы;
			Область.Параметры.РасшифровкаГиперссылкиДокументы = "ГиперссылкиДокументы";
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	ТабличныйДокументКолонки.Присоединить(ТабличныйДокументЛево);
	
	ТабличныйДокументПраво = Новый ТабличныйДокумент;
	
	#Область Структура
	
	Если РазделКарточкиВиден("Структура", СтруктураВидимости) Тогда
		ОбластьСтруктураЗаголовок = Макет.ПолучитьОбласть("СтруктураЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьСтруктураЗаголовок);
		
		Если СтрокаКарточкиВидна("ГруппаПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СтруктураГруппаПродуктаСтрока");
			Область.Параметры.ГруппаПродукта            = Объект.ТипПродукта.ВидПродукта.ГруппаПродукта;
			Область.Параметры.РасшифровкаГруппаПродукта = "ТипПродуктаВидПродуктаГруппаПродукта";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ВидПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СтруктураВидПродуктаСтрока");
			Область.Параметры.ВидПродукта            = Объект.ТипПродукта.ВидПродукта;
			Область.Параметры.РасшифровкаВидПродукта = "ТипПродуктаВидПродукта";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СтруктураТипПродуктаСтрока");
			Область.Параметры.ТипПродукта            = Объект.ТипПродукта;
			Область.Параметры.РасшифровкаТипПродукта = "ТипПродукта";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипПродуктаЛогистический", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СтруктураТипПродуктаЛогистическийСтрока");
			Область.Параметры.ТипПродуктаЛогистический            = Объект.ТипПродуктаЛогистический;
			Область.Параметры.РасшифровкаТипПродуктаЛогистический = "ТипПродуктаЛогистический";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипыМаркетинговые", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СтруктураТипыМаркетинговыеСтрока");
			Область.Параметры.ТипыМаркетинговые            = Объект.ТипыМаркетинговые;
			Область.Параметры.РасшифровкаТипыМаркетинговые = "ТипыМаркетинговые";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СегментРынкаПродуктов", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СтруктураСегментРынкаПродуктовСтрока");
			Область.Параметры.СегментРынкаПродуктов            = Объект.СегментРынкаПродуктов;
			Область.Параметры.РасшифровкаСегментРынкаПродуктов = "СегментРынкаПродуктов";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипГИБДД", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("СтруктураТипГИБДДСтрока");
			Область.Параметры.ТипГИБДД            = Объект.ТипГИБДД;
			Область.Параметры.РасшифровкаТипГИБДД = "ТипГИБДД";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Продажа
	
	Если РазделКарточкиВиден("Продажа", СтруктураВидимости) Тогда
		ОбластьПродажаЗаголовок = Макет.ПолучитьОбласть("ПродажаЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьПродажаЗаголовок);
		
		Если СтрокаКарточкиВидна("СОП", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаСОПСтрока");
			Область.Параметры.СОП            = Объект.СОП;
			Область.Параметры.РасшифровкаСОП = "СОП";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СоглашениеОПоставке", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаЗаявкаСтрока");
			Область.Параметры.Заявка            = Объект.СоглашениеОПоставке;
			Область.Параметры.РасшифровкаЗаявка = "СоглашениеОПоставке";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("КлиентСоглашенияОПоставке", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаКлиентЗаявкаСтрока");
			Область.Параметры.КлиентЗаявка            = Объект.КлиентСоглашенияОПоставке;
			Область.Параметры.РасшифровкаКлиентЗаявка = "КлиентСоглашенияОПоставке";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СпециальныеУсловия", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаСпециальныеУсловияСтрока");
			Область.Параметры.СпециальныеУсловия            = Форма.СпециальныеУсловия;
			Область.Параметры.РасшифровкаСпециальныеУсловия = "СпециальныеУсловия";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("Драйв", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаДрайвСтрока");
			Область.Параметры.Драйв            = Форма.Драйв;
			Область.Параметры.РасшифровкаДрайв = "Драйв";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СтоимостьПродажи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаСтоимостьПродажиСтрока");
			Область.Параметры.СтоимостьПродажи            = Объект.СтоимостьПродажи;
			Область.Параметры.РасшифровкаСтоимостьПродажи = "СтоимостьПродажи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СебестоимостьЛогистическая", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаСебестоимостьЛогистическаяСтрока");
			Область.Параметры.СебестоимостьЛогистическая            = Объект.СебестоимостьЛогистическая;
			Область.Параметры.РасшифровкаСебестоимостьЛогистическая = "СебестоимостьЛогистическая";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		//rarus agar 04.02.2021 17123 ++
		Если СтрокаКарточкиВидна("СтоимостьПродажиБУ", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаСтоимостьПродажиБУСтрока");
			Область.Параметры.СтоимостьПродажиБУ            = Объект.СтоимостьПродажиБУ;
			Область.Параметры.РасшифровкаСтоимостьПродажиБУ = "СтоимостьПродажиБУ";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СтоимостьПродажиБУБезНДС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаСтоимостьПродажиБУБезНДССтрока");
			Область.Параметры.СтоимостьПродажиБУБезНДС            = Объект.СтоимостьПродажиБУБезНДС;
			Область.Параметры.РасшифровкаСтоимостьПродажиБУБезНДС = "СтоимостьПродажиБУБезНДС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СтоимостьПродажиБУСтавкаНДС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПродажаСтоимостьПродажиБУСтавкаНДССтрока");
			Область.Параметры.СтоимостьПродажиБУСтавкаНДС            = Объект.СтоимостьПродажиБУСтавкаНДС;
			Область.Параметры.РасшифровкаСтоимостьПродажиБУСтавкаНДС = "СтоимостьПродажиБУСтавкаНДС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		//rarus agar 04.02.2021 17123 --
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Логистика
	
	Если РазделКарточкиВиден("Логистика", СтруктураВидимости) Тогда
		ОбластьЛогистикаЗаголовок = Макет.ПолучитьОбласть("ЛогистикаЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьЛогистикаЗаголовок);
		
		Если СтрокаКарточкиВидна("ПортОтправки", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаПортОтправкиСтрока");
			Область.Параметры.ПортОтправки            = Объект.ПортОтправки;
			Область.Параметры.РасшифровкаПортОтправки = "ПортОтправки";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ПортПрихода", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаПортПриходаСтрока");
			Область.Параметры.ПортПрихода            = Объект.ПортПрихода;
			Область.Параметры.РасшифровкаПортПрихода = "ПортПрихода";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		//rarus agar 21.01.2021 16981 ++
		Если СтрокаКарточкиВидна("ЗапрашиваемоеМестоПередачи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаЗапрашиваемоеМестоПередачиСтрока");
			Область.Параметры.ЗапрашиваемоеМестоПередачи            = Объект.ЗапрашиваемоеМестоПередачи;
			Область.Параметры.РасшифровкаЗапрашиваемоеМестоПередачи = "ЗапрашиваемоеМестоПередачи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("МестоПередачи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаМестоПередачиСтрока");
			Область.Параметры.МестоПередачи            = Объект.МестоПередачи;
			Область.Параметры.РасшифровкаМестоПередачи = "МестоПередачи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СкладПродажи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаСкладПродажиСтрока");
			Область.Параметры.СкладПродажи            = Объект.СкладПродажи;
			Область.Параметры.РасшифровкаСкладПродажи = "СкладПродажи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ЗапретИзмененияСкладаПродажи", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЛогистикаЗапретИзмененияСкладаПродажиСтрока");
			Область.Параметры.ЗапретИзмененияСкладаПродажи            = Объект.ЗапретИзмененияСкладаПродажи;
			Область.Параметры.РасшифровкаЗапретИзмененияСкладаПродажи = "ЗапретИзмененияСкладаПродажи";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		//rarus agar 21.01.2021 16981 --
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПТС
	
	Если РазделКарточкиВиден("ПТС", СтруктураВидимости) Тогда
		ОбластьПТСЗаголовок = Макет.ПолучитьОбласть("ПТСЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьПТСЗаголовок);
		
		Если СтрокаКарточкиВидна("МодельПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПТСМодельПТССтрока");
			Область.Параметры.МодельПТС            = Объект.МодельПТС;
			Область.Параметры.РасшифровкаМодельПТС = "МодельПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ТипТСПоПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПТСТипТСПоПТССтрока");
			Область.Параметры.ТипТСПоПТС            = Объект.ТипТСПоПТС;
			Область.Параметры.РасшифровкаТипТСПоПТС = "ТипПоПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("НомерПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПТСНомерПТССтрока");
			Область.Параметры.НомерПТС            = Объект.НомерПТС;
			Область.Параметры.РасшифровкаНомерПТС = "НомерПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ЦветКабиныПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПТСЦветКабиныПТССтрока");
			Область.Параметры.ЦветКабиныПТС            = Объект.ЦветКабиныПТС;
			Область.Параметры.РасшифровкаЦветКабиныПТС = "ЦветКабиныПТС";
			ТабличныйДокументПраво.Вывести(Область);
			
			//ОбластьПТСЦветКабины = ОбластьПТС.Область("ОбластьПТСЦветКабины");
			//ЦветФона = Объект.ЦветКабиныПТС.ЦветФона.Получить();
			//Если ЦветФона <> Неопределено Тогда
			//	ОбластьПТСЦветКабины.ЦветФона = ЦветФона;
			//КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	// rarus agar 12.08.2021 17205 ++
	#Область ЭПТС
	
	Если РазделКарточкиВиден("ЭПТС", СтруктураВидимости) Тогда
		ОбластьЭПТСЗаголовок = Макет.ПолучитьОбласть("ЭПТСЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьЭПТСЗаголовок);
		
		Если СтрокаКарточкиВидна("ЭПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТСЭПТССтрока");
			Область.Параметры.ЭПТС            = Объект.ЭПТС;
			Область.Параметры.РасшифровкаЭПТС = "ЭПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("НомерЭПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТСНомерЭПТССтрока");
			Область.Параметры.НомерЭПТС            = Форма.НомерЭПТС;
			Область.Параметры.РасшифровкаНомерЭПТС = "НомерЭПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("СтатусЭПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТССтатусЭПТССтрока");
			Область.Параметры.СтатусЭПТС            = Форма.СтатусЭПТС;
			Область.Параметры.РасшифровкаСтатусЭПТС = "СтатусЭПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		// rarus agar 17.12.2021 18240 ++
		Если СтрокаКарточкиВидна("НаименованиеТСОпределяемоеЕгоНазначением", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТСНаименованиеТСОпределяемоеЕгоНазначениемСтрока");
			Область.Параметры.НаименованиеТСОпределяемоеЕгоНазначением            = Форма.НаименованиеТСОпределяемоеЕгоНазначением;
			Область.Параметры.РасшифровкаНаименованиеТСОпределяемоеЕгоНазначением = "НаименованиеТСОпределяемоеЕгоНазначением";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("КоммерческоеНаименование", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТСКоммерческоеНаименованиеСтрока");
			Область.Параметры.КоммерческоеНаименование            = Форма.КоммерческоеНаименование;
			Область.Параметры.РасшифровкаКоммерческоеНаименование = "КоммерческоеНаименование";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		// rarus agar 17.01.2022 18240 ++
		Если СтрокаКарточкиВидна("ИноеНаименованиеТСПоЭПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТСИноеНаименованиеТСПоЭПТССтрока");
			Область.Параметры.ИноеНаименованиеТСПоЭПТС            = Форма.ИноеНаименованиеТСПоЭПТС;
			Область.Параметры.РасшифровкаИноеНаименованиеТСПоЭПТС = "ИноеНаименованиеТСПоЭПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		// rarus agar 17.01.2022 18240 --
		
		Если СтрокаКарточкиВидна("МаркаПоЭПТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТСМаркаПоЭПТССтрока");
			Область.Параметры.МаркаПоЭПТС            = Форма.МаркаПоЭПТС;
			Область.Параметры.РасшифровкаМаркаПоЭПТС = "МаркаПоЭПТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ИдентификационныйНомер", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТСИдентификационныйНомерСтрока");
			Область.Параметры.ИдентификационныйНомер            = Форма.ИдентификационныйНомер;
			Область.Параметры.РасшифровкаИдентификационныйНомер = "ИдентификационныйНомер";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("НомерШассиРамы", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ЭПТСНомерШассиРамыСтрока");
			Область.Параметры.НомерШассиРамы            = Форма.НомерШассиРамы;
			Область.Параметры.РасшифровкаНомерШассиРамы = "НомерШассиРамы";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		// rarus agar 17.12.2021 18240 --
	КонецЕсли;
	
	#КонецОбласти
	// rarus agar 12.08.2021 17205 --
	
	#Область Полис
	
	Если РазделКарточкиВиден("Полис", СтруктураВидимости) Тогда
		ОбластьПолисЗаголовок = Макет.ПолучитьОбласть("ПолисЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьПолисЗаголовок);
		
		Если СтрокаКарточкиВидна("ДатаНачалаДействияПолиса", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПолисДатаНачалаДействияПолисаСтрока");
			Область.Параметры.ДатаНачалаДействияПолиса            = Объект.ДатаНачалаДействияПолиса;
			Область.Параметры.РасшифровкаДатаНачалаДействияПолиса = "ДатаНачалаДействияПолиса";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ДатаИстеченияПолиса", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПолисДатаИстеченияПолисаСтрока");
			Область.Параметры.ДатаИстеченияПолиса            = Объект.ДатаИстеченияПолиса;
			Область.Параметры.РасшифровкаДатаИстеченияПолиса = "ДатаИстеченияПолиса";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("НомерПолисаОСАГО", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПолисНомерПолисаОСАГОСтрока");
			Область.Параметры.НомерПолисаОСАГО            = Объект.НомерПолисаОСАГО;
			Область.Параметры.РасшифровкаНомерПолисаОСАГО = "НомерПолисаОСАГО";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Двигатель
	
	Если РазделКарточкиВиден("Двигатель", СтруктураВидимости) Тогда
		ОбластьДвигательЗаголовок = Макет.ПолучитьОбласть("ДвигательЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьДвигательЗаголовок);
		
		Если СтрокаКарточкиВидна("ТипТопливаДвигателя", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДвигательТипТопливаДвигателяСтрока");
			Область.Параметры.ТипТопливаДвигателя            = Объект.ТипТопливаДвигателя;
			Область.Параметры.РасшифровкаТипТопливаДвигателя = "ТипТопливаДвигателя";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("МодельДвигателяТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДвигательМодельДвигателяТССтрока");
			Область.Параметры.МодельДвигателяТС            = Объект.МодельДвигателяТС;
			Область.Параметры.РасшифровкаМодельДвигателяТС = "МодельДвигателяТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("НомерДвигателяТС", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДвигательНомерДвигателяТССтрока");
			Область.Параметры.НомерДвигателяТС            = Объект.НомерДвигателяТС;
			Область.Параметры.РасшифровкаНомерДвигателяТС = "НомерДвигателяТС";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ЭкологическийКласс", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ДвигательЭкологическийКлассСтрока");
			Область.Параметры.ЭкологическийКласс            = Объект.ЭкологическийКласс;
			Область.Параметры.РасшифровкаЭкологическийКласс = "ЭкологическийКласс";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВГХ
	
	Если РазделКарточкиВиден("ВГХ", СтруктураВидимости) Тогда
		ОбластьВГХЗаголовок = Макет.ПолучитьОбласть("ВГХЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьВГХЗаголовок);
		
		Если СтрокаКарточкиВидна("ВесПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ВГХВесПродуктаСтрока");
			Область.Параметры.ВесПродукта            = Форма.ВесПродукта;
			Область.Параметры.РасшифровкаВесПродукта = "Вес";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ДлинаПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ВГХДлинаПродуктаСтрока");
			Область.Параметры.ДлинаПродукта            = Форма.ДлинаПродукта;
			Область.Параметры.РасшифровкаДлинаПродукта = "Длина";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ВысотаПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ВГХВысотаПродуктаСтрока");
			Область.Параметры.ВысотаПродукта            = Форма.ВысотаПродукта;
			Область.Параметры.РасшифровкаВысотаПродукта = "Высота";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
		
		Если СтрокаКарточкиВидна("ШиринаПродукта", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ВГХШиринаПродуктаСтрока");
			Область.Параметры.ШиринаПродукта            = Форма.ШиринаПродукта;
			Область.Параметры.РасшифровкаШиринаПродукта = "ШиринаПродукта";
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	ТабличныйДокументКолонки.Присоединить(ТабличныйДокументПраво);
	
	ТабличныйДокументДаты = Новый ТабличныйДокумент;
	
	#Область КлючевыеДаты
	
	Если РазделКарточкиВиден("КлючевыеДаты", СтруктураВидимости) Тогда
		КлючевыеДатыПродукта      = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючевыеДатыОбъекта(Объект.Ссылка);
		КлючевыеДатыЗаказаНаЗавод = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючевыеДатыОбъекта(Объект.ЗаказНаЗавод);
		
		Для Каждого КлючИЗначениеРаздела Из СтруктураКлючевыхДат Цикл
			Если РазделКарточкиВиден(КлючИЗначениеРаздела.Ключ, СтруктураВидимости) Тогда
				ОбластьЗаголовок = Макет.ПолучитьОбласть("КлючевыеДатыЗаголовок");
				ОбластьЗаголовок.Параметры.КлючевыеДатыРаздел = СтруктураЗаголовков[КлючИЗначениеРаздела.Ключ];
				ТабличныйДокументДаты.Вывести(ОбластьЗаголовок);
				
				Для Каждого КлючИЗначениеСтроки Из КлючИЗначениеРаздела.Значение Цикл
					Если СтрокаКарточкиВидна(КлючИЗначениеСтроки.Ключ, СтруктураВидимости) Тогда
						ОбластьСтрока = Макет.ПолучитьОбласть("КлючевыеДатыСтрока");
						ОбластьСтрока.Параметры.КлючеваяДатаПредставление = КлючИЗначениеСтроки.Значение;
						
						ЗначениеКлючевойДаты = Неопределено;
						Если КлючевыеДатыПродукта.Свойство(КлючИЗначениеСтроки.Ключ, ЗначениеКлючевойДаты) Тогда
						ИначеЕсли КлючевыеДатыЗаказаНаЗавод.Свойство(КлючИЗначениеСтроки.Ключ, ЗначениеКлючевойДаты) Тогда
						КонецЕсли;
						
						ОбластьСтрока.Параметры.КлючеваяДатаЗначение = ЗначениеКлючевойДаты;
						ТабличныйДокументДаты.Вывести(ОбластьСтрока);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	#КонецОбласти
	
	ТабличныйДокументКолонки.Присоединить(ТабличныйДокументДаты);
	
	ТабличныйДокументКарточка.Вывести(ТабличныйДокументКолонки);
	
	Возврат ТабличныйДокументКарточка;
	
КонецФункции

Функция НастройкиКарточкиПродукта(Продукт, Форма) Экспорт
	
	НастройкиКарточкиПродукта = Новый Структура;
	
	ВидимостьЭлементов = СтруктураВидимостиСтрокКарточки(Форма);
	ЗаголовкиЭлементов = СтруктураЗаголовковКарточки(Продукт, ВидимостьЭлементов);
	КлючевыеДаты       = СтруктураКлючевыхДат();
	
	НастройкиКарточкиПродукта.Вставить("ВидимостьЭлементов", ВидимостьЭлементов);
	НастройкиКарточкиПродукта.Вставить("ЗаголовкиЭлементов", ЗаголовкиЭлементов);
	НастройкиКарточкиПродукта.Вставить("КлючевыеДаты",       КлючевыеДаты);
		
	Возврат НастройкиКарточкиПродукта;
	
КонецФункции

Функция РазделКарточкиВиден(ИмяРаздела, СтруктураВидимости)
	
	Если ИмяРаздела = "Основное" Тогда
		Возврат СтрокаКарточкиВидна("МодельПродукта", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипКабины",      СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипКузова",      СтруктураВидимости);
	КонецЕсли;
		
	Если ИмяРаздела = "Производство" Тогда
		Возврат СтрокаКарточкиВидна("ТягачШасси",              СтруктураВидимости)
			Или СтрокаКарточкиВидна("МестоПроизводства",       СтруктураВидимости)
			Или СтрокаКарточкиВидна("ЗаказНаЗавод",            СтруктураВидимости)
			Или СтрокаКарточкиВидна("КлиентЗаказаНаЗавод",     СтруктураВидимости)
			Или СтрокаКарточкиВидна("СпецификацияПродукта",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипСпецификации",         СтруктураВидимости)
			Или СтрокаКарточкиВидна("СтандартнаяСпецификация", СтруктураВидимости); // rarus agar 05.04.2021 17394 ++
	КонецЕсли;
		
	Если ИмяРаздела = "ГосНомер" Тогда
		Возврат СтрокаКарточкиВидна("ГосударственныйНомер",              СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГосударственныйНомерДатаПолучения", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "Состояние" Тогда
		Возврат СтрокаКарточкиВидна("БУ",        СтруктураВидимости)
			Или СтрокаКарточкиВидна("Аренда",    СтруктураВидимости)
			//Rarus bonmak 16.05.2022 19158 ++
			//Или СтрокаКарточкиВидна("ДемоИТест", СтруктураВидимости);
			Или СтрокаКарточкиВидна("Демо", СтруктураВидимости)
			Или СтрокаКарточкиВидна("Тест", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаУстановки", СтруктураВидимости); // Rarus tenkam 30.05.2022 mantis 19189 +
			//Rarus bonmak 16.05.2022 19158 --
	КонецЕсли;
	
	Если ИмяРаздела = "Тахограф" Тогда
		Возврат СтрокаКарточкиВидна("ТахографСЗаводаСкания", СтруктураВидимости)
			Или СтрокаКарточкиВидна("УстановленныйТахограф", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "Глонасс" Тогда
		Возврат СтрокаКарточкиВидна("НомерЭРАГЛОНАСС",                СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерБортовогоУстройстваПлатон", СтруктураВидимости)
			ИЛИ СтрокаКарточкиВидна("ЭраГлонассАктивирована", 		  СтруктураВидимости); //rarus bonmak 17095 15.01.2021
	КонецЕсли;
	
	Если ИмяРаздела = "Прочее" Тогда
		Возврат СтрокаКарточкиВидна("Пробег",                  СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаВводаДанныхОПробеге", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГодВыпускаПродукта",      СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "Структура" Тогда
		Возврат СтрокаКарточкиВидна("ГруппаПродукта",           СтруктураВидимости)
			Или СтрокаКарточкиВидна("ВидПродукта",              СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипПродукта",              СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипПродуктаЛогистический", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипыМаркетинговые",        СтруктураВидимости)
			Или СтрокаКарточкиВидна("СегментРынкаПродуктов",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипГИБДД",                 СтруктураВидимости);
	КонецЕсли;
		
	Если ИмяРаздела = "Продажа" Тогда
		Возврат СтрокаКарточкиВидна("СОП",                         СтруктураВидимости)
			Или СтрокаКарточкиВидна("Заявка",                      СтруктураВидимости)
			Или СтрокаКарточкиВидна("КлиентЗаявка",                СтруктураВидимости)
			Или СтрокаКарточкиВидна("СпециальныеУсловия",          СтруктураВидимости)
			Или СтрокаКарточкиВидна("Драйв",                       СтруктураВидимости)
			Или СтрокаКарточкиВидна("СтоимостьПродажи",            СтруктураВидимости)
			Или СтрокаКарточкиВидна("СебестоимостьЛогистическая",  СтруктураВидимости)
			//rarus agar 04.02.2021 17123 ++
			Или СтрокаКарточкиВидна("СтоимостьПродажиБУ",          СтруктураВидимости)
			Или СтрокаКарточкиВидна("СтоимостьПродажиБУБезНДС",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("СтоимостьПродажиБУСтавкаНДС", СтруктураВидимости);
			//rarus agar 04.02.2021 17123 --
	КонецЕсли;
	
	Если ИмяРаздела = "Логистика" Тогда
		Возврат СтрокаКарточкиВидна("ПортОтправки", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ПортПрихода",                  СтруктураВидимости)
			//rarus agar 21.01.2021 16981 ++
			Или СтрокаКарточкиВидна("ЗапрашиваемоеМестоПередачи",   СтруктураВидимости)
			Или СтрокаКарточкиВидна("СкладПродажи",                 СтруктураВидимости)
			Или СтрокаКарточкиВидна("МестоПередачи",                СтруктураВидимости)
			Или СтрокаКарточкиВидна("ЗапретИзмененияСкладаПродажи", СтруктураВидимости);
			//rarus agar 21.01.2021 16981 --
	КонецЕсли;
	
	Если ИмяРаздела = "ПТС" Тогда
		Возврат СтрокаКарточкиВидна("МодельПТС",     СтруктураВидимости)
			Или СтрокаКарточкиВидна("ТипТСПоПТС",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерПТС",      СтруктураВидимости)
			Или СтрокаКарточкиВидна("ЦветКабиныПТС", СтруктураВидимости);
	КонецЕсли;
	
	// rarus agar 12.08.2021 17205 ++
	Если ИмяРаздела = "ЭПТС" Тогда
		Возврат СтрокаКарточкиВидна("ЭПТС",       СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерЭПТС",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("СтатусЭПТС", СтруктураВидимости)
			// rarus agar 17.12.2021 18240 ++
			Или СтрокаКарточкиВидна("НаименованиеТСОпределяемоеЕгоНазначением", СтруктураВидимости)
			Или СтрокаКарточкиВидна("КоммерческоеНаименование",                 СтруктураВидимости)
			Или СтрокаКарточкиВидна("МаркаПоЭПТС",                              СтруктураВидимости)
			Или СтрокаКарточкиВидна("ИдентификационныйНомер",                   СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерШассиРамы",                           СтруктураВидимости)
			// rarus agar 17.12.2021 18240 --
			// rarus agar 17.01.2022 18240 ++
			Или СтрокаКарточкиВидна("ИноеНаименованиеТСПоЭПТС",                 СтруктураВидимости);
			// rarus agar 17.01.2022 18240 --
	КонецЕсли;
	// rarus agar 12.08.2021 17205 --
	
	Если ИмяРаздела = "Полис" Тогда
		Возврат СтрокаКарточкиВидна("ДатаНачалаДействияПолиса", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаИстеченияПолиса",      СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерПолисаОСАГО",         СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "Двигатель" Тогда
		Возврат СтрокаКарточкиВидна("ТипТопливаДвигателя", СтруктураВидимости)
			Или СтрокаКарточкиВидна("МодельДвигателяТС",   СтруктураВидимости)
			Или СтрокаКарточкиВидна("НомерДвигателяТС",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("ЭкологическийКласс",  СтруктураВидимости);
	КонецЕсли;
		
	Если ИмяРаздела = "ВГХ" Тогда
		Возврат СтрокаКарточкиВидна("ВесПродукта",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДлинаПродукта",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("ВысотаПродукта", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ШиринаПродукта", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "Гиперссылки" Тогда
		Возврат СтрокаКарточкиВидна("ГиперссылкиЗамечания",         СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиМестоположение",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиХарактеристикиАКБ", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиКлючевыеДаты",      СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиСоставИзделия",     СтруктураВидимости)
			Или СтрокаКарточкиВидна("ГиперссылкиДокументы",         СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "КлючевыеДаты" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяРаздела = "КлючевыеДатыПроизводство" Тогда
		Возврат СтрокаКарточкиВидна("DDD",        СтруктураВидимости)
			Или СтрокаКарточкиВидна("DCD",        СтруктураВидимости)
			Или СтрокаКарточкиВидна("SDDate",     СтруктураВидимости)
			Или СтрокаКарточкиВидна("CRD",        СтруктураВидимости)
			Или СтрокаКарточкиВидна("FinishDate", СтруктураВидимости)
			Или СтрокаКарточкиВидна("PDD",        СтруктураВидимости)
			Или СтрокаКарточкиВидна("CDD",        СтруктураВидимости)
			Или СтрокаКарточкиВидна("CDD2",       СтруктураВидимости)
			Или СтрокаКарточкиВидна("ADD",        СтруктураВидимости);
	КонецЕсли;
		
	Если ИмяРаздела = "КлючевыеДатыИнвойс" Тогда
		Возврат СтрокаКарточкиВидна("ДатаИнвойса",              СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаПоступленияИнвойса1С", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "КлючевыеДатыНадстройка" Тогда
		Возврат СтрокаКарточкиВидна("PODOD",  СтруктураВидимости)
			Или СтрокаКарточкиВидна("ADDLBB", СтруктураВидимости)
			Или СтрокаКарточкиВидна("RDB",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("PAD",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("AN",     СтруктураВидимости)
			Или СтрокаКарточкиВидна("AAD",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("RFT",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("EDD",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("PTSD",   СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "КлючевыеДатыЛогистика" Тогда
		Возврат СтрокаКарточкиВидна("ДатаБукингЛиста", СтруктураВидимости)
			Или СтрокаКарточкиВидна("CDDПоставщик",    СтруктураВидимости)
			Или СтрокаКарточкиВидна("ПортСПБ",         СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "КлючевыеДатыОтгрузка" Тогда
		Возврат СтрокаКарточкиВидна("DD",                        СтруктураВидимости)
			Или СтрокаКарточкиВидна("DD2",                       СтруктураВидимости)
			//rarus bonmak 09.08.2021 16834 Или СтрокаКарточкиВидна("ДатаСОП",                   СтруктураВидимости)
			Или СтрокаКарточкиВидна("DDS",                       СтруктураВидимости)
			//rarus bonmak 09.08.2021 16834 Или СтрокаКарточкиВидна("RFD",                       СтруктураВидимости)
			Или СтрокаКарточкиВидна("БроньДилера",               СтруктураВидимости)
			Или СтрокаКарточкиВидна("LDD",                       СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаОтгрузкиСЗаводаПриEXW", СтруктураВидимости)
			Или СтрокаКарточкиВидна("ВнутреннийРезервДилера", 	 СтруктураВидимости) //Rarus bonmak 04.02.2022 18590
			Или СтрокаКарточкиВидна("ETA",                       СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "КлючевыеДатыПродажа" Тогда
		Возврат СтрокаКарточкиВидна("ДатаПродажиИзделия",            СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаПередачиИзделияДилеру",     СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаПродажиКлиенту",            СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаПоступленияИзделияНаСклад", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "КлючевыеДатыГарантия" Тогда
		Возврат СтрокаКарточкиВидна("SoW", СтруктураВидимости)
			Или СтрокаКарточкиВидна("WED", СтруктураВидимости);
	КонецЕсли;

	Если ИмяРаздела = "КлючевыеДатыБУ" Тогда
		Возврат СтрокаКарточкиВидна("ДатаПокупкиБУИзделия",            СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаПоступленияИзделияБУНаСклад",     СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаПродажиБУДилеру",            СтруктураВидимости)
			Или СтрокаКарточкиВидна("ДатаПродажиБУКлиенту", СтруктураВидимости);
	КонецЕсли;
	
	Если ИмяРаздела = "КлючевыеДатыВыбытие" Тогда
		Возврат СтрокаКарточкиВидна("ПродуктВАрхиве", СтруктураВидимости)
		Или СтрокаКарточкиВидна("ДатаСписания",       СтруктураВидимости); //rarus bonmak 24.12.2020 16653
	КонецЕсли;
	
	//rarus ozhnik 17366 22.03.2021 + 
	Если ИмяРаздела = "ИнформацияОтДилера" Тогда
		Возврат СтрокаКарточкиВидна("КлиентПродукта", СтруктураВидимости)
		Или СтрокаКарточкиВидна("ПродавецПродукта",       СтруктураВидимости); 	
	КонецЕсли;
	//rarus ozhnik 17366 22.03.2021 -
КонецФункции

Функция СтрокаКарточкиВидна(ИмяСтроки, СтруктураВидимости)
	
	Видимость = Ложь;
	
	Если СтруктураВидимости.Свойство(ИмяСтроки) Тогда
		Видимость = СтруктураВидимости[ИмяСтроки];
	КонецЕсли;
		
	Возврат Видимость;
	
КонецФункции

Функция СтруктураВидимостиСтрокКарточки(Форма)
	
	СтруктураВидимостиЭлементовФормы = Новый Структура;
	
	Для Каждого ЭлементФормы Из Форма.Элементы Цикл
		Если ТипЗнч(ЭлементФормы) = Тип("ПолеФормы") Тогда
			ПутьКДаннымМассив = СтрРазделить(ЭлементФормы.ПутьКДанным, ".", Ложь);
			ПутьКДанным = ПутьКДаннымМассив[ПутьКДаннымМассив.Количество()-1];
			
			СтруктураВидимостиЭлементовФормы.Вставить(ПутьКДанным, ЭлементФормы.Видимость);
		КонецЕсли;
	КонецЦикла;
	
	ПользовательЯвляетсяСотрудникомСканияРусь = Scan_ПраваИНастройки.Scan_Право("ПользовательЯвляетсяСотрудникомСканияРусь");
	
	//??
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиЗамечания",         Истина);
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиМестоположение",    Истина);
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиХарактеристикиАКБ", Истина);
	//rarus agar 08.02.2021 17207 ++
	//СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиКлючевыеДаты",      ПользовательЯвляетсяСотрудникомСканияРусь);
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиКлючевыеДаты",      Ложь);
	//rarus agar 08.02.2021 17207 --
	
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиСоставИзделия",     Истина);
	СтруктураВидимостиЭлементовФормы.Вставить("ГиперссылкиДокументы",         Истина);
	
	ПеречислениеКлючевыеДаты = Перечисления.Scan_КлючевыеДаты;
	МетаданныеКлючевыеДаты   = Метаданные.Перечисления.Scan_КлючевыеДаты;
	
	НастройкиКлючевыхДат = ПолучитьНастройкиКлючевыхДат(ПользовательЯвляетсяСотрудникомСканияРусь);
	Для Каждого НастройкаКлючевойДаты Из НастройкиКлючевыхДат Цикл
		ИндексКлючевойДаты = ПеречислениеКлючевыеДаты.Индекс(НастройкаКлючевойДаты.КлючеваяДата);
		ИмяКлючевойДаты    = МетаданныеКлючевыеДаты.ЗначенияПеречисления[ИндексКлючевойДаты].Имя;
		
		СтруктураВидимостиЭлементовФормы.Вставить(ИмяКлючевойДаты, НастройкаКлючевойДаты.Видимость);
	КонецЦикла;
	
	Возврат СтруктураВидимостиЭлементовФормы;
	
КонецФункции

Функция СтруктураЗаголовковКарточки(Продукт, СтруктураВидимости)
	
	СтруктураЗаголовков = Новый Структура;
	
	#Область ЗаголовкиГиперссылок
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Продукт", Продукт.Ссылка);
	Запрос.УстановитьПараметр("ЗаказНаЗавод", Продукт.ЗаказНаЗавод);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ЗамечанияПоАктамПриемоПередачи.Замечание КАК Замечание
	|ИЗ
	|	РегистрСведений.Scan_ЗамечанияПоАктамПриемоПередачи КАК Scan_ЗамечанияПоАктамПриемоПередачи
	|ГДЕ
	|	&ГиперссылкиЗамечания
	|	И Scan_ЗамечанияПоАктамПриемоПередачи.Изделие = &Продукт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_МестонахождениеИзделий.МестоХранения КАК МестоХранения
	|ИЗ
	|	РегистрНакопления.Scan_МестонахождениеИзделий КАК Scan_МестонахождениеИзделий
	|ГДЕ
	|	&ГиперссылкиМестоположение
	|	И Scan_МестонахождениеИзделий.Изделие = &Продукт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_ДанныеПоАКБИзделий.АКБ КАК АКБ
	|ИЗ
	|	РегистрСведений.Scan_ДанныеПоАКБИзделий КАК Scan_ДанныеПоАКБИзделий
	|ГДЕ
	|	&ГиперссылкиХарактеристикиАКБ
	|	И Scan_ДанныеПоАКБИзделий.Изделие = &Продукт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_КлючевыеДатыПроцессов.Значение КАК КлючеваяДата
	|ИЗ
	|	РегистрСведений.Scan_КлючевыеДатыПроцессов КАК Scan_КлючевыеДатыПроцессов
	|ГДЕ
	|	&ГиперссылкиКлючевыеДаты
	|	И Scan_КлючевыеДатыПроцессов.ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.Изделие)
	|	И Scan_КлючевыеДатыПроцессов.Объект = &Продукт
	//|	И Scan_КлючевыеДатыПроцессов.Значение <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Scan_КлючевыеДатыПроцессов.Значение
	|ИЗ
	|	РегистрСведений.Scan_КлючевыеДатыПроцессов КАК Scan_КлючевыеДатыПроцессов
	|ГДЕ
	|	&ГиперссылкиКлючевыеДаты
	|	И Scan_КлючевыеДатыПроцессов.ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)
	|	И Scan_КлючевыеДатыПроцессов.Объект = &ЗаказНаЗавод
	//|	И Scan_КлючевыеДатыПроцессов.Значение <> ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_ВзаимосвязьИзделий.НадстройкиОборудованияПрицепы КАК НадстройкиОборудованияПрицепы
	|ИЗ
	|	РегистрСведений.Scan_ВзаимосвязьИзделий КАК Scan_ВзаимосвязьИзделий
	|ГДЕ
	|	&ГиперссылкиСоставИзделия
	|	И Scan_ВзаимосвязьИзделий.ИзделиеТС = &Продукт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Изделия.Ссылка КАК Документ
	|ИЗ
	|	КритерийОтбора.Изделия(&Продукт) КАК Изделия
	|ГДЕ
	|	&ГиперссылкиДокументы";
		
	ПараметрыЗапроса = Запрос.НайтиПараметры();
	
	Для Каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл
		Если СтрНайти(ПараметрЗапроса.Имя, "Гиперссылки") <> 0 Тогда
			Запрос.УстановитьПараметр(ПараметрЗапроса.Имя, СтрокаКарточкиВидна(ПараметрЗапроса.Имя, СтруктураВидимости));
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если СтрокаКарточкиВидна("ГиперссылкиЗамечания", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[0].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Замечания'") + " (" + Количество + ")",,,,"ЗамечанияКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиЗамечания", ЗаголовокГиперссылки);
		СтруктураЗаголовков.Вставить("ГиперссылкиЗамечанияИзменить", "Изменить");
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиМестоположение", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[1].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Местоположения'") + " (" + Количество + ")",,,,"МестоположенияКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиМестоположение", ЗаголовокГиперссылки);
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиХарактеристикиАКБ", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[2].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Характеристики АКБ'") + " (" + Количество + ")",,,,"ХарактеристикиАКБКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиХарактеристикиАКБ", ЗаголовокГиперссылки);
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиКлючевыеДаты", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[3].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Ключевые даты'") + " (" + Количество + ")",,,,"КлючевыеДатыКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиКлючевыеДаты", ЗаголовокГиперссылки);
		СтруктураЗаголовков.Вставить("ГиперссылкиКлючевыеДатыИзменить", "Изменить");
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиСоставИзделия", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[4].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Состав продукта'") + " (" + Количество + ")",,,,"СоставИзделияКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиСоставИзделия", ЗаголовокГиперссылки);
		СтруктураЗаголовков.Вставить("ГиперссылкиСоставИзделияИзменить", "Изменить");
	КонецЕсли;
	
	Если СтрокаКарточкиВидна("ГиперссылкиДокументы", СтруктураВидимости) Тогда
		Количество = РезультатыЗапросов[5].Выбрать().Количество();
		ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(НСтр("ru = 'Документы'") + " (" + Количество + ")",,,,"ДокументыКоличество");
		СтруктураЗаголовков.Вставить("ГиперссылкиДокументы", ЗаголовокГиперссылки);
	КонецЕсли;
		
	#КонецОбласти
	
	СтруктураЗаголовков.Вставить("КлючевыеДатыПроизводство", "Производство");
	СтруктураЗаголовков.Вставить("КлючевыеДатыИнвойс",       "Инвойс");
	СтруктураЗаголовков.Вставить("КлючевыеДатыНадстройка",   "Надстройка");
	СтруктураЗаголовков.Вставить("КлючевыеДатыЛогистика",    "Логистика");
	СтруктураЗаголовков.Вставить("КлючевыеДатыОтгрузка",     "Отгрузка");
	СтруктураЗаголовков.Вставить("КлючевыеДатыПродажа",      "Продажа/Покупка");
	СтруктураЗаголовков.Вставить("КлючевыеДатыГарантия",     "Гарантия");
	СтруктураЗаголовков.Вставить("КлючевыеДатыБУ",           "БУ");
	СтруктураЗаголовков.Вставить("КлючевыеДатыВыбытие",      "Выбытие");
	
	Возврат СтруктураЗаголовков;
	
КонецФункции

Функция СтруктураКлючевыхДат()
	
	СтруктураКлючевыхДат = Новый Структура;
	
	СтруктураДатПроизводство = Новый Структура;
	СтруктураДатПроизводство.Вставить("DDD", "DDD");
	СтруктураДатПроизводство.Вставить("DCD", "DCD");
	СтруктураДатПроизводство.Вставить("SDDate", "SD Date");
	СтруктураДатПроизводство.Вставить("CRD", "CRD");
	СтруктураДатПроизводство.Вставить("FinishDate", "Finish Date");
	СтруктураДатПроизводство.Вставить("PDD", "PDD");
	СтруктураДатПроизводство.Вставить("CDD", "CDD");
	СтруктураДатПроизводство.Вставить("CDD2", "CDD2");
	СтруктураДатПроизводство.Вставить("ADD", "ADD");
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыПроизводство", СтруктураДатПроизводство);
	
	СтруктураДатИнвойс = Новый Структура;
	СтруктураДатИнвойс.Вставить("ДатаИнвойса", "Дата инвойса");
	СтруктураДатИнвойс.Вставить("ДатаПоступленияИнвойса1С", "Дата поступления на фин. склад");
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыИнвойс", СтруктураДатИнвойс);
	
	СтруктураДатНадстройка = Новый Структура;
	СтруктураДатНадстройка.Вставить("PODOD", "PODOD");
	СтруктураДатНадстройка.Вставить("ADDLBB", "ADDLBB");
	СтруктураДатНадстройка.Вставить("RDB", "RDB");
	СтруктураДатНадстройка.Вставить("PAD", "PAD");
	СтруктураДатНадстройка.Вставить("AN", "AN");
	СтруктураДатНадстройка.Вставить("AAD", "AAD");
	СтруктураДатНадстройка.Вставить("RFT", "RFT");
	СтруктураДатНадстройка.Вставить("EDD", "EDD");
	СтруктураДатНадстройка.Вставить("PTSD", "PTSD");
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыНадстройка", СтруктураДатНадстройка);
	
	СтруктураДатЛогистика = Новый Структура;
	СтруктураДатЛогистика.Вставить("ДатаБукингЛиста", "Дата букинг-листа");
	СтруктураДатЛогистика.Вставить("CDDПоставщик", "CDD Поставщик");
	СтруктураДатЛогистика.Вставить("ПортСПБ", "CDD Факт");
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыЛогистика", СтруктураДатЛогистика);
	
	СтруктураДатОтгрузка = Новый Структура;
	СтруктураДатОтгрузка.Вставить("DD", "DD");
	СтруктураДатОтгрузка.Вставить("Квота", "Квота"); //rarus vikhle 12.11.2021 m 18500
	СтруктураДатОтгрузка.Вставить("DD2", "DD2");
	//rarus bonmak 09.08.2021 16834 СтруктураДатОтгрузка.Вставить("ДатаСОП", "Дата СОП");
	СтруктураДатОтгрузка.Вставить("DDS", "DDS");
	//rarus bonmak 09.08.2021 16834 СтруктураДатОтгрузка.Вставить("RFD", "RFD");
	СтруктураДатОтгрузка.Вставить("БроньДилера", "Дата отгрузки дилеру (план)"); //rarus bonmak 29.03.2021 17400
	СтруктураДатОтгрузка.Вставить("LDD", "LDD");
	СтруктураДатОтгрузка.Вставить("ДатаОтгрузкиСЗаводаПриEXW", "Дата отгрузки с завода при EXW");
	СтруктураДатОтгрузка.Вставить("ETA", "ETA");
	СтруктураДатОтгрузка.Вставить("ВнутреннийРезервДилера", "Внутренний резерв дилера"); //Rarus bonmak 04.02.2022 18590
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыОтгрузка", СтруктураДатОтгрузка);
	
	СтруктураДатПродажа = Новый Структура;
	СтруктураДатПродажа.Вставить("ДатаПродажиИзделия", "Дата продажи продукта");
	СтруктураДатПродажа.Вставить("ДатаПередачиИзделияДилеру", "Дата передачи продукта дилеру");
	СтруктураДатПродажа.Вставить("ДатаПродажиКлиенту", Нстр("ru = 'Дата продажи от ОСП'"));//rarus vikhle 10.06.2021 mt 17636 // rarus vikhle 28.06.2021 АПК было СтруктураДатПродажа.Вставить("ДатаПродажиКлиенту", "Дата продажи от ОСП"); 
	СтруктураДатПродажа.Вставить("ДатаПродажиПродуктаКлиенту", "Дата продажи клиенту");//rarus vikhle 10.06.2021 mt 17636
	СтруктураДатПродажа.Вставить("ДатаПоступленияИзделияНаСклад", "Дата пост. продукта на склад");
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыПродажа", СтруктураДатПродажа);
	
	СтруктураДатГарантия = Новый Структура;
	СтруктураДатГарантия.Вставить("SoW", "SoW");
	СтруктураДатГарантия.Вставить("WED", "WED");
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыГарантия", СтруктураДатГарантия);
	
	СтруктураДатБУ = Новый Структура;
	СтруктураДатБУ.Вставить("ДатаПокупкиБУИзделия", "Дата покупки б/у продукта");
	СтруктураДатБУ.Вставить("ДатаПоступленияИзделияБУНаСклад", "Дата пост. продукта б/у на склад");
	СтруктураДатБУ.Вставить("ДатаПродажиБУДилеру", "Дата продажи б/у дилеру");
	СтруктураДатБУ.Вставить("ДатаПродажиБУКлиенту", "Дата продажи б/у клиенту");
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыБУ", СтруктураДатБУ);
	
	СтруктураДатВыбытие = Новый Структура;
	СтруктураДатВыбытие.Вставить("ПродуктВАрхиве", "Продукт в архиве");
	СтруктураДатВыбытие.Вставить("ДатаСписания", "Дата списания"); //rarus bonmak 24.12.2020 16653
	СтруктураКлючевыхДат.Вставить("КлючевыеДатыВыбытие", СтруктураДатВыбытие);
	
	Возврат СтруктураКлючевыхДат;
	
КонецФункции

Функция ПолучитьНастройкиКлючевыхДат(ПользовательЯвляетсяСотрудникомСканияРусь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПользовательЯвляетсяСотрудникомСканияРусь", ПользовательЯвляетсяСотрудникомСканияРусь);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_КлючевыеДаты.Ссылка КАК КлючеваяДата,
	|	ВЫБОР
	|		КОГДА &ПользовательЯвляетсяСотрудникомСканияРусь
	|			ТОГДА ИСТИНА
	|		КОГДА Scan_НастройкиКлючевыхДатЗаказаНаЗаводПоГруппамДат.ДоступностьДилеру ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ Scan_НастройкиКлючевыхДатЗаказаНаЗаводПоГруппамДат.ДоступностьДилеру
	|	КОНЕЦ КАК Видимость
	|ИЗ
	|	Перечисление.Scan_КлючевыеДаты КАК Scan_КлючевыеДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_НастройкиКлючевыхДатЗаказаНаЗаводПоГруппамДат КАК Scan_НастройкиКлючевыхДатЗаказаНаЗаводПоГруппамДат
	|		ПО Scan_КлючевыеДаты.Ссылка = Scan_НастройкиКлючевыхДатЗаказаНаЗаводПоГруппамДат.КлючеваяДата";
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции
//rarus agar 30.11.2020 16691 --

// Возвращает признак возможности просмотра реквизита "КомментарийДилера" продукта
Функция КомментарийДилераДоступен(Заявка) Экспорт //rarus vikhle 09.11.2021 m 18485 +++
	
	КомментарийДилераДоступен	= Истина;
	ТекущийПользователь			= Пользователи.АвторизованныйПользователь();
	
	Если ЗначениеЗаполнено(ТекущийПользователь) 
		И НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ПользовательСотрудник") Тогда
		
		Если ЗначениеЗаполнено(Заявка) Тогда
			
			ДилерЗаявки				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заявка, "Дилер");
			КомпанииПользователя	= РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ТекущийПользователь);
			
			Если КомпанииПользователя.Найти(ДилерЗаявки, "Компания") = Неопределено Тогда
				
				КомментарийДилераДоступен = Ложь;	
				
			КонецЕсли;	
							
		КонецЕсли;	
		
	КонецЕсли;
	
	Возврат КомментарийДилераДоступен;
	
КонецФункции //rarus vikhle 09.11.2021 m 18485 ---

