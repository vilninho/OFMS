
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Свойство("Доступность") Тогда
		Элементы.ГруппаФон.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Объект.IDExternalSystemProduct) Тогда
		// Это новый объект не из 1БД
		Объект.СозданВручную = Истина;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	ОграничитьДоступностьФормыПриОткрытииИзРабочегоМестаДилера();
	
	Элементы.ФормаСоздатьПродукт.Видимость = ПустаяСтрока(Объект.IDExternalSystemProduct);
	
	Scan_СборСтатистики.ВыполнитьРегистрациюСтатистики("Справочники", "Продукты (scania)", "Открытие формы надстройки/услуги");	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ТекущийОбъект.ЭтоНовый() Тогда
		ТекущийОбъект.УстановитьНовыйКод();
	КонецЕсли;
		
	Если    ПустаяСтрока(ТекущийОбъект.НомерИзделия) 
		Или ТекущийОбъект.НомерИзделия = "9"
		Тогда
		ТекущийОбъект.НомерИзделия = "9"+ Сред(ТекущийОбъект.Код, 2);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);

	ПродуктВАрхиве = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Объект.Ссылка,
		Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве),
		Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве,ТекущаяДата());
	Если ЗначениеЗаполнено(ПродуктВАрхиве) Тогда
		Элементы.ГруппаФон.ЦветФона = Новый Цвет(255, 227, 227);
	ИначеЕсли Объект.БУ Тогда
		Элементы.ГруппаФон.ЦветФона = WebЦвета.СветлоЖелтыйЗолотистый;
	Иначе
		Элементы.ГруппаФон.ЦветФона = Новый Цвет(240,240,240);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

//rarus agar 20.02.2021 17230 ++
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОповеститьОВыборе(Объект.Ссылка);
	
КонецПроцедуры
//rarus agar 20.02.2021 17230 --

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПередатьПродукт(Команда)
	
	Если Записать() Тогда
		ПередатьПродуктНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипПродуктаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	
	МассивТиповПродуктов = ПолучитьТипыПродуктовНадстроекИУслуг();
	
	СписокТиповПродуктов = Новый СписокЗначений;
	СписокТиповПродуктов.ЗагрузитьЗначения(МассивТиповПродуктов);
	
	Отбор = ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Ссылка");
	Отбор.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
	Отбор.ПравоеЗначение   = СписокТиповПродуктов;
	Отбор.Использование    = Истина;
	Отбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	
	ОткрытьФорму("Справочник.Scan_ТипыПродуктов.ФормаВыбора", ПараметрыФормы, Элементы.ТипПродукта);
	
КонецПроцедуры

//rarus agar 14.01.2021 n/a ++
&НаКлиенте
Процедура ТипПродуктаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		МассивТиповПродуктов = ПолучитьТипыПродуктовНадстроекИУслуг();
		Если МассивТиповПродуктов.Найти(ВыбранноеЗначение) = Неопределено Тогда
			СтандартнаяОбработка = Ложь;
			Сообщить(НСтр("ru = 'Выбранный тип не является типом надстройки или услуги - нельзя выбрать в карточку.';
			              |en = 'The selected product type is not a type of a body or a service. Adding prohibited'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 14.01.2021 n/a --

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОграничитьДоступностьФормыПриОткрытииИзРабочегоМестаДилера()
	
	Если Не Параметры.ФормаОткрытаИзРабочегоМестаДилера Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из Элементы Цикл
		Если (ТипЗнч(Элемент) = Тип("ГруппаФормы") И (Элемент.Вид = ВидГруппыФормы.Страницы ИЛИ Элемент.Вид = ВидГруппыФормы.Страница))
		ИЛИ ТипЗнч(Элемент) = Тип("ДекорацияФормы") ИЛИ Элемент = Элементы.ФормаПеречитать ИЛИ Элемент = Элементы.ГруппаФон Тогда
			Продолжить;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Элемент.Имя, "Доступность", Ложь);
	КонецЦикла;
	
	КоманднаяПанель.Доступность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипыПродуктовНадстроекИУслуг()
	
	МассивТиповПродуктов = Новый Массив;
	
	МассивТиповПродуктовНадстроек = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИОборудования();
	Для Каждого ЭлементМассива Из МассивТиповПродуктовНадстроек Цикл
		МассивТиповПродуктов.Добавить(ЭлементМассива);
	КонецЦикла;
	
	МассивТиповПродуктовУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовУслуг();
	Для Каждого ЭлементМассива Из МассивТиповПродуктовУслуг Цикл
		МассивТиповПродуктов.Добавить(ЭлементМассива);
	КонецЦикла;
	
	Возврат МассивТиповПродуктов;
	
КонецФункции

&НаСервере
Процедура ПередатьПродуктНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_Изделия.НомерИзделия КАК НомерИзделия,
	|	Scan_Изделия.Наименование КАК Наименование,
	|	Scan_Изделия.МаркаПродукта КАК МаркаПродукта,
	|	Scan_Изделия.ТипПродукта КАК ТипПродукта,
	|	Scan_Изделия.ТипПродукта.ВидПродукта КАК ВидПродукта,
	|	Scan_Изделия.ТипыМаркетинговые КАК ТипМаркетинговый
	|ИЗ
	|	Справочник.Scan_Изделия КАК Scan_Изделия
	|ГДЕ
	|	Scan_Изделия.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить(НСтр("ru = 'Ошибка получения данных продукта! Продукт не создан.'; en = 'Failed to get product data! Product not created.'"));
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ПараметрыВызова = Новый Структура;
	ПараметрыВызова.Вставить("НомерИзделия",     Выборка.НомерИзделия);
	ПараметрыВызова.Вставить("Наименование",     Выборка.Наименование);
	ПараметрыВызова.Вставить("МаркаПродукта",    Выборка.МаркаПродукта);
	ПараметрыВызова.Вставить("ТипПродукта",      Выборка.ТипПродукта);
	ПараметрыВызова.Вставить("ВидПродукта",      Выборка.ВидПродукта);
	ПараметрыВызова.Вставить("ТипМаркетинговый", Выборка.ТипМаркетинговый);
	
	ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод_CreateProduct(ПараметрыВызова);
	Если ОтветСервиса = Неопределено Тогда
		Сообщить(НСтр("ru = 'Ошибка передачи продукта! Продукт не создан в 1БД.'; en = 'Failed to create product!'"));
	Иначе
		Объект.IDExternalSystemProduct = ОтветСервиса;
		Попытка
			//??
			//фОбъектИзделия.ДополнительныеСвойства.Вставить("ОтправитьРеквизитыВ1БД", ИСТИНА);
			Записать();
		Исключение
			Сообщить(НСтр("ru = 'Ошибка записи продукта! Продукт не записан.'; en = 'Failed to save product!'"));
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


