&НаКлиенте
Процедура ВопросПередСозданиемЗавершение(Результат, ДополнительныеПараметры) Экспорт //rarus bonmak 18.05.2020 14375 ++	
	Если Результат = КодВозвратаДиалога.Да Тогда
		// Rarus tenkam 31.03.2022 mantis 19047 +++
		//ЭлементыОтбора = Новый Структура("БУ, НомерИзделия", Истина, НомерИзделия);
		ЭлементыОтбора = Новый Структура("БУ, НомерИзделия, МаркаПродукта", Истина, НомерИзделия, МаркаПродукта);
		// Rarus tenkam 31.03.2022 mantis 19047 ---
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЭлементыОтбора);
		ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;  	
КонецПроцедуры //rarus bonmak 18.05.2020 14375 --

&НаКлиенте
Процедура ПолучитьДанныеИз1БД(Команда) //rarus bonmak 18.05.2020 14375 ++
	
	// Rarus tenkam 30.03.2022 mantis 19047 +++
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(ВидПродукта) Тогда
		Сообщить(НСтр("ru = 'Поле ""Вид продукта"" не заполнено!'; en = 'Product type is not filled!'"));
		ЕстьОшибки = Истина;	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МаркаПродукта) Тогда
		Сообщить(НСтр("ru = 'Поле ""Марка продукта"" не заполнено!'; en = 'Product mark is not filled!'"));
	 	ЕстьОшибки = Истина;
	КонецЕсли;
	// Rarus tenkam 30.03.2022 mantis 19047 ---
	
	Если НЕ ЗначениеЗаполнено(НомерИзделия) Тогда
		Сообщить(НСтр("ru = 'Поле ""Номер шасси"" не заполнено!'; en = 'Product number is not filled!'"));
	 	// Rarus tenkam 30.03.2022 mantis 19047 +++
		//Возврат;
		ЕстьОшибки = Истина;
		// Rarus tenkam 30.03.2022 mantis 19047 ---
	КонецЕсли;
	
	// Rarus tenkam 30.03.2022 mantis 19047 +++
	Если МаркаПродукта = ПредопределенноеЗначение("Справочник.Scan_МаркиПродуктов.Scania") Тогда
		// Проверим, что в номере не менее 7 цифр
		НомерИзделияДляПроверки = СокрЛП(НомерИзделия);
		Если СтрДлина(НомерИзделияДляПроверки) < 7 ИЛИ 
			НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(НомерИзделияДляПроверки) Тогда
			
			Сообщить(НСтр("ru = 'Некорректный номер продукта. Для марки Scania номер должен иметь не менее 7 символов и содержать только цифры.'; en = 'Product number is not correct!'"));
	 		ЕстьОшибки = Истина;
		КонецЕсли;		
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;    	
	// Rarus tenkam 30.03.2022 mantis 19047 ---
		
	// Rarus tenkam 30.03.2022 mantis 19047 +++
	//НайденноеИзделие = НайтиИзделие(НомерИзделия); 
	НайденноеИзделие = НайтиИзделие(НомерИзделия, ВидПродукта, МаркаПродукта);
	// Rarus tenkam 30.03.2022 mantis 19047 ---
	
	Если НЕ НайденноеИзделие.Пустая() Тогда
		Сообщить(НСтр("ru = 'Продукт с таким шасси уже есть в базе!'; en = 'A product with such chassis is already in the database!'"));
		ПараметрыФормы = Новый Структура("Ключ", НайденноеИзделие);
		ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
	Иначе
		//найдем продукт по номеру шасси		
		ИмяМетода = "GetListOfProduct";
		СообщениеОбОшибке = "";
		Отказ = Ложь;
		СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода ,Истина);
		Для Каждого Строка Из СтруктураПараметров Цикл
			СтруктураПараметров.Вставить(Строка.Ключ, Неопределено);		
		КонецЦикла;
		
		СтруктураПараметров.Вставить("НомерПродукта", НомерИзделия);
		// Rarus tenkam 31.03.2022 mantis 19047 +++
		СтруктураПараметров.Вставить("ВидПродукта", ВидПродукта);
		СтруктураПараметров.Вставить("МаркаПродукта", МаркаПродукта);
		// Rarus tenkam 31.03.2022 mantis 19047 ---
		СтруктураПараметров.Вставить("Проверка", Истина);
		ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
		ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
		
		Если НЕ Отказ Тогда
			СписокШассиИз1БД.Очистить();
			РазборОтветаСправочникПродукты(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
		КонецЕсли;
		Если СписокШассиИз1БД.Количество() = 0 Тогда
			ТекстВопроса = Нстр("ru = 'По номеру шасси '; en = 'By chassis number '") + НомерИзделия + Нстр("ru = ' не найдено продукта в 1ДБ. Создать новый продукт с номером шасси '; en = ' not found product in 1dB. Create a new product with chassis number '") + НомерИзделия + Нстр("ru = ' ?'; en = ' ?'");
			Оповещение = Новый ОписаниеОповещения("ВопросПередСозданиемЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //rarus bonmak 18.05.2020 14375 --

&НаСервере
Функция НайтиИзделие(НомерИзделия, ВидПродукта = Неопределено, МаркаПродукта = Неопределено) // rarus bonmak 18.05.2020 14375 ++ // Rarus tenkam 30.03.2022 mantis 19047 + добавлены параметры
	// Rarus tenkam 30.03.2022 mantis 19047 +++
	
	НайденноеИзделие = ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Scan_Изделия.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_Изделия КАК Scan_Изделия
		|ГДЕ
		|	Scan_Изделия.НомерИзделия = &НомерИзделия
		|	И Scan_Изделия.МаркаПродукта = &МаркаПродукта
		|	И Scan_Изделия.ТипПродукта.ВидПродукта = &ВидПродукта
		|
		|УПОРЯДОЧИТЬ ПО
		|	Scan_Изделия.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ВидПродукта", ВидПродукта);
	Запрос.УстановитьПараметр("МаркаПродукта", МаркаПродукта);
	Запрос.УстановитьПараметр("НомерИзделия", НомерИзделия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	
	Возврат НайденноеИзделие;
	//Возврат Справочники.Scan_Изделия.НайтиПоРеквизиту("НомерИзделия", НомерИзделия);
	// Rarus tenkam 30.03.2022 mantis 19047 ---                                   	
	
КонецФункции //rarus bonmak 18.05.2020 14375 --

&НаКлиенте
Процедура ЗагрузитьДанныеИз1БД(Команда) //rarus bonmak 18.05.2020 14375 ++
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Флаг", Истина);
	НайденныеСтроки = СписокШассиИз1БД.НайтиСтроки(СтруктураОтбора);
	Если НайденныеСтроки.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Выберите продукт для загрузки'; en = 'Select a product to download'"));
		Возврат;	
	КонецЕсли;
	//rarus bonmak 16452 23.09.2020 ++	
	//ИмяМетода = "GetProduct";
	СообщениеОбОшибке = "";
	Отказ = Ложь;
	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(,Ложь);
	СтруктураПараметров.Вставить("GUID", НайденныеСтроки[0].GUIDПродукта);
	//ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
	//ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
	//Если НЕ Отказ Тогда
	//	СсылкаПродукта = Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникПродукты(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
	//КонецЕсли;
	СсылкаПродукта = Scan_ВебСервисыРазборОтветов.ВызватьМетод_GetProduct(СтруктураПараметров, Отказ, СообщениеОбОшибке);	
	//rarus bonmak 16452 23.09.2020 --
	Если НЕ Отказ Тогда
		Если СсылкаПродукта <> Неопределено Тогда //rarus bonmak 07.08.2020 14375 добавил условие
			Если НЕ СсылкаПродукта.Пустая() Тогда
				//УстановитьПризнакБУ(СсылкаПродукта); //rarus bonmak 07.08.2020 14375 закомментировал
				//rarus bonmak 07.08.2020 14375 ++
				Если НЕ ИзделиеБУ(СсылкаПродукта) Тогда
					Сообщить(НСтр("ru = 'Признак БУ не установлен. Просьба обратиться в бухгалтерию'; en = 'The BU attribute is not installed. Please contact the accounting department'"));
				КонецЕсли;
				//rarus bonmak 07.08.2020 14375 --
				ПараметрыФормы = Новый Структура("Ключ", СсылкаПродукта);
				ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры //rarus bonmak 18.05.2020 14375 --
 
&НаСервере
Функция ИзделиеБУ(СсылкаПродукта) //rarus bonmak 07.08.2020 14375 ++
	Возврат СсылкаПродукта.БУ;	
КонецФункции //rarus bonmak 07.08.2020 14375 --

//rarus bonmak 07.08.2020 14375 ++ закомментировал
//&НаСервере
//Функция УстановитьПризнакБУ(СсылкаПродукта) //rarus bonmak 18.05.2020 14375 ++
//		
//	ИмяМетода = "SetProduct";
//	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
//	ОбъектПродукта = СсылкаПродукта.ПолучитьОбъект();
//	ОбъектПродукта.БУ = Истина;
//	Попытка
//		НачатьТранзакцию();
//		ОбъектПродукта.Записать();
//		ЗафиксироватьТранзакцию();
//	Исключение
//		ОтменитьТранзакцию();
//		СообщениеОбОшибке = "Не удалось установить признак БУ для изделия (" + СсылкаПродукта.Наименование + "): " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
//		Scan_ВебСервисы.scЗафиксироватьОшибку(СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации, СсылкаПродукта);	
//		Scan_ВебСервисыРазборОтветов.ЗаписьОшибокОбменаNDB(ИмяСобытияЖурналаРегистрации, СсылкаПродукта.Наименование, СсылкаПродукта.IDExternalSystemProduct, СообщениеОбОшибке);
//	КонецПопытки;
//	
//	ПараметрыФоновогоЗадания = Новый Массив;
//	ПараметрыФоновогоЗадания.Добавить(СсылкаПродукта.IDExternalSystemProduct);
//	ПараметрыФоновогоЗадания.Добавить(Истина);
//	ФоновыеЗадания.Выполнить("Scan_ВспомогательныеФункцииСервер.УстановитьПризнакБУВ1БД", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, "Отправка признака БУ в 1БД");	
//						
//КонецФункции //rarus bonmak 18.05.2020 14375 --
//rarus bonmak 07.08.2020 14375 --

&НаСервере
Функция РазборОтветаСправочникПродукты(ТекстОтвета, Отказ, СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации, ИмяМетодаWS) //rarus bonmak 18.05.2020 14375 ++
	Если ИмяМетодаWS = "GetListOfProduct" Тогда
		ОбъектПродукты = Scan_ВебСервисы.РазобратьОтветВебСервиса(ТекстОтвета, "Answer.Result.СписокБазовыхОбъектов.Продукты", Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетодаWS); 
		Если Отказ Тогда 
			СообщениеОбОшибке = "Не удалось разобрать ответ веб-сервиса. См. журнал регистрации";
			Возврат Неопределено;
		КонецЕсли;
		ТаблицаПродукты = РеквизитФормыВЗначение("СписокШассиИз1БД");
        		
		Для Каждого ТекЭлемент Из ОбъектПродукты Цикл
			ИмяМетодаНовое = "GetProduct";
			СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетодаНовое, Ложь);
			СтруктураПараметров["GUID"] = ТекЭлемент.GUID;
			
			ИмяНовогоСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетодаНовое;
			ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетодаНовое, СтруктураПараметров, Отказ, ИмяНовогоСобытияЖурналаРегистрации);
			Если НЕ Отказ Тогда
				ОбъектПродукт = РазборОтветаСправочникПродукты(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяНовогоСобытияЖурналаРегистрации,ИмяМетодаНовое);
				Если Отказ Тогда
					Отказ = Ложь;
					Scan_ВебСервисыРазборОтветов.ЗаписьОшибокОбменаNDB(ИмяНовогоСобытияЖурналаРегистрации, ТекЭлемент.Наименование, ТекЭлемент.GUID, СообщениеОбОшибке);
					Продолжить;
				КонецЕсли;
				Если ОбъектПродукт.Предмет <> Неопределено И	// rarus tenkam 15.09.2020 mantis 14375 + (отсекаем услуги) 
					(ОбъектПродукт.Предмет.ТранспортноеСредство <> Неопределено ИЛИ
					ОбъектПродукт.Предмет.Двигатель <> Неопределено) Тогда // Rarus tenkam 02.06.2022 mantis 19047 + 
						
					НоваяСтрокаТаблицы = ТаблицаПродукты.Добавить();
					НоваяСтрокаТаблицы.Флаг = Ложь;
					// Rarus tenkam 02.06.2022 mantis 19047 +++
					//НоваяСтрокаТаблицы.НомерШасси = ОбъектПродукт.Предмет.ТранспортноеСредство.Шасси;
					Если ОбъектПродукт.Предмет.ТранспортноеСредство <> Неопределено Тогда
						НоваяСтрокаТаблицы.НомерШасси = ОбъектПродукт.Предмет.ТранспортноеСредство.Шасси;
					ИначеЕсли ОбъектПродукт.Предмет.Двигатель <> Неопределено Тогда
						НоваяСтрокаТаблицы.НомерШасси = ОбъектПродукт.Предмет.Двигатель.НомерДвигателя; 						
					КонецЕсли;
					// Rarus tenkam 02.06.2022 mantis 19047 ---
					НоваяСтрокаТаблицы.Марка = ОбъектПродукт.Марка.Наименование;
					НоваяСтрокаТаблицы.ВидПродукта = ОбъектПродукт.ВидПродукта.Наименование;
					НоваяСтрокаТаблицы.GUIDПродукта = ОбъектПродукт.GUID;      			
					
				КонецЕсли;
			
			Иначе
				Отказ = Ложь;
				Scan_ВебСервисыРазборОтветов.ЗаписьОшибокОбменаNDB(ИмяНовогоСобытияЖурналаРегистрации, ТекЭлемент.Наименование, ТекЭлемент.GUID, ТекЭлементОтвет);
				Продолжить;
			КонецЕсли;	
		КонецЦикла;
		ЗначениеВРеквизитФормы(ТаблицаПродукты, "СписокШассиИз1БД");
	ИначеЕсли ИмяМетодаWS = "GetProduct" Тогда
		ОбъектПродукт = Scan_ВебСервисы.РазобратьОтветВебСервиса(ТекстОтвета, "Answer.Result.Продукт", Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетодаWS);	
		Если Отказ Тогда 
			СообщениеОбОшибке = "Не удалось разобрать ответ веб-сервиса. См. журнал регистрации";
			Возврат Неопределено;
		КонецЕсли;	
		Возврат ОбъектПродукт;
	Иначе
		СообщениеОбОшибке = "Некорректное имя метода. Проверьте правильность вызова процедуры разбора!";
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции //rarus bonmak 18.05.2020 14375 --

&НаКлиенте
Процедура СписокШассиИз1БДФлагПриИзменении(Элемент) //rarus bonmak 18.05.2020 14375 ++	
	Если Элементы.СписокШассиИз1БД.ТекущиеДанные.Флаг Тогда
		ИдентификаторПродукта = Элементы.СписокШассиИз1БД.ТекущиеДанные.GUIDПродукта;
		СписокШассиИз1БДФлагПриИзмененииНаСервере(ИдентификаторПродукта);
	КонецЕсли;		
КонецПроцедуры //rarus bonmak 18.05.2020 14375 --

&НаСервере
Процедура СписокШассиИз1БДФлагПриИзмененииНаСервере(Идентификатор) //rarus bonmak 18.05.2020 14375 ++
	ТаблицаПродукты = РеквизитФормыВЗначение("СписокШассиИз1БД");
	ТаблицаПродукты.ЗаполнитьЗначения(Ложь, "Флаг");
	НайденнаяСтрока = ТаблицаПродукты.Найти(Идентификатор);
	Если НайденнаяСтрока <> Неопределено Тогда 
		НайденнаяСтрока.Флаг = Истина;
	КонецЕсли;
	ЗначениеВРеквизитФормы(ТаблицаПродукты, "СписокШассиИз1БД");
КонецПроцедуры //rarus bonmak 18.05.2020 14375 --

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Scan_СборСтатистики.ВыполнитьРегистрациюСтатистики("Справочники", "Продукты (scania)", "Открытие формы создания Б/У");	

КонецПроцедуры


