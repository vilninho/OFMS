
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	
	//rarus sergei 01.09.2016 mantis 7167 ++
	Если Параметры.Свойство("Доступность") Тогда
		Элементы.ГруппаФон.ТолькоПросмотр = Истина;
	КонецЕсли; 
	//rarus sergei 01.09.2016 mantis 7167 --
	
	//rarus sergei 16.08.2016 mantis 7110 ++
	// rarus tenkam 25.09.2019 mantis 14979 +++
	//Объект.СозданВручную = Истина;  
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Объект.IDExternalSystemProduct) Тогда
		// Это новый объект не из 1БД
		Объект.СозданВручную = Истина;
	КонецЕсли;
	// rarus tenkam 25.09.2019 mantis 14979 ---
	
	Элементы.НеРазрешеноМенятьСрокУстраненияНедостатков.Доступность = Scan_ПраваИНастройки.Scan_ПолучитьПраваИНастройкиПользователя(ПользователиКлиентСервер.ТекущийПользователь(),
		ПланыВидовХарактеристик.Scan_ПраваИНастройки.РазрешитьИзменятьСрокУстраненияНедостатков);
	//rarus sergei 16.08.2016 mantis 7110 --
	//rarus tenkam 29.07.2016 mantis 7163 ++
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	//rarus tenkam 29.07.2016 mantis 7163 --
	
	//rarus tenkam 14.08.2017 mantis 10490 +++
    // Обработчик подсистемы запрета редактирования реквизитов объектов
    ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	//rarus tenkam 14.08.2017 mantis 10490 ---
	
	УправлениеДиалогомНаСервере();   
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Параметры.Свойство("МодельПродукта") Тогда
			Если ЗначениеЗаполнено(Параметры.МодельПродукта) Тогда
				Объект.МодельПродукта = Параметры.МодельПродукта;	
			КонецЕсли; 
		КонецЕсли;
		Если Параметры.Свойство("СпецификацияПродукта") Тогда
			Если ЗначениеЗаполнено(Параметры.СпецификацияПродукта) Тогда
				Объект.СпецификацияПродукта = Параметры.СпецификацияПродукта;
			КонецЕсли;
		КонецЕсли;
		СписокДокументов.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Справочники.Scan_Изделия.ПустаяСсылка()); 	//rarus tenkam 03.08.2016 mantis 7219 + (документы)
		Местоположение.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Справочники.Scan_Изделия.ПустаяСсылка());	//rarus tenkam 05.10.2016 mantis 7183 +	
		ХарактеристикиАКБ.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Справочники.Scan_Изделия.ПустаяСсылка());	//rarus tenkam 05.09.2017 mantis 9425 +	
		СоставИзделия.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Справочники.Scan_Изделия.ПустаяСсылка());		// rarus tenkam 24.06.2019 mantis 14427 +	
		
	Иначе	
		//Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВесПродукта     = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Вес);
		ДлинаПродукта   = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Длина);
		ВысотаПродукта  = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Высота);
		ШиринаПродукта  = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Ширина);	//rarus tenkam 03.06.2016 mantis 7009 +
		//rarus bonmak 14621 15.07.2019 ++
		ГосударственныйНомер     			= Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГосударственныйНомер);
		ГосударственныйНомерДатаПолучения   = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГосударственныйНомерДатаПолучения);
		//rarus bonmak 14621 15.07.2019 --
		
		//rarus BProg_Dekin 27.05.2020 mantis 0015893 ++
		ГодВыпускаПродукта 		= Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГодВыпускаПродукта);
		ДатаВводаДанныхОПробеге = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ДатаВводаДанныхОПробеге);
		Пробег 					= Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Пробег);
		Если НЕ ЗначениеЗаполнено(ГодВыпускаПродукта) И Объект.МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania И НЕ Объект.БУ Тогда
			ОбъектКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.FinishDate);
			ГодВыпускаПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Объект.ЗаказНаЗавод, ОбъектКлючевойДаты, Перечисления.Scan_КлючевыеДаты.FinishDate);		
		КонецЕсли;
		//rarus BProg_Dekin 27.05.2020 mantis 0015893 --
		
		// rarus tenkam 09.09.2019 mantis 14827 +++
		НомерБортовогоУстройстваПлатон = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.НомерБортовогоУстройстваПлатон);
		// rarus tenkam 09.09.2019 mantis 14827 ---
		
		//КомплектностьПоставки  = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.КомплектностьПоставки);	//rarus tenkam 07.05.2019 mantis 14301 + //rarus bonmak 04.07.2019 14301
		
		// rarus tenkam 06.06.2019 mantis 13865 +++
		////Получить последнюю модель (ПТС)
		//Объект.МодельПродукта	    = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Модель);
		////rarus sergei 13.07.2016 mantis 7171 ++
		////Получить последнюю спецификацию
		//Объект.СпецификацияПродукта	    = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Спецификация);
		////rarus sergei 13.07.2016 mantis 7171 --
		Объект.МодельПродукта	   		= Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.МодельПродукта);
		//Объект.СпецификацияПродукта	    = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.СпецификацияПродукта); //rarus bonmak 19.05.2021 17615
		// rarus tenkam 06.06.2019 mantis 13865 ---
		
		ЗаполнитьЗамечанияИзРегистра();
		
		СписокДокументов.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие",Объект.Ссылка); 	//rarus tenkam 03.08.2016 mantis 7219 + (документы)
		Местоположение.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Объект.Ссылка);		//rarus tenkam 05.10.2016 mantis 7183 +
		ХарактеристикиАКБ.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Объект.Ссылка);	//rarus tenkam 05.09.2017 mantis 9425 +
		СоставИзделия.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Объект.Ссылка);		// rarus tenkam 24.06.2019 mantis 14427 +	
		//rarus bonmak 08.10.2019 14177 ++
		СпецификацияПродукта = Справочники.Scan_СпецификацииПродуктов.ПолучитьСпецификациюПоИзделию(Объект.Ссылка);
		//rarus bonmak 08.10.2019 14177 --
		//Объект.СоглашениеОПоставке = РегистрыСведений.Scan_СоставСоглашенийОПоставке.ПолучитьСоглашениеОПоставке(Объект.Ссылка); //rarus ozhnik 15888 13.08.2020 +- //rarus vikhle 23.11.2020 mt 16181
		//rarus agar 13.08.2020 16138 ++
		КлиентЗаказаНаЗавод = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(Объект.ЗаказНаЗавод, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.Клиент);
		//rarus agar 13.08.2020 16138 --
		
		//rarus vikhle 07.09.2020 mt 16181 +++
		Если НЕ Объект.СоглашениеОПоставке.Пустая() Тогда
			СтрокаТЧСоглашения = Объект.СоглашениеОПоставке.СписокПродуктов.Найти(Объект.Ссылка,"Продукт");
			Если НЕ СтрокаТЧСоглашения = Неопределено Тогда
				Драйв = СтрокаТЧСоглашения.ПроцентДрайв;
				СпециальныеУсловия = СтрокаТЧСоглашения.СпециальныеУсловия;
			КонецЕсли;	
		КонецЕсли;
		//rarus vikhle 07.09.2020 mt 16181 ---
	КонецЕсли;
	
	//rarus tenkam 03.08.2016 mantis 7219 ++ (документы)
	СписокДокументовДляОтбора = Справочники.Scan_Изделия.СформироватьСписокДокументов(); 
	Элементы.ОтборДокументы.СписокВыбора.ЗагрузитьЗначения(СписокДокументовДляОтбора);
	//rarus tenkam 03.08.2016 mantis 7219 -- (документы)
	
	Scan_УправлениеДиалогомСервер.СформироватьУсловноеОформление(ЭтаФорма, Справочники.Scan_СостоянияАКБ,"Состояние",,,"ХарактеристикиАКБ");		//rarus tenkam 05.09.2017 mantis 9425 +
	
	//rarus tenkam 05.10.2017 mantis 9426 +++    	
	СписокКодовНеисправностей = Элементы.ТабЗамечанияПоАктамКодНеисправностиКод.СписокВыбора;
	ПолучитьСписокКодовНеисправностей(СписокКодовНеисправностей);
	СписокКодовДефектов = Элементы.ТабЗамечанияПоАктамКодДефектаКод.СписокВыбора;
	ПолучитьСписокКодовДефектов(СписокКодовДефектов);
	
	Если Параметры.Свойство("ОткрытьЗамечания") Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗамечания;
	КонецЕсли;
	//rarus tenkam 05.10.2017 mantis 9426 ---
	
	// rarus tenkam 24.05.2019 mantis 14224 +++
	ОбновитьКлючевыеДаты();
	// rarus tenkam 24.05.2019 mantis 14224 ---
	
	//rarus vikhle 11.11.2021 m 18471 +++
	//ОграничитьДоступностьФормыПриОткрытииИзРабочегоМестаДилера(); //rarus BProg_Dekin 27.05.2020 mantis 0015893 +-	
	ОграничитьДоступностьФормыДляДилеров();
	//rarus vikhle 11.11.2021 m 18471 ---
	Scan_СборСтатистики.ВыполнитьРегистрациюСтатистики("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним, "Открытие старой формы");	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	//rarus tenkam 29.07.2016 mantis 7163 ++
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	//rarus tenkam 29.07.2016 mantis 7163 --
	//rarus sergei 29.08.2016 mantis 7110 ++
	НастроитьДопСрокУстраненияНедостатков();
	//rarus sergei 29.08.2016 mantis 7110 --
КонецПроцедуры
//rarus sergei 12.08.2016 mantis 7110 --

//rarus sergei 29.08.2016 mantis 7110 ++
&НаСервере
Процедура НастроитьДопСрокУстраненияНедостатков()
	Если Объект.НеРазрешеноМенятьСрокУстраненияНедостатков = Ложь Тогда
		Элементы.ГруппаСрокУстраненияНедостатковИПодсказка.Видимость = Истина;
	Иначе 	
	    Элементы.ГруппаСрокУстраненияНедостатковИПодсказка.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//rarus tenkam 29.07.2016 mantis 7163 ++
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	//rarus tenkam 29.07.2016 mantis 7163 --
	
	// rarus tenkam 25.09.2019 mantis 14979 +++
	////rarus sergei 08.07.2016 mantis 7171 ++
	//Объект.СозданВручную = Истина;
	////rarus sergei 08.07.2016 mantis 7171 --
	// rarus tenkam 25.09.2019 mantis 14979 ---
		
	//Если Объект.ТипПродукта.ВидПродукта.ГруппаПродукта = Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства И
	//	НЕ ЗначениеЗаполнено(Объект.НомерИзделия) Тогда
	//	//rarus FominskiyAS 19.04.2019  mantis 14191 +++
	//	//Сообщить("Поле ""Номер изделия"" не заполнено!");
	//	Сообщить(НСтр("ru = 'Поле ""Номер продукта"" не заполнено!'; en = 'Product number is not filled!'"));
	//	//rarus FominskiyAS 19.04.2019  mantis 14191 ---  	
	//	Отказ = Истина;
	//КонецЕсли;

	//rarus tenkam 29.07.2016 mantis 7219 ++ осаго
	//проверим номер полиса на уникальность
	Если ЗначениеЗаполнено(Объект.НомерПолисаОСАГО) И ЭтоНомерПолисаДругогоИзделия() Тогда
		Отказ = Истина;
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить("Номер полиса соответствует другому продукту!");
		Сообщить(НСтр("ru = 'Номер полиса соответствует другому продукту!'; en = 'Insurance policy number fits to another product!'"));
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
	КонецЕсли;
	//rarus tenkam 29.07.2016 mantis -- осаго
	
	//rarus tenkam 09.10.2017 mantis 9426 +++   	
	Для Индекс = 0 по ТабЗамечанияПоАктам.Количество()-1 Цикл
		ТекСтрокаЗамечания = ТабЗамечанияПоАктам.Получить(Индекс);
		Если Не ЗначениеЗаполнено(ТекСтрокаЗамечания.ДатаОбнаружения) Тогда
			Сообщение = Новый СообщениеПользователю();
			//rarus FominskiyAS 24.04.2019  mantis 14191 +++
			//Сообщение.Текст = "В строке " + (Индекс + 1) + " не заполнена дата обнаружения";
			Сообщение.Текст = НСтр("ru = 'В строке '; en = 'In line '") + (Индекс + 1) + НСтр("ru = ' не заполнена дата обнаружения'; en = ' detection date is not filled'");
			//rarus FominskiyAS 24.04.2019  mantis 14191 ---  
			Сообщение.Поле = "ТабЗамечанияПоАктам[" + Индекс + "].ДатаОбнаружения";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		// rarus tenkam 10.10.2019 mantis 15044 +++
		Если НЕ ЗначениеЗаполнено(ТекСтрокаЗамечания.Замечание) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'В строке '; en = 'In line '") + (Индекс + 1) + НСтр("ru = ' не заполнено замечание. Проверьте корректность кода/наименования неисправности и дефекта.'; en = ' comment is not filled'");
			Сообщение.Поле = "ТабЗамечанияПоАктам[" + Индекс + "].Замечание";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;  	
		КонецЕсли;     		
		// rarus tenkam 10.10.2019 mantis 15044 ---
	КонецЦикла;   	       
	//rarus tenkam 09.10.2017 mantis 9426 ---
	//rarus bonmak 07.08.2020 14375 ++
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Объект.IDExternalSystemProduct) Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ОтправитьРеквизитБУВ1БД", ИСТИНА); 
	КонецЕсли;
	//rarus bonmak 07.08.2020 14375 --
	
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
  
КонецПроцедуры
//rarus sergei 25.08.2016 mantis 7163 --

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//rarus tenkam 14.08.2017 mantis 10490 +++
    // Обработчик подсистемы запрета редактирования реквизитов объектов
    ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	//rarus tenkam 14.08.2017 mantis 10490 ---

	НаДату = ТекущаяДата();
	//rarus tenkam 16.12.2016 mantis 6897 ++ (перенесла в ПриЗаписи в модуль объекта)
	//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, Объект.VIN,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.VIN, НаДату);
	//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, Объект.ТипПродуктаЛогистический,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ТипПродуктаЛогистика, НаДату);
	//rarus tenkam 16.12.2016 mantis 6897 --
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ВесПродукта,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Вес, НаДату);
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ДлинаПродукта,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Длина, НаДату);
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ВысотаПродукта,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Высота, НаДату);
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ШиринаПродукта,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Ширина, НаДату);	//rarus tenkam 03.06.2016 mantis 7009 +
	//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, КомплектностьПоставки,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.КомплектностьПоставки, НаДату);	//rarus tenkam 07.05.2019 mantis 14301 + //rarus bonmak 04.07.2019 14301
	//rarus bonmak 14621 15.07.2019 ++
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ГосударственныйНомер,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГосударственныйНомер, НаДату);
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ГосударственныйНомерДатаПолучения,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГосударственныйНомерДатаПолучения, НаДату);
	//rarus bonmak 14621 15.07.2019 --

	//rarus BProg_Dekin 27.05.2020 mantis 0015893 ++
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ГодВыпускаПродукта ,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ГодВыпускаПродукта, НаДату);
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ДатаВводаДанныхОПробеге,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ДатаВводаДанныхОПробеге, НаДату);
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, Пробег ,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Пробег, НаДату);
	//rarus BProg_Dekin 27.05.2020 mantis 0015893 --
	
	// rarus tenkam 09.09.2019 mantis 14827 +++
	Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, НомерБортовогоУстройстваПлатон,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.НомерБортовогоУстройстваПлатон, НаДату);
	// rarus tenkam 09.09.2019 mantis 14827 ---
	
	//rarus tenkam 16.12.2016 mantis 6897 ++ (перенесла в ПриЗаписи в модуль объекта)
	//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, Объект.МодельПродукта,Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Модель, НаДату);
	//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, Объект.ТипПродукта, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ТипПродукта, НаДату);
	//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, Объект.ТипПродуктаМаркетинговый, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ТипПродуктаМаркетинговый, НаДату);
	//Справочники.Scan_Изделия.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, Объект.СпецификацияПродукта, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.Спецификация, НаДату);
	//rarus tenkam 16.12.2016 mantis 6897 --
	
	// rarus tenkam 20.06.2019 mantis 14427 +++
	//Если Объект.ТипПродукта.ВидПродукта.ГруппаПродукта = Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства Тогда
	//	ЗаписатьСоставВРегистр();
	//КонецЕсли;
	// rarus tenkam 20.06.2019 mantis 14427 ---
		
	ЗаписатьЗамечанияВРегистр();
	ЗаполнитьЗамечанияИзРегистра();
	
	ЗаписатьДанныеПолисаОСАГОВРегистр();
	
	// rarus tenkam 12.08.2019 mantis 14427 +++
	//Если УДанногоИзделияНетПродукта(Объект.Ссылка) Тогда
	//	СоздатьПродуктПоИзделию();		
	//КонецЕсли;
	// rarus tenkam 12.08.2019 mantis 14427 ---
	
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие",Объект.Ссылка); 	//rarus tenkam 03.08.2016 mantis 7219 + (документы)
	Местоположение.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Объект.Ссылка);		//rarus tenkam 05.10.2016 manris 7183 +
	ХарактеристикиАКБ.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Объект.Ссылка);	//rarus tenkam 05.09.2017 mantis 9425 +
	СоставИзделия.Параметры.УстановитьЗначениеПараметра("ИскомоеИзделие", Объект.Ссылка);		// rarus tenkam 24.06.2019 mantis 14427 +	
	
	// rarus tenkam 10.07.2018 mantis 13210 +++
	// rarus tenkam 12.08.2019 mantis 14427 +++
	// rarus tenkam 10.07.2018 manris 13210 +++
	//текПродукт = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(Объект.Ссылка);
	//Если ЗначениеЗаполнено(текПродукт) И ЗначениеЗаполнено(текПродукт.ПродуктВАрхиве) Тогда
	ПродуктВАрхиве = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Объект.Ссылка,
		Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве),
		Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве,ТекущаяДата());
	Если ЗначениеЗаполнено(ПродуктВАрхиве) Тогда
	// rarus tenkam 12.08.2019 mantis 14427 ---
		Элементы.ГруппаФон.ЦветФона = Новый Цвет(255, 227, 227);	
	ИначеЕсли Объект.БУ Тогда
		Элементы.ГруппаФон.ЦветФона = WebЦвета.СветлоЖелтыйЗолотистый;  		
	Иначе
		Элементы.ГруппаФон.ЦветФона = Новый Цвет(240,240,240); 		
	КонецЕсли;
	// rarus tenkam 10.07.2018 mantis 13210 --- 
	
	// rarus tenkam 24.05.2019 mantis 14224 +++
	ЗаписатьКлючевыеДаты();
	// rarus tenkam 24.05.2019 mantis 14224 ---
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//rarus tenkam 29.07.2016 mantis 7163 ++
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	//rarus tenkam 29.07.2016 mantis 7163 --
	
	//rarus pechek 30.01.2020 mantis 15653 +++
	//повторное чтение ключевых дат в открытой форме
	Если ИмяСобытия = "ИзмененияКлючевыхДатВФорме" Тогда 
		ОбновитьКлючевыеДаты();
	КонецЕсли;
	//rarus pechek 30.01.2020 mantis 15653 ---
	
	// rarus agar 02.09.2021 17205 ++
	Если ИмяСобытия = "ЗаписьЭПТС"
		И Параметр = Объект.Ссылка
		Тогда
		ЭтотОбъект.Прочитать();
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	// rarus agar 02.09.2021 17205 --
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	//rarus tenkam 29.07.2016 mantis 7163 ++
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	//rarus tenkam 29.07.2016 mantis 7163 --
	
	// rarus agar 12.08.2021 17205 ++
	Если Не Объект.ЭПТС.Пустая() Тогда
		РеквизитыЭПТС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ЭПТС, "НомерЭПТС,СтатусЭПТС");
		
		НомерЭПТС  = РеквизитыЭПТС.НомерЭПТС;
		СтатусЭПТС = РеквизитыЭПТС.СтатусЭПТС;
	КонецЕсли;
	// rarus agar 12.08.2021 17205 --
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	//rarus tenkam 29.07.2016 mantis 7163 ++
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	//rarus tenkam 29.07.2016 mantis 7163 --
КонецПроцедуры

//rarus sergei 12.08.2016 mantis 7110 ++
Процедура УстановитьВидимостьГруппыСрокУстраненияНедостатков()
	Если Объект.НеРазрешеноМенятьСрокУстраненияНедостатков = Истина Тогда
		
		Элементы.ГруппаСрокУстраненияНедостатковИПодсказка.Видимость = Ложь;
	Иначе
		Элементы.ГруппаСрокУстраненияНедостатковИПодсказка.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

//rarus tenkam 29.07.2016 mantis 7163 --
//////////////////////////////////////////////////////////////////////////////////
//// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

//Процедура ОграничитьДоступностьФормыПриОткрытииИзРабочегоМестаДилера() //rarus BProg_Dekin 27.05.2020 mantis 0015893 +-
&НаСервере
Процедура ОграничитьДоступностьФормыДляДилеров() //rarus vikhle 11.11.2021 m 18471 переименовал процедуру	
	
	//rarus vikhle 11.11.2021 m 18471 +++
	//Если НЕ Параметры.ФормаОткрытаИзРабочегоМестаДилера Тогда
	//	Возврат;
	//КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Если ЗначениеЗаполнено(ТекущийПользователь) Тогда
		ПользовательСотрудник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ПользовательСотрудник");
		
		Если ПользовательСотрудник Тогда
			Возврат;
		КонецЕсли;	
		
	КонецЕсли;	
	//rarus vikhle 11.11.2021 m 18471 ---
	
	Для Каждого Элемент Из Элементы Цикл
		Если (ТипЗнч(Элемент) = Тип("ГруппаФормы") И (Элемент.Вид = ВидГруппыФормы.Страницы ИЛИ Элемент.Вид = ВидГруппыФормы.Страница))
		ИЛИ ТипЗнч(Элемент) = Тип("ДекорацияФормы") ИЛИ Элемент = Элементы.ФормаПеречитать ИЛИ Элемент = Элементы.ГруппаФон
		ИЛИ Элемент = Элементы.ФормаОбновитьЭлемент ИЛИ Элемент = Элементы.ФормаСравнениеСпецификаций //rarus vikhle 16.02.2021 mt 17252
		ИЛИ Элемент = Элементы.ФормаГруппаИнтеграция ИЛИ Элемент = Элементы.ФормаГруппаОтчеты Тогда //rarus vikhle 16.02.2021 mt 17252
			Продолжить;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Элемент.Имя, "Доступность", Ложь);
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаКлючевыеДаты", "Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СебестоимостьЛогистическая", "Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажи", "Видимость", Ложь);
	
	//rarus agar 04.02.2021 17123 ++
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУ",          "Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУБезНДС",    "Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУСтавкаНДС", "Видимость", Ложь);
	//rarus agar 04.02.2021 17123 --
	
	КоманднаяПанель.Доступность = Истина;
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	Если Объект.ТипПродукта.ВидПродукта.ГруппаПродукта = Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства Тогда
		
		Элементы.VIN.Видимость = Истина;
		
		// rarus tenkam 20.06.2019 mantis 14427 +++
		//Элементы.ГруппаСостав.Видимость = Истина;
		//
		////rarus tenkam 03.06.2016 mantis 7009 ++
		//Если Объект.ТипПродукта.ВидПродукта.Родитель = Справочники.Scan_ВидыПродуктов.ПрицепнаяТехника Тогда
		//	Элементы.ВСоставе.Заголовок = "В составе";
		//Иначе
		//	Элементы.ВСоставе.Заголовок = "Состав";
		//КонецЕсли;
		////rarus tenkam 03.06.2016 mantis 7009 --
		// rarus tenkam 20.06.2019 mantis 14427 ---
		
	Иначе
		Элементы.VIN.Видимость = Ложь;
		Объект.VIN = "";
		// rarus tenkam 20.06.2019 mantis 14427 +++
		//Элементы.ГруппаСостав.Видимость = Ложь;		//rarus tenkam 03.06.2016 mantis 7009 +
		// rarus tenkam 20.06.2019 mantis 14427 ---
		
	КонецЕсли;
	
	//rarus tenkam 07.03.2017 mantis 7100 +++
	////rarus sergei 08.08.2016 mantis 7100 ++
	//Если ЗначениеЗаполнено(Объект.ТахографСЗаводаСкания) Тогда
	//	Элементы.ДекорацияРасшифровкаПоТахографу.Видимость = Истина;
	//	Элементы.ДекорацияРасшифровкаПоТахографу.Заголовок = Объект.ТахографСЗаводаСкания.Расшифровка;
	//Иначе
	//	Элементы.ДекорацияРасшифровкаПоТахографу.Видимость = Ложь;
	//КонецЕсли; 
	////rarus sergei 08.08.2016 mantis 7100 --
	//rarus tenkam 07.03.2017 mantis 7175 ---
	
	//// rarus tenkam 20.06.2019 mantis 14427 +++
	//ВСоставе = ПолучитьПродуктВСоставе();	//rarus tenkam 03.06.2016 mantis 7009 +
	//// rarus tenkam 20.06.2019 mantis 14427 ---
		
	
	//rarus sergei 12.08.2016 mantis 7110 ++
	
	//rarus tenkam 18.10.2016 mantis 6897 ++
	Элементы.ФормаГруппаИнтеграция.Видимость = Scan_ПраваИНастройки.Scan_Право("ОбменСПредставительством");
	Элементы.ФормаОбновитьЭлемент.Доступность = (ЗначениеЗаполнено(Объект.IDExternalSystem) ИЛИ ЗначениеЗаполнено(Объект.IDExternalSystemProduct)); //rarus bonmak 07.08.2020 14375 добавил второе или
	
	Если ЗначениеЗаполнено(Объект.ДатаОбновления) Тогда
		Элементы.ФормаОбновитьЭлемент.Заголовок = Объект.ДатаОбновления;
		//rarus tenkam 24.03.2017 mantis 9109 +++
		Элементы.НомерИзделия.ТолькоПросмотр = Истина;
		Элементы.VIN.ТолькоПросмотр = Истина;
	Иначе
		Элементы.НомерИзделия.ТолькоПросмотр = Ложь;
		Элементы.VIN.ТолькоПросмотр = Ложь;
		//rarus tenkam 24.03.2017 mantis 9109 ---
	КонецЕсли;
	//rarus tenkam 18.10.2016 mantis 6897 --
	
	// rarus tenkam 12.08.2019 mantis 14427 +++
	// rarus tenkam 10.07.2018 manris 13210 +++
	//	текПродукт = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(Объект.Ссылка);
	//Если ЗначениеЗаполнено(текПродукт) И ЗначениеЗаполнено(текПродукт.ПродуктВАрхиве) Тогда
	ПродуктВАрхиве = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Объект.Ссылка,
		Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве),
		Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве,ТекущаяДата());
	Если ЗначениеЗаполнено(ПродуктВАрхиве) Тогда
	// rarus tenkam 12.08.2019 mantis 14427 ---
		Элементы.ГруппаФон.ЦветФона = Новый Цвет(255, 227, 227);	
	ИначеЕсли Объект.БУ Тогда
		Элементы.ГруппаФон.ЦветФона = WebЦвета.СветлоЖелтыйЗолотистый;  		
	Иначе
		Элементы.ГруппаФон.ЦветФона = Новый Цвет(240,240,240); 		
	КонецЕсли;
	// rarus tenkam 10.07.2018 mantis 13210 ---
	
	Элементы.ЛокальныйСтатусПродукта.ТолькоПросмотр = НЕ РольДоступна("ПолныеПрава"); //rarus bonmak 19.03.2021 17493 НЕ Scan_ПраваИНастройки.Scan_Право("РазрешатьИзменениеСтатусовПродуктов"); //rarus BProg_Dekin 18.05.2020 mantis 0015999 +- 
	Элементы.СОП.ТолькоПросмотр 					= НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьСОП"); //rarus bonmak 25.03.2021 17443

	ОграничитьДоступностьИзмененияКлючевойДаты(); //rarus BProg_Dekin 14.11.2019 0014452 +- Ограничение доступности колонок ключевых дат
	
	//rarus ozhnik 17366 17.03.2021 + 
	ОграничитьДоступностьИзмененияКлиентПродавецПродукта();
	//rarus ozhnik 17366 17.03.2021 -
	
	//rarus agar 05.04.2021 17394 ++
	РазрешатьРедактироватьТипСпецификацииПродукта = Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьТипСпецификацииПродукта");
	ЭтоSTD = Объект.ТипСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std");
	//rarus agar 18.08.2020 16138 ++
	//Элементы.ТипСпецификации.ТолькоПросмотр = Не Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьТипСпецификацииПродукта");
	//rarus agar 18.08.2020 16138 --
	Элементы.ТипСпецификации.ТолькоПросмотр         = Не РазрешатьРедактироватьТипСпецификацииПродукта;
	Элементы.СтандартнаяСпецификация.ТолькоПросмотр = Не РазрешатьРедактироватьТипСпецификацииПродукта Или Не ЭтоSTD;
	//rarus agar 05.04.2021 17394 --
	
	// rarus tenkam 21.08.2020 mantis 16422 +++	
	Если Объект.ТипПродукта.ВидПродукта = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили") Тогда
		ТягачШасси = Объект.МодельПродукта.ТягачШасси;
	Иначе
		ТягачШасси = ПредопределенноеЗначение("Перечисление.Scan_ПризнакТягачШасси.ПустаяСсылка");
	КонецЕсли;
	// rarus tenkam 21.08.2020 mantis 16422 ---
	
	//rarus agar 19.01.2021 16981 ++
	ТипСНадстройкой = Справочники.Scan_ТипыПродуктов.ПолучитьПризнакНаличияНастройки(Объект.ТипПродукта);
	Если ТипСНадстройкой = Неопределено Тогда
		Элементы.СкладПродажи.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСНадстройкой Тогда
		Элементы.СкладПродажи.ТолькоПросмотр = Не Scan_ПраваИНастройки.Scan_Право("РазрешитьИзменятьСкладПродажиДляПродуктовСНадстройкой");
	ИначеЕсли Не ТипСНадстройкой Тогда
		Элементы.СкладПродажи.ТолькоПросмотр = Не Scan_ПраваИНастройки.Scan_Право("РазрешитьИзменятьСкладПродажиДляПродуктовБезНадстройки");
	КонецЕсли;
	
	Элементы.ЗапретИзмененияСкладаПродажи.ТолькоПросмотр = Не Scan_ПраваИНастройки.Scan_Право("РазрешатьУстанавливатьЗапретНаИзменениеСкладаПродажи");
	//rarus agar 19.01.2021 16981 --
	
	//rarus agar 04.02.2021 17123 ++
	ПользовательЯвляетсяСотрудникомСканияРусь = Scan_ПраваИНастройки.Scan_Право("ПользовательЯвляетсяСотрудникомСканияРусь");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУ",          "Видимость", ПользовательЯвляетсяСотрудникомСканияРусь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУБезНДС",    "Видимость", ПользовательЯвляетсяСотрудникомСканияРусь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУСтавкаНДС", "Видимость", ПользовательЯвляетсяСотрудникомСканияРусь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СкладПродажи", "Видимость", ПользовательЯвляетсяСотрудникомСканияРусь); //rarus vikhle 16.02.2021 mt 16981
	
	РазрешитьРедактироватьСтоимостьПродажиПродуктаБУ = Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьСтоимостьПродажиПродуктаБУ");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУ",          "ТолькоПросмотр", Не РазрешитьРедактироватьСтоимостьПродажиПродуктаБУ);
	//ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУБезНДС",    "ТолькоПросмотр", Не РазрешитьРедактироватьСтоимостьПродажиПродуктаБУ); //rarus vikhle 13.05.2021 mt 17733 всегда недоступно
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтоимостьПродажиБУСтавкаНДС", "ТолькоПросмотр", Не РазрешитьРедактироватьСтоимостьПродажиПродуктаБУ);
	//rarus agar 04.02.2021 17123 --
	
	// rarus tenkam 18.02.2021 mantis 17190 +++
	РазрешитьРедактироватьDLV = Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьDLV");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "DLV", "ТолькоПросмотр", Не РазрешитьРедактироватьDLV);
	// rarus tenkam 18.02.2021 mantis 17190 ---
	
	//rarus vikhle 09.11.2021 m 18485 +++
	Если ЗначениеЗаполнено(Объект.КомментарийДилера) Тогда
		Элементы.КомментарийДилера.РежимПароля = НЕ Справочники.Scan_Изделия.КомментарийДилераДоступен(Объект.СоглашениеОПоставке);
	КонецЕсли;	
	//rarus vikhle 09.11.2021 m 18485 ---
	
	// Дальнейшие операции выпольняются только для новых документов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	Объект.НеРазрешеноМенятьСрокУстраненияНедостатков = Истина;
	Элементы.ГруппаСрокУстраненияНедостатковИПодсказка.Видимость = Ложь;
	//rarus sergei 12.08.2016 mantis 7110 --
	
КонецПроцедуры 

&НаСервере
Процедура ОграничитьДоступностьИзмененияКлючевойДаты() //rarus BProg_Dekin 14.11.2019 0014452 +- Ограничение доступности колонок ключевых дат
		
	ДоступныеДляРедактированияКолонки = Новый Массив;
	Для Каждого Колонка Из Элементы.КлючевыеДаты.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Колонка) = Тип("ПолеФормы") Тогда
			ИмяПеречисления		= СтрЗаменить(Колонка.Имя, "КлючевыеДаты", "");
			ВидКлючевойДаты 	= ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты." + ИмяПеречисления);
			ОбъектКлючевойДаты 	= Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(ВидКлючевойДаты); 
			
			Если ОбъектКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_ОбъектыКлючевыхДат.Изделие") Тогда
				Если ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ПродуктВАрхиве") Тогда
					Если Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьДатуПродуктВАрхиве") Тогда
						ДоступныеДляРедактированияКолонки.Добавить(Колонка.ПутьКДанным);	
					КонецЕсли;
				Иначе
					//rarus bonmak 18.05.2020 14375 ++ добавил условие
					Если ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ДатаПередачиБУИзделияДилеру") 
						ИЛИ ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ДатаПоступленияИзделияНаСклад")
						ИЛИ ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ДатаПоступленияИзделияБУНаСклад") Тогда
					Иначе
						ДоступныеДляРедактированияКолонки.Добавить(Колонка.ПутьКДанным);
					КонецЕсли;
					//rarus bonmak 18.05.2020 14375 --
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;		
	
	Для Каждого Колонка Из Элементы.КлючевыеДаты.ПодчиненныеЭлементы Цикл
		// rarus agar 08.01.2021 17207 ++
		Если ТипЗнч(Колонка) = Тип("ПолеФормы") Тогда
			ИмяКолонки			= Колонка.Имя;
			//	ТолькоПросмотрКолонки = (ДоступныеДляРедактированияКолонки.Найти(Колонка.ПутьКДанным) = Неопределено);
			//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяКолонки, "ТолькоПросмотр", ТолькоПросмотрКолонки);
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяКолонки, "ТолькоПросмотр", Истина);
		КонецЕсли;
		// rarus agar 08.01.2021 17207 --
	КонецЦикла;
КонецПроцедуры

//rarus ozhnik 17366 17.03.2021 + 
&НаСервере
Процедура ОграничитьДоступностьИзмененияКлиентПродавецПродукта();
	ОграничитьДоступность = ложь;
	// Условия редактирования:
	// 1. Право РазрешатьРедактироватьТипСпецификацииПродукта - истина
	// 2. ПользовательСотрудник = истина
	// 3. Если ПользовательСотрудник = ложь, то дополнительно - Клиент заявки заполнен и доступен пользователю
	Если Scan_ПраваИНастройки.Scan_Право("РазрешитьИзменятьКлиентаИПродавцаПродукта") Тогда
		Если не Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиентСервер.ТекущийПользователь(),"ПользовательСотрудник") Тогда
			Если не Объект.КлиентСоглашенияОПоставке.Пустая() Тогда
				ТаблицаКомпаний = РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПользователиКлиентСервер.ТекущийПользователь());
				КомпанияНайдена = ТаблицаКомпаний.Найти(Объект.КлиентСоглашенияОПоставке, "Контрагент");
				Если КомпанияНайдена = неопределено Тогда
					//Компания недоступна пользователю 
					ОграничитьДоступность = истина;		
				КонецЕсли; 	
			Иначе
				//Клиент незаполнен, редактировать нельзя
				ОграничитьДоступность = истина;
			КонецЕсли; 		
		Иначе
			//Условия 1 и 2 выполнены, редактировать можно
		КонецЕсли;
	Иначе 
		ОграничитьДоступность = истина;
	КонецЕсли; 
	
	Элементы.КлиентПродукта.ТолькоПросмотр = ОграничитьДоступность;
	Элементы.ПродавецПродукта.ТолькоПросмотр = ОграничитьДоступность;
	
КонецПроцедуры

//rarus ozhnik 17366 17.03.2021 -

// rarus tenkam 12.08.2019 mantis 14427 +++

//&НаСервере
//Процедура СоздатьПродуктПоИзделию()
//	
//	НовыйПродукт = Справочники.Scan_Продукты.СоздатьЭлемент();
//	НовыйПродукт.Наименование = Объект.Наименование;
//	НовыйПродукт.Изделие = Объект.Ссылка;
//	Справочники.Scan_Продукты.ЗаполнитьДанныеПоИзделию(НовыйПродукт, Объект.Ссылка);
//	СОП = ЗаполнитьСОП(НовыйПродукт.ПолучитьСсылкуНового());
//	Если ЗначениеЗаполнено(СОП) Тогда
//		НовыйПродукт.СОП = СОП;
//	КонецЕсли; 
//
//	НовыйПродукт.Записать();
//	КонецПроцедуры
//
//&НаСервере
//Функция ЗаполнитьСОП(Продукт)
//Запрос = Новый Запрос;
//Запрос.Текст = "ВЫБРАТЬ
//               |	Scan_ИсторияПоСОПСрезПоследних.Договор
//               |ИЗ
//               |	РегистрСведений.Scan_ИсторияПоСОП.СрезПоследних КАК Scan_ИсторияПоСОПСрезПоследних
//               |ГДЕ
//               |	Scan_ИсторияПоСОПСрезПоследних.Продукт = &СсылкаПродукт";
//Запрос.УстановитьПараметр("СсылкаПродукт", Продукт);
//Выборка = Запрос.Выполнить().Выбрать();
//Если Выборка.Следующий() Тогда
//	Возврат Выборка.Договор;
//	
//
//КонецЕсли; 
//	
//КонецФункции
//
//
//&НаСервереБезКонтекста
//Функция УДанногоИзделияНетПродукта(ИзделиеСсылка)
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	Scan_ВзаимосвязьИзделийПродуктовИЗаказов.Продукт
//	               |ИЗ
//	               |	РегистрСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов КАК Scan_ВзаимосвязьИзделийПродуктовИЗаказов
//	               |ГДЕ
//	               |	Scan_ВзаимосвязьИзделийПродуктовИЗаказов.Изделие = &Изделие";
//	Запрос.УстановитьПараметр("Изделие", ИзделиеСсылка);
//	Выборка = Запрос.Выполнить().Выбрать();
//	Возврат НЕ Выборка.Следующий();	
//КонецФункции
// rarus tenkam 12.08.2019 mantis 14427 ---

// rarus tenkam 24.05.2019 mantis 14224 ---

//////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ

&НаКлиенте
Процедура СпецификацияПродуктаПриИзменении(Элемент)
	//rarus bonmak 08.10.2019 14177 ++
	//СпецификацияПродуктаПриИзмененииНаСервере();
	//СформироватьНаименованиеПоНастройке("СпецификацияПродукта");
	//rarus bonmak 08.10.2019 14177 --
КонецПроцедуры

&НаСервере
Процедура СпецификацияПродуктаПриИзмененииНаСервере()
	Если (НЕ ЗначениеЗаполнено(Объект.МодельПродукта) ИЛИ Объект.МодельПродукта <> Объект.СпецификацияПродукта.МодельПродукта) И
		НЕ Объект.СпецификацияПродукта.Пустая() Тогда
		Объект.МодельПродукта = Объект.СпецификацияПродукта.МодельПродукта;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпецификацияПродуктаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//rarus bonmak 08.10.2019 14177 ++
	//Если ЗначениеЗаполнено(Объект.МодельПродукта) Тогда	//rarus tenkam 06.06.2016 mantis 7042 +
	//	СтандартнаяОбработка = Ложь;
	//	ЗначениеОтбора = Новый Структура("МодельПродукта", Объект.МодельПродукта);
	//	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	//    ПараметрыФормы.Вставить("МодельПродукта", Объект.МодельПродукта);	//rarus tenkam 06.06.2016 mantis 7042 +
	//	
	//	Результат = ОткрытьФорму("Справочник.Scan_СпецификацииПродуктов.ФормаВыбора",ПараметрыФормы,Элементы.СпецификацияПродукта); 
	//КонецЕсли;
	//rarus bonmak 08.10.2019 14177 --
КонецПроцедуры

//rarus tenkam 06.06.2016 mantis 7042 ++
&НаКлиенте
Процедура СпецификацияПродуктаСоздание(Элемент, СтандартнаяОбработка)
	//rarus bonmak 08.10.2019 14177 ++
	//СтандартнаяОбработка = Ложь;
	//ПараметрыСоздания = Новый Структура;
	//ПараметрыСоздания.Вставить("МодельПродукта", Объект.МодельПродукта);
	//ПараметрыСоздания.Вставить("Наименование",Элемент.ТекстРедактирования);  
	//ОткрытьФорму("Справочник.Scan_СпецификацииПродуктов.ФормаОбъекта", ПараметрыСоздания, Элемент)
	//rarus bonmak 08.10.2019 14177 --
КонецПроцедуры
//rarus tenkam 06.06.2016 mantis 7042 ---

&НаСервере
Процедура ОчиститьСпецификацию()
	Объект.СпецификацияПродукта = Справочники.Scan_СпецификацииПродуктов.ПустаяСсылка();	
КонецПроцедуры

&НаКлиенте
Процедура МодельПродуктаПриИзменении(Элемент)
	// очистим спецификацию
	ОчиститьСпецификацию();
	СформироватьНаименованиеПоНастройке("МодельПродукта");
	ЗаполнитьВГХПоМоделиПродукта();		//rarus tenkam 14.06.2016 mantis 7077 +
	Объект.МаркаПродукта = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.МодельПродукта,"МаркаПродукта"); //rarus vikhle 13.10.2020 mt 15693
КонецПроцедуры

&НаСервере
Процедура СформироватьНаименованиеПоНастройке(ИмяРеквизита)
	Наим = Справочники.Scan_Изделия.СформироватьНаименованиеПоНастройке(Объект,ИмяРеквизита);	//rarus tenkam 09.06.2016 mantis 7072 +
	Если Наим <> Неопределено Тогда
		Объект.Наименование = Наим;
	КонецЕсли;
	
КонецПроцедуры

//rarus tenkam 14.06.2016 mantis 7077 ++
&НаСервере
Процедура ЗаполнитьВГХПоМоделиПродукта()
	ДанныеВГХ = Справочники.Scan_Изделия.ЧтениеЗначенияРCВГХ(Объект.МодельПродукта);
	Если ДанныеВГХ <> Неопределено Тогда
		ВесПродукта = ДанныеВГХ.ВесПродукта;
		ДлинаПродукта = ДанныеВГХ.ДлинаПродукта;
		ВысотаПродукта = ДанныеВГХ.ВысотаПродукта;
		ШиринаПродукта = ДанныеВГХ.ШиринаПродукта;
		// rarus tenkam 28.04.2020 mantis 15891 +++
		//Элементы.ДекорацияПодсказка.Видимость = Истина;
		// rarus tenkam 28.04.2020 mantis 15891 ---
	Иначе
		// rarus tenkam 28.04.2020 mantis 15891 +++
		//Элементы.ДекорацияПодсказка.Видимость = Ложь;
		// rarus tenkam 28.04.2020 mantis 15891 ---
		ВесПродукта = 0;
		ДлинаПродукта = 0;
		ВысотаПродукта = 0;
		ШиринаПродукта = 0;		
	КонецЕсли;
	
КонецПроцедуры
//rarus tenkam 14.06.2016 mantis 7077 --

&НаКлиенте
Процедура НомерШассиПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("НомерИзделия");
КонецПроцедуры

&НаКлиенте
Процедура VINПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("VIN");
КонецПроцедуры

&НаКлиенте
Процедура ТипПродуктаПриИзменении(Элемент)
	УправлениеДиалогомНаСервере();
	СформироватьНаименованиеПоНастройке("ТипПродукта");
КонецПроцедуры

&НаКлиенте
Процедура ТипПродуктаЛогистическийПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("ТипПродуктаЛогистический");
КонецПроцедуры

&НаКлиенте
Процедура ТипПродуктаМаркетинговыйПриИзменении(Элемент)
	//СформироватьНаименованиеПоНастройке("ТипПродуктаМаркетинговый"); //rarus bonmak 04.09.2019 14442
КонецПроцедуры

&НаКлиенте
Процедура МаркаПродуктаПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("МаркаПродукта");
	//rarus vikhle 13.10.2020 mt 15693 +++
	МаркаМодели = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.МодельПродукта,"МаркаПродукта"); 
	Если НЕ МаркаМодели = Объект.МаркаПродукта И НЕ Объект.МаркаПродукта.Пустая() Тогда 
		Объект.МодельПродукта = ПредопределенноеЗначение("Справочник.Scan_МоделиПродуктов.ПустаяСсылка");
	КонецЕсли;
	//rarus vikhle 13.10.2020 mt 15693 ---
КонецПроцедуры

&НаКлиенте
Процедура МодельПТСПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("МодельПТС");
КонецПроцедуры

//rarus tenkam 10.03.2017 mantis 7187 +++
&НаКлиенте
Процедура ТипПоПТСПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("ТипТСПоПТС");
КонецПроцедуры

&НаКлиенте
Процедура НомерПТСПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("НомерПТС");
КонецПроцедуры

&НаКлиенте
Процедура VIN2ПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("VIN2");
КонецПроцедуры
//rarus tenkam 10.03.2017 mantis 7187 ---

//rarus tenkam 29.07.2016 mantis 7219 ++
//rarus bonmak 03.04.2020 15891 ++
//&НаКлиенте
//Процедура НомерНадстройкиПриИзменении(Элемент)
//	СформироватьНаименованиеПоНастройке("НомерНадстройки");
//КонецПроцедуры
//rarus bonmak 03.04.2020 15891 --

&НаКлиенте
Процедура МодельДвигателяТСПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("МодельДвигателяТС");
КонецПроцедуры

&НаКлиенте
Процедура НомерДвигателяТСПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("НомерДвигателяТС");
КонецПроцедуры

&НаКлиенте
Процедура ДатаИстеченияПолисаПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("ДатаИстеченияПолиса");
КонецПроцедуры

&НаКлиенте
Процедура НомерПолисаОСАГОПриИзменении(Элемент)
	СформироватьНаименованиеПоНастройке("НомерПолисаОСАГО");
КонецПроцедуры
//rarus sergei 12.08.2016 mantis 7110 --

//rarus sergei 03.11.2016 mantis 7030 ++
//rarus bonmak 15.04.2020 14456 ++
//&НаКлиенте
//Процедура ЗамечанияПоАктамМестоХраненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
//		ДанныеЗаполнения = ПроверитьНаличиеЗакрытыхЗаявок(ВыбранноеЗначение);
//		Если ДанныеЗаполнения<>Неопределено Тогда
//			ТекущийЭлемент.ТекущиеДанные.ТранспортнаяКомпания = ДанныеЗаполнения.Перевозчик;
//			ТекущийЭлемент.ТекущиеДанные.ДатаОбнаруженияНедостатка = ДанныеЗаполнения.ДатаДоставкиФакт; 
//			
//		
//		КонецЕсли;
//	КонецЕсли; 
//КонецПроцедуры
//rarus bonmak 15.04.2020 14456 --

// rarus tenkam 09.09.2019 mantis 14827 +++
&НаКлиенте
Процедура НомерБортовогоУстройстваПлатонПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры
// rarus tenkam 09.09.2019 mantis 14827 ---

&НаКлиенте
Процедура КлючевыеДатыПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

//rarus tenkam 29.07.2016 mantis 7163 ++
#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

//rarus tenkam 14.08.2017 mantis 10490 +++
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
КонецПроцедуры
//rarus tenkam 14.08.2017 mantis 10490 ---
#КонецОбласти

// rarus tenkam 24.05.2019 mantis 14224 ---

// rarus tenkam 20.06.2019 mantis 14427 +++
////rarus tenkam 03.06.2016 mantis 7009 ++
////////////////////////////////////////////////////////////////////////////////////
////// СОСТАВ

//&НаСервере
//Функция ПолучитьПродуктВСоставе()
//	
//	Если НЕ Объект.ТипПродукта.ВидПродукта.ГруппаПродукта = Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства ИЛИ
//		НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда	//rarus tenkam 09.06.2016 mantis 7074 +
//		Возврат Справочники.Scan_Изделия.ПустаяСсылка();
//	КонецЕсли;
//	
//	Запрос = Новый Запрос();
//	Если Объект.ТипПродукта.ВидПродукта.Родитель = Справочники.Scan_ВидыПродуктов.ПрицепнаяТехника Тогда
//				//если это прицеп, то получим ТС
//		Запрос.Текст = 	"ВЫБРАТЬ
//		               	|	Scan_ВзаимосвязьИзделий.ИзделиеТС КАК ИзделиеТС 
//	    	           	|ИЗ
//	        	       	|	РегистрСведений.Scan_ВзаимосвязьИзделий КАК Scan_ВзаимосвязьИзделий
//	            	   	|ГДЕ
//	               		|	Scan_ВзаимосвязьИзделий.ИзделиеПрицепнаяТехника = &Изделие";
//	Иначе 
//		//если это ТС, то получим прицеп
//		Запрос.Текст = 	"ВЫБРАТЬ
//		               	|	Scan_ВзаимосвязьИзделий.ИзделиеПрицепнаяТехника КАК ИзделиеТС 
//		               	|ИЗ
//		               	|	РегистрСведений.Scan_ВзаимосвязьИзделий КАК Scan_ВзаимосвязьИзделий
//		               	|ГДЕ
//		               	|	Scan_ВзаимосвязьИзделий.ИзделиеТС = &Изделие";
//	КонецЕсли;
//	
//	Запрос.УстановитьПараметр("Изделие",Объект.Ссылка);
//	Выборка = Запрос.Выполнить().Выбрать();
//	Если Выборка.Следующий() Тогда
//		Возврат Выборка.ИзделиеТС;
//	КонецЕсли;
//	Возврат Справочники.Scan_Изделия.ПустаяСсылка();
//КонецФункции

//&НаСервере
//Процедура ЗаписатьСоставВРегистр()
//	Если Объект.ТипПродукта.ВидПродукта.Родитель = Справочники.Scan_ВидыПродуктов.ПрицепнаяТехника Тогда
//		РегистрыСведений.Scan_ВзаимосвязьИзделий.ЗаписатьСоставВРегистр(ВСоставе, Объект.Ссылка);
//	Иначе
//		РегистрыСведений.Scan_ВзаимосвязьИзделий.ЗаписатьСоставВРегистр(Объект.Ссылка, ВСоставе);
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ВСоставеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//	Результат = ВСоставеОбработкаВыбораНаСервере(ВыбранноеЗначение);
//	Если НЕ Результат Тогда
//		СтандартнаяОбработка = Ложь;
//		ВСоставе = "";
//	КонецЕсли;
//КонецПроцедуры

//&НаСервере
//Функция ВСоставеОбработкаВыбораНаСервере(ПродуктСостав)
//	Если Объект.ТипПродукта.ВидПродукта.Родитель = Справочники.Scan_ВидыПродуктов.ПрицепнаяТехника Тогда
//		//Это прицеп
//		ПрикрепленныйПрицеп = РегистрыСведений.Scan_ВзаимосвязьИзделий.ПрицепПрикрепленныйКТС(ПродуктСостав);
//		Если ЗначениеЗаполнено(ПрикрепленныйПрицеп) И ПрикрепленныйПрицеп <> ПродуктСостав Тогда
//			Сообщить("Выбранный продукт <" + ПродуктСостав +"> уже связан с продуктом <" + ПрикрепленныйПрицеп.Наименование +">!");
//			Возврат Ложь;
//		КонецЕсли;
//	Иначе
//		//это ТС
//		ПрикрепленноеТС = РегистрыСведений.Scan_ВзаимосвязьИзделий.ТСПрикрепленноеКПрицепу(ПродуктСостав);
//		Если ЗначениеЗаполнено(ПрикрепленноеТС) И ПрикрепленноеТС <> ПродуктСостав Тогда
//			Сообщить("Выбранный продукт <" + ПродуктСостав +"> уже связан с продуктом <" + ПрикрепленноеТС.Наименование +">!");
//			Возврат Ложь;
//		КонецЕсли;
//	КонецЕсли;
//	Возврат Истина;
//КонецФункции

//&НаКлиенте
//Процедура ВСоставеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	СтандартнаяОбработка = Ложь;
//	Если Элементы.ВСоставе.Заголовок = "Состав" Тогда
//		ОткрытьФорму("Справочник.Scan_Изделия.ФормаВыбора", Новый Структура("ТолькоПрицепы", Истина), Элемент);
//	Иначе
//		ОткрытьФорму("Справочник.Scan_Изделия.ФормаВыбора", Новый Структура("ТолькоПрицепы", Ложь), Элемент);	
//	КонецЕсли;
//	
//КонецПроцедуры

////rarus tenkam 03.06.2016 mantis 7009 --
// rarus tenkam 20.06.2019 mantis 14427 ---

//rarus tenkam 28.07.2016 mantis 7219 ++ 
//////////////////////////////////////////////////////////////////////////////////
//// ЗАМЕЧАНИЯ

&НаСервере
Процедура ЗаполнитьЗамечанияИзРегистра()
	//rarus tenkam 05.10.2017 mantis 9426 +++
	//ЗамечанияПоАктам.Очистить();
	ТабЗамечанияПоАктам.Очистить();
	//rarus tenkam 05.10.2017 mantis 9426 ---
	ДанныеИзРегистра = РегистрыСведений.Scan_ЗамечанияПоАктамПриемоПередачи.ПолучитьЗамечанияПоИзделиюИзРегистра(Объект.Ссылка);
	Для Каждого СтрокаРегистра Из ДанныеИзРегистра Цикл
		//rarus tenkam 05.10.2017 mantis 9426 +++
		//НоваяСтрока = ЗамечанияПоАктам.Добавить();
		НоваяСтрока = ТабЗамечанияПоАктам.Добавить();
		//rarus tenkam 05.10.2017 mantis 9426 ---
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаРегистра);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗамечанияВРегистр()
	//rarus tenkam 05.10.2017 mantis 9426 +++
	//РегистрыСведений.Scan_ЗамечанияПоАктамПриемоПередачи.ЗаписатьЗамечанияПоИзделиюВРегистр(Объект.Ссылка,ЗамечанияПоАктам);
	РегистрыСведений.Scan_ЗамечанияПоАктамПриемоПередачи.ЗаписатьЗамечанияПоИзделиюВРегистр(Объект.Ссылка,ТабЗамечанияПоАктам);
	//rarus tenkam 05.10.2017 mantis 9426 ---
КонецПроцедуры

//rarus bonmak 15.04.2020 14456 ++
//&НаСервере
//Процедура СформироватьЗамечание()
	//ВремЗамечание = "";
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Устранено",Ложь);
	//НайденныеСтроки = ЗамечанияПоАктам.НайтиСтроки(ПараметрыОтбора);
	//Для Каждого СтрокаЗамечания Из НайденныеСтроки Цикл
	//	Если ВремЗамечание = "" Тогда
	//		ВремЗамечание = СокрЛП(СтрокаЗамечания.Замечание);
	//	Иначе
	//		ВремЗамечание = ВремЗамечание + ", " + СокрЛП(СтрокаЗамечания.Замечание);
	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	//Если ВремЗамечание = "" Тогда
	//	ВремЗамечание = "НОРМА";
	//КонецЕсли;
	//Объект.Замечание = ВремЗамечание;
	//Модифицированность = Истина;	
//КонецПроцедуры
//rarus bonmak 15.04.2020 14456 --

//rarus bonmak 15.04.2020 14456 ++
//&НаКлиенте
//Процедура ЗамечанияПоАктамПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
//	Если НЕ ОтменаРедактирования  И Элемент.ТекущиеДанные <> Неопределено Тогда
//		СформироватьЗамечание();
//	КонецЕсли;	
//КонецПроцедуры
//rarus bonmak 15.04.2020 14456 --

//rarus bonmak 15.04.2020 14456 ++
//&НаКлиенте
//Процедура ЗамечанияПоАктамПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
//	ТекСтрока = Элемент.ТекущиеДанные;
//	
//	Если НоваяСтрока И СокрЛП(ТекСтрока.МестоХранения) = "" И СокрЛП(ТекСтрока.Замечание) = "" Тогда
//		//удалим пустую строчку                        
//		ЗамечанияПоАктам.Удалить(ТекСтрока);
//		Возврат;
//	КонецЕсли;

//	Если ЗначениеЗаполнено(СокрЛП(ТекСтрока.Замечание)) Тогда
//		//одинаковых замечаний не должно быть
//		Если ТакоеЗамечаниеУжеЕсть(ТекСтрока.Замечание) Тогда
//			//rarus FominskiyAS 19.04.2019  mantis 14191 +++
//			//Сообщить("Поле ""Замечание"" не уникально!");
//			Сообщить(НСтр("ru = 'Поле """"Замечание"""" не уникально!'; en = '""Remark"" is not unique!'"));
//			//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
//			Отказ = Истина;
//		КонецЕсли;
//	КонецЕсли;
//		
//КонецПроцедуры
//rarus bonmak 15.04.2020 14456 --

//rarus bonmak 15.04.2020 14456 ++
//&НаКлиенте
//Функция ТакоеЗамечаниеУжеЕсть(ТекЗамечание)
//	ПарамОтбора = Новый Структура;
//	ПарамОтбора.Вставить("Замечание", ТекЗамечание);
//	НайденныеСтроки = ЗамечанияПоАктам.НайтиСтроки(ПарамОтбора);	
//	Если НайденныеСтроки.Количество() > 1 Тогда
//		Возврат Истина;
//	Иначе
//		Возврат Ложь;
//	КонецЕсли;
//	
//КонецФункции
//rarus bonmak 15.04.2020 14456 --

//rarus bonmak 15.04.2020 14456 ++
//&НаКлиенте
//Процедура ЗамечанияПоАктамПослеУдаления(Элемент)
//	Если ЗамечанияПоАктам.Количество() <> 0 Тогда
//		СформироватьЗамечание();
//	Иначе
//		Объект.Замечание = "";
//		Модифицированность = Истина;
//	КонецЕсли;

//КонецПроцедуры
//rarus bonmak 15.04.2020 14456 --

//rarus sergei 03.11.2016 mantis 7030 ++
&НаСервере
Функция ПроверитьНаличиеЗакрытыхЗаявок(СсылкаМаршрут)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ
		              |	Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка,
		              |	Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт
		              |ИЗ
		              |	Документ.Scan_ЗаявкаПеревозчику.СоставЗаявки КАК Scan_ЗаявкаПеревозчикуСоставЗаявки
		              |ГДЕ
		              |	Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка.Исполнена = ИСТИНА
		              |	И Scan_ЗаявкаПеревозчикуСоставЗаявки.Изделие = &СсылкаИзделие
		              |	И Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка.Маршрут = &СсылкаМаршрут
		              |
		              |УПОРЯДОЧИТЬ ПО
		              |	Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка.Дата УБЫВ";
		Запрос.УстановитьПараметр("СсылкаМаршрут",СсылкаМаршрут);
		Запрос.УстановитьПараметр("СсылкаИзделие",Объект.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		ВозращаемыеДанные = Новый Структура;
		Если Выборка.Следующий() Тогда
			ЗаявкаПеревозчику = Выборка.Ссылка;	
			ДатаДоставкиФакт = Выборка.ДатаДоставкиФакт;
			ВозращаемыеДанные.Вставить("Перевозчик",ЗаявкаПеревозчику.Перевозчик);
			ВозращаемыеДанные.Вставить("ДатаДоставкиФакт",ДатаДоставкиФакт);
			Возврат ВозращаемыеДанные;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
	КонецЕсли;
КонецФункции
//rarus sergei 03.11.2016 mantis 7030 --

//////////////////////////////////////////////////////////////////////////////////
//// ПОЛИС ОСАГО

&НаСервере
Процедура ЗаписатьДанныеПолисаОСАГОВРегистр()
	Если ЗначениеЗаполнено(Объект.НомерПолисаОСАГО) ИЛИ ЗначениеЗаполнено(Объект.ДатаИстеченияПолиса) Тогда
		Справочники.Scan_Изделия.ЗаписьЗначенияРСПолисыОСАГО(Объект.Ссылка, Объект.НомерПолисаОСАГО,Объект.ДатаИстеченияПолиса);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЭтоНомерПолисаДругогоИзделия()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ПолисыОСАГОИзделий.Изделие,
	               |	Scan_ПолисыОСАГОИзделий.НомерПолиса,
	               |	Scan_ПолисыОСАГОИзделий.ДатаИстеченияСрока
	               |ИЗ
	               |	РегистрСведений.Scan_ПолисыОСАГОИзделий КАК Scan_ПолисыОСАГОИзделий
	               |ГДЕ
	               |	Scan_ПолисыОСАГОИзделий.Изделие <> &Изделие 
				   |	И Scan_ПолисыОСАГОИзделий.НомерПолиса = &НомерПолиса";
	Запрос.УстановитьПараметр("Изделие", Объект.Ссылка);
	Запрос.УстановитьПараметр("НомерПолиса", Объект.НомерПолисаОСАГО);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат (НЕ Результат.Количество() = 0);	
КонецФункции

//комм. tenkam (перенесла из старой КарточкиЗаказа + переделала)  03.08.2016 
//////////////////////////////////////////////////////////////////////////////////
//// ДОКУМЕНТЫ

&НаКлиенте
Процедура УдалениеСтарогоОтбора(ОтборПоле)
	Для Каждого ЭлементОтбора Из СписокДокументов.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ОтборПоле Тогда
			ЭлементДляУдаления = ЭлементОтбора;
			СписокДокументов.Отбор.Элементы.Удалить(ЭлементДляУдаления);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацияПриИзменении(Элемент)
	ОтборПоле = Новый ПолеКомпоновкиДанных("ХозОперация");
	УдалениеСтарогоОтбора(ОтборПоле);	
	
	Если НЕ ОтборОперация.Пустая() Тогда	
		ЭлементОтбора = СписокДокументов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ХозОперация");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ОтборОперация;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)
	ОтборПоле = Новый ПолеКомпоновкиДанных("СтатусЗаявки");
	УдалениеСтарогоОтбора(ОтборПоле);
	
	Если НЕ ОтборСтатус.Пустая() Тогда	
		ЭлементОтбора = СписокДокументов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатусЗаявки");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ОтборСтатус;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтборДокументыПриИзменении(Элемент)
	ОтборПоле = Новый ПолеКомпоновкиДанных("Документ");
	УдалениеСтарогоОтбора(ОтборПоле);
	
	Если ЗначениеЗаполнено(ОтборДокументы) Тогда			
		МассивСсылокДокументов = СписокВТЗнаСервере();
		ДокументИмя = ПолучитьИмяДокументаПоСинониму(ОтборДокументы);
		
		СписокОтбора = Новый СписокЗначений;
		Для Каждого ТекДокумент Из МассивСсылокДокументов Цикл
			Если ТипЗнч(ТекДокумент) = Тип("ДокументСсылка." + ДокументИмя) Тогда
				СписокОтбора.Добавить(ТекДокумент);			
			КонецЕсли;
		КонецЦикла; 
		
		ЭлементОтбора = СписокДокументов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Документ");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = СписокОтбора;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СписокВТЗнаСервере()
	Элементы.СписокДокументов.Обновить();
    Схема = Элементы.СписокДокументов.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.СписокДокументов.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	КолонкаСсылок = ТаблицаРезультат.ВыгрузитьКолонку("Документ");
	Возврат КолонкаСсылок;

КонецФункции

&НаСервере
Функция ПолучитьИмяДокументаПоСинониму(Синоним)
	Для Каждого Документ Из Метаданные.Документы Цикл 
		Если Документ.Синоним = Синоним Тогда
			Возврат Документ.Имя; 
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура ОтборОперацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("ЭтоГруппа", ЛОЖЬ);
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_ХозяйственныеОперации.ФормаВыбора",ПараметрыФормы,Элементы.ОтборОперация); 
КонецПроцедуры
//rarus tenkam 29.07.2016 mantis 7219 --

//rarus sergei 08.08.2016 mantis 7100 ++
&НаКлиенте
Процедура ТахографСЗаводаСканияПриИзменении(Элемент)
	УправлениеДиалогомНаСервере();
КонецПроцедуры
//rarus sergei 08.08.2016 mantis 7100 --

//rarus sergei 12.08.2016 mantis 7110 ++  
&НаКлиенте
Процедура НеРазрешеноМенятьСрокУстраненияНедостатковПриИзменении(Элемент)
	НастроитьДопСрокУстраненияНедостатков();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокУстраненияНедостатковДопПриИзменении(Элемент)
	СрокУстраненияНедостатковДопПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СрокУстраненияНедостатковДопПриИзмененииНаСервере()
	//Если ЗначениеЗаполнено(Объект.СрокУстраненияНедостатковДоп) Тогда	// rarus tenkam 03.02.2021 не работало для срока =0
		КрайняяДата = Справочники.Scan_Изделия.ПересчитатьКрайнююДатуУстраненияНедостатков(Объект.Ссылка, Объект.СрокУстраненияНедостатковДоп);
		Если КрайняяДата <> Объект.КрайняяДатаУстраненияНедостатков Тогда
			Объект.КрайняяДатаУстраненияНедостатков = КрайняяДата;			
		КонецЕсли;    	
	//КонецЕсли; 
КонецПроцедуры

//rarus sergei 25.08.2016 mantis 7163 ++   
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// rarus tenkam 05.04.2019 mantis 14316 +++
	//ПрисоединенныеФайлы.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	РаботаСФайлами.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	// rarus tenkam 05.04.2019 mantis 14316 ---
КонецПроцедуры
//rarus sergei 29.08.2016 mantis 7110 --

//rarus tenkam 18.12.2016 mantis 6897 ++
&НаСервере
Процедура ОбновитьЭлементНаСервере()
	Если НЕ ЗначениеЗаполнено(Объект.IDExternalSystem)
		И НЕ ЗначениеЗаполнено(Объект.IDExternalSystemProduct) Тогда //rarus bonmak 16452 23.09.2020 
		//Создан вручную
	Иначе
		//rarus bonmak 16452 23.09.2020 ++
		// rarus tenkam 13.06.2019 mantis 13865 +++
		//Если НЕ ЗначениеЗаполнено(Объект.IDExternalSystemProduct) Тогда
		//// rarus tenkam 13.06.2019 mantis 13865 ---	
		//	ИмяМетода = "GetChassis";
		//	СообщениеОбОшибке = "";
		//	Отказ = Ложь;
		//	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода ,Ложь);
		//	СтруктураПараметров.Вставить("GUID", Объект.IDExternalSystem);
		//	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
		//	ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
		//	Если НЕ Отказ Тогда
		//		СсылкаПродукта = Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникИзделия(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
		//	КонецЕсли;
		//	ЭтаФорма.Прочитать();
		//// rarus tenkam 13.06.2019 mantis 13865 +++
		//Иначе
		//	ИмяМетода = "GetProduct";
		//	СообщениеОбОшибке = "";
		//	Отказ = Ложь;
		//	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода ,Ложь);
		//	СтруктураПараметров.Вставить("GUID", Объект.IDExternalSystemProduct);
		//	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
		//	ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
		//	Если НЕ Отказ Тогда
		//		СсылкаПродукта = Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникПродукты(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
		//	КонецЕсли;
		//	ЭтаФорма.Прочитать();
		//КонецЕсли;
		// rarus tenkam 13.06.2019 mantis 13865 ---
		СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(, Ложь);
		
		Если ЗначениеЗаполнено(Объект.ЗаказНаЗавод) Тогда
			Если ЗначениеЗаполнено(Объект.ЗаказНаЗавод.IDExternalSystem) Тогда 
				СтруктураПараметров.GUID = Объект.ЗаказНаЗавод.IDExternalSystem;
				Scan_ВебСервисыРазборОтветов.ВызватьМетод_GetOrderToDelivery(СтруктураПараметров, Ложь, "");
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.IDExternalSystemProduct) Тогда
			СтруктураПараметров.GUID = Объект.IDExternalSystemProduct;
			Scan_ВебСервисыРазборОтветов.ВызватьМетод_GetProduct(СтруктураПараметров, Ложь, "");
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.IDExternalSystem) Тогда
			СтруктураПараметров.GUID = Объект.IDExternalSystem;
			Scan_ВебСервисыРазборОтветов.ВызватьМетод_GetChassis(СтруктураПараметров, Ложь, "");
		КонецЕсли;
		ЭтаФорма.Прочитать();
		//rarus bonmak 16452 23.09.2020 --
		
		//rarus bonmak 04.07.2019 14301 ++
		// rarus tenkam 07.05.2019 mantis 14301 +++
		//ТекЗаказ = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьЗаказПоИзделию(Объект.Ссылка);
		//ИмяМетода = "GetOrderToDelivery";
		//СообщениеОбОшибке = "";
		//Отказ = Ложь;
		//СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода ,Ложь);
		//СтруктураПараметров.Вставить("GUID", ТекЗаказ.IDExternalSystem);
		//ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
		//ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
		//Если НЕ Отказ Тогда
		//	СсылкаПродукта = Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникЗаказыНаЗавод(ТекЭлементОтвет,Отказ,СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации,ИмяМетода);
		//КонецЕсли;
		//КомплектностьПоставки = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(Объект.Ссылка, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.КомплектностьПоставки); //rarus bonmak 04.07.2019 14301
		// rarus tenkam 07.05.2019 mantis 14301 --- 
		//rarus bonmak 04.07.2019 14301 --
		
		// rarus tenkam 24.05.2019 mantis 14224 +++
		ОбновитьКлючевыеДаты();
		// rarus tenkam 24.05.2019 mantis 14224 ---
		УправлениеДиалогомНаСервере();
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлемент(Команда)
	ОбновитьЭлементНаСервере();
	ОповеститьОбИзменении(Объект.Ссылка);	// rarus tenkam 19.08.2019 mantis 14427 +
КонецПроцедуры
//rarus sergei 03.11.2016 mantis 7030 --

//rarus abrant 18.04.2017 mantis 7617 +++
&НаКлиенте
Процедура ПортОтправкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут,ЭтоГруппа", Ложь, Ложь);
	ПараметрыВыбораПорта = Новый Структура("Отбор", ЗначениеОтбора);
	ДополнительныеПараметры = Новый Структура ("Элемент", Элемент.Имя);
	Описание = Новый ОписаниеОповещения("ЗаполнениеПолейПортов",ЭтотОбъект,ДополнительныеПараметры);
	ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора", ПараметрыВыбораПорта,ЭтаФорма,,,,Описание,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеПолейПортов(Результат,Параметры) Экспорт
	Объект[Параметры.Элемент] = Результат;
КонецПроцедуры
//rarus abrant 18.04.2017 mantis 7617 ---

//rarus tenkam 05.07.2017 mantis 10084 +++
&НаКлиенте
Процедура АрендаПриИзменении(Элемент)
	Если Объект.Аренда Тогда
		//Rarus bonmak 16.05.2022 19158 ++
		//было Объект.ДемоИТест = Ложь;
		Объект.Демо = Ложь;
		Объект.Тест = Ложь;
		//Rarus bonmak 16.05.2022 19158 --
		Элементы.ДатаУстановки.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ДатаУстановки.ТолькоПросмотр = Истина;
		Объект.ДатаУстановки = Дата('00010101');
	КонецЕсли;	
КонецПроцедуры

//&НаКлиенте
//Процедура ДемоИТестПриИзменении(Элемент) //Rarus bonmak 16.05.2022 19158 закомментировал ++
//	Если Объект.ДемоИТест Тогда
//		Объект.Аренда = Ложь;
//		Элементы.ДатаУстановки.ТолькоПросмотр = Ложь;
//	Иначе
//		Элементы.ДатаУстановки.ТолькоПросмотр = Истина;
//		Объект.ДатаУстановки = Дата('00010101');
//	КонецЕсли;
//КонецПроцедуры //Rarus bonmak 16.05.2022 19158 --

&НаКлиенте
Процедура ДемоПриИзменении(Элемент) //Rarus bonmak 16.05.2022 19158 ++
	Если Объект.Демо Тогда
		Объект.Аренда = Ложь;
		Объект.Тест = Ложь;
		Элементы.ДатаУстановки.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ДатаУстановки.ТолькоПросмотр = Истина;
		Объект.ДатаУстановки = Дата('00010101');
	КонецЕсли;
КонецПроцедуры //Rarus bonmak 16.05.2022 19158 --

&НаКлиенте
Процедура ТестПриИзменении(Элемент) //Rarus bonmak 16.05.2022 19158 ++
	Если Объект.Тест Тогда
		Объект.Аренда = Ложь;
		Объект.Демо = Ложь;
		Элементы.ДатаУстановки.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ДатаУстановки.ТолькоПросмотр = Истина;
		Объект.ДатаУстановки = Дата('00010101');
	КонецЕсли;
КонецПроцедуры //Rarus bonmak 16.05.2022 19158 --

//rarus tenkam 03.08.2016 mantis 7219 --

//rarus tenkam 05.09.2017 mantis 9425 +++ 
//////////////////////////////////////////////////////////////////////////////////
//// АКБ 

&НаСервере
Процедура ХарактеристикиАКБПриИзмененииНаСервере()
	Scan_УправлениеДиалогомСервер.СформироватьУсловноеОформление(ЭтаФорма, Справочники.Scan_СостоянияАКБ,"Состояние",,,"ХарактеристикиАКБ");		
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиАКБПриИзменении(Элемент)
	ХарактеристикиАКБПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиАКБПриАктивизацииЯчейки(Элемент)
	Элементы.ХарактеристикиАКБ.ВыделенныеСтроки.Очистить();
КонецПроцедуры
//rarus tenkam 05.09.2017 mantis 9425 ---

//rarus tenkam 05.10.2017 mantis 9426 +++
//////////////////////////////////////////////////////////////////////////////////
//// ЗАМЕЧАНИЯ 

&НаСервереБезКонтекста
Процедура ПолучитьСписокКодовНеисправностей(СписокКодов)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_КодыНеисправныхДеталей.КодДетали КАК КодДетали
		|ИЗ
		|	Справочник.Scan_КодыНеисправныхДеталей КАК Scan_КодыНеисправныхДеталей
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_КодыНеисправныхДеталей.КодДетали
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодДетали";
	
	РезультатЗапроса = Запрос.Выполнить();
	ТабКодов = РезультатЗапроса.Выгрузить();
	Если ТабКодов.Количество() <> 0 Тогда
		Для Каждого ТекКод Из ТабКодов Цикл
			СписокКодов.Добавить(ТекКод.КодДетали, ТекКод.КодДетали);
		КонецЦикла;		
	Иначе
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьСписокКодовДефектов(СписокКодов)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_КодыДефектов.КодДефекта КАК КодДефекта
		|ИЗ
		|	Справочник.Scan_КодыДефектов КАК Scan_КодыДефектов
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_КодыДефектов.КодДефекта
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодДефекта";
	
	РезультатЗапроса = Запрос.Выполнить();
	ТабКодов = РезультатЗапроса.Выгрузить();
	Если ТабКодов.Количество() <> 0 Тогда
		Для Каждого ТекКод Из ТабКодов Цикл
			СписокКодов.Добавить(ТекКод.КодДефекта, ТекКод.КодДефекта);
		КонецЦикла;		
	Иначе
		Возврат;
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура СформироватьЗамечаниеНовое()
	ВремЗамечание = "";
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Устранено",Ложь);
	НайденныеСтроки = ТабЗамечанияПоАктам.НайтиСтроки(ПараметрыОтбора);
	Для Каждого СтрокаЗамечания Из НайденныеСтроки Цикл
		Если ВремЗамечание = "" Тогда
			ВремЗамечание = СокрЛП(СтрокаЗамечания.Замечание) + ?(ЗначениеЗаполнено(СтрокаЗамечания.Количество)," (" + СтрокаЗамечания.Количество + ")", "");
		Иначе
			ВремЗамечание = ВремЗамечание + ", " + СокрЛП(СтрокаЗамечания.Замечание) + ?(ЗначениеЗаполнено(СтрокаЗамечания.Количество)," (" + СтрокаЗамечания.Количество + ")", "");
		КонецЕсли;  		
	КонецЦикла;
	
	Если ВремЗамечание = "" Тогда
		ВремЗамечание = "НОРМА";
	КонецЕсли;
	Объект.Замечание = ВремЗамечание;
	Модифицированность = Истина;
	
КонецПроцедуры   

&НаКлиенте
Процедура СформироватьЗамечаниеСтроки(ТекСтрока)
	Если ЗначениеЗаполнено(ТекСтрока.КодНеисправнойДетали) И ЗначениеЗаполнено(ТекСтрока.КодДефекта) Тогда
		Элементы.ТабЗамечанияПоАктамЗамечание.ТолькоПросмотр = Истина;
		Если ТекСтрока.КодНеисправнойДетали = ПредопределенноеЗначение("Справочник.Scan_КодыНеисправныхДеталей.Прочее") И
			ТекСтрока.КодДефекта = ПредопределенноеЗначение("Справочник.Scan_КодыДефектов.Прочее") Тогда
			
			Элементы.ТабЗамечанияПоАктамЗамечание.ТолькоПросмотр = Ложь;
			ТекСтрока.Замечание = ""; 
			Элементы.ТабЗамечанияПоАктамЗамечание.ПодсказкаВвода = "Текст произвольного замечания";
		Иначе
			ТекСтрока.Замечание = Строка(ТекСтрока.КодНеисправнойДетали) + " - " + ТекСтрока.КодДефекта;
			Элементы.ТабЗамечанияПоАктамЗамечание.ПодсказкаВвода = "";
		КонецЕсли;
	// rarus tenkam 15.10.2019 mantis 15044 +++
	Иначе 
		Элементы.ТабЗамечанияПоАктамЗамечание.ТолькоПросмотр = Истина;
		ТекСтрока.Замечание = "";	
		Элементы.ТабЗамечанияПоАктамЗамечание.ПодсказкаВвода = "";
	// rarus tenkam 15.10.2019 mantis 15044 ---	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНеисправностьПоКоду(Код);
	Если НЕ ЗначениеЗаполнено(Код) Тогда
		Возврат Справочники.Scan_КодыНеисправныхДеталей.ПустаяСсылка();
	Иначе
		Возврат Справочники.Scan_КодыНеисправныхДеталей.НайтиПоРеквизиту("КодДетали", Код);	
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьКодПоНеисправности(Неисправность);
	Если НЕ ЗначениеЗаполнено(Неисправность) Тогда
		Возврат "";
	Иначе
		Возврат Неисправность.КодДетали;	
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьДефектПоКоду(Код);
	Если НЕ ЗначениеЗаполнено(Код) Тогда
		Возврат Справочники.Scan_КодыДефектов.ПустаяСсылка();
	Иначе
		Возврат Справочники.Scan_КодыДефектов.НайтиПоРеквизиту("КодДефекта", Код);	
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьКодПоДефекту(Дефект);
	Если НЕ ЗначениеЗаполнено(Дефект) Тогда
		Возврат "";
	Иначе
		Возврат Дефект.КодДефекта;	
	КонецЕсли;
КонецФункции   

&НаКлиенте
Процедура ТабЗамечанияПоАктамПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НЕ ОтменаРедактирования  И Элемент.ТекущиеДанные <> Неопределено Тогда
		СформироватьЗамечаниеНовое();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТабЗамечанияПоАктамПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекСтрока = Элемент.ТекущиеДанные;
	
	Если НоваяСтрока И СокрЛП(ТекСтрока.МестоОбнаружения) = "" И СокрЛП(ТекСтрока.Замечание) = "" Тогда
		//удалим пустую строчку                        
		ТабЗамечанияПоАктам.Удалить(ТекСтрока);
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабЗамечанияПоАктамПослеУдаления(Элемент)
	Если ТабЗамечанияПоАктам.Количество() <> 0 Тогда
		СформироватьЗамечаниеНовое();
	Иначе
		Объект.Замечание = "";
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры      

&НаКлиенте
Процедура ТабЗамечанияПоАктамКодНеисправностиКодПриИзменении(Элемент)
	ТекДанные = Элементы.ТабЗамечанияПоАктам.ТекущиеДанные;
	
	ТекДанные.КодНеисправнойДетали = ПолучитьНеисправностьПоКоду(ТекДанные.КодНеисправностиКод);
	СформироватьЗамечаниеСтроки(ТекДанные);
КонецПроцедуры

&НаКлиенте
Процедура ТабЗамечанияПоАктамКодНеисправнойДеталиПриИзменении(Элемент)
	ТекДанные = Элементы.ТабЗамечанияПоАктам.ТекущиеДанные;
	
	ТекДанные.КодНеисправностиКод = ПолучитьКодПоНеисправности(ТекДанные.КодНеисправнойДетали);
	СформироватьЗамечаниеСтроки(ТекДанные);
КонецПроцедуры

&НаКлиенте
Процедура ТабЗамечанияПоАктамКодДефектаКодПриИзменении(Элемент)
	ТекДанные = Элементы.ТабЗамечанияПоАктам.ТекущиеДанные;
	
	ТекДанные.КодДефекта = ПолучитьДефектПоКоду(ТекДанные.КодДефектаКод);
	СформироватьЗамечаниеСтроки(ТекДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТабЗамечанияПоАктамКодДефектаПриИзменении(Элемент)
	ТекДанные = Элементы.ТабЗамечанияПоАктам.ТекущиеДанные;
	
	ТекДанные.КодДефектаКод = ПолучитьКодПоДефекту(ТекДанные.КодДефекта);
	СформироватьЗамечаниеСтроки(ТекДанные);
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьФото(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить("Запишите изделие!");
		Сообщить(НСтр("ru = 'Запишите продукт!'; en = 'Record the product!'"));
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
	КонецЕсли;
	// rarus tenkam 10.04.2019 mantis 14195 +++
	
	//ВыбранныеФайлы = Новый Массив;  	
	//ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	//ВыборФайла.МножественныйВыбор = Истина;
	//ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла'");
	//ВыборФайла.Фильтр = НСтр("ru = 'Все файлы'") + " (*.*)|*.*";
	//Если ВыборФайла.Выбрать() Тогда
	//	ВыбранныеФайлы = ВыборФайла.ВыбранныеФайлы;
	//КонецЕсли;
	//
	//Если ВыбранныеФайлы.Количество() <> 0 Тогда
	//	ДопПараметры = Новый Структура;
	//	ДопПараметры.Вставить("ИдентификаторФормы", ЭтаФорма.УникальныйИдентификатор);
	//	ДопПараметры.Вставить("НеОткрыватьКарточкуПослеСозданияИзФайла", Истина);
	//	ДопПараметры.Вставить("ВыбранныеФайлы", ВыбранныеФайлы);
	//	
	//	ДопПараметры.Вставить("ВладелецФайла", Объект.Ссылка);
	//	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыРасширениеПредложено", ПрисоединенныеФайлыСлужебныйКлиент, ДопПараметры);
	//	ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);		
	//КонецЕсли;
	
	РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ЭтаФорма.УникальныйИдентификатор, , );
	
	// rarus tenkam 10.04.2019 mantis 14195 ---
	
КонецПроцедуры
//rarus tenkam 05.07.2017 mantis 10084 ---

//rarus tenkam 18.12.2016 mantis 6897 --

//rarus bonmak 04.07.2019 14301 ++
// rarus tenkam 07.05.2019 mantis 14301 +++
//&НаКлиенте
//Процедура КомплектностьПоставкиПриИзменении(Элемент)
//	Модифицированность = Истина;	
//КонецПроцедуры       
// rarus tenkam 07.05.2019 mantis 14301 ---
//rarus bonmak 04.07.2019 14301 --

// rarus tenkam 24.05.2019 mantis 14224 +++
&НаСервере
Процедура ОбновитьКлючевыеДаты()
	
	// rarus tenkam 28.08.2020 mantis 16468 +++
	//// rarus tenkam 06.08.2019 mantis 14427 +++
	////ТекЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьЗаказПоИзделию(Объект.Ссылка);
	//ТекЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Объект.Ссылка);
	//// rarus tenkam 06.08.2019 mantis 14427 ---
	ТекЗаказНаЗавод = Объект.ЗаказНаЗавод;
	// rarus tenkam 28.08.2020 mantis 16468 ---
	
	КлючевыеДаты.Очистить();
	
	//rarus BProg_Dekin 14.11.2019 0014452 ++ ОбновитьКлючевыеДаты
	СтрокаКлючевыеДаты = КлючевыеДаты.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаКлючевыеДаты, РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючевыеДатыОбъекта(Объект.Ссылка));
	ЗаполнитьЗначенияСвойств(СтрокаКлючевыеДаты, РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючевыеДатыОбъекта(ТекЗаказНаЗавод));
	
	//МассивСсылок = Новый Массив;
	//МассивСсылок.Добавить(Объект.Ссылка);
	//МассивСсылок.Добавить(ТекЗаказНаЗавод);
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Scan_КлючевыеДаты.Ссылка КАК ВидКлючевойДаты
	//	|ПОМЕСТИТЬ ВсеКлючевыеДатыОбъекта
	//	|ИЗ
	//	|	Перечисление.Scan_КлючевыеДаты КАК Scan_КлючевыеДаты
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВсеКлючевыеДатыОбъекта.ВидКлючевойДаты КАК ВидКлючевойДаты,
	//	|	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследних.Значение, ДАТАВРЕМЯ(1, 1, 1)) КАК Значение,
	//	|	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследних.ОбъектКлючевойДаты, ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ПустаяСсылка)) КАК ОбъектКлючевойДаты
	//	|ИЗ
	//	|	ВсеКлючевыеДатыОбъекта КАК ВсеКлючевыеДатыОбъекта
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(, Объект В (&МассивСсылок)) КАК Scan_КлючевыеДатыПроцессовСрезПоследних
	//	|		ПО ВсеКлючевыеДатыОбъекта.ВидКлючевойДаты = Scan_КлючевыеДатыПроцессовСрезПоследних.ВидКлючевойДаты
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	ВсеКлючевыеДатыОбъекта.ВидКлючевойДаты.Порядок";
	//
	//Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	НоваяСтрока = КлючевыеДаты.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	//	Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОбъектКлючевойДаты) Тогда
	//		НоваяСтрока.ОбъектКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(ВыборкаДетальныеЗаписи.ВидКлючевойДаты);
	//	КонецЕсли;
	//КонецЦикла;
	//rarus BProg_Dekin 14.11.2019 0014452 --
	
КонецПроцедуры             

&НаСервере
Процедура ЗаписатьКлючевыеДаты()
	//rarus BProg_Gladkov 24.11.2019 0014452 ++ ЗаписатьКлючевыеДаты
	КлючевыеДатыИзРегистра = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючевыеДатыОбъекта(Объект.Ссылка);
	ЗаполнитьЗначенияСвойств(КлючевыеДатыИзРегистра, КлючевыеДаты[0]);
	РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевыеДатыОбъекта(Объект.Ссылка, КлючевыеДатыИзРегистра);
	
	ТекЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Объект.Ссылка);
	КлючевыеДатыИзРегистра = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючевыеДатыОбъекта(ТекЗаказНаЗавод);
	ЗаполнитьЗначенияСвойств(КлючевыеДатыИзРегистра, КлючевыеДаты[0]);
	РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевыеДатыОбъекта(ТекЗаказНаЗавод, КлючевыеДатыИзРегистра);
	
	//Для Каждого ТекСтрока Из КлючевыеДаты Цикл
	//	// rarus tenkam 22.07.2019 mantis 14669 +++
	//	//РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(Объект.Ссылка, ТекСтрока.ОбъектКлючевойДаты, ТекСтрока.Значение, ТекСтрока.ВидКлючевойДаты);	
	//	Если ТекСтрока.ОбъектКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод") Тогда
	//		ТекСсылка = Объект.Ссылка.ЗаказНаЗавод;
	//	ИначеЕсли ТекСтрока.ОбъектКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_ОбъектыКлючевыхДат.Изделие") Тогда
	//		ТекСсылка = Объект.Ссылка;
	//	Иначе
	//		Продолжить;
	//	КонецЕсли;
	//	РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(ТекСсылка, ТекСтрока.ОбъектКлючевойДаты, ТекСтрока.Значение, ТекСтрока.ВидКлючевойДаты);	
	//	 //rarus tenkam 22.07.2019 mantis 14669 ---	
	//КонецЦикла;
	//rarus BProg_Gladkov 24.11.2019 0014452 -- 
КонецПроцедуры
// rarus tenkam 24.05.2019 mantis 14224 ---

&НаКлиенте
Процедура КлючевыеДатыЗначениеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

//rarus BProg_Dekin 15.11.2019 0014452 ++ Колонки с ключевыми датами блокируются при создании на сервере
//&НаКлиенте
//Процедура КлючевыеДатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)  	
//	
//	Если Поле.Имя = "КлючевыеДатыЗначение" Тогда
//		ТекущиеДанные = Элементы.КлючевыеДаты.ТекущиеДанные;
//		Если ТекущиеДанные.ОбъектКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_ОбъектыКлючевыхДат.Изделие")  Тогда
//			
//			Элементы.КлючевыеДатыЗначение.ТолькоПросмотр = Ложь;
//			
//			// rarus tenkam 20.09.2019 mantis 14834 +++
//			Если ТекущиеДанные.ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ПродуктВАрхиве") Тогда
//				Элементы.КлючевыеДатыЗначение.ТолькоПросмотр = НЕ Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьДатуПродуктВАрхиве");
//			КонецЕсли;
//			// rarus tenkam 20.09.2019 mantis 14834 ---
//		Иначе
//			Элементы.КлючевыеДатыЗначение.ТолькоПросмотр = Истина;
//		КонецЕсли;
//	КонецЕсли;
//КонецПроцедуры
////rarus BProg_Dekin 15.11.2019 0014452 --
//rarus tenkam 05.10.2017 mantis 9426 ---

// rarus tenkam 24.06.2019 mantis 14427 +++
//////////////////////////////////////////////////////////////////////////////////
//// СОСТАВ ИЗДЕЛИЯ 

&НаКлиенте
Процедура ИзменитьСостав(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить(НСтр("ru = 'Необходимо записать объект'; en = 'Please save the object'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеИзмененияСоставаИзделия", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("ИзделиеТС", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.Scan_ВзаимосвязьИзделий.Форма.УказаниеВзаимосвязиМеждуИзделиями", ПараметрыОткрытия, ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзмененияСоставаИзделия(Результат, ДополнительныеПараметры) Экспорт
	Элементы.СоставИзделия.Обновить(); 
КонецПроцедуры

&НаКлиенте
Процедура ТипыМаркетинговыеПриИзменении(Элемент) //rarus bonmak 04.09.2019 14442 ++
	СформироватьНаименованиеПоНастройке("ТипыМаркетинговые");
КонецПроцедуры //rarus bonmak 04.09.2019 14442 --
// rarus tenkam 24.06.2019 mantis 14427 ---

// rarus tenkam 12.09.2019 mantis 14442 +++
&НаСервереБезКонтекста
Процедура ТипГИБДДПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры                 

&НаКлиенте
Процедура ТипГИБДДПриИзменении(Элемент)
	ТипГИБДДПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура СравнениеСпецификацийНаСервере() //rarus bonmak 08.10.2019 14177 ++
	//ОткрытьФорму("Отчет.Scan_СравнениеСпецификаций.Форма.ФормаОтчета",, ЭтаФорма);
	//П = Новый Структура("Изделие", Ссылка);
	//Форма = ПолучитьФорму("Отчет.Scan_СравнениеСпецификаций.Форма.ФормаОтчета",, ЭтаФорма);
	//Форма.Открыть();
КонецПроцедуры //rarus bonmak 08.10.2019 14177 --


&НаКлиенте
Процедура СравнениеСпецификаций(Команда) //rarus bonmak 08.10.2019 14177 ++
	//СравнениеСпецификацийНаСервере();
	Форма = ПолучитьФорму("Отчет.Scan_СравнениеСпецификаций.Форма.ФормаОтчета",, ЭтаФорма);
	Форма.Открыть();
КонецПроцедуры //rarus bonmak 08.10.2019 14177 --

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЭтотОбъект.Прочитать();
	ОбновитьОтображениеДанных(Элементы.ЛокальныйСтатусПродукта);//rarus BProg_Dekin 19.05.2020 mantis 0015999 +-
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныйСтатусПродуктаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	ЗаполнитьСписокВыбораЛокальногоСтатусаПродукта(СтандартнаяОбработка, ДанныеВыбора);	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораЛокальногоСтатусаПродукта(СтандартнаяОбработка, ДанныеВыбора) //rarus BProg_Dekin 19.05.2020 mantis 0015999 +-
	СтандартнаяОбработка = Ложь;
	
	СписокДанныеВыбора = Новый СписокЗначений;
	СписокДанныеВыбора.Добавить(ПредопределенноеЗначение("Справочник.Scan_ЛокальныеСтатусыПродуктов.NEW"));
	СписокДанныеВыбора.Добавить(ПредопределенноеЗначение("Справочник.Scan_ЛокальныеСтатусыПродуктов.OPEN"));
	
	ТипЗаказа = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(Объект.ЗаказНаЗавод, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод); 		
	Если ТипЗаказа = ПредопределенноеЗначение("Перечисление.Scan_ТипыЗаказовНаЗавод.OpenOrder") И Объект.МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania Тогда
		СписокДанныеВыбора.Добавить(ПредопределенноеЗначение("Справочник.Scan_ЛокальныеСтатусыПродуктов.DELETED"));
	КонецЕсли;	
	
	ДанныеВыбора = СписокДанныеВыбора;
КонецПроцедуры


&НаКлиенте
Процедура ПробегПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus BProg_Dekin 03.06.2020 mantis 0015893 +-
КонецПроцедуры


&НаКлиенте
Процедура ГодВыпускаПродуктаПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus BProg_Dekin 03.06.2020 mantis 0015893 +-
КонецПроцедуры


&НаКлиенте
Процедура ДатаВводаДанныхОПробегеПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus BProg_Dekin 03.06.2020 mantis 0015893 +-
КонецПроцедуры
// rarus tenkam 12.09.2019 mantis 14442 ---

&НаКлиенте
Процедура ГосударственныйНомерПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus pechek 05.06.2020
КонецПроцедуры

&НаКлиенте
Процедура ГосударственныйНомерДатаПолученияПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus pechek 05.06.2020
КонецПроцедуры

&НаКлиенте
Процедура ВесПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus pechek 05.06.2020
КонецПроцедуры

&НаКлиенте
Процедура ДлинаПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus pechek 05.06.2020
КонецПроцедуры

&НаКлиенте
Процедура ВысотаПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus pechek 05.06.2020
КонецПроцедуры

&НаКлиенте
Процедура ШиринаПродуктаПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина; //rarus pechek 05.06.2020
КонецПроцедуры

&НаСервере
Процедура ЗаказНаЗаводПриИзмененииНаСервере() //rarus bonmak 26.06.2020 16249 ++
	Если ЗначениеЗаполнено(Объект.ЗаказНаЗавод) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие КАК Изделие
		|ИЗ
		|	РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних(
		|			,
		|			ЗаказНаЗавод = &ЗаказНаЗавод
		|				И Изделие <> &Изделие) КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних";
		
		Запрос.УстановитьПараметр("ЗаказНаЗавод", Объект.ЗаказНаЗавод);
		Запрос.УстановитьПараметр("Изделие", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Объект.ЗаказНаЗавод = Справочники.Scan_ЗаказыНаЗавод.ПустаяСсылка();
			Сообщить(НСтр("ru = 'Данный заказ на завод имеет связь с другим продуктом, укажите правильный заказ на завод'; en = 'This factory order has a relationship with another product, indicate the correct factory order'"));
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьКлючевыеДаты();		// rarus tenkam 28.08.2020 mantis 14648 +
		
КонецПроцедуры //rarus bonmak 26.06.2020 16249 --

&НаКлиенте
Процедура ЗаказНаЗаводПриИзменении(Элемент) //rarus bonmak 26.06.2020 16249 ++
	ЗаказНаЗаводПриИзмененииНаСервере();
КонецПроцедуры //rarus bonmak 26.06.2020 16249 --

&НаКлиенте
Процедура МодельПродуктаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//rarus vikhle 13.10.2020 mt 15693 +++
	Если НЕ Объект.МаркаПродукта.Пустая() Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОтбора = Новый Структура("МаркаПродукта",Объект.МаркаПродукта);
		ПараметрыФормы = Новый Структура("Отбор",ПараметрыОтбора);
		ОткрытьФорму("Справочник.Scan_МоделиПродуктов.ФормаВыбора",ПараметрыФормы,Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	КонецЕсли;
	//rarus vikhle 13.10.2020 mt 15693 ---
КонецПроцедуры

//rarus agar 01.03.2021 17123 ++
&НаКлиенте
Процедура СтоимостьПродажиБУПриИзменении(Элемент)
	
	СтоимостьПродажиБУПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СтоимостьПродажиБУПриИзмененииНаСервере()
	
	Если Объект.СтоимостьПродажиБУ = 0 Тогда
		Объект.СтоимостьПродажиБУБезНДС    = 0;
		Объект.СтоимостьПродажиБУСтавкаНДС = Неопределено;
	Иначе
		Если Объект.СтоимостьПродажиБУСтавкаНДС.Пустая() Тогда
			Объект.СтоимостьПродажиБУСтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
		КонецЕсли;
		
		СтавкаНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтоимостьПродажиБУСтавкаНДС, "Ставка");
		Если  СтавкаНДС <> Неопределено 
			И СтавкаНДС <> 0 
			Тогда
			Объект.СтоимостьПродажиБУБезНДС = Объект.СтоимостьПродажиБУ/(1 + СтавкаНДС / 100);
		Иначе
			Объект.СтоимостьПродажиБУБезНДС = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтоимостьПродажиБУСтавкаНДСПриИзменении(Элемент)
	
	СтоимостьПродажиБУСтавкаНДСПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СтоимостьПродажиБУСтавкаНДСПриИзмененииНаСервере()
	
	Если Объект.СтоимостьПродажиБУ <> 0 Тогда
		Если Объект.СтоимостьПродажиБУСтавкаНДС.Пустая() Тогда
			Объект.СтоимостьПродажиБУБезНДС = 0;
			Возврат;
		КонецЕсли;
		
		СтавкаНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтоимостьПродажиБУСтавкаНДС, "Ставка");
		Если  СтавкаНДС <> Неопределено 
			И СтавкаНДС <> 0 
			Тогда
			Объект.СтоимостьПродажиБУБезНДС = Объект.СтоимостьПродажиБУ/(1 + СтавкаНДС / 100);
		Иначе
			Объект.СтоимостьПродажиБУБезНДС = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//rarus agar 01.03.2021 17123 --

//rarus ozhnik 17366 17.03.2021 + 
&НаКлиенте
Процедура ПродавецПродуктаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Отбор = Новый Структура;

	Если не Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиентСервер.ТекущийПользователь(),"ПользовательСотрудник") Тогда
		
		Отбор.Вставить("Владелец", ПолучитьМассивКомпаний());
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("Справочник.Scan_КонтактныеЛица.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивКомпаний()
	возврат РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПользователиКлиентСервер.ТекущийПользователь()).ВыгрузитьКолонку("Компания");	
КонецФункции
//rarus ozhnik 17366 17.03.2021 -

//rarus agar 05.04.2021 17394 ++
&НаКлиенте
Процедура ТипСпецификацииПриИзменении(Элемент)
	
	Если Объект.ТипСпецификации <> ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
		Объект.СтандартнаяСпецификация = Неопределено;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеОтбора = Новый Структура;
	ЗначениеОтбора.Вставить("ПометкаУдаления", Ложь);
	ЗначениеОтбора.Вставить("Статус",          ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе"));
	
	ПараметрыВыбораСТД = Новый Структура("Отбор", ЗначениеОтбора);
	
	Если Не Объект.МодельПродукта.Пустая() Тогда
		ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
																"Модель.Наименование",
																ВидСравненияКомпоновкиДанных.НачинаетсяС,
																Лев(СокрЛП(Строка(Объект.МодельПродукта)),10),,Истина);
		ПараметрыВыбораСТД.Вставить("ФиксированныеНастройки",ФиксированныеНастройки);
	КонецЕсли;
	
	ОткрытьФорму("Документ.Scan_СпецификацияСтандартнойМодели.ФормаВыбора", 
					ПараметрыВыбораСТД, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
//rarus agar 05.04.2021 17394 --
