
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Контрагент") Тогда
		Если ЗначениеЗаполнено(Параметры.Контрагент) Тогда
			Объект.Владелец = Параметры.Контрагент;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Наименование") Тогда
		Если ЗначениеЗаполнено(Параметры.Наименование) Тогда
			Объект.Наименование = Параметры.Наименование;
		КонецЕсли;
	КонецЕсли;
		
	//tenkam
	//// ДополнительныеОтчетыИОбработки
	//ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	//// Конец ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация");
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// Обработчик подсистемы "Свойства"
	//tenkam
	//УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаДополнительныеРеквизиты");
	//
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	ДополнительныеПараметры = Новый Структура;
	//	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты");
	//	ДополнительныеПараметры.Вставить("ОтложеннаяИнициализация", Истина);
	//	МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
	//	МодульУправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	//КонецЕсли;
	//
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	текФамилия  = Объект.Фамилия;
	текИмя      = Объект.Имя;
	текОтчество = Объект.Отчество;
	ПриИзмененииВидаКонтактногоЛица();
	ВидимостьДопонительнойИнформации(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	Если (Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента")
		ИЛИ Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКомпании") //rarus bonmak 05.12.2019 14456 
		ИЛИ Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоСотрудника")) //rarus bonmak 05.12.2019 14456
		И Параметры.Ключ.Пустая() Тогда
		Элементы.ВидКонтактногоЛица.Доступность    = Ложь;
		Элементы.ВидКонтактногоЛица.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидКонтактногоЛица) Тогда
		//rarus bonmak 05.12.2019 14456 ++
		Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			Объект.ВидКонтактногоЛица = Перечисления.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента;
		ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Scan_Компании") Тогда
			Объект.ВидКонтактногоЛица = Перечисления.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКомпании;
		ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Scan_Сотрудники") Тогда
			Объект.ВидКонтактногоЛица = Перечисления.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоСотрудника;
		КонецЕсли;
		//rarus bonmak 05.12.2019 14456 --
	КонецЕсли;
	Scan_СборСтатистики.Scan_ПриОткрытии("Справочники", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// Обработчик подсистемы "Свойства"
	//УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// rarus agar 21.04.2021 17484 ++
	Если     Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКомпании") 
		И Не Объект.Владелец.Пустая()
		И    Объект.ДилерскаяСтанция.Пустая()
		Тогда
		Объект.ДилерскаяСтанция = Объект.Владелец;
	КонецЕсли;
	// rarus agar 21.04.2021 17484 --
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюСправочника(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
  
КонецПроцедуры

//rarus sergei 14.12.2016 mantis 7184 ++
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.ОтправлятьПисьмаНапоминанияПоДоставкеИзделий = Истина ИЛИ Объект.ОтправлятьПФМ15 Тогда //rarus sergei 02.12.2016 mantis 7169 + 
		МассивСтрокЭП = ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Тип",ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты")));
		Если МассивСтрокЭП[0].Представление ="" Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Поле  = "МассивСтрокЭП[0].ИмяРеквизита";
			//rarus FominskiyAS 24.04.2019  mantis 14191 +++
			//Сообщение.Текст = "Поле ""Адрес электронной почты"" не заполнено";
			Сообщение.Текст = НСтр("ru = 'Поле ""Адрес электронной почты"" не заполнено'; en = 'Field ""Email"" not filled'");
			//rarus FominskiyAS 24.04.2019  mantis 14191 ---  
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;		
		КонецЕсли; 
		//Если ЭтаФорма.КонтактнаяИнформацияПоле3 ="" Тогда
		//	Сообщение = Новый СообщениеПользователю;
		//	Сообщение.Поле  = "КонтактнаяИнформацияПоле3";
		//	Сообщение.Текст = "Поле ""Адрес электронной почты"" не заполнено";
		//	Сообщение.УстановитьДанные(ЭтотОбъект);
		//	Сообщение.Сообщить();
		//	Отказ = Истина;
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//rarus sergei 14.12.2016 mantis 7184 --

//rarus sergei 25.11.2016 mantis 7184 ++
&НаКлиенте
Процедура ОтправлятьПисьмаНапоминанияПоДоставкеИзделийПриИзменении(Элемент)
	ОбновитьОтображениеКонтактнойИнформации();
	ОтправлятьПисьмаНапоминанияПоДоставкеИзделийПриИзмененииНаСервере();
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);	
КонецПроцедуры

&НаСервере
Процедура ОтправлятьПисьмаНапоминанияПоДоставкеИзделийПриИзмененииНаСервере()
		
КонецПроцедуры
//rarus sergei 25.11.2016 mantis 7184 --

//rarus sergei 02.12.2016 mantis 7169 ++
&НаКлиенте
Процедура ОтправлятьПФМ15ПриИзменении(Элемент)
	ОбновитьОтображениеКонтактнойИнформации();
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры
//rarus sergei 02.12.2016 mantis 7169 --

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// Подсистема "Свойства"
	//Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
	//	ОбновитьЭлементыДополнительныхРеквизитов();
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидКонтактногоЛицаПриИзменении(Элемент)

 	ПриИзмененииВидаКонтактногоЛица();
	ВидимостьДопонительнойИнформации(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента Фамилия.
//
&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)

	ПозицииПробелов = ОпределитьПозицииПробелов();
	Если ПозицииПробелов[0] > 0 Тогда
		ФамилияИзНаименования = Сред(Объект.Наименование, 1, (ПозицииПробелов[0] - 1));
		Если ФамилияИзНаименования <> текФамилия И НЕ ПустаяСтрока(ФамилияИзНаименования) Тогда
			текФамилия = СокрЛП(Объект.Фамилия);
			Возврат;
		КонецЕсли;
		Объект.Наименование = СокрЛП(Объект.Фамилия) + Сред(Объект.Наименование, ПозицииПробелов[0]);
	Иначе
		Если ПустаяСтрока(Объект.Наименование) Тогда
			Объект.Наименование = СокрЛП(Объект.Фамилия);
		Иначе
			Если СокрЛП(Объект.Наименование) = текФамилия Тогда
				Объект.Наименование = СокрЛП(Объект.Фамилия);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	текФамилия = СокрЛП(Объект.Фамилия);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента Имя.
//
&НаКлиенте
Процедура ИмяПриИзменении(Элемент)

	ПозицииПробелов = ОпределитьПозицииПробелов();

	Если ПозицииПробелов[0] > 0 И ПозицииПробелов[1] > 0 Тогда

		ИмяИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[0] + 1), 
			(ПозицииПробелов[1] - ПозицииПробелов[0] - 1));

		Если ИмяИзНаименования <> текИмя И НЕ ПустаяСтрока(ИмяИзНаименования) Тогда

			текИмя = СокрЛП(Объект.Имя);
			Возврат;

		КонецЕсли;

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[0]) + СокрЛП(Объект.Имя) 
			+ Сред(Объект.Наименование, ПозицииПробелов[1]);

	ИначеЕсли ПозицииПробелов[0] > 0 Тогда

		ИмяИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[0] + 1));

		Если ИмяИзНаименования <> текИмя И НЕ ПустаяСтрока(ИмяИзНаименования) Тогда

			текИмя = СокрЛП(Объект.Имя);
			Возврат;

		КонецЕсли; 

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[0]) + СокрЛП(Объект.Имя);

	Иначе

		Если НЕ ПустаяСтрока(Объект.Наименование) Тогда

			Объект.Наименование = Объект.Наименование + " " + СокрЛП(Объект.Имя);

		Иначе

			Объект.Наименование = " " + СокрЛП(Объект.Имя);

		КонецЕсли; 

	КонецЕсли;

	текИмя = СокрЛП(Объект.Имя);

КонецПроцедуры

// Обработчик события ПриИзменении элемента Отчество.
//
&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)

	ПозицииПробелов = ОпределитьПозицииПробелов();

	Если ПозицииПробелов[1] > 0 Тогда

		ОтчествоИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[1] + 1));

		Если ОтчествоИзНаименования <> текОтчество И НЕ ПустаяСтрока(ОтчествоИзНаименования) Тогда

			текОтчество = СокрЛП(Объект.Отчество);
			Возврат;

		КонецЕсли;

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[1]) + СокрЛП(Объект.Отчество);

	Иначе

		Если НЕ ПустаяСтрока(Объект.Наименование) Тогда

			Объект.Наименование = Объект.Наименование + " " + СокрЛП(Объект.Отчество);

		Иначе

			Объект.Наименование = "  " + СокрЛП(Объект.Отчество);

		КонецЕсли;

	КонецЕсли;

	текОтчество = СокрЛП(Объект.Отчество);

КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СписокВыбора = Новый Массив;

	Если НЕ ПустаяСтрока(Объект.Фамилия) Тогда
		СписокВыбора.Добавить(СокрЛП(Объект.Фамилия));
	КонецЕсли;

	Если НЕ ПустаяСтрока(Объект.Фамилия) И НЕ ПустаяСтрока(Объект.Имя) Тогда
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Объект.Имя)));
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Сред(Объект.Имя,1,1)) + "."));
	КонецЕсли;

	Если НЕ ПустаяСтрока(Объект.Фамилия) И НЕ ПустаяСтрока(Объект.Имя) И НЕ ПустаяСтрока(Объект.Отчество) Тогда
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Объект.Имя) + " " + СокрЛП(Объект.Отчество)));
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Сред(Объект.Имя,1,1)) + "." 
			+ СокрЛП(Сред(Объект.Отчество,1,1)) + "."));
	КонецЕсли;

	Элементы.Наименование.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Поддержка контактной информации.

&НаСервере
Функция Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)  Экспорт	// rarus tenkam 29.06.2021 mantis 17939 + (добавлен Экспорт)
	
	МодульУправлениеКонтактнойИнформацией =
		ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
	
	Возврат МодульУправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(
		ЭтотОбъект, Объект, Результат);
	
КонецФункции


&НаКлиенте
Процедура Подключаемый_EMailОчистка(Элемент, СтандартнаяОбработка)
	
	Если Не Элемент.РедактированиеТекста Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	
	МодульУправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// ОбщегоНазначения

&НаСервере
Процедура ПриИзмененииВидаКонтактногоЛица()

	//Если НЕ ЗначениеЗаполнено(Объект.ВидКонтактногоЛица) Тогда
	//	Объект.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт;
	//КонецЕсли;

	//Если Объект.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента Тогда
	Если Объект.ВидКонтактногоЛица = Перечисления.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента Тогда
		Если ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			Объект.Владелец = Справочники.Scan_Контрагенты.ПустаяСсылка();
		КонецЕсли;
		//tenkam	
		//ИначеЕсли Объект.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт Тогда
		
		//	Если Объект.ОбъектВладелец <> ПользователиКлиентСервер.ТекущийПользователь() Тогда
		//		Объект.ОбъектВладелец = ПользователиКлиентСервер.ТекущийПользователь();
		//	КонецЕсли;
		//	
		//Иначе
		
		//	Если ТипЗнч(Объект.ОбъектВладелец) <> Тип("СправочникСсылка.Пользователи") Тогда
		//		Объект.ОбъектВладелец = Справочники.Пользователи.ПустаяСсылка();
		//	КонецЕсли;
	ИначеЕсли Объект.ВидКонтактногоЛица = Перечисления.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКомпании Тогда //rarus bonmak 05.12.2019 14456 ++
		
		Если ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка.Scan_Компании") Тогда
			Объект.Владелец = Справочники.Scan_Компании.ПустаяСсылка();
		КонецЕсли;
	ИначеЕсли Объект.ВидКонтактногоЛица = Перечисления.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоСотрудника Тогда 
		
		Если ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка.Scan_Сотрудники") Тогда
			Объект.Владелец = Справочники.Scan_Сотрудники.ПустаяСсылка();
		КонецЕсли;
		//rarus bonmak 05.12.2019 14456 --	
	КонецЕсли;
	
	// rarus agar 21.04.2021 17484 ++
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		Объект.ДилерскаяСтанция = Справочники.Scan_Компании.ПустаяСсылка();
	КонецЕсли;
	// rarus agar 21.04.2021 17484 --
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект 	 = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ВидКонтактногоЛица = 
		ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента")
		ИЛИ Объект.ВидКонтактногоЛица = 
		ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКомпании") //rarus bonmak 05.12.2019 14456
		ИЛИ Объект.ВидКонтактногоЛица = 
		ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоСотрудника") Тогда //rarus bonmak 05.12.2019 14456
		
		//rarus FominskiyAS 08.07.2019  mantis 14191 +++
		//Элементы.Владелец.Заголовок 	   = "Контрагент";
		//rarus bonmak 05.12.2019 14456 закомментировал ++
		//Если ТекущийЯзык().КодЯзыка ="en" тогда
		//	Элементы.Владелец.Заголовок 	   = "Counterpart";
		//иначе
		//	Элементы.Владелец.Заголовок 	   = "Контрагент";
		//КонецЕсли;
		//rarus bonmak 05.12.2019 14456 --
		//rarus FominskiyAS 08.07.2019  mantis 14191 ---  
		Элементы.Владелец.Доступность	   = Истина;
		Элементы.Владелец.ТолькоПросмотр = Ложь;
		
		//ИначеЕсли Объект.ВидКонтактногоЛица = 
		//		ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ЛичныйКонтакт") Тогда
		
		//	Элементы.ОбъектВладелец.Заголовок 	   = "Ответственный";
		//	Элементы.ОбъектВладелец.Доступность	   = Ложь;
		//	Элементы.ОбъектВладелец.ТолькоПросмотр = Истина
		//	
		//Иначе
		//	
		//	Элементы.ОбъектВладелец.Заголовок 	   = "Ответственный";
		//	Элементы.ОбъектВладелец.Доступность	   = Истина;
		//	Элементы.ОбъектВладелец.ТолькоПросмотр = Ложь;
		
	КонецЕсли;
	
	// rarus agar 21.04.2021 17484 ++
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКомпании") Тогда
		Элементы.ДилерскаяСтанция.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ДилерскаяСтанция.ТолькоПросмотр = Ложь;
	КонецЕсли;
	// rarus agar 21.04.2021 17484 --
	
КонецПроцедуры	

&НаКлиенте
Функция ОпределитьПозицииПробелов()

	Пробелы = Новый Массив;

	Для а = 1 По 2 Цикл

		Пробелы.Добавить(0);

	КонецЦикла; 

	КолПробелов = 0;

	Для а = 1 По СтрДлина(Объект.Наименование) Цикл

		Если Сред(Объект.Наименование, а, 1) = " " Тогда

			Пробелы[КолПробелов] = а;
			КолПробелов = КолПробелов + 1;

		КонецЕсли;

		Если КолПробелов = 2 Тогда

			Прервать;

		КонецЕсли;

	КонецЦикла;

	Возврат Пробелы;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ВидимостьДопонительнойИнформации(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	//tenkam	
	//Если Объект.ВидКонтактногоЛица = 
	//		ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда
	//	Элементы.ГруппаРеквизитыКонтрагента.Видимость = Истина;
	//Иначе
	//	Элементы.ГруппаРеквизитыКонтрагента.Видимость = Ложь;
	//КонецЕсли; 

КонецПроцедуры

// Конец ОбщегоНазначения


// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПодключаемаяКоманда(ЭтотОбъект, Команда.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВводаАдреса(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьКонтактнуюИнформацию(Результат = Неопределено)
	
	Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецФункции

//rarus sergei 14.12.2016 mantis 7184 ++
&НаКлиенте
Процедура ОбновитьОтображениеКонтактнойИнформации()
	Если Объект.ОтправлятьПисьмаНапоминанияПоДоставкеИзделий ИЛИ Объект.ОтправлятьПФМ15 Тогда
		ЕстьАдресЭП = ЛОЖЬ;
		Для каждого строкаКИ Из ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
			Если строкаКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты") И ЕстьАдресЭП = ЛОжь Тогда
				Элементы[строкаКИ.ИмяРеквизита].ОтметкаНезаполненного = Истина;	
				ЕстьАдресЭП = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
	    Если ЕстьАдресЭП = Ложь Тогда
			//rarus FominskiyAS 19.04.2019  mantis 14191 +++
			//Сообщить("Нельзя установить признаки ""Отправлять письма напоминания по доставке изделий"" и ""Отправлять ПФ М-15"", если у контактного лица нет адреса электронной почты");
			Сообщить(НСтр("ru = 'Нельзя установить признаки """"Отправлять письма напоминания по доставке продуктов"""" и """"Отправлять ПФ М-15"""", если у контактного лица нет адреса электронной почты'; en = 'Action failed '"));
			//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
		    Объект.ОтправлятьПисьмаНапоминанияПоДоставкеИзделий = Ложь;
			Объект.ОтправлятьПФМ15 = ЛожЬ;
		КонецЕсли;
	ИначеЕсли Объект.ОтправлятьПисьмаНапоминанияПоДоставкеИзделий = Ложь И Объект.ОтправлятьПФМ15 = Ложь Тогда
		 Для каждого строкаКИ Из ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
			Если строкаКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты") Тогда
				Элементы[строкаКИ.ИмяРеквизита].ОтметкаНезаполненного = Ложь;	
				Прервать;
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры
//rarus sergei 14.12.2016 mantis 7184 --

// Конец СтандартныеПодсистемы.КонтактнаяИнформация


// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	//УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));

КонецПроцедуры


//RARUS sergei 22.06.2016 Mantis 6976 Отбор договора по контрагенту
&НаКлиенте
Процедура КонтактноеЛицоПоДоговоруНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда			
		СтандартнаяОбработка = Ложь;
		ЗначениеОтбора = Новый Структура("Владелец", Объект.Владелец);
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	    ПараметрыФормы.Вставить("Владелец", Объект.Владелец);			
		Результат = ОткрытьФорму("Справочник.Scan_ДоговорыВзаиморасчетов.ФормаВыбора",ПараметрыФормы,Элементы.КонтактноеЛицоПоДоговору); 
	КонецЕсли;
КонецПроцедуры
//rarus sergei 25.08.2016 mantis 7163 ++   

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// rarus tenkam 05.04.2019 mantis 14316 +++
	//ПрисоединенныеФайлы.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	РаботаСФайлами.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	// rarus tenkam 05.04.2019 mantis 14316 ---
КонецПроцедуры

&НаКлиенте
Процедура НедействителенПриИзменении(Элемент)
	//rarus abrant 16.11.2017 mantis 12037 +++
	Если Объект.Недействителен Тогда
		Объект.ОтправлятьПисьмаНапоминанияПоДоставкеИзделий = Ложь;
		Объект.ОтправлятьПФМ15 = Ложь;
		Объект.ОтправлятьПФЗаявкиНаДействие = Ложь;
		Объект.ОтправлятьПисьмаНапоминанияПоДоставкеИзделийПовторно = Ложь;
		Объект.ОтправлятьПФЗаявкиПеревозчику = Ложь;
		Объект.ОтправлятьПФМХ1МХ3 = Ложь;
		Объект.ОтправлятьПФМХ3 = Ложь;
		Элементы.ГруппаНастройки.Доступность = Ложь;
	Иначе
		Элементы.ГруппаНастройки.Доступность = Истина;
	КонецЕсли;
	//rarus abrant 16.11.2017 mantis 12037 ---
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	
	//rarus abrant 16.11.2017 mantis 12037 +++
	Если Объект.Недействителен Тогда
		Объект.ОтправлятьПисьмаНапоминанияПоДоставкеИзделий = Ложь;
		Объект.ОтправлятьПФМ15 = Ложь;
		Объект.ОтправлятьПФЗаявкиНаДействие = Ложь;
		Объект.ОтправлятьПисьмаНапоминанияПоДоставкеИзделийПовторно = Ложь;
		Объект.ОтправлятьПФЗаявкиПеревозчику = Ложь;
		Объект.ОтправлятьПФМХ1МХ3 = Ложь;
		Объект.ОтправлятьПФМХ3 = Ложь;
		Элементы.ГруппаНастройки.Доступность = Ложь;
	КонецЕсли;
	//rarus abrant 16.11.2017 mantis 12037 ---
	
	ВладелецПриИзмененииНаСервере();		// rarus tenkam 19.03.2018 mantis 9428 +
КонецПроцедуры

//rarus sergei 25.08.2016 mantis 7163 --   

//RARUS sergei 22.06.2016 Mantis 6976 Отбор договора по контрагенту

// Конец СтандартныеПодсистемы.Свойства

// rarus tenkam 20.03.2018 mantis 9428 +++
&НаСервере
Процедура ДилерПриИзмененииНаСервере()
	ТекВладелец = Объект.Владелец;
	//rarus bonmak 03.06.2020 16165 ++
	//rarus bonmak 15.04.2020 14456 ++					
	Если ТекВладелец <> Объект.ДилерскаяСтанция.Контрагент Тогда
		Объект.Владелец = Объект.ДилерскаяСтанция.Контрагент;
	КонецЕсли;
	//ЗначениеВладельца = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Объект.ДилерскаяСтанция);
	//Если ТекВладелец <> ЗначениеВладельца Тогда
	//	Объект.Владелец = ЗначениеВладельца;
	//КонецЕсли;
	//rarus bonmak 15.04.2020 14456 --
	//rarus bonmak 03.06.2020 16165 --
	ВладелецПриИзмененииНаСервере()
КонецПроцедуры

&НаКлиенте
Процедура ДилерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ДилерскаяСтанция) Тогда
		ДилерПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте                                                                                                
Процедура ВладелецПриИзменении(Элемент)
	ВладелецПриИзмененииНаСервере();                    	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	НовыйМассив = Новый Массив();
	Если ЗначениеЗаполнено(Объект.Владелец) И
		Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда // rarus tenkam 20.04.2021 mantis 17484 +
		
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Контрагент", "Объект.Владелец");
		НовыйМассив.Добавить(НоваяСвязь);
	КонецЕсли;
	Элементы.ДилерскаяСтанция.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыйМассив);
	
	// rarus agar 21.04.2021 17484 ++
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКомпании") Тогда
		Объект.ДилерскаяСтанция = Объект.Владелец;
	КонецЕсли;
	// rarus agar 21.04.2021 17484 --
	
КонецПроцедуры
// rarus tenkam 20.03.2018 mantis 9428 ---

//rarus vikhle 15.04.2021 mt 17484 +++
&НаКлиенте
Процедура ДилерскаяСтанцияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДилерскаяСтанцияОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение); //rarus vikhle 15.04.2021 mt 17484
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДилерскаяСтанцияОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ДилерскаяСтанция = ВыбраннаяКомпания;
	Иначе
		Объект.ДилерскаяСтанция = Неопределено;	
	КонецЕсли;
	
	ДилерПриИзменении(Элементы.ДилерскаяСтанция);
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	// rarus agar 21.04.2021 17484 ++
	// КЛ можно указывать и для не активных дилеров
	//ОписаниеОповещения = Новый ОписаниеОповещения("ВладелецОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение); //rarus vikhle 15.04.2021 mt 17484
	//Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка);
	// rarus agar 21.04.2021 17484 --
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Владелец = ВыбраннаяКомпания;
	Иначе
		Объект.Владелец = Неопределено;	
	КонецЕсли;
	
	ВладелецПриИзменении(Элементы.Владелец);
	
КонецПроцедуры
//rarus vikhle 15.04.2021 mt 17484 ---

// rarus agar 21.04.2021 17484 ++
&НаКлиенте
Процедура ВладелецНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.Scan_ВидыКонтактныхЛиц.КонтактноеЛицоКомпании") Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИспользоватьОтборДилерАктивен", Ложь);
		
		ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элементы.Владелец);
	КонецЕсли;
	
КонецПроцедуры
// rarus agar 21.04.2021 17484 --

#КонецОбласти
