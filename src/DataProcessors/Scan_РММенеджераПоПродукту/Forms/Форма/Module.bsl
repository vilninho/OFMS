//rarus pechek 08.06.2020 mantis 16183 +++ 
&НаКлиенте
Перем мКритерииПоискаПоСписку;
&НаКлиенте
Перем мКритерииПоискаПоКоридору;
&НаКлиенте
Перем мИменаСтраниц;
//rarus pechek 08.06.2020 mantis 16183 --- 

// rarus agar 09.12.2020 16947 ++
&НаКлиенте
Перем мВыбраныСсылкиРаспределение;
// rarus agar 09.12.2020 16947 --
//rarus bonmak 07.04.2021 17448 ++
&НаКлиенте
Перем мВыбраныСсылкиСвободные;
&НаКлиенте
Перем мВыбраныСсылкиВсеЗаказы;
&НаКлиенте
Перем мВыбраныСсылкиПродажи;
//rarus bonmak 07.04.2021 17448 --

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//rarus pechek 08.06.2020 mantis 16183 +++ 
	Элементы.ГруппаОтборРаспределение.Видимость = Ложь;
	Элементы.ГруппаОтборСвободные.Видимость = Ложь;
	Элементы.ГруппаОтборПродажи.Видимость = Ложь;
	Элементы.ГруппаОтборВсеЗаказы.Видимость = Ложь;
	Элементы.ГруппаОтборРезервSRU.Видимость = Ложь; //rarus vikhle 06.08.2021 mt 17834
	
	КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа;	
	
	Элементы.ЗаказыПоМоделямГруппа.Видимость = Ложь;
	Элементы.ГруппаЗаказыПоМоделямСвободные.Видимость 	= Ложь;
	Элементы.ГруппаЗаказыПоМоделямПродажи.Видимость 	= Ложь;
	Элементы.ГруппаЗаказыПоМоделямВсеЗаказы.Видимость 	= Ложь;
	Элементы.ГруппаЗаказы_ПоСегментамВсеЗаказы.Видимость =	Ложь;  //rarus kabany 21.04.2021 17525 +
	Элементы.ГруппаЗаказы_ПоСегментамПродажи.Видимость =	Ложь;//rarus kabany 21.04.2021 17525 +
	Элементы.ГруппаЗаказы_ПоСегментамРаспределение.Видимость =	Ложь;//rarus kabany 21.04.2021 17525 +
	Элементы.ГруппаЗаказы_ПоСегментамСвободные.Видимость =	Ложь;//rarus kabany 21.04.2021 17525 +
	Элементы.ГруппаПродуктыПоОтветственным.Видимость = Ложь; //rarus vikhle 06.08.2021 mt 17834
	
	//rarus pechek 08.06.2020 mantis 16183 --- 
	
	//rarus agar 31.08.2020 15696 ++
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	Надстройки.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	//rarus agar 31.08.2020 15696 --
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг); //rarus vikhle 06.08.2021 mt 17834
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СоглашенияОПоставке, "МенеджерПоПродукту", Пользователи.ТекущийПользователь().Сотрудник, ВидСравненияКомпоновкиДанных.Равно,,ложь,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);//rarus ozhnik 15888 13.07.2020 + 
	
	//rarus vikhle 09.08.2021 mt 17834 +++
	ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРаспределение, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободные, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводПродажи, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеЗаказы, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);//rarus vikhle 06.08.2021 mt 17834
	
	// rarus tenkam 24.08.2020 mantis 16422 +++
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	// rarus tenkam 24.08.2020 mantis 16422 ---
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);//rarus vikhle 06.08.2021 mt 17834
	//rarus vikhle 09.08.2021 mt 17834 ---
	
	ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(); //rarus pechek 30.06.2020 mantis 16201	
	ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре(); //rarus agar 29.12.2020 17025 +-
	
	ОбновитьПродуктыПоОтветственнымНаСервере();//rarus vikhle 12.08.2021 mt 17834
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// rarus agar 09.12.2020 16947 ++
	мВыбраныСсылкиРаспределение = Новый Массив;
	//rarus bonmak 07.04.2021 17448 ++
	мВыбраныСсылкиСвободные = Новый Массив;
	мВыбраныСсылкиВсеЗаказы = Новый Массив;
	мВыбраныСсылкиПродажи = Новый Массив;
	//rarus bonmak 07.04.2021 17448 --
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	// rarus agar 09.12.2020 16947 --
	//rarus bonmak 07.04.2021 17448 ++
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы); 
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
	//rarus bonmak 07.04.2021 17448 --
	
	//rarus pechek 08.06.2020 mantis 16183 +++
	ТумблерПоиск = "0";
	ЗаполнитьМассивИменСтраниц();
	
	мКритерииПоискаПоКоридору = ПолучитьМассивКритериевПоиска(); 
	Элементы.ПолеОтбораПоПериодуРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуСвободные.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуПродажи.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуВсеЗаказы.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуРезервSRU.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);//rarus vikhle 06.08.2021 mt 17834
	
	//rarus vikhle 09.08.2021 mt 17834 +++ перенес в присозданиинасервере
	//ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	//БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРаспределение, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободные, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводПродажи, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеЗаказы, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);//rarus vikhle 06.08.2021 mt 17834
	//
	//// rarus tenkam 24.08.2020 mantis 16422 +++
	//ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//// rarus tenkam 24.08.2020 mantis 16422 ---
	//ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);//rarus vikhle 06.08.2021 mt 17834
	//rarus vikhle 09.08.2021 mt 17834 ---
	
	УправлениеДиалогом(); 
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогом()
	//rarus pechek 08.06.2020 mantis 16183 +++
	Если ТумблерПоиск = "0" Тогда
		Элементы.ГруппаПоСпискуРаспределение.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийРаспределение.Видимость = Ложь;
		Элементы.ГруппаПоСпискуСвободные.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийСвободные.Видимость = Ложь;
		Элементы.ГруппаПоСпискуПродажи.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийПродажи.Видимость = Ложь;
		Элементы.ГруппаПоСпискуВсеЗаказы.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийВсеЗаказы.Видимость = Ложь;
		//rarus vikhle 06.08.2021 mt 17834 +++
		Элементы.ГруппаПоСпискуРезервSRU.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийРезервSRU.Видимость = Ложь;
		//rarus vikhle 06.08.2021 mt 17834 ---
		ПолеС = "";
		ПолеПо = "";
		ПолеОтбораПоПериоду = ""
	Иначе
		Элементы.ГруппаПоСпискуРаспределение.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийРаспределение.Видимость = Истина;
		Элементы.ГруппаПоСпискуСвободные.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийСвободные.Видимость = Истина;
		Элементы.ГруппаПоСпискуПродажи.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийПродажи.Видимость = Истина;
		Элементы.ГруппаПоСпискуВсеЗаказы.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийВсеЗаказы.Видимость = Истина;
		//rarus vikhle 06.08.2021 mt 17834 +++
		Элементы.ГруппаПоСпискуРезервSRU.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийРезервSRU.Видимость = Истина;
		//rarus vikhle 06.08.2021 mt 17834 ---
		ПолеВвода = "";
		КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.ПустаяСсылка();
	КонецЕсли; 
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецПроцедуры
#КонецОбласти

#Область СобытияЭлементовФормы    
&НаКлиенте
Процедура ТумблерПоискРаспределениеПриИзменении(Элемент)
	//rarus pechek 08.06.2020 mantis 16183 +++
	УправлениеДиалогом();
	Если ТумблерПоиск = "1" Тогда
		Элементы.ПолеОтбораПоПериодуРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискСвободныеПриИзменении(Элемент)
	УправлениеДиалогом();  //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискПродажиПриИзменении(Элемент)
	УправлениеДиалогом();  //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискВсеЗаказыПриИзменении(Элемент)
	УправлениеДиалогом(); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры


&НаКлиенте
Процедура КритерийПоискаПриИзменении(Элемент)
	ПолеВвода = "";//rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуРаспределениеПриИзменении(Элемент)
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)  //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуСвободныеПриИзменении(Элемент)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуПродажиПриИзменении(Элемент)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуВсеЗаказыПриИзменении(Элемент)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент) 
	//rarus pechek 08.06.2020 mantis 16183 +++	
	Для Каждого Страница ИЗ мИменаСтраниц Цикл
		ИмяПоляС = "ПолеС" + Страница;
		ИмяПоляПо = "ПолеПо" + Страница;
		Если Элемент.ТекстРедактирования = "№ Заказа" ИЛИ Элемент.ТекстРедактирования = "№ Шасси" Тогда
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Строка");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Иначе
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Дата");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Дата");
		КонецЕсли;
		ПолеС = Неопределено;
		ПолеПо = Неопределено;
	КонецЦикла;	
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецПроцедуры



&НаКлиенте
Процедура ДействияИПоиск(Команда)	
	//rarus pechek 08.06.2020 mantis 16183 +++	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ИмяГруппыОтбора = "ГруппаОтборРаспределение";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда
		ИмяГруппыОтбора = "ГруппаОтборСвободные";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
		ИмяГруппыОтбора = "ГруппаОтборПродажи";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
		ИмяГруппыОтбора = "ГруппаОтборВсеЗаказы";
	//rarus vikhle 06.08.2021 mt 17834 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда
		ИмяГруппыОтбора = "ГруппаОтборРезервSRU";
	//rarus vikhle 06.08.2021 mt 17834 ---
	КонецЕсли;
	
	Если Не Элементы[ИмяГруппыОтбора].Видимость Тогда 
		Элементы[ИмяГруппыОтбора].Видимость = Истина;
	Иначе
		Элементы[ИмяГруппыОтбора].Видимость = Ложь;	
	КонецЕсли;	
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецПроцедуры

&НаКлиенте 
Функция ПолучитьМассивКритериевПоиска()
	//rarus pechek 08.06.2020 mantis 16183 +++	
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	МассивКолонокОтбора.Добавить("№ Шасси");
	МассивКолонокОтбора.Добавить("PDD");
	МассивКолонокОтбора.Добавить("CDD");
	МассивКолонокОтбора.Добавить("CDD2");
	МассивКолонокОтбора.Добавить("EDD");
	МассивКолонокОтбора.Добавить("DD");
	МассивКолонокОтбора.Добавить("DD2");
	МассивКолонокОтбора.Добавить("DDS");
	МассивКолонокОтбора.Добавить("Бронь");	
	Возврат МассивКолонокОтбора;   
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецФункции


&НаКлиенте
Процедура ЗаполнитьМассивИменСтраниц()
	//rarus pechek 08.06.2020 mantis 16183 +++	
	мИменаСтраниц = Новый Массив;
	мИменаСтраниц.Добавить("Распределение");
	мИменаСтраниц.Добавить("Свободные");
	мИменаСтраниц.Добавить("Продажи");
	мИменаСтраниц.Добавить("ВсеЗаказы");
	//rarus pechek 08.06.2020 mantis 16183 ---
	мИменаСтраниц.Добавить("РезервSRU"); //rarus vikhle 06.08.2021 mt 17834 
КонецПроцедуры	

&НаСервере
Функция ПолучитьСписокПоСтранице(Страница)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	Если Страница = "Распределение" Тогда
		Возврат ЗаказыНаЗаводРаспределение;
	ИначеЕсли Страница = "Свободные" Тогда
		Возврат ЗаказыНаЗаводСвободные;
	ИначеЕсли Страница = "Продажи" Тогда
		Возврат ЗаказыНаЗаводПродажи;
	ИначеЕсли Страница = "ВсеЗаказы" Тогда
		Возврат ЗаказыНаЗаводВсеЗаказы;
	//rarus vikhle 06.08.2021 mt 17834 +++
	ИначеЕсли Страница = "РезервSRU" Тогда
		Возврат ЗаказыНаЗаводРезервSRU;
	//rarus vikhle 06.08.2021 mt 17834 ---
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 ---
КонецФункции	

&НаСервере
Процедура ОкПоискПоКритериямНаСервере(Страница)
	//rarus pechek 08.06.2020 mantis 16183 +++	

	Если ТумблерПоиск = "0" Тогда  
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
		МассивПодстрок2 = Новый Массив;
		// rarus agar 28.05.2021 16927 ++
		//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивПодстрок2,МассивПодстрок);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок2,МассивПодстрок, Истина);
		// rarus agar 28.05.2021 16927 --
		
		//преобразование массива, чтобы находить заказы по номеру без нулей
		Индекс = -1;
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;	
				КонецЕсли;
			КонецЦикла;
			//rarus pechek 19.06.2020 mantis 16201 +++
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (7 - КолВоЗнаковЧисло) Цикл  // 7-длина номера шасси  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
			//rarus pechek 19.06.2020 mantis 16201 ---
		КонецЕсли;
		// rarus agar 28.05.2021 16927 ++
		//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивПодстрок,МассивПодстрок2); 
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок, МассивПодстрок2, Истина);
		// rarus agar 28.05.2021 16927 --
		
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.МодельПродукта Тогда
			ЛевоеЗначение = "Модель.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.Дилер Тогда
			ЛевоеЗначение = "Дилер.Наименование";
		КонецЕсли;
		
		ОбъектНастройки = ПолучитьСписокПоСтранице(Страница).КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
		ОбъектНастройки.Очистить();
		
		НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НовыйОтбор.ПравоеЗначение = МассивПодстрок;
	Иначе
		ОбъектНастройки =  ПолучитьСписокПоСтранице(Страница).КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		ОбъектНастройки.Очистить();
		
		// rarus tenkam 17.06.2020 mantis 16201 +++
		Если ПолеОтбораПоПериоду = "№ Шасси" Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		Иначе
			ЛевоеЗначение = ПолеОтбораПоПериоду;
		КонецЕсли;
		
		Если ПолеОтбораПоПериоду = "№ Шасси" ИЛИ
			ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ДинамическийСписок = ПолучитьСписокПоСтранице(Страница);
			
			СообщениеОбОшибке = "";
			ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(ДинамическийСписок, ЛевоеЗначение, ПолеС, ПолеПо,,СообщениеОбОшибке);
			Если НЕ ОтборУстановлен Тогда
				Сообщить(СообщениеОбОшибке);
			КонецЕсли;
		Иначе
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеС; 	
			
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеПо;	
		КонецЕсли;
		
		//Если ПолеОтбораПоПериоду = "№ Шасси" Тогда 
		//	ЛевоеЗначение = "Шасси"
		//Иначе
		//	ЛевоеЗначение = ПолеОтбораПоПериоду;
		//КонецЕсли;	
		//
		//Если ПолеОтбораПоПериоду <> "№ Заказа" Тогда 
		//	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//	НовыйОтбор.Использование  = Истина;
		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		//	НовыйОтбор.ПравоеЗначение = ПолеС;  
		//	
		//	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//	НовыйОтбор.Использование  = Истина;
		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		//	НовыйОтбор.ПравоеЗначение = ПолеПо; 
		//КонецЕсли;
		//
		//
		//Если ПолеОтбораПоПериоду = "№ Заказа" Тогда
		//	ДинамическийСписок = ПолучитьСписокПоСтранице(Страница);
		//	Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруЗаказаНаЗавод(ДинамическийСписок, "ЗаказНаЗавод.Наименование", ПолеС, ПолеПо);
		//КонецЕсли;
		// rarus tenkam 17.06.2020 mantis 16201 ---
		
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 ---
	
КонецПроцедуры

&НаКлиенте
Процедура ОкПоискПоКритериям(Команда)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	ИспользоватьЧислоВместоСтроки = Ложь;
	Если ТумблерПоиск = "0" Тогда 	
		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Если СокрЛП(ПолеВвода) = "" Тогда
			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПолеОтбораПоПериоду) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Попытка
			ЧислоПолеС = Число(ПолеС);
			ЧислоПолеПо = Число(ПолеПо);
			ИспользоватьЧислоВместоСтроки = Истина;
		Исключение
		КонецПопытки;
		
		//Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо <= ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда
		Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо < ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда  //rarus pechek 19.06.2020 mantis 16201
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
		ИначеЕсли ИспользоватьЧислоВместоСтроки Тогда 	
			//Если ЧислоПолеПо <= ЧислоПолеС Тогда
			Если ЧислоПолеПо < ЧислоПолеС Тогда	//rarus pechek 19.06.2020 mantis 16201
				Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	СнятьФлажки(Команды.СнятьФлажки); //rarus agar 22.03.2021 17501 +-
	
	ОкПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
	//rarus pechek 08.06.2020 mantis 16183 ---	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПоискПоКритериям(Команда)
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя); //rarus pechek 08.06.2020 mantis 16183 +++	
КонецПроцедуры

&НаСервере
Процедура ОтключитьПоискПоКритериямНаСервере(Страница)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	Список = ПолучитьСписокПоСтранице(Страница);
	Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();
	ПолеВвода = "";
	ПолеС  = Неопределено;
	ПолеПо = Неопределено;
	//rarus pechek 08.06.2020 mantis 16183 ---	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоЗаказов (ТекущаяСтраница, ПовторныйРасчет = Ложь)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	КнопкаКоличество = "ЗаказыНаЗавод" + ТекущаяСтраница + "КолВо";
	
	Если ТекущаяСтраница = "Распределение" И ПовторныйРасчет Тогда
		КоличествоСтрокРаспределение = РассчитатьКоличествоСтрок("Распределение");
		Элементы[КнопкаКоличество].Заголовок = НСтр("ru = 'Количество продуктов:';en = 'Number of products:'") + КоличествоСтрокРаспределение;
	ИначеЕсли ТекущаяСтраница = "Свободные" И (КоличествоСтрокСвободные = 0 ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокСвободные = РассчитатьКоличествоСтрок("Свободные");
		Элементы[КнопкаКоличество].Заголовок = НСтр("ru = 'Количество продуктов:';en = 'Number of products:'") + КоличествоСтрокСвободные;		
	ИначеЕсли ТекущаяСтраница = "Продажи" И (КоличествоСтрокПродажи = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокПродажи = РассчитатьКоличествоСтрок("Продажи");
		Элементы[КнопкаКоличество].Заголовок = НСтр("ru = 'Количество продуктов:';en = 'Number of products:'") + КоличествоСтрокПродажи; 
	ИначеЕсли ТекущаяСтраница = "ВсеЗаказы" И (КоличествоСтрокВсеЗаказы = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокВсеЗаказы = РассчитатьКоличествоСтрок("ВсеЗаказы");
		Элементы[КнопкаКоличество].Заголовок = НСтр("ru = 'Количество продуктов:';en = 'Number of products:'") + КоличествоСтрокВсеЗаказы; 
	//rarus vikhle 06.08.2021 mt 17834 +++
	ИначеЕсли ТекущаяСтраница = "РезервSRU" И (КоличествоСтрокРезервSRU = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокРезервSRU = РассчитатьКоличествоСтрок("РезервSRU");
		Элементы[КнопкаКоличество].Заголовок = НСтр("ru = 'Количество продуктов:';en = 'Number of products:'") + КоличествоСтрокРезервSRU;
	//rarus vikhle 06.08.2021 mt 17834 ---
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 ---	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоЗаказовКоманда(Команда)
	ОбновитьКоличествоЗаказов(Элементы.Страницы.ТекущаяСтраница.Имя, Истина); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаСервере
Функция РассчитатьКоличествоСтрок(ТекущаяСтраница)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	НазваниеСписка = "ЗаказыНаЗавод" + ТекущаяСтраница;
	
	Схема = Элементы[НазваниеСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы[НазваниеСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаРезультат.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	//rarus bonmak 01.09.2020 16505 ++
	//ТаблицаРезультат.Свернуть("Продукт");
	//НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "Продукт");
	ТаблицаРезультат.Свернуть("ПродуктКоличество");
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "ПродуктКоличество");
	//rarus bonmak 01.09.2020 16505 --
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
	//rarus pechek 08.06.2020 mantis 16183 ---	
КонецФункции

&НаКлиенте
Процедура ЗаказыПоМоделямВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямКолВо" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводРаспределение.Отбор.Элементы.Очистить();
		УстановитьОтборПоМодели(Элемент.ТекущиеДанные.МодельПродукта);
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 ---	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоМоделямСвободныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводСвободные.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободные, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 ---	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоМоделямПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямПродажиМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямПродажиКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводПродажи.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводПродажи, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 ---	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоМоделямВсеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямВсеЗаказыМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямВсеЗаказыКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводВсеЗаказы.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеЗаказы, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 +++	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоМодели(Модель)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	ОбъектНастройки = ЗаказыНаЗаводРаспределение.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
	ОбъектНастройки.Очистить();
	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование  = Истина;
	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Модель");
	Если НЕ Модель = "" Тогда
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		НовыйОтбор.ПравоеЗначение = Модель;	
	Иначе
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 +++	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаказыПоМоделям(Команда)
	//rarus pechek 08.06.2020 mantis 16183 +++	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ИмяГруппыЗаказовПоМоделям = "ЗаказыПоМоделямГруппа";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямСвободные";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямПродажи";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямВсеЗаказы";
	КонецЕсли;	
	
	Элементы[ИмяГруппыЗаказовПоМоделям].Видимость = НЕ Элементы[ИмяГруппыЗаказовПоМоделям].Видимость;
	//rarus pechek 08.06.2020 mantis 16183 +++		
КонецПроцедуры

//Все заказы
&НаКлиенте
Процедура ПоказатьВсеПродукты(Команда)
	ПоказатьВсеПродуктыНаСервере();//rarus pechek 08.06.2020 mantis 16183 +++	
КонецПроцедуры

&НаСервере
Процедура ПоказатьВсеПродуктыНаСервере()
	//rarus pechek 08.06.2020 mantis 16183 +++	
	СтрокаУсловияЗапроса = "	И Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	|	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта В (ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.New), ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Open))
	|	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	|	И (Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия ЕСТЬ NULL)
	|	И Scan_СводнаяИнформацияПоПродукту.Продукт.БУ = ЛОЖЬ
	|	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)";	
	
	Если НЕ СтрНайти(ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса,СтрокаУсловияЗапроса) = 0 Тогда
		ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса = СтрЗаменить(ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса,СтрокаУсловияЗапроса,"");
		Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка = Истина;	
	Иначе
		ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса = ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса + СтрокаУсловияЗапроса; 
		Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка = Ложь;
	КонецЕсли;
	//rarus pechek 08.06.2020 mantis 16183 +++		
КонецПроцедуры	


&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаПродукт(СтрокаРС)
	//rarus pechek 15.06.2020 mantis 16183 +++	
	// rarus agar 03.11.2020 16010 ++
	ПродуктСсылка = Справочники.Scan_Изделия.ПустаяСсылка();
	Если ТипЗнч(СтрокаРС) = Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту") Тогда
		ПродуктСсылка = СтрокаРС.Продукт;
	КонецЕсли;
	// rarus agar 03.11.2020 16010 --
	
	Возврат ПродуктСсылка;
	//rarus pechek 15.06.2020 mantis 16183 ---
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборСписка (Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus pechek 15.06.2020 mantis 16183 +++	
	СтандартнаяОбработка = Ложь;
	ИмяПоля = Поле.Имя;
	
	ПродуктСсылка = ПолучитьСсылкуНаПродукт(ВыбраннаяСтрока);
	// rarus agar 09.12.2020 16947 ++
	Если ИмяПоля = "ЗаказыНаЗаводРаспределениеФлаг" Тогда
		мИндекс = мВыбраныСсылкиРаспределение.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиРаспределение.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиРаспределение.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();	
		ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводПродажиФлаг" Тогда //rarus bonmak 07.04.2021 17448 ++ 
		мИндекс = мВыбраныСсылкиПродажи.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиПродажи.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиПродажи.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество(); 	
		ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводСвободныеФлаг" Тогда 
		мИндекс = мВыбраныСсылкиСвободные.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиСвободные.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиСвободные.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество(); 	
		ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводВсеЗаказыФлаг" Тогда 
		мИндекс = мВыбраныСсылкиВсеЗаказы.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиВсеЗаказы.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиВсеЗаказы.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхВсеЗаказы = мВыбраныСсылкиВсеЗаказы.Количество(); 	
		ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
		//rarus bonmak 07.04.2021 17448 --
	Иначе
		ПоказатьЗначение(,ПродуктСсылка);
	КонецЕсли;
	// rarus agar 09.12.2020 16947 ++
	//rarus pechek 15.06.2020 mantis 16183 ---	
КонецПроцедуры


&НаКлиенте
Процедура ЗаказыНаЗаводРаспределениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);  //rarus pechek 15.06.2020 mantis 16183 +++
КонецПроцедуры

//rarus agar 18.08.2020 16138 ++
&НаСервереБезКонтекста
Процедура УстановитьОформлениеЯчейкиЦветКабины(Строки)
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	Для Каждого СтрокаСписка Из Строки Цикл
		Если Не СтрокаСписка.Значение.Данные.ЦветКабиныПТС.Пустая() Тогда
			ЦветФона = СтрокаСписка.Значение.Данные.ЦветКабиныПТС.ЦветФона.Получить();
			Если ЦветФона <> ЧерныйЦвет И НЕ СтрокаСписка.Значение.Оформление.Получить("ЦветКабины") = Неопределено Тогда //rarus vikhle 12.03.2021 mt 17405
				СтрокаСписка.Значение.Оформление["ЦветКабины"].УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводРаспределениеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводСвободныеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводПродажиПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводВсеЗаказыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры
//rarus agar 18.08.2020 16138 --

&НаКлиенте
Процедура ЗаказыНаЗаводСвободныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); //rarus pechek 15.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); //rarus pechek 15.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводВсеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); //rarus pechek 15.06.2020 mantis 16183 +++
КонецПроцедуры

//rarus kabany 21.04.2021 17525 +++
//ЗАКАЗЫ ПО СЕГМЕНТАМ
&НаКлиенте
Процедура ПродуктыПоСегментам(Команда)	ИмяЭлементаГруппы = "ГруппаЗаказы_ПоСегментам" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяСписка = "ЗаказыНаЗавод" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяКнопки = ИмяСписка + "ПродуктыПоСегментам"; 
	Элементы[ИмяЭлементаГруппы].Видимость = НЕ Элементы[ИмяЭлементаГруппы].Видимость;
	Элементы[ИмяКнопки].Пометка = НЕ Элементы[ИмяКнопки].Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоСегментамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	    ЗаказыПоСегментамВыборОбщий(СтандартнаяОбработка, Элемент)			
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискРезервSRUПриИзменении(Элемент) //rarus vikhle 06.08.2021 mt 17834 +++
	
	УправлениеДиалогом();
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ПолеОтбораПоПериодуРезервSRUПриИзменении(Элемент) //rarus vikhle 06.08.2021 mt 17834 +++
	
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент);
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ЗаказыНаЗаводРезервSRUВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 06.08.2021 mt 17834 +++
	
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 --- 

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводРезервSRUПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus vikhle 06.08.2021 mt 17834 +++
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ДеревоПродуктыПоОтветственнымВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 06.08.2021 mt 17834 +++
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.ДеревоПродуктыПоОтветственнымКоличество Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "Продукт");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU,
																				"ОтветственныйЗаРезерв",
																				ТекущиеДанные.ОтветственныйЗаРезерв,
																				ВидСравненияКомпоновкиДанных.Равно);
		// Дополнительно накладываем отбор по продукту, если выбор сделан на 2м уровне группировки																		
		Если ТекущиеДанные.ИмяГруппировки = "Продукт" Тогда  	
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU,
																					"Продукт",
																					ТекущиеДанные.Продукт,
																					ВидСравненияКомпоновкиДанных.Равно);		
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ЗаказыПоСегментамВыборОбщий(СтандартнаяОбработка, Элемент) 
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Распределение Тогда
		ИмяЭлементаСегментов 	= Элементы.ЗаказыПоСегментамРаспределение.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Свободные Тогда
		ИмяЭлементаСегментов 	= Элементы.ЗаказыПоСегментамСвободные.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Продажи Тогда
		ИмяЭлементаСегментов 	= Элементы.ЗаказыПоСегментамПродажи.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ВсеЗаказы Тогда
		ИмяЭлементаСегментов 	= Элементы.ЗаказыПоСегментамВсеЗаказы.Имя;
	КонецЕсли;
		
	ИмяДинамическогоСпискаПродуктов = ИмяДинамическогоСпискаТекущейСтраницы();
	
	Если Элемент.ТекущийЭлемент.Имя = ИмяЭлементаСегментов + "СегментРынкаПродуктов" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.СегментРынкаПродуктов) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.СегментРынкаПродуктов);		
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = ИмяЭлементаСегментов + "Количество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяДинамическогоСпискаПродуктов], "Продукт.СегментРынкаПродуктов", Элемент.ТекущиеДанные.СегментРынкаПродуктов, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
	КонецПроцедуры

&НаСервере
Функция ИмяДинамическогоСпискаТекущейСтраницы() 
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Распределение Тогда
		ИмяЭлементаДинамическогоСписка = "ЗаказыНаЗаводРаспределение";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Свободные Тогда
		ИмяЭлементаДинамическогоСписка = "ЗаказыНаЗаводСвободные";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Продажи Тогда
		ИмяЭлементаДинамическогоСписка = "ЗаказыНаЗаводПродажи";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ВсеЗаказы Тогда
		ИмяЭлементаДинамическогоСписка = "ЗаказыНаЗаводВсеЗаказы";
	КонецЕсли;
	Возврат ИмяЭлементаДинамическогоСписка;
	
КонецФункции
//rarus kabany 21.04.2021 17525 ---
#КонецОбласти



#Область ЗакладкаРегламент
&НаКлиенте
Процедура ОткрытьПереопределениеОпций(Команда)
	ОткрытьФорму("Справочник.Scan_ОпределяемыеПараметрыПоОпциямПродуктов.ФормаСписка"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОпцииПродуктов(Команда)
	ОткрытьФорму("Справочник.Scan_ОпцииПродуктов.ФормаСписка"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставленияСпецификаций(Команда)
	ОткрытьФорму("Справочник.Scan_ПредставленияСпецификаций.ФормаСписка"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьСпецификацииСтандартнойМодели(Команда)
	ОткрытьФорму("Документ.Scan_СпецификацияСтандартнойМодели.ФормаСписка");  //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПечатныеПрайсЛисты(Команда)
	ОткрытьФорму("Документ.Scan_ПечатныйПрайсЛист.ФормаСписка"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьКалькуляции(Команда)
	ОткрытьФорму("Документ.Scan_Калькуляция.ФормаСписка"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУстановкуЦенКомпонентов(Команда)
	ОткрытьФорму("Документ.Scan_УстановкаЦенКомпонентов.ФормаСписка"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры
#КонецОбласти


#Область ЗакладкаОтчеты
&НаКлиенте
Процедура ОткрытьCow(Команда)
	ОткрытьФорму("Отчет.Scan_Cow.Форма"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderIntake(Команда)
	ОткрытьФорму("Отчет.Scan_OrderIntake.Форма"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderDeviation(Команда)
	ОткрытьФорму("Отчет.Scan_OrderDeviation.Форма.ФормаОтчета"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьDeliveries(Команда)
	ОткрытьФорму("Отчет.Scan_DeliveriesReport.Форма.ФормаОтчета"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderBookStatistics(Команда)
	ОткрытьФорму("Отчет.Scan_OrderBookStatistics.Форма"); //rarus pechek 08.06.2020 mantis 16183 +++	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderIntakeOrderBook(Команда)
	ОткрытьФорму("Отчет.Scan_OrderIntakeAndOrderBook.Форма");  //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСводнуюSorderFFU(Команда)
	ОткрытьФорму("Отчет.Scan_СводнаяИнформацияSOrderFFU.Форма"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрименениеSorderFFU(Команда)
	ОткрытьФорму("Отчет.Scan_ПрименениеSOrderFFU.Форма"); //rarus pechek 08.06.2020 mantis 16183 +++
КонецПроцедуры

//rarus vikhle 31.08.2020 mt 16274
&НаКлиенте
Процедура ОткрытьСписокОтгрузок(Команда)
	ОткрытьФорму("Отчет.Scan_СписокОтгрузок.Форма");
КонецПроцедуры
//rarus vikhle 31.08.2020 mt 16274

//сообщение
&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(ПриЗапуске=Ложь)
	//rarus pechek 30.06.2020 mantis 16201+++	
	ТекЯзык = ПользователиИнформационнойБазы.ТекущийПользователь().Язык;
	ТекстДекорации = "";
	
	ПользовательСсылка = Пользователи.ТекущийПользователь();
	Организация = ПользовательСсылка.Организация;
	Если НЕ Организация.Пустая() Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_ПраваИНастройки.Значение КАК Значение,
		               |	Scan_ПраваИНастройки.ПравоНастройка КАК ПравоНастройка
		               |ИЗ
		               |	РегистрСведений.Scan_ПраваИНастройки КАК Scan_ПраваИНастройки
		               |ГДЕ
		               |	Scan_ПраваИНастройки.Объект = &ОрганизацияПользователя
		               |	И Scan_ПраваИНастройки.ПравоНастройка В(&Настройки)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ПравоНастройка";
			                                                                              
		ТЗНастройки = Новый ТаблицаЗначений;
		ТЗНастройки.Колонки.Добавить("Настройка",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.Scan_ПраваИНастройки"));
		НоваяСтрокаТЗ = ТЗНастройки.Добавить();
		НоваяСтрокаТЗ.Настройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов;
		НоваяСтрокаТЗ = ТЗНастройки.Добавить();
		НоваяСтрокаТЗ.Настройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng;	
		
		Запрос.УстановитьПараметр("ОрганизацияПользователя",Организация);
		Запрос.УстановитьПараметр("Настройки",ТЗНастройки);
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов Тогда
					ТекстовоеСообщение = Выборка.Значение;
					Если ТекЯзык = Метаданные.Языки.Русский Тогда
						ТекстДекорации = Выборка.Значение;
					КонецЕсли;
				ИначеЕсли Выборка.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng Тогда 	
					ТекстовоеСообщениеАнгл = Выборка.Значение;
					Если ТекЯзык = Метаданные.Языки.Английский Тогда
						ТекстДекорации = Выборка.Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов.Заголовок = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов.Видимость = Ложь;
	КонецЕсли;
//rarus pechek 30.06.2020 mantis 16201	---
КонецПроцедуры

//rarus agar 29.12.2020 17025 ++
&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре()
	
	ТекстДекорации = Scan_ПраваИНастройки.Scan_Право("ТекстовоеСообщениеПоТекущейПродуктовойСтруктуре");
	
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Заголовок = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 29.12.2020 17025 --

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.Свободные Тогда
		ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(); //rarus pechek 30.06.2020 mantis 16201	
		ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре(); //rarus agar 29.12.2020 17025 +-
	КонецЕсли;
КонецПроцедуры

//rarus agar 30.09.2020 15696 ++
&НаКлиенте
Процедура СоздатьНаОснованииСоглашенияЗапрос(Команда)
	
	МассивВыбранныхСтрок = Элементы.СоглашенияОПоставке.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Выберите документ'; en = 'Select document'"));
		Возврат;
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));
		Возврат;
	Иначе
		ТекущийДокСоглашениеОПоставке = Элементы.СоглашенияОПоставке.ТекущаяСтрока;
		ПараметрыФормы = Новый Структура("Основание", ТекущийДокСоглашениеОПоставке);
		ОткрытьФорму("Документ.Scan_ЗапросНаНадстройки.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 30.09.2020 15696 --

#КонецОбласти 

// rarus agar 09.12.2020 16947 ++
&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	ТЗ = СписокВТЗнаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
			Если мВыбраныСсылкиРаспределение.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиРаспределение.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();
			ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
			//rarus bonmak 07.04.2021 17448 ++
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
			Если мВыбраныСсылкиПродажи.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиПродажи.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество();
			ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда 
			Если мВыбраныСсылкиВсеЗаказы.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиВсеЗаказы.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхВсеЗаказы = мВыбраныСсылкиВсеЗаказы.Количество();
			ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда  
			Если мВыбраныСсылкиСвободные.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиСвободные.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество();
			ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
			//rarus bonmak 07.04.2021 17448 --
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		мВыбраныСсылкиРаспределение.Очистить();
		КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();
		ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда //rarus bonmak 07.04.2021 17448 ++
		мВыбраныСсылкиПродажи.Очистить();
		КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество();
		ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда 
		мВыбраныСсылкиВсеЗаказы.Очистить();
		КоличествоВыбранныхВсеЗаказы = мВыбраныСсылкиВсеЗаказы.Количество();
		ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда 	
		мВыбраныСсылкиСвободные.Очистить();
		КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество();
		ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
		//rarus bonmak 07.04.2021 17448 --
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СписокВТЗнаСервере(ИмяСтраницы)
	//rarus bonmak 07.04.2021 17448 ++
	//Если ИмяСтраницы = "Распределение" Тогда
	//	ИмяСписка = "ЗаказыНаЗаводРаспределение";
	//КонецЕсли;	
	ИмяСписка = "ЗаказыНаЗавод" + ИмяСтраницы; 
	//rarus bonmak 07.04.2021 17448 --
		
	ТаблицаРезультат = ДинамическийСписокВТаблицуЗначений(Элементы[ИмяСписка]);
	КолонкаСсылок    = ТаблицаРезультат.ВыгрузитьКолонку("Продукт");
	
	Возврат КолонкаСсылок;
	
КонецФункции

&НаКлиенте
Процедура СоздатьНаОснованииРаспределенияЗапрос(Команда)
	//rarus bonmak 07.04.2021 17448 ++
	//Если мВыбраныСсылкиРаспределение.Количество() = 0 Тогда
	//	Сообщить(НСтр("ru = 'Выберите строки'; en = 'Select lines'"));
	//	Возврат;
	//Иначе
	//	ЗаказыНаЗавод = ПолучитьЗаказыВыбранныхПродуктов(мВыбраныСсылкиРаспределение);
	//	
	//	Если ЗаказыНаЗавод.Количество() = 1 Тогда
	//		ПараметрыФормы = Новый Структура("ЗаказыНаЗавод", ЗаказыНаЗавод);
	//		ОткрытьФорму("Документ.Scan_ЗапросНаНадстройки.ФормаОбъекта", ПараметрыФормы);
	//	Иначе
	//		ДополнительныеПараметры = Новый Структура("ЗаказыНаЗавод", ЗаказыНаЗавод);
	//		
	//		ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьНаОснованииРаспределенияЗапросЗавершение", ЭтотОбъект, ДополнительныеПараметры),
	//		Нстр("ru = 'Сгруппировать выделенные строки в одну строку запроса?'; en = 'Group selected lines into one query line?'"), РежимДиалогаВопрос.ДаНетОтмена);
	//	КонецЕсли;
	//	
	//	СнятьФлажки(Команды.Найти("СнятьФлажки"));
	//КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		фмВыбраныСсылки = мВыбраныСсылкиРаспределение;	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда 
		фмВыбраныСсылки = мВыбраныСсылкиПродажи;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда 
		фмВыбраныСсылки = мВыбраныСсылкиВсеЗаказы;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда 	
		фмВыбраныСсылки = мВыбраныСсылкиСвободные;
	КонецЕсли;
	
	Если фмВыбраныСсылки.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Выберите строки'; en = 'Select lines'"));
		Возврат;
	Иначе
		ЗаказыНаЗавод = ПолучитьЗаказыВыбранныхПродуктов(фмВыбраныСсылки);
		
		Если ЗаказыНаЗавод.Количество() = 1 Тогда
			ПараметрыФормы = Новый Структура("ЗаказыНаЗавод", ЗаказыНаЗавод);
			ОткрытьФорму("Документ.Scan_ЗапросНаНадстройки.ФормаОбъекта", ПараметрыФормы);
		Иначе
			ДополнительныеПараметры = Новый Структура("ЗаказыНаЗавод", ЗаказыНаЗавод);
			
			ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьНаОснованииРаспределенияЗапросЗавершение", ЭтотОбъект, ДополнительныеПараметры),
			Нстр("ru = 'Сгруппировать выделенные строки в одну строку запроса?'; en = 'Group selected lines into one query line?'"), РежимДиалогаВопрос.ДаНетОтмена);
		КонецЕсли;
		
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
	КонецЕсли;

	//rarus bonmak 07.04.2021 17448 --
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНаОснованииРаспределенияЗапросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ГруппироватьЗаказы = РезультатВопроса = КодВозвратаДиалога.Да;
	
	ПараметрыФормы = Новый Структура("ЗаказыНаЗавод,ГруппироватьЗаказы", ДополнительныеПараметры.ЗаказыНаЗавод, ГруппироватьЗаказы);
	ОткрытьФорму("Документ.Scan_ЗапросНаНадстройки.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗаказыВыбранныхПродуктов(ВыбранныеПродукты)
	
	МассивЗаказовНаЗавод = Новый Массив;
	
	Для Каждого ВыбранныйПродукт Из ВыбранныеПродукты Цикл
		ЗаказПродукта = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(ВыбранныйПродукт);
		Если ЗначениеЗаполнено(ЗаказПродукта) Тогда
			МассивЗаказовНаЗавод.Добавить(ЗаказПродукта);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивЗаказовНаЗавод;
	
КонецФункции
// rarus agar 09.12.2020 16947 --

&НаКлиенте
Процедура ПродуктыПоОтветственным(Команда) //rarus vikhle 06.08.2021 mt 17834 +++
	
	Элементы.ГруппаПродуктыПоОтветственным.Видимость				= НЕ Элементы.ГруппаПродуктыПоОтветственным.Видимость;
	Элементы.ЗаказыНаЗаводРезервSRUПродуктыПоОтветственным.Пометка	= НЕ Элементы.ЗаказыНаЗаводРезервSRUПродуктыПоОтветственным.Пометка;
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ОбновитьПродуктыПоОтветственным(Команда) //rarus vikhle 06.08.2021 mt 17834 +++
	
	ОбновитьПродуктыПоОтветственнымНаСервере();
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаСервере
Процедура ОбновитьПродуктыПоОтветственнымНаСервере() //rarus vikhle 06.08.2021 mt 17834 +++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделийОстатки.Изделие КАК Изделие,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК Местонахождение,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК МестоХранения
	               |ПОМЕСТИТЬ ТекущееМестонахождение
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки КАК Scan_МестонахождениеИзделийОстатки
	               |ГДЕ
	               |	Scan_МестонахождениеИзделийОстатки.КоличествоОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_МестонахождениеИзделийОстатки.Изделие
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Изделие
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ОтветственныйЗаРезерв, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОтветственныйЗаРезерв,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	1 КАК Количество
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТекущееМестонахождение КАК ТекущееМестонахождение
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = ТекущееМестонахождение.Изделие
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ТипСоглашенияОПоставке = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU)
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(Продукт),
	               |	СУММА(Количество)
	               |ПО
	               |	ОтветственныйЗаРезерв";
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();			 
	Запрос.УстановитьПараметр("МассивТиповПродуктовНадстроекИУслуг",МассивТиповПродуктовНадстроекИУслуг);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПервыйУровень = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Дерево = РеквизитФормыВЗначение("ДеревоПродуктыПоОтветственным");
	Дерево.Строки.Очистить();
	
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень 							= Дерево.Строки.Добавить();
		Корень.КолонкаГруппировки		= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.ОтветственныйЗаРезерв 	= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.Количество 				= ВыборкаПервыйУровень.Количество; 
		Корень.ИмяГруппировки 			= "ОтветственныйЗаРезерв"; // используется при выборе в дереве на форме
		
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВторойУровень.Следующий() Цикл
			ДетальныеЗаписи 						= Корень.Строки.Добавить();
			ДетальныеЗаписи.КолонкаГруппировки		= ВыборкаВторойУровень.Продукт; 
			ДетальныеЗаписи.Продукт 				= ВыборкаВторойУровень.Продукт;
			ДетальныеЗаписи.Количество 				= ВыборкаВторойУровень.Количество;
			ДетальныеЗаписи.ОтветственныйЗаРезерв   = ВыборкаВторойУровень.ОтветственныйЗаРезерв;
			ДетальныеЗаписи.ИмяГруппировки 			= "Продукт"; // используется при выборе в дереве на форме
		КонецЦикла;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПродуктыПоОтветственным");
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---