
&НаКлиенте
Процедура ЗаполнитьАдресами(Команда)
	ЗаполнитьАдресамиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАдресамиНаСервере()
	//Симметрия = Истина;	
	//Если Симметрия Тогда
	//	ДопУсловие = "(АдресаХранения.АдресПолучения = Scan_РасстояниеМеждуАдресами.АдресПолучения
	//               |					И АдресаХранения.АдресДоставки = Scan_РасстояниеМеждуАдресами.АдресДоставки
	//               |				ИЛИ АдресаХранения.АдресПолучения = Scan_РасстояниеМеждуАдресами.АдресДоставки
	//               |					И АдресаХранения.АдресДоставки = Scan_РасстояниеМеждуАдресами.АдресПолучения)";
	//Иначе
	//	ДопУсловие = "АдресаХранения.АдресПолучения = Scan_РасстояниеМеждуАдресами.АдресПолучения
	//               |					И АдресаХранения.АдресДоставки = Scan_РасстояниеМеждуАдресами.АдресДоставки";
	//КонецЕсли;
				  
	Объект.ТаблицаРасстояний.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестаХранения.ИсходныйПункт.АдресСкладаЛогистический КАК АдресПолучения,
	               |	Scan_МестаХранения.КонечныйПункт.АдресСкладаЛогистический КАК АдресДоставки
	               |ПОМЕСТИТЬ АдресаХранения
	               |ИЗ
	               |	Справочник.Scan_МестаХранения КАК Scan_МестаХранения
	               |ГДЕ
	               |	Scan_МестаХранения.Маршрут = ИСТИНА
	               |	И Scan_МестаХранения.ИсходныйПункт.АдресСкладаЛогистический <> ЗНАЧЕНИЕ(Справочник.Scan_АдресаХранения.ПустаяСсылка)
	               |	И Scan_МестаХранения.КонечныйПункт.АдресСкладаЛогистический <> ЗНАЧЕНИЕ(Справочник.Scan_АдресаХранения.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_МестаХранения.ИсходныйПункт.АдресСкладаЛогистический,
	               |	Scan_МестаХранения.КонечныйПункт.АдресСкладаЛогистический
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	АдресаХранения.АдресПолучения,
				   |	АдресаХранения.АдресДоставки,
				   |	Scan_РасстояниеМеждуАдресами.Расстояние
				   |ИЗ
				   |	АдресаХранения КАК АдресаХранения
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_РасстояниеМеждуАдресами КАК Scan_РасстояниеМеждуАдресами
				   |		ПО АдресаХранения.АдресПолучения = Scan_РасстояниеМеждуАдресами.АдресПолучения
	               |					И АдресаХранения.АдресДоставки = Scan_РасстояниеМеждуАдресами.АдресДоставки";
	ТабРезультат = Запрос.Выполнить().Выгрузить();
	Для Каждого ТекМаршрут Из ТабРезультат Цикл
		НовыйМаршрут = Объект.ТаблицаРасстояний.Добавить();
		НовыйМаршрут.АдресПолучения = ТекМаршрут.АдресПолучения;
		НовыйМаршрут.АдресДоставки = ТекМаршрут.АдресДоставки;
		НовыйМаршрут.Расстояние = ТекМаршрут.Расстояние;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	ВыполнитьКомандуНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере()
	н=0;
	Для каждого ТекМаршрут из Объект.ТаблицаРасстояний.Выгрузить() Цикл
		Если ТекМаршрут.Расстояние > 0 Тогда
			МенеджерЗаписи = РегистрыСведений.Scan_РасстояниеМеждуАдресами.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.АдресПолучения 	= ТекМаршрут.АдресПолучения;
			МенеджерЗаписи.АдресДоставки 	= ТекМаршрут.АдресДоставки;
			МенеджерЗаписи.Расстояние 		= ТекМаршрут.Расстояние;
			МенеджерЗаписи.Пользователь 	= ПользователиКлиентСервер.ТекущийПользователь();
			МенеджерЗаписи.Записать();
			//нужно?
			//Сообщить("Установлено расстояние "+Строка(ТекМаршрут.Расстояние)+" км между "+ТекМаршрут.АдресПолучения+" и "+ТекМаршрут.АдресДоставки+".");
			н = н + 1;
		КонецЕсли;
	КонецЦикла;
	//rarus FominskiyAS 24.04.2019  mantis 14191 +++
	//Сообщить("Установлено "+н+" расстояний между адресами");
	Сообщить(НСтр("ru = 'Установлено '; en = 'It is set to '")+н+НСтр("ru = ' расстояний между адресами'; en = ' the distance between addresses'"));
	//rarus FominskiyAS 24.04.2019  mantis 14191 ---  
	Если н>0 Тогда
		//rarus tenkam 10.08.2017 mantis 10589 +++
		//Сообщить("Были внесены изменения Расстояний. Необходимо произвести перерасчет Тарифов доставки для дилеров",СтатусСообщения.ОченьВажное);
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить("Запущен фоновый пересчет тарифов.");
		Сообщить(НСтр("ru = 'Запущен фоновый пересчет тарифов.'; en = 'Tariff recalculation'"));
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить("Изменение расстояния между адресами");
		ФоновыеЗадания.Выполнить("Scan_Тарифы.ПолныйПересчет", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор,	"Полный пересчет");
		//rarus tenkam 10.08.2017 mantis 10589 ---  
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРасстоянийРасстояниеПриИзменении(Элемент)
  	Расстояние1 = Элементы.ТаблицаРасстояний.ТекущиеДанные.Расстояние; 
	Адрес1 = Элементы.ТаблицаРасстояний.ТекущиеДанные.АдресПолучения;
	Адрес2 = Элементы.ТаблицаРасстояний.ТекущиеДанные.АдресДоставки;
	Для Каждого Строка из Объект.ТаблицаРасстояний Цикл
		Если Строка.АдресПолучения = Адрес2 И Строка.АдресДоставки = Адрес1 Тогда
			Строка.Расстояние = Расстояние1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры
