&НаКлиенте
Перем ВыбранныеЗаказыНаЗавод;

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//rarus BProg_Dekin 04.03.2020 mantis 0015725 ++
		
	ГруппыПродуктов = Новый Массив;
	ГруппыПродуктов.Добавить(Справочники.Scan_ГруппыПродуктов.Двигатели);
	//ГруппыПродуктов.Добавить(Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства);
	
	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("Пользователь", 		ПараметрыСеанса.ТекущийПользователь);
	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ГруппыПродуктов",		ГруппыПродуктов);
	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВидПродуктаАвтобус",   Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус"));
	
	// rarus tenkam 24.08.2020 mantis 16422 +++
	ВидГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ВидГрузовыеАвтомобили);
	// rarus tenkam 24.08.2020 mantis 16422 ---

	//rarus agar 31.08.2020 15696 ++
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	Надстройки.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	//rarus agar 31.08.2020 15696 --
	
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗавод, "Продано", Ложь, ВидСравненияКомпоновкиДанных.Равно); // rarus tenkam 27.09.2021 mantis 18325 + 
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗавод, "ТягачШасси", "B", ВидСравненияКомпоновкиДанных.Равно);
	//Элементы.ПоказыватьТолькоШасси.Пометка = Истина;
	
	СписокКонтрольныхТочек = СписокКонтрольныхТочекДляГрупповогоИзменения();	
	//rarus BProg_Dekin 04.03.2020 mantis 0015725 --
	
	ТумблерПоиск = "0";		// rarus tenkam 15.12.2020 mantis 16982 +-
	КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа;	// rarus tenkam 15.12.2020 mantis 16982 +-	
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	ВыбранныеЗаказыНаЗавод = Новый Массив;
	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВыбранныеЗаказыНаЗавод",	ВыбранныеЗаказыНаЗавод);
	
	Элементы.ГруппаДействияПоиск.Видимость = Ложь;
	ОтборТягачШасси = "ТягачШасси";		// rarus tenkam 17.08.2020 mantis 16422 +
	
	УправлениеДиалогом();	// rarus tenkam 15.12.2020 mantis 16982 +-
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ЗаказыНаЗаводВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ЗаказыНаЗаводФлаг" Тогда
		СтандартнаяОбработка = Ложь;
		
		ВыбранныйЗаказНаЗавод = ВыбранныеЗаказыНаЗавод.Найти(ВыбраннаяСтрока);
		Если ВыбранныйЗаказНаЗавод = Неопределено Тогда
			ВыбранныеЗаказыНаЗавод.Добавить(ВыбраннаяСтрока);
		Иначе
			ВыбранныеЗаказыНаЗавод.Удалить(ВыбранныйЗаказНаЗавод);
		КонецЕсли;
			
		ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);	
		
		КоличествоВыбранных = ВыбранныеЗаказыНаЗавод.Количество();	// rarus tenkam 15.12.2020 mantis 16982 +
	КонецЕсли;
КонецПроцедуры

&НаСервере 
Функция ЗаказыНаЗаводИзДинамическогоСписка()
	ЗаказыНаЗаводТаблица = ДинамическийСписокВТаблицуЗначений(Элементы.ЗаказыНаЗавод, "Ссылка");
	ЗаказыНаЗаводМассив = ЗаказыНаЗаводТаблица.ВыгрузитьКолонку("Ссылка");
	Возврат ЗаказыНаЗаводМассив;
КонецФункции	

// rarus tenkam 17.08.2020 mantis 16422 +++
&НаСервере
Процедура ОтборТягачШассиПриИзмененииНаСервере()	// rarus tenkam 17.08.2020 mantis 16422 +++
	Если ОтборТягачШасси = "Тягач" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗавод, "ТягачШасси", ПредопределенноеЗначение("Перечисление.Scan_ПризнакТягачШасси.A"), ВидСравненияКомпоновкиДанных.Равно);		
	ИначеЕсли ОтборТягачШасси = "Шасси" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗавод, "ТягачШасси", ПредопределенноеЗначение("Перечисление.Scan_ПризнакТягачШасси.B"), ВидСравненияКомпоновкиДанных.Равно);			
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗавод, "ТягачШасси");			
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборТягачШассиПриИзменении(Элемент)
	ОтборТягачШассиПриИзмененииНаСервере();
КонецПроцедуры
// rarus tenkam 17.08.2020 mantis 16422 ---

&НаКлиенте
Процедура ТумблерПоискПриИзменении(Элемент)	// rarus tenkam 15.12.2020 mantis 16982 +-
	ОтменитьПодбор(Команды.ОтменитьПодбор);
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура КритерийПоискаПриИзменении(Элемент)	// rarus tenkam 15.12.2020 mantis 16982 +-
	ПолеВвода = "";
КонецПроцедуры

&НаКлиенте
Процедура ГрупповоеЗаполнениеЗначенийОчиститьПриИзменении(Элемент)	// rarus tenkam 17.12.2020 mantis 16982 +-
	ТекДанные = Элементы.ГрупповоеЗаполнениеЗначений.ТекущиеДанные;
	Если ТекДанные.Очистить Тогда
		// rarus kabany 10.06.2021 17886 +++
		//ТекДанные.Значение = Дата('00010101');
		ТипКонтрольнойТочки = ПолучитьТипКТ(ТекДанные.КонтрольнаяТочка);
		ТекДанные.Значение = ТипКонтрольнойТочки.ПривестиЗначение();
		// rarus kabany 10.06.2021 17886 ---
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ГрупповоеЗаполнениеЗначенийПриАктивизацииЯчейки(Элемент)	// rarus tenkam 17.12.2020 mantis 16982 +-
	Если Элемент.ТекущийЭлемент <> Неопределено И Элемент.ТекущийЭлемент.Имя = "ГрупповоеЗаполнениеЗначенийЗначение" Тогда
		ТекДанные = Элементы.ГрупповоеЗаполнениеЗначений.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Элемент.ТекущийЭлемент.ТолькоПросмотр = ТекДанные.Очистить;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

//rarus agar 22.12.2020 16968 ++
&НаСервереБезКонтекста
Процедура ЗаказыНаЗакупкуЕвроПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ДинамическийСписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗакупкуПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ДинамическийСписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДинамическийСписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	//rarus agar 09.03.2021 17395 ++
	ЗаказыНаЗакупкуСсылки = Строки.ПолучитьКлючи();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", ЗаказыНаЗакупкуСсылки);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ЗаявкаНаОтгрузкуПродуктыКЗаказу.Ссылка КАК СсылкаДокумент,
	|	Scan_ЗаявкаНаОтгрузкуПродуктыКЗаказу.НомераЗаказов КАК НомераЗаказов
	|ИЗ
	|	Документ.Scan_ЗаказНаЗакупку.ПродуктыКЗаказу КАК Scan_ЗаявкаНаОтгрузкуПродуктыКЗаказу
	|ГДЕ
	|	Scan_ЗаявкаНаОтгрузкуПродуктыКЗаказу.Ссылка В(&МассивСсылок)";
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаНомеровЗаказов = РезультатЗапроса.Выгрузить();
	
	Для Каждого ЗаказНаЗакупкуСсылка Из ЗаказыНаЗакупкуСсылки Цикл
		НомераЗаказовНаЗакупку = Новый Массив;
		
		НайденныеСтроки = ТаблицаНомеровЗаказов.НайтиСтроки(Новый Структура("СсылкаДокумент", ЗаказНаЗакупкуСсылка));
		Если НайденныеСтроки.Количество() <> 0 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НомераЗаказов = СтрРазделить(НайденнаяСтрока.НомераЗаказов, ",", Ложь);
				Для Каждого НомерЗаказа Из НомераЗаказов Цикл
					Если НомераЗаказовНаЗакупку.Найти(НомерЗаказа) = Неопределено Тогда
						НомераЗаказовНаЗакупку.Добавить(НомерЗаказа);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		КоличествоНомеровЗаказов = НомераЗаказовНаЗакупку.Количество();
		
		СтрокаСписка = Строки[ЗаказНаЗакупкуСсылка];
		
		ОформлениеЯчейки = СтрокаСписка.Оформление.Получить("КоличествоЗаказов");
		Если ОформлениеЯчейки <> Неопределено Тогда
			ОформлениеЯчейки.УстановитьЗначениеПараметра("Текст", КоличествоНомеровЗаказов);
		КонецЕсли;
	КонецЦикла;
	//rarus agar 09.03.2021 17395 --
	
КонецПроцедуры
//rarus agar 22.12.2020 16968 --

// rarus kabany 10.06.2021 17886 +++
&НаКлиенте
Процедура ГрупповоеЗаполнениеЗначенийПередНачаломИзменения(Элемент, Отказ)
	
	ТипКонтрольнойТочки = ПолучитьТипКТ(Элементы.ГрупповоеЗаполнениеЗначений.ТекущиеДанные.КонтрольнаяТочка);
	
	Элемент.ПодчиненныеЭлементы.ГрупповоеЗаполнениеЗначенийЗначение.ВыбиратьТип = Ложь;
	Элемент.ПодчиненныеЭлементы.ГрупповоеЗаполнениеЗначенийЗначение.ОграничениеТипа = ТипКонтрольнойТочки;	
	
	Если ТипКонтрольнойТочки = Новый ОписаниеТипов("Булево") Тогда
		Элемент.ПодчиненныеЭлементы.ГрупповоеЗаполнениеЗначенийЗначение.КнопкаОчистки = Истина;
	Иначе
		Элемент.ПодчиненныеЭлементы.ГрупповоеЗаполнениеЗначенийЗначение.КнопкаОчистки = Ложь;	
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипКТ(КонтрольнаяТочка)
	Если КонтрольнаяТочка.ОбъектМетаданных = "Scan_ЗаказыНаЗавод" Тогда
		РеквизитыСправочника = Метаданные.НайтиПоПолномуИмени("Справочник.Scan_ЗаказыНаЗавод").Реквизиты;
		РеквизитКарточки = РеквизитыСправочника.Найти(КонтрольнаяТочка.РеквизитОбъекта);
		Если РеквизитКарточки = Неопределено Тогда
			РеквизитыТчСправочника = Метаданные.НайтиПоПолномуИмени("Справочник.Scan_ЗаказыНаЗавод").ТабличныеЧасти.ЗаказыНаЗакупку.Реквизиты;
			РеквизитКарточки = РеквизитыТчСправочника.Найти(КонтрольнаяТочка.РеквизитОбъекта);
		КонецЕсли;
	ИначеЕсли КонтрольнаяТочка.ОбъектМетаданных = "Scan_КлючевыеДатыРегистрСведений" Тогда
		РеквизитКарточки = Метаданные.РегистрыСведений.Scan_КлючевыеДатыПроцессов.Ресурсы.Значение;
	КонецЕсли;
	
	// Rarus tenkam 14.12.2021 mantis 18574 +++
	Если РеквизитКарточки.Имя = "ПорядковыйНомер" Тогда
		Возврат Новый ОписаниеТипов("Булево");
	КонецЕсли;
	// Rarus tenkam 14.12.2021 mantis 18574 ---
	
	Возврат РеквизитКарточки.Тип;
КонецФункции

// Rarus tenkam 28.06.2022 mantis 18726 АПК +++
//&НаКлиенте
//Процедура ТаблицаКонтрольныхТочекОчиститьПриИзменении(Элемент)
//	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
//	ИмяТаблицы = ИмяСтраницы + "_ТаблицаКонтрольныхТочек";
//	ТекДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
//	Если ТекДанные.Очистить Тогда
//		ТипКонтрольнойТочки = ПолучитьТипКТ(ТекДанные.КонтрольнаяТочка);
//		ТекДанные.Значение = ТипКонтрольнойТочки.ПривестиЗначение();
//	КонецЕсли;
//КонецПроцедуры                                   
// Rarus tenkam 28.06.2022 mantis 18726 АПК ---


// rarus kabany 10.06.2021 17886 ---
#КонецОбласти

#Область Вспомогательные
&НаСервере
Функция СписокКонтрольныхТочекДляГрупповогоИзменения()
	ИменаКлючевыхДат = Новый Массив;
	ИменаКлючевыхДат.Добавить("EDD");
	ИменаКлючевыхДат.Добавить("RDB");
	ИменаКлючевыхДат.Добавить("PODOD");
	ИменаКлючевыхДат.Добавить("AN");
	ИменаКлючевыхДат.Добавить("PAD");
	ИменаКлючевыхДат.Добавить("AAD");
	ИменаКлючевыхДат.Добавить("PTSD");
	ИменаКлючевыхДат.Добавить("ADDLBB");
	ИменаКлючевыхДат.Добавить("RFT");
	ИменаКлючевыхДат.Добавить("Основной"); // rarus kabany 10.06.2021 17886 +
	ИменаКлючевыхДат.Добавить("ПорядковыйНомер"); // Rarus tenkam 14.12.2021 mantis 18574 +
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИменаКлючевыхДат", ИменаКлючевыхДат);
	//Запрос.УстановитьПараметр("ОбъектМетаданных", "Scan_КлючевыеДатыРегистрСведений");  // rarus kabany 10.06.2021 17886 +
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка КАК КонтрольнаяТочка,
	               |	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка.РеквизитОбъекта КАК РеквизитОбъекта
	               |ИЗ
	               |	РегистрСведений.Scan_КонтрольныеТочкиАРМ КАК Scan_КонтрольныеТочкиАРМ
	               |ГДЕ
	               |	Scan_КонтрольныеТочкиАРМ.АРММенеджераПоКонтролюЗаказов
				   // rarus kabany 10.06.2021 17886 +++
	//             |	И Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка.ОбъектМетаданных = &ОбъектМетаданных
	               |    И Scan_КонтрольныеТочкиАРМ.АРММенеджераПоКонтролюЗаказов
				   // rarus kabany 10.06.2021 17886 ---
	               |	И Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка.РеквизитОбъекта В(&ИменаКлючевыхДат)";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ГрупповоеЗаполнениеЗначений.Добавить(); 
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка); 	
	КонецЦикла;
КонецФункции

&НаСервере
Процедура УправлениеДиалогом()	// rarus tenkam 15.12.2020 mantis 16982 +-
	Если ТумблерПоиск = "0" Тогда
		Элементы.ГруппаПоСписку.Видимость = Истина;
		Элементы.ГруппаПоКоридору.Видимость = Ложь;
		
		НомерЗаказаС = "";
		НомерЗаказаПо = "";
		ПолеОтбораПоПериоду = ""
	Иначе
		Элементы.ГруппаПоСписку.Видимость = Ложь;
		Элементы.ГруппаПоКоридору.Видимость = Истина;
		
		ПолеВвода = "";
		КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа;
	КонецЕсли; 	
КонецПроцедуры

#КонецОбласти

#Область СобытияКомандФормы

&НаСервере
Процедура УстановитьЗначенияКонтрольныхТочекНаСервере(ВыбранныеЗаказыНаЗавод,МассивКТ)
	
	Для Каждого ЗаказНаЗаводСсылка Из ВыбранныеЗаказыНаЗавод Цикл
		// rarus kabany 11.06.2021 17886 +++
		//Для Каждого СтрокаЗаполнения Из ГрупповоеЗаполнениеЗначений Цикл
		Для Каждого СтрокаЗаполнения Из МассивКТ Цикл
			//Если НЕ СтрокаЗаполнения.Очистить И НЕ ЗначениеЗаполнено(СтрокаЗаполнения.Значение) Тогда
			//	Продолжить;
			//КонецЕсли;
			
			//rarus kabany Дата: 05/07/2021 +++ // АПК ++ 
			//Если СтрокаЗаполнения.РеквизитОбъекта = "Основной" Тогда 
			//	Если СтрокаЗаполнения.Очистить Тогда // rarus kabany 15.06.2021 17886 +  
			//		ОчиститьОсновногоКузовостроителя(ЗаказНаЗаводСсылка);
			//	КонецЕсли;
			//rarus kabany Дата: 05/07/2021 +++ // АПК --
			//Иначе
			// rarus kabany 11.06.2021 17886 ---			
				ВидКлючевойДаты  = Перечисления.Scan_КлючевыеДаты[СтрокаЗаполнения.КонтрольнаяТочка.РеквизитОбъекта];
				//rarus vikhle 10.02.2021 mt 17209 +++
				Если (ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.EDD 
					ИЛИ ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.RDB) И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьEDDиRDB") Тогда
					Сообщить(СтрШаблон(НСтр("ru = 'Нет права на редактирование ключевой даты <%1>. Не удалось установить контрольную точку.'; en = '%1 can not be set. Not enough permissions!'"),ВидКлючевойДаты)); 	
					Продолжить;	
				КонецЕсли;
				
				МассивДатПоНадстройкам = ПолучитьМассивДатПоНадстройкам();
				
				Если НЕ МассивДатПоНадстройкам.Найти(ВидКлючевойДаты) = Неопределено И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьДатыПоНадстройкам") Тогда
					Сообщить(СтрШаблон(НСтр("ru = 'Нет права на редактирование ключевой даты <%1>. Не удалось установить контрольную точку.'; en = '%1 can not be set. Not enough permissions!'"),ВидКлючевойДаты)); 	
					Продолжить;	
				КонецЕсли;
				//rarus vikhle 10.02.2021 mt 17209 ---
				ЗначениеКлючевойДаты 	= ?(СтрокаЗаполнения.Очистить, Дата(1,1,1), СтрокаЗаполнения.Значение);
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(ЗаказНаЗаводСсылка,	ВидКлючевойДаты, ЗначениеКлючевойДаты);
				
				Если ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.RFT Тогда
					ЗаказНаЗаводОбъект = ЗаказНаЗаводСсылка.ПолучитьОбъект();
					ЗаказНаЗаводОбъект.Записать(); //При записи если заполнена дата RFT установиться признак "ГотовностьТС"
				КонецЕсли;		
			//КонецЕсли; //rarus kabany Дата: 05/07/2021 +++ // АПК ++
		КонецЦикла;		
	КонецЦикла;	
КонецПроцедуры

// rarus kabany 11.06.2021 17886 +++
&НаКлиенте
Процедура УстановитьЗначенияКонтрольныхТочекКлиент(ВыбранныеЗаказыНаЗавод)
	
	// Требуется ли установка КТ "Основной кузовостроитель"
	ОсновнойКузовостроитель = Ложь;
	ПорядковыйНомерКузовостроителя = Ложь; // Rarus tenkam 15.12.2021 mantis 18574 +
	
	МассивКТ = Новый Массив;
	Для Каждого СтрокаКТ Из ГрупповоеЗаполнениеЗначений Цикл
		// Отбираем только КТ обработка которых необходима
		Если ЗначениеЗаполнено(СтрокаКТ.Значение) ИЛИ СтрокаКТ.Очистить Тогда
			СтруктураКТ = Новый Структура("КонтрольнаяТочка,Значение,РеквизитОбъекта,Очистить");
			СтруктураКТ.КонтрольнаяТочка = СтрокаКТ.КонтрольнаяТочка;	
			СтруктураКТ.Значение = СтрокаКТ.Значение;
			СтруктураКТ.РеквизитОбъекта = СтрокаКТ.РеквизитОбъекта;
			СтруктураКТ.Очистить = СтрокаКТ.Очистить;
			МассивКТ.Добавить(СтруктураКТ);
		КонецЕсли;
	КонецЦикла;
	                                                   		
	// Поиск КТ и обработка условий выполнения необходимая на клиенте
	КолЭлМассива = МассивКТ.Количество();
	Для Отсчет = 1  По КолЭлМассива Цикл 
		эМассива = МассивКТ[КолЭлМассива - Отсчет];
		Если эМассива.РеквизитОбъекта = "Основной" и НЕ эМассива.Очистить Тогда
			Отказ = ПроверитьРазличныеЗаказыНаЗакупку(ВыбранныеЗаказыНаЗавод);
			Если Отказ Тогда
				// rarus kabany 18.06.2021 17886 +++
				//ВывестиСообщениеПол(СтрШаблон(НСтр("ru = 'Для выделенных заказов на завод найдены различные заказы на закупку! Установка флага “Основной” невозможна!'; en = 'Different purchase orders found for highlighted plant orders! Setting the flag “Basic” is not possible!'"))); 	
				ВывестиСообщениеПол(СтрШаблон(НСтр("ru = 'Для выделенных заказов на завод не найдены одинаковые заказы на закупку! Установка флага “Основной” невозможна!'; en = 'No duplicate purchase orders found for highlighted plant orders! Setting the flag “Basic” is not possible!'"))); 	
				// rarus kabany 18.06.2021 17886 ---
				МассивКТ.Удалить(МассивКТ.Найти(эМассива));
			Иначе
				ОсновнойКузовостроитель = Истина;
				МассивКТ.Удалить(МассивКТ.Найти(эМассива));
			КонецЕсли;	
			//rarus kabany Дата: 05/07/2021 ++ // OFMS устранение ошибок Sonar Qube (АПК) 
		ИначеЕсли эМассива.РеквизитОбъекта = "Основной" и эМассива.Очистить Тогда
			ОчиститьОсновногоКузовостроителя(ВыбранныеЗаказыНаЗавод);			
			МассивКТ.Удалить(МассивКТ.Найти(эМассива));
			//rarus kabany Дата: 05/07/2021 -- // OFMS устранение ошибок Sonar Qube (АПК)	
		КонецЕсли;
		// Rarus tenkam 15.12.2021 mantis 18574 +++
		Если эМассива.РеквизитОбъекта = "ПорядковыйНомер" И НЕ эМассива.Очистить Тогда
			Отказ = ПроверитьРазличныеЗаказыНаЗакупку(ВыбранныеЗаказыНаЗавод);
			Если Отказ Тогда
				ВывестиСообщениеПол(СтрШаблон(НСтр("ru = 'Для выделенных заказов на завод не найдены одинаковые заказы на закупку! Установка порядкового номера невозможна!'; en = 'No duplicate purchase orders found for highlighted plant orders! Setting the value is not possible!'"))); 	
				МассивКТ.Удалить(МассивКТ.Найти(эМассива));
			Иначе
				ПорядковыйНомерКузовостроителя = Истина;
				МассивКТ.Удалить(МассивКТ.Найти(эМассива));
			КонецЕсли;	
		ИначеЕсли эМассива.РеквизитОбъекта = "ПорядковыйНомер" И эМассива.Очистить Тогда
			ОчиститьПорядковыйНомер(ВыбранныеЗаказыНаЗавод);			
			МассивКТ.Удалить(МассивКТ.Найти(эМассива));
		КонецЕсли;
		// Rarus tenkam 15.12.2021 mantis 18574 ---
	КонецЦикла;
	
	// Rarus tenkam 15.12.2021 mantis 18574 +++
	//Если ОсновнойКузовостроитель Тогда 
	Если ОсновнойКузовостроитель ИЛИ ПорядковыйНомерКузовостроителя Тогда 
		//ОткрытьФорму("Обработка.Scan_РММенеджераПоКонтролюЗаказов.Форма.ФормаВыбораКузовостроителя",
		//Новый Структура("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод),
		//ЭтотОбъект,,,,
		//Новый ОписаниеОповещения("ПродолжитьУстановкуКТ", ЭтотОбъект,МассивКТ),
		//РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);
		СтруктураПараметров.Вставить("ОсновнойКузовостроитель", ОсновнойКузовостроитель);
		СтруктураПараметров.Вставить("ПорядковыйНомерКузовостроителя", ПорядковыйНомерКузовостроителя);
		
		ОткрытьФорму("Обработка.Scan_РММенеджераПоКонтролюЗаказов.Форма.ФормаВыбораКузовостроителя",
		СтруктураПараметров,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ПродолжитьУстановкуКТ", ЭтотОбъект,МассивКТ),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		// Rarus tenkam 15.12.2021 mantis 18574 ---
		
		Возврат;
	КонецЕсли;
	
	ПродолжитьУстановкуКТ(Неопределено, МассивКТ);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПроверитьРазличныеЗаказыНаЗакупку(ВыбранныеЗаказыНаЗавод)
	
	// rarus kabany 18.06.2021 17886 +++
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ВЫРАЗИТЬ(Scan_ЗаказыНаЗавод.ЗаказыНаЗакупкуOFMSПредставление КАК СТРОКА(1000)) КАК ЗаказыНаЗакупкуOFMSПредставление
	//|ИЗ
	//|	Справочник.Scan_ЗаказыНаЗавод КАК Scan_ЗаказыНаЗавод
	//|ГДЕ
	//|	Scan_ЗаказыНаЗавод.Ссылка В(&мЗаказовНаЗавод)";
	//
	//Запрос.УстановитьПараметр("мЗаказовНаЗавод", ВыбранныеЗаказыНаЗавод);
	//
	//РезультатЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЗаказыНаЗакупкуOFMSПредставление");
	//Если РезультатЗапроса.Количество() > 1 Тогда
	//	Возврат ИСТИНА;
	//Иначе
	//	Возврат ЛОЖЬ;
	//КонецЕсли;
	
	КолВоЗаказовНаЗавод = ВыбранныеЗаказыНаЗавод.Количество();
	
	Если КолВоЗаказовНаЗавод > 1 Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка) КАК КоличествоОдинаковых,
		|	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку КАК ЗаказНаЗакупку
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
		|ГДЕ
		|	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка В(&мЗаказовНаЗавод)
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.КоличествоОдинаковых КАК КоличествоОдинаковых
		|ИЗ
		|	ВТ КАК ВТ
		|ГДЕ
		|	ВТ.КоличествоОдинаковых = &КолВоЗаказовНаЗавод";
		
		Запрос.УстановитьПараметр("мЗаказовНаЗавод", ВыбранныеЗаказыНаЗавод);
		Запрос.УстановитьПараметр("КолВоЗаказовНаЗавод", КолВоЗаказовНаЗавод);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КоличествоОдинаковых");
		Если РезультатЗапроса.Количество() > 0 Тогда
			Возврат ЛОЖЬ;
		Иначе
			Возврат ИСТИНА ;
		КонецЕсли;		
	Иначе
		Возврат  ЛОЖЬ;		
	КонецЕсли;
	// rarus kabany 18.06.2021 17886 ---
		
КонецФункции
// rarus kabany 11.06.2021 17886 ---

// rarus kabany 14.06.2021 17886 +++
&НаКлиенте
Процедура ПродолжитьУстановкуКТ(парам1, МассивКТ) Экспорт
	
	УстановитьЗначенияКонтрольныхТочекНаСервере(ВыбранныеЗаказыНаЗавод,МассивКТ);
	
	СнятьФлажки(Команды.СнятьФлажки);
	
	Элементы.ЗаказыНаЗавод.Обновить();
	
	ОчиститьЗначенияКонтрольныхТочек();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьОсновногоКузовостроителя(ВыбранныеЗаказыНаЗавод)
	
	ВсеОк = Истина;
	СтрокаЗаказов = ""; //rarus kabany Дата: 05/07/2021 ++ // АПК
	
	//rarus kabany Дата: 05/07/2021 ++ // АПК // Изменена логика процедуры, теперь КТ "Основной" очищается для всех заказов сразу
	Для каждого ЗаказНаЗаводСсылка из ВыбранныеЗаказыНаЗавод ЦИКЛ 	
		СтрокаЗаказов = СтрокаЗаказов + " " + Строка(ЗаказНаЗаводСсылка);
		//rarus kabany Дата: 05/07/2021 --
		ЗаказНаЗаводОбъект = ЗаказНаЗаводСсылка.ПолучитьОбъект();
		ЗаказыНаЗакупкуОбъект = ЗаказНаЗаводОбъект.ЗаказыНаЗакупку;
		
		Для каждого ЗаказНаЗакупу из ЗаказыНаЗакупкуОбъект ЦИКЛ			
			ЗаказНаЗакупу.основной = ЛОЖЬ;			
		КонецЦикла;
		
		Попытка			
			ЗаказНаЗаводОбъект.Записать();
		Исключение
			ВсеОк = Ложь;
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Выполнение операции прервано!'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())); // Rarus tenkam 28.06.2022 mantis 18726 АПК + (Код основного языка)
			Сообщить(СтрШаблон(НСтр("ru = 'Произошла ошибка при очистке флага ""Основной кузовостроитель"" для следующих заказов на завод: %1 (подробности см. в журанле регистрации)'; en = 'An error occured while clearing the ""Main Body Builder"" flag for the following orders: %1 (see registration log for details)'"),Строка(ЗаказНаЗаводСсылка))); 					
			ВызватьИсключение;
			
		КонецПопытки;
	КонецЦикла;
	
	Если ВсеОк Тогда
		//rarus kabany Дата: 05/07/2021 ++
		//Сообщить(СтрШаблон(НСтр("ru = '""Основной кузовостроитель"" очищен для следующих заказов на завод: %1'; en = 'Bodybuilder is set for the following orders: %1'"),Строка(ЗаказНаЗаводСсылка)));					
		Сообщить(СтрШаблон(НСтр("ru = '""Основной кузовостроитель"" очищен для следующих заказов на завод: %1'; en = 'Bodybuilder is set for the following orders: %1'"), СтрокаЗаказов));					
		//rarus kabany Дата: 05/07/2021 --
	КонецЕсли;
	
	КонецПроцедуры
// rarus kabany 14.06.2021 17886 ---

&НаСервере
Процедура ОчиститьПорядковыйНомер(ВыбранныеЗаказыНаЗавод) // Rarus tenkam 15.12.2021 mantis 18574 +++
	
	ВсеОк = Истина;
	СтрокаЗаказов = "";	
	
	Для Каждого ЗаказНаЗаводСсылка из ВыбранныеЗаказыНаЗавод ЦИКЛ 	
		СтрокаЗаказов = СтрокаЗаказов + " " + Строка(ЗаказНаЗаводСсылка);
		ЗаказНаЗаводОбъект = ЗаказНаЗаводСсылка.ПолучитьОбъект();
		ЗаказыНаЗакупкуОбъект = ЗаказНаЗаводОбъект.ЗаказыНаЗакупку;
		
		Для Каждого ЗаказНаЗакупу из ЗаказыНаЗакупкуОбъект ЦИКЛ			
			ЗаказНаЗакупу.ПорядковыйНомер = 0;			
		КонецЦикла;
		
		Попытка			
			ЗаказНаЗаводОбъект.Записать();
		Исключение
			ВсеОк = Ложь;
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Выполнение операции прервано!'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())); // Rarus tenkam 28.06.2022 mantis 18726 АПК + (Код основного языка)
			Сообщить(СтрШаблон(НСтр("ru = 'Произошла ошибка при очистке порядкового номера для следующих заказов на завод: %1 (подробности см. в журанле регистрации)'; en = 'An error occured while clearing the ""Main Body Builder"" flag for the following orders: %1 (see registration log for details)'"),Строка(ЗаказНаЗаводСсылка))); 					
			ВызватьИсключение;
			
		КонецПопытки;
	КонецЦикла;
	
	Если ВсеОк Тогда
		Сообщить(СтрШаблон(НСтр("ru = 'Порядковый номер очищен для следующих заказов на завод: %1'; en = 'Bodybuilder is set for the following orders: %1'"), СтрокаЗаказов));					
	КонецЕсли;
	
КонецПроцедуры // Rarus tenkam 15.12.2021 mantis 18574 ---

&НаКлиенте
Процедура УстановитьЗначенияКонтрольныхТочек(Команда)
	
	УстановитьЗначенияКонтрольныхТочекКлиент(ВыбранныеЗаказыНаЗавод); // rarus kabany 11.06.2021 17886 +
	
	// rarus kabany 12.06.2021 17886 +++
	//УстановитьЗначенияКонтрольныхТочекНаСервере(ВыбранныеЗаказыНаЗавод);
	//
	//СнятьФлажки(Команды.СнятьФлажки);// rarus tenkam 15.12.2020 mantis 16982 +-
	//
	//Элементы.ЗаказыНаЗавод.Обновить();
	//
	//ОчиститьЗначенияКонтрольныхТочек();//rarus vikhle 15.02.2021 mt 17209
	 // rarus kabany 12.06.2021 17886 ---
КонецПроцедуры

&НаКлиенте
Процедура ДействияИПоиск(Команда)
	Элементы.ГруппаДействияПоиск.Видимость = НЕ Элементы.ГруппаДействияПоиск.Видимость;
КонецПроцедуры

// rarus tenkam 27.09.2021 mantis 18325 +++
//&НаКлиенте
//Процедура ПоказыватьПроданные(Команда) //rarus BProg_Dekin 04.03.2020 mantis 0015725 +-
//	ПоказыватьПроданные = НЕ Элементы.ПоказыватьПроданные.Пометка;
//	Элементы.ПоказыватьПроданные.Пометка = ПоказыватьПроданные;
//	Если ПоказыватьПроданные Тогда
//		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗавод, "Продано");
//	Иначе
//		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗавод, "Продано", ПоказыватьПроданные, ВидСравненияКомпоновкиДанных.Равно);
//	КонецЕсли;
//	
//	// rarus tenkam 17.12.2020 mantis 16982 +++
//	Если ПоказыватьПроданные Тогда
//		Элементы.ПоказыватьПроданные.ЦветТекста = Новый Цвет(0,150,70);		
//	Иначе
//		Элементы.ПоказыватьПроданные.ЦветТекста = Новый Цвет(77,77,77);			
//	КонецЕсли;
//	// rarus tenkam 17.12.2020 mantis 16982 ---
//	
//КонецПроцедуры
// rarus tenkam 27.09.2021 mantis 18325 ---

&НаКлиенте
Процедура ПоказатьСтатусы(Команда) //rarus BProg_Dekin 04.03.2020 mantis 0015725 +-
	ОткрытьФорму("Справочник.Scan_ЗаводскиеСтатусыЗаказаНаЗавод.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетOrderDeviation(Команда)
	ОткрытьФорму("Отчет.Scan_OrderDeviation.Форма");
КонецПроцедуры

//rarus vikhle 26.08.2020 mt 16274
&НаКлиенте
Процедура ОткрытьОтчетСписокОтгрузок(Команда)
	ОткрытьФорму("Отчет.Scan_СписокОтгрузок.Форма");
КонецПроцедуры
//rarus vikhle 26.08.2020 mt 16274

&НаКлиенте
Процедура Подобрать(Команда)
	
	// rarus tenkam 15.12.2020 mantis 16982 +++
	ИспользоватьЧислоВместоСтроки = Ложь;
	Если ТумблерПоиск = "0" Тогда 	
		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Если СокрЛП(ПолеВвода) = "" Тогда
			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
			Возврат;
		КонецЕсли;
		ОкПоискПоКритериямНаСервере();
	Иначе
		// rarus tenkam 15.12.2020 mantis 16982 ---
		
		Если НЕ ЗначениеЗаполнено(НомерЗаказаС) ИЛИ НЕ ЗначениеЗаполнено(НомерЗаказаПо) Тогда
			Возврат;
		КонецЕсли;
		
		// rarus tenkam 17.06.2020 mantis 16201 +++
		СообщениеОбОшибке = "";
		ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(ЗаказыНаЗавод, "НаименованиеЗаказа", НомерЗаказаС, НомерЗаказаПо,,СообщениеОбОшибке);
		Если НЕ ОтборУстановлен Тогда
			Сообщить(СообщениеОбОшибке);
		КонецЕсли;
		
		//Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруЗаказаНаЗавод(ЗаказыНаЗавод, "НаименованиеЗаказа", НомерЗаказаС, НомерЗаказаПо);
		// rarus tenkam 17.06.2020 mantis 16201 ---
		
	КонецЕсли;	// rarus tenkam 15.12.2020 mantis 16982 +-
	
	СнятьФлажки(Команды.СнятьФлажки); //rarus agar 22.03.2021 17501 +-
	
	//УстановитьФлажки(Команды.УстановитьФлажки);	// rarus tenkam 15.12.2020 mantis 16982 +
КонецПроцедуры

&НаСервере
Процедура ОкПоискПоКритериямНаСервере()	// rarus tenkam 15.12.2020 mantis 16982 +-
	
	МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
	МассивПодстрок2 = Новый Массив;
	// rarus agar 28.05.2021 16927 ++
	//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивПодстрок2,МассивПодстрок);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок2, МассивПодстрок, Истина);
	// rarus agar 28.05.2021 16927 --
	
	// Преобразование массива, чтобы находить заказы и шасси по номеру без нулей
	Индекс = -1;
	Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
		Для Каждого ЭлементМассива Из МассивПодстрок Цикл
			Индекс = Индекс + 1;
			Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
				Попытка
					ЧислоСтроки = Число(ЭлементМассива);
				Исключение
					Продолжить;
				КонецПопытки;	
				КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
				Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
					ЭлементМассива = "0" + ЭлементМассива;
				КонецЦикла;
				МассивПодстрок[Индекс] = ЭлементМассива;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
		Для Каждого ЭлементМассива Из МассивПодстрок Цикл
			Индекс = Индекс + 1;
			Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
				Попытка
					ЧислоСтроки = Число(ЭлементМассива);
				Исключение
					Продолжить;
				КонецПопытки;	
				КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
				Для нПрефикса = 0 По (7 - КолВоЗнаковЧисло) Цикл  // 7-длина номера шасси  
					ЭлементМассива = "0" + ЭлементМассива;
				КонецЦикла;
				МассивПодстрок[Индекс] = ЭлементМассива;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	// rarus agar 28.05.2021 16927 ++
	//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивПодстрок,МассивПодстрок2);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок, МассивПодстрок2, Истина);
	// rarus agar 28.05.2021 16927 --
	Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
		ЛевоеЗначение = "НаименованиеЗаказа";
	ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
		ЛевоеЗначение = "Шасси";
	КонецЕсли;
	
	ОбъектНастройки = ЗаказыНаЗавод.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
	ОбъектНастройки.Очистить();
	
	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование  = Истина;
	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	НовыйОтбор.ПравоеЗначение = МассивПодстрок;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПодбор(Команда)
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗавод, "НаименованиеЗаказа");
	
	// rarus tenkam 15.12.2020 mantis 16982 +++
	//ВыбранныеЗаказыНаЗавод.Очистить();
	//ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗавод, "Шасси");
	ПолеВвода = "";
	НомерЗаказаС  = Неопределено;
	НомерЗаказаПо = Неопределено;
	
	СнятьФлажки(Команды.СнятьФлажки);
	// rarus tenkam 15.12.2020 mantis 16982 ---	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ЗаказыНаЗаводМассив = ЗаказыНаЗаводИзДинамическогоСписка();
	Для Каждого ЗаказНаЗаводСсылка Из ЗаказыНаЗаводМассив Цикл
		Если ВыбранныеЗаказыНаЗавод.Найти(ЗаказНаЗаводСсылка) = Неопределено Тогда
			ВыбранныеЗаказыНаЗавод.Добавить(ЗаказНаЗаводСсылка);
		КонецЕсли;
		ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);
	КонецЦикла;
	КоличествоВыбранных = ВыбранныеЗаказыНаЗавод.Количество();	// rarus tenkam 15.12.2020 mantis 16982 +
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	ВыбранныеЗаказыНаЗавод.Очистить();
	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);
	КоличествоВыбранных = ВыбранныеЗаказыНаЗавод.Количество();	// rarus tenkam 15.12.2020 mantis 16982 +
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВМонитор(Команда)//rarus pechek 30.06.2020 mantis 16247 +++
	
	МассивВыбранныхСтрок = Элементы.ЗаявкиНаОтгрузку.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		ДатаОтгрузки = ТекущаяДата();
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));                            
		Возврат;
	Иначе
		ДатаОтгрузки = Элементы.ЗаявкиНаОтгрузку.ТекущиеДанные.ДатаОтгрузки;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ДатаОтгрузки", ДатаОтгрузки);
	ОткрытьФорму("Обработка.Scan_МониторБронированияОтгрузок.Форма",ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаявкиНаОтгрузкуПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus pechek 30.06.2020 mantis 16247 +++
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	МассивСсылок = Строки.ПолучитьКлючи();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СтатусыЗаявокНаОтгрузку.Ссылка КАК Ссылка,
	               |	Scan_СтатусыЗаявокНаОтгрузку.ЦветФона КАК ЦветФона,
	               |	Scan_СтатусыЗаявокНаОтгрузку.ЦветТекста КАК ЦветТекста,
	               |	Scan_СтатусыЗаявокНаОтгрузку.Шрифт КАК Шрифт
	               |ИЗ
	               |	Справочник.Scan_СтатусыЗаявокНаОтгрузку КАК Scan_СтатусыЗаявокНаОтгрузку";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_ЗаявкаНаОтгрузку.Ссылка КАК СсылкаДокумент
		               |ИЗ
		               |	Документ.Scan_ЗаявкаНаОтгрузку КАК Scan_ЗаявкаНаОтгрузку
		               |ГДЕ
		               |	Scan_ЗаявкаНаОтгрузку.Статус = &Статус
		               |	И Scan_ЗаявкаНаОтгрузку.Ссылка В(&МассивСсылок)";
		
		Запрос.УстановитьПараметр("Статус",       Выборка.Ссылка);
		Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаСписка = Строки[ВыборкаДетальныеЗаписи.СсылкаДокумент];
			Для Каждого КолонкаСписка Из СтрокаСписка.Оформление Цикл
				ЦветФона = Выборка.ЦветФона.Получить();
				Если ЦветФона <> ЧерныйЦвет Тогда
					КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
				КонецЕсли;
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветТекста", Выборка.ЦветТекста.Получить());
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("Шрифт",      Выборка.Шрифт.Получить());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

//rarus agar 31.08.2020 15696 ++
&НаКлиенте
Процедура СоздатьЗаказНаОснованииЗапросаНаНадстройки(Команда)
	
	МассивВыбранныхСтрок = Элементы.ЗапросыНаНадстройки.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Выберите документ'; en = 'Select document'"));
		Возврат;
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));
		Возврат;
	Иначе
		ТекущийДокЗапросНаНадстройки = Элементы.ЗапросыНаНадстройки.ТекущаяСтрока;
		
		ПараметрыФормы = Новый Структура("Основание", ТекущийДокЗапросНаНадстройки);
		ОткрытьФорму("Документ.Scan_ЗаказНаЗакупку.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 31.08.2020 15696 --

//rarus agar 11.12.2020 16403 ++
&НаКлиенте
Процедура ЗагрузитьEDD(Команда)
	
	Обработчик = Новый ОписаниеОповещения("ВыполнитьЗагрузкуФайлаEDD", ЭтотОбъект);	
	ПараметрыКоманды = Новый Структура("ИмяКоманды", Команда.Имя);
	ОткрытьФорму("ОбщаяФорма.Scan_ФормаЗагрузкиФайла",ПараметрыКоманды, ЭтотОбъект,,,,Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуФайлаEDD(ПараметрыЗагрузки, ДополнительныеПараметры) Экспорт
	
	Если    ПараметрыЗагрузки = Неопределено 
		Или ПараметрыЗагрузки = КодВозвратаДиалога.Отмена 
		Тогда
		Возврат;
	КонецЕсли;
	
	Сообщить(Нстр("ru = 'Начата загрузка и обработка файла'; en = 'Downloading start'")+" "+ТекущаяДата());
	
	ТекПутьКФайлу = СокрЛП(ПараметрыЗагрузки.ПутьКФайлу);
	
	#Если Не ВебКлиент Тогда
		ТекДанные = Новый ДвоичныеДанные(ТекПутьКФайлу);
		АдресВХранилище = ПоместитьВоВременноеХранилище(ТекДанные);
		ПараметрыЗагрузки.Вставить("АдресВХранилище", АдресВХранилище);
		ЗагрузитьДанныеФайлаEDDЗавершение(ПараметрыЗагрузки);
	#Иначе
		ПомещаемыеФайлыМассив = Новый Массив;
		ПомещаемыеФайлыМассив.Добавить(Новый ОписаниеПередаваемогоФайла(ТекПутьКФайлу, ""));
		Описание = Новый ОписаниеОповещения("ЗагрузитьДанныеФайлаEDDФрагмент", ЭтотОбъект, Новый Структура("ПараметрыЗагрузки", ПараметрыЗагрузки));
		НачатьПомещениеФайлов(Описание, ПомещаемыеФайлыМассив, , Ложь, УникальныйИдентификатор);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеФайлаEDDФрагмент(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	ПараметрыЗагрузки = ДополнительныеПараметры.ПараметрыЗагрузки;
		
	Если ПомещенныеФайлы.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Ошибка при обработке файла'; en = 'Error'"));
	Иначе
		ПараметрыЗагрузки.Вставить("АдресВХранилище", ПомещенныеФайлы[0].Хранение);
	КонецЕсли;
	
	ЗагрузитьДанныеФайлаEDDЗавершение(ПараметрыЗагрузки);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеФайлаEDDЗавершение(Знач ПараметрыЗагрузки)
	
	ПрочитатьФайлEDD(ПараметрыЗагрузки);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайлEDD(ПараметрыЗагрузки)
	
	ИмяВременногоФайла = КаталогВременныхФайлов() + "FileEXCEL" + Формат(ТекущаяДата(), "ДФ=ddMMyyyyhhmmss") + ".xlsx";
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ПараметрыЗагрузки.АдресВХранилище);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Попытка
		ТабличныйДокумент.Прочитать(ИмяВременногоФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		Сообщить(НСтр("ru = 'Ошибка при обработке файла'; en = 'Error'"));
		Возврат;
	КонецПопытки;
	
	Если ТабличныйДокумент.Области.Количество() > 0 Тогда
		ИмяОбластиДанных = ТабличныйДокумент.Области[0].Имя;
		ОбластьДанных    = ТабличныйДокумент.ПолучитьОбласть(ИмяОбластиДанных);
	Иначе
		Сообщить(НСтр("ru = 'Ошибка при обработке файла'; en = 'Error'"));
		Возврат;
	КонецЕсли;
	
	НомерПервойСтроки     = 1;
	НомерПоследнейСтроки  = ТабличныйДокумент.ВысотаТаблицы;
	НомерПервойКолонки    = Мин(ПараметрыЗагрузки.EDD,  ПараметрыЗагрузки.ЗаказНаЗавод);
	НомерПоследнейКолонки = Макс(ПараметрыЗагрузки.EDD, ПараметрыЗагрузки.ЗаказНаЗавод);
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьДанных.Область(НомерПервойСтроки, НомерПервойКолонки, НомерПоследнейСтроки, НомерПоследнейКолонки));
	ПостроительЗапроса.Выполнить();
	
	Попытка
		ДанныеФайла = ПостроительЗапроса.Результат.Выгрузить(); 
	Исключение
		Сообщить(НСтр("ru = 'Ошибка при обработке файла'; en = 'Error'"));
		Возврат;
	КонецПопытки;
	
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение КонецПопытки;
	
	Если ДанныеФайла.Колонки.Количество() < 2 Тогда
		Сообщить(НСтр("ru = 'Ошибка при обработке файла'; en = 'Error'"));
		Возврат;
	КонецЕсли;
	
	КолонкаEDD = ДанныеФайла.Колонки[ПараметрыЗагрузки.EDD-1];
	КолонкаEDD.Имя = "EDD";
	
	КолонкаЗаказНаЗавод = ДанныеФайла.Колонки[ПараметрыЗагрузки.ЗаказНаЗавод-1];
	КолонкаЗаказНаЗавод.Имя = "ЗаказНаЗавод";
	
	Для Каждого СтрокаФайла Из ДанныеФайла Цикл
		НомерЗаказаФайл = Число(СокрЛП(СтрокаФайла.ЗаказНаЗавод));
		НомерЗаказа     = Формат(НомерЗаказаФайл, "ЧЦ=9; ЧДЦ=0; ЧВН=; ЧГ=0");
		
		ЗаказНаЗаводСсылка = Справочники.Scan_ЗаказыНаЗавод.НайтиПоНаименованию(НомерЗаказа, Истина);
		Если Не ЗаказНаЗаводСсылка.Пустая() 
			И   ТипЗнч(СтрокаФайла.EDD) = Тип("Дата")
			И   СтрокаФайла.EDD <> Дата(1,1,1)
			Тогда
			РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(ЗаказНаЗаводСсылка, "EDD", СтрокаФайла.EDD);
		КонецЕсли;
	КонецЦикла;
	
	Сообщить(Нстр("ru = 'Завершена загрузка и обработка файла'; en = 'Downloading finish'")+" "+ТекущаяДата());
	
КонецПроцедуры
//rarus agar 11.12.2020 16403 --

//rarus agar 22.12.2020 16968 ++
&НаКлиенте
Процедура КоличествоЗаказовНаЗавод(Команда)
	
	ОбновитьКоличествоЗаказовНаЗавод();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоЗаказовНаЗавод()
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МойСписок Тогда
		КоличествоЗаказовНаЗавод = РассчитатьКоличествоЭлементовВТаблице("Ссылка");
		Элементы.ЗаказыНаЗаводКоличествоЗаказовНаЗавод.Заголовок = НСтр("ru = 'Количество заказов: '; en = 'Order count: '") + КоличествоЗаказовНаЗавод;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция РассчитатьКоличествоЭлементовВТаблице(ИмяЭлемента)
	
	ИмяДинамическогоСписка = ИмяЭлементаДинамическогоСпискаТекущейСтраницы();
	
	ТаблицаРезультат = ДинамическийСписокВТаблицуЗначений(Элементы[ИмяДинамическогоСписка], ИмяЭлемента);
	
	ТаблицаРезультат.Свернуть(ИмяЭлемента);
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, ИмяЭлемента);
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
	
КонецФункции

&НаСервере
Функция ИмяЭлементаДинамическогоСпискаТекущейСтраницы()
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МойСписок Тогда
		ИмяЭлементаДинамическогоСписка = "ЗаказыНаЗавод";
	КонецЕсли;
	
	Возврат ИмяЭлементаДинамическогоСписка;
	
КонецФункции

&НаКлиенте
Процедура СоздатьЗаказНаЗакупкуЛокальный(Команда)
	
	Форма       = ПолучитьФорму("Документ.Scan_ЗаказНаЗакупку.ФормаОбъекта");
	ДанныеФормы = Форма.Объект;
	
	СоздатьЗаказНаЗакупкуНаСервере(ДанныеФормы, ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ЗаказНаЗакупкуЛокальный"));
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
	
	Форма.ЗаполнитьПараметрыДокумента();
	Форма.УправлениеДиалогомНаСервере();
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказНаЗакупкуЕвро(Команда)
	
	Форма       = ПолучитьФорму("Документ.Scan_ЗаказНаЗакупку.ФормаОбъекта");
	ДанныеФормы = Форма.Объект;
	
	СоздатьЗаказНаЗакупкуНаСервере(ДанныеФормы, ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ЗаказНаЗакупкуЕвро"));
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
	
	Форма.ЗаполнитьПараметрыДокумента();
	Форма.УправлениеДиалогомНаСервере();
	Форма.Открыть();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьЗаказНаЗакупкуНаСервере(ДанныеФормы,ХозОперация);
	
	ДокументОбъект = Документы.Scan_ЗаказНаЗакупку.СоздатьДокумент();
	ДокументОбъект.Заполнить(Новый Структура("ХозОперация", ХозОперация));
	
	ЗначениеВДанныеФормы(ДокументОбъект, ДанныеФормы);
	
КонецПроцедуры
//rarus agar 22.12.2020 16968 --

//rarus vikhle 15.02.2021 mt 17209 +++
&НаСервереБезКонтекста
Функция ПолучитьМассивДатПоНадстройкам()
	
	МассивДатПоНадстройкам = Новый Массив;
	МассивДатПоНадстройкам.Добавить(ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.AN"));
	МассивДатПоНадстройкам.Добавить(ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.PAD"));
	МассивДатПоНадстройкам.Добавить(ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.AAD"));
	МассивДатПоНадстройкам.Добавить(ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.PTSD"));
	МассивДатПоНадстройкам.Добавить(ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ADDLBB"));
	МассивДатПоНадстройкам.Добавить(ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.PODOD"));
	МассивДатПоНадстройкам.Добавить(ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.RFT"));
	Возврат МассивДатПоНадстройкам;
	
КонецФункции

&НаКлиенте
Процедура ОчиститьЗначенияКонтрольныхТочек()
	
	Для Каждого СтрокаТаблицы Из ГрупповоеЗаполнениеЗначений Цикл
		//СтрокаТаблицы.Значение = Дата(1,1,1);
		//СтрокаТаблицы.Очистить = Ложь;
		// rarus kabany 14.06.2021 17886 +++
		СтрокаТаблицы.Значение = Неопределено;
		СтрокаТаблицы.Очистить = Ложь;
		// rarus kabany 14.06.2021 17886 ---
	КонецЦикла; 
	
КонецПроцедуры	
//rarus vikhle 15.02.2021 mt 17209 ---

//rarus agar 18.03.2021 17450 ++
&НаКлиенте
Процедура УстановитьПримечаниеКЗаказамНаЗавод(Команда)
	
	Если ПустаяСтрока(ПримечаниеКЗаказамНаЗавод) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Примечание не указано!'"));
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеЗаказыНаЗавод.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны строки списка!'"));
		Возврат;
	КонецЕсли;
	
	УстановитьПримечаниеКЗаказамНаЗаводНаСервере(ВыбранныеЗаказыНаЗавод, ПримечаниеКЗаказамНаЗавод);
	СнятьФлажки(Команды.Найти("СнятьФлажки"));
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.Scan_ЗаказыНаЗавод"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПримечаниеКЗаказамНаЗаводНаСервере(ВыбранныеЗаказыНаЗавод, ПримечаниеКЗаказамНаЗавод)
	
	ЕстьОшибки = Ложь;
	
	ТекущийПользователь = СокрЛП(Пользователи.АвторизованныйПользователь());
	
	Для Каждого ЗаказНаЗаводСсылка Из ВыбранныеЗаказыНаЗавод Цикл
		ЗаказНаЗаводОбъект = ЗаказНаЗаводСсылка.ПолучитьОбъект();
		//rarus agar 09.05.2021 17753 ++
		//ЗаказНаЗаводОбъект.Комментарий = ПримечаниеКЗаказамНаЗавод;
		Приставка = "";
		
		Если Не ПустаяСтрока(ЗаказНаЗаводОбъект.Комментарий) Тогда
			Приставка = ", ";
		КонецЕсли;
			
		ДобавляемыйФрагмент = ""+Приставка+ПримечаниеКЗаказамНаЗавод+" ("+ТекущийПользователь+")";
		
		ЗаказНаЗаводОбъект.Комментарий = ЗаказНаЗаводОбъект.Комментарий + ДобавляемыйФрагмент;
		//rarus agar 09.05.2021 17753 --
		
		Попытка
			ЗаказНаЗаводОбъект.Записать();
		Исключение
			ЕстьОшибки = Истина;
			Сообщить("Не удалось установить примечание у заказа " + ЗаказНаЗаводОбъект.Наименование + " " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	Если Не ЕстьОшибки Тогда
		Сообщить("Примечание успешно установлено.");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПримечаниеЛичноеКЗаказамНаЗавод(Команда)
	
	Если ПустаяСтрока(ПримечаниеЛичноеКЗаказамНаЗавод) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Личное примечание не указано!'"));
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеЗаказыНаЗавод.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны строки списка!'"));
		Возврат;
	КонецЕсли;
	
	УстановитьПримечаниеЛичноеКЗаказамНаЗаводНаСервере(ВыбранныеЗаказыНаЗавод, ПримечаниеЛичноеКЗаказамНаЗавод);
	СнятьФлажки(Команды.Найти("СнятьФлажки"));
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.Scan_ЗаказыНаЗавод"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПримечаниеЛичноеКЗаказамНаЗаводНаСервере(ВыбранныеЗаказыНаЗавод, ПримечаниеЛичноеКЗаказамНаЗавод)
	
	ЕстьОшибки = Ложь;
	
	Для Каждого ЗаказНаЗаводСсылка Из ВыбранныеЗаказыНаЗавод Цикл
		Если РегистрыСведений.Scan_ЛичныеКомментарииПользователей.ЗаписьЗначенияРегистраСведения(ПараметрыСеанса.ТекущийПользователь, ЗаказНаЗаводСсылка, ПримечаниеЛичноеКЗаказамНаЗавод) Тогда
			ЕстьОшибки = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьОшибки Тогда
		Сообщить("Личное примечание успешно установлено.");
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 18.03.2021 17450 --

//rarus agar 31.03.2021 17567 ++
&НаКлиенте
Процедура ОчиститьПримечаниеКЗаказамНаЗавод(Команда)
	
	Если ВыбранныеЗаказыНаЗавод.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны строки списка!'"));
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = Нстр("ru = 'У выбранных заказов на завод будет очищено примечание. Продолжить?'");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьПримечаниеКЗаказамНаЗаводЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПримечаниеКЗаказамНаЗаводЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПримечаниеКЗаказамНаЗавод = Неопределено;
		ОчиститьПримечаниеКЗаказамНаЗаводНаСервере(ДополнительныеПараметры.ВыбранныеЗаказыНаЗавод);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
		ОповеститьОбИзменении(Тип("СправочникСсылка.Scan_ЗаказыНаЗавод"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьПримечаниеКЗаказамНаЗаводНаСервере(ВыбранныеЗаказыНаЗавод)
	
	ЕстьОшибки = Ложь;
	
	Для Каждого ЗаказНаЗаводСсылка Из ВыбранныеЗаказыНаЗавод Цикл
		ЗаказНаЗаводОбъект = ЗаказНаЗаводСсылка.ПолучитьОбъект();
		ЗаказНаЗаводОбъект.Комментарий = Неопределено;
		
		Попытка
			ЗаказНаЗаводОбъект.Записать();
		Исключение
			ЕстьОшибки = Истина;
			Сообщить("Не удалось очистить примечание у заказа " + ЗаказНаЗаводОбъект.Наименование + " " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	Если Не ЕстьОшибки Тогда
		Сообщить("Примечание успешно очищено.");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПримечаниеЛичноеКЗаказамНаЗавод(Команда)
	
	Если ВыбранныеЗаказыНаЗавод.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны строки списка!'"));
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = Нстр("ru = 'У выбранных заказов на завод будет очищено личное примечание. Продолжить?'");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьПримечаниеЛичноеКЗаказамНаЗаводЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПримечаниеЛичноеКЗаказамНаЗаводЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПримечаниеЛичноеКЗаказамНаЗавод = Неопределено;
		ОчиститьПримечаниеЛичноеКЗаказамНаЗаводНаСервере(ДополнительныеПараметры.ВыбранныеЗаказыНаЗавод);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
		ОповеститьОбИзменении(Тип("СправочникСсылка.Scan_ЗаказыНаЗавод"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьПримечаниеЛичноеКЗаказамНаЗаводНаСервере(ВыбранныеЗаказыНаЗавод)
	
	ЕстьОшибки = Ложь;
	
	Для Каждого ЗаказНаЗаводСсылка Из ВыбранныеЗаказыНаЗавод Цикл
		МенеджерЗаписи = РегистрыСведений.Scan_ЛичныеКомментарииПользователей.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		МенеджерЗаписи.ЗаказНаЗавод = ЗаказНаЗаводСсылка;
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.Выбран() Тогда
			Попытка
				МенеджерЗаписи.Удалить();
			Исключение
				ЕстьОшибки = Истина;
				
				ЗаказНаЗаводНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаказНаЗаводСсылка, "Наименование");
				Сообщить("Не удалось очистить личное примечание у заказа " + ЗаказНаЗаводНаименование + " " + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьОшибки Тогда
		Сообщить("Личное примечание успешно очищено.");
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 31.03.2021 17567 --

//rarus agar 06.05.2021 17750 ++
&НаКлиенте
Процедура ВыбратьСтроки(Команда)
	
	Для Каждого ВыделеннаяСтрока Из Элементы.ЗаказыНаЗавод.ВыделенныеСтроки Цикл
		ВыбранныйЗаказНаЗавод = ВыбранныеЗаказыНаЗавод.Найти(ВыделеннаяСтрока);
		Если ВыбранныйЗаказНаЗавод = Неопределено Тогда
			ВыбранныеЗаказыНаЗавод.Добавить(ВыделеннаяСтрока);
		КонецЕсли;
	КонецЦикла;

	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);
	
	КоличествоВыбранных = ВыбранныеЗаказыНаЗавод.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьСтроки(Команда)
	
	Для Каждого ВыделеннаяСтрока Из Элементы.ЗаказыНаЗавод.ВыделенныеСтроки Цикл
		ВыбранныйЗаказНаЗавод = ВыбранныеЗаказыНаЗавод.Найти(ВыделеннаяСтрока);
		Если ВыбранныйЗаказНаЗавод = Неопределено Тогда
			ВыбранныеЗаказыНаЗавод.Добавить(ВыделеннаяСтрока);
		КонецЕсли;
	КонецЦикла;

	ЗаказыНаЗавод.Параметры.УстановитьЗначениеПараметра("ВыбранныеЗаказыНаЗавод", ВыбранныеЗаказыНаЗавод);
	
	КоличествоВыбранных = ВыбранныеЗаказыНаЗавод.Количество();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗавод, "Ссылка", ВыбранныеЗаказыНаЗавод, ВидСравненияКомпоновкиДанных.ВСписке);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОтборСтрок(Команда)
	
	СнятьФлажки(Команды.Найти("СнятьФлажки"));
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗавод, "Ссылка");
	
КонецПроцедуры

//rarus agar 06.05.2021 17750 --

#КонецОбласти