//rarus vikhle mt 14870 +++
&НаКлиенте
Перем мВыбраныСсылкиРаспределение;
&НаКлиенте
Перем мВыбраныСсылкиСвободные;
//rarus agar 18.08.2020 16138 ++
//rarus bonmak 05.03.2021 17385 ++
&НаКлиенте
Перем мВыбраныСсылкиВсеЗаказы;
//rarus bonmak 05.03.2021 17385 --
&НаКлиенте
Перем мВыбраныСсылкиПродажи;
//rarus agar 18.08.2020 16138 --
//rarus vikhle 12.03.2021 mt 17340 +++
&НаКлиенте
Перем мВыбраныСсылкиУдаленные;
//rarus vikhle 12.03.2021 mt 17340 ---
&НаКлиенте
Перем мКритерииПоискаПоСписку;
&НаКлиенте
Перем мКритерииПоискаПоКоридору;
//rarus vikhle 23.07.2021 mt 17834 +++
&НаКлиенте
Перем мВыбраныСсылкиРезервSRU;
//rarus vikhle 23.07.2021 mt 17834 ---
&НаКлиенте
Перем мИменаСтраниц;

//ВСПОМОГАТЕЛЬНЫЕ
&НаСервере
Функция ПолучитьСписокПоСтранице(Страница)
	Если Страница = "Распределение" Тогда
		Возврат ЗаказыНаЗаводРаспределение;
	ИначеЕсли Страница = "Свободные" Тогда
		Возврат ЗаказыНаЗаводСвободные;
	ИначеЕсли Страница = "Продажи" Тогда
		Возврат ЗаказыНаЗаводПродажи;
	ИначеЕсли Страница = "Удаленные" Тогда
		Возврат ЗаказыНаЗаводУдаленные;
	ИначеЕсли Страница = "Архив" Тогда
		Возврат ЗаказыНаЗаводАрхив;
	ИначеЕсли Страница = "ВсеЗаказы" Тогда
		Возврат ЗаказыНаЗаводВсеЗаказы;	
	//rarus vikhle 23.07.2021 mt 17834 +++
	ИначеЕсли Страница = "РезервSRU" Тогда
		Возврат ЗаказыНаЗаводРезервSRU;	
	//rarus vikhle 23.07.2021 mt 17834 ---	
	КонецЕсли;		
КонецФункции	

&НаКлиенте
Функция ПолучитьМассивКритериевПоиска()
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	МассивКолонокОтбора.Добавить("№ Шасси");
	МассивКолонокОтбора.Добавить("PDD");
	МассивКолонокОтбора.Добавить("CDD");
	МассивКолонокОтбора.Добавить("CDD2");
	МассивКолонокОтбора.Добавить("EDD");
	МассивКолонокОтбора.Добавить("DD");
	МассивКолонокОтбора.Добавить("DD2");
	МассивКолонокОтбора.Добавить("DDS");
	МассивКолонокОтбора.Добавить("Бронь");	
	Возврат МассивКолонокОтбора;
		
КонецФункции

&НаКлиенте
Процедура ЗаполнитьМассивИменСтраниц()
	мИменаСтраниц = Новый Массив;
	мИменаСтраниц.Добавить("Распределение");
	мИменаСтраниц.Добавить("Свободные");
	мИменаСтраниц.Добавить("Продажи");
	мИменаСтраниц.Добавить("Удаленные");
	мИменаСтраниц.Добавить("Архив");
	мИменаСтраниц.Добавить("ВсеЗаказы");
	мИменаСтраниц.Добавить("РезервSRU");//rarus vikhle 23.07.2021 mt 17834
КонецПроцедуры	

&НаСервере
Процедура УстановитьУсловноеОформление();//rarus vikhle 15.02.2021 mt 17220
	
	//rarus vikhle 15.02.2021 mt 17220 +++
	УсловноеОформление.Элементы.Очистить();
	
	//Только просмотр значения строки КТ при установленном признаке "Очистить"
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КонтрольныеТочкиРаспределениеЗначение.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//rarus bonmak 05.03.2021 17385 ++
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КонтрольныеТочкиСвободныеЗначение.Имя);
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КонтрольныеТочкиВсеЗаказыЗначение.Имя);
	//rarus bonmak 05.03.2021 17385 --
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтрольныеТочки.Очистить");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецПроцедуры

#Область ДействияИПоискПоКритериям
//ПОИСК ПО КРИТЕРИЯМ
&НаКлиенте
Процедура ДействияИПоиск(Команда)
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ИмяГруппыОтбора = "ГруппаОтборРаспределение";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда
		ИмяГруппыОтбора = "ГруппаОтборСвободные";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
		ИмяГруппыОтбора = "ГруппаОтборПродажи";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Удаленные" Тогда
		ИмяГруппыОтбора = "ГруппаОтборУдаленные";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Архив" Тогда
		ИмяГруппыОтбора = "ГруппаОтборАрхив";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
		ИмяГруппыОтбора = "ГруппаОтборВсеЗаказы";
	//rarus vikhle 23.07.2021 mt 17834 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда
		ИмяГруппыОтбора = "ГруппаОтборРезервSRU";
	//rarus vikhle 23.07.2021 mt 17834 ---	
	КонецЕсли;	
			
	Если Не Элементы[ИмяГруппыОтбора].Видимость Тогда 
		Элементы[ИмяГруппыОтбора].Видимость = Истина;
	Иначе
		Элементы[ИмяГруппыОтбора].Видимость = Ложь;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОкПоискПоКритериямНаСервере(Страница)
	//ИспользоватьИзмененноеПолеС = Ложь;
	//ИспользоватьИзмененноеПолеПо = Ложь;
	
	Если ТумблерПоиск = "0" Тогда  
		//rarus vikhle 10.06.2020 mt 15702 +++
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
		МассивПодстрокБезИзменений = Новый Массив;
		//rarus vikhle 10.06.2020 mt 15702 ---
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрокБезИзменений, МассивПодстрок, Истина);
		//преобразование массива, чтобы находить заказы по номеру без нулей
		Индекс = -1;
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;	
				КонецЕсли;
			КонецЦикла;	
			//rarus pechek 19.06.2020 mantis 16201 +++
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (7 - КолВоЗнаковЧисло) Цикл  // 7-длина номера шасси  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
			//rarus pechek 19.06.2020 mantis 16201 ---
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок, МассивПодстрокБезИзменений, Истина);//rarus vikhle 10.06.2020 mt 15702
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";//rarus vikhle 25.05.2020 mt 15702
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.МодельПродукта Тогда
			ЛевоеЗначение = "Модель.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.Дилер Тогда
			//rarus bonmak 05.03.2021 17347 ++
			//ЛевоеЗначение = "Дилер.Наименование"; Заявка.Дилер
			ЛевоеЗначение = "Заявка.Дилер.Наименование";
			//rarus bonmak 05.03.2021 17347 --
		КонецЕсли;
		
		ОбъектНастройки = ПолучитьСписокПоСтранице(Страница).КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
		ОбъектНастройки.Очистить();
		                                              
		НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НовыйОтбор.ПравоеЗначение = МассивПодстрок;
	Иначе
		ОбъектНастройки =  ПолучитьСписокПоСтранице(Страница).КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		ОбъектНастройки.Очистить();
		
		//rarus BProg_Dekin 05.03.2020 mantis 0015725 ++ Закомментировал, отбор по номеру необходим в разных местах. Вынес код в общий модуль
		//Если ПолеОтбораПоПериоду = "№ Заказа" Тогда
			//преобразование для нахождения по номеру заказа без нулей
			//ЛевоеЗначение = "Заказ";
			//НовоеЧислоДляПоискаС = ПолеС;
			//НовоеЧислоДляПоискаПо = ПолеПо;
			//Если НЕ Лев(ПолеС,1) = "0" Тогда
			//		Попытка
			//			ЧислоСтроки = Число(ПолеС);
			//			ИспользоватьИзмененноеПолеС = Истина;
			//		Исключение
			//		КонецПопытки;	
			//		Если ИспользоватьИзмененноеПолеС Тогда 
			//			КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
			//			Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
			//				НовоеЧислоДляПоискаС = "0" + НовоеЧислоДляПоискаС;
			//			КонецЦикла;
			//		КонецЕсли;	
			//КонецЕсли;	
			//Если НЕ Лев(ПолеПо,1) = "0" Тогда
			//		Попытка
			//			ЧислоСтроки = Число(ПолеПо);
			//			ИспользоватьИзмененноеПолеПо = Истина;
			//		Исключение
			//		КонецПопытки;	
			//		Если ИспользоватьИзмененноеПолеПо Тогда
			//			КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
			//			Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
			//				НовоеЧислоДляПоискаПо = "0" + НовоеЧислоДляПоискаПо;
			//			КонецЦикла;
			//		КонецЕсли;	
			//	КонецЕсли;
		//ИначеЕсли ПолеОтбораПоПериоду = "№ Шасси" Тогда
		
		// rarus tenkam 17.06.2020 mantis 16201 +++
		Если ПолеОтбораПоПериоду = "№ Шасси" Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		Иначе
			ЛевоеЗначение = ПолеОтбораПоПериоду;
		КонецЕсли;
		
		Если ПолеОтбораПоПериоду = "№ Шасси" ИЛИ
			ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ДинамическийСписок = ПолучитьСписокПоСтранице(Страница);
			
			СообщениеОбОшибке = "";
			ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(ДинамическийСписок, ЛевоеЗначение, ПолеС, ПолеПо,,СообщениеОбОшибке);
			Если НЕ ОтборУстановлен Тогда
				Сообщить(СообщениеОбОшибке);
			КонецЕсли;
		Иначе
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеС; 	
			
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеПо;	
		КонецЕсли;
		
		//Если ПолеОтбораПоПериоду = "№ Шасси" Тогда
		////rarus BProg_Dekin 05.03.2020 mantis 0015725 --
		//	ЛевоеЗначение = "Шасси"
		//Иначе
		//	ЛевоеЗначение = ПолеОтбораПоПериоду;
		//КонецЕсли;	
		//
		//Если ПолеОтбораПоПериоду <> "№ Заказа" Тогда //rarus BProg_Dekin 05.03.2020 mantis 0015725 +-
		//	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//	НовыйОтбор.Использование  = Истина;
		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		//	НовыйОтбор.ПравоеЗначение = ПолеС; //rarus BProg_Dekin 05.03.2020 mantis 0015725 +- НовыйОтбор.ПравоеЗначение = ?(ИспользоватьИзмененноеПолеС,НовоеЧислоДляПоискаС,ПолеС);
		//	
		//	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//	НовыйОтбор.Использование  = Истина;
		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		//	НовыйОтбор.ПравоеЗначение = ПолеПо; //rarus BProg_Dekin 05.03.2020 mantis 0015725 +- НовыйОтбор.ПравоеЗначение = ?(ИспользоватьИзмененноеПолеПо,НовоеЧислоДляПоискаПо,ПолеПо);
		//КонецЕсли;
		//
		////rarus BProg_Dekin 05.03.2020 mantis 0015725 ++
		//Если ПолеОтбораПоПериоду = "№ Заказа" Тогда
		//	ДинамическийСписок = ПолучитьСписокПоСтранице(Страница);
		//	Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруЗаказаНаЗавод(ДинамическийСписок, "ЗаказНаЗавод.Наименование", ПолеС, ПолеПо);//rarus vikhle 29.05.2020 mt 15702
		//КонецЕсли;
		////rarus BProg_Dekin 05.03.2020 mantis 0015725 --
		// rarus tenkam 17.06.2020 mantis 16201 ---
		
	КонецЕсли;
	
	//rarus vikhle 28.05.2020 mt 15702 +++
	//rarus BProg_Dekin 16.04.2020 mantis 0014870 ++
	//ИмяКоманды = Страница + "ОтображатьТолькоГрузовыеАвтомобили";
	//Если Элементы.Найти(ИмяКоманды) <> Неопределено Тогда
	//	Если Элементы[ИмяКоманды].Пометка Тогда
	//		Элементы[ИмяКоманды].Пометка = Ложь;
	//		ОтборПоГрузовымАвтомобилям();
	//	КонецЕсли;
	//КонецЕсли;
	//rarus BProg_Dekin 16.04.2020 mantis 0014870 --
	//rarus vikhle 28.05.2020 mt 15702 ---
КонецПроцедуры

&НаКлиенте
Процедура ОкПоискПоКритериям(Команда)
	ИспользоватьЧислоВместоСтроки = Ложь;
	Если ТумблерПоиск = "0" Тогда 	
		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Если СокрЛП(ПолеВвода) = "" Тогда
			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПолеОтбораПоПериоду) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Попытка
			ЧислоПолеС = Число(ПолеС);
			ЧислоПолеПо = Число(ПолеПо);
			ИспользоватьЧислоВместоСтроки = Истина;
		Исключение
		КонецПопытки;
		
		//Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо <= ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда
		Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо < ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда //rarus pechek 19.06.2020 mantis 16201
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
		ИначеЕсли ИспользоватьЧислоВместоСтроки Тогда 	
			//Если ЧислоПолеПо <= ЧислоПолеС Тогда
			Если ЧислоПолеПо < ЧислоПолеС Тогда	//rarus pechek 19.06.2020 mantis 16201
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	СнятьФлажки(Команды.СнятьФлажки); //rarus agar 22.03.2021 17501 +-
	
	ОкПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПоискПоКритериям(Команда)
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры

&НаСервере
Процедура ОтключитьПоискПоКритериямНаСервере(Страница)
	Список = ПолучитьСписокПоСтранице(Страница);
	Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();
	//rarus vikhle 01.06.2020 mt 15702 +++	
	ПолеВвода = "";
	ПолеС  = Неопределено;
	ПолеПо = Неопределено;
	
	//rarus vikhle 28.05.2020 mt 15702 +++
	//rarus BProg_Dekin 16.04.2020 mantis 0014870 ++
	//ИмяКоманды = Страница + "ОтображатьТолькоГрузовыеАвтомобили";
	//Если Элементы.Найти(ИмяКоманды) <> Неопределено Тогда
	//	Элементы[ИмяКоманды].Пометка = Ложь;
	//КонецЕсли;
	//rarus BProg_Dekin 16.04.2020 mantis 0014870 --
	//rarus vikhle 28.05.2020 mt 15702 ---
КонецПроцедуры

//КОРИДОР ЗНАЧЕНИЙ

&НаКлиенте
Процедура ПолеОтбораПоПериодуРаспределениеПриИзменении(Элемент)
	//ПолеС = "";//rarus vikhle 29.05.2020 mt 15702 
	//ПолеПо = "";//rarus vikhle 29.05.2020 mt 15702
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент) 
	Для Каждого Страница ИЗ мИменаСтраниц Цикл
		ИмяПоляС = "ПолеС" + Страница;
		ИмяПоляПо = "ПолеПо" + Страница;
		Если Элемент.ТекстРедактирования = "№ Заказа" ИЛИ Элемент.ТекстРедактирования = "№ Шасси" Тогда
			//Элементы[ИмяПоляС].ВыбиратьТип = Ложь;//rarus vikhle 29.05.2020 mt 15702
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Строка");
			//Элементы[ИмяПоляПо].ВыбиратьТип = Ложь;//rarus vikhle 29.05.2020 mt 15702
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Иначе
			//Элементы[ИмяПоляС].ВыбиратьТип = Ложь;//rarus vikhle 29.05.2020 mt 15702
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Дата");
			//Элементы[ИмяПоляПо].ВыбиратьТип = Ложь;//rarus vikhle 29.05.2020 mt 15702
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Дата");
		КонецЕсли;
		//rarus vikhle 29.05.2020 mt 15702 +++
		ПолеС = Неопределено;
		ПолеПо = Неопределено;
		//rarus vikhle 29.05.2020 mt 15702 ---  
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура КритерийПоискаПриИзменении(Элемент)
	ПолеВвода = "";
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискРаспределениеПриИзменении(Элемент)
	УправлениеДиалогом();
	Если ТумблерПоиск = "1" Тогда
		Элементы.ПолеОтбораПоПериодуРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискСвободныеПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискПродажиПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискУдаленныеПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискАрхивПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискВсеЗаказыПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

//ПОЛЕ ОТБОР ПО ПЕРИОДУ ПРИ ИЗМЕНЕНИИ
&НаКлиенте
Процедура ПолеОтбораПоПериодуСвободныеПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуПродажиПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуУдаленныеПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуАрхивПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуВсеЗаказыПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогом()
	Если ТумблерПоиск = "0" Тогда
		Элементы.ГруппаПоСпискуРаспределение.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийРаспределение.Видимость = Ложь;
		Элементы.ГруппаПоСпискуСвободные.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийСвободные.Видимость = Ложь;
		Элементы.ГруппаПоСпискуПродажи.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийПродажи.Видимость = Ложь;
		Элементы.ГруппаПоСпискуУдаленные.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийУдаленные.Видимость = Ложь;
		Элементы.ГруппаПоСпискуАрхив.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийАрхив.Видимость = Ложь;
		Элементы.ГруппаПоСпискуВсеЗаказы.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийВсеЗаказы.Видимость = Ложь;
		//rarus vikhle 23.07.2021 mt 17834 +++
		Элементы.ГруппаПоСпискуРезервSRU.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийРезервSRU.Видимость = Ложь;
		//rarus vikhle 23.07.2021 mt 17834 ---
		
		ПолеС = "";
		ПолеПо = "";
		ПолеОтбораПоПериоду = ""
	Иначе
		Элементы.ГруппаПоСпискуРаспределение.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийРаспределение.Видимость = Истина;
		Элементы.ГруппаПоСпискуСвободные.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийСвободные.Видимость = Истина;
		Элементы.ГруппаПоСпискуПродажи.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийПродажи.Видимость = Истина;
		Элементы.ГруппаПоСпискуУдаленные.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийУдаленные.Видимость = Истина;
		Элементы.ГруппаПоСпискуАрхив.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийАрхив.Видимость = Истина;
		Элементы.ГруппаПоСпискуВсеЗаказы.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийВсеЗаказы.Видимость = Истина;
		//rarus vikhle 23.07.2021 mt 17834 +++
		Элементы.ГруппаПоСпискуРезервSRU.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийРезервSRU.Видимость = Истина;
		//rarus vikhle 23.07.2021 mt 17834 ---
		
		ПолеВвода = "";
		КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.ПустаяСсылка();
	КонецЕсли; 	
	
	//rarus agar 06.04.2021 17394 ++
	ТипСпецификацииStd = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std");
	
	Элементы.СтандартнаяСпецификацияРаспределение.ТолькоПросмотр = Не ТипСпецификацииРаспределение = ТипСпецификацииStd;
	Элементы.СтандартнаяСпецификацияСвободные.ТолькоПросмотр     = Не ТипСпецификацииСвободные     = ТипСпецификацииStd;
	Элементы.СтандартнаяСпецификацияПродажи.ТолькоПросмотр       = Не ТипСпецификацииПродажи       = ТипСпецификацииStd;
	//rarus agar 06.04.2021 17394 --
КонецПроцедуры

//ИЗМЕНЕНИЕ ЛОКАЛЬНОГО СТАТУСА
&НаКлиенте
Процедура ИзменитьЛокальныйСтатусРаспределение(Команда)
	
	// rarus agar 15.02.2021 17225 ++
	
	////ИзменитьЛокальныйСтатус();
	//
	//Если ЛокальныйСтатусРаспределение.Пустая() Тогда
	//	Сообщить("Не заполнен статус!");
	//ИначеЕсли мВыбраныСсылкиРаспределение.Количество() = 0 Тогда
	//	Сообщить("Не выбраны продукты");//rarus vikhle 25.05.2020 mt 15702	
	//Иначе	
	//	ИзменитьЛокальныйСтатусНаСервере(мВыбраныСсылкиРаспределение,ЛокальныйСтатусРаспределение);
	//КонецЕсли;	
	//ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));//rarus vikhle 25.05.2020 mt 15702
	////Элементы.ЗаказыНаЗаводРаспределение.Обновить();//rarus vikhle 25.05.2020 mt 15702
	
	//rarus vikhle 16.02.2021 mt 17209 +++
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьИзменениеСтатусовПродуктов") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение локальных статусов продуктов.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 16.02.2021 mt 17209 ---
	
	Если ЛокальныйСтатусРаспределение.Пустая() Тогда
		Сообщить("Не заполнен статус!");
		Возврат;
	ИначеЕсли мВыбраныСсылкиРаспределение.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты");
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = СтрШаблон(Нстр("ru = 'Поменять статус с NEW на %1?'; en = 'Change status from NEW to %1?'"), ЛокальныйСтатусРаспределение);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЛокальныйСтатус",  ЛокальныйСтатусРаспределение);
	ДополнительныеПараметры.Вставить("ВыбранныеИзделия", мВыбраныСсылкиРаспределение);
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ИзменитьЛокальныйСтатусЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	// rarus agar 15.02.2021 17225 --
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЛокальныйСтатусСвободные(Команда)
	
	// rarus agar 15.02.2021 17225 ++
	
	//Если ЛокальныйСтатусСвободные.Пустая() Тогда
	//	Сообщить("Не заполнен статус!");
	//ИначеЕсли мВыбраныСсылкиСвободные.Количество() = 0 Тогда
	//	Сообщить("Не выбраны продукты!");//rarus vikhle 25.05.2020 mt 15702
	//Иначе	
	//	ИзменитьЛокальныйСтатусНаСервере(мВыбраныСсылкиСвободные,ЛокальныйСтатусСвободные);
	//КонецЕсли;	
	//ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));//rarus vikhle 25.05.2020 mt 15702
	////Элементы.ЗаказыНаЗаводСвободные.Обновить();//rarus vikhle 25.05.2020 mt 15702
	
	//rarus vikhle 16.02.2021 mt 17209 +++
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьИзменениеСтатусовПродуктов") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение локальных статусов продуктов.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 16.02.2021 mt 17209 ---
	
	Если ЛокальныйСтатусСвободные.Пустая() Тогда
		Сообщить("Не заполнен статус!");
		Возврат;
	ИначеЕсли мВыбраныСсылкиСвободные.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты!");
		Возврат;
	КонецЕсли;
		
	ТекстВопроса = СтрШаблон(Нстр("ru = 'Поменять статус с OPEN на %1?'; en = 'Change status from OPEN to %1?'"), ЛокальныйСтатусСвободные);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЛокальныйСтатус",  ЛокальныйСтатусСвободные);
	ДополнительныеПараметры.Вставить("ВыбранныеИзделия", мВыбраныСсылкиСвободные);
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ИзменитьЛокальныйСтатусЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	// rarus agar 15.02.2021 17225 --
	
КонецПроцедуры

// rarus agar 15.02.2021 17225 ++
&НаКлиенте
Процедура ИзменитьЛокальныйСтатусЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ИзменитьЛокальныйСтатусНаСервере(ДополнительныеПараметры.ВыбранныеИзделия, ДополнительныеПараметры.ЛокальныйСтатус);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));
	КонецЕсли;
	
КонецПроцедуры
// rarus agar 15.02.2021 17225 --
//rarus bonmak 09.08.2021 16834 ++
//&НаКлиенте
//Процедура ИзменитьЛокальныйСтатус(ИмяСтраницы)
//	
//КонецПроцедуры	
//rarus bonmak 09.08.2021 16834 --
&НаСервереБезКонтекста
Процедура ИзменитьЛокальныйСтатусНаСервере (ВыбранныеИзделия,Статус)
	ЕстьОшибки = Ложь;
	Для Каждого Изделие ИЗ ВыбранныеИзделия Цикл //rarus vikhle 25.05.2020 mt 15702
		// rarus kabany 19.07.2021 18027 ++
		Если Статус = ПредопределенноеЗначение("Справочник.Scan_ЛокальныеСтатусыПродуктов.OPEN") Тогда
			ЗаказНаЗаводСсылка = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Изделие);
			Если ЗаказНаЗаводСсылка = Справочники.Scan_ЗаказыНаЗавод.ПустаяСсылка() Тогда
				Сообщить(СтрШаблон(Нстр("ru = 'Не удалось изменить локальный статус у %1, так как у данного продукта отсутствует заказ на завод';
				|en = 'Failed to change local status of %1, because this product does not have a factory order'"),
				Изделие.Наименование)); // rarus kabany 20.07.2021 18027 + исправление ошибки в тексте
				ЕстьОшибки = Истина;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		// rarus kabany 19.07.2021 18027 --
		ТекОбъект = Изделие.ПолучитьОбъект();
		ТекОбъект.ЛокальныйСтатусПродукта = Статус;
		Попытка
			ТекОбъект.Записать();
		Исключение
			ЕстьОшибки = Истина;
			Сообщить("Не удалось изменить статус у " + ТекОбъект.Наименование + " " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	Если НЕ ЕстьОшибки Тогда
		Сообщить("Локальный статус успешно изменен");
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьКонтрольныеТочки()
	
	//rarus vikhle 10.02.2021 mt 17220 +++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка КАК КонтрольнаяТочка,
	               |	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка.РеквизитОбъекта КАК Реквизит
	               |ИЗ
	               |	РегистрСведений.Scan_КонтрольныеТочкиАРМ КАК Scan_КонтрольныеТочкиАРМ
	               |ГДЕ
	               |	Scan_КонтрольныеТочкиАРМ.АРМОтделаПланирования
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Реквизит";
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	КонтрольныеТочки.Загрузить(РезультатЗапроса);
	//rarus vikhle 10.02.2021 mt 17220 ---
	
КонецПроцедуры

//rarus vikhle 12.03.2021 mt 17340 +++
&НаКлиенте
Процедура ИзменитьЛокальныйСтатусУдаленные(Команда)
	
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьИзменениеСтатусовПродуктов") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение локальных статусов продуктов.'"));
		Возврат;
	КонецЕсли;	
		
	Если ЛокальныйСтатусУдаленные.Пустая() Тогда
		Сообщить("Не заполнен статус!");
		Возврат;
	ИначеЕсли мВыбраныСсылкиУдаленные.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты!");
		Возврат;
	КонецЕсли;
		
	ТекстВопроса = СтрШаблон(Нстр("ru = 'Поменять статус с DELETED на %1?'; en = 'Change status from OPEN to %1?'"), ЛокальныйСтатусУдаленные);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЛокальныйСтатус",  ЛокальныйСтатусУдаленные);
	ДополнительныеПараметры.Вставить("ВыбранныеИзделия", мВыбраныСсылкиУдаленные);
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ИзменитьЛокальныйСтатусЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры
//rarus vikhle 12.03.2021 mt 17340 ---

#КонецОбласти


//ВСЕ ЗАКАЗЫ
&НаКлиенте
Процедура ПоказатьВсеПродукты(Команда)
	//ПоказатьВсеПродуктыНаСервере();
	//rarus vikhle 07.05.2021 m 17761 +++
	//Снятие/ возвращение всех условий (кроме заполненности продукта) в запросе списка на закладке "Все заказы "
	Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка = НЕ Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка;  
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ИспользоватьДопУсловия",НЕ Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка);
	//rarus vikhle 07.05.2021 m 17761 ---
КонецПроцедуры

&НаСервере
Процедура ПоказатьВсеПродуктыНаСервере()
	//rarus vikhle 07.05.2021 m 17761 +++
	//rarus vikhle 25.05.2020 mt 15702 +++ изменен в соответствии с новым запросом 
	//СтрокаУсловияЗапроса = "	И Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	//|	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта В (ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.New), ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Open))
	//|	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	//|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	//|	И (Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	//|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия ЕСТЬ NULL)
	//|	И Scan_СводнаяИнформацияПоПродукту.Продукт.БУ = ЛОЖЬ
	//|	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)";	
	//rarus vikhle 25.05.2020 mt 15702 ---
	
	//Если НЕ СтрНайти(ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса,СтрокаУсловияЗапроса) = 0 Тогда
	//	ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса = СтрЗаменить(ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса,СтрокаУсловияЗапроса,"");
	//	Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка = Истина;	
	//Иначе
	//	ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса = ЭтаФорма.ЗаказыНаЗаводВсеЗаказы.ТекстЗапроса + СтрокаУсловияЗапроса; 
	//	Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка = Ложь;
	//КонецЕсли;
		
	//rarus vikhle 07.05.2021 m 17761 ---
КонецПроцедуры	

//ORDER BOOK

&НаКлиенте
Процедура OrderBook(Команда) //rarus bonmak 16459 07.12.2020 ++
	ИмяЭлементаГруппы = "ГруппаOrderBook" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяСписка = "ЗаказыНаЗавод" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяКнопки = ИмяСписка + "OrderBook"; 
	Элементы[ИмяЭлементаГруппы].Видимость = НЕ Элементы[ИмяЭлементаГруппы].Видимость;
	Элементы[ИмяКнопки].Пометка = НЕ Элементы[ИмяКнопки].Пометка;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ОбновитьДеревоOrderBook(Команда) //rarus bonmak 16459 07.12.2020 ++
	ЗаполнитьДеревоOrderBook();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ЗаполнитьДеревоOrderBook() //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.Компания <> ЗНАЧЕНИЕ(Справочник.Scan_Компании.ПустаяСсылка)
	               |			ТОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.Компания.ВидДилера
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер.ВидДилера
	               |	КОНЕЦ КАК ВидДилера,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.Компания <> ЗНАЧЕНИЕ(Справочник.Scan_Компании.ПустаяСсылка)
	               |			ТОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.Компания
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |	КОНЕЦ КАК Дилер,
	               |	КОЛИЧЕСТВО(Scan_СводнаяИнформацияПоПродукту.Продукт) КАК Количество
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Open)
	               |	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	               |	И (Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ИЛИ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия ЕСТЬ NULL)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.БУ = ЛОЖЬ
	              // |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania) // rarus kabany 28.07.2021 18064 отключил отбор по марке
	               |	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке <> ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)
	               |	И НЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыСоглашенийОпоставкеиСпециальныхусловий.ПроектЗаявкиНаСОП)
	               |	И (Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.Оплачено)
	               |			ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику)
	               |			ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью)
	               |			ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаНеТребуется)
				   //rarus bonmak 26.02.2021 17290 ++
				   |			ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.НеТребуется)
				   //rarus bonmak 26.02.2021 17290 --
				   |			ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоПолностью)
	               |			ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично)
	               |			ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.Компания <> ЗНАЧЕНИЕ(Справочник.Scan_Компании.ПустаяСсылка)
	               |			ТОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.Компания
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.Компания <> ЗНАЧЕНИЕ(Справочник.Scan_Компании.ПустаяСсылка)
	               |			ТОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.Компания.ВидДилера
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер.ВидДилера
	               |	КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.ВидДилера КАК ВидДилера,
	               |	ВТ.Дилер КАК Дилер,
	               |	ВТ.Количество КАК Количество
	               |ИЗ
	               |	ВТ КАК ВТ
	               |ГДЕ
	               |	ВТ.Дилер.Дилер
	               |ИТОГИ ПО
	               |	ВидДилера";	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоOrderBook");
	Элементы.ДеревоOrderBook.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;

КонецПроцедуры //rarus bonmak 16459 07.12.2020 --	

&НаКлиенте
Процедура ДеревоOrderBookВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка = "ЗаказыНаЗавод" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяЭлемента =  Элемент.ТекущийЭлемент.Имя;
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя); 
	Если ИмяЭлемента = "ДеревоOrderBookВидДилера" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.ВидДилера) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.ВидДилера);
	ИначеЕсли	ИмяЭлемента = "ДеревоOrderBookДилер" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда 	
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Дилер);		
	ИначеЕсли	ИмяЭлемента = "ДеревоOrderBookКоличество" Тогда
		СписокСтатусов = Новый СписокЗначений;
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.Оплачено"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаНеТребуется"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.НеТребуется")); //rarus bonmak 26.02.2021 17290 
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоПолностью"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично"));
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Договор.СОП_СтатусОплаты", СписокСтатусов, ВидСравненияКомпоновкиДанных.ВСписке);  	
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Дилер", Элемент.ТекущиеДанные.Дилер, ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

//ЗАКАЗЫ ПО СЕГМЕНТАМ

&НаКлиенте
Процедура ПродуктыПоСегментам(Команда)//rarus bonmak 16459 07.12.2020 ++
	ИмяЭлементаГруппы = "ГруппаПродуктыПоСегментам" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяСписка = "ЗаказыНаЗавод" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяКнопки = ИмяСписка + "ПродуктыПоСегментам"; 
	Элементы[ИмяЭлементаГруппы].Видимость = НЕ Элементы[ИмяЭлементаГруппы].Видимость;
	Элементы[ИмяКнопки].Пометка = НЕ Элементы[ИмяКнопки].Пометка;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ОбновитьДеревоСегменты(Команда) //rarus bonmak 16459 07.12.2020 ++
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Распределение Тогда
		ЗаполнитьДеревоСегментыРаспределение();
	КонецЕсли;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ДеревоСегментыРаспределениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	ОбработатьВыборЗначенияДереваСегментов(Элемент, СтандартнаяОбработка);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ОбработатьВыборЗначенияДереваСегментов(Элемент, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка = "ЗаказыНаЗавод" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяЭлемента = "ДеревоСегменты" + Элементы.Страницы.ТекущаяСтраница.Имя; 
	Если Элемент.ТекущийЭлемент.Имя = ИмяЭлемента + "Модель" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Модель) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Модель);		
		//rarus kabany 08.04.2021 17596 +++
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = ИмяЭлемента +"КолонкаГруппировки"  И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Модель) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Модель);
		//rarus kabany 08.04.2021 17596 ---	
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = ИмяЭлемента + "Количество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Модель) Тогда //rarus kabany 08.04.2021 17596 +
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Модель", Элемент.ТекущиеДанные.Модель, ВидСравненияКомпоновкиДанных.Равно);	
		Иначе
		    ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ЭтаФорма[ИмяСписка].Отбор, "Модель");
		КонецЕсли; //rarus kabany 08.04.2021 17596 - 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Продукт.СегментРынкаПродуктов", Элемент.ТекущиеДанные.Сегмент, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

Процедура ЗаполнитьДеревоСегментыРаспределение() //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Scan_СводнаяИнформацияПоПродукту.Продукт) КАК Количество,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент
	|ИЗ
	|	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	|ГДЕ
	|	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	|	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.New)
	|	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	|	И (Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия ЕСТЬ NULL
	|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|	И Scan_СводнаяИнформацияПоПродукту.Продукт.БУ = ЛОЖЬ
	//|	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania) // rarus kabany 28.07.2021 18064 отключил отбор по марке
	//rarus kabany 23.04.2021 17697 +++
	|   И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	//rarus kabany 23.04.2021 17697 ---
	|
	|СГРУППИРОВАТЬ ПО
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта
	|ИТОГИ
	//rarus kabany 06.04.2021 17596 +
	|	СУММА(Количество) КАК Количество
	//rarus kabany 06.04.2021 17596 -
	|ПО
	|	Сегмент";
	
	
	//rarus kabany 06.04.2021 17596 +++		   	
	//Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ЗначениеВРеквизитФормы(Дерево, "ДеревоСегментыРаспределение");
	
	ЭлементыДерева = ДеревоСегментыРаспределение.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	ВыборкаПервыйУровень = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень = ЭлементыДерева.Добавить();
		Корень.КолонкаГруппировки = ВыборкаПервыйУровень.Сегмент;
		Корень.Сегмент = ВыборкаПервыйУровень.Сегмент; //rarus kabany 08.04.2021 17596 +
		Корень.Количество = ВыборкаПервыйУровень.Количество; 
		ЭлементыКорня = Корень.ПолучитьЭлементы();
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать();
		Пока ВыборкаВторойУровень.Следующий() Цикл
			НоваяСтрока = ЭлементыКорня.Добавить();
			НоваяСтрока.КолонкаГруппировки = ВыборкаВторойУровень.Модель;
			НоваяСтрока.Количество = ВыборкаВторойУровень.Количество;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВторойУровень); //rarus kabany 08.04.2021 17596 +
		КонецЦикла; 
	КонецЦикла; 
	//rarus kabany 06.04.2021 17596 ---
	
	Элементы.ДеревоСегментыРаспределение.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать; //rarus kabany 06.04.2021 17596 +
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

//ЗАКАЗЫ ПО МЕНЕДЖЕРАМ

&НаКлиенте
Процедура ПродуктыПоМенеджерам(Команда) //rarus bonmak 16459 07.12.2020 ++
	ИмяЭлементаГруппы = "ГруппаПродуктыПоМенеджерам" + Элементы.Страницы.ТекущаяСтраница.Имя;
	Элементы[ИмяЭлементаГруппы].Видимость = НЕ Элементы[ИмяЭлементаГруппы].Видимость;
	Элементы.ЗаказыНаЗаводПродажиПродуктыПоМенеджерам.Пометка = НЕ Элементы.ЗаказыНаЗаводПродажиПродуктыПоМенеджерам.Пометка; 
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ОбновитьДеревоПродуктыПоМенеджерам(Команда) //rarus bonmak 16459 07.12.2020 ++
	ЗаполнитьДеревоПродуктыПоМенеджерам();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ЗаполнитьДеревоПродуктыПоМенеджерам() //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.РегиональныйМенеджер КАК РегиональныйМенеджер,
	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер КАК Дилер,
	|	СУММА(ВЫБОР
	|			КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.Оплачено)
	|				ТОГДА 1
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику)
	|						ТОГДА 1
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью)
	|								ТОГДА 1
	|							ИНАЧЕ ВЫБОР
	|									КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаНеТребуется)
	|										ТОГДА 1
	|									ИНАЧЕ ВЫБОР
	|											КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоПолностью)
	|												ТОГДА 1
	//rarus bonmak 26.02.2021 17290 ++
	|											ИНАЧЕ ВЫБОР
	|													КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.НеТребуется)
	|														ТОГДА 1
	//rarus bonmak 26.02.2021 17290 --
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										КОНЕЦ
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОНЕЦ) КАК СтатусОплачено,
	|	СУММА(ВЫБОР
	|			КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично)
	|				ТОГДА 1
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику)
	|						ТОГДА 1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ) КАК СтатусОплаченоЧастично,
	|	СУММА(ВЫБОР
	|			КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.НеОплачено)
	|					ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор = ЗНАЧЕНИЕ(Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаОтсутствует)
	|							ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор = ЗНАЧЕНИЕ(Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка)
	|						ТОГДА 1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ) КАК СтатусНеОплачено,
	|	КОЛИЧЕСТВО(Scan_СводнаяИнформацияПоПродукту.Продукт) КАК Количество
	//rarus kabany 06.04.2021 17596 +++
	|ПОМЕСТИТЬ ПромИтог
	//rarus kabany 06.04.2021 17596 ---
	|ИЗ
	|	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	|		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	|ГДЕ
	|	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	|	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Open)
	|	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	|	И (Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия ЕСТЬ NULL)
	|	И Scan_СводнаяИнформацияПоПродукту.Продукт.БУ = ЛОЖЬ
	//rarus kabany 23.04.2021 17697 +++
	|   И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	//rarus kabany 23.04.2021 17697 ---
	//|	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania) // rarus kabany 28.07.2021 18064 отключил отбор по марке
	|	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке <> ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)
	|	И НЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыСоглашенийОпоставкеиСпециальныхусловий.ПроектЗаявкиНаСОП)
	|
	|СГРУППИРОВАТЬ ПО
	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.РегиональныйМенеджер,
	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	//rarus kabany 06.04.2021 17596 +++
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПромИтог.РегиональныйМенеджер КАК РегиональныйМенеджер,
	|	ПромИтог.Дилер КАК Дилер,
	|	ПромИтог.СтатусОплачено КАК СтатусОплачено,
	|	ПромИтог.СтатусОплаченоЧастично КАК СтатусОплаченоЧастично,
	|	ПромИтог.СтатусНеОплачено КАК СтатусНеОплачено,
	|	ПромИтог.Количество КАК Количество,
	|	ЕСТЬNULL(ПромИтог.СтатусОплачено, 0) + ЕСТЬNULL(ПромИтог.СтатусОплаченоЧастично, 0) + ЕСТЬNULL(ПромИтог.СтатусНеОплачено, 0) КАК СуммаИтогов
	|ИЗ
	|	ПромИтог КАК ПромИтог
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПромИтог.РегиональныйМенеджер.Наименование,
	|	ПромИтог.Дилер.Наименование
	|ИТОГИ
	|	СУММА(СтатусОплачено),
	|	СУММА(СтатусОплаченоЧастично),
	|	СУММА(СтатусНеОплачено),
	|	СУММА(СуммаИтогов)
	|ПО
	|	РегиональныйМенеджер";
	//rarus kabany 06.04.2021 17596 ---
	
	
	
	//rarus kabany 06.04.2021 17596 +++
	//Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ЗначениеВРеквизитФормы(Дерево, "ДеревоПродуктыПоМенеджерам");
	
	ЭлементыДерева = ДеревоПродуктыПоМенеджерам.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	ВыборкаПервыйУровень = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень = ЭлементыДерева.Добавить();
		Корень.КолонкаГруппировки = ВыборкаПервыйУровень.РегиональныйМенеджер;
		Корень.РегиональныйМенеджер = ВыборкаПервыйУровень.РегиональныйМенеджер; 
		Корень.Итого = ВыборкаПервыйУровень.СуммаИтогов;
		ЭлементыКорня = Корень.ПолучитьЭлементы();
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать();
		Пока ВыборкаВторойУровень.Следующий() Цикл
			НоваяСтрока = ЭлементыКорня.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВторойУровень);
			НоваяСтрока.КолонкаГруппировки = ВыборкаВторойУровень.Дилер;
			НоваяСтрока.Итого = ВыборкаВторойУровень.СуммаИтогов;
		КонецЦикла; 
	КонецЦикла; 
	
	//rarus kabany 06.04.2021 17596 ---	
	Элементы.ДеревоПродуктыПоМенеджерам.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать; //rarus kabany 06.04.2021 17596 +
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --	

&НаКлиенте
Процедура ДеревоПродуктыПоМенеджерамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка = "ЗаказыНаЗавод" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяЭлемента =  Элемент.ТекущийЭлемент.Имя;
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя); 
	Если ИмяЭлемента = "ДеревоПродуктыПоМенеджерамРегиональныйМенеджер" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.РегиональныйМенеджер);
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамДилер" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда 	
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Дилер);
		//rarus kabany 07.04.2021 17596 +
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамКолонкаГруппировки" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.КолонкаГруппировки) Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.КолонкаГруппировки);
	//rarus kabany 07.04.2021 17596 -
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамСтатусОплачено" Тогда
		СписокОплачено = Новый СписокЗначений;
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.Оплачено"));
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику"));
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью"));
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаНеТребуется"));
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.НеТребуется"));//rarus bonmak 26.02.2021 17290
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоПолностью"));
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Договор.СОП_СтатусОплаты", СписокОплачено, ВидСравненияКомпоновкиДанных.ВСписке); 	
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Дилер", Элемент.ТекущиеДанные.Дилер, ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер", Элемент.ТекущиеДанные.РегиональныйМенеджер, ВидСравненияКомпоновкиДанных.Равно);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер",, ВидСравненияКомпоновкиДанных.НеЗаполнено);	
		КонецЕсли;	
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамСтатусОплаченоЧастично" Тогда
		СписокОплаченоЧастично = Новый СписокЗначений;
		СписокОплаченоЧастично.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику"));
		СписокОплаченоЧастично.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично"));
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Договор.СОП_СтатусОплаты", СписокОплаченоЧастично, ВидСравненияКомпоновкиДанных.ВСписке); 	
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Дилер", Элемент.ТекущиеДанные.Дилер, ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер", Элемент.ТекущиеДанные.РегиональныйМенеджер, ВидСравненияКомпоновкиДанных.Равно);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер",, ВидСравненияКомпоновкиДанных.НеЗаполнено);	
		КонецЕсли;
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамСтатусНеоплачено" Тогда
		ОбъектНастройки 	= ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		НоваяГруппаОтбора = ОбъектНастройки.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		НоваяГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		СписокНеОплачено = Новый СписокЗначений;
		СписокНеОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.НеОплачено"));
		СписокНеОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаОтсутствует"));

		НовыйОтбор = НоваяГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заявка.Договор.СОП_СтатусОплаты");
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке; 
		НовыйОтбор.ПравоеЗначение = СписокНеОплачено; 
		
		НовыйОтбор = НоваяГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заявка.Договор");
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Дилер", Элемент.ТекущиеДанные.Дилер, ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер", Элемент.ТекущиеДанные.РегиональныйМенеджер, ВидСравненияКомпоновкиДанных.Равно);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер",, ВидСравненияКомпоновкиДанных.НеЗаполнено);	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

//ЗАКАЗЫ ПО МОДЕЛЯМ
&НаКлиенте
Процедура ЗаказыПоМоделямВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямКолВо" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводРаспределение.Отбор.Элементы.Очистить();
		УстановитьОтборПоМодели(Элемент.ТекущиеДанные.МодельПродукта);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоМодели(Модель)
	ОбъектНастройки = ЗаказыНаЗаводРаспределение.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
	ОбъектНастройки.Очистить();
	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование  = Истина;
	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Модель");
	Если НЕ Модель = "" Тогда
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		НовыйОтбор.ПравоеЗначение = Модель;	
	Иначе
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаказыПоМоделям(Команда)
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 ++
	//Если Не Элементы.ЗаказыПоМоделямГруппа.Видимость Тогда 
	//	Элементы.ЗаказыПоМоделямГруппа.Видимость = Истина;
	//Иначе
	//	Элементы.ЗаказыПоМоделямГруппа.Видимость = Ложь;	
	//КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ИмяГруппыЗаказовПоМоделям = "ЗаказыПоМоделямГруппа";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямСвободные";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямПродажи";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямВсеЗаказы";
	КонецЕсли;	
			
	Элементы[ИмяГруппыЗаказовПоМоделям].Видимость = НЕ Элементы[ИмяГруппыЗаказовПоМоделям].Видимость;
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 --
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();//rarus vikhle 15.02.2021 mt 17220
	
	Элементы.ГруппаОтборРаспределение.Видимость = Ложь;
	Элементы.ГруппаОтборСвободные.Видимость = Ложь;
	Элементы.ГруппаОтборПродажи.Видимость = Ложь;
	Элементы.ГруппаОтборУдаленные.Видимость = Ложь;
	Элементы.ГруппаОтборАрхив.Видимость = Ложь;
	Элементы.ГруппаОтборВсеЗаказы.Видимость = Ложь;
	Элементы.ГруппаОтборРезервSRU.Видимость = Ложь;//rarus vikhle 23.07.2021 mt 17834
	
	КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа;	
		
	ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов();
	ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре(); //rarus agar 29.12.2020 17025 +-
	
	Элементы.ЗаказыПоМоделямГруппа.Видимость = Ложь;
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 ++
	Элементы.ГруппаЗаказыПоМоделямСвободные.Видимость 		  = Ложь;
	Элементы.ГруппаЗаказыПоМоделямПродажи.Видимость 		  = Ложь;
	Элементы.ГруппаЗаказыПоМоделямВсеЗаказы.Видимость 		  = Ложь;
	Элементы.ГруппаПродуктыПоСегментамРаспределение.Видимость =	Ложь; //rarus bonmak 16459 07.12.2020
	Элементы.ГруппаПродуктыПоМенеджерамПродажи.Видимость 	  = Ложь; //rarus bonmak 16459 07.12.2020
	Элементы.ГруппаOrderBookПродажи.Видимость 	  			  = Ложь; //rarus bonmak 16459 07.12.2020
	Элементы.ГруппаПродуктыПоОтветственным.Видимость		  = Ложь; //rarus vikhle 23.07.2021 mt 17834
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 --
	
	//rarus vikhle 10.02.2021 mt 17220 +++
	Элементы.ГруппаКонтрольныеТочкиРаспределение.Видимость	= Ложь;
	//rarus bonmak 05.03.2021 17385 ++
	//Элементы.ГруппаКонтрольныеТочкиСвободные.Видимость		= Ложь;
	Элементы.ГруппаКонтрольныеТочкиВсеЗаказы.Видимость		= Ложь;
	//rarus bonmak 05.03.2021 17385 --
	//rarus vikhle 10.02.2021 mt 17220 ---
	
	//rarus bonmak 16459 07.12.2020 ++
	ЗаполнитьДеревоСегментыРаспределение();
	ЗаполнитьДеревоПродуктыПоМенеджерам();
	ЗаполнитьДеревоOrderBook();
	//rarus bonmak 16459 07.12.2020 --
	ЗаполнитьДеревоПродуктыПоМенеджерам();//rarus vikhle 26.07.2021 mt 17834
	ОбновитьДеревоПродуктыПоОтветственнымНаСервере();//rarus vikhle 12.08.2021 mt 17834
	
	ТумблерПоиск = "0";
	ЛокальныйСтатусУдаленные = Справочники.Scan_ЛокальныеСтатусыПродуктов.NEW; //rarus vikhle 12.03.2021 mt 17340
	
	//rarus vikhle 09.06.2020 mt 15702 +++
	ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРаспределение, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободные, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводПродажи, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводУдаленные, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводАрхив, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеЗаказы, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));//rarus vikhle 23.07.2021 mt 17834
	//rarus vikhle 09.06.2020 mt 15702 ---
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ОтветственныйЗаРезерв", Пользователи.ТекущийПользователь(), ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));//rarus vikhle 23.07.2021 mt 17834
	
	// rarus tenkam 24.08.2020 mantis 16422 +++
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводУдаленные.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводАрхив.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	// rarus tenkam 24.08.2020 mantis 16422 ---
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); //rarus vikhle 23.07.2021 mt 17834
	
	//rarus agar 31.08.2020 15696 ++
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводУдаленные.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводАрхив.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	Надстройки.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);//rarus vikhle 23.07.2021 mt 17834
	//rarus agar 31.08.2020 15696 --
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 09.06.2021 17891 + // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата() 
	//rarus vikhle 13.11.2020 mt 16181 +++
	МассивСтатусов = Новый Массив;
	//МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП);//rarus vikhle 25.01.2021 mt 16929
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	СпециальныеУсловия.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов);
	
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов);	// rarus tenkam 15.03.2021 mantis 17406 +
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов);	// rarus tenkam 16.03.2021 mantis 17406 +
	
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ИспользоватьДопУсловия",Истина); //rarus vikhle 07.05.2021 m 17761
	
	Поля = Новый Массив;
	Поля.Добавить("ТипЗаказа");
	ЗаказыНаЗаводПродажи.УстановитьОграниченияИспользованияВГруппировке(Поля);
	ЗаказыНаЗаводПродажи.УстановитьОграниченияИспользованияВОтборе(Поля);
	ЗаказыНаЗаводПродажи.УстановитьОграниченияИспользованияВПорядке(Поля);
	//rarus vikhle 13.11.2020 mt 16181 ---
	
	ЛокальныйСтатусРезервSRU = Справочники.Scan_ЛокальныеСтатусыПродуктов.OPEN; //rarus vikhle 23.07.2021 mt 17834
	
	ЗаполнитьКонтрольныеТочки();//rarus vikhle 10.02.2021 mt 17220
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	
	мВыбраныСсылкиРаспределение = Новый Массив;
	мВыбраныСсылкиСвободные = Новый Массив;
	мВыбраныСсылкиВсеЗаказы = Новый Массив; //rarus bonmak 05.03.2021 17385
	//rarus agar 18.08.2020 16138 ++
	мВыбраныСсылкиПродажи = Новый Массив;
	//rarus agar 18.08.2020 16138 --
	мВыбраныСсылкиУдаленные = Новый Массив; //rarus vikhle 12.03.2021 mt 17340 +++
	мВыбраныСсылкиРезервSRU = Новый Массив; //rarus vikhle 23.07.2021 mt 17834
	
	ЗаполнитьМассивИменСтраниц();
		
	мКритерииПоискаПоКоридору = ПолучитьМассивКритериевПоиска(); 
	Элементы.ПолеОтбораПоПериодуРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуСвободные.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуПродажи.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуУдаленные.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуАрхив.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуВсеЗаказы.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуРезервSRU.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);//rarus vikhle 06.08.2021 mt 17834

	
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы); //rarus bonmak 05.03.2021 17385
	//rarus agar 18.08.2020 16138 ++
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
	//rarus agar 18.08.2020 16138 --
	ЗаказыНаЗаводУдаленные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиУдаленные);//rarus vikhle 12.03.2021 mt 17340 +++
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиРезервSRU);//rarus vikhle 23.07.2021 mt 17834
	
	КоличествоСтрокРаспределение = РассчитатьКоличествоСтрок(Элементы.Страницы.ТекущаяСтраница.Имя);
	Элементы.ЗаказыНаЗаводРаспределениеКолВо.Заголовок = "Количество продуктов:" + КоличествоСтрокРаспределение;//rarus vikhle 26.05.2020 mt 15702
		
	УправлениеДиалогом();
	
КонецПроцедуры

//ФЛАГИ
&НаКлиенте
Процедура ЗаказыНаЗаводРаспределениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "ЗаказыНаЗаводРаспределениеФлаг" Тогда
		//rarus vikhle 28.05.2020 mt 15702 +++
		ПродуктСсылка = ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока); 
		мИндекс = мВыбраныСсылкиРаспределение.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиРаспределение.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиРаспределение.Удалить(мИндекс);
		КонецЕсли;
		//rarus vikhle 28.05.2020 mt 15702 ---
		КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();	
		ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);	
	Иначе
		ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));//rarus vikhle 09.06.2020 mt 15702
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводСвободныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "ЗаказыНаЗаводСвободныеФлаг" Тогда 
		//rarus vikhle 28.05.2020 mt 15702 +++
		ПродуктСсылка = ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока);
		мИндекс = мВыбраныСсылкиСвободные.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиСвободные.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиСвободные.Удалить(мИндекс);
		КонецЕсли;
		//rarus vikhle 28.05.2020 mt 15702 ---
		КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество(); 	
		ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);		
	Иначе
		ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));//rarus vikhle 09.06.2020 mt 15702
	КонецЕсли;
КонецПроцедуры

//rarus vikhle 28.05.2020 mt 15702 +++
&НаКлиенте
Процедура ЗаказыНаЗаводПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));//rarus vikhle 09.06.2020 mt 15702
	
	//rarus agar 18.08.2020 16138 ++
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "ЗаказыНаЗаводПродажиФлаг" Тогда 
		ПродуктСсылка = ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока);
		мИндекс = мВыбраныСсылкиПродажи.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиПродажи.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиПродажи.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество(); 	
		ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
	Иначе
		ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));
	КонецЕсли;
	//rarus agar 18.08.2020 16138 --
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводУдаленныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));//rarus vikhle 09.06.2020 mt 15702
	
	//rarus vikhle 12.03.2021 mt 17340 +++
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "ЗаказыНаЗаводУдаленныеФлаг" Тогда 
		ПродуктСсылка = ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока);
		мИндекс = мВыбраныСсылкиУдаленные.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиУдаленные.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиУдаленные.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхУдаленные = мВыбраныСсылкиУдаленные.Количество(); 	
		ЗаказыНаЗаводУдаленные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиУдаленные);
	Иначе
		ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));
	КонецЕсли;
	//rarus vikhle 12.03.2021 mt 17340 ---
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводАрхивВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));//rarus vikhle 09.06.2020 mt 15702
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводВсеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus bonmak 05.03.2021 17385 ++
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "ЗаказыНаЗаводВсеЗаказыФлаг" Тогда 
		//rarus vikhle 28.05.2020 mt 15702 +++
		ПродуктСсылка = ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока);
		мИндекс = мВыбраныСсылкиВсеЗаказы.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиВсеЗаказы.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиВсеЗаказы.Удалить(мИндекс);
		КонецЕсли;
		//rarus vikhle 28.05.2020 mt 15702 ---
		КоличествоВыбранныхВсеЗаказы = мВыбраныСсылкиВсеЗаказы.Количество(); 	
		ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
	// rarus tenkam 12.04.2021 mantis 17519 +++
	ИначеЕсли Поле.Имя = "ЗаказыНаЗаводВсеСОП" Тогда
		ПродуктСсылка = ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"Продукт");
		ЗначениеСсылка = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПродуктСсылка,"СоглашениеОПоставке");
		ПоказатьЗначение(,ЗначениеСсылка);
	ИначеЕсли Поле.Имя = "ЗаказыНаЗаводВсеЗаказыДоговорСОП" Тогда
		ПродуктСсылка = ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"Продукт");
		ЗначениеСсылка = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПродуктСсылка,"СОП");
		ПоказатьЗначение(,ЗначениеСсылка);
	// rarus tenkam 12.04.2021 mantis 17519 ---
	Иначе
		ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));//rarus vikhle 09.06.2020 mt 15702
	КонецЕсли;
	//rarus bonmak 05.03.2021 17385 --
КонецПроцедуры

//rarus vikhle 09.06.2020 mt 15702 +++
&НаСервереБезКонтекста
Функция ПолучитьСсылкуПоСтрокеСписка(СтрокаРС,ИмяПоля = "Продукт")
	Ссылка = СтрокаРС[ИмяПоля];
	Возврат Ссылка;
КонецФункции
//rarus vikhle 09.06.2020 mt 15702 ---


&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ТЗ = СписокВТЗнаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
			Если мВыбраныСсылкиРаспределение.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиРаспределение.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();
			ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
			//rarus agar 18.08.2020 16138 ++
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
			Если мВыбраныСсылкиПродажи.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиПродажи.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество();
			ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
			//rarus agar 18.08.2020 16138 --
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда //rarus bonmak 05.03.2021 17385 ++
			Если мВыбраныСсылкиВсеЗаказы.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиВсеЗаказы.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхВсеЗаказы = мВыбраныСсылкиВсеЗаказы.Количество();
			ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
			//rarus bonmak 05.03.2021 17385 --
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда //rarus vikhle 12.03.2021 mt 17340 
			Если мВыбраныСсылкиСвободные.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиСвободные.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество();
			ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);	
		//rarus vikhle 12.03.2021 mt 17340 +++	
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Удаленные" Тогда 
			Если мВыбраныСсылкиУдаленные.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиУдаленные.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхУдаленные = мВыбраныСсылкиУдаленные.Количество();
			ЗаказыНаЗаводУдаленные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиУдаленные);	
		//rarus vikhle 12.03.2021 mt 17340 ---	
		//rarus vikhle 23.07.2021 mt 17834 +++
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда
			Если мВыбраныСсылкиРезервSRU.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиРезервSRU.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();
			ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);		
		//rarus vikhle 23.07.2021 mt 17834 ---	
	КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция СписокВТЗнаСервере(ИмяСтраницы)
	//ИмяСписка = ?(ИмяСтраницы = "Распределение","ЗаказыНаЗаводРаспределение","ЗаказыНаЗаводСвободные"); //rarus bonmak 05.03.2021 17385 перенес ниже
	
	//rarus agar 18.08.2020 16138 ++
	Если ИмяСтраницы = "Продажи" Тогда
		ИмяСписка = "ЗаказыНаЗаводПродажи";
	ИначеЕсли ИмяСтраницы = "ВсеЗаказы" Тогда //rarus bonmak 05.03.2021 17385 ++
		ИмяСписка = "ЗаказыНаЗаводВсеЗаказы";
	ИначеЕсли ИмяСтраницы = "Распределение" Тогда
		ИмяСписка = "ЗаказыНаЗаводРаспределение";
	ИначеЕсли ИмяСтраницы = "Свободные" Тогда //rarus vikhle 12.03.2021 mt 17340
		ИмяСписка = "ЗаказыНаЗаводСвободные";
		//rarus bonmak 05.03.2021 17385 --
	//rarus vikhle 12.03.2021 mt 17340 +++
	ИначеЕсли ИмяСтраницы = "Удаленные" Тогда
		ИмяСписка = "ЗаказыНаЗаводУдаленные";	
	//rarus vikhle 12.03.2021 mt 17340 ---
	//rarus vikhle 23.07.2021 mt 17834 +++
	ИначеЕсли ИмяСтраницы = "РезервSRU" Тогда
		ИмяСписка = "ЗаказыНаЗаводРезервSRU";
	//rarus vikhle 23.07.2021 mt 17834 ---
	КонецЕсли;
	//rarus agar 18.08.2020 16138 --
	
	//rarus BProg_Dekin 05.03.2020 mantis 0015725 ++ Вынес в общий модуль
	//Схема = Элементы[ИмяСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	//Настройки = Элементы[ИмяСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	//КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	//МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	//
	//ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	//
	//ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	//ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ТаблицаРезультат = ДинамическийСписокВТаблицуЗначений(Элементы[ИмяСписка]);
	//rarus BProg_Dekin 05.03.2020 mantis 0015725 --
	
	КолонкаСсылок = ТаблицаРезультат.ВыгрузитьКолонку("Продукт");//rarus vikhle 25.05.2020 mt 15702
	Возврат КолонкаСсылок;

КонецФункции


&НаКлиенте
Процедура СнятьФлажки(Команда)
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		мВыбраныСсылкиРаспределение.Очистить();
		КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();
		ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	//rarus agar 18.08.2020 16138 ++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
		мВыбраныСсылкиПродажи.Очистить();
		КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество();
		ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
	//rarus agar 18.08.2020 16138 --
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда //rarus bonmak 05.03.2021 17385 ++
		мВыбраныСсылкиВсеЗаказы.Очистить();
		КоличествоВыбранныхВсеЗаказы = мВыбраныСсылкиВсеЗаказы.Количество();
		ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
	//rarus bonmak 05.03.2021 17385 --
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда //rarus vikhle 12.03.2021 17340	
		мВыбраныСсылкиСвободные.Очистить();
		КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество();
		ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);	
	//rarus vikhle 12.03.2021 17340 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Удаленные" Тогда	
		мВыбраныСсылкиУдаленные.Очистить();
		КоличествоВыбранныхУдаленные = мВыбраныСсылкиУдаленные.Количество();
		ЗаказыНаЗаводУдаленные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиУдаленные); 
	//rarus vikhle 12.03.2021 17340 ---
	//rarus vikhle 23.07.2021 mt 17834 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда
		мВыбраныСсылкиРезервSRU.Очистить();
		КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();
		ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);
	//rarus vikhle 23.07.2021 mt 17834 ---
	КонецЕсли;	
КонецПроцедуры

#ОБЛАСТЬ РЕГЛАМЕНТ

//PART PERIOD
&НаКлиенте
Процедура ЗаполнитьPartPeriod(Команда)
	ОткрытьФорму("РегистрСведений.Scan_ИнформацияПоPartPeriod.Форма.ФормаСписка");
КонецПроцедуры

//ЗАГРУЗКА ДАТ
&НаКлиенте
Процедура ЗагрузитьДатуCRD(Команда) 
	Обработчик = Новый ОписаниеОповещения("ЗагрузитьВыбранныйФайлНовый", ЭтотОбъект);	
	ПараметрыКоманды = Новый Структура("ИмяКоманды", Команда.Имя);
	ОткрытьФорму("ОбщаяФорма.Scan_ФормаЗагрузкиФайла",ПараметрыКоманды, ЭтотОбъект,,,,Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьДатуПоступленияИнвойса1С(Команда)
	Обработчик = Новый ОписаниеОповещения("ЗагрузитьВыбранныйФайлНовый", ЭтотОбъект);	
	ПараметрыКоманды = Новый Структура("ИмяКоманды", Команда.Имя);
	ОткрытьФорму("ОбщаяФорма.Scan_ФормаЗагрузкиФайла",ПараметрыКоманды, ЭтотОбъект,,,,Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВыбранныйФайлНовый(ЗначенияВыбранныхПараметров, Параметры) Экспорт 	
	Если ЗначенияВыбранныхПараметров = Неопределено ИЛИ
		ЗначенияВыбранныхПараметров = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Сообщить(Нстр("ru = 'Начата загрузка файла'; en = 'Downloading'")+" "+ТекущаяДата());

	ТекПутьКФайлу = ЗначенияВыбранныхПараметров.ПутьКФайлу;
	#Если НЕ ВебКлиент Тогда
		ТекДанные = Новый ДвоичныеДанные(ТекПутьКФайлу);
		АдресВХранилище = ПоместитьВоВременноеХранилище(ТекДанные);
		ЗначенияВыбранныхПараметров.Вставить("АдресВХранилище", АдресВХранилище);
		ЗагрузитьВыбранныйФайлНовыйФрагмент(ЗначенияВыбранныхПараметров);
	#Иначе
		ПомещаемыеФайлыМассив = Новый Массив;
		ПомещаемыеФайлыМассив.Добавить(Новый ОписаниеПередаваемогоФайла(ТекПутьКФайлу, ""));
		Описание = Новый ОписаниеОповещения("ЗагрузитьВыбранныйФайлНовыйЗавершение", ЭтотОбъект, Новый Структура("ЗначенияВыбранныхПараметров", ЗначенияВыбранныхПараметров));
		НачатьПомещениеФайлов(Описание, ПомещаемыеФайлыМассив, ,Ложь, УникальныйИдентификатор);
	#КонецЕсли

КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьВыбранныйФайлНовыйЗавершение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт 
	
	ЗначенияВыбранныхПараметров = ДополнительныеПараметры.ЗначенияВыбранныхПараметров;
		
	Если ПомещенныеФайлы.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Ошибка при обработке файла'; en = 'Error'"));
	Иначе
		ЗначенияВыбранныхПараметров.Вставить("АдресВХранилище", ПомещенныеФайлы[0].Хранение);
	КонецЕсли;
	
	ЗагрузитьВыбранныйФайлНовыйФрагмент(ЗначенияВыбранныхПараметров);

КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьВыбранныйФайлНовыйФрагмент(Знач ЗначенияВыбранныхПараметров) 	
	ПрочитатьCOMОбъект(ЗначенияВыбранныхПараметров);		
	Сообщить(НСтр("ru = 'Загрузка файла завершена'; en = 'Completed'")+" "+ТекущаяДата());	
КонецПроцедуры 

&наСервере	
Процедура ПрочитатьCOMОбъект(ЗначенияВыбранныхПараметров) 
	Попытка
	    Эксель = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
		
	ВремИмяФайла = КаталогВременныхФайлов() + "FileEXCEL" + Формат(ТекущаяДата(), "ДФ=ddMMyyyyhhmmss") + ".xls";
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ЗначенияВыбранныхПараметров.АдресВХранилище);
	ДвоичныеДанные.Записать(ВремИмяФайла);
	Книга = Эксель.WorkBooks.Open(СокрЛП(ВремИмяФайла)); 	
	Лист = Книга.WorkSheets(1);
	
	Если ЗначенияВыбранныхПараметров.Свойство("ИмяКоманды") И (ЗначенияВыбранныхПараметров.ИмяКоманды = "ЗагрузитьДатуCRD" ИЛИ ЗначенияВыбранныхПараметров.ИмяКоманды = "ЗагрузитьДатуПоступленияИнвойса1С")  Тогда
		МассивИзмеренийКлючевыхДат = Новый Массив;
		
		КолвоСтрокДокумента = Лист.Cells(1,1).SpecialCells(11).Row;; 
		НомерНачальнойСтроки = ЗначенияВыбранныхПараметров.НомерСтроки;
		
		//rarus vikhle 26.05.2020 mt 15693 +++
		Если ЗначенияВыбранныхПараметров.ИмяКоманды = "ЗагрузитьДатуCRD" Тогда
			нКлючеваяДата = ЗначенияВыбранныхПараметров.CRDДата;
			ИзмерениеКлючевойДаты = ЗначенияВыбранныхПараметров.CRDDistributorOrderID;	
		ИначеЕсли ЗначенияВыбранныхПараметров.ИмяКоманды = "ЗагрузитьДатуПоступленияИнвойса1С" Тогда 
			нКлючеваяДата = ЗначенияВыбранныхПараметров.ДатаПоступленияИнвойса1С;	
			ИзмерениеКлючевойДаты = ЗначенияВыбранныхПараметров.НомерШасси;	
		КонецЕсли;	
						
		Для нСтрока = НомерНачальнойСтроки ПО КолвоСтрокДокумента Цикл
			СвязкаИзмерениеДата = Новый Массив(2);
			Если СокрЛП(Лист.Cells(нСтрока,ИзмерениеКлючевойДаты).Text) = "" Тогда
				Прервать;
			КонецЕсли;
			Если СокрЛП(Лист.Cells(нСтрока,нКлючеваяДата).Text) = "" Тогда
				Продолжить;
			КонецЕсли;
			СвязкаИзмерениеДата[0] = СокрЛП(СтрЗаменить(Лист.Cells(нСтрока,ИзмерениеКлючевойДаты).Text,Символы.НПП, ""));
			СвязкаИзмерениеДата[1] = СокрЛП(СтрЗаменить(Лист.Cells(нСтрока,нКлючеваяДата).Text, Символы.НПП, ""));
			МассивИзмеренийКлючевыхДат.Добавить(СвязкаИзмерениеДата);
		КонецЦикла;
		ПрочитатьCOMОбъектЗагрузкаКлючевойДаты(МассивИзмеренийКлючевыхДат, ЗначенияВыбранныхПараметров); 		
		//rarus vikhle 26.05.2020 mt 15693 ---
	КонецЕсли;
	Эксель.Quit();
КонецПроцедуры 

&НаСервере
Процедура ПрочитатьCOMОбъектЗагрузкаКлючевойДаты(МассивИзмеренийКлючевыхДат, ЗначенияВыбранныхПараметров) //rarus vikhle 20.05.2020 mt 15693 изменил название процедуры		
	ТаблицаИзФайла = Новый ТаблицаЗначений;
	ОписаниеСтроки = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(50));
	//rarus vikhle 26.05.2020 mt 15693 +++
	Если ЗначенияВыбранныхПараметров.ИмяКоманды = "ЗагрузитьДатуПоступленияИнвойса1С" Тогда 
		ТаблицаИзФайла.Колонки.Добавить("НомерШасси", ОписаниеСтроки);
		ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ДатаПоступленияИнвойса1С");
	ИначеЕсли ЗначенияВыбранныхПараметров.ИмяКоманды = "ЗагрузитьДатуCRD" Тогда
		ТаблицаИзФайла.Колонки.Добавить("ЗаказНаЗавод", ОписаниеСтроки);
		ТаблицаИзФайла.Колонки.Добавить("ЗаказНаЗаводПоиск", ОписаниеСтроки);
		ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.CRD");
	КонецЕсли;	
	ТаблицаИзФайла.Колонки.Добавить("КлючеваяДата", ОписаниеСтроки); //rarus vikhle 20.05.2020 mt 15693 
	Для нСтрока = 0 ПО МассивИзмеренийКлючевыхДат.Количество()-1 Цикл	
		Если СокрЛП(МассивИзмеренийКлючевыхДат[нСтрока][0]) <> "" Тогда
			НоваяСтрока = ТаблицаИзФайла.Добавить();
			Если ЗначенияВыбранныхПараметров.Свойство("НомерШасси") Тогда
				НоваяСтрока.НомерШасси =  МассивИзмеренийКлючевыхДат[нСтрока][0];
			Иначе
				НоваяСтрока.ЗаказНаЗаводПоиск = "%" + МассивИзмеренийКлючевыхДат[нСтрока][0];
				НоваяСтрока.ЗаказНаЗавод = МассивИзмеренийКлючевыхДат[нСтрока][0];
		    КонецЕсли;
			НоваяСтрока.КлючеваяДата = МассивИзмеренийКлючевыхДат[нСтрока][1]; //rarus vikhle 20.05.2020 mt 15693	 
		КонецЕсли;
	КонецЦикла;
	//rarus vikhle 26.05.2020 mt 15693 ---
	ТаблицаЗаказов = ПолучитьЗаказыНаЗавод (ТаблицаИзФайла,ВидКлючевойДаты);
	
	Для Каждого фЗаказ Из ТаблицаЗаказов Цикл
		Если ЗначениеЗаполнено(фЗаказ.Ссылка) Тогда
			ИскомыйЗаказ = фЗаказ.Ссылка;
			ЗначениеКлючевойДаты = Дата(ПреобразоватьДату(фЗаказ.КлючеваяДата)); //rarus vikhle 20.05.2020 mt 15693
			НаДату = ТекущаяДата();
			//rarus bonmak 17.08.2020 14375 ++ перенос ключевой даты в изделие
			Если ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ДатаПоступленияИнвойса1С") Тогда
				ОбъектКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_ОбъектыКлючевыхДат.Изделие");
			Иначе
				ОбъектКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод");
			КонецЕсли;
			//rarus bonmak 17.08.2020 14375 -- перенос ключевой даты в изделие
			//ВидКлючевойДатыCRD = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.CRD"); //rarus vikhle 20.05.2020 mt 15693
			РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(ИскомыйЗаказ, ОбъектКлючевойДаты, ЗначениеКлючевойДаты, ВидКлючевойДаты, НаДату); 	
		Иначе 				
			//rarus vikhle 26.05.2020 mt 15693 +++
			Если ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.CRD") Тогда 
				Сообщить(НСтр("ru = 'Заказ на завод '; en = 'The order to the factory '") + фЗаказ.ЗаказНаЗавод + НСтр("ru = ' не найден в базе'; en = ' not found'"));	  
			Иначе
				//Сообщить(НСтр("ru = 'Заказ на завод продукта с номером шасси '; en = 'The order to the factory with the product number '") + фЗаказ.НомерШасси + НСтр("ru = ' не найден в базе'; en = ' not found'"));	//rarus bonmak 17.08.2020 14375 ++ перенос ключевой даты в изделие
				Сообщить(НСтр("ru = 'Продукт с номером шасси '; en = 'The Product with the product number '") + фЗаказ.НомерШасси + НСтр("ru = ' не найден в базе'; en = ' not found'"));	
			КонецЕсли;
			//rarus vikhle 26.05.2020 mt 15693 ---
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры 

&НаСервере
Функция ПреобразоватьДату (СтараяДата) 
	ДатаБезТочек = СтрЗаменить(СтараяДата,".","");	
	День = Лев(ДатаБезТочек,2);
	Год = "20"+Прав(ДатаБезТочек,2);
	Месяц = Прав(Лев(ДатаБезТочек,4),2);
	НоваяДата = Год+Месяц+День;
	Возврат НоваяДата;
КонецФункции 

&НаСервере
Функция ПолучитьЗаказыНаЗавод (ТаблицаИзФайла, ВидКлючевойДаты) 	
	
	Запрос = Новый Запрос;
	//rarus vikhle 26.05.2020 mt 15693 +++	
	Если ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CRD Тогда  
		Запрос.Текст = "ВЫБРАТЬ
		               |	Список.ЗаказНаЗавод КАК ЗаказНаЗавод,
		               |	Список.ЗаказНаЗаводПоиск КАК ЗаказНаЗаводПоиск,
		               |	Список.КлючеваяДата КАК КлючеваяДата
		               |ПОМЕСТИТЬ врТаб
		               |ИЗ
		               |	&Список КАК Список
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(Scan_ЗаказыНаЗавод.Ссылка, ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)) КАК Ссылка,
		               |	врТаб.ЗаказНаЗавод КАК ЗаказНаЗавод,
		               |	врТаб.ЗаказНаЗавод КАК ЗаказНаЗаводПоиск,
		               |	врТаб.КлючеваяДата КАК КлючеваяДата
		               |ИЗ
		               |	врТаб КАК врТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ЗаказыНаЗавод КАК Scan_ЗаказыНаЗавод
		               |		ПО (Scan_ЗаказыНаЗавод.Наименование ПОДОБНО врТаб.ЗаказНаЗаводПоиск)";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	Список.НомерШасси КАК НомерШасси,
		               |	Список.КлючеваяДата КАК КлючеваяДата
		               |ПОМЕСТИТЬ врТаб
		               |ИЗ
		               |	&Список КАК Список
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	врТаб.КлючеваяДата КАК КлючеваяДата,
					   //rarus bonmak 17.08.2020 14375 ++ перенос ключевой даты в изделие
					   |	ЕСТЬNULL(Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие, ЗНАЧЕНИЕ(Справочник.Scan_Изделия.ПустаяСсылка)) КАК Ссылка,
					   //|	ЕСТЬNULL(Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.ЗаказНаЗавод, ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)) КАК Ссылка,
					   //rarus bonmak 17.08.2020 14375 -- перенос ключевой даты в изделие
					   |	врТаб.НомерШасси КАК НомерШасси
		               |ИЗ
		               |	врТаб КАК врТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних(, ) КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних
		               |		ПО врТаб.НомерШасси = Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие.НомерИзделия";	
	КонецЕсли;	
	Запрос.Параметры.Вставить("Список", ТаблицаИзФайла); 
	//rarus vikhle 26.05.2020 mt 15693 ---
	РезультатЗапроса = Запрос.Выполнить();
		
	Возврат РезультатЗапроса.Выгрузить(); 
КонецФункции 

//СООБЩЕНИЕ
&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(ПриЗапуске=Ложь)
	ТекЯзык = ПользователиИнформационнойБазы.ТекущийПользователь().Язык;
	ТекстДекорации = "";
	
	ПользовательСсылка = Пользователи.ТекущийПользователь();
	Организация = ПользовательСсылка.Организация;
	Если НЕ Организация.Пустая() Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_ПраваИНастройки.Значение КАК Значение,
		               |	Scan_ПраваИНастройки.ПравоНастройка КАК ПравоНастройка
		               |ИЗ
		               |	РегистрСведений.Scan_ПраваИНастройки КАК Scan_ПраваИНастройки
		               |ГДЕ
		               |	Scan_ПраваИНастройки.Объект = &ОрганизацияПользователя
		               |	И Scan_ПраваИНастройки.ПравоНастройка В(&Настройки)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ПравоНастройка";
			                                                                              
		ТЗНастройки = Новый ТаблицаЗначений;
		ТЗНастройки.Колонки.Добавить("Настройка",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.Scan_ПраваИНастройки"));
		НоваяСтрокаТЗ = ТЗНастройки.Добавить();
		НоваяСтрокаТЗ.Настройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов;
		НоваяСтрокаТЗ = ТЗНастройки.Добавить();
		НоваяСтрокаТЗ.Настройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng;	
		
		Запрос.УстановитьПараметр("ОрганизацияПользователя",Организация);
		Запрос.УстановитьПараметр("Настройки",ТЗНастройки);
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов Тогда
					ТекстовоеСообщение = Выборка.Значение;
					Если ТекЯзык = Метаданные.Языки.Русский Тогда
						ТекстДекорации = Выборка.Значение;
					КонецЕсли;
				ИначеЕсли Выборка.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng Тогда 	
					ТекстовоеСообщениеАнгл = Выборка.Значение;
					Если ТекЯзык = Метаданные.Языки.Английский Тогда
						ТекстДекорации = Выборка.Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов.Заголовок = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

//rarus agar 29.12.2020 17025 ++
&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре()
	
	ТекстДекорации = "";
	
	ПользовательСсылка = Пользователи.ТекущийПользователь();
	Организация        = ПользовательСсылка.Организация;
	
	Если Не Организация.Пустая() Тогда 
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ОрганизацияПользователя", Организация);
		Запрос.УстановитьПараметр("Настройка",               ПредопределенноеЗначение("ПланВидовХарактеристик.Scan_ПраваИНастройки.ТекстовоеСообщениеПоТекущейПродуктовойСтруктуре"));
		
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ПраваИНастройки.Значение КАК Значение,
		|	Scan_ПраваИНастройки.ПравоНастройка КАК ПравоНастройка
		|ИЗ
		|	РегистрСведений.Scan_ПраваИНастройки КАК Scan_ПраваИНастройки
		|ГДЕ
		|	Scan_ПраваИНастройки.Объект = &ОрганизацияПользователя
		|	И Scan_ПраваИНастройки.ПравоНастройка = &Настройка";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.Следующий() Тогда
				ТекстДекорации = Выборка.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Заголовок = ТекстДекорации;
		ТекстовоеСообщениеПоПродуктовойСтруктуре                    = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 29.12.2020 17025 --

//ИЗМЕНЕНИЕ ИМЕНИ СООБЩЕНИЯ
&НаКлиенте
Процедура ИзменитьТекстСообщения(Команда)
	ИзменитьТекстСообщенияНаСервере(ТекстовоеСообщение);
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекстСообщенияНаСервере(Сообщение,Язык = "Русский")
	
	    МенеджерЗаписиПраваНастройки = РегистрыСведений.Scan_ПраваИНастройки.СоздатьМенеджерЗаписи();
		ПользовательСсылка = Пользователи.ТекущийПользователь();
		МенеджерЗаписиПраваНастройки.Пользователь = ПользовательСсылка;
		Организация = ПользовательСсылка.Организация;  
		Если НЕ Организация.Пустая() Тогда
			МенеджерЗаписиПраваНастройки.Объект = Организация;
			МенеджерЗаписиПраваНастройки.Значение = Сообщение;
			Если Язык = "Русский" Тогда
				МенеджерЗаписиПраваНастройки.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов;
			Иначе
				МенеджерЗаписиПраваНастройки.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng;
			КонецЕсли;	
			МенеджерЗаписиПраваНастройки.Записать();	
			
			МенеджерЗаписиИсторияИзменения=РегистрыСведений.Scan_ИсторияИзмененияПравИНастроек.СоздатьМенеджерЗаписи();
			МенеджерЗаписиИсторияИзменения.Период = ТекущаяДата();
			МенеджерЗаписиИсторияИзменения.Объект = Организация;
			Если Язык = "Русский" Тогда
				МенеджерЗаписиИсторияИзменения.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов;
			Иначе
				МенеджерЗаписиИсторияИзменения.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng;
			КонецЕсли;
			МенеджерЗаписиИсторияИзменения.Значение = Сообщение;
			МенеджерЗаписиИсторияИзменения.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
			МенеджерЗаписиИсторияИзменения.Записать();
			
			Сообщить("Сообщение изменено!");
			ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов();
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТекстСообщенияАнгл(Команда)
	ИзменитьТекстСообщенияНаСервере(ТекстовоеСообщениеАнгл,"Английский");
КонецПроцедуры

//rarus agar 29.12.2020 17025 ++
&НаКлиенте
Процедура ИзменитьТекстСообщенияПоПродуктовойСтруктуре(Команда)
	
	ИзменитьТекстСообщенияПоПродуктовойСтруктуреНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекстСообщенияПоПродуктовойСтруктуреНаСервере()
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	МенеджерЗаписиПраваНастройки = РегистрыСведений.Scan_ПраваИНастройки.СоздатьМенеджерЗаписи();
	МенеджерЗаписиПраваНастройки.Пользователь = ТекущийПользователь;
	
	Организация = ТекущийПользователь.Организация;
	
	Если Не Организация.Пустая() Тогда
		МенеджерЗаписиПраваНастройки.Объект   = Организация;
		МенеджерЗаписиПраваНастройки.Значение = ТекстовоеСообщениеПоПродуктовойСтруктуре;
		МенеджерЗаписиПраваНастройки.ПравоНастройка = ПредопределенноеЗначение("ПланВидовХарактеристик.Scan_ПраваИНастройки.ТекстовоеСообщениеПоТекущейПродуктовойСтруктуре");
		
		Попытка
			МенеджерЗаписиПраваНастройки.Записать();
			Сообщить("Сообщение изменено!");
			
			ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре();
		Исключение
			Сообщить("Не удалось изменить текст сообщения: "+ ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 29.12.2020 17025 --

// rarus agar OFMS 03202001 18.05.2020 ++
&НаКлиенте
Процедура ОбновитьОпцииПродуктов(Команда)
	
	ОткрытьФорму("Справочник.Scan_ОпцииПродуктов.Форма.ФормаСписка");
	
КонецПроцедуры
// rarus agar OFMS 03202001 18.05.2020 --
//rarus bonmak 09.08.2021 16834 ++
//&НаКлиенте
//Процедура ОткрытьОпцииПродуктов(Команда)
//	// Вставить содержимое обработчика.
//КонецПроцедуры
//rarus bonmak 09.08.2021 16834 --
//rarus vikhle 28.10.2020 mt 16328 +++
&НаКлиенте
Процедура ОткрытьDDИнформер(Команда)
	
	ОткрытьФорму("Обработка.Scan_DDИнформер.Форма");
	
КонецПроцедуры
//rarus vikhle 28.10.2020 mt 16328 ---

&НаКлиенте
Процедура ОткрытьОбработчикOI(Команда)
	
	ОткрытьФорму("Обработка.Scan_ОбработчикOI.Форма"); //rarus vikhle 19.03.2021 mt 17479
	
КонецПроцедуры


#КонецОбласти

#Область Отчеты
 
//ОТЧЕТЫ
&НаКлиенте
Процедура ОткрытьOrderIntake(Команда)
	
	ОткрытьФорму("Отчет.Scan_OrderIntake.Форма");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderDeviation(Команда)
	
	ОткрытьФорму("Отчет.Scan_OrderDeviation.Форма.ФормаОтчета");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьDeliveries(Команда)
	
	ОткрытьФорму("Отчет.Scan_DeliveriesReport.Форма.ФормаОтчета");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderBookStatistics(Команда)
	ОткрытьФорму("Отчет.Scan_OrderBookStatistics.Форма");	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderIntakeOrderBook(Команда)
	ОткрытьФорму("Отчет.Scan_OrderIntakeAndOrderBook.Форма");
КонецПроцедуры

//rarus vikhle 26.08.2020 mt 16274 +++
&НаКлиенте
Процедура ОткрытьСписокОтгрузок(Команда)
	ОткрытьФорму("Отчет.Scan_СписокОтгрузок.Форма");
КонецПроцедуры
//rarus vikhle 26.08.2020 mt 16274 ---

//rarus kabany 26.04.2021 17666 +++
&НаКлиенте
Процедура ОткрытьОтчетПлановыеЦеныПродажиШасси(Команда)
	ОткрытьФорму("Отчет.Scan_ОтчетПоПлановымЦенамПродажиШасси.Форма");
КонецПроцедуры
//rarus kabany 26.04.2021 17666 ---

//rarus vikhle 25.05.2020 mt 15702 +++
&НаКлиенте
Процедура ОткрытьCow(Команда)
	ОткрытьФорму("Отчет.Scan_Cow.Форма");
КонецПроцедуры
//rarus vikhle 25.05.2020 mt 15702 ---

&НаКлиенте
Процедура ОткрытьМониторПродаж(Команда) //rarus bonmak 16459 07.12.2020 ++
	ПараметрыОткрытия = Новый Структура("РМОППиУП", Истина);
	ОткрытьФорму("Обработка.Scan_МониторыПродаж.Форма",ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

//rarus ozhnik 17212 04.06.2021 + 
&НаКлиенте
Процедура ОткрытьDD_DDS(Команда)
	ОткрытьФорму("Отчет.Scan_DD_DDS.Форма");
КонецПроцедуры
//rarus ozhnik 17212 04.06.2021 + 

// rarus agar 17758 16.08.2021 ++
&НаКлиенте
Процедура ОткрытьLeadTimeReport(Команда)
	
	ОткрытьФорму("Отчет.Scan_LeadTimeReport.Форма");
	
КонецПроцедуры
// rarus agar 17758 16.08.2021 --

#КонецОбласти 

//РАСЧЕТ КОЛИЧЕСТВА ЗАКАЗОВ
&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	//ОбновитьКоличествоЗаказов(ТекущаяСтраница.Имя); //rarus BProg_Dekin 14.04.2020 mantis 0014870 +-
	//rarus agar 29.12.2020 17025 ++
	Если ТекущаяСтраница = Элементы.Свободные Тогда
		ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре();
	КонецЕсли;
	//rarus agar 29.12.2020 17025 --
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоЗаказов (ТекущаяСтраница, ПовторныйРасчет = Ложь)
	КнопкаКоличество = "ЗаказыНаЗавод" + ТекущаяСтраница + "КолВо";
	
	Если ТекущаяСтраница = "Распределение" И ПовторныйРасчет Тогда
		КоличествоСтрокРаспределение = РассчитатьКоличествоСтрок("Распределение");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокРаспределение;//rarus vikhle 26.05.2020 mt 15702
	ИначеЕсли ТекущаяСтраница = "Свободные" И (КоличествоСтрокСвободные = 0 ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокСвободные = РассчитатьКоличествоСтрок("Свободные");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокСвободные;//rarus vikhle 26.05.2020 mt 15702		
	ИначеЕсли ТекущаяСтраница = "Продажи" И (КоличествоСтрокПродажи = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокПродажи = РассчитатьКоличествоСтрок("Продажи");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокПродажи;//rarus vikhle 26.05.2020 mt 15702 
	ИначеЕсли ТекущаяСтраница = "Удаленные" И (КоличествоСтрокУдаленные = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокУдаленные = РассчитатьКоличествоСтрок("Удаленные");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокУдаленные;//rarus vikhle 26.05.2020 mt 15702 
	ИначеЕсли ТекущаяСтраница = "Архив" И (КоличествоСтрокАрхив = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокАрхив = РассчитатьКоличествоСтрок("Архив");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокАрхив; //rarus vikhle 26.05.2020 mt 15702
	ИначеЕсли ТекущаяСтраница = "ВсеЗаказы" И (КоличествоСтрокВсеЗаказы = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокВсеЗаказы = РассчитатьКоличествоСтрок("ВсеЗаказы");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокВсеЗаказы; //rarus vikhle 26.05.2020 mt 15702
	//rarus vikhle 23.07.2021 mt 17834 +++	
	ИначеЕсли ТекущаяСтраница = "РезервSRU" И (КоличествоСтрокРезервSRU = 0 ИЛИ ПовторныйРасчет) Тогда	
		КоличествоСтрокРезервSRU = РассчитатьКоличествоСтрок("РезервSRU");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокРезервSRU;		
	//rarus vikhle 23.07.2021 mt 17834 ---	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоЗаказовКоманда(Команда)
	ОбновитьКоличествоЗаказов(Элементы.Страницы.ТекущаяСтраница.Имя, Истина);
КонецПроцедуры

&НаСервере
Функция РассчитатьКоличествоСтрок(ТекущаяСтраница)
	
	НазваниеСписка = "ЗаказыНаЗавод" + ТекущаяСтраница;
		
	Схема = Элементы[НазваниеСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы[НазваниеСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаРезультат.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	//rarus bonmak 01.09.2020 16505 ++
	//ТаблицаРезультат.Свернуть("Продукт");
	//НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "Продукт");
	ТаблицаРезультат.Свернуть("ПродуктКоличество");
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "ПродуктКоличество");
	//rarus bonmak 01.09.2020 16505 --
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
КонецФункции

&НаКлиенте
Процедура ЗаказыПоМоделямСвободныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 ++
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводСвободные.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободные, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 --	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоМоделямПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 ++
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямПродажиМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямПродажиКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводПродажи.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводПродажи, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 --
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоМоделямВсеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 ++
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямВсеЗаказыМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямВсеЗаказыКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводВсеЗаказы.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеЗаказы, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	//rarus BProg_Dekin 14.04.2020 mantis 0014870 --
КонецПроцедуры
//rarus bonmak 09.08.2021 16834 ++
//&НаКлиенте
//Процедура ОтображатьТолькоГрузовыеАвтомобили(Команда)	
//	//rarus vikhle 28.05.2020 mt 15702 +++
//	//ОтборПоГрузовымАвтомобилям(); //rarus BProg_Dekin 14.04.2020 mantis 0014870 +- 	
//КонецПроцедуры

//&НаСервере 
//Процедура ОтборПоГрузовымАвтомобилям() //rarus BProg_Dekin 14.04.2020 mantis 0014870 +-
	//rarus vikhle 28.05.2020 mt 15702 +++
	//ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	//
	//Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
	//	ИмяТаблицы 	= "ЗаказыНаЗаводРаспределение";
	//	ИмяКнопки	= "РаспределениеОтображатьТолькоГрузовыеАвтомобили";
	//ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда
	//	ИмяТаблицы 	= "ЗаказыНаЗаводСвободные";
	//	ИмяКнопки	= "СвободныеОтображатьТолькоГрузовыеАвтомобили";
	//ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
	//	ИмяТаблицы 	= "ЗаказыНаЗаводПродажи";
	//	ИмяКнопки	= "ПродажиОтображатьТолькоГрузовыеАвтомобили";
	//ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Удаленные" Тогда
	//	ИмяТаблицы 	= "ЗаказыНаЗаводУдаленные";
	//	ИмяКнопки	= "УдаленныеОтображатьТолькоГрузовыеАвтомобили";
	//ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Архив" Тогда
	//	ИмяТаблицы 	= "ЗаказыНаЗаводАрхив";
	//	ИмяКнопки	= "АрхивОтображатьТолькоГрузовыеАвтомобили";
	//ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
	//	ИмяТаблицы 	= "ЗаказыНаЗаводВсеЗаказы";
	//	ИмяКнопки	= "ВсеЗаказыОтображатьТолькоГрузовыеАвтомобили";
	//КонецЕсли;	
	//
	//Элементы[ИмяКнопки].Пометка = НЕ Элементы[ИмяКнопки].Пометка;
	//Если Элементы[ИмяКнопки].Пометка Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтотОбъект[ИмяТаблицы], "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно);
	//Иначе
	//	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЭтотОбъект[ИмяТаблицы], "ВидПродукта");
	//КонецЕсли;
	//rarus vikhle 28.05.2020 mt 15702 ---
//КонецПроцедуры
//rarus bonmak 09.08.2021 16834 --
//rarus vikhle mt 14870 ---


&НаКлиенте
Процедура ПерейтиВМонитор(Команда)//rarus pechek 26.06.2020 mantis 16235 +++

	МассивВыбранныхСтрок = Элементы.ЗаявкиНаОтгрузку.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		ДатаОтгрузки = ТекущаяДата();
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));                            
		Возврат;
	Иначе
		ДатаОтгрузки = Элементы.ЗаявкиНаОтгрузку.ТекущиеДанные.ДатаОтгрузки;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ДатаОтгрузки", ДатаОтгрузки);
	ОткрытьФорму("Обработка.Scan_МониторБронированияОтгрузок.Форма",ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаявкиНаОтгрузкуПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus pechek 26.06.2020 mantis 16235 +++
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	МассивСсылок = Строки.ПолучитьКлючи();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СтатусыЗаявокНаОтгрузку.Ссылка КАК Ссылка,
	|	Scan_СтатусыЗаявокНаОтгрузку.ЦветФона КАК ЦветФона,
	|	Scan_СтатусыЗаявокНаОтгрузку.ЦветТекста КАК ЦветТекста,
	|	Scan_СтатусыЗаявокНаОтгрузку.Шрифт КАК Шрифт
	|ИЗ
	|	Справочник.Scan_СтатусыЗаявокНаОтгрузку КАК Scan_СтатусыЗаявокНаОтгрузку";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ЗаявкаНаОтгрузку.Ссылка КАК СсылкаДокумент
		|ИЗ
		|	Документ.Scan_ЗаявкаНаОтгрузку КАК Scan_ЗаявкаНаОтгрузку
		|ГДЕ
		|	Scan_ЗаявкаНаОтгрузку.Статус = &Статус
		|	И Scan_ЗаявкаНаОтгрузку.Ссылка В(&МассивСсылок)";
		
		Запрос.УстановитьПараметр("Статус",       Выборка.Ссылка);
		Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаСписка = Строки[ВыборкаДетальныеЗаписи.СсылкаДокумент];
			Для Каждого КолонкаСписка Из СтрокаСписка.Оформление Цикл
				ЦветФона = Выборка.ЦветФона.Получить();
				Если ЦветФона <> ЧерныйЦвет Тогда
					КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
				КонецЕсли;
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветТекста", Выборка.ЦветТекста.Получить());
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("Шрифт",      Выборка.Шрифт.Получить());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

//rarus agar 18.08.2020 16138 ++
&НаСервереБезКонтекста
Процедура УстановитьОформлениеЯчейкиЦветКабины(Строки)
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	Для Каждого СтрокаСписка Из Строки Цикл
		Если Не СтрокаСписка.Значение.Данные.ЦветКабиныПТС.Пустая() Тогда
			ЦветФона = СтрокаСписка.Значение.Данные.ЦветКабиныПТС.ЦветФона.Получить();
			Если ЦветФона <> ЧерныйЦвет И НЕ СтрокаСписка.Значение.Оформление.Получить("ЦветКабины") = Неопределено Тогда //rarus vikhle 12.03.2021 mt 17405 Тогда
				СтрокаСписка.Значение.Оформление["ЦветКабины"].УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводРаспределениеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводСвободныеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводПродажиПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводУдаленныеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводАрхивПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводВсеЗаказыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьТипСпецификацииНаСервере(ВыбранныеПродукты, ТипСпецификации)
	
	ЕстьОшибки = Ложь;
	
	//rarus agar 06.05.2021 17394 ++
	ТипСпецификацииStd = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std");
	//rarus agar 06.05.2021 17394 --
	
	Для Каждого Продукт ИЗ ВыбранныеПродукты Цикл
		ПродуктОбъект = Продукт.ПолучитьОбъект();
		ПродуктОбъект.ТипСпецификации = ТипСпецификации;
		
		//rarus agar 06.05.2021 17394 ++
		Если ПродуктОбъект.ТипСпецификации <> ТипСпецификацииStd Тогда
			ПродуктОбъект.СтандартнаяСпецификация = Неопределено;
		КонецЕсли;
		//rarus agar 06.05.2021 17394 --
		
		Попытка
			ПродуктОбъект.Записать();
		Исключение
			ЕстьОшибки = Истина;
			Сообщить("Не удалось изменить тип спецификации у " + ПродуктОбъект.Наименование + " " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	Если Не ЕстьОшибки Тогда
		Сообщить("Тип спецификации успешно изменен");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТипСпецификацииРаспределение(Команда)
	
	//rarus vikhle 16.02.2021 mt 17209 +++
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьТипСпецификацииПродукта") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение типов спецификации продуктов.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 16.02.2021 mt 17209 ---
	
	Если Не ЗначениеЗаполнено(ТипСпецификацииРаспределение) Тогда
		Сообщить("Не заполнен тип спецификации!");
	ИначеЕсли мВыбраныСсылкиРаспределение.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты!");
	Иначе
		ИзменитьТипСпецификацииНаСервере(мВыбраныСсылкиРаспределение, ТипСпецификацииРаспределение);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТипСпецификацииСвободные(Команда)
	
	//rarus vikhle 16.02.2021 mt 17209 +++
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьТипСпецификацииПродукта") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение типов спецификации продуктов.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 16.02.2021 mt 17209 ---
	
	Если Не ЗначениеЗаполнено(ТипСпецификацииСвободные) Тогда
		Сообщить("Не заполнен тип спецификации!");
	ИначеЕсли мВыбраныСсылкиСвободные.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты!");
	Иначе
		ИзменитьТипСпецификацииНаСервере(мВыбраныСсылкиСвободные, ТипСпецификацииСвободные);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТипСпецификацииПродажи(Команда)
	
	//rarus vikhle 16.02.2021 mt 17209 +++
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьТипСпецификацииПродукта") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение типов спецификации продуктов.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 16.02.2021 mt 17209 ---
	
	Если Не ЗначениеЗаполнено(ТипСпецификацииПродажи) Тогда
		Сообщить("Не заполнен тип спецификации!");
	ИначеЕсли мВыбраныСсылкиПродажи.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты!");
	Иначе
		ИзменитьТипСпецификацииНаСервере(мВыбраныСсылкиПродажи, ТипСпецификацииПродажи);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));
	
КонецПроцедуры
//rarus agar 18.08.2020 16138 --
//rarus bonmak 09.08.2021 16834 ++
//&НаСервереБезКонтекста
//Процедура СоглашенияОПоставкеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	//rarus vikhle 16.11.2020 mt 16181 +++ поле берется из реквизита заявки
	//rarus vikhle 13.11.2020 mt 16181 +++
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ВЫРАЗИТЬ(Scan_СоглашенияОПоставкеСписокПродуктов.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
	//               |	Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.ЗаказНаЗавод КАК ЗаказНаЗавод,
	//               |	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка КАК Заявка
	//               |ПОМЕСТИТЬ ЗаказыПоПродуктам
	//               |ИЗ
	//               |	Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних
	//               |		ПО Scan_СоглашенияОПоставкеСписокПродуктов.Продукт = Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие
	//               |ГДЕ
	//               |	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка В(&Заявки)
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	ЗаказНаЗавод
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЗаказыПоПродуктам.Продукт КАК Продукт,
	//               |	ЗаказыПоПродуктам.ЗаказНаЗавод КАК ЗаказНаЗавод,
	//               |	ЗаказыПоПродуктам.Заявка КАК Заявка,
	//               |	Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК ТипЗаказа
	//               |ИЗ
	//               |	ЗаказыПоПродуктам КАК ЗаказыПоПродуктам
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
	//               |				,
	//               |				Заказ В
	//               |						(ВЫБРАТЬ
	//               |							ЗаказыПоПродуктам.ЗаказНаЗавод КАК ЗаказНаЗавод
	//               |						ИЗ
	//               |							ЗаказыПоПродуктам КАК ЗаказыПоПродуктам)
	//               |					И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
	//               |		ПО ЗаказыПоПродуктам.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
	//               |ИТОГИ
	//               |	ВЫБОР
	//               |		КОГДА КОЛИЧЕСТВО(ТипЗаказа) = КОЛИЧЕСТВО(Продукт)
	//               |				И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТипЗаказа) = 1
	//               |				И НЕ МАКСИМУМ(ТипЗаказа) ЕСТЬ NULL
	//               |			ТОГДА МАКСИМУМ(ТипЗаказа)
	//               |	КОНЕЦ КАК ТипЗаказа
	//               |ПО
	//               |	Заявка";
	//Запрос.УстановитьПараметр("Заявки",Строки.ПолучитьКлючи());
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Пока Выборка.Следующий() Цикл
	//	СтрокаСписка = Строки[Выборка.Заявка];
	//	СтрокаСписка.Данные.ТипЗаказа = Выборка.ТипЗаказа;
	//КонецЦикла;	
	////rarus vikhle 13.11.2020 mt 16181 ---
	//rarus vikhle 16.11.2020 mt 16181 ---
	
//КонецПроцедуры
//rarus bonmak 09.08.2021 16834 --
&НаКлиенте
Процедура СоглашенияОПоставкеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) // rarus tenkam 12.04.2021 mantis 17519 +
	Если Поле.Имя = "СоглашенияОПоставкеНомерСОП" Тогда 
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"Договор"));
	КонецЕсли;
КонецПроцедуры

//Контрольные точки
&НаКлиенте
Процедура КонтрольныеТочки(Команда)
	
	//rarus vikhle 12.02.2021 mt 17220 +++ 
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	Если ТекущаяСтраница = Элементы.Распределение Тогда
		Элементы.ГруппаКонтрольныеТочкиРаспределение.Видимость 		= НЕ Элементы.ГруппаКонтрольныеТочкиРаспределение.Видимость;
		Элементы.ЗаказыНаЗаводРаспределениеКонтрольныеТочки.Пометка = НЕ Элементы.ЗаказыНаЗаводРаспределениеКонтрольныеТочки.Пометка 	
	//rarus bonmak 05.03.2021 17385 ++ 	
	//ИначеЕсли ТекущаяСтраница = Элементы.Свободные Тогда 	
	//	Элементы.ГруппаКонтрольныеТочкиСвободные.Видимость 			= НЕ Элементы.ГруппаКонтрольныеТочкиСвободные.Видимость; 
	//	Элементы.ЗаказыНаЗаводСвободныеКонтрольныеТочки.Пометка 	= НЕ Элементы.ЗаказыНаЗаводСвободныеКонтрольныеТочки.Пометка;
	ИначеЕсли ТекущаяСтраница = Элементы.ВсеЗаказы Тогда 	
		Элементы.ГруппаКонтрольныеТочкиВсеЗаказы.Видимость 			= НЕ Элементы.ГруппаКонтрольныеТочкиВсеЗаказы.Видимость; 
		Элементы.ЗаказыНаЗаводВсеЗаказыКонтрольныеТочки.Пометка 	= НЕ Элементы.ЗаказыНаЗаводВсеЗаказыКонтрольныеТочки.Пометка; 
		//rarus bonmak 05.03.2021 17385 --
	КонецЕсли;	
	//rarus vikhle 12.02.2021 mt 17220 ---
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКонтрольнуюТочку(Команда)
	
	//rarus vikhle 12.02.2021 mt 17220 +++
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	МассивСсылок = Новый Массив;
	Если ТекущаяСтраница = Элементы.Распределение Тогда
		МассивСсылок = мВыбраныСсылкиРаспределение;
		//rarus bonmak 05.03.2021 17385 ++
	//ИначеЕсли ТекущаяСтраница = Элементы.Свободные Тогда 	
	//	МассивСсылок = мВыбраныСсылкиСвободные;
	ИначеЕсли ТекущаяСтраница = Элементы.ВсеЗаказы Тогда 	
		МассивСсылок = мВыбраныСсылкиВсеЗаказы;
		//rarus bonmak 05.03.2021 17385 --
	Иначе
		Возврат;
	КонецЕсли;	
	
	Если МассивСсылок.Количество() <> 0 И ЕстьЗаполненныеКТ() Тогда
		УстановитьЗначенияКонтрольныхТочек(МассивСсылок);
		//rarus vikhle 11.03.2021 mt 17411 +++ перенес в УстановитьЗначенияКТПродолжение
		//Для Каждого СтрокаТаблицы Из КонтрольныеТочки Цикл
		//	СтрокаТаблицы.Значение = Неопределено;
		//	СтрокаТаблицы.Очистить = Ложь;
		//КонецЦикла;	
		//rarus vikhle 11.03.2021 mt 17411 ---
	КонецЕсли;
	//rarus vikhle 12.02.2021 mt 17220 ---
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначенияКонтрольныхТочек(МассивСсылок)
	//rarus vikhle 12.02.2021 mt 17220 +++
	СтруктураКТ = Новый Структура;
	Для Каждого СтрокаКТ Из КонтрольныеТочки Цикл
		Если ЗначениеЗаполнено(СтрокаКТ.Значение) ИЛИ СтрокаКТ.Очистить Тогда
			СтруктураКТ.Вставить(СтрокаКТ.Реквизит, СтрокаКТ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если СтруктураКТ.Свойство("DD2")  
		И (НЕ СтруктураКТ.Свойство("DDDeviation") ИЛИ НЕ ЗначениеЗаполнено(СтруктураКТ.DDDeviation)) Тогда
		СтруктураКТ.Удалить("DD2");
		СтруктураКТ.Удалить("DDDeviation");
		ВывестиСообщениеПол(Нстр("ru = 'При указании даты DD2 необходимо также указать DD deviation. Дата DD2 не была установлена.'"));
	ИначеЕсли СтруктураКТ.Свойство("DDDeviation") И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьDDDeviationВЗаказеНаЗавод") Тогда
		СтруктураКТ.Удалить("DDDeviation");
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на установку DD deviation в заказах на завод.'"));	
		Если СтруктураКТ.Свойство("DD2") Тогда
			СтруктураКТ.Удалить("DD2");
		КонецЕсли;	
	КонецЕсли;
	
	//rarus vikhle 04.03.2021 mt 17339 +++
	Если СтруктураКТ.Свойство("DDPriority") И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьDDPriorityВЗаказеНаЗавод") Тогда
		СтруктураКТ.Удалить("DDPriority");
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на установку DD priority в заказах на завод.'"));	
	КонецЕсли;	
	//rarus vikhle 04.03.2021 mt 17339 ---	
	
	// rarus vikhle 08.12.2021 m 18500 +++
	Если СтруктураКТ.Свойство("Квота") И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьКвоту") Тогда 
		СтруктураКТ.Удалить("Квота");
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на установку квоты в заказах на завод.'"));
	КонецЕсли;	
	// rarus vikhle 08.12.2021 m 18500 ---
	
	//rarus vikhle 11.03.2021 mt 17411 +++
	Если СтруктураКТ.Свойство("DD") ИЛИ СтруктураКТ.Свойство("DD2") Тогда
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("МассивСсылок",МассивСсылок);
		ДопПараметры.Вставить("СтруктураКТ",СтруктураКТ);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаDDИнформер",ЭтотОбъект,ДопПараметры);
		ПоказатьВопрос(ОписаниеОповещения,Нстр("ru = 'Удалить заказы из DD-информера?'"),РежимДиалогаВопрос.ДаНет);
	Иначе
		УстановитьЗначенияКТПродолжение(МассивСсылок,СтруктураКТ);	
	КонецЕсли;
	
	//ЗаписатьКТПоСтруктуре(МассивСсылок, СтруктураКТ);	
	//
	//ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	//Если ТекущаяСтраница = Элементы.Распределение Тогда
	//	мВыбраныСсылкиРаспределение.Очистить();	
	//	КоличествоВыбранныхРаспределение = 0;
	//	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиРаспределение);
	//	Элементы.ЗаказыНаЗаводРаспределение.Обновить();
	////rarus bonmak 05.03.2021 17385 ++	
	////ИначеЕсли ТекущаяСтраница = Элементы.Свободные Тогда 
	////	мВыбраныСсылкиСвободные.Очистить();	
	////	КоличествоВыбранныхСвободные = 0;
	////	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиСвободные);
	////	Элементы.ЗаказыНаЗаводСвободные.Обновить();
	//ИначеЕсли ТекущаяСтраница = Элементы.ВсеЗаказы Тогда 
	//	мВыбраныСсылкиВсеЗаказы.Очистить();	
	//	КоличествоВыбранныхВсеЗаказы = 0;
	//	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиВсеЗаказы);
	//	Элементы.ЗаказыНаЗаводВсеЗаказы.Обновить();
	//	//rarus bonmak 05.03.2021 17385 --
	//КонецЕсли;	
	//rarus vikhle 12.02.2021 mt 17220 ---
	//rarus vikhle 11.03.2021 mt 17411 ---
	
КонецПроцедуры	

//rarus vikhle 11.03.2021 mt 17411 +++
&НаКлиенте
Процедура УстановитьЗначенияКТПродолжение(МассивСсылок, СтруктураКТ,УдалитьИзDDИнформера = Ложь)
	ЗаписатьКТПоСтруктуре(МассивСсылок, СтруктураКТ,УдалитьИзDDИнформера);	
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	Если ТекущаяСтраница = Элементы.Распределение Тогда
		мВыбраныСсылкиРаспределение.Очистить();	
		КоличествоВыбранныхРаспределение = 0;
		ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиРаспределение);
		Элементы.ЗаказыНаЗаводРаспределение.Обновить();
	ИначеЕсли ТекущаяСтраница = Элементы.ВсеЗаказы Тогда 
		мВыбраныСсылкиВсеЗаказы.Очистить();	
		КоличествоВыбранныхВсеЗаказы = 0;
		ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиВсеЗаказы);
		Элементы.ЗаказыНаЗаводВсеЗаказы.Обновить();
	КонецЕсли;
	Для Каждого СтрокаТаблицы Из КонтрольныеТочки Цикл
		СтрокаТаблицы.Значение = Неопределено;
		СтрокаТаблицы.Очистить = Ложь;
	КонецЦикла;
КонецПроцедуры	

&НаКлиенте
Процедура ПослеВопросаDDИнформер(Результат, ДопПараметры) Экспорт
	
	УдалитьИзDDИнформера = Результат = КодВозвратаДиалога.Да;
	УстановитьЗначенияКТПродолжение(ДопПараметры.МассивСсылок,ДопПараметры.СтруктураКТ,УдалитьИзDDИнформера);
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УдалитьЗаказИзDDИнформера(ЗаказНаЗавод)
	
	РегистрыСведений.Scan_ОчередьDDИнформера.УдалитьЗаписьПоЗаказу(ЗаказНаЗавод);	
	
КонецПроцедуры
//rarus vikhle 11.03.2021 mt 17411 ---

&НаСервереБезКонтекста
Процедура ЗаписатьКТПоСтруктуре(МассивСсылок, СтруктураКТ,УдалитьИзDDИнформера = Ложь)
	
	//rarus vikhle 15.02.2021 mt 17220 +++	
	Для Каждого СтрокаПродукта Из МассивСсылок Цикл 
		Для Каждого СтрокаКТ Из СтруктураКТ Цикл
			ЗаписатьКТНаСервере(СтрокаКТ.Ключ, СтрокаКТ.Значение, СтрокаПродукта,УдалитьИзDDИнформера); 
		КонецЦикла;
	КонецЦикла;
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ЗаписатьКТНаСервере(ТекРеквизит, ЗначениеРеквизита, ПродуктСсылка,УдалитьИзDDИнформера)
	
	//rarus vikhle 15.02.2021 mt 17220 +++
	НайденнаяКТ = Справочники.Scan_КонтрольныеТочкиБизнесПроцессов.НайтиПоРеквизиту("РеквизитОбъекта", ТекРеквизит);
	Если ЗначениеЗаполнено(НайденнаяКТ) Тогда
		ОбъектМетаданных = НайденнаяКТ.ОбъектМетаданных;
	Иначе	
		Возврат;
	КонецЕсли;
	
	ЗаказСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПродуктСсылка,"ЗаказНаЗавод");
	Если НЕ ЗначениеЗаполнено(ЗаказСсылка) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 не заполнен заказ на завод. Установка контрольных точек не выполнена.'"),,,,,ПродуктСсылка);
		Возврат;
	КонецЕсли;
	
	Если ОбъектМетаданных = "Scan_КлючевыеДатыРегистрСведений" Тогда
		ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты[ТекРеквизит];
		РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(ЗаказСсылка,ВидКлючевойДаты,ЗначениеРеквизита);
		//rarus vikhle 11.03.2021 mt 17411 +++
		Если УдалитьИзDDИнформера 
			И (ТекРеквизит = "DD" ИЛИ ТекРеквизит = "DD2") Тогда
			УдалитьЗаказИзDDИнформера(ЗаказСсылка);
		КонецЕсли;	
		//rarus vikhle 11.03.2021 mt 17411 ---
	ИначеЕсли ОбъектМетаданных = "Scan_ЗаказыНаЗавод" Тогда 	
		ЗаказОбъект = ЗаказСсылка.ПолучитьОбъект();
		ЗаказОбъект[ТекРеквизит] = ЗначениеРеквизита;
		Если ЗаказОбъект.Модифицированность() Тогда
			Попытка
				ЗаказОбъект.Записать();
			Исключение
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Произошла ошибка при записи заказа %1 : %2'"),Строка(ЗаказСсылка),ОписаниеОшибки());
				ВывестиСообщениеПол(ТекстОшибки);
				ЗаписьЖурналаРегистрации(Нстр("ru = 'Запись заказа на завод'"),УровеньЖурналаРегистрации.Ошибка,,ЗаказСсылка,ТекстОшибки);
			КонецПопытки;	
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецПроцедуры	

&НаКлиенте
Функция ЕстьЗаполненныеКТ()
	
	//rarus vikhle 12.02.2021 mt 17220 +++	
	ЕстьЗаполненные = Ложь;
	Для Каждого СтрокаКТ Из КонтрольныеТочки Цикл
		Если ЗначениеЗаполнено(СтрокаКТ.Значение) ИЛИ СтрокаКТ.Очистить Тогда 
			ЕстьЗаполненные = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ЕстьЗаполненные;	
	//rarus vikhle 12.02.2021 mt 17220 ---
	
КонецФункции

&НаКлиенте
Процедура КонтрольныеТочкиРаспределениеПередНачаломИзменения(Элемент, Отказ)
	
	КонтрольныеТочкиПередНачаломИзменения(Элемент, Отказ);//rarus vikhle 15.02.2021 mt 17220
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиВсеЗаказыПередНачаломИзменения(Элемент, Отказ)
	
	КонтрольныеТочкиПередНачаломИзменения(Элемент, Отказ);//rarus vikhle 15.02.2021 mt 17220
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипКТ(КонтрольнаяТочка)
	
	//rarus vikhle 15.02.2021 mt 17220 +++
	Если КонтрольнаяТочка.ОбъектМетаданных = "Scan_ЗаказыНаЗавод" Тогда
		РеквизитыСправочника = Метаданные.НайтиПоПолномуИмени("Справочник.Scan_ЗаказыНаЗавод").Реквизиты;
		РеквизитКарточки = РеквизитыСправочника.Найти(КонтрольнаяТочка.РеквизитОбъекта);
	ИначеЕсли КонтрольнаяТочка.ОбъектМетаданных = "Scan_КлючевыеДатыРегистрСведений" Тогда
		РеквизитКарточки = Метаданные.РегистрыСведений.Scan_КлючевыеДатыПроцессов.Ресурсы.Значение;
	КонецЕсли;
	Возврат РеквизитКарточки.Тип;
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецФункции

&НаКлиенте
Процедура КонтрольныеТочкиРаспределениеОчиститьПриИзменении(Элемент)
	
	КонтрольныеТочкиОчиститьПриИзменении()//rarus vikhle 15.02.2021 mt 17220
		
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиВсеЗаказыОчиститьПриИзменении(Элемент)
	
	КонтрольныеТочкиОчиститьПриИзменении()//rarus vikhle 15.02.2021 mt 17220
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиОчиститьПриИзменении()
	
	//rarus vikhle 15.02.2021 mt 17220 +++
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяТаблицы = "КонтрольныеТочки" + ИмяСтраницы;
	ТекДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	Если ТекДанные.Очистить Тогда
		ТипКонтрольнойТочки = ПолучитьТипКТ(ТекДанные.КонтрольнаяТочка);
		ТекДанные.Значение = ТипКонтрольнойТочки.ПривестиЗначение();
	КонецЕсли;
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецПроцедуры	

&НаКлиенте
Процедура КонтрольныеТочкиПередНачаломИзменения(Элемент, Отказ)
	
	//rarus vikhle 15.02.2021 mt 17220 +++
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяТаблицы = "КонтрольныеТочки" + ИмяСтраницы;
	ИмяКолонкиЗначения = ИмяТаблицы + "Значение";
	
	ТипКонтрольнойТочки = ПолучитьТипКТ(Элементы[ИмяТаблицы].ТекущиеДанные.КонтрольнаяТочка);
	
	Элемент.ПодчиненныеЭлементы[ИмяКолонкиЗначения].ВыбиратьТип = Ложь;
	Элемент.ПодчиненныеЭлементы[ИмяКолонкиЗначения].ОграничениеТипа = ТипКонтрольнойТочки;	
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецПроцедуры

//rarus agar 06.04.2021 17394 ++
&НаКлиенте
Процедура ИзменитьСтандартнуюСпецификациюРаспределение(Команда)
	
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьТипСпецификацииПродукта") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение типов спецификации продуктов.'"));
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтандартнаяСпецификацияРаспределение) Тогда
		Сообщить("Не заполнена стандартная спецификация!");
	ИначеЕсли мВыбраныСсылкиРаспределение.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты!");
	Иначе
		ИзменитьСтандартнуюСпецификациюНаСервере(мВыбраныСсылкиРаспределение, СтандартнаяСпецификацияРаспределение);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтандартнуюСпецификациюСвободные(Команда)
	
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьТипСпецификацииПродукта") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение типов спецификации продуктов.'"));
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтандартнаяСпецификацияСвободные) Тогда
		Сообщить("Не заполнена стандартная спецификация!");
	ИначеЕсли мВыбраныСсылкиСвободные.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты!");
	Иначе
		ИзменитьСтандартнуюСпецификациюНаСервере(мВыбраныСсылкиСвободные, СтандартнаяСпецификацияСвободные);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтандартнуюСпецификациюПродажи(Команда)
	
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьРедактироватьТипСпецификацииПродукта") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение типов спецификации продуктов.'"));
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтандартнаяСпецификацияПродажи) Тогда
		Сообщить("Не заполнена стандартная спецификация!");
	ИначеЕсли мВыбраныСсылкиПродажи.Количество() = 0 Тогда
		Сообщить("Не выбраны продукты!");
	Иначе
		ИзменитьСтандартнуюСпецификациюНаСервере(мВыбраныСсылкиПродажи, СтандартнаяСпецификацияПродажи);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьСтандартнуюСпецификациюНаСервере(ВыбранныеПродукты, СтандартнаяСпецификация)
	
	ЕстьОшибки = Ложь;
	
	ТипСпецификацииStd = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std");
	
	МодельСТД = СтандартнаяСпецификация.Модель;
	
	Для Каждого Продукт ИЗ ВыбранныеПродукты Цикл
		ПродуктОбъект = Продукт.ПолучитьОбъект();
		
		Если Лев(ПродуктОбъект.МодельПродукта.Наименование, 10) <> Лев(МодельСТД.Наименование, 10) Тогда
			ЕстьОшибки = Истина;
			Сообщить("Не удалось изменить стандартную спецификацию у " + ПродуктОбъект.Наименование + ". Модель продукта не соответствует модели стандартной спецификации.");
			Продолжить;
		КонецЕсли;
		
		Если ПродуктОбъект.ТипСпецификации <> ТипСпецификацииStd Тогда
			//rarus agar 06.05.2021 17394 ++
			//Сообщить("Не удалось изменить стандартную спецификацию у " + ПродуктОбъект.Наименование + ". Тип спецификации продукта не Std.");
			//ЕстьОшибки = Истина;
			//Продолжить;
			ПродуктОбъект.ТипСпецификации = ТипСпецификацииStd;
			//rarus agar 06.05.2021 17394 --
		КонецЕсли;
		
		ПродуктОбъект.СтандартнаяСпецификация = СтандартнаяСпецификация;
		
		Попытка
			ПродуктОбъект.Записать();
		Исключение
			ЕстьОшибки = Истина;
			Сообщить("Не удалось изменить стандартную спецификацию у " + ПродуктОбъект.Наименование + " " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	Если Не ЕстьОшибки Тогда
		Сообщить("Стандартная спецификация успешно изменена");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСпецификацииРаспределениеПриИзменении(Элемент)
	
	Если ТипСпецификацииРаспределение <> ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
		СтандартнаяСпецификацияРаспределение = Неопределено;
	КонецЕсли;
	
	УправлениеДиалогом();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСпецификацииСвободныеПриИзменении(Элемент)
	
	Если ТипСпецификацииСвободные <> ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
		СтандартнаяСпецификацияСвободные = Неопределено;
	КонецЕсли;
	
	УправлениеДиалогом();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСпецификацииПродажиПриИзменении(Элемент)
	
	Если ТипСпецификацииПродажи <> ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
		СтандартнаяСпецификацияПродажи = Неопределено;
	КонецЕсли;
	
	УправлениеДиалогом();
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяСпецификацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	//rarus agar 06.05.2021 17394 ++
	МодельДляОтбора = "          ";
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ВыбранныеСсылки = мВыбраныСсылкиРаспределение;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда
		ВыбранныеСсылки = мВыбраныСсылкиСвободные;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
		ВыбранныеСсылки = мВыбраныСсылкиПродажи;
	КонецЕсли;
	
	ВыбранныеМодели = ПолучитьМоделиВыбранныхСсылок(ВыбранныеСсылки);
	Если ВыбранныеМодели.Количество() = 1 Тогда
		МодельДляОтбора = ВыбранныеМодели[0];
	ИначеЕсли ВыбранныеМодели.Количество() > 1 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нельзя выбирать продукты разных моделей!'"));
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"ПометкаУдаления",
															ВидСравненияКомпоновкиДанных.Равно,
															Ложь, "Пометка на удаление", Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"Статус",
															ВидСравненияКомпоновкиДанных.Равно,
															ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе"), "Статус", Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"Модель.Наименование",
															ВидСравненияКомпоновкиДанных.НачинаетсяС,
															МодельДляОтбора, "Модель", Истина);
	ПараметрыВыбораСТД = Новый Структура;
	ПараметрыВыбораСТД.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	
	ОткрытьФорму("Документ.Scan_СпецификацияСтандартнойМодели.ФормаВыбора", 
					ПараметрыВыбораСТД, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//rarus agar 06.05.2021 17394 --
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяСпецификацияРаспределениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяСпецификацияНачалоВыбора(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяСпецификацияСвободныеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяСпецификацияНачалоВыбора(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяСпецификацияПродажиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяСпецификацияНачалоВыбора(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры
//rarus agar 06.04.2021 17394 --

//rarus agar 06.05.2021 17394 ++
&НаСервереБезКонтекста
Функция ПолучитьМоделиВыбранныхСсылок(ВыбранныеСсылки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Продукты", ВыбранныеСсылки);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПОДСТРОКА(Scan_Изделия.МодельПродукта.Наименование, 1, 10) КАК МодельПродукта
	|ИЗ
	|	Справочник.Scan_Изделия КАК Scan_Изделия
	|ГДЕ
	|	Scan_Изделия.Ссылка В(&Продукты)
	|	И ПОДСТРОКА(Scan_Изделия.МодельПродукта.Наименование, 1, 10) <> """"";
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("МодельПродукта");
	
КонецФункции
//rarus agar 06.05.2021 17394 --

&НаКлиенте
Процедура ПродуктыПоОтветственным(Команда)//rarus vikhle 22.07.2021 mt 17834 +++
	
	Элементы.ГруппаПродуктыПоОтветственным.Видимость				= НЕ Элементы.ГруппаПродуктыПоОтветственным.Видимость;
	Элементы.ЗаказыНаЗаводРезервSRUПродуктыПоОтветственным.Пометка	= НЕ Элементы.ЗаказыНаЗаводРезервSRUПродуктыПоОтветственным.Пометка;
	
КонецПроцедуры //rarus vikhle 22.07.2021 mt 17834 ---

&НаКлиенте
Процедура ОбновитьДеревоПродуктыПоОтветственным(Команда) //rarus vikhle 23.07.2021 mt 17834 +++
	
	ОбновитьДеревоПродуктыПоОтветственнымНаСервере();
		
КонецПроцедуры //rarus vikhle 23.07.2021 mt 17834

&НаСервере
Процедура ОбновитьДеревоПродуктыПоОтветственнымНаСервере() //rarus vikhle 26.07.2021 mt 17834 +++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделийОстатки.Изделие КАК Изделие,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК Местонахождение,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК МестоХранения
	               |ПОМЕСТИТЬ ТекущееМестонахождение
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки КАК Scan_МестонахождениеИзделийОстатки
	               |ГДЕ
	               |	Scan_МестонахождениеИзделийОстатки.КоличествоОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_МестонахождениеИзделийОстатки.Изделие
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Изделие
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ОтветственныйЗаРезерв, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОтветственныйЗаРезерв,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	1 КАК Количество
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТекущееМестонахождение КАК ТекущееМестонахождение
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = ТекущееМестонахождение.Изделие
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	               |	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ТипСоглашенияОПоставке = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСопSRU)
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(Продукт),
	               |	СУММА(Количество)
	               |ПО
	               |	ОтветственныйЗаРезерв";
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();			 
	Запрос.УстановитьПараметр("МассивТиповПродуктовНадстроекИУслуг",МассивТиповПродуктовНадстроекИУслуг);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПервыйУровень = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Дерево = РеквизитФормыВЗначение("ДеревоПродуктыПоОтветственным");
	Дерево.Строки.Очистить();
	
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень 							= Дерево.Строки.Добавить();
		Корень.КолонкаГруппировки		= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.ОтветственныйЗаРезерв 	= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.Количество 				= ВыборкаПервыйУровень.Количество; 
		Корень.ИмяГруппировки 			= "ОтветственныйЗаРезерв"; // используется при выборе в дереве на форме
		
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВторойУровень.Следующий() Цикл
			ДетальныеЗаписи 						= Корень.Строки.Добавить();
			ДетальныеЗаписи.КолонкаГруппировки		= ВыборкаВторойУровень.Продукт; 
			ДетальныеЗаписи.Продукт 				= ВыборкаВторойУровень.Продукт;
			ДетальныеЗаписи.Количество 				= ВыборкаВторойУровень.Количество;
			ДетальныеЗаписи.ОтветственныйЗаРезерв   = ВыборкаВторойУровень.ОтветственныйЗаРезерв;
			ДетальныеЗаписи.ИмяГруппировки 			= "Продукт"; // используется при выборе в дереве на форме
		КонецЦикла;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПродуктыПоОтветственным");
	
КонецПроцедуры //rarus vikhle 26.07.2021 mt 17834 ---

&НаКлиенте
Процедура СоздатьЗаявкуНаСОПSRU(Команда)//rarus vikhle 23.07.2021 mt 17834 +++
	
	ОчиститьСообщения();
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	// Проверка на интерактивно добавленную страницу
	Если ТекущаяСтраница = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов();
	// Установим Ложь у реквизитов, которые не нужно проверять
	ПроверяемыеРеквизиты.МодельПродукта				= Ложь;
	ПроверяемыеРеквизиты.СпецификацияПродукта		= Ложь;
	ПроверяемыеРеквизиты.ТипСпецификации			= Ложь;
	ПроверяемыеРеквизиты.ЛокальныйСтатусПродукта	= Ложь; // rarus vikhle 24.08.2021 mt 17834 можно создавать со статусом OPEN
	ПроверяемыеРеквизиты.СтандартнаяСпецификация	= Ложь; //rarus vikhle 21.09.2021 mt 18298
	МожноСоздатьЗаявку = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(мВыбраныСсылкиРаспределение, ПроверяемыеРеквизиты);
	
	Если НЕ МожноСоздатьЗаявку Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ТипЗаявки",ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ДанныеЗаполнения);
	ПараметрыФормы.Вставить("СписокПродуктов",мВыбраныСсылкиРаспределение);
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияЗаявки", ЭтотОбъект, Элементы.Страницы.ТекущаяСтраница);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",ПараметрыФормы,,,,,Оповещение);
	
			
	СнятьФлажки(Команды.СнятьФлажки);
	
КонецПроцедуры //rarus vikhle 23.07.2021 mt 17834 ---

&НаКлиенте
Процедура СоздатьЗаявкуНаСОП(Команда)
	
	ОчиститьСообщения();
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	// Проверка на интерактивно добавленную страницу
	Если ТекущаяСтраница = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	Если мВыбраныСсылкиРезервSRU.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны продукты'"));
		Возврат;
	КонецЕсли;	
	
	ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов();
	МожноСоздатьЗаявку = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(мВыбраныСсылкиРезервSRU, ПроверяемыеРеквизиты);
		
	Если НЕ МожноСоздатьЗаявку Тогда
		Возврат;
	КонецЕсли;
	
	Основание = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(мВыбраныСсылкиРезервSRU[0], "СоглашениеОПоставке");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокПродуктов",	мВыбраныСсылкиРезервSRU);
	ПараметрыФормы.Вставить("Основание", 		Основание);
	ПараметрыФормы.Вставить("СозданиеЗаявкиИзРМ", Истина); // rarus tenkam 17.08.2021 mantis 17834 + 
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияЗаявки", ЭтотОбъект, ТекущаяСтраница);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",ПараметрыФормы,,,,,Оповещение);
	
	СнятьФлажки(Команды.СнятьФлажки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияЗаявки(Результат, ТекущаяСтраница) Экспорт //rarus vikhle 23.07.2021 mt 17834 +++ 
	
	Если ТекущаяСтраница = Элементы.Распределение Тогда
		Элементы.ЗаказыНаЗаводРаспределение.Обновить();
	ИначеЕсли ТекущаяСтраница = Элементы.РезервSRU Тогда
		Элементы.ЗаказыНаЗаводРезервSRU.Обновить();
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 23.07.2021 mt 17834 ---

&НаКлиенте
Процедура ТумблерПоискРезервSRUПриИзменении(Элемент)
	
	УправлениеДиалогом();
		
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуРезервSRUПриИзменении(Элемент)
	
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЛокальныйСтатусРезервSRU(Команда) //rarus vikhle 23.07.2021 mt 17834 +++
	
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьИзменениеСтатусовПродуктов") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение локальных статусов продуктов.'"));
		Возврат;
	КонецЕсли;	
		
	Если ЛокальныйСтатусРезервSRU.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнен статус!'"));
		Возврат;
	ИначеЕсли мВыбраныСсылкиРезервSRU.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны продукты'"));
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = СтрШаблон(Нстр("ru = 'Установить статус %1?'; en = 'Change status to %1?'"),ЛокальныйСтатусРезервSRU);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЛокальныйСтатус",  ЛокальныйСтатусРезервSRU);
	ДополнительныеПараметры.Вставить("ВыбранныеИзделия", мВыбраныСсылкиРезервSRU);
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ИзменитьЛокальныйСтатусЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	
КонецПроцедуры //rarus vikhle 23.07.2021 mt 17834 ---

&НаКлиенте
Процедура ЗаказыНаЗаводРезервSRUВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)//rarus vikhle 23.07.2021 mt 17834 +++
	
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "ЗаказыНаЗаводРезервSRUФлаг" Тогда
		ПродуктСсылка = ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока); 
		мИндекс = мВыбраныСсылкиРезервSRU.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиРезервSRU.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиРезервSRU.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();	
		ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);	
	Иначе
		ПоказатьЗначение(,ПолучитьСсылкуПоСтрокеСписка(ВыбраннаяСтрока,"ЗаказНаЗавод"));
	КонецЕсли;	
		
КонецПроцедуры //rarus vikhle 23.07.2021 mt 17834 ---

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводРезервSRUПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus vikhle 06.08.2021 mt 17834 +++
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ДеревоПродуктыПоОтветственнымВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 06.08.2021 mt 17834 +++
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.ДеревоПродуктыПоОтветственнымКоличество Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "Продукт");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU,
																				"ОтветственныйЗаРезерв",
																				ТекущиеДанные.ОтветственныйЗаРезерв,
																				ВидСравненияКомпоновкиДанных.Равно);
		// Дополнительно накладываем отбор по продукту, если выбор сделан на 2м уровне группировки																		
		Если ТекущиеДанные.ИмяГруппировки = "Продукт" Тогда  	
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU,
																					"Продукт",
																					ТекущиеДанные.Продукт,
																					ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---


