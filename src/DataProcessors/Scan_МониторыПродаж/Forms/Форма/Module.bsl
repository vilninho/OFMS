
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	Если Параметры.Свойство("РМОППиУП") Тогда
		Элементы.ГруппаСтраницаПродажаДилеру.Видимость  = Ложь;
		Элементы.ГруппаСтраницаПродажаКлиенту.Видимость = Ложь;
		//rarus agar 01.02.2021 17178 ++
		
		ОбновитьСтраницуRGDeliveries();
	ИначеЕсли Параметры.Свойство("РМОКП") Тогда
		Элементы.ГруппаСтраницаSRGDeliveries.Видимость = Ложь;
		
		ОбновитьСтраницуПродажиДилеру();
		ОбновитьСтраницуПродажиКлиенту();
	// rarus tenkam 19.05.2021 mantis 17664 +++
	ИначеЕсли Параметры.Свойство("ОткрытьБезПродажиКлиенту") Тогда
		Элементы.ГруппаСтраницаПродажаКлиенту.Видимость = Ложь;
		ОбновитьСтраницуRGDeliveries();
	// rarus tenkam 19.05.2021 mantis 17664 ---
	Иначе	
		ОбновитьСтраницуRGDeliveries();
	КонецЕсли;
	//ОбновитьСтраницуRGDeliveries();
	//rarus agar 01.02.2021 17178 --
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

#Область SRG_Deliveries
//При изменении запроса требуется корректировка:
//1. Динамического списка
//2. Дерево периода
//3. Таблица периода

&НаСервере
Процедура ОбновитьСтраницуRGDeliveries() //rarus bonmak 16459 07.12.2020 ++
	СписокЭлемента = "SRGСписокПродажи";
	ТекДата 					= ТекущаяДата();
	ПериодНачалоМесяцаГодаВыб 	= НачалоМесяца(ТекДата);
	УстановитьОтборы(СписокЭлемента);
	ОбновитьSRGСписокПродажи();	
	КомандаSRGДеревоПериодКнопкаОбновитьНаСервере();
	КомандаSRGТаблицаПериодОбновить();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ОбновитьSRGСписокПродажи() //rarus bonmak 16459 07.12.2020 ++	
	ПериодНачало = НачалоМесяца(ПериодНачалоМесяцаГодаВыб);
	ПериодКонец  = КонецМесяца(ПериодНачалоМесяцаГодаВыб);
	ОбновитьСписокПродажиОбщий("SRGСписокПродажи", ПериодНачало, ПериодКонец);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура СоздатьТаблицуКалендарь(КросТаблица) //rarus bonmak 16459 07.12.2020 ++
	//Очистим таблицу
	ТЗ_Форма = РеквизитФормыВЗначение("SRGТаблицаПериод");
	Для Каждого Колонка Из ТЗ_Форма.Колонки Цикл
		Если Колонка.Имя = "Дилер" Тогда
			Продолжить;
		КонецЕсли;
		Элементы.Удалить(Элементы[Колонка.Имя]);
	КонецЦикла;
	
	ЭлементФормы = Элементы.Найти("SRGТаблицаПериод");
	
	Если ЭлементФормы <> Неопределено Тогда
		МассивУдаляемыхРеквизитов = Новый Массив;		
		Для Каждого Колонка Из ТЗ_Форма.Колонки Цикл
			Если Колонка.Имя = "Дилер" Тогда
				Продолжить;
			КонецЕсли;
			МассивУдаляемыхРеквизитов.Добавить("SRGТаблицаПериод." + Колонка.Имя);
		КонецЦикла;		
		ЭтаФорма.ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);        		
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	КросТаблица.Колонки.Добавить("ОбщийИтог");
	ТЗИсход = КомандаSRGТаблицаПериодНаСервере();
	ТЗИсход.Свернуть("Дилер", "Итого");
	ИтогSSG = 0;
	ИтогSRU = 0;
	
	Для Каждого Стр Из ТЗИсход Цикл
		Если Стр.Дилер = "SSG" Тогда
			ИтогSSG = Стр.Итого;
		ИначеЕсли Стр.Дилер = "SRU" Тогда
			ИтогSRU = Стр.Итого;
		КонецЕсли;	
	КонецЦикла;
	
	Для Каждого Стр Из КросТаблица Цикл
		Если Стр.Дилер = "SSG" Тогда
			Стр.ОбщийИтог = ИтогSSG;
		ИначеЕсли Стр.Дилер = "SRU" Тогда
			Стр.ОбщийИтог = ИтогSRU;
		КонецЕсли; 
	КонецЦикла;
	
	Для Каждого Колонка Из КросТаблица.Колонки Цикл
		Если Колонка.Имя = "Дилер" ИЛИ Колонка.Имя = "ОбщийИтог" Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитФормы = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "SRGТаблицаПериод", Колонка.Заголовок); 
		МассивДобавляемыхРеквизитов.Добавить(РеквизитФормы); 
	КонецЦикла;
	РеквизитФормы = Новый РеквизитФормы("ОбщийИтог", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(5, 0)), "SRGТаблицаПериод", "Итого"); 
	МассивДобавляемыхРеквизитов.Добавить(РеквизитФормы);	
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	ТекДатаГод 	 = Формат(Год(ПериодНачалоМесяцаГодаВыб), "ЧГ=");
	ТекДатаМесяц = Месяц(ПериодНачалоМесяцаГодаВыб);
	
	Для Каждого Колонка Из КросТаблица.Колонки Цикл 
		Если Колонка.Имя = "Дилер" ИЛИ Колонка.Имя = "ОбщийИтог" Тогда
			Продолжить;
		КонецЕсли;
		Элемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), Элементы.SRGТаблицаПериод); 
		Элемент.Вид 							= ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным 					= "SRGТаблицаПериод." + Колонка.Имя;
		фИтогПоКолонке 							= КросТаблица.Итог(Колонка.Имя);
		Элемент.ТекстПодвала 					= ?(фИтогПоКолонке = 0, "", фИтогПоКолонке);
		Элемент.ГоризонтальноеПоложение 		= ГоризонтальноеПоложениеЭлемента.Центр;
		Элемент.ГоризонтальноеПоложениеВШапке 	= ГоризонтальноеПоложениеЭлемента.Центр;
		Элемент.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Центр;
		Элемент.Ширина 							= 2;
		фДата 									= Дата(ТекДатаГод, ТекДатаМесяц, Колонка.Заголовок);
		фДеньНедели 							= ДеньНедели(фДата);
		Если фДеньНедели = 6 или фДеньНедели = 7 Тогда
			Элемент.ЦветФонаЗаголовка = Новый Цвет(255, 153, 0);	
		КонецЕсли;				
	КонецЦикла; 
	
	Элемент = Элементы.Добавить("ОбщийИтог", Тип("ПолеФормы"), Элементы.SRGТаблицаПериод); 
	Элемент.Вид 							= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным 					= "SRGТаблицаПериод.ОбщийИтог";
	Элемент.Заголовок 						= "Итого";
	Элемент.ТекстПодвала 					= КросТаблица.Итог("ОбщийИтог");
	Элемент.ГоризонтальноеПоложение 		= ГоризонтальноеПоложениеЭлемента.Центр;
	Элемент.ГоризонтальноеПоложениеВШапке 	= ГоризонтальноеПоложениеЭлемента.Центр;
	Элемент.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Центр;
	Элемент.Ширина 							= 5;
	
	ЗначениеВРеквизитФормы(КросТаблица, "SRGТаблицаПериод");
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура КомандаSRGДеревоПериодКнопкаОбновитьНаСервере() Экспорт //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.Наименование КАК ЗаказНаЗавод,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.НомерДоговора КАК СОП,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.КлиентНакладнаяУТ КАК Клиент,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |	КОНЕЦ КАК Дилер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ПродавецДилера КАК ПродавецДилера,
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод КАК ЗаказНаЗаводСсылка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)) КАК Заявка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	               |						ТОГДА ВЫБОР
	               |								КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |									ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |								ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
	               |							КОНЕЦ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |								ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |							ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	               |					ТОГДА ВЫБОР
	               |							КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |								ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |							ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
	               |						КОНЕЦ
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |							ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |						ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ДатаПродажи,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя КАК ТипТоплива
	               |ПОМЕСТИТЬ ВТПродажи
	               |{ВЫБРАТЬ
	               |	ЗаказНаЗавод,
	               |	DLV,
	               |	Сегмент.*,
	               |	Модель.*,
	               |	НомерШасси,
	               |	СОП,
	               |	Клиент.*,
	               |	Дилер.*,
	               |	ПродавецДилера.*,
	               |	ЗаказНаЗаводСсылка.*,
	               |	ВидПродукта.*,
	               |	Заявка.*,
	               |	БУ,
	               |	Продукт.*,
	               |	ДатаПродажи}
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |{ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.Наименование КАК ЗаказНаЗавод,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов.* КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта.* КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.НомерДоговора КАК СОП,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.КлиентНакладнаяУТ.* КАК Клиент,
	               |	(ВЫБОР
	               |			КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |					ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |				ТОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания
	               |			ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |		КОНЕЦ).* КАК Дилер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ПродавецДилера.* КАК ПродавецДилера,
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.* КАК ЗаказНаЗаводСсылка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта.* КАК ВидПродукта,
	               |	(ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка))).* КАК Заявка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.*,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя.* КАК ТипТоплива}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГОД(ВТПродажи.ДатаПродажи) КАК Год,
	               |	МЕСЯЦ(ВТПродажи.ДатаПродажи) КАК Месяц,
				   //rarus vikhle 10.01.2022 m 18700 +++
				   //|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.НомерШасси) КАК Итого
				   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.Продукт) КАК Итого
				   //rarus vikhle 10.01.2022 m 18700 ---
				   |ИЗ
	               |	ВТПродажи КАК ВТПродажи
	               |ГДЕ
	               |	ВТПродажи.ДатаПродажи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И &ВидПродукта
	               |	И &БУ
	               |	И &Сегмент
	               |	И &ТипТоплива
	               |{ГДЕ
	               |	ВТПродажи.ЗаказНаЗавод,
	               |	ВТПродажи.DLV,
	               |	ВТПродажи.Сегмент.*,
	               |	ВТПродажи.Модель.*,
	               |	ВТПродажи.НомерШасси,
	               |	ВТПродажи.СОП,
	               |	ВТПродажи.Клиент.*,
	               |	ВТПродажи.Дилер.*,
	               |	ВТПродажи.ПродавецДилера.*,
	               |	ВТПродажи.ЗаказНаЗаводСсылка.*,
	               |	ВТПродажи.ВидПродукта.*,
	               |	ВТПродажи.Заявка.*,
	               |	ВТПродажи.БУ,
	               |	ВТПродажи.ДатаПродажи,
	               |	ВТПродажи.ТипТоплива.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ГОД(ВТПродажи.ДатаПродажи),
	               |	МЕСЯЦ(ВТПродажи.ДатаПродажи)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Год УБЫВ,
	               |	Месяц УБЫВ
	               |ИТОГИ
	               |	СУММА(Итого)
	               |ПО
	               |	Год";
	
	ПараметрВидПродукта = Истина;
	ПараметрБУ 			= Истина;
	//rarus vikhle 30.12.2021 m 18700 +++
	ПараметрСегмент		= Истина;
	ПараметрТипТоплива	= Истина;
	//rarus vikhle 30.12.2021 m 18700 ---
	ИмяСписка 			= "SRGСписокПродажи";
	ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива); //rarus vikhle 30.12.2021 m 18700 поменял параметры, добавил новые
	
	Запрос.Параметры.Вставить("ВидПродукта", ПараметрВидПродукта);
	Запрос.Параметры.Вставить("БУ", 		 ПараметрБУ);
	//rarus vikhle 30.12.2021 m 18700 +++
	Запрос.Параметры.Вставить("Сегмент", 	 ПараметрСегмент);
	Запрос.Параметры.Вставить("ТипТоплива",  ПараметрТипТоплива);
	//rarus vikhle 30.12.2021 m 18700 ---
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(Дерево, "SRGДеревоПериод");
	ОбновитьSRGСписокПродажи();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура КомандаSRGДеревоПериодКнопкаОбновить(Команда) //rarus bonmak 16459 07.12.2020 ++
	ОбновитьСтраницуRGDeliveries();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура SRGДеревоПериодВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка 			 = "SRGСписокПродажи";
	ИмяЭлемента			 = Элемент.ТекущийЭлемент.Имя;
	
	// rarus agar 17654 22.04.2021 ++
	//Если ИмяЭлемента = "SRGДеревоПериодГод" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Год) Тогда 
	//	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Год) Тогда
	//		ПериодОтбора = ПолучитьПериодОтбора(Элемент.ТекущиеДанные.Год);
	//		ПериодНачало = НачалоГода(ПериодОтбора);
	//		ПериодКонец  = КонецГода(ПериодОтбора);
	//		ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
	//	КонецЕсли;
	//ИначеЕсли	ИмяЭлемента = "SRGДеревоПериодМесяц" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Месяц)
	//	ИЛИ ИмяЭлемента = "SRGДеревоПериодИтого" Тогда 	
	//	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Месяц) Тогда			
	//		ПериодОтбора = ПолучитьПериодОтбора(Элемент.ТекущиеДанные.Год, Элемент.ТекущиеДанные.Месяц);
	//		ИзменитьПеременнуюПериодНачалоМесяцаГодаВыбНаСервере(ПериодОтбора);			
	//		ПериодНачало = НачалоМесяца(ПериодНачалоМесяцаГодаВыб);
	//		ПериодКонец  = КонецМесяца(ПериодНачалоМесяцаГодаВыб);
	//		ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
	//		
	//		КомандаSRGТаблицаПериодОбновить();
	//	КонецЕсли;
	//КонецЕсли;
	Если ИмяЭлемента = "SRGДеревоПериодИтого" Тогда
		Если     ЗначениеЗаполнено(Элемент.ТекущиеДанные.Год)
			И Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Месяц)
			Тогда
			ПериодОтбора = ПолучитьПериодОтбора(Элемент.ТекущиеДанные.Год);
			ПериодНачало = НачалоГода(ПериодОтбора);
			ПериодКонец  = КонецГода(ПериодОтбора);
			ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
		ИначеЕсли ЗначениеЗаполнено(Элемент.ТекущиеДанные.Год)
			И     ЗначениеЗаполнено(Элемент.ТекущиеДанные.Месяц)
			Тогда
			ПериодОтбора = ПолучитьПериодОтбора(Элемент.ТекущиеДанные.Год, Элемент.ТекущиеДанные.Месяц);
			ИзменитьПеременнуюПериодНачалоМесяцаГодаВыбНаСервере(ПериодОтбора);
			ПериодНачало = НачалоМесяца(ПериодНачалоМесяцаГодаВыб);
			ПериодКонец  = КонецМесяца(ПериодНачалоМесяцаГодаВыб);
			ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
			
			КомандаSRGТаблицаПериодОбновить();
		КонецЕсли;
	КонецЕсли;
	// rarus agar 17654 22.04.2021 --
	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Функция ПолучитьПериодОтбора(Год, Месяц = Неопределено) //rarus bonmak 16459 07.12.2020 ++
	Если Месяц = Неопределено Тогда
		Месяц = 1;
	КонецЕсли;
	ТекущийПериодОтбора = Дата(Год,Месяц,1);
	Возврат ТекущийПериодОтбора; 	
КонецФункции //rarus bonmak 16459 07.12.2020 ++

&НаСервере
Процедура ИзменитьПеременнуюПериодНачалоМесяцаГодаВыбНаСервере(ПериодОтбора) //rarus bonmak 16459 07.12.2020 ++
	ПериодНачалоМесяцаГодаВыб = ПериодОтбора; 
КонецПроцедуры //rarus bonmak 16459 07.12.2020 ++

&НаСервере
Функция КомандаSRGТаблицаПериодНаСервере() //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.Наименование КАК ЗаказНаЗавод,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.НомерДоговора КАК СОП,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.КлиентНакладнаяУТ КАК Клиент,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |	КОНЕЦ КАК Дилер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ПродавецДилера КАК ПродавецДилера,
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод КАК ЗаказНаЗаводСсылка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)) КАК Заявка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	               |						ТОГДА ВЫБОР
	               |								КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |									ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |								ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
	               |							КОНЕЦ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |								ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |							ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	               |					ТОГДА ВЫБОР
	               |							КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |								ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |							ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
	               |						КОНЕЦ
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |							ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |						ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ДатаПродажи,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя КАК ТипТоплива
	               |ПОМЕСТИТЬ ВТПродажи
	               |{ВЫБРАТЬ
	               |	ЗаказНаЗавод,
	               |	DLV,
	               |	Сегмент.*,
	               |	Модель.*,
	               |	НомерШасси,
	               |	СОП,
	               |	Клиент.*,
	               |	Дилер.*,
	               |	ПродавецДилера.*,
	               |	ЗаказНаЗаводСсылка.*,
	               |	ВидПродукта.*,
	               |	Заявка.*,
	               |	БУ,
	               |	Продукт.*,
	               |	ДатаПродажи}
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |{ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.Наименование КАК ЗаказНаЗавод,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов.* КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта.* КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.НомерДоговора КАК СОП,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.КлиентНакладнаяУТ.* КАК Клиент,
	               |	(ВЫБОР
	               |			КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |					ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |				ТОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания
	               |			ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |		КОНЕЦ).* КАК Дилер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ПродавецДилера.* КАК ПродавецДилера,
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.* КАК ЗаказНаЗаводСсылка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта.* КАК ВидПродукта,
	               |	(ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка))).* КАК Заявка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.*}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
				   //rarus vikhle 10.01.2021 m 18700 +++
				   //|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.НомерШасси) КАК Итого,
				   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.Продукт) КАК Итого,
				   //rarus vikhle 10.01.2021 m 18700 ---
				   |	ВЫБОР
	               |		КОГДА ВТПродажи.Дилер.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	               |			ТОГДА ""SSG""
	               |		ИНАЧЕ ""SRU""
	               |	КОНЕЦ КАК Дилер,
	               |	ДЕНЬ(ВТПродажи.ДатаПродажи) КАК ДеньПродажи
	               |ПОМЕСТИТЬ ВТПериод
	               |ИЗ
	               |	ВТПродажи КАК ВТПродажи
	               |ГДЕ
	               |	ВТПродажи.ДатаПродажи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И ВТПродажи.ДатаПродажи <= &КонецПериода
	               |	И ВТПродажи.ДатаПродажи >= &НачалоПериода
	               |	И &ВидПродукта
	               |	И &БУ
	               |	И &Сегмент
	               |	И &ТипТоплива
	               |{ГДЕ
	               |	ВТПродажи.ЗаказНаЗавод,
	               |	ВТПродажи.DLV,
	               |	ВТПродажи.Сегмент.*,
	               |	ВТПродажи.Модель.*,
	               |	ВТПродажи.НомерШасси,
	               |	ВТПродажи.СОП,
	               |	ВТПродажи.Клиент.*,
	               |	ВТПродажи.Дилер.*,
	               |	ВТПродажи.ПродавецДилера.*,
	               |	ВТПродажи.ЗаказНаЗаводСсылка.*,
	               |	ВТПродажи.ВидПродукта.*,
	               |	ВТПродажи.Заявка.*,
	               |	ВТПродажи.БУ,
	               |	ВТПродажи.ДатаПродажи,
	               |	ВТПродажи.ТипТоплива.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА ВТПродажи.Дилер.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	               |			ТОГДА ""SSG""
	               |		ИНАЧЕ ""SRU""
	               |	КОНЕЦ,
	               |	ДЕНЬ(ВТПродажи.ДатаПродажи)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	0 КАК Ключ
	               |ПОМЕСТИТЬ Порядки
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	1
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	2
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	3
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	4
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	5
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	6
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	7
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	8
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	9
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДЕНЬ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), ДЕНЬ, П1.Ключ + П2.Ключ * 10 + П3.Ключ * 100)) КАК День,
	               |	""SSG"" КАК ВидДилераОбщий
	               |ПОМЕСТИТЬ ВТЧислаМесяца
	               |ИЗ
	               |	Порядки КАК П1
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Порядки КАК П2
	               |		ПО (ИСТИНА)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Порядки КАК П3
	               |		ПО (ИСТИНА)
	               |ГДЕ
	               |	П1.Ключ + П2.Ключ * 10 + П3.Ключ * 100 <= РАЗНОСТЬДАТ(&НачалоПериода, &КонецПериода, ДЕНЬ)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ДЕНЬ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), ДЕНЬ, П1.Ключ + П2.Ключ * 10 + П3.Ключ * 100)),
	               |	""SRU""
	               |ИЗ
	               |	Порядки КАК П1
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Порядки КАК П2
	               |		ПО (ИСТИНА)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Порядки КАК П3
	               |		ПО (ИСТИНА)
	               |ГДЕ
	               |	П1.Ключ + П2.Ключ * 10 + П3.Ключ * 100 <= РАЗНОСТЬДАТ(&НачалоПериода, &КонецПериода, ДЕНЬ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТЧислаМесяца.День КАК День,
	               |	СУММА(ВТПериод.Итого) КАК Итого,
	               |	ВТЧислаМесяца.ВидДилераОбщий КАК Дилер
	               |ИЗ
	               |	ВТЧислаМесяца КАК ВТЧислаМесяца
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериод КАК ВТПериод
	               |		ПО ВТЧислаМесяца.День = ВТПериод.ДеньПродажи
	               |			И ВТЧислаМесяца.ВидДилераОбщий = ВТПериод.Дилер
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТЧислаМесяца.День,
	               |	ВТЧислаМесяца.ВидДилераОбщий";
	
	ПараметрВидПродукта = Истина;
	ПараметрБУ 			= Истина;
	//rarus vikhle 30.12.2021 m 18700 +++
	ПараметрСегмент		= Истина;
	ПараметрТипТоплива	= Истина;
	//rarus vikhle 30.12.2021 m 18700 ---
	ИмяСписка 			= "SRGСписокПродажи";
	
	ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива); //rarus vikhle 30.12.2021 m 18700 поменял порядок параметров, добавил новые
	
	фНачалоМесяца = НачалоМесяца(ПериодНачалоМесяцаГодаВыб);
	фКонецМесяца  = КонецМесяца(ПериодНачалоМесяцаГодаВыб);
	
	Запрос.Параметры.Вставить("ВидПродукта", 	ПараметрВидПродукта);
	Запрос.Параметры.Вставить("БУ", 			ПараметрБУ);
	Запрос.Параметры.Вставить("КонецПериода", 	фКонецМесяца);
	Запрос.Параметры.Вставить("НачалоПериода", 	фНачалоМесяца);
	//rarus vikhle 30.12.2021 m 18700 +++
	Запрос.Параметры.Вставить("Сегмент", 		ПараметрСегмент);
	Запрос.Параметры.Вставить("ТипТоплива", 	ПараметрТипТоплива);
	//rarus vikhle 30.12.2021 m 18700 ---
	
	Возврат Запрос.Выполнить().Выгрузить();	
КонецФункции //rarus bonmak 16459 07.12.2020 --

&НаСервере
Функция ТранспорироватьТабличнуюЧастьВКроссТаблицу() //rarus bonmak 16459 07.12.2020 ++
	
	// 1. Рассчитаем необходимое количество колонок в новой таблице значений
	ТаблицаСоответствий = ПолучитьИдентификаторыДанных(
	КомандаSRGТаблицаПериодНаСервере(),        // исходная таблица значений
	"День");                             // поля вертикальной группировки через запятую
	
	ТаблицаСоответствийСлужебная = ТаблицаСоответствий.Скопировать();
	Для Каждого Строка Из ТаблицаСоответствийСлужебная Цикл
		Строка.Заголовок = Строка.День; // заголовок колонки при разворачивании
		Строка.Тип 		 = Новый ОписаниеТипов("Число"); 
	КонецЦикла;
	
	// 2. Получим транспорированную таблицу
	КроссТаблица = ТрансформироватьДанныеВКроссТаблицу(
	КомандаSRGТаблицаПериодНаСервере(),           // исходная таблица значений
	ТаблицаСоответствийСлужебная, // служебная таблица значений
	"Дилер",         // поля горизонтальной группировки через запятую
	"Итого");          // поле, из которого будет подставляться значение
	// на пересечении вертикальных и горизонтальных группировок
	Возврат КроссТаблица;
КонецФункции //rarus bonmak 16459 07.12.2020 --

&НаСервере
Функция ПолучитьИдентификаторыДанных(тДанные, стрПоляВертикальныхГруппировок) Экспорт //rarus bonmak 16459 07.12.2020 ++	
	тИдентификаторыКолонок = тДанные.Скопировать(,стрПоляВертикальныхГруппировок);
	тИдентификаторыКолонок.Свернуть(стрПоляВертикальныхГруппировок);
	
	тИдентификаторыКолонок.Колонки.Добавить("Имя");
	тИдентификаторыКолонок.Колонки.Добавить("Заголовок");
	тИдентификаторыКолонок.Колонки.Добавить("Тип");
	
	Для сч = 1 По тИдентификаторыКолонок.Количество() Цикл
		тИдентификаторыКолонок[сч-1].Имя = "Группировка_" + Формат(сч, "ЧЦ=5; ЧВН=; ЧГ=0");
	КонецЦикла;
	
	Возврат тИдентификаторыКолонок;	
КонецФункции //rarus bonmak 16459 07.12.2020 --										

&НаСервере
Функция ТрансформироватьДанныеВКроссТаблицу(тДанные, тИдентификаторыКолонок, стрГоризонтальныеГруппировки, ИмяКолонкиРесурс) Экспорт //rarus bonmak 16459 07.12.2020 ++	
	тКроссТаблица = тДанные.Скопировать(,стрГоризонтальныеГруппировки);
	тКроссТаблица.Свернуть(стрГоризонтальныеГруппировки);
	
	Для Каждого Строка из тИдентификаторыКолонок Цикл
		тКроссТаблица.Колонки.Добавить(Строка.Имя, Строка.Тип, Строка.Заголовок);
	КонецЦикла;
	
	СтруктураПоискаВертикальныхГруппировок = Новый Структура;
	Для каждого Колонка Из тИдентификаторыКолонок.Колонки Цикл
		Если Колонка.Имя = "Имя" Тогда
			Продолжить;
		ИначеЕсли Колонка.Имя = "Заголовок" Тогда
			Продолжить;
		ИначеЕсли Колонка.Имя = "Тип" Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоискаВертикальныхГруппировок.Вставить(Колонка.Имя);	
	КонецЦикла;
	
	СтруктураПоискаГоризонтальныхГруппировок = Новый Структура(стрГоризонтальныеГруппировки);
	
	Для каждого Строка из тДанные Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаГоризонтальныхГруппировок, Строка);
		НайденныеСтроки = тКроссТаблица.НайтиСтроки(СтруктураПоискаГоризонтальныхГруппировок);
		Если НайденныеСтроки.Количество() Тогда
			СтрокаОтображения = НайденныеСтроки[0];
		Иначе
			СтрокаОтображения = тКроссТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОтображения, СтруктураПоискаГоризонтальныхГруппировок);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаВертикальныхГруппировок, Строка);
		НайденныеСтроки = тИдентификаторыКолонок.НайтиСтроки(СтруктураПоискаВертикальныхГруппировок);
		ИмяКолонкиОтображения = НайденныеСтроки[0].Имя; // найденное значение ВСЕГДА будет. Если нет, то это несоблюдение требований алгоритма. Выдаем программную ошибку
		
		СтрокаОтображения[ИмяКолонкиОтображения] = Строка[ИмяКолонкиРесурс];	
	КонецЦикла;
	
	Возврат тКроссТаблица;	
КонецФункции //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура КомандаSRGТаблицаПериодОбновить() //rarus bonmak 16459 07.12.2020 ++
	КросТаблица  = ТранспорироватьТабличнуюЧастьВКроссТаблицу();
	СоздатьТаблицуКалендарь(КросТаблица);
	ТекДатаГод 	 = Формат(Год(ПериодНачалоМесяцаГодаВыб), "ЧГ=");
	ТекДатаМесяц = Месяц(ПериодНачалоМесяцаГодаВыб);
	
	Элементы.ДекорацияТекущийМесяц.Заголовок = "" + ТекДатаГод + "-" + ТекДатаМесяц;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура SRGСписокПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	ПоказатьЗначение(,Элемент.ТекущиеДанные.ЗаказНаЗаводСсылка);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

#КонецОбласти

#Область ПродажиДилеру
//При изменении запроса требуется корректировка:
//1. Динамического списка
//2. Дерево периода
//3. Дерево собственные
//4. Дерево независимые

&НаСервере
Процедура КомандаПродажиДилеруДеревоПериодОбновитьНаСервере() //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СОП КАК СОП,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.КонечныйКлиент КАК Клиент,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |	КОНЕЦ КАК Дилер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ПродавецДилера КАК ПродавецДилера,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)) КАК Заявка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |	КОНЕЦ КАК ДатаПродажи,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя КАК ТипТоплива
	               |ПОМЕСТИТЬ ВТПродажи
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |{ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта.* КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГОД(ВТПродажи.ДатаПродажи) КАК Год,
				   //rarus vikhle 10.01.2022 m 18700 +++
				   //|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.НомерШасси) КАК Итого,
				   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.Продукт) КАК Итого,
				   //rarus vikhle 10.01.2022 m 18700 ---
	               |	СУММА(ВЫБОР
	               |			КОГДА ВТПродажи.DLV = ""EXW""
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК EXW,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВТПродажи.DLV = ""DDP""
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК DDP
	               |ИЗ
	               |	ВТПродажи КАК ВТПродажи
	               |ГДЕ
	               |	ВТПродажи.ДатаПродажи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И &ВидПродукта
	               |	И &БУ
				   |	И &Сегмент
				   |	И &ТипТоплива
	               |{ГДЕ
	               |	ВТПродажи.DLV,
	               |	ВТПродажи.Сегмент.*,
	               |	ВТПродажи.Модель.*,
	               |	ВТПродажи.НомерШасси,
	               |	ВТПродажи.СОП,
	               |	ВТПродажи.Клиент.*,
	               |	ВТПродажи.Дилер.*,
	               |	ВТПродажи.ПродавецДилера.*,
	               |	ВТПродажи.ВидПродукта.*,
	               |	ВТПродажи.Заявка.*,
	               |	ВТПродажи.БУ,
	               |	ВТПродажи.ДатаПродажи,
	               |	ВТПродажи.ТипТоплива.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ГОД(ВТПродажи.ДатаПродажи)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Год УБЫВ";
	
	ПараметрВидПродукта = Истина;
	ПараметрБУ 			= Истина;
	//rarus vikhle 30.12.2021 m 18700 +++
	ПараметрСегмент		= Истина;
	ПараметрТипТоплива	= Истина;
	//rarus vikhle 30.12.2021 m 18700 ---
	
	ИмяСписка = "ПродажиДилеруСписокПродажи";
	ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива); //rarus vikhle 30.12.2021 m 18700 поменял порядок параметров, добавил новые
	
	Запрос.Параметры.Вставить("ВидПродукта", ПараметрВидПродукта);
	Запрос.Параметры.Вставить("БУ", 		 ПараметрБУ);
	//rarus vikhle 30.12.2021 m 18700 +++
	Запрос.Параметры.Вставить("Сегмент", 	 ПараметрСегмент);
	Запрос.Параметры.Вставить("ТипТоплива",  ПараметрТипТоплива);
	//rarus vikhle 30.12.2021 m 18700 ---
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(Дерево, "ПродажиДилеруДеревоПериод");
	
	ОбновитьПродажиДилеруСписокПродажи();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура КомандаПродажиДилеруДеревоПериодОбновить(Команда) //rarus bonmak 16459 07.12.2020 ++	
	ОбновитьСтраницуПродажиДилеру()
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ОбновитьПродажиДилеруСписокПродажи() //rarus bonmak 16459 07.12.2020 ++
	ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
	ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
	ОбновитьСписокПродажиОбщий("ПродажиДилеруСписокПродажи", ПериодНачало, ПериодКонец);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ОбновитьСтраницуПродажиДилеру() //rarus bonmak 16459 07.12.2020 ++
	СписокЭлемента = "ПродажиДилеруСписокПродажи";
	ТекДата 				  = ТекущаяДата();
	ПериодНачалоМесяцаГодаВыб = НачалоГода(ТекДата);
	УстановитьОтборы(СписокЭлемента);
	ОбновитьПродажиДилеруСписокПродажи();	
	КомандаПродажиДилеруДеревоПериодОбновитьНаСервере();
	ПродажиДилеруОбновитьДеревоНезависимые();
	ПродажиДилеруОбновитьДеревоСобственные();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ПродажиДилеруДеревоПериодВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка 			 = "ПродажиДилеруСписокПродажи";
	ИмяЭлемента 		 =  Элемент.ТекущийЭлемент.Имя;
	
	Если ИмяЭлемента = "ПродажиДилеруДеревоПериодГод" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Год) 
		ИЛИ ИмяЭлемента = "ПродажиДилеруДеревоПериодИтого" Тогда 
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Год) Тогда			
			ПериодОтбора = ПолучитьПериодОтбора(Элемент.ТекущиеДанные.Год);
			ИзменитьПеременнуюПериодНачалоМесяцаГодаВыбНаСервере(ПериодОтбора);						
			ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
			ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
			ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
					
			ПродажиДилеруОбновитьДеревоНезависимые();
			ПродажиДилеруОбновитьДеревоСобственные();
		КонецЕсли;
	ИначеЕсли	ИмяЭлемента = "ПродажиДилеруДеревоПериодEXW" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.EXW) Тогда
		
		ПериодОтбора = ПолучитьПериодОтбора(Элемент.ТекущиеДанные.Год);
		ИзменитьПеременнуюПериодНачалоМесяцаГодаВыбНаСервере(ПериодОтбора);		
		ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
		ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
		ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "DLV", "EXW", ВидСравненияКомпоновкиДанных.Содержит);	
		
		ПродажиДилеруОбновитьДеревоНезависимые("EXW");
		ПродажиДилеруОбновитьДеревоСобственные("EXW");
	ИначеЕсли ИмяЭлемента = "ПродажиДилеруДеревоПериодDDP" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.DDP) Тогда
		ПериодОтбора = ПолучитьПериодОтбора(Элемент.ТекущиеДанные.Год);
		ИзменитьПеременнуюПериодНачалоМесяцаГодаВыбНаСервере(ПериодОтбора);		
		ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
		ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
		ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "DLV", "DDP", ВидСравненияКомпоновкиДанных.Содержит);	
		
		ПродажиДилеруОбновитьДеревоНезависимые("DDP");
		ПродажиДилеруОбновитьДеревоСобственные("DDP");
	КонецЕсли;
	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ПродажиДилеруОбновитьДеревоНезависимые(ОтборDLV = "") //rarus bonmak 16459 07.12.2020 ++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СОП КАК СОП,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.КонечныйКлиент КАК Клиент,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |	КОНЕЦ КАК Дилер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ПродавецДилера КАК ПродавецДилера,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)) КАК Заявка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |	КОНЕЦ КАК ДатаПродажи,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя КАК ТипТоплива
	               |ПОМЕСТИТЬ ВТПродажи
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |{ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта.* КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.НомерШасси) КАК Итого,
	               |	ВТПродажи.Дилер КАК Независимые
	               |ИЗ
	               |	ВТПродажи КАК ВТПродажи
	               |ГДЕ
	               |	ВТПродажи.ДатаПродажи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И &ВидПродукта
	               |	И &БУ
	               |	И &DLV
	               |	И ВТПродажи.Дилер.ВидДилера В (ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Независимый), ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.ПустаяСсылка))
	               |	И ВТПродажи.ДатаПродажи МЕЖДУ &ДатаПродажиНачало И &ДатаПродажиКонец
	               |	И &Сегмент
	               |	И &ТипТоплива
	               |{ГДЕ
	               |	ВТПродажи.DLV,
	               |	ВТПродажи.Сегмент.*,
	               |	ВТПродажи.Модель.*,
	               |	ВТПродажи.НомерШасси,
	               |	ВТПродажи.СОП,
	               |	ВТПродажи.Клиент.*,
	               |	ВТПродажи.Дилер.*,
	               |	ВТПродажи.ПродавецДилера.*,
	               |	ВТПродажи.ВидПродукта.*,
	               |	ВТПродажи.Заявка.*,
	               |	ВТПродажи.БУ,
	               |	ВТПродажи.ДатаПродажи,
	               |	ВТПродажи.ТипТоплива.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТПродажи.Дилер";
	
	ПараметрВидПродукта = Истина;
	ПараметрБУ 			= Истина;
	ПараметрDLV 		= Истина;
	//rarus vikhle 30.12.2021 m 18700 +++
	ПараметрСегмент		= Истина;
	ПараметрТипТоплива	= Истина;
	//rarus vikhle 30.12.2021 m 18700 ---
	ИмяСписка 			= "ПродажиДилеруСписокПродажи";
	ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива); //rarus vikhle 30.12.2021 m 18700 поменял порядок параметров, добавил новые
	
	Если НЕ ПустаяСтрока(ОтборDLV) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&DLV","ВТПродажи.DLV = &DLV");
		ПараметрDLV  = ОтборDLV;
	КонецЕсли;
	Запрос.Параметры.Вставить("DLV", 				ПараметрDLV);
	Запрос.Параметры.Вставить("ВидПродукта", 		ПараметрВидПродукта);
	Запрос.Параметры.Вставить("БУ", 				ПараметрБУ);
	Запрос.Параметры.Вставить("ДатаПродажиНачало", 	НачалоГода(ПериодНачалоМесяцаГодаВыб));
	Запрос.Параметры.Вставить("ДатаПродажиКонец", 	КонецГода(ПериодНачалоМесяцаГодаВыб));
	//rarus vikhle 30.12.2021 m 18700 +++
	Запрос.Параметры.Вставить("Сегмент", 			ПараметрСегмент);
	Запрос.Параметры.Вставить("ТипТоплива", 		ПараметрТипТоплива);
	//rarus vikhle 30.12.2021 m 18700 ---
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(Дерево, "ПродажаДилеруДеревоНезависимые");
	
	Элемент = Элементы.ПродажаДилеруДеревоНезависимыеИтого;
	
	фИтогПоКолонке 		 = Дерево.Строки.Итог("Итого", Истина);
	Элемент.ТекстПодвала = "Итого: " + ?(фИтогПоКолонке = 0, "", фИтогПоКолонке);	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ПродажиДилеруОбновитьДеревоСобственные(ОтборDLV = "") //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СОП КАК СОП,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.КонечныйКлиент КАК Клиент,
	               |	ВЫБОР
	               |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	               |				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.scan_СоглашенияОПоставке.ПустаяСсылка)
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.Компания
	               |		ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
	               |	КОНЕЦ КАК Дилер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ПродавецДилера КАК ПродавецДилера,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)) КАК Заявка,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |	КОНЕЦ КАК ДатаПродажи,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя КАК ТипТоплива
	               |ПОМЕСТИТЬ ВТПродажи
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |{ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта.* КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.НомерШасси) КАК Итого,
	               |	ВТПродажи.Дилер КАК Собственные
	               |ИЗ
	               |	ВТПродажи КАК ВТПродажи
	               |ГДЕ
	               |	ВТПродажи.ДатаПродажи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И &ВидПродукта
	               |	И &БУ
	               |	И &DLV
	               |	И ВТПродажи.Дилер.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	               |	И ВТПродажи.ДатаПродажи МЕЖДУ &ДатаПродажиНачало И &ДатаПродажиКонец
	               |	И &Сегмент
	               |	И &ТипТоплива
	               |{ГДЕ
	               |	ВТПродажи.DLV,
	               |	ВТПродажи.Сегмент.*,
	               |	ВТПродажи.Модель.*,
	               |	ВТПродажи.НомерШасси,
	               |	ВТПродажи.СОП,
	               |	ВТПродажи.Клиент.*,
	               |	ВТПродажи.Дилер.*,
	               |	ВТПродажи.ПродавецДилера.*,
	               |	ВТПродажи.ВидПродукта.*,
	               |	ВТПродажи.Заявка.*,
	               |	ВТПродажи.БУ,
	               |	ВТПродажи.ДатаПродажи,
	               |	ВТПродажи.ТипТоплива.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТПродажи.Дилер";
	
	
	ПараметрВидПродукта = Истина;
	ПараметрБУ 			= Истина;
	ПараметрDLV 		= Истина;
	//rarus vikhle 30.12.2021 m 18700 +++
	ПараметрСегмент		= Истина;
	ПараметрТипТоплива	= Истина;
	//rarus vikhle 30.12.2021 m 18700 ---
	ИмяСписка 			= "ПродажиДилеруСписокПродажи";
	ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива); //rarus vikhle 30.12.2021 m 18700 поменял порядок параметров, добавил новые
	
	Если НЕ ПустаяСтрока(ОтборDLV) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&DLV","ВТПродажи.DLV = &DLV");
		ПараметрDLV  = ОтборDLV;
	КонецЕсли;
	Запрос.Параметры.Вставить("DLV", 			   ПараметрDLV);
	Запрос.Параметры.Вставить("ВидПродукта", 	   ПараметрВидПродукта);
	Запрос.Параметры.Вставить("БУ", 			   ПараметрБУ);
	Запрос.Параметры.Вставить("ДатаПродажиНачало", НачалоГода(ПериодНачалоМесяцаГодаВыб));
	Запрос.Параметры.Вставить("ДатаПродажиКонец",  КонецГода(ПериодНачалоМесяцаГодаВыб));
	//rarus vikhle 30.12.2021 m 18700 +++
	Запрос.Параметры.Вставить("Сегмент", 	   	   ПараметрСегмент);
	Запрос.Параметры.Вставить("ТипТоплива", 	   ПараметрТипТоплива);
	//rarus vikhle 30.12.2021 m 18700 ---
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(Дерево, "ПродажиДилеруДеревоСобственные");
	
	Элемент = Элементы.ПродажиДилеруДеревоСобственныеИтого;
	
	фИтогПоКолонке 		 = Дерево.Строки.Итог("Итого", Истина);
	Элемент.ТекстПодвала = "Итого: " + ?(фИтогПоКолонке = 0, "", фИтогПоКолонке);	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ПродажиДилеруСписокПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Продукт);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ПродажаДилеруДеревоНезависимыеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка = "ПродажиДилеруСписокПродажи";
	ИмяЭлемента =  Элемент.ТекущийЭлемент.Имя;
	Если ИмяЭлемента = "ПродажаДилеруДеревоНезависимыеНезависимые" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Независимые) 
		ИЛИ ИмяЭлемента = "ПродажаДилеруДеревоНезависимыеИтого" Тогда 
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Независимые) Тогда
			
			ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
			ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
			ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);			
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Дилер", Элемент.ТекущиеДанные.Независимые, ВидСравненияКомпоновкиДанных.Равно);			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ПродажиДилеруДеревоСобственныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка = "ПродажиДилеруСписокПродажи";
	ИмяЭлемента =  Элемент.ТекущийЭлемент.Имя;
	Если ИмяЭлемента = "ПродажиДилеруДеревоСобственныеСобственные" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Собственные) 
		ИЛИ ИмяЭлемента = "ПродажиДилеруДеревоСобственныеИтого" Тогда 
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Собственные) Тогда
			
			ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
			ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
			ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Дилер", Элемент.ТекущиеДанные.Собственные, ВидСравненияКомпоновкиДанных.Равно);			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

#КонецОбласти

#Область ПродажиКлиенту
//При изменении запроса требуется корректировка:
//1. Динамического списка
//2. Дерево периода
//3. Дерево собственные
//4. Дерево независимые

&НаСервере
Процедура КомандаПродажиКлиентуДеревоПериодОбновитьНаСервере() //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДоговорСКлиентомНакладнаяУТ КАК СОП,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.КлиентНакладнаяУТ КАК Клиент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДилерНакладнаяУТ КАК Дилер,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиПродуктаКлиенту
	               |	КОНЕЦ КАК ДатаПродажи,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя КАК ТипТоплива
	               |ПОМЕСТИТЬ ВТПродажи
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |{ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта.* КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДилерНакладнаяУТ КАК Дилер}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГОД(ВТПродажи.ДатаПродажи) КАК Год,
				   //rarus vikhle 10.01.2022 m 18700 +++
				   //|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.НомерШасси) КАК Итого
				   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.Продукт) КАК Итого
				   //rarus vikhle 10.01.2022 m 18700 ---
	               |ИЗ
	               |	ВТПродажи КАК ВТПродажи
	               |ГДЕ
	               |	ВТПродажи.ДатаПродажи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И &ВидПродукта
	               |	И &БУ
	               |	И &Сегмент
	               |	И &ТипТоплива
	               |{ГДЕ
	               |	ВТПродажи.DLV,
	               |	ВТПродажи.Сегмент.*,
	               |	ВТПродажи.Модель.*,
	               |	ВТПродажи.НомерШасси,
	               |	ВТПродажи.СОП,
	               |	ВТПродажи.Клиент.*,
	               |	ВТПродажи.Дилер.*,
	               |	ВТПродажи.ВидПродукта.*,
	               |	ВТПродажи.БУ,
	               |	ВТПродажи.ДатаПродажи,
	               |	ВТПродажи.ТипТоплива.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ГОД(ВТПродажи.ДатаПродажи)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Год УБЫВ";
	
	ПараметрВидПродукта = Истина;
	ПараметрБУ 			= Истина;
	//rarus vikhle 30.12.2021 m 18700 +++
	ПараметрСегмент		= Истина;
	ПараметрТипТоплива	= Истина;
	//rarus vikhle 30.12.2021 m 18700 ---
	
	ИмяСписка = "ПродажиКлиентуСписокПродажи";
	ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива); //rarus vikhle 30.12.2021 m 18700 поменял порядок параметров, добавил новые
	
	Запрос.Параметры.Вставить("ВидПродукта", ПараметрВидПродукта);
	Запрос.Параметры.Вставить("БУ", 		 ПараметрБУ);
	//rarus vikhle 30.12.2021 m 18700 +++
	Запрос.Параметры.Вставить("Сегмент", 	 ПараметрСегмент);
	Запрос.Параметры.Вставить("ТипТоплива",  ПараметрТипТоплива);
	//rarus vikhle 30.12.2021 m 18700 ---
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(Дерево, "ПродажиКлиентуДеревоПериод");
	
	ОбновитьПродажиКлиентуСписокПродажи();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура КомандаПродажиКлиентуДеревоПериодОбновить(Команда) //rarus bonmak 16459 07.12.2020 ++
	ОбновитьСтраницуПродажиКлиенту()
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ОбновитьПродажиКлиентуСписокПродажи() //rarus bonmak 16459 07.12.2020 ++
	ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
	ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
	ОбновитьСписокПродажиОбщий("ПродажиКлиентуСписокПродажи", ПериодНачало, ПериодКонец);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ОбновитьСтраницуПродажиКлиенту() //rarus bonmak 16459 07.12.2020 ++
	СписокЭлемента = "ПродажиКлиентуСписокПродажи";
	ТекДата 				  = ТекущаяДата();
	ПериодНачалоМесяцаГодаВыб = НачалоГода(ТекДата);
	УстановитьОтборы(СписокЭлемента);
	ОбновитьПродажиКлиентуСписокПродажи();	
	КомандаПродажиКлиентуДеревоПериодОбновитьНаСервере();
	ПродажиКлиентуОбновитьДеревоНезависимые();
	ПродажиКлиентуОбновитьДеревоСобственные();
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ПродажиКлиентуДеревоПериодВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка 			 = "ПродажиКлиентуСписокПродажи";
	ИмяЭлемента 		 =  Элемент.ТекущийЭлемент.Имя;
	
	Если ИмяЭлемента = "ПродажиКлиентуДеревоПериодГод" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Год) 
		ИЛИ ИмяЭлемента = "ПродажиКлиентуДеревоПериодИтого" Тогда 
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Год) Тогда			
			ПериодОтбора = ПолучитьПериодОтбора(Элемент.ТекущиеДанные.Год);
			ИзменитьПеременнуюПериодНачалоМесяцаГодаВыбНаСервере(ПериодОтбора);						
			ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
			ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
			ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
					
			ПродажиКлиентуОбновитьДеревоНезависимые();
			ПродажиКлиентуОбновитьДеревоСобственные();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ПродажиКлиентуОбновитьДеревоНезависимые() //rarus bonmak 16459 07.12.2020 ++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДоговорСКлиентомНакладнаяУТ КАК СОП,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.КлиентНакладнаяУТ КАК Клиент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДилерНакладнаяУТ КАК Дилер,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиПродуктаКлиенту
	               |	КОНЕЦ КАК ДатаПродажи,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя КАК ТипТоплива
	               |ПОМЕСТИТЬ ВТПродажи
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |{ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта.* КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДилерНакладнаяУТ КАК Дилер}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.НомерШасси) КАК Итого,
	               |	ВТПродажи.Дилер КАК Независимые
	               |ИЗ
	               |	ВТПродажи КАК ВТПродажи
	               |ГДЕ
	               |	ВТПродажи.ДатаПродажи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И &ВидПродукта
	               |	И &БУ
	               |	И ВТПродажи.Дилер.ВидДилера В (ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Независимый), ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.ПустаяСсылка))
	               |	И ВТПродажи.ДатаПродажи МЕЖДУ &ДатаПродажиНачало И &ДатаПродажиКонец
	               |	И &Сегмент
	               |	И &ТипТоплива
	               |{ГДЕ
	               |	ВТПродажи.DLV,
	               |	ВТПродажи.Сегмент.*,
	               |	ВТПродажи.Модель.*,
	               |	ВТПродажи.НомерШасси,
	               |	ВТПродажи.СОП,
	               |	ВТПродажи.Клиент.*,
	               |	ВТПродажи.Дилер.*,
	               |	ВТПродажи.ВидПродукта.*,
	               |	ВТПродажи.БУ,
	               |	ВТПродажи.ДатаПродажи,
	               |	ВТПродажи.ТипТоплива.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТПродажи.Дилер";
	
	ПараметрВидПродукта = Истина;
	ПараметрБУ 			= Истина;
	ПараметрDLV 		= Истина;
	// rarus vikhle 30.12.2021 m 18700 +++
	ПараметрСегмент		= Истина;
	ПараметрТипТоплива	= Истина;
	// rarus vikhle 30.12.2021 m 18700 ---
	ИмяСписка 			= "ПродажиКлиентуСписокПродажи";
	ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива); // rarus vikhle 30.12.2021 m 18700 поменял порядок параметров, добавил новые
	
	Запрос.Параметры.Вставить("ВидПродукта", 		ПараметрВидПродукта);
	Запрос.Параметры.Вставить("БУ", 				ПараметрБУ);
	Запрос.Параметры.Вставить("ДатаПродажиНачало", 	НачалоГода(ПериодНачалоМесяцаГодаВыб));
	Запрос.Параметры.Вставить("ДатаПродажиКонец", 	КонецГода(ПериодНачалоМесяцаГодаВыб));
	// rarus vikhle 30.12.2021 m 18700 +++
	Запрос.Параметры.Вставить("Сегмент", 			ПараметрСегмент);
	Запрос.Параметры.Вставить("ТипТоплива", 		ПараметрТипТоплива);
	// rarus vikhle 30.12.2021 m 18700 ---
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(Дерево, "ПродажаКлиентуДеревоНезависимые");
	
	Элемент = Элементы.ПродажаКлиентуДеревоНезависимыеИтого;
	
	фИтогПоКолонке 		 = Дерево.Строки.Итог("Итого", Истина);
	Элемент.ТекстПодвала = "Итого: " + ?(фИтогПоКолонке = 0, "", фИтогПоКолонке);	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ПродажиКлиентуОбновитьДеревоСобственные() //rarus bonmak 16459 07.12.2020 ++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.DLV КАК DLV,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДоговорСКлиентомНакладнаяУТ КАК СОП,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.КлиентНакладнаяУТ КАК Клиент,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДилерНакладнаяУТ КАК Дилер,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиПродуктаКлиенту
	               |	КОНЕЦ КАК ДатаПродажи,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипТопливаДвигателя КАК ТипТоплива
	               |ПОМЕСТИТЬ ВТПродажи
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |{ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта.* КАК ВидПродукта,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК БУ,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.ДилерНакладнаяУТ КАК Дилер}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПродажи.НомерШасси) КАК Итого,
	               |	ВТПродажи.Дилер КАК Собственные
	               |ИЗ
	               |	ВТПродажи КАК ВТПродажи
	               |ГДЕ
	               |	ВТПродажи.ДатаПродажи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И &ВидПродукта
	               |	И &БУ
	               |	И ВТПродажи.Дилер.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	               |	И ВТПродажи.ДатаПродажи МЕЖДУ &ДатаПродажиНачало И &ДатаПродажиКонец
				   |	И &Сегмент
				   |	И &ТипТоплива
	               |{ГДЕ
	               |	ВТПродажи.DLV,
	               |	ВТПродажи.Сегмент.*,
	               |	ВТПродажи.Модель.*,
	               |	ВТПродажи.НомерШасси,
	               |	ВТПродажи.СОП,
	               |	ВТПродажи.Клиент.*,
	               |	ВТПродажи.Дилер.*,
	               |	ВТПродажи.ВидПродукта.*,
	               |	ВТПродажи.БУ,
	               |	ВТПродажи.ДатаПродажи,
	               |	ВТПродажи.ТипТоплива.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТПродажи.Дилер";
	
	
	ПараметрВидПродукта = Истина;
	ПараметрБУ 			= Истина;
	ПараметрDLV 		= Истина;
	//rarus vikhle 30.12.2021 m 18700 +++
	ПараметрСегмент		= Истина;
	ПараметрТипТоплива	= Истина;
	//rarus vikhle 30.12.2021 m 18700 ---
	ИмяСписка 			= "ПродажиКлиентуСписокПродажи";
	ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива); //rarus vikhle 30.12.2021 m 18700 поменял порядок параметров, добавил новые
	
	Запрос.Параметры.Вставить("ВидПродукта", 	   ПараметрВидПродукта);
	Запрос.Параметры.Вставить("БУ", 			   ПараметрБУ);
	Запрос.Параметры.Вставить("ДатаПродажиНачало", НачалоГода(ПериодНачалоМесяцаГодаВыб));
	Запрос.Параметры.Вставить("ДатаПродажиКонец",  КонецГода(ПериодНачалоМесяцаГодаВыб));
	//rarus vikhle 30.12.2021 m 18700 +++
	Запрос.Параметры.Вставить("Сегмент", 	   	   ПараметрСегмент);
	Запрос.Параметры.Вставить("ТипТоплива", 	   ПараметрТипТоплива);
	//rarus vikhle 30.12.2021 m 18700 ---
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(Дерево, "ПродажиКлиентуДеревоСобственные");
	
	Элемент = Элементы.ПродажиКлиентуДеревоСобственныеИтого;
	
	фИтогПоКолонке 		 = Дерево.Строки.Итог("Итого", Истина);
	Элемент.ТекстПодвала = "Итого: " + ?(фИтогПоКолонке = 0, "", фИтогПоКолонке);	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ПродажиКлиентуСписокПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Продукт);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ПродажаКлиентуДеревоНезависимыеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка = "ПродажиКлиентуСписокПродажи";
	ИмяЭлемента =  Элемент.ТекущийЭлемент.Имя;
	Если ИмяЭлемента = "ПродажаКлиентуДеревоНезависимыеНезависимые" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Независимые) 
		ИЛИ ИмяЭлемента = "ПродажаКлиентуДеревоНезависимыеИтого" Тогда 
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Независимые) Тогда
			
			ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
			ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
			ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);			
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Дилер", Элемент.ТекущиеДанные.Независимые, ВидСравненияКомпоновкиДанных.Равно);			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ПродажиКлиентуДеревоСобственныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus bonmak 16459 07.12.2020 ++
	СтандартнаяОбработка = Ложь;
	ИмяСписка = "ПродажиКлиентуСписокПродажи";
	ИмяЭлемента =  Элемент.ТекущийЭлемент.Имя;
	Если ИмяЭлемента = "ПродажиКлиентуДеревоСобственныеСобственные" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Собственные) 
		ИЛИ ИмяЭлемента = "ПродажиКлиентуДеревоСобственныеИтого" Тогда 
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Собственные) Тогда
			
			ПериодНачало = НачалоГода(ПериодНачалоМесяцаГодаВыб);
			ПериодКонец  = КонецГода(ПериодНачалоМесяцаГодаВыб);
			ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Дилер", Элемент.ТекущиеДанные.Собственные, ВидСравненияКомпоновкиДанных.Равно);			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

#КонецОбласти


#Область ОбщиеФункции

&НаСервере
Процедура ПродажиДилеруОбновитьДеревоОбщее(ИмяСписка, Запрос, ПараметрБУ, ПараметрВидПродукта, ПараметрСегмент, ПараметрТипТоплива) //rarus bonmak 16459 07.12.2020 ++ //rarus vikhle 30.12.2021 m 18700 поменял порядок параметров, добавил новые
	
	ПолеВидПродукта = Новый ПолеКомпоновкиДанных("ВидПродукта");
	ПолеБУ 			= Новый ПолеКомпоновкиДанных("БУ");
	//rarus vikhle 30.12.2021 m 18700 +++
	ПолеСегмент		= Новый ПолеКомпоновкиДанных("Сегмент");
	ПолеТипТоплива 	= Новый ПолеКомпоновкиДанных("ТипТоплива");
	//rarus vikhle 30.12.2021 m 18700 ---
	
	Для Каждого ТекНастройка Из ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ПользовательскиеНастройки.Элементы  Цикл
		Если ТипЗнч(ТекНастройка) = Тип("ОтборКомпоновкиДанных") Тогда 
			Для Каждого СтрОтбор Из ТекНастройка.Элементы Цикл
				Если СтрОтбор.Использование Тогда
					Если СтрОтбор.ЛевоеЗначение = ПолеВидПродукта Тогда
						Если СтрОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
							
							Запрос.Текст 		= СтрЗаменить(Запрос.Текст, "&ВидПродукта","ВТПродажи.ВидПродукта = &ВидПродукта");
							ПараметрВидПродукта = СтрОтбор.ПравоеЗначение;
							
						ИначеЕсли СтрОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
							
							Запрос.Текст 		= СтрЗаменить(Запрос.Текст, "&ВидПродукта","ВТПродажи.ВидПродукта В (&ВидПродукта)");
							ПараметрВидПродукта = СтрОтбор.ПравоеЗначение;
							
						КонецЕсли;	
					КонецЕсли;
					Если СтрОтбор.ЛевоеЗначение = ПолеБУ Тогда
						Если СтрОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
							
							Запрос.Текст = СтрЗаменить(Запрос.Текст, "&БУ","ВТПродажи.БУ = &БУ");
							ПараметрБУ 	 = СтрОтбор.ПравоеЗначение;
							
						ИначеЕсли СтрОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
							
							Запрос.Текст = СтрЗаменить(Запрос.Текст, "&БУ","ВТПродажи.БУ В (&БУ)");
							ПараметрБУ 	 = СтрОтбор.ПравоеЗначение;
							
						КонецЕсли; 
					КонецЕсли;
					//rarus vikhle 30.12.2021 m 18700 +++
					Если СтрОтбор.ЛевоеЗначение = ПолеСегмент Тогда
						Если СтрОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
							
							Запрос.Текст 		= СтрЗаменить(Запрос.Текст, "&Сегмент","ВТПродажи.Сегмент = &Сегмент");
							ПараметрСегмент = СтрОтбор.ПравоеЗначение;
							
						ИначеЕсли СтрОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
							
							Запрос.Текст 		= СтрЗаменить(Запрос.Текст, "&Сегмент","ВТПродажи.Сегмент В (&Сегмент)");
							ПараметрСегмент = СтрОтбор.ПравоеЗначение;
							
						КонецЕсли;	
					КонецЕсли;
					
					Если СтрОтбор.ЛевоеЗначение = ПолеТипТоплива Тогда
						Если СтрОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
							
							Запрос.Текст 		= СтрЗаменить(Запрос.Текст, "&ТипТоплива","ВТПродажи.ТипТоплива = &ТипТоплива");
							ПараметрТипТоплива	= СтрОтбор.ПравоеЗначение;
							
						ИначеЕсли СтрОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
							
							Запрос.Текст 		= СтрЗаменить(Запрос.Текст, "&ТипТоплива","ВТПродажи.ТипТоплива В (&ТипТоплива)");
							ПараметрТипТоплива  = СтрОтбор.ПравоеЗначение;
							
						КонецЕсли;	
					КонецЕсли;
					//rarus vikhle 30.12.2021 m 18700 ---
					
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;		
	КонецЦикла;
	
	//обязательный параметр для всех
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	Запрос.Параметры.Вставить("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура ОбновитьСписокПродажиОбщий(ИмяСписка, ПериодНачало, ПериодКонец) //rarus bonmak 16459 07.12.2020 ++
	ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();
	
	ОбъектНастройки 			= ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
	НоваяГруппаОтбора 			= ОбъектНастройки.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	НоваяГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	НовыйОтбор = НоваяГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование  = Истина;
	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДатаПродажи");
	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно; 
	НовыйОтбор.ПравоеЗначение = ПериодНачало; 
	
	НовыйОтбор = НоваяГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование  = Истина;
	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДатаПродажи");
	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	НовыйОтбор.ПравоеЗначение = ПериодКонец;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница) //rarus bonmak 16459 07.12.2020 ++
	Если ТекущаяСтраница.Имя = "ГруппаСтраницаSRGDeliveries" Тогда		
		ОбновитьСтраницуRGDeliveries();
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаСтраницаПродажаДилеру" Тогда		
		ОбновитьСтраницуПродажиДилеру();
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаСтраницаПродажаКлиенту" Тогда		
		ОбновитьСтраницуПродажиКлиенту();
	КонецЕсли;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

&НаСервере
Процедура УстановитьОтборы(СписокЭлемента) //rarus bonmak 16459 07.12.2020 ++
	//НадстройкиУслуги
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	ЭтаФорма[СписокЭлемента].Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	
	//Вид продукта
	ПолеВидПродукта = Новый ПолеКомпоновкиДанных("ВидПродукта");
	Для Каждого ТекНастройка Из ЭтаФорма[СписокЭлемента].КомпоновщикНастроек.ПользовательскиеНастройки.Элементы  Цикл
		Если ТипЗнч(ТекНастройка) = Тип("ОтборКомпоновкиДанных") Тогда 
			Для Каждого СтрОтбор Из ТекНастройка.Элементы Цикл
				Если СтрОтбор.Использование Тогда
					Если СтрОтбор.ЛевоеЗначение = ПолеВидПродукта Тогда
						Если СтрОтбор.ПравоеЗначение = Справочники.Scan_ВидыПродуктов.ПустаяСсылка() 
							ИЛИ СтрОтбор.ПравоеЗначение = Неопределено Тогда
							
							ГрузовыеАвтомобили 		= Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");					
							СтрОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно; 
							СтрОтбор.ПравоеЗначение = ГрузовыеАвтомобили;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

#КонецОбласти