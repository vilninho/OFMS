
//rarus vikhle 30.10.2020 mt 16328 +++
&НаКлиенте
Перем ИменаРеквизитовКТ; 

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	ЗаполнитьКонтрольныеТочки();
		
	ЗначениеНастройки = Scan_ПраваИНастройки.Scan_Право("ТипыПродуктовСНадстройкой");
	ТипыСНадстройкой = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗначениеНастройки,",",Истина);																		
	ЗначениеНастройки = Scan_ПраваИНастройки.Scan_Право("ТипыПродуктовБезНадстройки");
	ТипыБезНадстройки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗначениеНастройки,",",Истина);
	
	ОчередьDDИнформера.Параметры.УстановитьЗначениеПараметра("ТипыСНадстройкой",ТипыСНадстройкой);
	ОчередьDDИнформера.Параметры.УстановитьЗначениеПараметра("ТипыБезНадстройки",ТипыБезНадстройки);
	ОчередьDDИнформера.Параметры.УстановитьЗначениеПараметра("КоличествоДнейБезНадстройки",Scan_ПраваИНастройки.Scan_Право("КоличествоДнейДляРасчетаDDДляИзделийБезНадстройки"));
	ОчередьDDИнформера.Параметры.УстановитьЗначениеПараметра("КузовостроительСканияПитер",Scan_ПраваИНастройки.Scan_Право("КузовостроительСканияПитер"));
	ОчередьDDИнформера.Параметры.УстановитьЗначениеПараметра("КоличествоДнейСНадстройкойЛокальные",Scan_ПраваИНастройки.Scan_Право("КоличествоДнейДляРасчетаDDКузовостроительВРФ"));
	ОчередьDDИнформера.Параметры.УстановитьЗначениеПараметра("КоличествоДнейСНадстройкойЕвропейские",Scan_ПраваИНастройки.Scan_Право("КоличествоДнейДляРасчетаDD"));
	
	ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОчередьDDИнформера,
																			"Продукт.ТипПродукта.ВидПродукта", 
																			ГрузовыеАвтомобили, 
																			ВидСравненияКомпоновкиДанных.Равно,,																			
																			Истина,БыстрыйДоступ,
																			Строка(Новый УникальныйИдентификатор));
	//rarus vikhle 18.12.2020 mt 16328 +++																		
	Если Параметры.Свойство("МассивЗаказов") Тогда																		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОчередьDDИнформера,
																				"ЗаказНаЗавод", 
																				Параметры.МассивЗаказов, 
																				ВидСравненияКомпоновкиДанных.ВСписке,,																			
																				Истина,БыстрыйДоступ,
																				Строка(Новый УникальныйИдентификатор));
	КонецЕсли;	
	//rarus vikhle 18.12.2020 mt 16328 ---
	
	//rarus vikhle 11.03.2021 mt 17420 +++
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОчередьDDИнформера,
																			"Продукт.ЛокальныйСтатусПродукта", 
																			Справочники.Scan_ЛокальныеСтатусыПродуктов.OPEN, 
																			ВидСравненияКомпоновкиДанных.Равно,,																			
																			Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	//rarus vikhle 11.03.2021 mt 17420 ---
	
	//rarus vikhle 30.03.2021 mt 17504 +++
	ГруппаОтборов = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ОчередьDDИнформера.Отбор.Элементы,,ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе); 
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов,"Заявка.ТребуетсяРазмещениеЗаказа",
														Истина,
														ВидСравненияКомпоновкиДанных.Равно,,
														Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов,"EDD",,
														ВидСравненияКомпоновкиДанных.НеЗаполнено,,
														Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов,"Заявка.Кузовостроитель",,
														ВидСравненияКомпоновкиДанных.Заполнено,,
														Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);													
	//rarus vikhle 30.03.2021 mt 17504 ---
	
	РассчитатьКоличествоСтрок();
	
	//исключение полей промежетучного запроса списка из доступных настроек списка
	Поля = Новый Массив;
	Поля.Добавить("Изделие");
	Поля.Добавить("МестоХранения");
	ОчередьDDИнформера.УстановитьОграниченияИспользованияВГруппировке(Поля);
	ОчередьDDИнформера.УстановитьОграниченияИспользованияВОтборе(Поля);
	ОчередьDDИнформера.УстановитьОграниченияИспользованияВПорядке(Поля);
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();
	
	ИменаРеквизитовКТ = Новый Массив;
	ИменаРеквизитовКТ.Добавить("DD");
	ИменаРеквизитовКТ.Добавить("DD2");
	ИменаРеквизитовКТ.Добавить("DDPriority");
	ИменаРеквизитовКТ.Добавить("DDDeviation");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//rarus vikhle 21.12.2020 mt 16328 +++
	Если ИмяСобытия = "УстановитьОтборЗаЗаказамНаЗавод" Тогда
		БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОчередьDDИнформера,
																					"ЗаказНаЗавод", 
																					Параметр, 
																					ВидСравненияКомпоновкиДанных.ВСписке,,																			
																					Истина,БыстрыйДоступ,
																					Строка(Новый УникальныйИдентификатор));
    КонецЕсли;																				
	//rarus vikhle 21.12.2020 mt 16328 ---																			
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОчередьDDИнформераПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.ОчередьDDИнформера.ТекущиеДанные;
		
	Если НЕ ТекущиеДанные = Неопределено И НЕ ТекущиеДанные.Свойство("ГруппировкаСтроки") Тогда
		Для Каждого ИмяРеквизита Из ИменаРеквизитовКТ Цикл
			ПараметрыОтбора = Новый Структура("Реквизит",ИмяРеквизита);
			СтрокаКТ = КонтрольныеТочки.НайтиСтроки(ПараметрыОтбора);
			Если НЕ СтрокаКТ.Количество() = 0 Тогда
				Если ИмяРеквизита = "DD" И ЗначениеЗаполнено(ТекущиеДанные.DDТекущий) Тогда 
					СтрокаКТ[0].Значение = ТекущиеДанные.DDТекущий;
				ИначеЕсли ИмяРеквизита = "DD" И НЕ ЗначениеЗаполнено(ТекущиеДанные.DDТекущий) Тогда 	
					СтрокаКТ[0].Значение = ТекущиеДанные.DDРасчетный;
				Иначе	
					СтрокаКТ[0].Значение = ТекущиеДанные[ИмяРеквизита];
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
	Иначе
		Для Каждого КТ Из КонтрольныеТочки Цикл
			КТ.Значение = Неопределено;
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущийЭлемент = Элементы.КонтрольныеТочкиЗначение Тогда
		ТекущийДанные = Элемент.ТекущиеДанные;
		Если НЕ ЗначениеЗаполнено(ТекущийДанные.Значение) И ТекущийДанные.Реквизит = "DD" ИЛИ ТекущийДанные.Реквизит = "DD2" Тогда 
			ТекущийДанные.Значение = Дата(1,1,1);
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекущийДанные.Значение) И ТекущийДанные.Реквизит = "DDDeviation" Тогда
			ТекущийДанные.Значение = ПредопределенноеЗначение("Справочник.Scan_ПричиныОтклоненийПоDD.ПустаяСсылка");
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекущийДанные.Значение) И  ТекущийДанные.Реквизит = "DDPriority" Тогда
			ТекущийДанные.Значение = "";
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОчередьDDИнформераВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено И НЕ ТекущиеДанные.Свойство("ГруппировкаСтроки") Тогда	
		ПоказатьЗначение(,ТекущиеДанные.ЗаказНаЗавод);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчередьDDИнформераПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	ОчиститьСообщения();
	
	ТекущаяСтрока = Элементы.ОчередьDDИнформера.ТекущаяСтрока;
	ТекущиеДанные = Элементы.ОчередьDDИнформера.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбрана строка в очереди'"),ЭтотОбъект,"ОчередьDDИнформера");
		Возврат;
	ИначеЕсли ТекущиеДанные.Свойство("ГруппировкаСтроки") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Необходимо выбрать детальную запись группировки'"),ЭтотОбъект,"ОчередьDDИнформера");
		Возврат; 
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("Флаг",Истина);
	ВыбранныеКТ = КонтрольныеТочки.НайтиСтроки(ПараметрыОтбора);
	Если НЕ ВыбранныеКТ.Количество() = 0 Тогда
		ПараметрыОтбора = Новый Структура("Реквизит,Флаг","DD2",Истина);
		СтрокаDD2 = КонтрольныеТочки.НайтиСтроки(ПараметрыОтбора);
		Если НЕ СтрокаDD2.Количество() = 0 Тогда
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.DDDeviation) Тогда
				ПараметрыОтбора = Новый Структура("Реквизит","DDDeviation");
				СтрокаDDDeviation = КонтрольныеТочки.НайтиСтроки(ПараметрыОтбора); 
				Если СтрокаDDDeviation.Количество() = 0 Тогда
					ВывестиСообщениеПол(Нстр("ru = 'В таблице контрольных точек отсутствует DD deviaton. Заполнение даты DD2 невозможно'"),
										ЭтотОбъект,"КонтрольныеТочки");
					Возврат;	
				Иначе
					Если НЕ СтрокаDDDeviation[0].Флаг ИЛИ НЕ ЗначениеЗаполнено(СтрокаDDDeviation[0].Значение) Тогда
						ИмяПоляТаблицы = "КонтрольныеТочки" + "[" + КонтрольныеТочки.Индекс(СтрокаDDDeviation[0]) + "]" 
										+ ?(НЕ СтрокаDDDeviation[0].Флаг,".Флаг",".Значение");   
						ВывестиСообщениеПол(Нстр("ru = 'При указании даты DD2 необходимо также заполнить и выбрать DD deviation'"),
											ЭтотОбъект,ИмяПоляТаблицы);
						Возврат;
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;	
		
		СоответствиеВыбранныхКТ = Новый Соответствие;
		Для Каждого ВыбраннаяКТ Из ВыбранныеКТ Цикл
			Если НЕ ЗначениеЗаполнено(ВыбраннаяКТ.Значение) Тогда
				ИмяПоляТаблицы = "КонтрольныеТочки" + "[" + КонтрольныеТочки.Индекс(ВыбраннаяКТ) + "]" + ".Значение"; 
				ВывестиСообщениеПол(Нстр("ru = 'У выбранной контрольной точки %1 не заполнено значение'"),ЭтотОбъект,ИмяПоляТаблицы);
				Возврат;
			КонецЕсли;	
			СоответствиеВыбранныхКТ.Вставить(ВыбраннаяКТ.Реквизит,ВыбраннаяКТ.Значение);	
		КонецЦикла;	
		//rarus vikhle 15.02.2021 mt 17209 +++
		Если НЕ СоответствиеВыбранныхКТ.Получить("DDDeviation") = Неопределено И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьDDDeviationВЗаказеНаЗавод") Тогда
			СоответствиеВыбранныхКТ.Удалить("DDDeviation");
			ВывестиСообщениеПол(Нстр("ru = 'Нет права на установку DD deviation в заказах на завод'"));
			Если НЕ СоответствиеВыбранныхКТ.Получить("DD2") = Неопределено Тогда
				СоответствиеВыбранныхКТ.Удалить("DD2");
				ВывестиСообщениеПол(Нстр("ru = 'Дата DD2 не была установлена.'"));	
			КонецЕсли;	
		КонецЕсли;
		
		Если НЕ СоответствиеВыбранныхКТ.Получить("DDPriority") = Неопределено И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьDDPriorityВЗаказеНаЗавод") Тогда
			СоответствиеВыбранныхКТ.Удалить("DDPriority");
			ВывестиСообщениеПол(Нстр("ru = 'Нет права на установку DD priority в заказах на завод'"));		
		КонецЕсли;	
		//rarus vikhle 15.02.2021 mt 17209 ---
		
		СохранитьНаСервере(СоответствиеВыбранныхКТ);	
		ОповеститьОбИзменении(ТекущаяСтрока);
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны контрольные точки'"),ЭтотОбъект,"КонтрольныеТочки");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоЗаказов(Команда)
	
	РассчитатьКоличествоСтрок();	
	
КонецПроцедуры
	
	
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНаСервере(СоответствиеВыбранныхКТ)
	Перем ОбъектЗаказ;
	ЗаказНаЗавод = Элементы.ОчередьDDИнформера.ТекущаяСтрока.ЗаказНаЗавод; 
	УстановленыДаты = Ложь;
	НужноЗаписатьЗаказ = Ложь;
	
	Для Каждого КТ Из СоответствиеВыбранныхКТ Цикл	
		Отказ = Ложь;
		Если КТ.Ключ = "DD" ИЛИ КТ.Ключ = "DD2" Тогда
			РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(ЗаказНаЗавод,
																					Перечисления.Scan_КлючевыеДаты[КТ.Ключ],
																					КТ.Значение,,Отказ);
			Если НЕ Отказ Тогда
				УстановленыДаты = Истина;
				ВывестиСообщениеПол(Нстр("ru = 'У заказа на завод %1 успешно установлена дата %2'"),,,,,
										ЗаказНаЗавод.Наименование,КТ.Ключ);
			Иначе
				ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при установки даты %1 заказа на завод %2'"),,,,,
										КТ.Ключ,ЗаказНаЗавод.Наименование);
			КонецЕсли;																			
		Иначе
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта(КТ.Ключ,ЗаказНаЗавод.Метаданные()) И НЕ ЗаказНаЗавод[КТ.Ключ] = КТ.Значение Тогда //rarus vikhle 04.11.2020 mt 16328
				Если ОбъектЗаказ = Неопределено Тогда
					ОбъектЗаказ = ЗаказНаЗавод.ПолучитьОбъект();
				КонецЕсли;	
				ОбъектЗаказ[КТ.Ключ] = КТ.Значение;
				НужноЗаписатьЗаказ = Истина;
			Иначе
				Продолжить;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	Если НужноЗаписатьЗаказ Тогда
		Попытка
			ОбъектЗаказ.Записать();
			ВывестиСообщениеПол(Нстр("ru = 'Заказа на завод %1 успешно записан'"),,,,,
									ЗаказНаЗавод.Наименование);
		Исключение	
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи заказа на завод %1: '") 
								+ ОписаниеОшибки(),,,,,ЗаказНаЗавод.Наименование);	
		КонецПопытки;
	КонецЕсли;	
		
	//Удаляем из очереди информера, если изменены и установлены даты
	Если УстановленыДаты Тогда
		НаборЗаписей = РегистрыСведений.Scan_ОчередьDDИнформера.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ЗаказНаЗавод.Установить(ЗаказНаЗавод);
		Попытка
			НаборЗаписей.Записать();
			ВывестиСообщениеПол(НСтр("ru = 'Запись по заказу %1 удалена из очереди DD-информера'"),,,,,
								ЗаказНаЗавод.Наименование);	
		Для Каждого КТ Из КонтрольныеТочки Цикл
			КТ.Флаг = Ложь;			
		КонецЦикла;	
		Исключение
			ВывестиСообщениеПол(НСтр("ru = 'Не удалось удалить запись по заказу %1 из очереди DD-информера: '") 
								+ ОписаниеОшибки(),,,,,ЗаказНаЗавод.Наименование);
		КонецПопытки;
	КонецЕсли;
	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьКонтрольныеТочки()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка КАК КонтрольнаяТочка,
	               |	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка.РеквизитОбъекта КАК Реквизит
	               |ИЗ
	               |	РегистрСведений.Scan_КонтрольныеТочкиАРМ КАК Scan_КонтрольныеТочкиАРМ
	               |ГДЕ
	               |	Scan_КонтрольныеТочкиАРМ.DDИнформер
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Реквизит";
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	СтрокаDDDeviation = РезультатЗапроса.Найти("DDDeviation","Реквизит");
	Если СтрокаDDDeviation <> Неопределено Тогда
		РезультатЗапроса.Сдвинуть(СтрокаDDDeviation,1);
	КонецЕсли;
	КонтрольныеТочки.Загрузить(РезультатЗапроса);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УО = ОчередьDDИнформера.КомпоновщикНастроек.Настройки.УсловноеОформление;
	УО.Элементы.Очистить();
	
	ИсходныйШрифт = Элементы.ОчередьDDИнформера.Шрифт; //rarus vikhle 16.11.2020 mt 16328 
	
	//PDD
	Элемент = УО.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("PDD");
	ПолеЭлемента.Использование = Истина;

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИзмененаДатаPDD");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента.Использование = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(ИсходныйШрифт,,,Истина));//rarus vikhle 16.11.2020 mt 16328
	
	//CDD
	Элемент = УО.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("CDD");
	ПолеЭлемента.Использование = Истина;

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИзмененаДатаCDD");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента.Использование = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(ИсходныйШрифт,,,Истина));//rarus vikhle 16.11.2020 mt 16328
	
	//CDD2
	Элемент = УО.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("CDD2");
	ПолеЭлемента.Использование = Истина;

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИзмененаДатаCDD2");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента.Использование = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(ИсходныйШрифт,,,Истина));//rarus vikhle 16.11.2020 mt 16328
	
	//EDD
	Элемент = УО.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("EDD");
	ПолеЭлемента.Использование = Истина;

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИзмененаДатаEDD");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента.Использование = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(ИсходныйШрифт,,,Истина));//rarus vikhle 16.11.2020 mt 16328
	
	Элемент = УО.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("EDD");
	ПолеЭлемента.Использование = Истина;

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЗаказНаЗавод.ГотовностьТС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента.Использование = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.ЦветМорскойВолныНейтральный);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(ИсходныйШрифт,,,Истина));//rarus vikhle 16.11.2020 mt 16328
	
	ОчередьDDИнформера.КомпоновщикНастроек.ЗагрузитьНастройки(ОчередьDDИнформера.КомпоновщикНастроек.Настройки);
	  
КонецПроцедуры	

&НаСервере
Процедура РассчитатьКоличествоСтрок()
	
	Схема = Элементы.ОчередьDDИнформера.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.ОчередьDDИнформера.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ТаблицаРезультат.Свернуть("ЗаказНаЗавод");
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "ЗаказНаЗавод");
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Элементы.ОбновитьКоличествоЗаказов.Заголовок = "Очередь информера, шт.:" + ТаблицаРезультат.Количество();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьОформлениеЯчейкиЦветКабины(Строки)
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	Для Каждого СтрокаСписка Из Строки Цикл
		Если Не СтрокаСписка.Значение.Данные.ЦветКабиныПТС.Пустая() Тогда
			ЦветФона = СтрокаСписка.Значение.Данные.ЦветКабиныПТС.ЦветФона.Получить();
			Если ЦветФона <> ЧерныйЦвет И НЕ СтрокаСписка.Значение.Оформление.Получить("ЦветКабиныПТС") = Неопределено Тогда //rarus vikhle 12.03.2021 mt 17405
				СтрокаСписка.Значение.Оформление["ЦветКабиныПТС"].УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//rarus vikhle 30.10.2020 mt 16328 ---








