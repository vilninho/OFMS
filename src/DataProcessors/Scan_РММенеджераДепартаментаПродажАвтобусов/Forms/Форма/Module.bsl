#Область ОписаниеПеременных
// rarus tenkam 27.05.2021 mantis 17742 +++ За основу взята обработка Scan_РМРегиональногоМенеджера

//rarus vikhle 05.06.2020 mt 15894 +++
&НаКлиенте
Перем мВыбраныСсылкиРаспределение;
// rarus agar 10.08.2020 15894 ++
//&НаКлиенте
//Перем мВыбраныСсылкиСвободные;
&НаКлиенте
Перем мВыбраныСсылкиСвободныеНовые;
&НаКлиенте
Перем мВыбраныСсылкиСвободныеБУ;
// rarus agar 10.08.2020 15894 --
//rarus vikhle 05.08.2021 mt 17834 +++
&НаКлиенте
Перем мВыбраныСсылкиРезервSRU;
//rarus vikhle 05.08.2021 mt 17834 ---
&НаКлиенте
Перем мКритерииПоискаПоКоридору;

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ГруппаДействияПоискРаспределение.Видимость	= Ложь;
	// rarus agar 10.08.2020 15894 ++
	//Элементы.ГруппаДействияПоискСвободные.Видимость = Ложь;
	Элементы.ГруппаДействияПоискСвободныеНовые.Видимость = Ложь;
	Элементы.ГруппаДействияПоискСвободныеБУ.Видимость    = Ложь;
	// rarus agar 10.08.2020 15894 --
	Элементы.ГруппаДействияПоискПродажи.Видимость = Ложь;
	Элементы.ГруппаДействияПоискВсеПродукты.Видимость = Ложь; //rarus vikhle 20.05.2021 mt 17661
	Элементы.ГруппаДействияПоискРезервSRU.Видимость = Ложь; //rarus vikhle 05.08.2021 mt 17834
	
	Элементы.ГруппаПродуктыПоМенеджерамПродажи.Видимость = Ложь;
	//rarus vikhle 20.05.2021 mt 17661 +++
	Элементы.ГруппаПродуктыПоМенеджерамВсеПродукты.Видимость = Ложь;
	//rarus vikhle 20.05.2021 mt 17661 ---
	Элементы.ГруппаПродуктыПоОтветственным.Видимость = Ложь; //rarus vikhle 05.08.2021 mt 17834
	
	КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия;
	ТумблерПоиск = "0";	
	УправлениеДиалогом();
	
	ЗаполнитьДеревоПродуктыПоМенеджерам(Элементы.Продажи.Имя);//rarus vikhle 21.05.2021 mt 17733
	ЗаполнитьДеревоПродуктыПоОтветственнымНаСервере(); //rarus vikhle 12.08.2021 mt 17834
	
	БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	СотрудникПользователя = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь,"Сотрудник");
	//rarus ozhnik 17473 25.03.2021 + 
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СпециальныеУсловия, "РегиональныйМенеджер", СотрудникПользователя, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СоглашенияОПоставке, "РегиональныйМенеджер", СотрудникПользователя, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	//rarus ozhnik 17473 25.03.2021 -
	
	ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	ВидАвтобусы = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРаспределение, "ВидПродукта", ВидАвтобусы, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	// rarus agar 10.08.2020 15894 ++
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСвободные, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСвободныеНовые, "ВидПродукта", ВидАвтобусы, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСвободныеБУ,    "ВидПродукта", ВидАвтобусы, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	// rarus agar 10.08.2020 15894 --
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПродажи, "ВидПродукта", ВидАвтобусы, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокВсеПродукты, "ВидПродукта", ВидАвтобусы, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРезервSRU, "ВидПродукта", ВидАвтобусы, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор)); //rarus vikhle 05.08.2021 mt 17834
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРезервSRU, "ОтветственныйЗаРезерв", Пользователи.ТекущийПользователь(), ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));//rarus vikhle 06.08.2021 mt 17834
	
	// rarus tenkam 24.08.2020 mantis 16422 +++
	СписокРаспределение.Параметры.УстановитьЗначениеПараметра("ВидАвтобусы",ВидАвтобусы);
	СписокСвободныеНовые.Параметры.УстановитьЗначениеПараметра("ВидАвтобусы",ВидАвтобусы);
	СписокСвободныеБУ.Параметры.УстановитьЗначениеПараметра("ВидАвтобусы",ВидАвтобусы);
	СписокПродажи.Параметры.УстановитьЗначениеПараметра("ВидАвтобусы",ВидАвтобусы);
	// rarus tenkam 24.08.2020 mantis 16422 ---
	СписокВсеПродукты.Параметры.УстановитьЗначениеПараметра("ВидАвтобусы",ВидАвтобусы);//rarus vikhle 20.05.2021 mt 17661
	СписокРезервSRU.Параметры.УстановитьЗначениеПараметра("ВидАвтобусы",ВидАвтобусы);//rarus vikhle 05.08.2021 mt 17834
	
	//rarus agar 31.08.2020 15696 ++
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	СписокРаспределение.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	СписокСвободныеНовые.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	СписокСвободныеБУ.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	СписокПродажи.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	//rarus agar 31.08.2020 15696 --
	СписокРезервSRU.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг); //rarus vikhle 05.08.2021 mt 17834
	
	//rarus vikhle 12.11.2020 mt 16181 +++
	МассивСтатусов = Новый Массив;
	//МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП);//rarus vikhle 25.01.2021 mt 16929
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	СписокПродажи.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов);
	СпециальныеУсловия.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов);
	//rarus vikhle 12.11.2020 mt 16181 ---
	СписокВсеПродукты.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов); //rarus vikhle 20.05.2021 mt 17661
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();	
	
	мВыбраныСсылкиРаспределение = Новый Массив;
	// rarus agar 10.08.2020 15894 ++
	//мВыбраныСсылкиСвободные = Новый Массив;
	мВыбраныСсылкиСвободныеНовые = Новый Массив;
	мВыбраныСсылкиСвободныеБУ    = Новый Массив;
	// rarus agar 10.08.2020 15894 --
	мВыбраныСсылкиРезервSRU = Новый Массив; //rarus vikhle 05.08.2021 mt 17834
	
	СписокРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	// rarus agar 10.08.2020 15894 ++
	//СписокСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
	СписокСвободныеНовые.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеНовые);
	СписокСвободныеБУ.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",    мВыбраныСсылкиСвободныеБУ);
	// rarus agar 10.08.2020 15894 --
	СписокРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU); //rarus vikhle 05.08.2021 mt 17834 
	
	мКритерииПоискаПоКоридору = ПолучитьМассивКритериевОтбораПоКоридоруЗначений(); 
	Элементы.ПолеОтбораПоКоридоруРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	// rarus agar 10.08.2020 15894 ++
	//Элементы.ПолеОтбораПоКоридоруСвободные.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоКоридоруСвободныеНовые.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоКоридоруСвободныеБУ.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	// rarus agar 10.08.2020 15894 --
	Элементы.ПолеОтбораПоКоридоруПродажи.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоКоридоруВсеПродукты.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);//rarus vikhle 21.05.2021 mt 17661
	Элементы.ПолеОтбораПоКоридоруРезервSRU.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору); //rarus vikhle 05.08.2021 mt 17834
	
	КоличествоПродуктовРаспределение = РассчитатьКоличествоСтрок("СписокРаспределение");
	КоличествоЗаказовРаспределение = РассчитатьКоличествоСтрок("СписокРаспределение","ЗаказНаЗаводКоличество"); //rarus bonmak 01.09.2020 16505 изменил название элемента
	Элементы.СписокРаспределениеОбновитьКоличествоПродуктов.Заголовок =НСтр("ru = 'Количество продуктов:'; en = 'Products quantity:'") + КоличествоПродуктовРаспределение;
	                 	
	// rarus tenkam 28.06.2021 mantis 17742 +++
	МассивМаркетинговыхТипов = ПолучитьСписокМаркетинговыхТиповАвтобусов();
	
	ТекЭлементМаркетинговыйТип = Элементы.Найти("КомпоновщикНастроекПользовательскиеНастройкиЭлемент2Значение");
	Если ТекЭлементМаркетинговыйТип <> Неопределено И ТекЭлементМаркетинговыйТип.Заголовок = "Маркетинговый тип" Тогда
		ТекЭлементМаркетинговыйТип.РежимВыбораИзСписка = Истина;
		ТекЭлементМаркетинговыйТип.СписокВыбора.ЗагрузитьЗначения(МассивМаркетинговыхТипов);
	КонецЕсли;
	
	ТекЭлементМаркетинговыйТип = Элементы.Найти("КомпоновщикНастроекПользовательскиеНастройкиЭлемент2Значение3");
	Если ТекЭлементМаркетинговыйТип <> Неопределено И ТекЭлементМаркетинговыйТип.Заголовок = "Маркетинговый тип" Тогда
		ТекЭлементМаркетинговыйТип.РежимВыбораИзСписка = Истина;
		ТекЭлементМаркетинговыйТип.СписокВыбора.ЗагрузитьЗначения(МассивМаркетинговыхТипов);
	КонецЕсли;

	ТекЭлементМаркетинговыйТип = Элементы.Найти("КомпоновщикНастроекПользовательскиеНастройкиЭлемент1Значение2");
	Если ТекЭлементМаркетинговыйТип <> Неопределено И ТекЭлементМаркетинговыйТип.Заголовок = "Маркетинговый тип" Тогда
		ТекЭлементМаркетинговыйТип.РежимВыбораИзСписка = Истина;
		ТекЭлементМаркетинговыйТип.СписокВыбора.ЗагрузитьЗначения(МассивМаркетинговыхТипов);
	КонецЕсли;

	ТекЭлементМаркетинговыйТип = Элементы.Найти("КомпоновщикНастроекПользовательскиеНастройкиЭлемент1Значение1");
	Если ТекЭлементМаркетинговыйТип <> Неопределено И ТекЭлементМаркетинговыйТип.Заголовок = "Маркетинговый тип" Тогда
		ТекЭлементМаркетинговыйТип.РежимВыбораИзСписка = Истина;
		ТекЭлементМаркетинговыйТип.СписокВыбора.ЗагрузитьЗначения(МассивМаркетинговыхТипов);
	КонецЕсли;

	// rarus tenkam 28.06.2021 mantis 17742 ---
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокМаркетинговыхТиповАвтобусов() // rarus tenkam 28.06.2021 mantis 17742 +++
	МассивМаркетинговыхТипов = Новый Массив;
	МассивМаркетинговыхТипов.Добавить(Справочники.Scan_МаркетинговыеТипыПродуктов.НайтиПоНаименованию("Междугородный"));
	МассивМаркетинговыхТипов.Добавить(Справочники.Scan_МаркетинговыеТипыПродуктов.НайтиПоНаименованию("Туристический"));
	
	Возврат МассивМаркетинговыхТипов;	
КонецФункции // rarus tenkam 28.06.2021 mantis 17742 ---

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура СписокРаспределениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СписокСвободныеНовыеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) // rarus agar 10.08.2020 15894 +-
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры

// rarus agar 10.08.2020 15894 ++
&НаКлиенте
Процедура СписокСвободныеБУВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры
// rarus agar 10.08.2020 15894 --

&НаКлиенте
Процедура СписокПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры

//rarus vikhle 20.05.2021 mt 17661
&НаКлиенте
Процедура СписокВсеПродуктыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры
//rarus vikhle 20.05.2021 mt 17661 ---

//rarus agar 18.08.2020 16138 ++
&НаСервереБезКонтекста
Процедура УстановитьОформлениеЯчейкиЦветКабины(Строки)
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	Для Каждого СтрокаСписка Из Строки Цикл
		Если Не СтрокаСписка.Значение.Данные.ЦветКабины.Пустая() Тогда
			ЦветФона = СтрокаСписка.Значение.Данные.ЦветКабины.ЦветФона.Получить();
			Если ЦветФона <> ЧерныйЦвет И НЕ СтрокаСписка.Значение.Оформление.Получить("ЦветКабины") = Неопределено Тогда //rarus vikhle 12.03.2021 mt 17405
				СтрокаСписка.Значение.Оформление["ЦветКабины"].УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокРаспределениеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокСвободныеНовыеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокСвободныеБУПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПродажиПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры
//rarus agar 18.08.2020 16138 --

//rarus vikhle 20.05.2021 mt 17661 +++
&НаСервереБезКонтекста
Процедура СписокВсеПродуктыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры
//rarus vikhle 20.05.2021 mt 17661 ---

&НаКлиенте
Процедура ПолеОтбораПоКоридоруРаспределениеПриИзменении(Элемент)
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоКоридоруСвободныеНовыеПриИзменении(Элемент) // rarus agar 10.08.2020 15894 +-
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
КонецПроцедуры

// rarus agar 10.08.2020 15894 ++
&НаКлиенте
Процедура ПолеОтбораПоКоридоруСвободныеБУПриИзменении(Элемент)
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
КонецПроцедуры
// rarus agar 10.08.2020 15894 --

&НаКлиенте
Процедура ПолеОтбораПоКоридоруПродажиПриИзменении(Элемент)
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
КонецПроцедуры

//rarus vikhle 20.05.2021 mt 17661 +++
&НаКлиенте
Процедура ПолеОтбораПоКоридоруВсеПродуктыПриИзменении(Элемент)
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
КонецПроцедуры
//rarus vikhle 20.05.2021 mt 17661 ---

&НаКлиенте
Процедура ТумблерПоискРаспределениеПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискСвободныеНовыеПриИзменении(Элемент) // rarus agar 10.08.2020 15894 +-
	УправлениеДиалогом();
КонецПроцедуры

// rarus agar 10.08.2020 15894 ++
&НаКлиенте
Процедура ТумблерПоискСвободныеБУПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры
// rarus agar 10.08.2020 15894 --

&НаКлиенте
Процедура ТумблерПоискПродажиПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

//rarus vikhle 21.05.2021 mt 17661 +++
&НаКлиенте
Процедура ТумблерПоискВсеПродуктыПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры
//rarus vikhle 21.05.2021 mt 17661 ---

&НаКлиенте
Процедура ДеревоПродуктыПоМенеджерамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИмяСписка = "Список" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяЭлемента =  Элемент.ТекущийЭлемент.Имя;
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя); //rarus bonmak 03.09.2020 16459
	Если (ИмяЭлемента = "ДеревоПродуктыПоМенеджерамРегиональныйМенеджер" ИЛИ ИмяЭлемента = "ДеревоПродуктыПоМенеджерамВсеПродуктыРегиональныйМенеджер") //rarus vikhle 21.05.2021 mt 17661
		И ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.РегиональныйМенеджер);
	ИначеЕсли	(ИмяЭлемента = "ДеревоПродуктыПоМенеджерамДилер" ИЛИ ИмяЭлемента = "ДеревоПродуктыПоМенеджерамВсеПродуктыДилер") //rarus vikhle 21.05.2021 mt 17661
		И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда 	
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Дилер);
	//rarus ozhnik 13766 15.03.2021 + 
	ИначеЕсли	(ИмяЭлемента = "ДеревоПродуктыПоМенеджерамКолонкаГруппировки" ИЛИ ИмяЭлемента = "ДеревоПродуктыПоМенеджерамВсеПродуктыКолонкаГруппировки") //rarus vikhle 21.05.2021 mt 17661 
		И ЗначениеЗаполнено(Элемент.ТекущиеДанные.КолонкаГруппировки) Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.КолонкаГруппировки);
	//rarus ozhnik 13766 15.03.2021 -
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамСтатусОплачено" ИЛИ ИмяЭлемента = "ДеревоПродуктыПоМенеджерамВсеПродуктыСтатусОплачено" Тогда //rarus vikhle 21.05.2021 mt 17661 
		//rarus bonmak 16459 07.12.2020 ++
		СписокОплачено = Новый СписокЗначений;
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.Оплачено"));
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику"));
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью"));
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаНеТребуется"));
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.НеТребуется")); //rarus bonmak 26.02.2021 17290 ++
		СписокОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоПолностью"));
		//rarus bonmak 16459 07.12.2020 --
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Договор.СОП_СтатусОплаты", СписокОплачено, ВидСравненияКомпоновкиДанных.ВСписке); //rarus bonmak 16459 07.12.2020 ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.Оплачено"), ВидСравненияКомпоновкиДанных.Равно); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка	
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Дилер", Элемент.ТекущиеДанные.Дилер, ВидСравненияКомпоновкиДанных.Равно); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка
		КонецЕсли;
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер", Элемент.ТекущиеДанные.РегиональныйМенеджер, ВидСравненияКомпоновкиДанных.Равно); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер",, ВидСравненияКомпоновкиДанных.НеЗаполнено); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка	
		КонецЕсли;	
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамСтатусОплаченоЧастично" ИЛИ ИмяЭлемента = "ДеревоПродуктыПоМенеджерамВсеПродуктыСтатусОплаченоЧастично" Тогда //rarus vikhle 21.05.2021 mt 17661
		//rarus bonmak 16459 07.12.2020 ++
		СписокОплаченоЧастично = Новый СписокЗначений;
		СписокОплаченоЧастично.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику"));
		СписокОплаченоЧастично.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично"));
		//rarus bonmak 16459 07.12.2020 --
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Договор.СОП_СтатусОплаты", СписокОплаченоЧастично, ВидСравненияКомпоновкиДанных.ВСписке); //rarus bonmak 16459 07.12.2020 ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично"), ВидСравненияКомпоновкиДанных.Равно); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка	
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Дилер", Элемент.ТекущиеДанные.Дилер, ВидСравненияКомпоновкиДанных.Равно); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка
		КонецЕсли;
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер", Элемент.ТекущиеДанные.РегиональныйМенеджер, ВидСравненияКомпоновкиДанных.Равно); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер",, ВидСравненияКомпоновкиДанных.НеЗаполнено); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка	
		КонецЕсли;
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамСтатусНеОплачено" ИЛИ  ИмяЭлемента = "ДеревоПродуктыПоМенеджерамВсеПродуктыСтатусНеОплачено" Тогда //rarus vikhle 21.05.2021 mt 17661
		//rarus bonmak 03.09.2020 16459 ++
		ОбъектНастройки 	= ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		НоваяГруппаОтбора = ОбъектНастройки.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		НоваяГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		//rarus bonmak 16459 07.12.2020 ++
		СписокНеОплачено = Новый СписокЗначений;
		СписокНеОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.НеОплачено"));
		СписокНеОплачено.Добавить(ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаОтсутствует"));
		//rarus bonmak 16459 07.12.2020 --

		НовыйОтбор = НоваяГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заявка.Договор.СОП_СтатусОплаты"); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке; //rarus bonmak 16459 07.12.2020 ВидСравненияКомпоновкиДанных.Равно;
		НовыйОтбор.ПравоеЗначение = СписокНеОплачено; //rarus bonmak 16459 07.12.2020 ПредопределенноеЗначение("Перечисление.Scan_СтатусыОплатПоСОП.НеОплачено");
		
		НовыйОтбор = НоваяГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заявка.Договор");//rarus bonmak 16459 07.12.2020 изменил СОП на Заявка
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
		//rarus bonmak 03.09.2020 16459 --
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Дилер", Элемент.ТекущиеДанные.Дилер, ВидСравненияКомпоновкиДанных.Равно); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка
		КонецЕсли;
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер", Элемент.ТекущиеДанные.РегиональныйМенеджер, ВидСравненияКомпоновкиДанных.Равно); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер",, ВидСравненияКомпоновкиДанных.НеЗаполнено); //rarus bonmak 16459 07.12.2020 изменил СОП на Заявка	
		КонецЕсли;
	//rarus ozhnik 13766 15.03.2021 + 
	ИначеЕсли	ИмяЭлемента = "ДеревоПродуктыПоМенеджерамИтого" ИЛИ ИмяЭлемента = "ДеревоПродуктыПоМенеджерамВсеПродуктыИтого" Тогда //rarus vikhle 21.05.2021 mt 17661 
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Дилер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.Дилер", Элемент.ТекущиеДанные.Дилер, ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегиональныйМенеджер) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер", Элемент.ТекущиеДанные.РегиональныйМенеджер, ВидСравненияКомпоновкиДанных.Равно);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяСписка], "Заявка.РегиональныйМенеджер",, ВидСравненияКомпоновкиДанных.НеЗаполнено);	
		КонецЕсли;	
	//rarus ozhnik 13766 15.03.2021 -

	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискРезервSRUПриИзменении(Элемент) //rarus vikhle 05.08.2021 mt 17834 +++
	
	УправлениеДиалогом();
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаКлиенте
Процедура ПолеОтбораПоКоридоруРезервSRUПриИзменении(Элемент) //rarus vikhle 05.08.2021 mt 17834 +++
	
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаКлиенте
Процедура ДеревоПродуктыПоОтветственнымВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 05.08.2021 mt 17834 +++
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.ДеревоПродуктыПоОтветственнымКоличество Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокРезервSRU, "Продукт");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРезервSRU,
																				"ОтветственныйЗаРезерв",
																				ТекущиеДанные.ОтветственныйЗаРезерв,
																				ВидСравненияКомпоновкиДанных.Равно);
		// Дополнительно накладываем отбор по продукту, если выбор сделан на 2м уровне группировки																		
		Если ТекущиеДанные.ИмяГруппировки = "Продукт" Тогда  	
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРезервSRU,
																					"Продукт",
																					ТекущиеДанные.Продукт,
																					ВидСравненияКомпоновкиДанных.Равно);		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

#КонецОбласти

#Область Вспомогательные

&НаСервереБезКонтекста
Процедура ЗаявкиНаОтгрузкуПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus pechek 25.06.2020 mantis 15894 +++
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	МассивСсылок = Строки.ПолучитьКлючи();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СтатусыЗаявокНаОтгрузку.Ссылка КАК Ссылка,
	|	Scan_СтатусыЗаявокНаОтгрузку.ЦветФона КАК ЦветФона,
	|	Scan_СтатусыЗаявокНаОтгрузку.ЦветТекста КАК ЦветТекста,
	|	Scan_СтатусыЗаявокНаОтгрузку.Шрифт КАК Шрифт
	|ИЗ
	|	Справочник.Scan_СтатусыЗаявокНаОтгрузку КАК Scan_СтатусыЗаявокНаОтгрузку";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ЗаявкаНаОтгрузку.Ссылка КАК СсылкаДокумент
		|ИЗ
		|	Документ.Scan_ЗаявкаНаОтгрузку КАК Scan_ЗаявкаНаОтгрузку
		|ГДЕ
		|	Scan_ЗаявкаНаОтгрузку.Статус = &Статус
		|	И Scan_ЗаявкаНаОтгрузку.Ссылка В(&МассивСсылок)";
		
		Запрос.УстановитьПараметр("Статус",       Выборка.Ссылка);
		Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаСписка = Строки[ВыборкаДетальныеЗаписи.СсылкаДокумент];
			Для Каждого КолонкаСписка Из СтрокаСписка.Оформление Цикл
				ЦветФона = Выборка.ЦветФона.Получить();
				Если ЦветФона <> ЧерныйЦвет Тогда
					КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
				КонецЕсли;
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветТекста", Выборка.ЦветТекста.Получить());
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("Шрифт",      Выборка.Шрифт.Получить());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьЛокальныйСтатусНаСервере (ВыбранныеИзделия,Статус)
	ЕстьОшибки = Ложь;
	Для Каждого Изделие ИЗ ВыбранныеИзделия Цикл 
		Если Изделие.БУ ИЛИ Изделие.МаркаПродукта <> Справочники.Scan_МаркиПродуктов.Scania Тогда
			// rarus kabany 19.07.2021 18027 ++
			Если Статус = ПредопределенноеЗначение("Справочник.Scan_ЛокальныеСтатусыПродуктов.OPEN") Тогда
				ЗаказНаЗаводСсылка = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Изделие);
				Если ЗаказНаЗаводСсылка = Справочники.Scan_ЗаказыНаЗавод.ПустаяСсылка() Тогда
					Сообщить(СтрШаблон(Нстр("ru = 'Не удалось изменить локальный статус у %1, так как у данного продукта отсутствует заказ на завод';
					|en = 'Failed to change local status of %1, because this product does not have a factory order'"),
					Изделие.Наименование)); // rarus kabany 20.07.2021 18027 + исправление ошибки в тексте
					ЕстьОшибки = Истина;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			// rarus kabany 19.07.2021 18027 --
			ТекОбъект = Изделие.ПолучитьОбъект();
			ТекОбъект.Заблокировать(); // OFMS устранение ошибок Sonar Qube (АПК) tenkam
			ТекОбъект.ЛокальныйСтатусПродукта = Статус;
			Попытка
				ТекОбъект.Записать();
			Исключение
				ЕстьОшибки = Истина;
				Сообщить(СтрШаблон(Нстр("ru = 'Не удалось изменить локальный статус у %1. %2';
										|en = 'Failed to change local status of %1. %2'"),
										Изделие.Наименование,ОписаниеОшибки()));
			КонецПопытки;
		Иначе
			ЕстьОшибки = Истина;
			Сообщить(СтрШаблон(Нстр("ru = 'Не удалось изменить локальный статус у %1. Запрещено изменять локальный статус у новых продуктов марки Scania.';
									|en = 'Failed to change local status of %1. 
									|It is forbidden to change the local status of new products Scania.'"),
									Изделие.Наименование));
		КонецЕсли;	
	КонецЦикла;
	Если НЕ ЕстьОшибки Тогда
		Сообщить(НСтр("ru = 'Локальный статус успешно изменен'; en = 'Local status successfully updated'"));
	КонецЕсли;	
КонецПроцедуры
	
&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаПродукт(СтрокаРС)
	
	// rarus agar 03.11.2020 16010 ++
	ПродуктСсылка = Справочники.Scan_Изделия.ПустаяСсылка();
	Если ТипЗнч(СтрокаРС) = Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту") Тогда
		ПродуктСсылка = СтрокаРС.Продукт;
	КонецЕсли;
	// rarus agar 03.11.2020 16010 --
	
	Возврат ПродуктСсылка;
	
КонецФункции

&НаКлиенте
Функция ПолучитьМассивКритериевОтбораПоКоридоруЗначений()
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	//rarus pechek 15.06.2020 mantis 16201 +++
	//МассивКолонокОтбора.Добавить("№ Продукта"); 	
	МассивКолонокОтбора.Добавить("№ Шасси");
	//rarus pechek 15.06.2020 mantis 16201 ---
	МассивКолонокОтбора.Добавить("PDD");
	МассивКолонокОтбора.Добавить("CDD");
	МассивКолонокОтбора.Добавить("CDD2");
	МассивКолонокОтбора.Добавить("EDD");
	МассивКолонокОтбора.Добавить("DD");
	МассивКолонокОтбора.Добавить("DD2");
	МассивКолонокОтбора.Добавить("DDS");
	МассивКолонокОтбора.Добавить("Бронь");	
	Возврат МассивКолонокОтбора;
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборСписка (Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИмяСписка = Элемент.Имя;
	ИмяПоля = Поле.Имя;
	
	ПродуктСсылка = ПолучитьСсылкуНаПродукт(ВыбраннаяСтрока);
	Если ИмяПоля = "СписокРаспределениеФлаг" Тогда
		мИндекс = мВыбраныСсылкиРаспределение.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиРаспределение.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиРаспределение.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();	
		СписокРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);	
	// rarus agar 10.08.2020 15894 ++
	//ИначеЕсли  ИмяПоля = "СписокСвободныеФлаг"	Тогда
	//	мИндекс = мВыбраныСсылкиСвободные.Найти(ПродуктСсылка);
	//	Если мИндекс = Неопределено Тогда
	//		мВыбраныСсылкиСвободные.Добавить(ПродуктСсылка);
	//	Иначе
	//		мВыбраныСсылкиСвободные.Удалить(мИндекс);
	//	КонецЕсли;
	//	КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество();	
	//	СписокСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
	ИначеЕсли ИмяПоля = "СписокСвободныеНовыеФлаг" Тогда
		мИндекс = мВыбраныСсылкиСвободныеНовые.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиСвободныеНовые.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиСвободныеНовые.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхСвободныеНовые = мВыбраныСсылкиСвободныеНовые.Количество();
		СписокСвободныеНовые.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеНовые);
	ИначеЕсли ИмяПоля = "СписокСвободныеБУФлаг" Тогда
		мИндекс = мВыбраныСсылкиСвободныеБУ.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиСвободныеБУ.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиСвободныеБУ.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхСвободныеБУ = мВыбраныСсылкиСвободныеБУ.Количество();
		СписокСвободныеБУ.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеБУ);
	// rarus agar 10.08.2020 15894 --
	//rarus vikhle 06.08.2021 mt 17834 +++	
	ИначеЕсли ИмяПоля = "СписокРезервSRUФлаг" Тогда
		мИндекс = мВыбраныСсылкиРезервSRU.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиРезервSRU.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиРезервSRU.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();
		СписокРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);
	//rarus vikhle 06.08.2021 mt 17834 ---	
	// rarus tenkam 24.05.2021 mantis 17722 +++
	ИначеЕсли Поле.Имя = "СписокПродажиЗаказНаЗакупку" Тогда
		ЗначениеСсылка = Элементы.СписокПродажи.ТекущиеДанные.СсылкаЗаказНаЗакупку;
		ПоказатьЗначение(,ЗначениеСсылка);
	ИначеЕсли Поле.Имя = "СписокПродажиСОП" ИЛИ
		Поле.Имя = "СписокПродажиДоговорСОПДоп" Тогда
		ЗначениеСсылка = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПродуктСсылка,"СоглашениеОПоставке");
		ПоказатьЗначение(,ЗначениеСсылка);
	ИначеЕсли Поле.Имя = "СписокПродажиДоговорСОП" Тогда
		ЗначениеСсылка = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПродуктСсылка,"СОП");
		ПоказатьЗначение(,ЗначениеСсылка);
	ИначеЕсли Поле.Имя = "СписокПродажиСпециальныеУсловия" Тогда
		ЗначениеСсылка = Элементы.СписокПродажи.ТекущиеДанные.СсылкаСУ;
		ПоказатьЗначение(,ЗначениеСсылка);
	// rarus tenkam 24.0054.2021 mantis 17722 ---   			
	Иначе
		ПоказатьЗначение(,ПродуктСсылка);	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция РассчитатьКоличествоСтрок(ИмяСписка,ИмяЭлемента = "ПродуктКоличество") //rarus bonmak 01.09.2020 16505 изменил название элемента
	
	Схема = Элементы[ИмяСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы[ИмяСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаРезультат.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	ТаблицаРезультат.Свернуть(ИмяЭлемента);
	Справочник = ?(ИмяЭлемента = "ПродуктКоличество",Справочники.Scan_Изделия,Справочники.Scan_ЗаказыНаЗавод); //rarus bonmak 01.09.2020 16505 изменил название элемента
	НайденнаяСтрока = ТаблицаРезультат.Найти(Справочник.ПустаяСсылка(), ИмяЭлемента);
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
КонецФункции

&НаСервере
Функция СписокВТЗнаСервере(ИмяСтраницы)
	// rarus agar 10.08.2020 15894 ++
	//ИмяСписка = ?(ИмяСтраницы = "Распределение","СписокРаспределение","СписокСвободные");
	ИмяСписка = ?(ИмяСтраницы = "Распределение","СписокРаспределение","СписокСвободныеНовые");
	Если ИмяСтраницы = "Распределение" Тогда
		ИмяСписка = "СписокРаспределение";
	ИначеЕсли ИмяСтраницы = "СвободныеНовые" Тогда
		ИмяСписка = "СписокСвободныеНовые";
	ИначеЕсли ИмяСтраницы = "СвободныеБУ" Тогда //rarus vikhle 06.08.2021 mt 17834
		ИмяСписка = "СписокСвободныеБУ";
	//rarus vikhle 06.08.2021 mt 17834 +++	
	ИначеЕсли ИмяСтраницы = "РезервSRU" Тогда
		ИмяСписка = "СписокРезервSRU";	
	КонецЕсли;
	//rarus vikhle 06.08.2021 mt 17834 ---
	// rarus agar 10.08.2020 15894 --
	ТаблицаРезультат = ДинамическийСписокВТаблицуЗначений(Элементы[ИмяСписка]);
	КолонкаСсылок = ТаблицаРезультат.ВыгрузитьКолонку("Продукт");
	Возврат КолонкаСсылок;
КонецФункции

&НаСервере
Процедура УправлениеДиалогом()
		Если ТумблерПоиск = "0" Тогда
			Элементы.ГруппаОтборПоСпискуРаспределение.Видимость = Истина;
			Элементы.ГруппаОтборПоКоридоруЗначенийРаспределение.Видимость = Ложь;
			// rarus agar 10.08.2020 15894 ++
			//Элементы.ГруппаОтборПоСпискуСвободные.Видимость = Истина;
			//Элементы.ГруппаОтборПоКоридоруЗначенийСвободные.Видимость = Ложь;
			Элементы.ГруппаОтборПоСпискуСвободныеНовые.Видимость = Истина;
			Элементы.ГруппаОтборПоКоридоруЗначенийСвободныеНовые.Видимость = Ложь;
			Элементы.ГруппаОтборПоСпискуСвободныеБУ.Видимость = Истина;
			Элементы.ГруппаОтборПоКоридоруЗначенийСвободныеБУ.Видимость = Ложь;
			// rarus agar 10.08.2020 15894 --
			Элементы.ГруппаОтборПоСпискуПродажи.Видимость = Истина;
			Элементы.ГруппаОтборПоКоридоруЗначенийПродажи.Видимость = Ложь;
			//rarus vikhle 20.05.2021 mt 17661 +++
			Элементы.ГруппаОтборПоСпискуВсеПродукты.Видимость = Истина;
			Элементы.ГруппаОтборПоКоридоруЗначенийВсеПродукты.Видимость = Ложь;
			//rarus vikhle 20.05.2021 mt 17661 ---
			//rarus vikhle 06.08.2021 mt 17834 +++
			Элементы.ГруппаОтборПоСпискуРезервSRU.Видимость = Истина;
			Элементы.ГруппаОтборПоКоридоруЗначенийРезервSRU.Видимость = Ложь;
			//rarus vikhle 06.08.2021 mt 17834 ---
			ПолеС = Неопределено;
			ПолеПо = Неопределено;
			ПолеОтбора = "";
		Иначе
			Элементы.ГруппаОтборПоСпискуРаспределение.Видимость = Ложь;
			Элементы.ГруппаОтборПоКоридоруЗначенийРаспределение.Видимость = Истина;
			// rarus agar 10.08.2020 15894 ++
			//Элементы.ГруппаОтборПоКоридоруЗначенийСвободные.Видимость = Истина;
			//Элементы.ГруппаОтборПоСпискуСвободные.Видимость = Ложь;
			Элементы.ГруппаОтборПоСпискуСвободныеНовые.Видимость = Ложь;
			Элементы.ГруппаОтборПоКоридоруЗначенийСвободныеНовые.Видимость = Истина;
			Элементы.ГруппаОтборПоСпискуСвободныеБУ.Видимость = Ложь;
			Элементы.ГруппаОтборПоКоридоруЗначенийСвободныеБУ.Видимость = Истина;
			// rarus agar 10.08.2020 15894 --
			Элементы.ГруппаОтборПоСпискуПродажи.Видимость = Ложь;
			Элементы.ГруппаОтборПоКоридоруЗначенийПродажи.Видимость = Истина;
			//rarus vikhle 20.05.2021 mt 17661 +++
			Элементы.ГруппаОтборПоСпискуВсеПродукты.Видимость = Ложь;
			Элементы.ГруппаОтборПоКоридоруЗначенийВсеПродукты.Видимость = Истина;
			//rarus vikhle 20.05.2021 mt 17661 ---
			//rarus vikhle 06.08.2021 mt 17834 +++
			Элементы.ГруппаОтборПоСпискуРезервSRU.Видимость = Ложь;
			Элементы.ГруппаОтборПоКоридоруЗначенийРезервSRU.Видимость = Истина;
			//rarus vikhle 06.08.2021 mt 17834 ---
			ПолеВвода = "";
			КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.ПустаяСсылка();
		КонецЕсли; 	
КонецПроцедуры

&НаСервере
Процедура ПоискПоКритериямНаСервере(Страница)
	//ИспользоватьИзмененноеПолеС = Ложь;
	//ИспользоватьИзмененноеПолеПо = Ложь;
	ИмяСписка = "Список" + Страница;
	
	Если ТумблерПоиск = "0" Тогда  
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
		МассивПодстрокБезИзменений = Новый Массив;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрокБезИзменений, МассивПодстрок, Истина);
		//преобразование массива, чтобы находить заказы по номеру без нулей
		Индекс = -1;
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;	
				КонецЕсли;
			КонецЦикла;
			//rarus pechek 19.06.2020 mantis 16201 +++
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (7 - КолВоЗнаковЧисло) Цикл  // 7-длина номера шасси  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
			//rarus pechek 19.06.2020 mantis 16201 ---
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок, МассивПодстрокБезИзменений, Истина);
		
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			//ЛевоеЗначение = "НомерПродукта";
			ЛевоеЗначение = "Шасси";   //rarus pechek 17.06.2020 mantis 16201
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.МодельПродукта Тогда
			ЛевоеЗначение = "Модель.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.Дилер Тогда
			ЛевоеЗначение = "Дилер.Наименование";
		КонецЕсли;
		
		ОбъектНастройки = ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
		ОбъектНастройки.Очистить();
		                                              
		НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НовыйОтбор.ПравоеЗначение = МассивПодстрок;
	Иначе
		ОбъектНастройки =  ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		ОбъектНастройки.Очистить();
		
		// rarus tenkam 17.06.2020 mantis 16201 +++
		Если ПолеОтбора = "№ Шасси" Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли ПолеОтбора = "№ Заказа" Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		Иначе
			ЛевоеЗначение = ПолеОтбора;
		КонецЕсли;
		
		Если ПолеОтбора = "№ Шасси" ИЛИ
			ПолеОтбора = "№ Заказа" Тогда
			
			СообщениеОбОшибке = "";
			ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(ЭтаФорма[ИмяСписка], ЛевоеЗначение, ПолеС, ПолеПо,,СообщениеОбОшибке);
			Если НЕ ОтборУстановлен Тогда
				Сообщить(СообщениеОбОшибке);
			КонецЕсли;
		Иначе
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеС; 	
			
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеПо;	
		КонецЕсли;
		
		////Если ПолеОтбора = "№ Продукта" Тогда
		//Если ПолеОтбора = "№ Шасси" Тогда   //rarus pechek 15.06.2020 mantis 16201 +++ 
		//	//ЛевоеЗначение = "НомерПродукта"
		//	ЛевоеЗначение = "Шасси";   //rarus pechek 17.06.2020 mantis 16201
		//Иначе
		//	ЛевоеЗначение = ПолеОтбора;
		//КонецЕсли;	
		//
		//Если ПолеОтбора <> "№ Заказа" Тогда 
		//	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//	НовыйОтбор.Использование  = Истина;
		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		//	НовыйОтбор.ПравоеЗначение = ПолеС; 			
		//	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//	НовыйОтбор.Использование  = Истина;
		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		//	НовыйОтбор.ПравоеЗначение = ПолеПо; 
		//Иначе 
		//	Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруЗаказаНаЗавод(ЭтаФорма[ИмяСписка], "ЗаказНаЗавод.Наименование", ПолеС, ПолеПо);
		//КонецЕсли;
		// rarus tenkam 17.06.2020 mantis 16201 ---
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтключитьПоискПоКритериямНаСервере(Страница)
	ИмяСписка = "Список" + Страница;
	ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();
	ПолеВвода = "";
	ПолеС  = Неопределено;
	ПолеПо = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент) 
	МассивИменСтраниц = Новый Массив;
	МассивИменСтраниц.Добавить("Распределение");
	// rarus agar 10.08.2020 15894 ++
	//МассивИменСтраниц.Добавить("Свободные");
	МассивИменСтраниц.Добавить("СвободныеНовые");
	МассивИменСтраниц.Добавить("СвободныеБУ");
	// rarus agar 10.08.2020 15894 --
	МассивИменСтраниц.Добавить("Продажи");
	МассивИменСтраниц.Добавить("ВсеПродукты");//rarus vikhle 21.05.2021 mt 17661
	МассивИменСтраниц.Добавить("РезервSRU"); //rarus vikhle 06.08.2021 mt 17834
	
	Для Каждого Страница ИЗ МассивИменСтраниц Цикл
		ИмяПоляС = "ПолеС" + Страница;
		ИмяПоляПо = "ПолеПо" + Страница;
		//Если Элемент.ТекстРедактирования = "№ Заказа" ИЛИ Элемент.ТекстРедактирования = "№ Продукта" Тогда  
		Если Элемент.ТекстРедактирования = "№ Заказа" ИЛИ Элемент.ТекстРедактирования = "№ Шасси" Тогда  //rarus pechek 15.06.2020 mantis 16201 +++
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Строка");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Иначе
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Дата");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Дата");
		КонецЕсли;
	КонецЦикла;	
	ПолеС = Неопределено;
	ПолеПо = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПродуктыПоМенеджерам(Страница)
	
	//rarus vikhle 21.05.2021 mt 17661 +++
	Если Страница = Элементы.Продажи.Имя Тогда
		ИспользоватьДопУсловия = Истина;
		РеквизитДерево = "ДеревоПродуктыПоМенеджерам";
		ЭлементДерево = Элементы.ДеревоПродуктыПоМенеджерам.Имя;
	ИначеЕсли Страница = Элементы.ВсеПродукты.Имя Тогда 
		ИспользоватьДопУсловия = Ложь;
		РеквизитДерево = "ДеревоПродуктыПоМенеджерамВсеПродукты";
		ЭлементДерево = Элементы.ДеревоПродуктыПоМенеджерам.Имя;
	Иначе
		Возврат;
	КонецЕсли;	
	//rarus vikhle 21.05.2021 mt 17661 ---
			
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.РегиональныйМенеджер КАК РегиональныйМенеджер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер КАК Дилер,
				   //rarus bonmak 16459 07.12.2020 ++
				   //|	СУММА(ВЫБОР
				   //|			КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.Оплачено)
				   //|				ТОГДА 1
				   //|			ИНАЧЕ 0
				   //|		КОНЕЦ) КАК СтатусОплачено,
				   //|	СУММА(ВЫБОР
				   //|			КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично)
				   //|				ТОГДА 1
				   //|			ИНАЧЕ 0
				   //|		КОНЕЦ) КАК СтатусОплаченоЧастично,
				   //|	СУММА(ВЫБОР
				   //|			КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.НеОплачено)
				   ////rarus bonmak 03.09.2020 16459 ++
				   //|            ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор = Значение(Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка)
				   ////rarus bonmak 03.09.2020 16459 --
				   //|				ТОГДА 1
				   //|			ИНАЧЕ 0
				   //|		КОНЕЦ) КАК СтатусНеОплачено,
				   |СУММА(ВЫБОР
				   |КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.Оплачено)
				   |ТОГДА 1
				   |ИНАЧЕ ВЫБОР
				   |КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику)
				   |	ТОГДА 1
				   |ИНАЧЕ ВЫБОР
				   |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью)
				   |			ТОГДА 1
				   |		ИНАЧЕ ВЫБОР
				   |				КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаНеТребуется)
				   |					ТОГДА 1
				   |				ИНАЧЕ ВЫБОР
				   |						КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоПолностью)
				   |							ТОГДА 1
				   //rarus bonmak 26.02.2021 17290 ++
				   |						ИНАЧЕ ВЫБОР
				   |							КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.НеТребуется)
				   |								ТОГДА 1				   
				   //rarus bonmak 26.02.2021 17290 --
				   |							ИНАЧЕ 0
				   |						КОНЕЦ
				   |					КОНЕЦ
				   |			КОНЕЦ
				   |	КОНЕЦ
				   |КОНЕЦ
				   |КОНЕЦ) КАК СтатусОплачено,
				   |СУММА(ВЫБОР
				   |КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично)
				   |ТОГДА 1
				   |ИНАЧЕ ВЫБОР
				   |КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику)
				   |		ТОГДА 1
				   |	ИНАЧЕ 0
				   |КОНЕЦ
				   |КОНЕЦ) КАК СтатусОплаченоЧастично,
				   |СУММА(ВЫБОР
				   |КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.НеОплачено)
				   |		ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор = ЗНАЧЕНИЕ(Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка)
				   |	ТОГДА 1
				   |ИНАЧЕ ВЫБОР
				   |		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ПредоплатаОтсутствует)
				   |				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор = ЗНАЧЕНИЕ(Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка)
				   |			ТОГДА 1
				   |		ИНАЧЕ 0
				   |	КОНЕЦ
				   |КОНЕЦ) КАК СтатусНеОплачено,
				   //rarus bonmak 16459 07.12.2020 --
	               |	КОЛИЧЕСТВО(Scan_СводнаяИнформацияПоПродукту.Продукт) КАК Количество
				   //rarus ozhnik 17366 17.03.2021 + 
				   |	ПОМЕСТИТЬ СуммовыеПоказатели
				   //rarus ozhnik 17366 17.03.2021 -
				   |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
				   |    ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
				   |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
				   //rarus vikhle 21.05.2021 mt 17661 +++
				   |	ВЫБОР
	               |			КОГДА &ИспользоватьДопУсловия
	               |				ТОГДА Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Open)
	               |						И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |							ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	               |						И (Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия ЕСТЬ NULL
	               |							ИЛИ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |						И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке <> ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)
	               |						И Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления = ЛОЖЬ
				   |			ИНАЧЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке <> ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)
				   |		КОНЕЦ
				    //rarus vikhle 21.05.2021 mt 17661 ---
					
				   |	И Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта = &ВидАвтобусы	// rarus tenkam 21.06.2021 mantis 17742 +

				   |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.РегиональныйМенеджер,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер
				   //rarus bonmak 03.09.2020 16459 ++
				   //|	ВЫБОР
				   //|		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.Оплачено)
				   //|			ТОГДА ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.Оплачено)
				   //|		ИНАЧЕ 0
				   //|	КОНЕЦ,
				   //|	ВЫБОР
				   //|		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично)
				   //|			ТОГДА ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.ОплаченоЧастично)
				   //|		ИНАЧЕ 0
				   //|	КОНЕЦ,
				   //|	ВЫБОР
				   //|		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор.СОП_СтатусОплаты = ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.НеОплачено)
				   //|			ТОГДА ЗНАЧЕНИЕ(Перечисление.Scan_СтатусыОплатПоСОП.НеОплачено)
				   //|		ИНАЧЕ 0
				   //|	КОНЕЦ
				   //rarus bonmak 03.09.2020 16459 --
				   //rarus ozhnik 17366 17.03.2021 + 
				   |;
				   |ВЫБРАТЬ
				   |    СуммовыеПоказатели.РегиональныйМенеджер Как РегиональныйМенеджер,
				   |    СуммовыеПоказатели.Дилер Как Дилер,
				   |    СуммовыеПоказатели.СтатусОплачено Как СтатусОплачено,
				   |    СуммовыеПоказатели.СтатусОплаченоЧастично Как СтатусОплаченоЧастично,
				   |    СуммовыеПоказатели.СтатусНеОплачено Как СтатусНеОплачено,
				   |    СуммовыеПоказатели.Количество Как Количество,
				   |	естьNULL(СтатусОплачено,0) + естьNULL(СтатусОплаченоЧастично,0) + естьNULL(СтатусНеОплачено,0) Как СуммаИтогов
				   |ИЗ
				   |	СуммовыеПоказатели Как СуммовыеПоказатели
				   | 				   
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РегиональныйМенеджер,
				   //rarus ozhnik 17366 17.03.2021 + 
				   |	Дилер.Наименование
				   //rarus ozhnik 17466 17.03.2021 -
	               |ИТОГИ
	               |	СУММА(СтатусОплачено),
	               |	СУММА(СтатусОплаченоЧастично),
	               |	СУММА(СтатусНеОплачено),
				   |	Сумма(СуммаИтогов)
	               |ПО
	               |	РегиональныйМенеджер";
				   
	//rarus ozhnik 17366 17.03.2021 + 			   
	
	//Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	//ЭлементыДерева = ДеревоПродуктыПоМенеджерам.ПолучитьЭлементы();
	ЭлементыДерева = ЭтаФорма[РеквизитДерево].ПолучитьЭлементы();//rarus vikhle 21.05.2021 mt 17661
	ЭлементыДерева.Очистить();
	
	// rarus tenkam 21.06.2021 mantis 17742 +++
	ВидАвтобусы = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус");
	Запрос.УстановитьПараметр("ВидАвтобусы", ВидАвтобусы); 
	// rarus tenkam 21.06.2021 mantis 17742 ---
	
	Запрос.УстановитьПараметр("ИспользоватьДопУсловия",ИспользоватьДопУсловия);//rarus vikhle 21.05.2021 mt 17661
	ВыборкаПервыйУровень = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень = ЭлементыДерева.Добавить();
		Корень.КолонкаГруппировки = ВыборкаПервыйУровень.РегиональныйМенеджер;
		Корень.РегиональныйМенеджер = ВыборкаПервыйУровень.РегиональныйМенеджер; //rarus ozhnik 17366 22.03.2021 + для корреткного отбора по "Итого" верхнего уровня
		Корень.Итого = ВыборкаПервыйУровень.СуммаИтогов;
		ЭлементыКорня = Корень.ПолучитьЭлементы();
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать();
		Пока ВыборкаВторойУровень.Следующий() Цикл
			НоваяСтрока = ЭлементыКорня.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВторойУровень);
			НоваяСтрока.КолонкаГруппировки = ВыборкаВторойУровень.Дилер;
			НоваяСтрока.Итого = ВыборкаВторойУровень.СуммаИтогов;
		КонецЦикла; 
	КонецЦикла; 
	//ЗначениеВРеквизитФормы(Дерево, "ДеревоПродуктыПоМенеджерам");
	//Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
	//	Элементы.ДеревоПродуктыПоМенеджерам.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	//КонецЦикла;
	//rarus ozhnik 17366 17.03.2021 -
	//Элементы.ДеревоПродуктыПоМенеджерам.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать;  //rarus ozhnik 17473 25.03.2021 + 
	Элементы[ЭлементДерево].НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать; //rarus vikhle 21.05.2021 mt 17661
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПродуктыПоОтветственнымНаСервере() //rarus vikhle 06.08.2021 mt 17834 +++ 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделийОстатки.Изделие КАК Изделие,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК Местонахождение,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК МестоХранения
	               |ПОМЕСТИТЬ ТекущееМестонахождение
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки КАК Scan_МестонахождениеИзделийОстатки
	               |ГДЕ
	               |	Scan_МестонахождениеИзделийОстатки.КоличествоОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_МестонахождениеИзделийОстатки.Изделие
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Изделие
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ОтветственныйЗаРезерв, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОтветственныйЗаРезерв,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	1 КАК Количество
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТекущееМестонахождение КАК ТекущееМестонахождение
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = ТекущееМестонахождение.Изделие
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И (Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |				И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ИЛИ Scan_СводнаяИнформацияПоПродукту.Продукт.БУ)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта.ВидПродукта = &ВидАвтобусы
	               |	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ТипСоглашенияОПоставке = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU)
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(Продукт),
	               |	СУММА(Количество)
	               |ПО
	               |	ОтветственныйЗаРезерв";
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();			 
	Запрос.УстановитьПараметр("МассивТиповПродуктовНадстроекИУслуг",МассивТиповПродуктовНадстроекИУслуг);
	
	ВидАвтобусы = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус");
	Запрос.УстановитьПараметр("ВидАвтобусы",ВидАвтобусы);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПервыйУровень = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Дерево = РеквизитФормыВЗначение("ДеревоПродуктыПоОтветственным");
	Дерево.Строки.Очистить();
	
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень 							= Дерево.Строки.Добавить();
		Корень.КолонкаГруппировки		= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.ОтветственныйЗаРезерв 	= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.Количество 				= ВыборкаПервыйУровень.Количество; 
		Корень.ИмяГруппировки 			= "ОтветственныйЗаРезерв"; //используется при выборе в дереве на форме
		
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВторойУровень.Следующий() Цикл
			ДетальныеЗаписи 						= Корень.Строки.Добавить();
			ДетальныеЗаписи.КолонкаГруппировки		= ВыборкаВторойУровень.Продукт; 
			ДетальныеЗаписи.Продукт 				= ВыборкаВторойУровень.Продукт;
			ДетальныеЗаписи.Количество 				= ВыборкаВторойУровень.Количество;
			ДетальныеЗаписи.ОтветственныйЗаРезерв   = ВыборкаВторойУровень.ОтветственныйЗаРезерв;
			ДетальныеЗаписи.ИмяГруппировки 			= "Продукт"; //используется при выборе в дереве на форме
		КонецЦикла;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПродуктыПоОтветственным");
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 --

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьКоличествоПродуктов(Команда)
	
	ИмяСписка = "Список" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяКнопкиОбновленияКоличества = ИмяСписка + "ОбновитьКоличествоПродуктов";
	ИмяРеквизитаКоличествоПродуктов = "КоличествоПродуктов" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяРеквизитаКоличествоЗаказов = "КоличествоЗаказов" + Элементы.Страницы.ТекущаяСтраница.Имя; 
	
	ЭтаФорма[ИмяРеквизитаКоличествоПродуктов] = РассчитатьКоличествоСтрок(ИмяСписка);
	ЭтаФорма[ИмяРеквизитаКоличествоЗаказов] = РассчитатьКоличествоСтрок(ИмяСписка,"ЗаказНаЗаводКоличество"); //rarus bonmak 01.09.2020 16505 изменил название элемента
	Элементы[ИмяКнопкиОбновленияКоличества].Заголовок = НСтр("ru = 'Количество продуктов:'; en = 'Products quantity:'") + ЭтаФорма[ИмяРеквизитаКоличествоПродуктов];
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ТЗ = СписокВТЗнаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
			Если мВыбраныСсылкиРаспределение.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиРаспределение.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();
			СписокРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
			// rarus agar 10.08.2020 15894 ++
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеНовые" Тогда
			//Если мВыбраныСсылкиСвободные.Найти(СтрокаТЗ) = Неопределено Тогда
			//	мВыбраныСсылкиСвободные.Добавить(СтрокаТЗ);
			//КонецЕсли;
			//КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество();
			//СписокСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
			Если мВыбраныСсылкиСвободныеНовые.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиСвободныеНовые.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхСвободныеНовые = мВыбраныСсылкиСвободныеНовые.Количество();
			СписокСвободныеНовые.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеНовые);
		ИначеЕсли  Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеБУ" Тогда //rarus vikhle 06.08.2021 mt 17834
			Если мВыбраныСсылкиСвободныеБУ.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиСвободныеБУ.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхСвободныеБУ = мВыбраныСсылкиСвободныеБУ.Количество();
			СписокСвободныеБУ.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеБУ);
			// rarus agar 10.08.2020 15894 --
		//rarus vikhle 06.08.2021 mt 17834 +++	
		ИначеЕсли  Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда
			Если мВыбраныСсылкиРезервSRU.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбраныСсылкиРезервSRU.Добавить(СтрокаТЗ);
			КонецЕсли;
			КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();
			СписокРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);	
		//rarus vikhle 06.08.2021 mt 17834 ---	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		мВыбраныСсылкиРаспределение.Очистить();
		КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();
		СписокРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	// rarus agar 10.08.2020 15894 ++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеНовые" Тогда
		//мВыбраныСсылкиСвободные.Очистить();
		//КоличествоВыбранныхСвободные = мВыбраныСсылкиСвободные.Количество();
		//СписокСвободные.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);
		мВыбраныСсылкиСвободныеНовые.Очистить();
		КоличествоВыбранныхСвободныеНовые = мВыбраныСсылкиСвободныеНовые.Количество();
		СписокСвободныеНовые.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеНовые);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеБУ" Тогда //rarus vikhle 11.08.2021 mt 17834 
		мВыбраныСсылкиСвободныеБУ.Очистить();
		КоличествоВыбранныхСвободныеБУ = мВыбраныСсылкиСвободныеБУ.Количество();
		СписокСвободныеБУ.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеБУ);
		// rarus agar 10.08.2020 15894 --
	//rarus vikhle 06.08.2021 mt 17834 +++	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда 
		мВыбраныСсылкиРезервSRU.Очистить();
		КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();
		СписокРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);	
	//rarus vikhle 06.08.2021 mt 17834 ---	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействияИПоиск(Команда)
	ИмяСтраницы		=	Элементы.Страницы.ТекущаяСтраница.Имя; 
	ИмяГруппыОтбора =	"ГруппаДействияПоиск"	+	ИмяСтраницы;	 
	ИмяКнопкки 		= 	"Список" + ИмяСтраницы + "ДействияИПоиск";
	Элементы[ИмяГруппыОтбора].Видимость	= НЕ Элементы[ИмяГруппыОтбора].Видимость;
	Элементы[ИмяКнопкки].Пометка		= НЕ Элементы[ИмяКнопкки].Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоКритериям(Команда)
	ИспользоватьЧислоВместоСтроки = Ложь;
	Если ТумблерПоиск = "0" Тогда 	
		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Если СокрЛП(ПолеВвода) = "" Тогда
			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПолеОтбора) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Попытка
			ЧислоПолеС = Число(ПолеС);
			ЧислоПолеПо = Число(ПолеПо);
			ИспользоватьЧислоВместоСтроки = Истина;
		Исключение
			// Rarus tenkam 11.02.2022 АПК +++
			Сообщить(НСтр("ru = 'Неверные данные поиска!'; en = 'Wrong data!'"));
			Возврат;
		    // Rarus tenkam 11.02.2022 АПК ---
		КонецПопытки;
		
		Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо < ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
		ИначеЕсли ИспользоватьЧислоВместоСтроки Тогда 	
			Если ЧислоПолеПо < ЧислоПолеС Тогда
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	СнятьФлажки(Команды.СнятьФлажки); //rarus agar 22.03.2021 17501 +-
	
	ПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры

//ИЗМЕНЕНИЕ ЛОКАЛЬНОГО СТАТУСА
&НаКлиенте
Процедура ИзменитьЛокальныйСтатус(Команда)
	
	// rarus agar 15.02.2021 17225 ++
	
	//ТекущаяСтраница		=	Элементы.Страницы.ТекущаяСтраница.Имя;
	//// rarus agar 10.08.2020 15894 ++
	////ЛокальныйСтатус		=	?(ТекущаяСтраница = "Распределение", ЛокальныйСтатусРаспределение, ЛокальныйСтатусСвободные);
	////ВыбранныеИзделия	=	?(ТекущаяСтраница = "Распределение", мВыбраныСсылкиРаспределение, мВыбраныСсылкиСвободные);
	//Если ТекущаяСтраница = "Распределение" Тогда
	//	ЛокальныйСтатус = ЛокальныйСтатусРаспределение;
	//ИначеЕсли ТекущаяСтраница = "СвободныеНовые" Тогда
	//	ЛокальныйСтатус = ЛокальныйСтатусСвободныеНовые;
	//Иначе
	//	ЛокальныйСтатус = ЛокальныйСтатусСвободныеБУ;
	//КонецЕсли;
	//Если ТекущаяСтраница = "Распределение" Тогда
	//	ВыбранныеИзделия = мВыбраныСсылкиРаспределение;
	//ИначеЕсли ТекущаяСтраница = "СвободныеНовые" Тогда
	//	ВыбранныеИзделия = мВыбраныСсылкиСвободныеНовые;
	//Иначе
	//	ВыбранныеИзделия = мВыбраныСсылкиСвободныеБУ;
	//КонецЕсли;
	//// rarus agar 10.08.2020 15894 --
	//Если ЛокальныйСтатус.Пустая() Тогда
	//	Сообщить(НСтр("ru = 'Не заполнен статус!'; en = 'Local status is not filled'"));
	//ИначеЕсли ВыбранныеИзделия.Количество() = 0 Тогда
	//	Сообщить(НСтр("ru = 'Не выбраны продукты!'; en = 'No products selected'"));
	//Иначе	
	//	ИзменитьЛокальныйСтатусНаСервере(ВыбранныеИзделия,ЛокальныйСтатус);
	//КонецЕсли;	
	
	//rarus vikhle 16.02.2021 mt 17209 +++
	Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьИзменениеСтатусовПродуктов") Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение локальных статусов продуктов.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 16.02.2021 mt 17209 ---
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница.Имя;
	
	Если ТекущаяСтраница = "Распределение" Тогда
		ЛокальныйСтатус  = ЛокальныйСтатусРаспределение;
		ВыбранныеИзделия = мВыбраныСсылкиРаспределение;
		
		ТекстВопроса = Нстр("ru = 'Поменять статус с NEW на OPEN?'; en = 'Change status from NEW to OPEN?'");
	ИначеЕсли ТекущаяСтраница = "СвободныеНовые" Тогда
		ЛокальныйСтатус  = ЛокальныйСтатусСвободныеНовые;
		ВыбранныеИзделия = мВыбраныСсылкиСвободныеНовые;
		
		ТекстВопроса = Нстр("ru = 'Поменять статус с OPEN на NEW?'; en = 'Change status from OPEN to NEW?'");
	Иначе
		ЛокальныйСтатус  = ЛокальныйСтатусСвободныеБУ;
		ВыбранныеИзделия = мВыбраныСсылкиСвободныеБУ;
		
		ТекстВопроса = Нстр("ru = 'Поменять статус с OPEN на NEW?'; en = 'Change status from OPEN to NEW?'");
	КонецЕсли;
	
	Если ЛокальныйСтатус.Пустая() Тогда
		Сообщить(НСтр("ru = 'Не заполнен статус!'; en = 'Local status is not filled'"));
		Возврат;
	ИначеЕсли ВыбранныеИзделия.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Не выбраны продукты!'; en = 'No products selected'"));
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЛокальныйСтатус",  ЛокальныйСтатус);
	ДополнительныеПараметры.Вставить("ВыбранныеИзделия", ВыбранныеИзделия);
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ИзменитьЛокальныйСтатусЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	// rarus agar 15.02.2021 17225 --
	
КонецПроцедуры

// rarus agar 15.02.2021 17225 ++
&НаКлиенте
Процедура ИзменитьЛокальныйСтатусЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ИзменитьЛокальныйСтатусНаСервере(ДополнительныеПараметры.ВыбранныеИзделия, ДополнительныеПараметры.ЛокальныйСтатус);
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту"));
	КонецЕсли;
	
КонецПроцедуры
// rarus agar 15.02.2021 17225 --

//ОТКРЫТИЕ ОТЧЕТОВ
&НаКлиенте
Процедура ОткрытьDeliveriesReport(Команда)
	ОткрытьФорму("Отчет.Scan_DeliveriesReport.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderBookStatistics(Команда)
	ОткрытьФорму("Отчет.Scan_OrderBookStatistics.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderDeviation(Команда)
	ОткрытьФорму("Отчет.Scan_OrderDeviation.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderIntakeAndOrderBook(Команда)
	ОткрытьФорму("Отчет.Scan_OrderIntakeAndOrderBook.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderIntake(Команда)
	ОткрытьФорму("Отчет.Scan_OrderIntake.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсторияПеремещенийИзделий(Команда)
	ОткрытьФорму("Отчет.Scan_ИсторияПеремещенийИзделий.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПоискПоКритериям(Команда)
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры

//rarus vikhle 26.08.2020 mt 16274 +++
&НаКлиенте
Процедура ОткрытьСписокОтгрузок(Команда)
	ОткрытьФорму("Отчет.Scan_СписокОтгрузок.Форма");
КонецПроцедуры
//rarus vikhle 26.08.2020 mt 16274 ---

//rarus kabany 26.04.2021 17666 +++
&НаКлиенте
Процедура ОткрытьОтчетПлановыеЦеныПродажиШасси(Команда)
	ОткрытьФорму("Отчет.Scan_ОтчетПоПлановымЦенамПродажиШасси.Форма");
КонецПроцедуры
//rarus kabany 26.04.2021 17666 ---

&НаКлиенте
Процедура ОткрытьМониторПродаж(Команда) //rarus bonmak 16459 07.12.2020 ++
	ОткрытьФорму("Обработка.Scan_МониторыПродаж.Форма",,,,,,, РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры //rarus bonmak 16459 07.12.2020 --

//МОНИТОРЫ

&НаКлиенте
Процедура ПродуктыПоМенеджерам(Команда)
	ИмяЭлементаГруппы = "ГруппаПродуктыПоМенеджерам" + Элементы.Страницы.ТекущаяСтраница.Имя;
	Элементы[ИмяЭлементаГруппы].Видимость = НЕ Элементы[ИмяЭлементаГруппы].Видимость;
	//rarus vikhle 21.05.2021 mt 17661 +++
	ИмяСписка = "Список" + Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяКнопки = ИмяСписка + "ПродуктыПоМенеджерам";
	Элементы[ИмяКнопки].Пометка = НЕ Элементы[ИмяКнопки].Пометка; 
	//rarus vikhle 21.05.2021 mt 17661 ---	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоПродуктыПоМенеджерам(Команда)
	
	ЗаполнитьДеревоПродуктыПоМенеджерам(Элементы.Страницы.ТекущаяСтраница.Имя);//rarus vikhle 20.05.2021 mt 17661
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВМонитор(Команда)//rarus pechek 25.06.2020 mantis 15894 +++

	МассивВыбранныхСтрок = Элементы.ЗаявкиНаОтгрузку.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		ДатаОтгрузки = ОбщегоНазначенияКлиент.ДатаСеанса();
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));                            
		Возврат;
	Иначе
		ДатаОтгрузки = Элементы.ЗаявкиНаОтгрузку.ТекущиеДанные.ДатаОтгрузки;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ДатаОтгрузки", ДатаОтгрузки);
	ОткрытьФорму("Обработка.Scan_МониторБронированияОтгрузок.Форма",ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

//rarus vikhle 06.11.2020 mt 16723 +++
&НаКлиенте
Процедура СоздатьЗаявкуНаСклад(Команда)
	
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
//rarus vikhle 06.11.2020 mt 16723 ---

//rarus vikhle 05.06.2020 mt 15894 ---
//rarus bonmak 09.08.2021 16834 ++
//rarus agar 11.09.2020 15696 ++
//&НаКлиенте
//Процедура СоздатьНаОснованииСоглашенияЗапрос(Команда)
//	
//	МассивВыбранныхСтрок = Элементы.СоглашенияОПоставке.ВыделенныеСтроки;
//	
//	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
//		Сообщить(НСтр("ru = 'Выберите документ'; en = 'Select document'"));
//		Возврат;
//	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
//		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));
//		Возврат;
//	Иначе
//		ТекущийДокСоглашениеОПоставке = Элементы.СоглашенияОПоставке.ТекущаяСтрока;
//		ПараметрыФормы = Новый Структура("Основание", ТекущийДокСоглашениеОПоставке);
//		ОткрытьФорму("Документ.Scan_ЗапросНаНадстройки.ФормаОбъекта", ПараметрыФормы);
//	КонецЕсли;

//КонецПроцедуры
//rarus agar 11.09.2020 15696 --
//rarus bonmak 09.08.2021 16834 --
&НаКлиенте
Процедура ПродуктыПоОтветственным(Команда) //rarus vikhle 05.08.2021 mt 17834 +++
	
	Элементы.ГруппаПродуктыПоОтветственным.Видимость			= НЕ Элементы.ГруппаПродуктыПоОтветственным.Видимость;
	Элементы.СписокРезервSRUПродуктыПоОтветственным.Пометка		= НЕ Элементы.СписокРезервSRUПродуктыПоОтветственным.Пометка;
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаКлиенте
Процедура ОбновитьДеревоПродуктыПоОтветственным(Команда) //rarus vikhle 06.08.2021 mt 17834 +++ 
	
	ЗаполнитьДеревоПродуктыПоОтветственнымНаСервере();
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура СоздатьЗаявкуНаСОПSRU(Команда) //rarus vikhle 11.08.2021 mt 17834 +++
	
	ОчиститьСообщения();
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	// Проверка на интерактивно добавленную страницу
	Если ТекущаяСтраница = Неопределено Тогда
		Возврат;		
	КонецЕсли;	
	
	МассивСсылок = ?(ТекущаяСтраница = Элементы.СвободныеНовые, мВыбраныСсылкиСвободныеНовые, мВыбраныСсылкиСвободныеБУ);
	
	ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов();
	// Установим Ложь у реквизитов, которые не нужно проверять
	ПроверяемыеРеквизиты.МодельПродукта			 = Ложь;
	ПроверяемыеРеквизиты.СпецификацияПродукта	 = Ложь;
	ПроверяемыеРеквизиты.ТипСпецификации		 = Ложь;
	ПроверяемыеРеквизиты.СтандартнаяСпецификация = Ложь; //rarus vikhle 21.09.2021 mt 18298
	МожноСоздатьЗаявку = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(МассивСсылок, ПроверяемыеРеквизиты);
	
	Если НЕ МожноСоздатьЗаявку Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ТипЗаявки",			ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU"));
	ДанныеЗаполнения.Вставить("ЗаявкаНаБУПродукты", ТекущаяСтраница = Элементы.СвободныеБУ);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", 		ДанныеЗаполнения);
	ПараметрыФормы.Вставить("СписокПродуктов",	МассивСсылок);
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияЗаявки",ЭтотОбъект, ТекущаяСтраница);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",ПараметрыФормы,,,,,Оповещение);
				
	СнятьФлажки(Команды.СнятьФлажки);

КонецПроцедуры //rarus vikhle 11.08.2021 mt 17834 ---

&НаКлиенте
Процедура ПослеЗакрытияЗаявки(Результат, Страница) Экспорт //rarus vikhle 23.07.2021 mt 17834 +++ 
	
	Если Страница = Элементы.СвободныеНовые Тогда
		Элементы.СписокСвободныеНовые.Обновить();
	ИначеЕсли Страница = Элементы.СвободныеБУ Тогда 
		Элементы.СписокСвободныеБУ.Обновить();	
	ИначеЕсли Страница = Элементы.РезервSRU Тогда
		Элементы.СписокРезервSRU.Обновить();
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 23.07.2021 mt 17834 ---

&НаКлиенте
Процедура СоздатьЗаявкуНаСОП(Команда) //rarus vikhle 12.08.2021 mt 17834 +++
	
	ОчиститьСообщения();
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	// Проверка на интерактивно добавленную страницу
	Если ТекущаяСтраница = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	Если мВыбраныСсылкиРезервSRU.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны продукты'"));
		Возврат;
	КонецЕсли;
	
	ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов();
	МожноСоздатьЗаявку = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(мВыбраныСсылкиРезервSRU, ПроверяемыеРеквизиты);
	
	Если НЕ МожноСоздатьЗаявку Тогда
		Возврат;
	КонецЕсли;
	
	Основание = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(мВыбраныСсылкиРезервSRU[0], "СоглашениеОПоставке");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокПродуктов",	мВыбраныСсылкиРезервSRU);
	ПараметрыФормы.Вставить("Основание", 		Основание);
	ПараметрыФормы.Вставить("СозданиеЗаявкиИзРМ", Истина); // rarus tenkam 17.08.2021 mantis 17834 + 
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияЗаявки", ЭтотОбъект, ТекущаяСтраница);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",ПараметрыФормы,,,,,Оповещение);
	
	СнятьФлажки(Команды.СнятьФлажки);
	
КонецПроцедуры //rarus vikhle 12.08.2021 mt 17834 ---

#КонецОбласти
// rarus tenkam 27.05.2021 mantis 17742 ---