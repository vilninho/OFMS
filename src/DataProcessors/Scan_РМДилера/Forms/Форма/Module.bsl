&НаКлиенте
Перем ВыбранныеПродуктыНовые;
&НаКлиенте
Перем ВыбранныеПродуктыБУ;
&НаКлиенте
Перем мКритерииПоискаПоКоридору; //rarus bonmak 25.01.2021 17090
&НаКлиенте
Перем мКритерииПоискаПоКоридоруМоиПродукты; //rarus ozhnik 17366 23.03.2021 + 
&НаКлиенте
Перем мВыбраныСсылкиМоиПродукты; //rarus ozhnik 17366 18.03.2021 +
&НаКлиенте
Перем ВыбранныеМоиПродукты; //rarus ozhnik 17366 18.03.2021 + 
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	КомпанииПользователя = КомпанииПользователя();	
	ОсновнаяКомпанияПользователя = КомпанияПользователяОсновная(); //rarus ozhnik 17473 25.03.2021 + 
	//rarus ozhnik 17473 25.03.2021 + 
	//МоиПродукты.Параметры.УстановитьЗначениеПараметра("КомпанииПользователя", КомпанииПользователя);
	//СпециальныеУсловия.Параметры.УстановитьЗначениеПараметра("КомпанииПользователя", КомпанииПользователя);
	МоиПродукты.Параметры.УстановитьЗначениеПараметра("КомпанииПользователя", КомпанииПользователя);
	СпециальныеУсловия.Параметры.УстановитьЗначениеПараметра("КомпанииПользователя", КомпанииПользователя);
	СвободныеНовые.Параметры.УстановитьЗначениеПараметра("КомпанииПользователя", КомпанииПользователя); //rarus vikhle 14.02.2023 m 19839
	//rarus ozhnik 17473 25.03.2021 + 
	ЗаявкиНаОтгрузку.Параметры.УстановитьЗначениеПараметра("КомпанииПользователя", КомпанииПользователя); //rarus bonmak 25.01.2021 17090
	СоглашенияОПоставке.Параметры.УстановитьЗначениеПараметра("КомпанииПользователя", КомпанииПользователя); //rarus agar 26.02.2021 17299 +-
	
	// rarus tenkam 24.08.2020 mantis 16422 +++
	ВидГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	//rarus bonmak 25.01.2021 17090 ++
	БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвободныеНовые, "ВидПродукта", ВидГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвободныеБУ,    "ВидПродукта", ВидГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	//rarus bonmak 25.01.2021 17090 --
	МоиПродукты.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ВидГрузовыеАвтомобили);
	СвободныеНовые.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ВидГрузовыеАвтомобили);
	СвободныеБУ.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ВидГрузовыеАвтомобили);
	// rarus tenkam 24.08.2020 mantis 16422 ---
	
	// rarus kabany 09.06.2021 17891 +++	
	МоиПродукты.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата()
	СвободныеНовые.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата()
	// rarus kabany 09.06.2021 17891 ---
	
	//rarus vikhle 02.12.2020 mt 16181 +++
	МассивСтатусов = Новый Массив;
	//МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПроектЗаявкиНаСОП);//rarus vikhle 26.01.2021 mt 16929
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	СпециальныеУсловия.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов);
	//rarus vikhle 02.12.2020 mt 16181 ---
	
	СписокКомпаний	 = Новый СписокЗначений;
	СписокКомпаний.ЗагрузитьЗначения(КомпанииПользователя);
	
	ЗагрузитьСписокКомпанийВОтборПоДилеру(СоглашенияОПоставке, СписокКомпаний);
	//ЗагрузитьСписокКомпанийВОтборПоДилеру(МоиПродукты, СписокКомпаний); //rarus ozhnik 17473 25.03.2021 + 
	ЗагрузитьСписокКомпанийВОтборПоДилеру(ЗаявкиНаОтгрузку,СписокКомпаний); //rarus pechek 24.06.2020 mantis 15893
	//rarus ozhnik 17473 25.03.2021 + 
	СписокКомпанийОсновная	 = Новый СписокЗначений;
	СписокКомпанийОсновная.ЗагрузитьЗначения(ОсновнаяКомпанияПользователя);
	ЗагрузитьСписокКомпанийВОтборПоДилеру(МоиПродукты, СписокКомпанийОсновная);
	ЗагрузитьСписокКомпанийВОтборПоДилеру(СпециальныеУсловия, СписокКомпанийОсновная);
	
	
	//rarus bonmak 25.01.2021 17090 ++
	Элементы.ГруппаОтборСтраница_СвободныеНовые.Видимость = Ложь;
	Элементы.ГруппаОтборСтраница_СвободныеБУ.Видимость    = Ложь;
	Элементы.ГруппаОтборСтраница_МоиПродукты.Видимость    = Ложь; //rarus ozhnik 17366 17.03.2021 + 
	КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия;
	ТумблерПоиск = "0";  
	УправлениеДиалогом(); 
	//rarus bonmak 25.01.2021 17090 --
	ОбновитьСегментыСвободныеНовые();
	ОбновитьСегментыСвободныеБУ();
	ОбновитьСегментыМоиПродукты();
	
	ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(); //rarus pechek 30.06.2020 mantis 16201	
	ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре(); //rarus agar 29.12.2020 17025 +-
	
	// Rarus tenkam 13.10.2021 mantis 17822 +++
	ЗапросыНаНадстройки.Параметры.УстановитьЗначениеПараметра("КомпанииПользователя", КомпанииПользователя);
	ВидДилераПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.АвторизованныйПользователь(),"ВидДилера");
	Если ВидДилераПользователя = ПредопределенноеЗначение("Перечисление.Scan_ВидыДилеров.Собственный") Тогда
		Элементы.Страница_ЗапросыНаНадстройки.Видимость = Истина;
		Элементы.СоглашенияОПоставкеСоздатьЗапросНаНадстройки.Видимость = Истина;
	Иначе
		Элементы.Страница_ЗапросыНаНадстройки.Видимость = Ложь;
		Элементы.СоглашенияОПоставкеСоздатьЗапросНаНадстройки.Видимость = Ложь;
	
	КонецЕсли;
	// Rarus tenkam 13.10.2021 mantis 17822 ---
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 03.03.2021 mt 17355
	
	ВыбранныеПродуктыНовые 	= Новый Массив;
	ВыбранныеПродуктыБУ 	= Новый Массив;
	ВыбранныеМоиПродукты	= Новый Массив; //rarus ozhnik 17366 18.03.2021 + 
	
	СвободныеНовые.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродуктыНовые",	ВыбранныеПродуктыНовые);
	СвободныеБУ.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродуктыБУ",		ВыбранныеПродуктыБУ);
	МоиПродукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеМоиПродукты",		ВыбранныеМоиПродукты);
	
	//rarus bonmak 25.01.2021 17090 ++
	мКритерииПоискаПоКоридору = ПолучитьМассивКритериевОтбораПоКоридоруЗначений();
	мКритерииПоискаПоКоридоруМоиПродукты = ПолучитьМассивКритериевОтбораПоКоридоруЗначенийМоиПродукты(); //rarus ozhnik 17366 23.03.2021 + 
	Элементы.ПолеОтбораПоКоридоруСтраница_СвободныеНовые.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоКоридоруСтраница_СвободныеБУ.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	//rarus bonmak 25.01.2021 17090 --
	Элементы.ПолеОтбораПоКоридоруСтраница_МоиПродукты.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридоруМоиПродукты);//rarus ozhnik 17366 23.03.2021 + 
	
	Элементы.ДеревоСегментыСвободныеНовые.Видимость 	= Ложь;
	Элементы.ДеревоСегментыСвободныеБУ.Видимость 		= Ложь;
	Элементы.ДеревоСегментыМоиПродукты.Видимость 		= Ложь; //rarus ozhnik 17366 18.03.2021 + 
	Элементы.МоиПродукты_КонтрольныеТочки.Видимость		= Ложь; //rarus ozhnik 17366 18.03.2021 + 
	
	ОтборПродуктНовыйБУ = "НовыйИБУ";
	УстановитьОтборПоСостояниюПродукта();
	
	//ОтборПродуктПроданНЕПродан = "НЕПродан"; //rarus vikhle 08.07.2021 17717 закомментировал
	СпецОтборыДилера = "НеОтгруженоДилеру";//rarus vikhle 08.07.2021 17717
	
	УстановитьСпецОтборДилера();
	
	//rarus ozhnik 17366 18.03.2021 + 
	ИнициализироватьПеременныеИПараметрыСписков();
	ОбновитьКоличествоПоТекущейСтранице();
	//rarus ozhnik 17366 18.03.2021 -
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивКритериевОтбораПоКоридоруЗначений() //rarus bonmak 25.01.2021 17090 ++
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	МассивКолонокОтбора.Добавить("№ Шасси");
	МассивКолонокОтбора.Добавить("DD");
	МассивКолонокОтбора.Добавить("DD2");
	Возврат МассивКолонокОтбора;
КонецФункции //rarus bonmak 25.01.2021 17090 --

&НаКлиенте
Функция ПолучитьМассивКритериевОтбораПоКоридоруЗначенийМоиПродукты() //rarus ozhnik 17366 23.03.2021 + 	
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	МассивКолонокОтбора.Добавить("№ Шасси");
	Возврат МассивКолонокОтбора;
КонецФункции
#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура СвободныеНовыеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыборСводобныеНовые(Поле, СтандартнаяОбработка);  //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
КонецПроцедуры

&НаКлиенте
Процедура СвободныеБУВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыборСвободныеБУ(Поле, СтандартнаяОбработка); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-

КонецПроцедуры

&НаКлиенте
Процедура МоиПродуктыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыборМоиПродукты(Поле, СтандартнаяОбработка); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +- //rarus ozhnik 17366 18.03.2021 + 

КонецПроцедуры

&НаКлиенте
Процедура ОтборПродуктНовыйБУПриИзменении(Элемент)
	
	УстановитьОтборПоСостояниюПродукта(); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
КонецПроцедуры

//rarus vikhle 08.07.2021 17717 +++ закомментировал
//&НаКлиенте
//Процедура ОтборПродуктПроданНЕПроданПриИзменении(Элемент)
//	
//	УстановитьОтборПоСостояниюПродажиПродукта(); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
//	
//КонецПроцедуры
//rarus vikhle 08.07.2021 17717 ---

&НаКлиенте
Процедура ДеревоСегментыСвободныеНовыеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СегментыПоМоделямВыбор(СтандартнаяОбработка, Элемент); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСегментыСвободныеБУВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СегментыПоМоделямВыбор(СтандартнаяОбработка, Элемент); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСегментыМоиПродуктыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СегментыПоМоделямВыбор(СтандартнаяОбработка, Элемент); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашенияОПоставкеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыборСоглашенияОПоставке(ВыбраннаяСтрока, СтандартнаяОбработка); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-

КонецПроцедуры

//rarus agar 18.08.2020 16138 ++
&НаСервереБезКонтекста
Процедура УстановитьОформлениеЯчейкиЦветКабины(Строки)
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	Для Каждого СтрокаСписка Из Строки Цикл
		Если Не СтрокаСписка.Значение.Данные.ЦветКабины.Пустая() Тогда
			ЦветФона = СтрокаСписка.Значение.Данные.ЦветКабины.ЦветФона.Получить();
			Если ЦветФона <> ЧерныйЦвет И НЕ СтрокаСписка.Значение.Оформление.Получить("ЦветКабины") = Неопределено Тогда //rarus vikhle 12.03.2021 mt 17405
					СтрокаСписка.Значение.Оформление["ЦветКабины"].УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СвободныеНовыеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СвободныеБУПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры
//rarus agar 18.08.2020 16138 --

//rarus agar 18.08.2020 16138 ++
&НаСервереБезКонтекста
Процедура МоиПродуктыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры
//rarus agar 18.08.2020 16138 --

&НаСервере
Процедура УправлениеДиалогом() //rarus bonmak 25.01.2021 17090 ++
	Если ТумблерПоиск = "0" Тогда
		Элементы.ГруппаОтборПоСпискуСтраница_СвободныеНовые.Видимость = Истина;
		Элементы.ГруппаОтборПоКоридоруЗначенийСтраница_СвободныеНовые.Видимость = Ложь;
		Элементы.ГруппаОтборПоСпискуСтраница_СвободныеБУ.Видимость = Истина;
		Элементы.ГруппаОтборПоКоридоруЗначенийСтраница_СвободныеБУ.Видимость = Ложь;
		//rarus ozhnik 17366 17.03.2021 + 
		Элементы.ГруппаОтборПоСпискуСтраница_МоиПродукты.Видимость = Истина;
		Элементы.ГруппаОтборПоКоридоруЗначенийСтраница_МоиПродукты.Видимость = Ложь;
		//rarus ozhnik 17366 17.03.2021 -
		ПолеС = Неопределено;
		ПолеПо = Неопределено;
		ПолеОтбора = "";
	Иначе
		Элементы.ГруппаОтборПоСпискуСтраница_СвободныеНовые.Видимость = Ложь;
		Элементы.ГруппаОтборПоКоридоруЗначенийСтраница_СвободныеНовые.Видимость = Истина;
		Элементы.ГруппаОтборПоСпискуСтраница_СвободныеБУ.Видимость = Ложь;
		Элементы.ГруппаОтборПоКоридоруЗначенийСтраница_СвободныеБУ.Видимость = Истина;
		//rarus ozhnik 17366 17.03.2021 + 
		Элементы.ГруппаОтборПоСпискуСтраница_МоиПродукты.Видимость = ложь;
		Элементы.ГруппаОтборПоКоридоруЗначенийСтраница_МоиПродукты.Видимость = истина;
		//rarus ozhnik 17366 17.03.2021 -
		ПолеВвода = "";
		КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.ПустаяСсылка();
	КонецЕсли; 	
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаКлиенте
Процедура ДействияИПоиск(Команда) //rarus bonmak 25.01.2021 17090 ++
	ИмяСтраницы		=	Элементы.Страницы.ТекущаяСтраница.Имя; 
	ИмяГруппыОтбора =	"ГруппаОтбор"	+	ИмяСтраницы;	 
	ИмяКнопкки 		= 	"" + ИмяСтраницы + "ДействияИПоиск";
	Элементы[ИмяГруппыОтбора].Видимость	= НЕ Элементы[ИмяГруппыОтбора].Видимость;
	Элементы[ИмяКнопкки].Пометка		= НЕ Элементы[ИмяКнопкки].Пометка;
	
	//rarus ozhnik 17366 18.03.2021 + 
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		Элементы.МоиПродукты_КонтрольныеТочки.Видимость = Элементы[ИмяКнопкки].Пометка;
		ОбновитьСписокКонтрольныхТочек(Элементы[ИмяКнопкки].Пометка);
		
	КонецЕсли; 
	//rarus ozhnik 17366 18.03.2021 -
	
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаКлиенте
Процедура ТумблерПоискСвободныеБУПриИзменении(Элемент) //rarus bonmak 25.01.2021 17090 ++
	УправлениеДиалогом();
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаКлиенте
Процедура ТумблерПоискСвободныеНовыеПриИзменении(Элемент) //rarus bonmak 25.01.2021 17090 ++ 
	УправлениеДиалогом();
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаКлиенте
Процедура ПолеОтбораПоКоридоруСвободныеНовыеПриИзменении(Элемент) //rarus bonmak 25.01.2021 17090 ++
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

//rarus ozhnik 17366 17.03.2021 + 
&НаКлиенте
Процедура ПолеОтбораПоКоридоруМоиПродуктыПриИзменении(Элемент)
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
КонецПроцедуры
//rarus ozhnik 17366 17.03.2021 -
&НаКлиенте
Процедура ПолеОтбораПоКоридоруСвободныеБУПриИзменении(Элемент) //rarus bonmak 25.01.2021 17090 ++
	ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент);
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаКлиенте
Процедура ПолеОтбораПоКоридоруПриИзмененииУниверсальная(Элемент)//rarus bonmak 25.01.2021 17090 ++ 
	МассивИменСтраниц = Новый Массив;
	МассивИменСтраниц.Добавить("Страница_СвободныеНовые");
	МассивИменСтраниц.Добавить("Страница_СвободныеБУ");
	МассивИменСтраниц.Добавить("Страница_МоиПродукты"); //rarus ozhnik 17366 23.03.2021 + 
	Для Каждого Страница ИЗ МассивИменСтраниц Цикл
		ИмяПоляС = "ПолеС" + Страница;
		ИмяПоляПо = "ПолеПо" + Страница;
		Если Элемент.ТекстРедактирования = "№ Заказа" ИЛИ Элемент.ТекстРедактирования = "№ Шасси" Тогда  
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Строка");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Иначе
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Дата");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Дата");
		КонецЕсли;
	КонецЦикла;	
	ПолеС = Неопределено;
	ПолеПо = Неопределено;
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

#КонецОбласти

#Область Вспомогательные

&НаКлиенте
Процедура ПоискПоКритериям(Команда) //rarus bonmak 25.01.2021 17090 ++
	ИспользоватьЧислоВместоСтроки = Ложь;
	Если ТумблерПоиск = "0" Тогда 	
		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Если СокрЛП(ПолеВвода) = "" Тогда
			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПолеОтбора) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Попытка
			ЧислоПолеС = Число(ПолеС);
			ЧислоПолеПо = Число(ПолеПо);
			ИспользоватьЧислоВместоСтроки = Истина;
		Исключение
			// Rarus tenkam 11.02.2022 АПК +++
			Сообщить(НСтр("ru = 'Неверные данные поиска!'; en = 'Wrong data!'"));
			Возврат;
		    // Rarus tenkam 11.02.2022 АПК ---
		КонецПопытки;
		
		Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо < ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
		ИначеЕсли ИспользоватьЧислоВместоСтроки Тогда 	
			Если ЧислоПолеПо < ЧислоПолеС Тогда
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	УбратьВыделениеВсехСтрокДинамическогоСписка(); //rarus agar 22.03.2021 17501 +-
	
	ПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаСервере
Процедура ПоискПоКритериямНаСервере(Страница) //rarus bonmak 25.01.2021 17090 ++
	ИмяСписка = ИмяДинамическогоСпискаТекущейСтраницы();
	
	Если ТумблерПоиск = "0" Тогда  
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
		МассивПодстрокБезИзменений = Новый Массив;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрокБезИзменений, МассивПодстрок, Истина);
		//преобразование массива, чтобы находить заказы по номеру без нулей
		Индекс = -1;
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;	
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (7 - КолВоЗнаковЧисло) Цикл  // 7-длина номера шасси  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок, МассивПодстрокБезИзменений, Истина);
		
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			ЛевоеЗначение = "ЗаказНаЗаводСсылка.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			ЛевоеЗначение = "НомерПродукта";  
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.МодельПродукта Тогда
			ЛевоеЗначение = "Модель.Наименование";
		КонецЕсли;
		
		ОбъектНастройки = ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
		ОбъектНастройки.Очистить();
		                                              
		НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НовыйОтбор.ПравоеЗначение = МассивПодстрок;
	Иначе
		ОбъектНастройки =  ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		ОбъектНастройки.Очистить();
		
		Если ПолеОтбора = "№ Шасси" Тогда
			ЛевоеЗначение = "НомерПродукта";
		ИначеЕсли ПолеОтбора = "№ Заказа" Тогда
			ЛевоеЗначение = "ЗаказНаЗаводСсылка.Наименование";
		Иначе
			ЛевоеЗначение = ПолеОтбора;
		КонецЕсли;
		
		Если ПолеОтбора = "№ Шасси" ИЛИ
			ПолеОтбора = "№ Заказа" Тогда
			
			СообщениеОбОшибке = "";
			ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(ЭтаФорма[ИмяСписка], ЛевоеЗначение, ПолеС, ПолеПо,,СообщениеОбОшибке);
			Если НЕ ОтборУстановлен Тогда
				Сообщить(СообщениеОбОшибке);
			КонецЕсли;
		Иначе
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеС; 	
			
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеПо;	
		КонецЕсли;
		
	КонецЕсли;
	
	//rarus vikhle 13.07.2021 17717 +++
	Если ИмяСписка = "МоиПродукты" Тогда
		УстановитьСпецОтборДилера();
		УстановитьОтборПоСостояниюПродукта();
	КонецЕсли;	
	//rarus vikhle 13.07.2021 17717 ---
	
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаКлиенте
Процедура ОтключитьПоискПоКритериям(Команда)//rarus bonmak 25.01.2021 17090 ++
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаСервере
Процедура ОтключитьПоискПоКритериямНаСервере(Страница)//rarus bonmak 25.01.2021 17090 ++
	ИмяСписка = ИмяДинамическогоСпискаТекущейСтраницы();
	ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();
	ПолеВвода = "";
	ПолеС  = Неопределено;
	ПолеПо = Неопределено;
	
	//rarus vikhle 12.07.2021 17717 +++
	Если ИмяСписка = "МоиПродукты" Тогда
		УстановитьСпецОтборДилера();
		УстановитьОтборПоСостояниюПродукта();
	КонецЕсли;	
	//rarus vikhle 12.07.2021 17717 ---
	
КонецПроцедуры //rarus bonmak 25.01.2021 17090 --

&НаКлиенте
Процедура ВыборСводобныеНовые(Знач Поле, СтандартнаяОбработка) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	Перем ВыбранныйПродукт, ПараметрыФормы, Продукт;
	
	СтандартнаяОбработка = Ложь;
	Продукт	= Элементы.СвободныеНовые.ТекущиеДанные.Продукт;
	Если Поле.Имя = "СвободныеНовыеФлаг" Тогда
		
		ВыбранныйПродукт = ВыбранныеПродуктыНовые.Найти(Продукт);
		Если ВыбранныйПродукт = Неопределено Тогда
			ВыбранныеПродуктыНовые.Добавить(Продукт);
		Иначе
			ВыбранныеПродуктыНовые.Удалить(ВыбранныйПродукт);
		КонецЕсли;
		
		КоличествоВыбранныхСвободныеНовые = ВыбранныеПродуктыНовые.Количество();
		СвободныеНовые.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродуктыНовые", ВыбранныеПродуктыНовые);	
	Иначе
		
		ПараметрыФормы = Новый Структура("Ключ, ФормаОткрытаИзРабочегоМестаДилера", Продукт, Истина);
		ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);	
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура ВыборСвободныеБУ(Знач Поле, СтандартнаяОбработка) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	СтандартнаяОбработка = Ложь;
	Продукт	= Элементы.СвободныеБУ.ТекущиеДанные.Продукт;
	Если Поле.Имя = "СвободныеБУФлаг" Тогда
		
		ВыбранныйПродукт = ВыбранныеПродуктыБУ.Найти(Продукт);
		Если ВыбранныйПродукт = Неопределено Тогда
			ВыбранныеПродуктыБУ.Добавить(Продукт);
		Иначе
			ВыбранныеПродуктыБУ.Удалить(ВыбранныйПродукт);
		КонецЕсли;
		
		КоличествоВыбранныхСвободныеБУ = ВыбранныеПродуктыБУ.Количество();
		СвободныеБУ.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродуктыБУ", ВыбранныеПродуктыБУ);	
	Иначе
		
		ПараметрыФормы = Новый Структура("Ключ, ФормаОткрытаИзРабочегоМестаДилера", Продукт, Истина);
		ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборМоиПродукты(Знач Поле, СтандартнаяОбработка) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +- //rarus ozhnik 17366 18.03.2021 + 
		
	СтандартнаяОбработка = Ложь;
	Продукт	= Элементы.МоиПродукты.ТекущиеДанные.Продукт;
	//rarus ozhnik 17366 18.03.2021 + 
	Если Поле.Имя = "МоиПродуктыФлаг" Тогда
		
		ВыбранныйПродукт = ВыбранныеМоиПродукты.Найти(Продукт);
		Если ВыбранныйПродукт = Неопределено Тогда
			ВыбранныеМоиПродукты.Добавить(Продукт);
		Иначе
			ВыбранныеМоиПродукты.Удалить(ВыбранныйПродукт);
		КонецЕсли;
		
		КоличествоВыбранныхМоиПродукты = ВыбранныеМоиПродукты.Количество();
		МоиПродукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеМоиПродукты", ВыбранныеМоиПродукты);	
	// rarus tenkam 24.05.2021 mantis 17722 +++
	ИначеЕсли Поле.Имя = "МоиПродуктыСоглашениеОПоставке" Тогда
		Заявка = Элементы.МоиПродукты.ТекущиеДанные.Заявка;
		ПоказатьЗначение(,Заявка);
	ИначеЕсли Поле.Имя = "МоиПродуктыНомерСУ" Тогда
		СсылкаСУ = Элементы.МоиПродукты.ТекущиеДанные.СсылкаСУ;
		ПоказатьЗначение(,СсылкаСУ);
	// rarus tenkam 24.0054.2021 mantis 17722 ---   		
	Иначе
		//rarus ozhnik 17366 18.03.2021 -
		ПараметрыФормы = Новый Структура("Ключ, ФормаОткрытаИзРабочегоМестаДилера", Продукт, Истина);
		ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли; //rarus ozhnik 17366 18.03.2021 + 
КонецПроцедуры

&НаКлиенте
Процедура ВыборСоглашенияОПоставке(ВыбраннаяСтрока, СтандартнаяОбработка) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
		
	СтандартнаяОбработка = Ложь;
	
	СоглашениеПринадлежитДилеруПользователя = СоглашениеПринадлежитДилеруПользователя(ВыбраннаяСтрока);
	
	ПараметрыФормы = Новый Структура("Ключ", ВыбраннаяСтрока);
	Если НЕ СоглашениеПринадлежитДилеруПользователя Тогда
		ПараметрыФормы.Вставить("ЗаблокироватьФормуОтИзменения", Истина);	
	КонецЕсли;
	
	// rarus agar 29.01.2021 ++
	//ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта", ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта", ПараметрыФормы);
	// rarus agar 29.01.2021 --
	
КонецПроцедуры

&НаСервере
Функция КомпанииПользователя() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	КомпанииСКонтрагентами = РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПараметрыСеанса.ТекущийПользователь);
	КомпанииПользователя = КомпанииСКонтрагентами.ВыгрузитьКолонку("Компания");
	Возврат КомпанииПользователя;
КонецФункции

//rarus ozhnik 17473 25.03.2021 + 
&НаСервере
Функция КомпанияПользователяОсновная() 
	КомпанииСКонтрагентами = РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПараметрыСеанса.ТекущийПользователь, истина);
	КомпанииПользователя = КомпанииСКонтрагентами.ВыгрузитьКолонку("Компания");
	Возврат КомпанииПользователя;
КонецФункции
//rarus ozhnik 17473 25.03.2021 -

&НаСервере
Функция СоглашениеПринадлежитДилеруПользователя(СоглашениеОПоставке) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	Дилер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СоглашениеОПоставке, "Дилер");
	КомпанииПользователя = КомпанииПользователя();
	ЭтоДилерПользователя = КомпанииПользователя.Найти(Дилер) <> Неопределено;
	Возврат ЭтоДилерПользователя;
КонецФункции

&НаСервере
Процедура ЗагрузитьСписокКомпанийВОтборПоДилеру(ДинамическийСписок, СписокКомпаний) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	ПолеОтбора_Дилер = Новый ПолеКомпоновкиДанных("Дилер");
	Для Каждого СтрокаОтбора Из ДинамическийСписок.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если СтрокаОтбора.ЛевоеЗначение = ПолеОтбора_Дилер Тогда
			СтрокаОтбора.ПравоеЗначение = СписокКомпаний;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция РассчитатьКоличествоЭлементовВТаблице(ИмяЭлемента) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	ИмяДинамическогоСписка		= ИмяЭлементаДинамическогоСпискаТекущейСтраницы();
	
	ТаблицаРезультат = ДинамическийСписокВТаблицуЗначений(Элементы[ИмяДинамическогоСписка], ИмяЭлемента);
	
	ТаблицаРезультат.Свернуть(ИмяЭлемента);
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, ИмяЭлемента);
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
КонецФункции

&НаСервере
Функция ИмяЭлементаДинамическогоСпискаТекущейСтраницы() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		ИмяЭлементаДинамическогоСписка = Элементы.СвободныеНовые.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
		ИмяЭлементаДинамическогоСписка = Элементы.СвободныеБУ.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МоиПродукты Тогда
		ИмяЭлементаДинамическогоСписка = Элементы.МоиПродукты.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СоглашенияОПоставке Тогда
		ИмяЭлементаДинамическогоСписка = Элементы.СоглашенияОПоставке.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СпециальныеУсловия Тогда
		ИмяЭлементаДинамическогоСписка = Элементы.СпециальныеУсловия.Имя;
	//rarus pechek 24.06.2020 mantis 15893 +++	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_ЗаявкиНаОтгрузку Тогда
		ИмяЭлементаДинамическогоСписка = Элементы.ЗаявкиНаОтгрузку.Имя;
	//rarus pechek 24.06.2020 mantis 15893 ---	
	КонецЕсли;
	
	Возврат ИмяЭлементаДинамическогоСписка;
КонецФункции

&НаСервере
Функция ИмяДинамическогоСпискаТекущейСтраницы() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		ИмяЭлементаДинамическогоСписка = "СвободныеНовые";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
		ИмяЭлементаДинамическогоСписка = "СвободныеБУ";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МоиПродукты Тогда
		ИмяЭлементаДинамическогоСписка = "МоиПродукты";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СоглашенияОПоставке Тогда
		ИмяЭлементаДинамическогоСписка = "СоглашенияОПоставке";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СпециальныеУсловия Тогда
		ИмяЭлементаДинамическогоСписка = "СпециальныеУсловия";
	//rarus pechek 24.06.2020 mantis 15893 +++	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_ЗаявкиНаОтгрузку Тогда
		ИмяЭлементаДинамическогоСписка = "ЗаявкиНаОтгрузку";
	КонецЕсли;
	//rarus pechek 24.06.2020 mantis 15893 ---	
	Возврат ИмяЭлементаДинамическогоСписка;
КонецФункции

&НаСервере
Функция ПродуктыИзДинамическогоСписка() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	ИмяЭлементаДинамическогоСписка = ИмяЭлементаДинамическогоСпискаТекущейСтраницы();
	ПродуктыТаблица = ДинамическийСписокВТаблицуЗначений(Элементы[ИмяЭлементаДинамическогоСписка], "Продукт");
	ПродуктыМассив = ПродуктыТаблица.ВыгрузитьКолонку("Продукт");
	Возврат ПродуктыМассив;
КонецФункции

//rarus vikhle 23.07.2021 mt 17834 перенес в Scan_ВспомогательныеФункцииСервер +++
//&НаСервере
//Функция МожноСоздатьСОП(ВыбранныеПродукты) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
//	
//	ЭтоПерваяСтрока			= Истина;
//	ОсновнаяСтавкаНДС		= Справочники.Scan_СтавкиНДС.ОсновнаяСтавкаНДС;//rarus vikhle 13.05.2021 mt 17733 ставка НДС по умолчанию 20%
//	
//	ПредыдущаяМарка 		= "";
//	ПредыдущаяМодель		= "";
//	ПредыдущаяСтрокаОпций	= ""; //rarus ozhnik 15893 07.09.2020 изменил на строку опций + 
//	ПроверкаУспешна 		= Истина; //rarus ozhnik 15893 08.09.2020 + 
//	ПредыдущийТипСпецификации = ""; //rarus vikhle 12.11.2020 mt 16181
//	//rarus vikhle 13.05.2021 mt 17733 +++
//	ПредыдущийПризнакБУ		= "";
//	ПредыдущаяСтавкаНДС		= ""; 
//	//rarus vikhle 13.05.2021 mt 17733 ---
//	
//	МаркиОтличаются 			= Ложь;
//	МоделиОтличаются 			= Ложь;
//	СпецификацииОтличаются 		= Ложь;
//	ТипыСпецификацииОтличаются	= Ложь;//rarus vikhle 12.11.2020 mt 16181
//	//rarus vikhle 13.05.2021 mt 17733 +++
//	ПризнакиБУОтличаются		= Ложь;
//	СтавкиНДСОтличаются			= Ложь;
//	//rarus vikhle 13.05.2021 mt 17733 ---
//	
//	
//	ИменаРеквизитовПродукта = "МаркаПродукта,МодельПродукта.Наименование,СпецификацияПродукта,ТипСпецификации,БУ,СтоимостьПродажиБУСтавкаНДС";//rarus vikhle 01.02.2021 mt 17179
//	Для Каждого Продукт Из ВыбранныеПродукты Цикл
//		
//		//rarus vikhle 01.02.2021 mt 17179 +++
//		//МаркаПродукта 			= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Продукт, "МаркаПродукта");
//		//МодельПродукта 			= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Продукт, "МодельПродукта");
//		//СпецификацияПродукта    = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Продукт, "СпецификацияПродукта");
//		//ТипСпецификации			= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Продукт, "ТипСпецификации");//rarus vikhle 12.11.2020 mt 16181
//		
//		СтруктураРеквизитов		= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Продукт,ИменаРеквизитовПродукта);
//		МаркаПродукта 			= СтруктураРеквизитов.МаркаПродукта;
//		МодельПродукта 			= СтруктураРеквизитов.МодельПродуктаНаименование;
//		СпецификацияПродукта    = СтруктураРеквизитов.СпецификацияПродукта;
//		ТипСпецификации			= СтруктураРеквизитов.ТипСпецификации;
//		//rarus vikhle 01.02.2021 mt 17179 ---
//		//rarus vikhle 13.05.2021 mt 17733 +++
//		ПризнакБУ				= СтруктураРеквизитов.БУ; 
//		СтавкаНДС				= ?(СтруктураРеквизитов.СтоимостьПродажиБУСтавкаНДС.Пустая(),ОсновнаяСтавкаНДС,СтруктураРеквизитов.СтоимостьПродажиБУСтавкаНДС); //Незаполненную ставку НДС считаем как 20% 
//		//rarus vikhle 13.05.2021 mt 17733 ---
//		
//		//rarus ozhnik 15893 07.09.2020 + 
//		СпецификацияCOW = Справочники.Scan_ВерсииБазовыхСпецификаций.НайтиПоРеквизиту("ВидСпецификации",Справочники.Scan_ВидыСпецификацийПродуктов.COWСпецификацияПодтвержденнаяЗаводом,,СпецификацияПродукта);
//		СтрокаОпций = СпецификацияCOW.Опции;
//		//rarus ozhnik 15893 07.09.2020 -
//		
//		Если НЕ ЭтоПерваяСтрока Тогда
//			Если МаркаПродукта <> ПредыдущаяМарка Тогда
//				МаркиОтличаются = Истина;
//			КонецЕсли;
//			//Если МодельПродукта <> ПредыдущаяМодель Тогда
//			Если (МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania
//				И Лев(СокрЛП(МодельПродукта),10) <> ПредыдущаяМодель) //rarus vikhle 01.02.2021 mt 17179 достаточно совпадения по первым 10 символам для марки скания				
//				ИЛИ (МаркаПродукта <> Справочники.Scan_МаркиПродуктов.Scania И МодельПродукта <> ПредыдущаяМодель) Тогда //rarus vikhle 18.02.2021 17123
//				МоделиОтличаются = Истина;
//			КонецЕсли;
//			
//			Если СтрокаОпций <> ПредыдущаяСтрокаОпций Тогда //rarus ozhnik 15893 07.09.2020 изменил на строку опций + 
//				СпецификацииОтличаются = Истина;
//			КонецЕсли;
//			//rarus vikhle 12.11.2020 mt 16181 +++
//			Если (ЗначениеЗаполнено(ТипСпецификации) ИЛИ ЗначениеЗаполнено(ПредыдущийТипСпецификации)) И ТипСпецификации <> ПредыдущийТипСпецификации Тогда
//				ТипыСпецификацииОтличаются = Истина;	
//			КонецЕсли;
//			//rarus vikhle 12.11.2020 mt 16181 ---
//			
//			//rarus vikhle 13.05.2021 mt 17733 +++
//			Если ПризнакБУ <> ПредыдущийПризнакБУ Тогда
//				ПризнакиБУОтличаются = Истина;
//			КонецЕсли;	
//			
//			Если НЕ ПризнакиБУОтличаются И ПризнакБУ Тогда
//				Если СтавкаНДС <> ПредыдущаяСтавкаНДС Тогда
//					СтавкиНДСОтличаются = Истина;
//				КонецЕсли;	
//			КонецЕсли;	
//			//rarus vikhle 13.05.2021 mt 17733 ---
//			
//		КонецЕсли; 
//		
//		ПредыдущаяМарка 			= МаркаПродукта;
//		Если МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania Тогда 
//			ПредыдущаяМодель 			= Лев(СокрЛП(МодельПродукта),10); //rarus vikhle 01.02.2021 mt 17179
//		Иначе
//			ПредыдущаяМодель 			= МодельПродукта;	
//		КонецЕсли;	
//		ПредыдущаяСтрокаОпций 		= СтрокаОпций;  //rarus ozhnik 15893 07.09.2020 изменил на строку опций + 
//		ПредыдущийТипСпецификации	= ТипСпецификации; //rarus vikhle 12.11.2020 mt 16181  
//		//rarus viklhe 13.05.2021 mt 17733 +++
//		ПредыдущийПризнакБУ			= ПризнакБУ;
//		ПредыдущаяСтавкаНДС			= СтавкаНДС;
//		//rarus viklhe 13.05.2021 mt 17733 ---
//		
//		ЭтоПерваяСтрока = Ложь;
//	КонецЦикла; 
//	
//	//ТекстОшибки = НСтр("ru = 'Соглашение о поставке нельзя создать т.к. нельзя выбирать продукты с '; en = 'A delivery agreement cannot be created because You can not choose products with '"); 
//	ТекстОшибки = НСтр("ru = 'Заявку нельзя создать т.к. нельзя выбирать продукты с '; en = 'A delivery agreement cannot be created because You can not choose products with '"); //rarus vikhle 06.11.2020 mt 16723
//	Ошибки = Новый Массив;
//	Если МаркиОтличаются Тогда
//		Ошибки.Добавить(НСтр("ru = 'разными марками'; en = 'different brands'"));	
//	КонецЕсли;
//	Если МоделиОтличаются Тогда
//		Ошибки.Добавить(НСтр("ru = 'разными моделями'; en = 'different models'"));	
//	КонецЕсли;
//	Если СпецификацииОтличаются Тогда
//		//Ошибки.Добавить(НСтр("ru = 'разными типами спецификаций'; en = 'different types of specifications'"));
//		Ошибки.Добавить(НСтр("ru = 'разными спецификациями'; en = 'different specifications'")); //rarus vikhle 12.11.2020 mt 16181
//	КонецЕсли;
//	//rarus vikhle 12.11.2020 mt 16181 +++
//	Если ТипыСпецификацииОтличаются Тогда
//		Ошибки.Добавить(НСтр("ru = 'разными типами спецификаций'; en = 'different types of specifications'"));	
//	КонецЕсли;	
//	//rarus vikhle 12.11.2020 mt 16181 ---
//	//rarus viklhe 13.05.2021 mt 17733 +++
//	Если ПризнакиБУОтличаются Тогда
//		Ошибки.Добавить(НСтр("ru = 'разными признаками БУ'; en = 'different used flags'"));	
//	КонецЕсли;	
//	Если СтавкиНДСОтличаются Тогда
//		Ошибки.Добавить(НСтр("ru = 'разными ставками НДС'; en = 'different VAT rates'"));	
//	КонецЕсли;	
//	//rarus viklhe 13.05.2021 mt 17733 ---
//	
//	
//	Если МаркиОтличаются ИЛИ МоделиОтличаются ИЛИ СпецификацииОтличаются ИЛИ ТипыСпецификацииОтличаются ИЛИ ПризнакиБУОтличаются ИЛИ СтавкиНДСОтличаются Тогда //rarus vikhle 13.05.2021 mt 17733 + ПризнакиБУОтличаются и СтавкиНДСОтличаются
//		ТекстОшибки = ТекстОшибки + СтрСоединить(Ошибки, ", ") + ".";
//		Сообщить(ТекстОшибки);
//		// Возврат Ложь; //rarus ozhnik 15893 08.09.2020 + 
//	КонецЕсли;
//	//rarus ozhnik 15893 08.09.2020 + Для спецификаций просто предупреждать, но не запрещать.
//	Если МаркиОтличаются ИЛИ МоделиОтличаются ИЛИ ТипыСпецификацииОтличаются ИЛИ ПризнакиБУОтличаются ИЛИ СтавкиНДСОтличаются Тогда //rarus vikhle 13.05.2021 mt 17733 + ПризнакиБУОтличаются и СтавкиНДСОтличаются
//		ПроверкаУспешна = ложь;
//	КонецЕсли;
//	//rarus ozhnik 15893 08.09.2020 - 

//	Возврат ПроверкаУспешна; //rarus ozhnik 15893 08.09.2020 + 
//	
//КонецФункции
//rarus vikhle 23.07.2021 mt 17834 ---

&НаСервере
Процедура УстановитьОтборПоСостояниюПродукта() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	//ИдентификаторПользовательскойНастройки = МоиПродукты.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки;
	Если ОтборПродуктНовыйБУ = "Новый" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(МоиПродукты, "БУ", Ложь, ВидСравненияКомпоновкиДанных.Равно);		
	ИначеЕсли ОтборПродуктНовыйБУ = "БУ" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(МоиПродукты, "БУ", Истина, ВидСравненияКомпоновкиДанных.Равно);			
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(МоиПродукты, "БУ");			
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьСпецОтборДилера()//rarus vikhle 09.07.2021 17717
//Процедура УстановитьОтборПоСостояниюПродажиПродукта() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	//rarus vikhle 08.07.2021 17717 +++ закомментировал
	//Если ОтборПродуктПроданНЕПродан = "Продан" Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(МоиПродукты, "ПродуктПродан", Истина, ВидСравненияКомпоновкиДанных.Равно);		
	//ИначеЕсли ОтборПродуктПроданНЕПродан = "НЕПродан" Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(МоиПродукты, "ПродуктПродан", Ложь, ВидСравненияКомпоновкиДанных.Равно);			
	//КонецЕсли;
	//rarus vikhle 08.07.2021 17717 ---
	
	//rarus vikhle 08.07.2021 17717 +++
	ГруппаОтбора = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(МоиПродукты.КомпоновщикНастроек.ФиксированныеНастройки.Отбор,
																			Нстр("ru = 'СпецОтборыДилера'"),
																			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	Если СпецОтборыДилера = "Все" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "НеОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилером", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);
	ИначеЕсли СпецОтборыДилера = "НеОтгруженоДилеру" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилером", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "НеОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Истина);
	ИначеЕсли СпецОтборыДилера = "ОтгруженоДилеру" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "НеОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилером", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Истина);	
	ИначеЕсли СпецОтборыДилера = "ИтогоPipeLineДилера" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилером", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "НеОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Истина);	
		//rarus vikhle 28.12.2021 m 18698 +++
		ПодчиненныйОтбор = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбора,
																			Нстр("ru = 'ПодчиненныеСпецОтборыДилера'"),
																			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПодчиненныйОтбор, "ОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПодчиненныйОтбор, "ОтгруженоДилером", Ложь, ВидСравненияКомпоновкиДанных.Равно,, Истина);
		//rarus vikhle 28.12.2021 m 18698 ---
		
	ИначеЕсли СпецОтборыДилера = "ОтгруженоДилером" Тогда	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "НеОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилеру", Истина, ВидСравненияКомпоновкиДанных.Равно,,Ложь);
				
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ОтгруженоДилером", Истина, ВидСравненияКомпоновкиДанных.Равно,,Истина);	
	КонецЕсли;	
	//rarus vikhle 08.07.2021 17717 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СегментыПоМоделямВыбор(СтандартнаяОбработка, Элемент) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		ИмяЭлементаСегментов 	= Элементы.ДеревоСегментыСвободныеНовые.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
		ИмяЭлементаСегментов 	= Элементы.ДеревоСегментыСвободныеБУ.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МоиПродукты Тогда
		ИмяЭлементаСегментов 	= Элементы.ДеревоСегментыМоиПродукты.Имя;
	КонецЕсли; 
	
	ИмяДинамическогоСпискаПродуктов = ИмяДинамическогоСпискаТекущейСтраницы();
	
	Если Элемент.ТекущийЭлемент.Имя = ИмяЭлементаСегментов + "Модель" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Модель) Тогда 
		//ПоказатьЗначение(,Элемент.ТекущиеДанные.Модель);
		//Перем Модель;
		Модель	= Элемент.ТекущиеДанные.Модель;
		ПараметрыФормы = Новый Структура("Ключ, ФормаОткрытаИзРабочегоМестаДилера", Модель, Истина);
		ОткрытьФорму("Справочник.Scan_МоделиПродуктов.ФормаОбъекта", ПараметрыФормы);
		//rarus kabany 08.04.2021 17596 +++
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = ИмяЭлементаСегментов +"КолонкаГруппировки"  И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Модель) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Модель);
		//rarus kabany 08.04.2021 17596 ---				
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = ИмяЭлементаСегментов + "Количество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Модель) Тогда //rarus kabany 08.04.2021 17596 +
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяДинамическогоСпискаПродуктов], "Модель", Элемент.ТекущиеДанные.Модель, ВидСравненияКомпоновкиДанных.Равно,,Истина); //rarus vikhle 12.04.2021 17717 + Использование
		Иначе
		    ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ЭтаФорма[ИмяДинамическогоСпискаПродуктов].Отбор, "Модель");	
		КонецЕсли; //rarus kabany 08.04.2021 17596 -
		// rarus agar 03.11.2020 16010 ++
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяДинамическогоСпискаПродуктов], "Продукт.СегментРынкаПродуктов", Элемент.ТекущиеДанные.Сегмент, ВидСравненияКомпоновкиДанных.Равно,,Истина);//rarus vikhle 12.04.2021 17717 + Использование
		// rarus agar 03.11.2020 16010 --
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСегментыСвободныеНовые() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(Scan_СводнаяИнформацияПоПродукту.Продукт) КАК Количество,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
				   |    ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
				   |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |	И (Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)
				   |		или Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке есть NULL)
				   //|	И Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) //rarus kabany 09.04.2021 17596 +
	               |	И Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Open)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта
				   |ИТОГИ
				   //rarus kabany 07.04.2021 17596 +
				   |	СУММА(Количество) КАК Количество
				   //rarus kabany 07.04.2021 17596 -
				   |ПО
	               |	Сегмент";
		
	//rarus kabany 07.04.2021 17596 +++		   	
	//Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ЗначениеВРеквизитФормы(Дерево, "ДеревоСегментыСвободныеНовые");
	ЭлементыДерева = ДеревоСегментыСвободныеНовые.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	ВыборкаПервыйУровень = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень = ЭлементыДерева.Добавить();
		Корень.КолонкаГруппировки = ВыборкаПервыйУровень.Сегмент;
		Корень.Сегмент = ВыборкаПервыйУровень.Сегмент; //rarus kabany 08.04.2021 17596 +
		Корень.Количество = ВыборкаПервыйУровень.Количество; 
		ЭлементыКорня = Корень.ПолучитьЭлементы();
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать();
		Пока ВыборкаВторойУровень.Следующий() Цикл
			НоваяСтрока = ЭлементыКорня.Добавить();
			НоваяСтрока.КолонкаГруппировки = ВыборкаВторойУровень.Модель;
			НоваяСтрока.Количество = ВыборкаВторойУровень.Количество;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВторойУровень); //rarus kabany 08.04.2021 17596 +
		КонецЦикла; 
	КонецЦикла; 
	//rarus kabany 07.04.2021 17596 ---
	
	Элементы.ДеревоСегментыСвободныеНовые.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать; //rarus ozhnik 14743 25.03.2021 + 
КонецПроцедуры

&НаСервере
Процедура ОбновитьСегментыСвободныеБУ() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	|	КОЛИЧЕСТВО(Scan_СводнаяИнформацияПоПродукту.Продукт) КАК Количество
	|ИЗ
	|	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	|    ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	|		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	|ГДЕ
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	|	И (Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)
	|		или Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке есть NULL)
	//|	И Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) //rarus kabany 09.04.2021 17596 +
	|	И Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	|	И Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.OPEN)
	|
	|СГРУППИРОВАТЬ ПО
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта
	|ИТОГИ
	//rarus kabany 07.04.2021 17596 +
	|	СУММА(Количество) КАК Количество
	//rarus kabany 07.04.2021 17596 -				   
	|ПО
	|	Сегмент";
	
	//rarus kabany 07.04.2021 17596 +++		   	
	//Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ЗначениеВРеквизитФормы(Дерево, "ДеревоСегментыСвободныеБУ");
	
	ЭлементыДерева = ДеревоСегментыСвободныеБУ.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	ВыборкаПервыйУровень = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень = ЭлементыДерева.Добавить();
		Корень.КолонкаГруппировки = ВыборкаПервыйУровень.Сегмент;
		Корень.Сегмент = ВыборкаПервыйУровень.Сегмент; //rarus kabany 08.04.2021 17596 +
		Корень.Количество = ВыборкаПервыйУровень.Количество; 
		ЭлементыКорня = Корень.ПолучитьЭлементы();
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать();
		Пока ВыборкаВторойУровень.Следующий() Цикл
			НоваяСтрока = ЭлементыКорня.Добавить();
			НоваяСтрока.КолонкаГруппировки = ВыборкаВторойУровень.Модель;
			НоваяСтрока.Количество = ВыборкаВторойУровень.Количество;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВторойУровень); //rarus kabany 08.04.2021 17596 +
		КонецЦикла; 
	КонецЦикла; 
	//rarus kabany 07.04.2021 17596 ---	
	Элементы.ДеревоСегментыСвободныеБУ.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать; //rarus ozhnik 14743 25.03.2021 + 
КонецПроцедуры

&НаСервере
Процедура ОбновитьСегментыМоиПродукты() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	КомпанииПользователя = КомпанииПользователя();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КомпанииПользователя", КомпанииПользователя);
	//rarus kabany 12.04.2021 17596 +++ / привел в соответсвие с запросом для списка МоиПродукты
	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Scan_СводнаяИнформацияПоПродукту.Продукт) КАК Количество,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов КАК Сегмент
	|ИЗ
	|	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	|		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	|ГДЕ
	|	Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	|	И (Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.OPEN)
	|			ИЛИ Scan_СводнаяИнформацияПоПродукту.ЛокальныйСтатусПродукта = ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.SOLD))
	|	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер В(&КомпанииПользователя)
	|	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке <> ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СегментРынкаПродуктов,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Сегмент";
	//rarus kabany 12.04.2021 17596 ---
	
	//rarus kabany 07.04.2021 17596 +++		   	
	//Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ЗначениеВРеквизитФормы(Дерево, "ДеревоСегментыМоиПродукты");	
	ЭлементыДерева = ДеревоСегментыМоиПродукты.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	ВыборкаПервыйУровень = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень = ЭлементыДерева.Добавить();
		Корень.КолонкаГруппировки = ВыборкаПервыйУровень.Сегмент;
		Корень.Сегмент = ВыборкаПервыйУровень.Сегмент; //rarus kabany 08.04.2021 17596 +
		Корень.Количество = ВыборкаПервыйУровень.Количество; 
		ЭлементыКорня = Корень.ПолучитьЭлементы();
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать();
		Пока ВыборкаВторойУровень.Следующий() Цикл
			НоваяСтрока = ЭлементыКорня.Добавить();
			НоваяСтрока.КолонкаГруппировки = ВыборкаВторойУровень.Модель;
			НоваяСтрока.Количество = ВыборкаВторойУровень.Количество;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВторойУровень); //rarus kabany 08.04.2021 17596 +
		КонецЦикла; 
	КонецЦикла; 
	//rarus kabany 07.04.2021 17596 ---	
	Элементы.ДеревоСегментыМоиПродукты.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать; //rarus ozhnik 14743 25.03.2021 + 
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоПродуктов() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		КоличествоЗаказовСвободныеНовые 	= РассчитатьКоличествоЭлементовВТаблице("ЗаказНаЗаводСсылка");
		КоличествоПродуктовСвободныеНовые 	= РассчитатьКоличествоЭлементовВТаблице("Продукт");
		Элементы.СвободныеНовыеКоличествоПродуктов.Заголовок = НСтр("ru = 'Количество продуктов: '; en = 'Product count: '") + КоличествоПродуктовСвободныеНовые;	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
		КоличествоЗаказовСвободныеБУ 	= РассчитатьКоличествоЭлементовВТаблице("ЗаказНаЗаводСсылка");
		КоличествоПродуктовСвободныеБУ 	= РассчитатьКоличествоЭлементовВТаблице("Продукт");
		Элементы.СвободныеБУКоличествоПродуктов.Заголовок = НСтр("ru = 'Количество продуктов: '; en = 'Product count: '") + КоличествоПродуктовСвободныеБУ;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МоиПродукты Тогда
		КоличествоЗаказовМоиПродуктыДилер 	= РассчитатьКоличествоЭлементовВТаблице("ЗаказНаЗаводСсылка");
		КоличествоПродуктовМоиПродукты 	= РассчитатьКоличествоЭлементовВТаблице("Продукт");
		Элементы.МоиПродуктыКоличествоПродуктов.Заголовок = НСтр("ru = 'Количество продуктов: '; en = 'Product count: '") + КоличествоПродуктовМоиПродукты;	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СоглашенияОПоставке Тогда
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СпециальныеУсловия Тогда
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеСтрокиДинамическогоСписка() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-

	ПродуктыМассив = ПродуктыИзДинамическогоСписка();
	Для Каждого ПродуктСсылка Из ПродуктыМассив Цикл
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
			Если ВыбранныеПродуктыНовые.Найти(ПродуктСсылка) = Неопределено Тогда
				ВыбранныеПродуктыНовые.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхСвободныеНовые = ВыбранныеПродуктыНовые.Количество();
			СвободныеНовые.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродуктыНовые", ВыбранныеПродуктыНовые);
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
			Если ВыбранныеПродуктыБУ.Найти(ПродуктСсылка) = Неопределено Тогда
				ВыбранныеПродуктыБУ.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхСвободныеБУ = ВыбранныеПродуктыБУ.Количество();
			СвободныеБУ.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродуктыБУ", ВыбранныеПродуктыБУ);
		//rarus ozhnik 17366 22.03.2021 + 
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МоиПродукты Тогда
			Если ВыбранныеМоиПродукты.Найти(ПродуктСсылка) = Неопределено Тогда
				ВыбранныеМоиПродукты.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхМоиПродукты = ВыбранныеМоиПродукты.Количество();
			МоиПродукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеМоиПродукты", ВыбранныеМоиПродукты);
		//rarus ozhnik 17366 22.03.2021 -
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УбратьВыделениеВсехСтрокДинамическогоСписка() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		ВыбранныеПродуктыНовые.Очистить();
		КоличествоВыбранныхСвободныеНовые = 0;
		СвободныеНовые.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродуктыНовые", ВыбранныеПродуктыНовые);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
		ВыбранныеПродуктыБУ.Очистить();
		КоличествоВыбранныхСвободныеБУ = 0;
		СвободныеБУ.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродуктыБУ", ВыбранныеПродуктыБУ);
	//rarus agar 22.03.2021 17501 ++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МоиПродукты Тогда
		ВыбранныеМоиПродукты.Очистить();
		КоличествоВыбранныхМоиПродукты = 0;
		МоиПродукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеМоиПродукты", ВыбранныеМоиПродукты);
	//rarus agar 22.03.2021 17501 --
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСоглашениеОПоставке() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		СоздатьИЗаполнитьСоглашениеОПоставке(ВыбранныеПродуктыНовые);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
		СоздатьИЗаполнитьСоглашениеОПоставке(ВыбранныеПродуктыБУ);
	КонецЕсли;
	
	УбратьВыделениеВсехСтрокДинамическогоСписка();//rarus vikhle 27.08.2020 mt 16181
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИЗаполнитьСоглашениеОПоставке(ВыбранныеПродукты) //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	//rarus vikhle 23.07.2021 mt 17834 вызов из общего модуля +++
	//МожноСоздатьСОП = МожноСоздатьСОП(ВыбранныеПродукты);
	////rarus vikhle 14.02.2023 m 19839 +++
	//ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов(); 
	//МожноСоздатьСОП = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(ВыбранныеПродукты, ПроверяемыеРеквизиты);
	////rarus vikhle 14.02.2023 m 19839 ---
	//rarus vikhle 23.07.2021 mt 17834 ---
	
	Если НЕ ПроверитьВозможностьСозданияЗаявки(ВыбранныеПродукты) Тогда
		Возврат;
	КонецЕсли;
	
	//rarus vikhle 27.08.2020 mt 16181 +++
	ПараметрыФормы = Новый Структура("СписокПродуктов", ВыбранныеПродукты);
	ПараметрыФормы.Вставить("БУ", Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ); //rarus agar 03.02.2020 17123 +-
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияСоглашения",ЭтотОбъект);
	// rarus agar 29.01.2021 ++
	//ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",ПараметрыФормы,,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",ПараметрыФормы,,,,,Оповещение);
	// rarus agar 29.01.2021 --
	///rarus vikhle 27.08.2020 mt 16181 ---
КонецПроцедуры

//rarus vikhle 14.02.2023 m 19839 +++ 
&НаСервере
Функция ПроверитьВозможностьСозданияЗаявки(ВыбранныеПродукты) 
	
	ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов(); 
	МожноСоздатьСОП = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(ВыбранныеПродукты, ПроверяемыеРеквизиты);
	
	Если МожноСоздатьСОП И Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		МаркиПродуктов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ВыбранныеПродукты, "МаркаПродукта");
		ДоступныеМарки = Справочники.Scan_МаркиПродуктов.МаркиДоступныеПользователю(Пользователи.ТекущийПользователь());
		
		Для Каждого СтрокаПродукта Из МаркиПродуктов Цикл
			ТекущийПродукт = СтрокаПродукта.Ключ;
			ТекущаяМарка = СтрокаПродукта.Значение.МаркаПродукта;
			Если ДоступныеМарки.Найти(ТекущаяМарка) = Неопределено Тогда
				ТекстСообщения = СтрШаблон(Нстр("ru = 'Марка <%1> продукта <%2> недоступна пользователю. Заявку нельзя создать.'"), 
											ТекущаяМарка, ТекущийПродукт);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);							
				МожноСоздатьСОП = Ложь;
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЕсли;	
	
	Возврат МожноСоздатьСОП;
	
КонецФункции	
//rarus vikhle 14.02.2023 m 19839 ---

&НаКлиенте
Процедура ПоказатьСкрытьСегментыСМоделями() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	Перем ИмяЭлементаКоманды, ИмяЭлементаСегментов;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		ИмяЭлементаСегментов 	= Элементы.ДеревоСегментыСвободныеНовые.Имя;
		ИмяЭлементаКоманды		= Элементы.СвободныеНовыеПродуктыПоСегментам.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
		ИмяЭлементаСегментов 	= Элементы.ДеревоСегментыСвободныеБУ.Имя;
		ИмяЭлементаКоманды		= Элементы.СвободныеБУПродуктыПоСегментам.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МоиПродукты Тогда
		ИмяЭлементаСегментов 	= Элементы.ДеревоСегментыМоиПродукты.Имя;
		ИмяЭлементаКоманды		= Элементы.МоиПродуктыПродуктыПоСегментам.Имя;
	КонецЕсли; 
	
	Элементы[ИмяЭлементаКоманды].Пометка 		= НЕ Элементы[ИмяЭлементаКоманды].Пометка;
	Элементы[ИмяЭлементаСегментов].Видимость 	= Элементы[ИмяЭлементаКоманды].Пометка;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДаныеДереваСегментовСМоделями() //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		ОбновитьСегментыСвободныеНовые();
		Элементы.ДеревоСегментыСвободныеНовые.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СвободныеБУ Тогда
		ОбновитьСегментыСвободныеБУ();
		Элементы.ДеревоСегментыСвободныеБУ.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_МоиПродукты Тогда
		ОбновитьСегментыМоиПродукты();
		Элементы.ДеревоСегментыМоиПродукты.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	КонецЕсли;

КонецПроцедуры

//rarus vikhle 27.08.2020 mt 16181 +++
&НаКлиенте
Процедура ПослеЗакрытияСоглашения(Результат, Параметры) Экспорт
	Элементы.СвободныеНовые.Обновить();
	Элементы.СвободныеБУ.Обновить();
КонецПроцедуры
//rarus vikhle 27.08.2020 mt 16181 ---

#КонецОбласти

#Область СобытияКомандФормы

&НаКлиенте
Процедура КоличествоПродуктов(Команда) 
	
	ОбновитьКоличествоПродуктов(); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
 	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	ВыбратьВсеСтрокиДинамическогоСписка(); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УбратьВыделениеВсехСтрокДинамическогоСписка(); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-

КонецПроцедуры

&НаКлиенте
Процедура СоздатьСОП(Команда)
	
	ОчиститьСообщения(); //rarus vikhle 08.09.2020 mt 16181
	СоздатьСоглашениеОПоставке(); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-
		
КонецПроцедуры

&НаКлиенте
Процедура ПродуктыПоСегментам(Команда)
	
	ПоказатьСкрытьСегментыСМоделями(); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОтбор(Команда)
	Список = ИмяДинамическогоСпискаТекущейСтраницы();
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЭтаФорма[Список], "Модель");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЭтаФорма[Список], "Продукт.СегментРынкаПродуктов");	//rarus vikhle 01.12.2020 mt 16181
КонецПроцедуры

//rarus agar 26.02.2021 17299 ++
&НаКлиенте
Процедура ОтключитьВсеОтборы(Команда)
	
	ИмяСписка = ИмяДинамическогоСпискаТекущейСтраницы();
	
	ЭлементыОтбораНастроек = ЭтаФорма[ИмяСписка].КомпоновщикНастроек.Настройки.Отбор.Элементы;
	Для Каждого ЭлементОтбораНастроек Из ЭлементыОтбораНастроек Цикл
		ЭлементОтбораНастроек.Использование = Ложь;
	КонецЦикла;
	
	ЭлементыОтбораПользовательскихНастроек = ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого ЭлементОтбораПользовательскихНастроек Из ЭлементыОтбораПользовательскихНастроек Цикл
		Если ТипЗнч(ЭлементОтбораПользовательскихНастроек) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЭлементОтбораПользовательскихНастроек.Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЭлементыОтбораФиксированныхНастроек = ЭтаФорма[ИмяСписка].КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
	Для Каждого ЭлементОтбораФиксированныхНастроек Из ЭлементыОтбораФиксированныхНастроек Цикл
		ЭлементОтбораФиксированныхНастроек.Использование = Ложь;
	КонецЦикла;
	
	//rarus vikhle 12.07.2021 17717 +++
	Если ИмяСписка = "МоиПродукты" Тогда
		СпецОтборыДилера = "Все";
		ОтборПродуктНовыйБУ = "НовыйИБУ";
	КонецЕсли;	
	//rarus vikhle 12.07.2021 17717 ---
	
КонецПроцедуры
//rarus agar 26.02.2021 17299 --

&НаКлиенте
Процедура ОбновитьСегменты(Команда)
	
	ОбновитьДаныеДереваСегментовСМоделями(); //rarus BProg_Dekin 28.05.2020 mantis 0015893 +-

КонецПроцедуры


&НаКлиенте
Процедура ПерейтиВМонитор(Команда) //rarus pechek 24.06.2020 mantis 15893 +++
	МассивВыбранныхСтрок = Элементы.ЗаявкиНаОтгрузку.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		ДатаОтгрузки = ТекущаяДата();
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));                            
		Возврат;
	Иначе
		ДатаОтгрузки = Элементы.ЗаявкиНаОтгрузку.ТекущиеДанные.ДатаОтгрузки;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ДатаОтгрузки", ДатаОтгрузки);
	ОткрытьФорму("Обработка.Scan_МониторБронированияОтгрузок.Форма",ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаявкиНаОтгрузкуПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus pechek 24.06.2020 mantis 15893 +++
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	МассивСсылок = Строки.ПолучитьКлючи();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СтатусыЗаявокНаОтгрузку.Ссылка КАК Ссылка,
	|	Scan_СтатусыЗаявокНаОтгрузку.ЦветФона КАК ЦветФона,
	|	Scan_СтатусыЗаявокНаОтгрузку.ЦветТекста КАК ЦветТекста,
	|	Scan_СтатусыЗаявокНаОтгрузку.Шрифт КАК Шрифт
	|ИЗ
	|	Справочник.Scan_СтатусыЗаявокНаОтгрузку КАК Scan_СтатусыЗаявокНаОтгрузку";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ЗаявкаНаОтгрузку.Ссылка КАК СсылкаДокумент
		|ИЗ
		|	Документ.Scan_ЗаявкаНаОтгрузку КАК Scan_ЗаявкаНаОтгрузку
		|ГДЕ
		|	Scan_ЗаявкаНаОтгрузку.Статус = &Статус
		|	И Scan_ЗаявкаНаОтгрузку.Ссылка В(&МассивСсылок)";
		
		Запрос.УстановитьПараметр("Статус",       Выборка.Ссылка);
		Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаСписка = Строки[ВыборкаДетальныеЗаписи.СсылкаДокумент];
			Для Каждого КолонкаСписка Из СтрокаСписка.Оформление Цикл
				ЦветФона = Выборка.ЦветФона.Получить();
				Если ЦветФона <> ЧерныйЦвет Тогда
					КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
				КонецЕсли;
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветТекста", Выборка.ЦветТекста.Получить());
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("Шрифт",      Выборка.Шрифт.Получить());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

//сообщение
&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(ПриЗапуске=Ложь)
	//rarus pechek 30.06.2020 mantis 16201	+++
	ТекЯзык = ПользователиИнформационнойБазы.ТекущийПользователь().Язык;
	ТекстДекорации = "";
	
	ПользовательСсылка = Пользователи.ТекущийПользователь();
	Организация = ПользовательСсылка.Организация;
	Если НЕ Организация.Пустая() Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_ПраваИНастройки.Значение КАК Значение,
		               |	Scan_ПраваИНастройки.ПравоНастройка КАК ПравоНастройка
		               |ИЗ
		               |	РегистрСведений.Scan_ПраваИНастройки КАК Scan_ПраваИНастройки
		               |ГДЕ
		               |	Scan_ПраваИНастройки.Объект = &ОрганизацияПользователя
		               |	И Scan_ПраваИНастройки.ПравоНастройка В(&Настройки)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ПравоНастройка";
			                                                                              
		ТЗНастройки = Новый ТаблицаЗначений;
		ТЗНастройки.Колонки.Добавить("Настройка",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.Scan_ПраваИНастройки"));
		НоваяСтрокаТЗ = ТЗНастройки.Добавить();
		НоваяСтрокаТЗ.Настройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов;
		НоваяСтрокаТЗ = ТЗНастройки.Добавить();
		НоваяСтрокаТЗ.Настройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng;	
		
		Запрос.УстановитьПараметр("ОрганизацияПользователя",Организация);
		Запрос.УстановитьПараметр("Настройки",ТЗНастройки);
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов Тогда
					ТекстовоеСообщение = Выборка.Значение;
					Если ТекЯзык = Метаданные.Языки.Русский Тогда
						ТекстДекорации = Выборка.Значение;
					КонецЕсли;
				ИначеЕсли Выборка.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng Тогда 	
					ТекстовоеСообщениеАнгл = Выборка.Значение;
					Если ТекЯзык = Метаданные.Языки.Английский Тогда
						ТекстДекорации = Выборка.Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов.Заголовок = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов.Видимость = Ложь;
	КонецЕсли;
	//rarus pechek 30.06.2020 mantis 16201	---
КонецПроцедуры

//rarus agar 29.12.2020 17025 ++
&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре()
	
	ТекстДекорации = Scan_ПраваИНастройки.Scan_Право("ТекстовоеСообщениеПоТекущейПродуктовойСтруктуре");
	
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Заголовок = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 29.12.2020 17025 --

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.Страница_СвободныеНовые Тогда
		ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(); //rarus pechek 30.06.2020 mantis 16201	
		ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре(); //rarus agar 29.12.2020 17025 +-
	КонецЕсли;
КонецПроцедуры

//создание заявки
&НаКлиенте
Процедура СоздатьНаОснованииСоглашенияЗаявку(Команда)
	МассивВыбранныхСтрок = Элементы.СоглашенияОПоставке.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Выберите документ'; en = 'Select document'"));
		Возврат;
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));                            
		Возврат;
	Иначе
		ТекущийДокСоглашениеОПоставке = Элементы.СоглашенияОПоставке.ТекущаяСтрока;
		//rarus vikhle 16.09.2020 mt 16526 +++
		ПараметрыФормы = Новый Структура("ТекущееСоглашениеОПоставке", ТекущийДокСоглашениеОПоставке);
		ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаНастройкиВводаЗаявкиНаОтгрузкуНаОсновании",ПараметрыФормы,,,,,,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		//rarus vikhle 16.09.2020 mt 16526 ---
	КонецЕсли;
КонецПроцедуры

//rarus ozhnik 15888 13.07.2020 + 
&НаКлиенте
Процедура СоздатьСУ(Команда)
	
	// rarus agar 29.01.2021 ++
	//ОткрытьФорму("Справочник.Scan_СпециальныеУсловия.ФормаОбъекта", ,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ОткрытьФорму("Справочник.Scan_СпециальныеУсловия.ФормаОбъекта");
	// rarus agar 29.01.2021 --
	
КонецПроцедуры
//rarus ozhnik 15888 13.07.2020 -

&НаКлиенте
Процедура СоздатьЗапросНаНадстройки(Команда) // Rarus tenkam 13.10.2021 mantis 17822 +++
	МассивВыбранныхСтрок = Элементы.СоглашенияОПоставке.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Выберите документ'; en = 'Select document'"));
		Возврат;
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));                            
		Возврат;
	Иначе
		Заявка = Элементы.СоглашенияОПоставке.ТекущаяСтрока;
		
		Если НЕ КорректныйСтатусЗаявкиДляСозданияЗапросаНаНадстройки(Заявка) Тогда
			Сообщить(НСтр("ru = 'Не удалось создать запрос на надстройки. Проверьте статус заявки.'; en = 'Wrong status of SOP.'"));                            
			Возврат;	
		КонецЕсли;
			
		ПараметрыФормы = Новый Структура("Заявка", Заявка);
		ОткрытьФорму("Обработка.Scan_РМДилера.Форма.ФормаЗапросНаНадстройки",ПараметрыФормы,,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;

КонецПроцедуры // Rarus tenkam 13.10.2021 mantis 17822 ---

&НаКлиенте
Процедура РуководствоПользователя(Команда) //rarus vikhle 19.10.2021 m 18430 +++
	
	СсылкаНаРуководство = Scan_ПраваИНастройки.Scan_Право("СсылкаНаРуководствоПользователя");
	Если ЗначениеЗаполнено(СсылкаНаРуководство) Тогда
		//ПерейтиПоНавигационнойСсылке(СсылкаНаРуководство);
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаРуководство); //rarus vikhle 22.10.2021 АПК
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнена настройка № 20011 ""Ссылка на руководство пользователя""'"));
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 19.10.2021 m 18430 ---

#КонецОбласти

#Область КонтрольныеТочки
//// КОНТРОЛЬНЫЕ ТОЧКИ

&НаКлиенте
Процедура КП_КонтрольныеТочки(Команда)
	Элементы.КП_КонтрольныеТочки.Пометка = НЕ Элементы.КП_КонтрольныеТочки.Пометка;
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя; 	
	Элементы[ИмяСтраницы + "_КонтрольныеТочки"].Видимость = Элементы.КП_КонтрольныеТочки.Пометка;
	
	ОбновитьСписокКонтрольныхТочек(Элементы.КП_КонтрольныеТочки.Пометка);
КонецПроцедуры

&НаКлиенте
Процедура КП_КонтрольныеТочки_Установить(Команда)
	ВыбранныеМоиПродукты = ПолучитьМассивВыбранныхПоТекущейСтранице();
	
	Если ВыбранныеМоиПродукты.Количество() <> 0 И ЕстьЗаполненныеКТ() Тогда
		УстановитьЗначенияКонтрольныхТочек(ВыбранныеМоиПродукты);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокКонтрольныхТочек(КП_КонтрольныеТочки_Пометка)
	ТаблицаКонтрольныхТочек.Очистить();
	Если НЕ КП_КонтрольныеТочки_Пометка Тогда
		Возврат;
	КонецЕсли;
	
	МассивКТ = ПолучитьМассивКТ();
	
	Для Каждого СтрокаКТ Из МассивКТ Цикл
		СтрокаТаблицы = ТаблицаКонтрольныхТочек.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаКТ);
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивКТ()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка КАК КонтрольнаяТочка,
	|	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка.РеквизитОбъекта КАК РеквизитКТ
	|ИЗ
	|	РегистрСведений.Scan_КонтрольныеТочкиАРМ КАК Scan_КонтрольныеТочкиАРМ
	|ГДЕ
	|	Scan_КонтрольныеТочкиАРМ.АРМДИлера = ИСТИНА";
	
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Запрос.Выполнить().Выгрузить());
КонецФункции

&НаКлиенте
Процедура ТаблицаКонтрольныхТочекПриАктивизацииЯчейки(Элемент)
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяТаблицы = ИмяСтраницы + "_ТаблицаКонтрольныхТочек";
	ИмяКолонкиЗначения = ИмяТаблицы + "Значение";
	
	Если Элемент.ТекущийЭлемент.Имя = ИмяКолонкиЗначения Тогда
		ТекДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Элемент.ТекущийЭлемент.ТолькоПросмотр = ТекДанные.Очистить;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтрольныхТочекПередНачаломИзменения(Элемент, Отказ)
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяТаблицы = ИмяСтраницы + "_ТаблицаКонтрольныхТочек";
	ИмяКолонкиЗначения = ИмяТаблицы + "Значение";
	
	ТипКонтрольнойТочки = ПолучитьТипКТ(Элементы[ИмяТаблицы].ТекущиеДанные.КонтрольнаяТочка);
	
	Элемент.ПодчиненныеЭлементы[ИмяКолонкиЗначения].ВыбиратьТип = Ложь;
	Элемент.ПодчиненныеЭлементы[ИмяКолонкиЗначения].ОграничениеТипа = ТипКонтрольнойТочки;	
	
	Если ТипКонтрольнойТочки = Новый ОписаниеТипов("Булево") Тогда
		Элемент.ПодчиненныеЭлементы[ИмяКолонкиЗначения].КнопкаОчистки = Истина;
	Иначе
		Элемент.ПодчиненныеЭлементы[ИмяКолонкиЗначения].КнопкаОчистки = Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтрольныхТочекОчиститьПриИзменении(Элемент)
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяТаблицы = ИмяСтраницы + "_ТаблицаКонтрольныхТочек";
	ТекДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	Если ТекДанные.Очистить Тогда
		ТипКонтрольнойТочки = ПолучитьТипКТ(ТекДанные.КонтрольнаяТочка);
		ТекДанные.Значение = ТипКонтрольнойТочки.ПривестиЗначение();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтрольныхТочекЗначениеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяТаблицы = ИмяСтраницы + "_ТаблицаКонтрольныхТочек";
	ТекДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Элемент.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");	
	ТекДанные.Значение = Неопределено;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипКТ(КонтрольнаяТочка)
	Если КонтрольнаяТочка.ОбъектМетаданных = "Scan_Изделия" Тогда
		РеквизитыСправочника = Метаданные.НайтиПоПолномуИмени("Справочник.Scan_Изделия").Реквизиты;
		РеквизитКарточки = РеквизитыСправочника.Найти(КонтрольнаяТочка.РеквизитОбъекта);
	ИначеЕсли КонтрольнаяТочка.ОбъектМетаданных = "Scan_КлючевыеДатыРегистрСведений" Тогда //Rarus bonmak 07.02.2022 18590 ++
		РеквизитКарточки = Метаданные.РегистрыСведений.Scan_КлючевыеДатыПроцессов.Ресурсы.Значение;
		//Rarus bonmak 07.02.2022 18590 --
	КонецЕсли;
	Возврат РеквизитКарточки.Тип;
КонецФункции

&НаКлиенте
Функция ЕстьЗаполненныеКТ()
		
	ЕстьЗаполненные = Ложь;
	Для Каждого СтрокаКТ Из ТаблицаКонтрольныхТочек Цикл
		Если ЗначениеЗаполнено(СтрокаКТ.Значение) ИЛИ СтрокаКТ.Очистить Тогда 
			ЕстьЗаполненные = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ЕстьЗаполненные;	
КонецФункции

&НаКлиенте
Процедура УстановитьЗначенияКонтрольныхТочек(МассивСсылок)

	СтруктураКТ = Новый Структура;
	Для Каждого СтрокаКТ Из ТаблицаКонтрольныхТочек Цикл
		Если ЗначениеЗаполнено(СтрокаКТ.Значение) ИЛИ СтрокаКТ.Очистить Тогда
			СтруктураКТ.Вставить(СтрокаКТ.РеквизитКТ, СтрокаКТ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	//rarus ozhnik 17366 23.03.2021 + 
	Если СтруктураКТ.Свойство("КлиентПродукта") И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьИзменятьКлиентаИПродавцаПродукта") Тогда
		СтруктураКТ.Удалить("КлиентПродукта");	
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на редактирование клиента продукта. Не удалось установить контрольную точку.'"));
	КонецЕсли;
	Если СтруктураКТ.Свойство("ПродавецПродукта") И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьИзменятьКлиентаИПродавцаПродукта") Тогда
		СтруктураКТ.Удалить("ПродавецПродукта");	
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на редактирование продавца продукта. Не удалось установить контрольную точку.'"));
	КонецЕсли;
	//rarus ozhnik 17366 23.03.2021 -
	
	УстановитьЗначениеКТПродолжение(МассивСсылок,СтруктураКТ);		
	
	// rarus agar 29.04.2021 17665 ++
	Для Каждого ИзделиеСсылка Из МассивСсылок Цикл
		ОповеститьОбИзменении(ИзделиеСсылка);
	КонецЦикла;
	// rarus agar 29.04.2021 17665 --
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьЗначениеКТПродолжение(МассивСсылок,СтруктураКТ)
	ЗаписатьКТПоСтруктуре(МассивСсылок, СтруктураКТ);
	
	ОчиститьМассивВыбранныхПоТекущейСтранице();
	ОбновитьКоличествоВыбранныхПоТекущейСтранице();
	УстановитьМассивВыбранныхПоТекущейСтранице();
	ОбновитьДинамическийСписокПоТекущейСтранице();
	ОчиститьЗначенияКонтрольныхТочек();	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ЗаписатьКТПоСтруктуре(МассивСсылок, СтруктураКТ) 
	Для Каждого СтрокаИзделия Из МассивСсылок Цикл 
		Для Каждого СтрокаКТ Из СтруктураКТ Цикл
			ЗаписатьКТНаСервере(СтрокаКТ.Ключ, СтрокаКТ.Значение, СтрокаИзделия); 
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьКТНаСервере(ТекРеквизит, ЗначениеРеквизита, ИзделиеСсылка) 
	
	Если НЕ ЗначениеЗаполнено(ИзделиеСсылка) Тогда			
		Возврат;
	КонецЕсли;

	НайденнаяКТ = Справочники.Scan_КонтрольныеТочкиБизнесПроцессов.НайтиПоРеквизиту("РеквизитОбъекта", ТекРеквизит);
	Если ЗначениеЗаполнено(НайденнаяКТ) Тогда
		ОбъектМетаданных = НайденнаяКТ.ОбъектМетаданных;
	Иначе	
		Возврат;
	КонецЕсли; 	

	Если ОбъектМетаданных = "Scan_Изделия" Тогда
		ИзделиеОбъект = ИзделиеСсылка.ПолучитьОбъект();
				
		ИзделиеОбъект[ТекРеквизит] = ЗначениеРеквизита;
		
		НаименованиеИзделия = Справочники.Scan_Изделия.СформироватьНаименованиеПоНастройке(ИзделиеОбъект,ТекРеквизит);
		Если НаименованиеИзделия <> Неопределено Тогда
			ИзделиеОбъект.Наименование = НаименованиеИзделия;
		КонецЕсли;
		
		ИзделиеОбъект.Записать();
	ИначеЕсли ОбъектМетаданных = "Scan_КлючевыеДатыРегистрСведений" Тогда //Rarus bonmak 07.02.2022 18590 ++
		ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты[ТекРеквизит];
		РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(ИзделиеСсылка,ВидКлючевойДаты,ЗначениеРеквизита);
		//Rarus bonmak 07.02.2022 18590 --
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗначенияКонтрольныхТочек();
	
	Для Каждого СтрокаТаблицы Из ТаблицаКонтрольныхТочек Цикл
		СтрокаТаблицы.Значение = Неопределено;
		СтрокаТаблицы.Очистить = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область Вспомогательные

&НаКлиенте
Процедура ИнициализироватьПеременныеИПараметрыСписков()
	
	//// МОИ ПРОДУТЫ
	ВыбранныеМоиПродукты = Новый Массив;
	ОбновитьКоличествоВыбранныхПоТекущейСтранице("Страница_МоиПродукты");
	УстановитьМассивВыбранныхПоТекущейСтранице("Страница_МоиПродукты");
			
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДинамическийСписокПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли;
	
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		Элементы.МоиПродукты.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивВыбранныхПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли;
	
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		мВыбраны = ВыбранныеМоиПродукты;
	КонецЕсли;
	
	Возврат мВыбраны;
КонецФункции

&НаКлиенте
Процедура ОчиститьМассивВыбранныхПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли;
	
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		ВыбранныеМоиПродукты.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВМассивВыбранныхПоТекущейСтранице(ЭлементДобавления, ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли;
	
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		Если ВыбранныеМоиПродукты.Найти(ЭлементДобавления) = Неопределено Тогда
			ВыбранныеМоиПродукты.Добавить(ЭлементДобавления);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМассивВыбранныхПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли;
	
	мВыбраны = ПолучитьМассивВыбранныхПоТекущейСтранице(ИмяСтраницы);
	
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		МоиПродукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеМоиПродукты",мВыбраны);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоВыбранныхПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли; 	
		
	мВыбраны = ПолучитьМассивВыбранныхПоТекущейСтранице(ИмяСтраницы);
	КоличествоВыбранных = мВыбраны.Количество();
	
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		КоличествоВыбранныхМоиПродукты = КоличествоВыбранных;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяСпискаПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли; 	
		
	ИмяСписка = "";
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		ИмяСписка = "МоиПродукты";
	КонецЕсли;
	Возврат ИмяСписка;
КонецФункции

&НаКлиенте
Функция ПолучитьИмяСпискаЗаявокНаДействиеПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли; 	
		
	ИмяСписка = "";
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		ИмяСписка = "МоиПродукты";
	КонецЕсли;
	Возврат ИмяСписка;
КонецФункции

&НаКлиенте
Процедура ВключитьОтключитьФлагВМассивеВыбранныхПоТекущейСтранице(ВыбраннаяСтрока, ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли; 	   		
		
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		ПродуктСсылка = ПолучитьСсылкуНаПродукт(ВыбраннаяСтрока);
		мИндекс = ВыбранныеМоиПродукты.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			ВыбранныеМоиПродукты.Добавить(ПродуктСсылка);
		Иначе 
			ВыбранныеМоиПродукты.Удалить(мИндекс);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьКоличествоВыбранныхПоТекущейСтранице(ИмяСтраницы);
	УстановитьМассивВыбранныхПоТекущейСтранице(ИмяСтраницы);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивВыделенныхПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли;
	
	Если ИмяСтраницы = "Страница_МоиПродукты" Тогда
		мВыбраны = Элементы.МоиПродукты.ВыделенныеСтроки;
		КонецЕсли;
	
	Возврат ПолучитьМассивСсылокНаПродукт(мВыбраны);
КонецФункции

&НаСервереБезКонтекста
Функция КорректныйСтатусЗаявкиДляСозданияЗапросаНаНадстройки(ЗаявкаСсылка) // Rarus tenkam 13.10.2021 mantis 17822 +++
	СтатусЗаявки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаявкаСсылка,"Статус");
	Если СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен")
		ИЛИ СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут")
		ИЛИ СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Исполнен")
		ИЛИ СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС") Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции // Rarus tenkam 13.10.2021 mantis 17822 ---

#КонецОбласти

//// ОБНОВИТЬ КОЛИЧЕСТВО ИЗДЕЛИЙ

&НаКлиенте
Процедура ОбновитьКоличество(Команда)
	ОбновитьКоличествоПоТекущейСтранице();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоПоТекущейСтранице(ИмяСтраницы = "")
	Если ИмяСтраницы = "" Тогда
		ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли;		

	ИмяСписка = ПолучитьИмяСпискаПоТекущейСтранице(ИмяСтраницы);
	Если ИмяСписка = "" Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСтрок = РассчитатьКоличествоСтрок(ИмяСписка);
	
	ИмяКнопкиКоличество = ИмяСписка + "ОбновитьКоличество";
	Элементы[ИмяКнопкиКоличество].Заголовок = НСтр("ru = 'Количество продуктов: '; en = 'Product quantity: '") + КоличествоСтрок;
КонецПроцедуры

&НаСервере
Функция РассчитатьКоличествоСтрок(ИмяСписка)
	
	Схема = Элементы[ИмяСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы[ИмяСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаРезультат.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Если ТаблицаРезультат.Колонки.Найти("Продукт") = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	ТаблицаРезультат.Свернуть("Продукт");
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "Продукт");
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаПродукт(СтрокаРС)
	
	// rarus agar 03.11.2020 16010 ++
	ПродуктСсылка = Справочники.Scan_Изделия.ПустаяСсылка();
	Если ТипЗнч(СтрокаРС) = Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту") Тогда
		ПродуктСсылка = СтрокаРС.Продукт;
	КонецЕсли;
	// rarus agar 03.11.2020 16010 --
	
	Возврат ПродуктСсылка;
	
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьМассивСсылокНаПродукт(МассивСтрокРС)
	МассивСсылокНаПродукт = Новый Массив;
	Для Каждого ТекСтрока Из МассивСтрокРС Цикл
		МассивСсылокНаПродукт.Добавить(ТекСтрока.Продукт);
	КонецЦикла;
	Возврат МассивСсылокНаПродукт;
КонецФункции

//rarus ozhnik 17366 22.03.2021 + 
&НаКлиенте
Процедура Страница_МоиПродукты_ТаблицаКонтрольныхТочекОчиститьПриИзменении(Элемент)
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяТаблицы = ИмяСтраницы + "_ТаблицаКонтрольныхТочек";
	ТекДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	Если ТекДанные.Очистить Тогда
		ТипКонтрольнойТочки = ПолучитьТипКТ(ТекДанные.КонтрольнаяТочка);
		ТекДанные.Значение = ТипКонтрольнойТочки.ПривестиЗначение();
	КонецЕсли;// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура Страница_МоиПродукты_ТаблицаКонтрольныхТочекЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекДанные = Элементы.Страница_МоиПродукты_ТаблицаКонтрольныхТочек.ТекущиеДанные;
	Если Элементы.Страница_МоиПродукты_ТаблицаКонтрольныхТочек.ТекущиеДанные.РеквизитКТ = "ПродавецПродукта"  Тогда 		
		СтандартнаяОбработка = Ложь;
		Отбор = Новый Структура;
		
		Если не Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиентСервер.ТекущийПользователь(),"ПользовательСотрудник") Тогда
			
			Отбор.Вставить("Владелец", ПолучитьМассивКомпаний());
		КонецЕсли;
		ПараметрыФормы = Новый Структура("Отбор", Отбор);
		ОткрытьФорму("Справочник.Scan_КонтактныеЛица.ФормаВыбора", ПараметрыФормы, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивКомпаний()
	возврат РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПользователиКлиентСервер.ТекущийПользователь()).ВыгрузитьКолонку("Компания");	
КонецФункции

&НаКлиенте
Процедура СпецОтборыДилераПриИзменении(Элемент)
	
	УстановитьСпецОтборДилера();//rarus vikhle 08.07.2021 17717
	
КонецПроцедуры




//rarus ozhnik 17366 22.03.2021 -