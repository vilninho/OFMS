// Rarus tenkam 14.10.2021 mantis 17822 +++
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Заявка") Тогда
		СоглашениеОПоставке = Параметры.Заявка;
	КонецЕсли;
	Дилер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СоглашениеОПоставке, "Дилер");
	
	ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");

КонецПроцедуры

#Область ОбработчикиСобытийФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТоварыУслугиРаботыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		
	Если НоваяСтрока Тогда
		ТоварыУслугиРаботыЗаполнитьНовуюСтрокуНаСервере(Элементы.ТоварыУслугиРаботы.ТекущаяСтрока);
	КонецЕсли;  

КонецПроцедуры

&НаКлиенте
Процедура ПоставщикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СтатусДействующая = ПолучитьСтатусКомпанииДействующая();
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор, "СтатусыКомпаний", ВидСравненияКомпоновкиДанных.Равно, СтатусДействующая,,Истина);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
		
	ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элемент); 
	
КонецПроцедуры

&НаКлиенте
Процедура ДилерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
	ПользовательСотрудник = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ПользовательСотрудник");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок", Истина);
	
	Если НЕ ПользовательСотрудник Тогда 
		МассивКомпаний = ПолучитьКомпанииПользователя();
		
		ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор, "Ссылка", ВидСравненияКомпоновкиДанных.ВСписке, МассивКомпаний,,Истина);
		ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	КонецЕсли;	
		
	ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элемент);	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаСервере
Функция СоздатьНаСервере()
	УстановитьПривилегированныйРежим(Истина);
	
	ДокОбъект = Документы.Scan_ЗапросНаНадстройки.СоздатьДокумент();
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ДокОбъект.Автор                 = ТекущийПользователь;
	ДокОбъект.ВалютаДокумента       = ВалютаДокумента;
	ДокОбъект.ДатаСоздания          = ТекущаяДатаСеанса();
	ДокОбъект.Дата                  = ТекущаяДатаСеанса();
	ДокОбъект.Менеджер              = ТекущийПользователь;
	ДокОбъект.Организация           = ТекущийПользователь.Организация;
	ДокОбъект.ПодразделениеКомпании = ТекущийПользователь.ПодразделениеОрганизации;
	
	
	ДокОбъект.СоглашениеОПоставке = СоглашениеОПоставке;
	ДокОбъект.Поставщик = Поставщик;
	ДокОбъект.Комментарий = Комментарий;
	ДокОбъект.ПереданВОтделПланированияПродаж = ПереданВОтделПланированияПродаж;
	
	Для Каждого ТекСтрока Из ТоварыУслугиРаботы Цикл
		НоваяСтрокаДок = ДокОбъект.ТоварыУслугиРаботы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДок, ТекСтрока);
		НоваяСтрокаДок.Дилер = Дилер;  		
	КонецЦикла;
	
	Попытка
		ДокОбъект.Записать();
		Возврат Истина;
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Не удалось записать документ. %1'; en = 'Unable to save document.%1'"),,,,,ОписаниеОшибки());
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура Создать(Команда)
	Если ПроверитьЗаполнениеПолей() Тогда
		Если СоздатьНаСервере() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьЗаполнениеПолей()
	Отказ = Ложь;
	//Если НЕ ЗначениеЗаполнено(Дилер) Тогда
	//	Сообщить(НСтр("ru = 'Дилер не заполнен.'; en = 'Select dealer'"));
	//	Отказ = Истина;
	//КонецЕсли;
	//
	//Если НЕ ЗначениеЗаполнено(Поставщик) Тогда
	//	Сообщить(НСтр("ru = 'Поставщик не заполнен.'; en = 'Select dealer'"));
	//	Отказ = Истина;
	//КонецЕсли;
	
	Для Индекс = 0 по ТоварыУслугиРаботы.Количество()-1 Цикл
		СтрокаТовар = ТоварыУслугиРаботы.Получить(Индекс);
		НомерСтроки = Индекс + 1;
		Если Не ЗначениеЗаполнено(СтрокаТовар.ТоварУслуга) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'В строке %1 не заполнено описание товара.'; en = 'Select product decription'"),,,,,НомерСтроки);
			Отказ = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТовар.МаркаПродукта) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'В строке %1 не заполнен производитель.'; en = 'Select product decription'"),,,,,НомерСтроки);
			Отказ = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТовар.Количество) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'В строке %1 не заполнено количество.'; en = 'Select product decription'"),,,,,НомерСтроки);
			Отказ = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТовар.Цена) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'В строке %1 не заполнена цена.'; en = 'Select product decription'"),,,,,НомерСтроки);
			Отказ = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТовар.Валюта) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'В строке %1 не заполнена валюта.'; en = 'Select product decription'"),,,,,НомерСтроки);
			Отказ = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТовар.КомментарийЦены) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'В строке %1 не заполнен комментарий к цене.'; en = 'Select product decription'"),,,,,НомерСтроки);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат НЕ Отказ;
КонецФункции

&НаСервере
Процедура ТоварыУслугиРаботыЗаполнитьНовуюСтрокуНаСервере(ИдентификаторСтроки)
	
	СтрокаТаблицы = ТоварыУслугиРаботы.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если СтрокаТаблицы <> Неопределено Тогда
		СтрокаТаблицы.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		
		Если СтрокаТаблицы.Количество = 0 Тогда
			СтрокаТаблицы.Количество = 1;
		КонецЕсли;
		Если СтрокаТаблицы.Валюта.Пустая() Тогда
			СтрокаТаблицы.Валюта = ВалютаДокумента;
		КонецЕсли;
				
		//Запрос = Новый Запрос;
		//Запрос.УстановитьПараметр("СоглашениеОПоставке", СоглашениеОПоставке);
		//Запрос.Текст = "ВЫБРАТЬ
		//|	Scan_СоглашенияОПоставке.Дилер КАК Дилер
		//|ИЗ
		//|	Справочник.Scan_СоглашенияОПоставке КАК Scan_СоглашенияОПоставке
		//|ГДЕ
		//|	Scan_СоглашенияОПоставке.Ссылка = &СоглашениеОПоставке
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.ЗаказНаЗавод КАК ЗаказНаЗавод
		//|ИЗ
		//|	РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних(
		//|			,
		//|			Изделие В
		//|				(ВЫБРАТЬ
		//|					Справочник.Scan_СоглашенияОПоставке.СписокПродуктов.Продукт
		//|				ИЗ
		//|					Справочник.Scan_СоглашенияОПоставке.СписокПродуктов
		//|				ГДЕ
		//|					Справочник.Scan_СоглашенияОПоставке.СписокПродуктов.Ссылка = &СоглашениеОПоставке)) КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних";
		//РезультатыЗапроса = Запрос.ВыполнитьПакет();
		//
		//Если ПустаяСтрока(СтрокаТаблицы.НомераЗаказов) Тогда
		//	Если Не РезультатыЗапроса[1].Пустой() Тогда
		//		ТаблицаРезультата = РезультатыЗапроса[1].Выгрузить();
		//		
		//		СтрокаТаблицы.НомераЗаказов = СтрСоединить(ТаблицаРезультата.ВыгрузитьКолонку("ЗаказНаЗавод"), ",");
		//	КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКомпанииПользователя()
	
	КомпанииСКонтрагентами = РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПараметрыСеанса.ТекущийПользователь);
	КомпанииПользователя   = КомпанииСКонтрагентами.ВыгрузитьКолонку("Компания");
	
	Возврат КомпанииПользователя;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтатусКомпанииДействующая()
	Возврат Справочники.Scan_СтатусыКомпаний.НайтиПоНаименованию("Действующая");	
КонецФункции

#КонецОбласти
// Rarus tenkam 14.10.2021 mantis 17822 ---
