#Область ОписаниеПеременных

&НаКлиенте
Перем ВыбранныеПродукты;
//rarus pechek 03.06.2020 mantis 16056 +++ 
&НаКлиенте
Перем мКритерииПоискаПоСписку;
&НаКлиенте
Перем мКритерииПоискаПоКоридору;
&НаКлиенте
Перем мИменаСтраниц;
//rarus pechek 03.06.2020 mantis 16056 --- 
// rarus kabany 12.05.2021 17464 +++
&НаКлиенте
Перем мВыбраныСсылкиРаспределение;
&НаКлиенте
Перем мВыбраныСсылкиСвободные;
&НаКлиенте
Перем мВыбраныСсылкиПродажи;
// rarus kabany 12.05.2021 17464 ---
// rarus kabany 18.05.2021 17727 +++
&НаКлиенте
Перем мВыбраныСсылкиВсеЗаказы;
// rarus kabany 18.05.2021 17727 ---
//rarus vikhle 05.08.2021 mt 17834 +++
&НаКлиенте
Перем мВыбраныСсылкиРезервSRU;
&НаКлиенте
Перем мВыбраныСсылкиСвободныеБУ;
//rarus vikhle 05.08.2021 mt 17834 ---

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//rarus pechek 03.06.2020 mantis 16056 +++ 
	Элементы.ГруппаОтборРаспределение.Видимость = Ложь;
	Элементы.ГруппаОтборСвободные.Видимость = Ложь;
	Элементы.ГруппаОтборСвободныеБУ.Видимость = Ложь; // rarus kabany 21.06.2021 17869 +
	Элементы.ГруппаОтборПродажи.Видимость = Ложь;
	Элементы.ГруппаОтборВсеЗаказы.Видимость = Ложь; // rarus kabany 18.05.2021 17727 +
	//Элементы.Группа_ОтборПоКритериям.Видимость 	= Ложь;
	Элементы.ГруппаОтборПродукты.Видимость 	= Ложь;
	Элементы.ГруппаОтборРезервSRU.Видимость = Ложь; //rarus vikhle 05.08.2021 mt 17834
	
	КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа;	
		
	//ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов();
		
	Элементы.ЗаказыПоМоделямГруппа.Видимость           = Ложь;
	Элементы.ГруппаЗаказыПоМоделямСвободные.Видимость  = Ложь;
	Элементы.ГруппаЗаказыПоМоделямСвободныеБУ.Видимость = Ложь; // rarus kabany 21.06.2021 17869 +
	Элементы.ГруппаЗаказыПоМоделямПродажи.Видимость    = Ложь;
	Элементы.ГруппаЗаказыПоМоделямВсеЗаказы.Видимость  = Ложь; // rarus kabany 18.05.2021 17727 +
	Элементы.ГруппаКонтрольныеТочкиВсеЗаказы.Видимость = Ложь; // rarus kabany 18.05.2021 17727 +
	Элементы.ГруппаПродуктыПоОтветственнымРезервSRU.Видимость = Ложь; //rarus vikhle 05.08.2021 mt 17834 
	//rarus pechek 03.06.2020 mantis 16056 --- 
		
	ТумблерПоиск = "0"; 

	
	СписокХозяйственныхОпераций = Новый Массив;
	СписокХозяйственныхОпераций.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка"));
	СписокХозяйственныхОпераций.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение"));
	СписокХозяйственныхОпераций.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство"));
	СписокХозяйственныхОпераций.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК"));
	СписокХозяйственныхОпераций.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК"));
	СписокХозяйственныхОпераций.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК")); 		//rarus tenkam 26.09.2017 mantis 10742 +
	СписокХозяйственныхОпераций.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК"));
	СписокХозяйственныхОпераций.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК"));
	
	Продукты.Параметры.УстановитьЗначениеПараметра("СписокХозяйственныхОпераций", СписокХозяйственныхОпераций);
	//rarus agar 31.08.2020 15696 ++
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводСвободныеНовые.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг); // rarus kabany 21.06.2021 17869 +
	ЗаказыНаЗаводСвободныеБУ.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг); // rarus kabany 21.06.2021 17869 +
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	Продукты.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	Надстройки.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	//rarus agar 31.08.2020 15696 --
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг); //rarus vikhle 05.08.2021 mt 17834
	
	// rarus kabany 18.05.2021 17727 +++	
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);	
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ИспользоватьДопУсловия",Истина); 
	// rarus kabany 18.05.2021 17727 ---
	
	// rarus kabany 09.06.2021 17891 +++
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата()
	ЗаказыНаЗаводСвободныеНовые.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 21.06.2021 17869 + // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата()
	ЗаказыНаЗаводСвободныеБУ.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 21.06.2021 17869 + // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата()
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата()
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата()
	// rarus kabany 09.06.2021 17891 ---
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); //rarus vikhle 05.08.2021 mt 17834
	
	//rarus ozhnik 17458 01.04.2021 + 
	МассивСтатусов = Новый Массив;

	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов);
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов); // rarus kabany 18.05.2021 17727 +
	//rarus ozhnik 17458 01.04.2021 -
	
	//rarus vikhle 09.08.2021 17834 +++
	ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРаспределение, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободныеНовые, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); // rarus kabany 21.06.2021 17869 +
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободныеБУ, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); // rarus kabany 21.06.2021 17869 +
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводПродажи, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	//rarus pechek 03.06.2020 mantis 16056 ---
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор)); //rarus vikhle 05.08.2021 mt 17834
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ОтветственныйЗаРезерв", Пользователи.ТекущийПользователь(), ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));//rarus vikhle 05.08.2021 mt 17834
	
	// rarus tenkam 24.08.2020 mantis 16422 +++
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводСвободныеНовые.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); // rarus kabany 21.06.2021 17869 +
	ЗаказыНаЗаводСвободныеБУ.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); // rarus kabany 21.06.2021 17869 +
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	Продукты.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	// rarus tenkam 24.08.2020 mantis 16422 ---
    ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); // rarus kabany 18.05.2021 17727 +
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); //rarus vikhle 05.08.2021 mt 17834
	//rarus vikhle 09.08.2021 17834 --- 
	
	Элементы.ГруппаЗаявки.Видимость				= Ложь;
	
	КритерииПоискаПоКоридору = КритерииПоиска();
	//Элементы.ПолеОтбораПоКоридоруЗначений.СписокВыбора.ЗагрузитьЗначения(КритерииПоискаПоКоридору);
	
	ТумблерПоиск = "0";
	//НастройкаВидимостиОтбораПоКритериям();
	
	ОбновитьДеревоПродуктыПоОтветственнымНаСервере(); //rarus vikhle 05.08.2021 mt 17834
	
	ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(); //rarus pechek 30.06.2020 mantis 16201
	ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре(); //rarus agar 29.12.2020 17025 +-
	
	ЗаполнитьКонтрольныеТочки(); // rarus kabany 18.05.2021 17727 +++
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//rarus pechek 03.06.2020 mantis 16056 +++
	ЗаполнитьМассивИменСтраниц();
	
	мКритерииПоискаПоКоридору = ПолучитьМассивКритериевПоиска(); 
	Элементы.ПолеОтбораПоПериодуРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуСвободные.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуСвободныеБУ.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору); // rarus kabany 21.06.2021 17869 +
	Элементы.ПолеОтбораПоПериодуПродажи.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуПродукты.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору); //rarus pechek 30.06.2020 mantis 16056 +++
	Элементы.ПолеОтбораПоПериодуВсеЗаказы.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору); // rarus kabany 18.05.2021 17727 +
	Элементы.ПолеОтбораПоПериодуРезервSRU.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору); //rarus vikhle 05.08.2021 mt 17834
	
	//rarus vikhle 09.08.2021 17834 перенес в присозданиинасервере +++
	//ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	//БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРаспределение, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободныеНовые, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); // rarus kabany 21.06.2021 17869 +
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободныеБУ, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); // rarus kabany 21.06.2021 17869 +
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводПродажи, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	////rarus pechek 03.06.2020 mantis 16056 ---
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); //rarus vikhle 05.08.2021 mt 17834
	//
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ОтветственныйЗаРезерв", ПользователиКлиент.ТекущийПользователь(), ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));//rarus vikhle 05.08.2021 mt 17834
	//
	//// rarus tenkam 24.08.2020 mantis 16422 +++
	//ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//ЗаказыНаЗаводСвободныеНовые.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); // rarus kabany 21.06.2021 17869 +
	//ЗаказыНаЗаводСвободныеБУ.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); // rarus kabany 21.06.2021 17869 +
	//ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//Продукты.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//// rarus tenkam 24.08.2020 mantis 16422 ---
	//ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); // rarus kabany 18.05.2021 17727 +
	//ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили); //rarus vikhle 05.08.2021 mt 17834
	//rarus vikhle 09.08.2021 17834 ---
	
	ВыбранныеПродукты = Новый Массив;
	Продукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродукты",	ВыбранныеПродукты);
	// rarus kabany 12.05.2021 17464 +++
	мВыбраныСсылкиРаспределение = Новый Массив;
	мВыбраныСсылкиСвободные = Новый Массив;
	мВыбраныСсылкиПродажи    = Новый Массив;
	мВыбраныСсылкиВсеЗаказы = Новый Массив; // rarus kabany 18.05.2021 17727 +
	мВыбраныСсылкиРезервSRU = Новый Массив; //rarus vikhle 05.08.2021 mt 17834
	мВыбраныСсылкиСвободныеБУ = Новый Массив; //rarus vikhle 11.08.2021 mt 17834
	
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	ЗаказыНаЗаводСвободныеНовые.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные); // rarus kabany 21.06.2021 17869 +
	ЗаказыНаЗаводСвободныеБУ.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеБУ); // rarus vikhle 11.08.2021 mt 17834
	ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",    мВыбраныСсылкиПродажи);
    // rarus kabany 12.05.2021 17464 ---
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",    мВыбраныСсылкиВсеЗаказы); // rarus kabany 18.05.2021 17727 +
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU); //rarus vikhle 05.08.2021 mt 17834 
	
	КоличествоСтрокРаспределение = РассчитатьКоличествоСтрок("Распределение"); //rarus kabany 23.04.2021 17697 +++ 
	ОбновитьКоличествоЗаказов(Элементы.Страницы.ТекущаяСтраница.Имя, Истина); //rarus kabany 06.05.2021 17697 +++
	
	КоличествоСтрокПродуктов = РассчитатьКоличествоСтрокПродуктов();
	Элементы.ПродуктыКоличествоПродуктов.Заголовок = "Количество продуктов:" + КоличествоСтрокПродуктов;
	
	УправлениеДиалогом(); //rarus pechek 03.06.2020 mantis 16056 +++

КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы


//&НаКлиенте
//Процедура ТумблерПоискПриИзменении(Элемент)
//	НастройкаВидимостиОтбораПоКритериям();
//КонецПроцедуры

&НаКлиенте
Процедура ПродуктыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ПродуктыФлаг" Тогда
		СтандартнаяОбработка = Ложь;
		
		ВыбранныйПродукт = ВыбранныеПродукты.Найти(ВыбраннаяСтрока);
		Если ВыбранныйПродукт = Неопределено Тогда
			ВыбранныеПродукты.Добавить(ВыбраннаяСтрока);
		Иначе
			ВыбранныеПродукты.Удалить(ВыбранныйПродукт);
		КонецЕсли;
			
		Продукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродукты", ВыбранныеПродукты);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПродуктыПриАктивизацииСтроки(Элемент)
	Если Элементы.ПродуктыПанельЗаявок.Пометка Тогда
		ТекущаяСтрока = Элементы.Продукты.ТекущаяСтрока;
		
		ЗаявкиНаДействие.Отбор.Элементы.Очистить();
		ЭлементОтбора = ЗаявкиНаДействие.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПродуктыПоЗаявке.Изделие"); 
		ЭлементОтбора.Использование  = ИСТИНА;
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ТекущаяСтрока;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискРезервSRUПриИзменении(Элемент) //rarus vikhle 05.08.2021 mt 17834 +++
	
	УправлениеДиалогом();
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834

&НаКлиенте
Процедура ПолеОтбораПоПериодуРезервSRUПриИзменении(Элемент) //rarus vikhle 05.08.2021 mt 17834 +++
	
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаКлиенте
Процедура ЗаказыНаЗаводРезервSRUВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 05.08.2021 mt 17834 +++
	
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводРезервSRUПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus vikhle 05.08.2021 mt 17834 +++
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаКлиенте
Процедура ДеревоПродуктыПоОтветственнымВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 05.08.2021 mt 17834 +++
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.ДеревоПродуктыПоОтветственнымКоличество Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "Продукт");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU,
																				"ОтветственныйЗаРезерв",
																				ТекущиеДанные.ОтветственныйЗаРезерв,
																				ВидСравненияКомпоновкиДанных.Равно);
		// Дополнительно накладываем отбор по продукту, если выбор сделан на 2м уровне группировки																		
		Если ТекущиеДанные.ИмяГруппировки = "Продукт" Тогда  	
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU,
																					"Продукт",
																					ТекущиеДанные.Продукт,
																					ВидСравненияКомпоновкиДанных.Равно);		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

#КонецОбласти

#Область Вспомогательные

Функция КритерииПоиска()
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	МассивКолонокОтбора.Добавить("№ Шасси");
	МассивКолонокОтбора.Добавить("CDD");
	МассивКолонокОтбора.Добавить("CDD2");
	МассивКолонокОтбора.Добавить("DD");
	МассивКолонокОтбора.Добавить("DD2");
	МассивКолонокОтбора.Добавить("DDS");	
	
	Возврат МассивКолонокОтбора;	
КонецФункции

//Процедура НастройкаВидимостиОтбораПоКритериям()
//	Если ТумблерПоиск = "0" Тогда
//		Элементы.Группа_ОтборПоСписку.Видимость 			= Истина;
//		Элементы.Группа_ОтборПоКоридоруЗначений.Видимость 	= Ложь;
//					
//		ПолеС = "";
//		ПолеПо = "";
//		ПолеОтбораПоКоридоруЗначений = ""
//	Иначе
//		Элементы.Группа_ОтборПоСписку.Видимость 			= Ложь;
//		Элементы.Группа_ОтборПоКоридоруЗначений.Видимость 	= Истина;
//			
//		ПолеВвода = "";
//		КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.ПустаяСсылка();
//	КонецЕсли; 	
//КонецПроцедуры

&НаСервере 
Функция ПродуктыИзДинамическогоСписка()
	// rarus kabany 13.05.2021 17464 +++
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда	
		ИмяСписка = "ЗаказыНаЗаводРаспределение" 
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеНовые" Тогда	
		ИмяСписка = "ЗаказыНаЗаводСвободныеНовые";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда	
		ИмяСписка = "ЗаказыНаЗаводПродажи";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Страница_Продукты" Тогда	
		ИмяСписка = "Продукты";
		// rarus kabany 18.05.2021 17727 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда	
		ИмяСписка = "ЗаказыНаЗаводВсеЗаказы";
		// rarus kabany 18.05.2021 17727 ---
	//rarus vikhle 05.08.2021 mt 17834 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда	
		ИмяСписка = "ЗаказыНаЗаводРезервSRU";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеБУ" Тогда	
		ИмяСписка = "ЗаказыНаЗаводСвободныеБУ"; 	
	//rarus vikhle 05.08.2021 mt 17834 ---
	КонецЕсли;
	// rarus kabany 13.05.2021 17464 ---
	
	//ПродуктыТаблица = ДинамическийСписокВТаблицуЗначений(Элементы.Продукты, "Продукт");
	ПродуктыТаблица = ДинамическийСписокВТаблицуЗначений(Элементы[ИмяСписка], "Продукт"); // rarus kabany 13.05.2021 17464 +
	ПродуктыМассив = ПродуктыТаблица.ВыгрузитьКолонку("Продукт");
	Возврат ПродуктыМассив;
КонецФункции

Функция РассчитатьКоличествоСтрокПродуктов()
	СхемаКомпоновкиДанных 		= Элементы.Продукты.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    НастройкиКомпоновкиДанных 	= Элементы.Продукты.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаРезультат.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	//rarus bonmak 01.09.2020 16505 ++
	//ТаблицаРезультат.Свернуть("Продукт");
	//НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "Продукт");
	ТаблицаРезультат.Свернуть("ПродуктКоличество");
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "ПродуктКоличество");
	//rarus bonmak 01.09.2020 16505 --
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
КонецФункции

&НаКлиенте
Процедура ЗакрытиеЗаявкиНаДействие(СтруктураВозврДанные,ДополнительныеПараметры) Экспорт	
	ВыбранныеПродукты.Очистить();
	Продукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродукты", ВыбранныеПродукты);	
КонецПроцедуры

//rarus pechek 03.06.2020 mantis 16056 +++
&НаСервере
Процедура УправлениеДиалогом()
	Если ТумблерПоиск = "0" Тогда
		Элементы.ГруппаПоСпискуРаспределение.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийРаспределение.Видимость = Ложь;
		Элементы.ГруппаПоСпискуСвободные.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийСвободные.Видимость = Ложь;
		// rarus kabany 21.06.2021 17869 +++
		Элементы.ГруппаПоСпискуСвободныеБУ.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийСвободныеБУ.Видимость = Ложь;
		// rarus kabany 21.06.2021 17869 ---		
		Элементы.ГруппаПоСпискуПродажи.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийПродажи.Видимость = Ложь;
		//rarus pechek 30.06.2020 mantis 16056 +++
		Элементы.ГруппаПоСпискуПродукты.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийПродукты.Видимость = Ложь;
		//rarus pechek 30.06.2020 mantis 16056 ---
		// rarus kabany 18.05.2021 17727 +++
		Элементы.ГруппаПоСпискуВсеЗаказы.Видимость  = Истина;
		Элементы.ГруппаПоКоридоруЗначенийВсеЗаказы.Видимость = Ложь;
		// rarus kabany 18.05.2021 17727 ---
		// rarus vikhle 05.08.2021 17834 +++
		Элементы.ГруппаПоСпискуРезервSRU.Видимость  = Истина;
		Элементы.ГруппаПоКоридоруЗначенийРезервSRU.Видимость = Ложь;
		// rarus vikhle 05.08.2021 17834 ---
		ПолеС = "";
		ПолеПо = "";
		ПолеОтбораПоПериоду = ""
	Иначе
		Элементы.ГруппаПоСпискуРаспределение.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийРаспределение.Видимость = Истина;
		Элементы.ГруппаПоСпискуСвободные.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийСвободные.Видимость = Истина;
		// rarus kabany 21.06.2021 17869 +++
		Элементы.ГруппаПоСпискуСвободныеБУ.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийСвободныеБУ.Видимость = Истина;
		// rarus kabany 21.06.2021 17869 ---
		Элементы.ГруппаПоСпискуПродажи.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийПродажи.Видимость = Истина;
		//rarus pechek 30.06.2020 mantis 16056 +++
		Элементы.ГруппаПоСпискуПродукты.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийПродукты.Видимость = Истина;
		//rarus pechek 30.06.2020 mantis 16056 ---
		// rarus kabany 18.05.2021 17727 +++
		Элементы.ГруппаПоСпискуВсеЗаказы.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийВсеЗаказы.Видимость = Истина;
		// rarus kabany 18.05.2021 17727 ---
		// rarus vikhle 05.08.2021 17834 +++
		Элементы.ГруппаПоСпискуРезервSRU.Видимость  = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийРезервSRU.Видимость = Истина;
		// rarus vikhle 05.08.2021 17834 ---
		
		ПолеВвода = "";
		КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.ПустаяСсылка();
	КонецЕсли; 	
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ТумблерПоискРаспределениеПриИзменении(Элемент)
	УправлениеДиалогом();
	Если ТумблерПоиск = "1" Тогда
		Элементы.ПолеОтбораПоПериодуРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	КонецЕсли;
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ТумблерПоискСвободныеПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

// rarus kabany 21.06.2021 17869 +++
&НаКлиенте
Процедура ТумблерПоискСвободныеБУПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры
// rarus kabany 21.06.2021 17869 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ТумблерПоискПродажиПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура КритерийПоискаПриИзменении(Элемент)
	ПолеВвода = "";
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ПолеОтбораПоПериодуРаспределениеПриИзменении(Элемент)
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ПолеОтбораПоПериодуСвободныеПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

// rarus kabany 21.06.2021 17869 +++
&НаКлиенте
Процедура ПолеОтбораПоПериодуСвободныеБУПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры
// rarus kabany 21.06.2021 17869 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ПолеОтбораПоПериодуПродажиПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

&НаКлиенте
Процедура ПолеОтбораПоПериодуПродуктыПриИзменении(Элемент)
	//rarus pechek 03.06.2020 mantis 16056 +++
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
	//rarus pechek 03.06.2020 mantis 16056 ---
КонецПроцедуры



//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент) 
	Для Каждого Страница ИЗ мИменаСтраниц Цикл
		ИмяПоляС = "ПолеС" + Страница;
		ИмяПоляПо = "ПолеПо" + Страница;
		Если Элемент.ТекстРедактирования = "№ Заказа" ИЛИ Элемент.ТекстРедактирования = "№ Шасси" Тогда
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Строка");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Иначе
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Дата");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Дата");
		КонецЕсли;
		ПолеС = Неопределено;
		ПолеПо = Неопределено;
	КонецЦикла;	
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

// rarus kabany 18.05.2021 17727 +++
&НаКлиенте
Процедура ТумблерПоискВсеЗаказыПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначенияКонтрольныхТочек(МассивСсылок)
	//rarus vikhle 12.02.2021 mt 17220 +++
	СтруктураКТ = Новый Структура;
	Для Каждого СтрокаКТ Из КонтрольныеТочки Цикл
		Если ЗначениеЗаполнено(СтрокаКТ.Значение) ИЛИ СтрокаКТ.Очистить Тогда
			СтруктураКТ.Вставить(СтрокаКТ.Реквизит, СтрокаКТ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если СтруктураКТ.Свойство("DD2")  
		И (НЕ СтруктураКТ.Свойство("DDDeviation") ИЛИ НЕ ЗначениеЗаполнено(СтруктураКТ.DDDeviation)) Тогда
		СтруктураКТ.Удалить("DD2");
		СтруктураКТ.Удалить("DDDeviation");
		ВывестиСообщениеПол(Нстр("ru = 'При указании даты DD2 необходимо также указать DD deviation. Дата DD2 не была установлена.'"));
	ИначеЕсли СтруктураКТ.Свойство("DDDeviation") И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьDDDeviationВЗаказеНаЗавод") Тогда
		СтруктураКТ.Удалить("DDDeviation");
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на установку DD deviation в заказах на завод.'"));	
		Если СтруктураКТ.Свойство("DD2") Тогда
			СтруктураКТ.Удалить("DD2");
		КонецЕсли;	
	КонецЕсли;
	
	//rarus vikhle 04.03.2021 mt 17339 +++
	Если СтруктураКТ.Свойство("DDPriority") И НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактироватьDDPriorityВЗаказеНаЗавод") Тогда
		СтруктураКТ.Удалить("DDPriority");
		ВывестиСообщениеПол(Нстр("ru = 'Нет права на установку DD priority в заказах на завод.'"));	
	КонецЕсли;	
	//rarus vikhle 04.03.2021 mt 17339 ---	
	
	//rarus vikhle 11.03.2021 mt 17411 +++
	Если СтруктураКТ.Свойство("DD") ИЛИ СтруктураКТ.Свойство("DD2") Тогда
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("МассивСсылок",МассивСсылок);
		ДопПараметры.Вставить("СтруктураКТ",СтруктураКТ);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаDDИнформер",ЭтотОбъект,ДопПараметры);
		ПоказатьВопрос(ОписаниеОповещения,Нстр("ru = 'Удалить заказы из DD-информера?'"),РежимДиалогаВопрос.ДаНет);
	Иначе
		УстановитьЗначенияКТПродолжение(МассивСсылок,СтруктураКТ);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьЗаполненныеКТ()
	
	//rarus vikhle 12.02.2021 mt 17220 +++	
	ЕстьЗаполненные = Ложь;
	Для Каждого СтрокаКТ Из КонтрольныеТочки Цикл
		Если ЗначениеЗаполнено(СтрокаКТ.Значение) ИЛИ СтрокаКТ.Очистить Тогда 
			ЕстьЗаполненные = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ЕстьЗаполненные;	
	//rarus vikhle 12.02.2021 mt 17220 ---
	
КонецФункции

&НаКлиенте
Процедура УстановитьЗначенияКТПродолжение(МассивСсылок, СтруктураКТ,УдалитьИзDDИнформера = Ложь)
	ЗаписатьКТПоСтруктуре(МассивСсылок, СтруктураКТ,УдалитьИзDDИнформера);	
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	Если ТекущаяСтраница = Элементы.Распределение Тогда
		мВыбраныСсылкиРаспределение.Очистить();	
		КоличествоВыбранныхРаспределение = 0;
		ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиРаспределение);
		Элементы.ЗаказыНаЗаводРаспределение.Обновить();
	ИначеЕсли ТекущаяСтраница = Элементы.ВсеЗаказы Тогда 
		мВыбраныСсылкиВсеЗаказы.Очистить();	
		КоличествоВыбранныхВсеЗаказы = 0;
		ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки",мВыбраныСсылкиВсеЗаказы);
		Элементы.ЗаказыНаЗаводВсеЗаказы.Обновить();
	КонецЕсли;
	Для Каждого СтрокаТаблицы Из КонтрольныеТочки Цикл
		СтрокаТаблицы.Значение = Неопределено;
		СтрокаТаблицы.Очистить = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьКТПоСтруктуре(МассивСсылок, СтруктураКТ,УдалитьИзDDИнформера = Ложь)
	
	//rarus vikhle 15.02.2021 mt 17220 +++	
	Для Каждого СтрокаПродукта Из МассивСсылок Цикл 
		Для Каждого СтрокаКТ Из СтруктураКТ Цикл
			ЗаписатьКТНаСервере(СтрокаКТ.Ключ, СтрокаКТ.Значение, СтрокаПродукта,УдалитьИзDDИнформера); 
		КонецЦикла;
	КонецЦикла;
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ЗаписатьКТНаСервере(ТекРеквизит, ЗначениеРеквизита, ПродуктСсылка,УдалитьИзDDИнформера)
	
	//rarus vikhle 15.02.2021 mt 17220 +++
	НайденнаяКТ = Справочники.Scan_КонтрольныеТочкиБизнесПроцессов.НайтиПоРеквизиту("РеквизитОбъекта", ТекРеквизит);
	Если ЗначениеЗаполнено(НайденнаяКТ) Тогда
		ОбъектМетаданных = НайденнаяКТ.ОбъектМетаданных;
	Иначе	
		Возврат;
	КонецЕсли;
	
	ЗаказСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПродуктСсылка,"ЗаказНаЗавод");
	Если НЕ ЗначениеЗаполнено(ЗаказСсылка) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 не заполнен заказ на завод. Установка контрольных точек не выполнена.'"),,,,,ПродуктСсылка);
		Возврат;
	КонецЕсли;
	
	Если ОбъектМетаданных = "Scan_КлючевыеДатыРегистрСведений" Тогда
		ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты[ТекРеквизит];
		РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(ЗаказСсылка,ВидКлючевойДаты,ЗначениеРеквизита);
		//rarus vikhle 11.03.2021 mt 17411 +++
		Если УдалитьИзDDИнформера 
			И (ТекРеквизит = "DD" ИЛИ ТекРеквизит = "DD2") Тогда
			УдалитьЗаказИзDDИнформера(ЗаказСсылка);
		КонецЕсли;	
		//rarus vikhle 11.03.2021 mt 17411 ---
	ИначеЕсли ОбъектМетаданных = "Scan_ЗаказыНаЗавод" Тогда 	
		ЗаказОбъект = ЗаказСсылка.ПолучитьОбъект();
		ЗаказОбъект[ТекРеквизит] = ЗначениеРеквизита;
		Если ЗаказОбъект.Модифицированность() Тогда
			Попытка
				ЗаказОбъект.Записать();
			Исключение
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Произошла ошибка при записи заказа %1 : %2'"),Строка(ЗаказСсылка),ОписаниеОшибки());
				ВывестиСообщениеПол(ТекстОшибки);
				ЗаписьЖурналаРегистрации(Нстр("ru = 'Запись заказа на завод'"),УровеньЖурналаРегистрации.Ошибка,,ЗаказСсылка,ТекстОшибки);
			КонецПопытки;	
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УдалитьЗаказИзDDИнформера(ЗаказНаЗавод)
	
	РегистрыСведений.Scan_ОчередьDDИнформера.УдалитьЗаписьПоЗаказу(ЗаказНаЗавод);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтрольныеТочки()
	
	//rarus vikhle 10.02.2021 mt 17220 +++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка КАК КонтрольнаяТочка,
	               |	Scan_КонтрольныеТочкиАРМ.КонтрольнаяТочка.РеквизитОбъекта КАК Реквизит
	               |ИЗ
	               |	РегистрСведений.Scan_КонтрольныеТочкиАРМ КАК Scan_КонтрольныеТочкиАРМ
	               |ГДЕ
	               |	Scan_КонтрольныеТочкиАРМ.АРМОтделаПланирования
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Реквизит";
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	КонтрольныеТочки.Загрузить(РезультатЗапроса);
	//rarus vikhle 10.02.2021 mt 17220 ---
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипКТ(КонтрольнаяТочка)
	
	//rarus vikhle 15.02.2021 mt 17220 +++
	Если КонтрольнаяТочка.ОбъектМетаданных = "Scan_ЗаказыНаЗавод" Тогда
		РеквизитыСправочника = Метаданные.НайтиПоПолномуИмени("Справочник.Scan_ЗаказыНаЗавод").Реквизиты;
		РеквизитКарточки = РеквизитыСправочника.Найти(КонтрольнаяТочка.РеквизитОбъекта);
	ИначеЕсли КонтрольнаяТочка.ОбъектМетаданных = "Scan_КлючевыеДатыРегистрСведений" Тогда
		РеквизитКарточки = Метаданные.РегистрыСведений.Scan_КлючевыеДатыПроцессов.Ресурсы.Значение;
	КонецЕсли;
	Возврат РеквизитКарточки.Тип;
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецФункции

&НаКлиенте
Процедура ПослеВопросаDDИнформер(Результат, ДопПараметры) Экспорт
	
	УдалитьИзDDИнформера = Результат = КодВозвратаДиалога.Да;
	УстановитьЗначенияКТПродолжение(ДопПараметры.МассивСсылок,ДопПараметры.СтруктураКТ,УдалитьИзDDИнформера);
	
КонецПроцедуры
// rarus kabany 18.05.2021 17727 ---

&НаСервере
Процедура ОбновитьДеревоПродуктыПоОтветственнымНаСервере() //rarus vikhle 05.08.2021 mt 17834 +++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделийОстатки.Изделие КАК Изделие,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК Местонахождение,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК МестоХранения
	               |ПОМЕСТИТЬ ТекущееМестонахождение
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки КАК Scan_МестонахождениеИзделийОстатки
	               |ГДЕ
	               |	Scan_МестонахождениеИзделийОстатки.КоличествоОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_МестонахождениеИзделийОстатки.Изделие
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Изделие
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ОтветственныйЗаРезерв, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОтветственныйЗаРезерв,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	1 КАК Количество
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТекущееМестонахождение КАК ТекущееМестонахождение
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = ТекущееМестонахождение.Изделие
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	               |	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ТипСоглашенияОПоставке = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(Продукт),
	               |	СУММА(Количество)
	               |ПО
	               |	ОтветственныйЗаРезерв";
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();			 
	Запрос.УстановитьПараметр("МассивТиповПродуктовНадстроекИУслуг",МассивТиповПродуктовНадстроекИУслуг);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПервыйУровень = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Дерево = РеквизитФормыВЗначение("ДеревоПродуктыПоОтветственным");
	Дерево.Строки.Очистить();
	
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень 							= Дерево.Строки.Добавить();
		Корень.КолонкаГруппировки		= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.ОтветственныйЗаРезерв 	= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.Количество 				= ВыборкаПервыйУровень.Количество; 
		Корень.ИмяГруппировки 			= "ОтветственныйЗаРезерв"; //используется при выборе в дереве на форме
		
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВторойУровень.Следующий() Цикл
			ДетальныеЗаписи 						= Корень.Строки.Добавить();
			ДетальныеЗаписи.КолонкаГруппировки		= ВыборкаВторойУровень.Продукт; 
			ДетальныеЗаписи.Продукт 				= ВыборкаВторойУровень.Продукт;
			ДетальныеЗаписи.Количество 				= ВыборкаВторойУровень.Количество;
			ДетальныеЗаписи.ОтветственныйЗаРезерв	= ВыборкаВторойУровень.ОтветственныйЗаРезерв;
			ДетальныеЗаписи.ИмяГруппировки 			= "Продукт"; //используется при выборе в дереве на форме
		КонецЦикла;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПродуктыПоОтветственным");
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаКлиенте
Процедура ПослеЗакрытияЗаявки(Результат, Страница) Экспорт //rarus vikhle 23.07.2021 mt 17834 +++ 
	
	Если Страница = Элементы.СвободныеНовые Тогда
		Элементы.ЗаказыНаЗаводСвободныеНовые.Обновить();
	ИначеЕсли Страница = Элементы.СвободныеБУ Тогда 
		Элементы.ЗаказыНаЗаводСвободныеБУ.Обновить();	
	ИначеЕсли Страница = Элементы.РезервSRU Тогда
		Элементы.ЗаказыНаЗаводРезервSRU.Обновить();
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 23.07.2021 mt 17834 ---

#КонецОбласти

#Область СобытияКомандФормы
//rarus kabany 26.04.2021 17666 +++
&НаКлиенте
Процедура ОткрытьОтчетПлановыеЦеныПродажиШасси(Команда)
	ОткрытьФорму("Отчет.Scan_ОтчетПоПлановымЦенамПродажиШасси.Форма");
КонецПроцедуры
//rarus kabany 26.04.2021 17666 ---

&НаКлиенте
Процедура ОткрытьОтчетOrderDeviation(Команда)
	ОткрытьФорму("Отчет.Scan_OrderDeviation.Форма");
КонецПроцедуры

//rarus vikhle 26.08.2020 mt 16274
&НаКлиенте
Процедура ОткрытьОтчетСписокОтгрузок(Команда)
	ОткрытьФорму("Отчет.Scan_СписокОтгрузок.Форма");
КонецПроцедуры
//rarus vikhle 26.08.2020 mt 16274

&НаКлиенте
Процедура ОткрытьОтчетИсторияПеремещенийИзделий(Команда)
	ОткрытьФорму("Отчет.Scan_ИсторияПеремещенийИзделий.Форма.ФормаОтчета");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ПродуктыМассив = ПродуктыИзДинамическогоСписка();
	Для Каждого ПродуктСсылка Из ПродуктыМассив Цикл
		
		Если Элементы.Страницы.ТекущаяСтраница.Имя = "Продукты" Тогда // rarus kabany 13.05.2021 17464 +
			Если ВыбранныеПродукты.Найти(ПродуктСсылка) = Неопределено Тогда
				ВыбранныеПродукты.Добавить(ПродуктСсылка);
			КонецЕсли;
			Продукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродукты", ВыбранныеПродукты);
			// rarus kabany 13.05.2021 17464 +++	
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
			Если мВыбраныСсылкиРаспределение.Найти(ПродуктСсылка) = Неопределено Тогда
				мВыбраныСсылкиРаспределение.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();
			ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеНовые" Тогда // rarus kabany 22.06.2021 17869 +
			Если мВыбраныСсылкиСвободные.Найти(ПродуктСсылка) = Неопределено Тогда
				мВыбраныСсылкиСвободные.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхСвободныеНовые = мВыбраныСсылкиСвободные.Количество();  // rarus kabany 21.06.2021 17869 +
			ЗаказыНаЗаводСвободныеНовые.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные); // rarus kabany 21.06.2021 17869 +
			// rarus kabany 18.05.2021 17727 +++
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
			Если мВыбраныСсылкиВсеЗаказы.Найти(ПродуктСсылка) = Неопределено Тогда
				мВыбраныСсылкиВсеЗаказы.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхВсеЗаказы = мВыбраныСсылкиВсеЗаказы.Количество();
			ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
			// rarus kabany 18.05.2021 17727 ---
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда //rarus vikhle 05.08.2021 mt 17834
			Если мВыбраныСсылкиПродажи.Найти(ПродуктСсылка) = Неопределено Тогда
				мВыбраныСсылкиПродажи.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество();
			ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);			
		//rarus vikhle 05.08.2021 mt 17834 +++
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда //rarus vikhle 05.08.2021 mt 17834
			Если мВыбраныСсылкиРезервSRU.Найти(ПродуктСсылка) = Неопределено Тогда
				мВыбраныСсылкиРезервSRU.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();
			ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеБУ" Тогда //rarus vikhle 05.08.2021 mt 17834
			Если мВыбраныСсылкиСвободныеБУ.Найти(ПродуктСсылка) = Неопределено Тогда
				мВыбраныСсылкиСвободныеБУ.Добавить(ПродуктСсылка);
			КонецЕсли;
			КоличествоВыбранныхСвободныеБУ = мВыбраныСсылкиСвободныеБУ.Количество();
			ЗаказыНаЗаводСвободныеБУ.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеБУ);	
		//rarus vikhle 05.08.2021 mt 17834 ---
		КонецЕсли;
		// rarus kabany 13.05.2021 17464 ---		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Страница_Продукты" Тогда // rarus kabany 12.05.2021 17464 +			
		ВыбранныеПродукты.Очистить();
		Продукты.Параметры.УстановитьЗначениеПараметра("ВыбранныеПродукты", ВыбранныеПродукты);
		// rarus kabany 12.05.2021 17464 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		мВыбраныСсылкиРаспределение.Очистить();
		КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();
		ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеНовые" Тогда // rarus kabany 21.06.2021 17869 +
		мВыбраныСсылкиСвободные.Очистить();
		КоличествоВыбранныхСвободныеНовые = мВыбраныСсылкиСвободные.Количество(); // rarus kabany 21.06.2021 17869 +
		ЗаказыНаЗаводСвободныеНовые.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные); // rarus kabany 21.06.2021 17869 +
		// rarus kabany 18.05.2021 17727 +++	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
		мВыбраныСсылкиВсеЗаказы.Очистить();
		КоличествоВыбранныхВсеЗаказы = мВыбраныСсылкиВсеЗаказы.Количество();
		ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
		// rarus kabany 18.05.2021 17727 ---
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда //rarus vikhle 05.08.2021 mt 17834 
		мВыбраныСсылкиПродажи.Очистить();
		КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество();
		ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
	//rarus vikhle 05.08.2021 mt 17834 +++	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда 
		мВыбраныСсылкиРезервSRU.Очистить();
		КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();
		ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеБУ" Тогда 
		мВыбраныСсылкиСвободныеБУ.Очистить();
		КоличествоВыбранныхСвободныеБУ = мВыбраныСсылкиСвободныеБУ.Количество();
		ЗаказыНаЗаводСвободныеБУ.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеБУ);
	//rarus vikhle 05.08.2021 mt 17834 ---	
	КонецЕсли;
	// rarus kabany 12.05.2021 17464 ---
КонецПроцедуры

//rarus pechek 30.06.2020 mantis 16056 +++

//&НаКлиенте
//Процедура Подобрать(Команда)
//	ИспользоватьЧислоВместоСтроки = Ложь;
//	Если ТумблерПоиск = "0" Тогда 	
//		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
//			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
//			Возврат;
//		КонецЕсли;
//		
//		Если СокрЛП(ПолеВвода) = "" Тогда
//			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
//			Возврат;
//		КонецЕсли;
//	Иначе
//		Если НЕ ЗначениеЗаполнено(ПолеОтбораПоКоридоруЗначений) Тогда
//			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
//			Возврат;
//		КонецЕсли;
//		
//		Попытка
//			ЧислоПолеС = Число(ПолеС);
//			ЧислоПолеПо = Число(ПолеПо);
//			ИспользоватьЧислоВместоСтроки = Истина;
//		Исключение
//		КонецПопытки;
//		
//		//Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо <= ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда
//		Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо < ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда	 //rarus pechek 19.06.2020 mantis 16201
//			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
//			Возврат;
//		ИначеЕсли ИспользоватьЧислоВместоСтроки Тогда 	
//			//Если ЧислоПолеПо <= ЧислоПолеС Тогда
//			Если ЧислоПолеПо < ЧислоПолеС Тогда	 //rarus pechek 19.06.2020 mantis 16201  
//				Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
//				Возврат;
//			КонецЕсли;	
//		КонецЕсли;	
//	КонецЕсли;
//	
//	ПодборПоКритериямНаСервере();
//КонецПроцедуры

//Процедура ПодборПоКритериямНаСервере()
//		
//	Если ТумблерПоиск = "0" Тогда 
//		
//		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
//		Индекс = -1;
//		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
//			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
//				Индекс = Индекс + 1;
//				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
//					Попытка
//						ЧислоСтроки = Число(ЭлементМассива);
//					Исключение
//						Продолжить;
//					КонецПопытки;	
//					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
//					Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
//						ЭлементМассива = "0" + ЭлементМассива;
//					КонецЦикла;
//				МассивПодстрок[Индекс] = ЭлементМассива;	
//				КонецЕсли;
//			КонецЦикла;	
//		КонецЕсли;
//		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
//			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
//		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.VIN Тогда
//			ЛевоеЗначение = "VIN";
//		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.МодельПродукта Тогда
//			ЛевоеЗначение = "МодельПродукта.Наименование";
//		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.Дилер Тогда
//			ЛевоеЗначение = "Заказчик.Наименование";
//		КонецЕсли;
//		
//		ЭлементыОтбора = Продукты.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
//		Продукты.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки).Элементы;
//		
//		//ОбъектНастройки = Продукты.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
//		ЭлементыОтбора.Очистить();
//		                                              
//		НовыйОтбор = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//		НовыйОтбор.Использование  = Истина;
//		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
//		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
//		НовыйОтбор.ПравоеЗначение = МассивПодстрок;
//	Иначе
//		ЭлементыОтбора = Продукты.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
//		Продукты.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки).Элементы;
//		//ОбъектНастройки =  Продукты.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
//		ЭлементыОтбора.Очистить();
//		
//		// rarus tenkam 17.06.2020 mantis 16201 +++
//		Если ПолеОтбораПоКоридоруЗначений = "№ Шасси" Тогда
//			ЛевоеЗначение = "VIN";
//		ИначеЕсли ПолеОтбораПоКоридоруЗначений = "№ Заказа" Тогда
//			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
//		Иначе
//			ЛевоеЗначение = ПолеОтбораПоКоридоруЗначений;
//		КонецЕсли;
//		
//		Если ПолеОтбораПоКоридоруЗначений = "№ Шасси" ИЛИ
//			ПолеОтбораПоКоридоруЗначений = "№ Заказа" Тогда
//			
//			СообщениеОбОшибке = "";
//			ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(Продукты, ЛевоеЗначение, ПолеС, ПолеПо,,СообщениеОбОшибке);
//			Если НЕ ОтборУстановлен Тогда
//				Сообщить(СообщениеОбОшибке);
//			КонецЕсли;
//		Иначе
//			НовыйОтбор = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//			НовыйОтбор.Использование  = Истина;
//			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
//			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
//			НовыйОтбор.ПравоеЗначение = ПолеС; 	
//			
//			НовыйОтбор = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//			НовыйОтбор.Использование  = Истина;
//			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
//			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
//			НовыйОтбор.ПравоеЗначение = ПолеПо;	
//		КонецЕсли;                         		
//		
//		//Если ПолеОтбораПоКоридоруЗначений = "№ Заказа" Тогда
//		//	Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруЗаказаНаЗавод(Продукты, "ЗаказНаЗавод.Наименование", ПолеС, ПолеПо, Истина);
//		//ИначеЕсли ПолеОтбораПоКоридоруЗначений = "№ Шасси" Тогда
//		//	ЛевоеЗначение = "VIN"
//		//Иначе
//		//	ЛевоеЗначение = ПолеОтбораПоКоридоруЗначений;
//		//КонецЕсли;	
//		//
//		//Если ПолеОтбораПоКоридоруЗначений <> "№ Заказа" Тогда 
//		//	НовыйОтбор = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//		//	НовыйОтбор.Использование  = Истина;
//		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
//		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
//		//	НовыйОтбор.ПравоеЗначение = ПолеС; 
//		//	
//		//	НовыйОтбор = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//		//	НовыйОтбор.Использование  = Истина;
//		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
//		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
//		//	НовыйОтбор.ПравоеЗначение = ПолеПо;
//		//КонецЕсли;
//		// rarus tenkam 17.06.2020 mantis 16201 ---
//		
//	КонецЕсли;
//КонецПроцедуры
//rarus pechek 30.06.2020 mantis 16056 ---


&НаКлиенте
Процедура ДействияИПоиск(Команда)
	Элементы.ПродуктыДействияИПоиск.Пометка = НЕ Элементы.ПродуктыДействияИПоиск.Пометка;
	//Элементы.Группа_ОтборПоКритериям.Видимость = Элементы.ПродуктыДействияИПоиск.Пометка;
	//rarus pechek 03.06.2020 mantis 16056 +++
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ИмяГруппыОтбора = "ГруппаОтборРаспределение";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеНовые" Тогда // rarus kabany 21.06.2021 17869 +
		ИмяГруппыОтбора = "ГруппаОтборСвободные";
		// rarus kabany 21.06.2021 17869 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеБУ" Тогда 
		ИмяГруппыОтбора = "ГруппаОтборСвободныеБУ";
		// rarus kabany 21.06.2021 17869 ---
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
		ИмяГруппыОтбора = "ГруппаОтборПродажи";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Страница_Продукты" Тогда
		//ИмяГруппыОтбора = "Группа_ОтборПоКритериям";
		ИмяГруппыОтбора = "ГруппаОтборПродукты";
		// rarus kabany 18.05.2021 17727 +++ 
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
		ИмяГруппыОтбора = "ГруппаОтборВсеЗаказы";
		// rarus kabany 18.05.2021 17727 ---
	//rarus vikhle 05.08.2021 mt 17834 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда
		ИмяГруппыОтбора = "ГруппаОтборРезервSRU";  
	//rarus vikhle 05.08.2021 mt 17834 ---
	КонецЕсли;
	
	Если Не Элементы[ИмяГруппыОтбора].Видимость Тогда 
		Элементы[ИмяГруппыОтбора].Видимость = Истина;
	Иначе
		Элементы[ИмяГруппыОтбора].Видимость = Ложь;	
	КонецЕсли;	
	//rarus pechek 03.06.2020 mantis 16056 ---
КонецПроцедуры

//rarus pechek 03.06.2020 mantis 16056 +++
&НаСервере
Функция ПолучитьСписокПоСтранице(Страница)
	Если Страница = "Распределение" Тогда
		Возврат ЗаказыНаЗаводРаспределение;
		// rarus kabany 21.06.2021 17869 +
	ИначеЕсли Страница = "СвободныеНовые" Тогда 
		Возврат ЗаказыНаЗаводСвободныеНовые; 
	ИначеЕсли Страница = "СвободныеБУ" Тогда 
		Возврат ЗаказыНаЗаводСвободныеБУ;
		// rarus kabany 21.06.2021 17869 ---
	ИначеЕсли Страница = "Продажи" Тогда
		Возврат ЗаказыНаЗаводПродажи;
	ИначеЕсли Страница = "Страница_Продукты" Тогда
		Возврат Продукты;
		// rarus kabany 18.05.2021 17727 +++
	ИначеЕсли Страница = "ВсеЗаказы" Тогда
		Возврат ЗаказыНаЗаводВсеЗаказы;
		// rarus kabany 18.05.2021 17727 ---		
	//rarus vikhle 05.08.2021 mt 17834 +++
	ИначеЕсли Страница = "РезервSRU" Тогда
		Возврат ЗаказыНаЗаводРезервSRU;
	//rarus vikhle 05.08.2021 mt 17834 ---
	КонецЕсли;		
КонецФункции	
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Функция ПолучитьМассивКритериевПоиска()
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	МассивКолонокОтбора.Добавить("№ Шасси");
	МассивКолонокОтбора.Добавить("PDD");
	МассивКолонокОтбора.Добавить("CDD");
	МассивКолонокОтбора.Добавить("CDD2");
	МассивКолонокОтбора.Добавить("EDD");
	МассивКолонокОтбора.Добавить("DD");
	МассивКолонокОтбора.Добавить("DD2");
	МассивКолонокОтбора.Добавить("DDS");
	МассивКолонокОтбора.Добавить("Бронь");	
	Возврат МассивКолонокОтбора;   		
КонецФункции
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ЗаполнитьМассивИменСтраниц()
	мИменаСтраниц = Новый Массив;
	мИменаСтраниц.Добавить("Распределение");
	мИменаСтраниц.Добавить("СвободныеНовые"); // rarus kabany 21.06.2021 17869 +
	мИменаСтраниц.Добавить("СвободныеБУ"); // rarus kabany 21.06.2021 17869 +
	мИменаСтраниц.Добавить("Продажи");
	мИменаСтраниц.Добавить("Продукты");
	мИменаСтраниц.Добавить("ВсеЗаказы"); // rarus kabany 18.05.2021 17727 +
	мИменаСтраниц.Добавить("РезервSRU"); //rarus vikhle 05.08.2021 mt 17834 
КонецПроцедуры	
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаСервере
Процедура ОкПоискПоКритериямНаСервере(Страница)
	Если ТумблерПоиск = "0" Тогда  
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
		//rarus pechek 09.06.2020 mantis 16056 +++
		МассивПодстрок2 = Новый Массив;
		// rarus agar 28.05.2021 16927 ++
		//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивПодстрок2,МассивПодстрок);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок2, МассивПодстрок, Истина);
		// rarus agar 28.05.2021 16927 --
		//rarus pechek 09.06.2020 mantis 16056 ---

		//преобразование массива, чтобы находить заказы и шасси по номеру без нулей
		Индекс = -1;
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
			//rarus pechek 19.06.2020 mantis 16201 +++
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (7 - КолВоЗнаковЧисло) Цикл  // 7-длина номера шасси  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
			//rarus pechek 19.06.2020 mantis 16201 ---
		КонецЕсли;
		// rarus agar 28.05.2021 16927 ++
		//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивПодстрок,МассивПодстрок2); //rarus pechek 09.06.2020 mantis 16056 +
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок, МассивПодстрок2, Истина);
		// rarus agar 28.05.2021 16927 --
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.МодельПродукта Тогда
			ЛевоеЗначение = "Модель.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.Дилер Тогда
			// rarus agar 01.02.2021 17091 ++
			//ЛевоеЗначение = "Дилер.Наименование";
			ЛевоеЗначение = "Заявка.Дилер.Наименование";
			// rarus agar 01.02.2021 17091 --
		КонецЕсли;
		
		ОбъектНастройки = ПолучитьСписокПоСтранице(Страница).КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
		ОбъектНастройки.Очистить();
		
		НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НовыйОтбор.ПравоеЗначение = МассивПодстрок;
	Иначе
		ОбъектНастройки =  ПолучитьСписокПоСтранице(Страница).КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		ОбъектНастройки.Очистить();
		
		// rarus tenkam 17.06.2020 mantis 16201 +++
		Если ПолеОтбораПоПериоду = "№ Шасси" Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		Иначе
			ЛевоеЗначение = ПолеОтбораПоПериоду;
		КонецЕсли;
		
		Если ПолеОтбораПоПериоду = "№ Шасси" ИЛИ
			ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ДинамическийСписок = ПолучитьСписокПоСтранице(Страница);
			
			СообщениеОбОшибке = "";
			ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(ДинамическийСписок, ЛевоеЗначение, ПолеС, ПолеПо,,СообщениеОбОшибке);
			Если НЕ ОтборУстановлен Тогда
				Сообщить(СообщениеОбОшибке);
			КонецЕсли;
		Иначе
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеС; 	
			
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеПо;	
		КонецЕсли;
		
		//Если ПолеОтбораПоПериоду = "№ Шасси" Тогда 
		//	ЛевоеЗначение = "Шасси"
		//Иначе
		//	ЛевоеЗначение = ПолеОтбораПоПериоду;
		//КонецЕсли;	
		//
		//Если ПолеОтбораПоПериоду <> "№ Заказа" Тогда 
		//	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//	НовыйОтбор.Использование  = Истина;
		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		//	НовыйОтбор.ПравоеЗначение = ПолеС; // НовыйОтбор.ПравоеЗначение = ?(ИспользоватьИзмененноеПолеС,НовоеЧислоДляПоискаС,ПолеС);
		//	
		//	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//	НовыйОтбор.Использование  = Истина;
		//	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		//	НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		//	НовыйОтбор.ПравоеЗначение = ПолеПо; //НовыйОтбор.ПравоеЗначение = ?(ИспользоватьИзмененноеПолеПо,НовоеЧислоДляПоискаПо,ПолеПо);
		//КонецЕсли;
		//
		//
		//Если ПолеОтбораПоПериоду = "№ Заказа" Тогда 
		//	ДинамическийСписок = ПолучитьСписокПоСтранице(Страница);
		//	Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруЗаказаНаЗавод(ДинамическийСписок, "ЗаказНаЗавод.Наименование", ПолеС, ПолеПо);//rarus vikhle 29.05.2020 mt 15702
		//КонецЕсли;
		// rarus tenkam 17.06.2020 mantis 16201 ---
		
	КонецЕсли;
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ОкПоискПоКритериям(Команда)
	ИспользоватьЧислоВместоСтроки = Ложь;
	Если ТумблерПоиск = "0" Тогда 	
		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Если СокрЛП(ПолеВвода) = "" Тогда
			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПолеОтбораПоПериоду) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Попытка
			ЧислоПолеС = Число(ПолеС);
			ЧислоПолеПо = Число(ПолеПо);
			ИспользоватьЧислоВместоСтроки = Истина;
		Исключение
		КонецПопытки;
		
		//Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо <= ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда
		Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо < ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда  //rarus pechek 19.06.2020 mantis 16201
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
		ИначеЕсли ИспользоватьЧислоВместоСтроки Тогда 	
			//Если ЧислоПолеПо <= ЧислоПолеС Тогда
			Если ЧислоПолеПо < ЧислоПолеС Тогда   //rarus pechek 19.06.2020 mantis 16201
				Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	СнятьФлажки(Команды.СнятьФлажки); //rarus agar 22.03.2021 17501 +-
	
	ОкПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ОтключитьПоискПоКритериям(Команда)
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаСервере
Процедура ОтключитьПоискПоКритериямНаСервере(Страница)
	Список = ПолучитьСписокПоСтранице(Страница);
	Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();
	ПолеВвода = "";
	ПолеС  = Неопределено;
	ПолеПо = Неопределено;
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//ЗАКАЗЫ ПО МОДЕЛЯМ

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ЗаказыПоМоделямВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямКолВо" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводРаспределение.Отбор.Элементы.Очистить();
		УстановитьОтборПоМодели(Элемент.ТекущиеДанные.МодельПродукта);
	КонецЕсли;
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ЗаказыПоМоделямСвободныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводСвободныеНовые.Отбор.Элементы.Очистить();  // rarus kabany 21.06.2021 17869 +
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободныеНовые, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно); // rarus kabany 21.06.2021 17869 +
	КонецЕсли;
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

// rarus kabany 21.06.2021 17869 +++
&НаКлиенте
Процедура ЗаказыПоМоделямСвободныеБУВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеБУМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеБУКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводСвободныеБУ.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободныеБУ, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
КонецПроцедуры
// rarus kabany 21.06.2021 17869 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ЗаказыПоМоделямПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямПродажиМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямПродажиКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводПродажи.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводПродажи, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

// rarus kabany 18.05.2021 17727 +++
&НаКлиенте
Процедура ЗаказыПоМоделямВсеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямВсеЗаказыМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямВсеЗаказыКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводВсеЗаказы.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеЗаказы, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;

КонецПроцедуры
// rarus kabany 18.05.2021 17727 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаСервере
Процедура УстановитьОтборПоМодели(Модель)
	ОбъектНастройки = ЗаказыНаЗаводРаспределение.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
	ОбъектНастройки.Очистить();
	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование  = Истина;
	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Модель");
	Если НЕ Модель = "" Тогда
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		НовыйОтбор.ПравоеЗначение = Модель;	
	Иначе
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	КонецЕсли;	
КонецПроцедуры	
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ЗаказыПоМоделям(Команда)
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ИмяГруппыЗаказовПоМоделям = "ЗаказыПоМоделямГруппа";
		// rarus kabany 22.06.2021 17869 +++	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеНовые" Тогда  
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямСвободные";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеБУ" Тогда  
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямСвободныеБУ";
		// rarus kabany 22.06.2021 17869 ---
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямПродажи";
		// rarus kabany 18.05.2021 17727 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеЗаказы" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямВсеЗаказы";
		// rarus kabany 18.05.2021 17727 ---		
	КонецЕсли;	
			
	Элементы[ИмяГруппыЗаказовПоМоделям].Видимость = НЕ Элементы[ИмяГруппыЗаказовПоМоделям].Видимость;
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//РАСЧЕТ КОЛИЧЕСТВА ЗАКАЗОВ

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ОбновитьКоличествоЗаказов (ТекущаяСтраница, ПовторныйРасчет = Ложь)
	КнопкаКоличество = "ЗаказыНаЗавод" + ТекущаяСтраница + "КолВо";
	
	Если ТекущаяСтраница = "Распределение" И ПовторныйРасчет Тогда
		КоличествоСтрокРаспределение = РассчитатьКоличествоСтрок("Распределение");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокРаспределение;
	ИначеЕсли ТекущаяСтраница = "СвободныеНовые" И (КоличествоСтрокСвободные = 0 ИЛИ ПовторныйРасчет) Тогда // rarus kabany 21.06.2021 17869 +
		КоличествоСтрокСвободные = РассчитатьКоличествоСтрок("СвободныеНовые"); // rarus kabany 21.06.2021 17869 +
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокСвободные;
		// rarus kabany 22.06.2021 17869 +++
	ИначеЕсли ТекущаяСтраница = "СвободныеБУ" И (КоличествоСтрокСвободныеБУ = 0 ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокСвободныеБУ = РассчитатьКоличествоСтрок("СвободныеБУ"); 
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокСвободныеБУ; // rarus kabany 21.06.2021 17869 +
		// rarus kabany 22.06.2021 17869 ---
	ИначеЕсли ТекущаяСтраница = "Продажи" И (КоличествоСтрокПродажи = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокПродажи = РассчитатьКоличествоСтрок("Продажи");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокПродажи; 
		// rarus kabany 18.05.2021 17727 +++
	ИначеЕсли ТекущаяСтраница = "ВсеЗаказы" И (КоличествоСтрокВсеЗаказы = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокВсеЗаказы = РассчитатьКоличествоСтрок("ВсеЗаказы");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокВсеЗаказы; 
		// rarus kabany 18.05.2021 17727 ---
		//rarus vikhle 05.08.2021 mt 17834 +++
	ИначеЕсли ТекущаяСтраница = "РезервSRU" И (КоличествоСтрокРезервSRU = 0  ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокРезервSRU = РассчитатьКоличествоСтрок("РезервSRU");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокРезервSRU;	
		//rarus vikhle 05.08.2021 mt 17834 ---
	КонецЕсли;	
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаКлиенте
Процедура ОбновитьКоличествоЗаказовКоманда(Команда)
	ОбновитьКоличествоЗаказов(Элементы.Страницы.ТекущаяСтраница.Имя, Истина);
КонецПроцедуры
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 03.06.2020 mantis 16056 +++
&НаСервере
Функция РассчитатьКоличествоСтрок(ТекущаяСтраница)
	
	НазваниеСписка = "ЗаказыНаЗавод" + ТекущаяСтраница;
		
	Схема = Элементы[НазваниеСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы[НазваниеСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаРезультат.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	//rarus bonmak 01.09.2020 16505 ++
	//ТаблицаРезультат.Свернуть("Продукт");
	//НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "Продукт");
	ТаблицаРезультат.Свернуть("ПродуктКоличество");
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "ПродуктКоличество");
	//rarus bonmak 01.09.2020 16505 --
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
КонецФункции
//rarus pechek 03.06.2020 mantis 16056 ---

//rarus pechek 30.06.2020 mantis 16056 +++
//&НаКлиенте
//Процедура ОтменитьПодбор(Команда)
//	ЭлементыОтбора = Продукты.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
//	Продукты.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки).Элементы;
//	ЭлементыОтбора.Очистить();
//	//rarus pechek 30.06.2020 mantis 16056 +++
//	ПолеВвода = "";
//	ПолеС  = Неопределено;
//	ПолеПо = Неопределено;
//КонецПроцедуры
//rarus pechek 30.06.2020 mantis 16056 ---

&НаКлиенте
Процедура ЗаполнитьЗаявку(Команда)
	ПараметрыФормы = Новый Структура;
	Если НЕ ЗначениеЗаполнено(ВыбранныеПродукты) Тогда
		Сообщить(НСтр("ru = 'Нет выбранных продуктов'; en = 'Please select the product'"));  
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("Изделия", ВыбранныеПродукты);  	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытиеЗаявкиНаДействие",ЭтотОбъект);
	ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаДокумента",ПараметрыФормы,,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПанельЗаявок(Команда)
	Элементы.ПродуктыПанельЗаявок.Пометка 	= НЕ Элементы.ПродуктыПанельЗаявок.Пометка;
	Элементы.ГруппаЗаявки.Видимость 		= Элементы.ПродуктыПанельЗаявок.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура КорректироватьЗаявку(Команда)
	Для Каждого ТекСтрока Из Элементы.ЗаявкиНаДействие.ВыделенныеСтроки Цикл
		Scan_ВспомогательныеФункцииКлиент.ОбработатьИзменениеЗаявкиНаДействие(Истина, ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура АннулироватьЗаявку(Команда)
	Для Каждого ТекСтрока Из Элементы.ЗаявкиНаДействие.ВыделенныеСтроки Цикл
		Scan_ВспомогательныеФункцииКлиент.ОбработатьИзменениеЗаявкиНаДействие(Ложь, ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПродуктов(Команда)	
	КоличествоСтрокПродуктов = РассчитатьКоличествоСтрокПродуктов();
	Элементы.ПродуктыКоличествоПродуктов.Заголовок = "Количество продуктов:" + КоличествоСтрокПродуктов;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаПродукт(СтрокаРС)
	//rarus pechek 15.06.2020 mantis 16056 +++	
	// rarus agar 03.11.2020 16010 ++
	ПродуктСсылка = Справочники.Scan_Изделия.ПустаяСсылка();
	Если ТипЗнч(СтрокаРС) = Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту") Тогда
		ПродуктСсылка = СтрокаРС.Продукт;
	КонецЕсли;
	// rarus agar 03.11.2020 16010 --
	
	Возврат ПродуктСсылка;
	//rarus pechek 15.06.2020 mantis 16056 ---
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборСписка (Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
//rarus pechek 15.06.2020 mantis 16056 +++	
	СтандартнаяОбработка = Ложь;
	ИмяПоля = Поле.Имя;
	
	ПродуктСсылка = ПолучитьСсылкуНаПродукт(ВыбраннаяСтрока);
	//rarus ozhnik 17458 01.04.2021 + 
	ИмяСписка = Элемент.Имя;
	ИмяПоля = Поле.Имя;
	
	Если ИмяПоля = "ЗаказыНаЗаводПродажиСсылкаСОПКод" Тогда
		СсылкаНАСОП = Элементы.ЗаказыНаЗаводПродажи.ТекущиеДанные.СсылкаСОП;
		ПоказатьЗначение(,СсылкаНаСОП);
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводПродажиСсылкаСУКод" Тогда
		СсылкаСУ = Элементы.ЗаказыНаЗаводПродажи.ТекущиеДанные.СсылкаСУ;
		ПоказатьЗначение(,СсылкаСУ);
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводПродажиСОП" Тогда		
		Заявка = Элементы.ЗаказыНаЗаводПродажи.ТекущиеДанные.Заявка;
		ПоказатьЗначение(,Заявка);
		//rarus ozhnik 17458 01.04.2021 -	
	// rarus kabany 12.05.2021 17464 +++	
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводРаспределениеФлаг" Тогда
		мИндекс = мВыбраныСсылкиРаспределение.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиРаспределение.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиРаспределение.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхРаспределение = мВыбраныСсылкиРаспределение.Количество();	
		ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРаспределение);	
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводСвободныеНовыеФлаг" Тогда // rarus kabany 21.06.2021 17869 +
		мИндекс = мВыбраныСсылкиСвободные.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиСвободные.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиСвободные.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхСвободныеНовые = мВыбраныСсылкиСвободные.Количество();  // rarus kabany 21.06.2021 17869 +
		ЗаказыНаЗаводСвободныеНовые.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободные);  // rarus kabany 21.06.2021 17869 +
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводПродажиФлаг" Тогда
		мИндекс = мВыбраныСсылкиПродажи.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиПродажи.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиПродажи.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхПродажи = мВыбраныСсылкиПродажи.Количество();
		ЗаказыНаЗаводПродажи.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиПродажи);
		// rarus kabany 12.05.2021 17464 ---
	// rarus kabany 18.05.2021 17727 +++	
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводВсеЗаказыФлаг" Тогда
		мИндекс = мВыбраныСсылкиВсеЗаказы.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиВсеЗаказы.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиВсеЗаказы.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранных = мВыбраныСсылкиВсеЗаказы.Количество();
		ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиВсеЗаказы);
		// rarus kabany 18.05.2021 17727 ---
	//rarus vikhle 05.08.2021 mt 17834 +++	
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводРезервSRUФлаг" Тогда
		мИндекс = мВыбраныСсылкиРезервSRU.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиРезервSRU.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиРезервSRU.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхРезервSRU = мВыбраныСсылкиРезервSRU.Количество();
		ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиРезервSRU);	
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводСвободныеБУФлаг" Тогда
		мИндекс = мВыбраныСсылкиСвободныеБУ.Найти(ПродуктСсылка);
		Если мИндекс = Неопределено Тогда
			мВыбраныСсылкиСвободныеБУ.Добавить(ПродуктСсылка);
		Иначе
			мВыбраныСсылкиСвободныеБУ.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхСвободныеБУ = мВыбраныСсылкиСвободныеБУ.Количество();
		ЗаказыНаЗаводСвободныеБУ.Параметры.УстановитьЗначениеПараметра("мВыбраныСсылки", мВыбраныСсылкиСвободныеБУ);	
	//rarus vikhle 05.08.2021 mt 17834 ---	
	Иначе
		ПоказатьЗначение(,ПродуктСсылка);
	КонецЕсли; //rarus ozhnik  01.04.2021 +-
//rarus pechek 15.06.2020 mantis 16056 ---


КонецПроцедуры


&НаКлиенте
Процедура ЗаказыНаЗаводРаспределениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);  //rarus pechek 15.06.2020 mantis 16056 +++
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводСвободныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); //rarus pechek 15.06.2020 mantis 16056 +++
КонецПроцедуры

// rarus kabany 21.06.2021 17869 +++
&НаКлиенте
Процедура ЗаказыНаЗаводСвободныеБУВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); //rarus pechek 15.06.2020 mantis 16056 +++
КонецПроцедуры
// rarus kabany 21.06.2021 17869 ---

&НаКлиенте
Процедура ЗаказыНаЗаводВсеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); 
КонецПроцедуры


&НаКлиенте
Процедура ЗаказыНаЗаводПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); //rarus pechek 15.06.2020 mantis 16056 +++
КонецПроцедуры


&НаКлиенте
Процедура ПерейтиВМонитор(Команда)//rarus pechek 25.06.2020 mantis 16056 +++

	МассивВыбранныхСтрок = Элементы.ЗаявкиНаОтгрузку.ВыделенныеСтроки;
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		ДатаОтгрузки = ТекущаяДата();
	ИначеЕсли МассивВыбранныхСтрок.Количество() > 1 Тогда
		Сообщить(НСтр("ru = 'Выберите один документ'; en = 'Select one document'"));                            
		Возврат;
	Иначе
		ДатаОтгрузки = Элементы.ЗаявкиНаОтгрузку.ТекущиеДанные.ДатаОтгрузки;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ДатаОтгрузки", ДатаОтгрузки);
	ОткрытьФорму("Обработка.Scan_МониторБронированияОтгрузок.Форма",ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаявкиНаОтгрузкуПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus pechek 25.06.2020 mantis 16056 +++
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	МассивСсылок = Строки.ПолучитьКлючи();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СтатусыЗаявокНаОтгрузку.Ссылка КАК Ссылка,
	|	Scan_СтатусыЗаявокНаОтгрузку.ЦветФона КАК ЦветФона,
	|	Scan_СтатусыЗаявокНаОтгрузку.ЦветТекста КАК ЦветТекста,
	|	Scan_СтатусыЗаявокНаОтгрузку.Шрифт КАК Шрифт
	|ИЗ
	|	Справочник.Scan_СтатусыЗаявокНаОтгрузку КАК Scan_СтатусыЗаявокНаОтгрузку";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запрос = Новый Запрос;
		//rarus agar 22.03.2021 17499 ++
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка КАК СсылкаДокумент,
		|	КОЛИЧЕСТВО(Scan_ЗаявкаНаОтгрузкуПродукты.НомерСтроки) КАК КоличествоПродуктов
		|ПОМЕСТИТЬ ВТ_КоличествоПродуктов
		|ИЗ
		|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
		|ГДЕ
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = &Статус
		|	И Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка В(&МассивСсылок)
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Scan_ЗаявкаНаОтгрузку.Ссылка КАК СсылкаДокумент,
		|	ВТ_КоличествоПродуктов.КоличествоПродуктов КАК КоличествоПродуктов
		|ИЗ
		|	Документ.Scan_ЗаявкаНаОтгрузку КАК Scan_ЗаявкаНаОтгрузку
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоПродуктов КАК ВТ_КоличествоПродуктов
		|		ПО Scan_ЗаявкаНаОтгрузку.Ссылка = ВТ_КоличествоПродуктов.СсылкаДокумент
		|ГДЕ
		|	Scan_ЗаявкаНаОтгрузку.Статус = &Статус
		|	И Scan_ЗаявкаНаОтгрузку.Ссылка В(&МассивСсылок)";
		//rarus agar 22.03.2021 17499 --
		
		Запрос.УстановитьПараметр("Статус",       Выборка.Ссылка);
		Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаСписка = Строки[ВыборкаДетальныеЗаписи.СсылкаДокумент];
			Для Каждого КолонкаСписка Из СтрокаСписка.Оформление Цикл
				ЦветФона = Выборка.ЦветФона.Получить();
				Если ЦветФона <> ЧерныйЦвет Тогда
					КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
				КонецЕсли;
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветТекста", Выборка.ЦветТекста.Получить());
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("Шрифт",      Выборка.Шрифт.Получить());
				//rarus agar 22.03.2021 17499 ++
				ОформлениеЯчейки = СтрокаСписка.Оформление.Получить("КоличествоПродуктов");
				Если ОформлениеЯчейки <> Неопределено Тогда
					ОформлениеЯчейки.УстановитьЗначениеПараметра("Текст", ВыборкаДетальныеЗаписи.КоличествоПродуктов);
				КонецЕсли;
				//rarus agar 22.03.2021 17499 --
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

//rarus agar 18.08.2020 16138 ++
&НаСервереБезКонтекста
Процедура УстановитьОформлениеЯчейкиЦветКабины(Строки)
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	Для Каждого СтрокаСписка Из Строки Цикл
		Если Не СтрокаСписка.Значение.Данные.ЦветКабиныПТС.Пустая() Тогда
			ЦветФона = СтрокаСписка.Значение.Данные.ЦветКабиныПТС.ЦветФона.Получить();
			Если ЦветФона <> ЧерныйЦвет И НЕ СтрокаСписка.Значение.Оформление.Получить("ЦветКабины") = Неопределено Тогда //rarus vikhle 12.03.2021 mt 17405
				СтрокаСписка.Значение.Оформление["ЦветКабины"].УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводРаспределениеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводСвободныеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

// rarus kabany 21.06.2021 17869 +++
&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводСвободныеБУПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры
// rarus kabany 21.06.2021 17869 ---

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводПродажиПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПродуктыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры
//rarus agar 18.08.2020 16138 --

// rarus kabany 18.05.2021 17727 +++
&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводВсеЗаказыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры
// rarus kabany 18.05.2021 17727 ---

//сообщение
&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(ПриЗапуске=Ложь)
	//rarus pechek 30.06.2020 mantis 16201	+++
	ТекЯзык = ПользователиИнформационнойБазы.ТекущийПользователь().Язык;
	ТекстДекорации = "";
	
	ПользовательСсылка = Пользователи.ТекущийПользователь();
	Организация = ПользовательСсылка.Организация;
	Если НЕ Организация.Пустая() Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_ПраваИНастройки.Значение КАК Значение,
		               |	Scan_ПраваИНастройки.ПравоНастройка КАК ПравоНастройка
		               |ИЗ
		               |	РегистрСведений.Scan_ПраваИНастройки КАК Scan_ПраваИНастройки
		               |ГДЕ
		               |	Scan_ПраваИНастройки.Объект = &ОрганизацияПользователя
		               |	И Scan_ПраваИНастройки.ПравоНастройка В(&Настройки)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ПравоНастройка";
			                                                                              
		ТЗНастройки = Новый ТаблицаЗначений;
		ТЗНастройки.Колонки.Добавить("Настройка",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.Scan_ПраваИНастройки"));
		НоваяСтрокаТЗ = ТЗНастройки.Добавить();
		НоваяСтрокаТЗ.Настройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов;
		НоваяСтрокаТЗ = ТЗНастройки.Добавить();
		НоваяСтрокаТЗ.Настройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng;	
		
		Запрос.УстановитьПараметр("ОрганизацияПользователя",Организация);
		Запрос.УстановитьПараметр("Настройки",ТЗНастройки);
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов Тогда
					ТекстовоеСообщение = Выборка.Значение;
					Если ТекЯзык = Метаданные.Языки.Русский Тогда
						ТекстДекорации = Выборка.Значение;
					КонецЕсли;
				ИначеЕсли Выборка.ПравоНастройка = ПланыВидовХарактеристик.Scan_ПраваИНастройки.OFMS_ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов_eng Тогда 	
					ТекстовоеСообщениеАнгл = Выборка.Значение;
					Если ТекЯзык = Метаданные.Языки.Английский Тогда
						ТекстДекорации = Выборка.Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов.Заголовок = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов.Видимость = Ложь;
	КонецЕсли;
	//rarus pechek 30.06.2020 mantis 16201 ---
КонецПроцедуры

//rarus agar 29.12.2020 17025 ++
&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре()
	
	ТекстДекорации = Scan_ПраваИНастройки.Scan_Право("ТекстовоеСообщениеПоТекущейПродуктовойСтруктуре");
	
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Заголовок = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 29.12.2020 17025 --

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СвободныеНовые Тогда // rarus kabany 21.06.2021 17869 +
		ЗаполнитьЗаголовокТекстовоеCообщениеПоРекомендуемымДатамРазмещенияЗаказов(); //rarus pechek 30.06.2020 mantis 16201
		ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре(); //rarus agar 29.12.2020 17025 +-
	КонецЕсли;
КонецПроцедуры

//rarus vikhle 28.10.2020 mt 16328 +++
&НаКлиенте
Процедура ОткрытьDDИнформер(Команда)
	
	ОткрытьФорму("Обработка.Scan_DDИнформер.Форма");
	
КонецПроцедуры
//rarus vikhle 28.10.2020 mt 16328 ---

//rarus agar 01.02.2021 17178 ++
&НаКлиенте
Процедура ОткрытьМониторПродаж(Команда)
	ПараметрыОткрытия = Новый Структура("РМОКП", Истина);
	ОткрытьФорму("Обработка.Scan_МониторыПродаж.Форма",ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

//rarus kabany 12.04.2021 17505 +++
&НаКлиенте
Процедура СформироватьОтчет_ПлановыеОтгрузки(Команда)

	Отборы = ПолучитьОтборы();
	ФормаОтчета = ПолучитьФорму("Отчет.Scan_ИнформацияПоПлановымОтгрузкам.Форма");	
	ПользовательскиеОтборы = ФормаОтчета.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	
	Если Отборы <> Неопределено Тогда
		
		Для каждого ОтборПользователя из ПользовательскиеОтборы ЦИКЛ
			
			Для каждого отбр из Отборы.Элементы ЦИКЛ
				
				Если ОтборПользователя.Параметр = Новый ПараметрКомпоновкиДанных(отбр.ПредставлениеПользовательскойНастройки)
					ИЛИ ОтборПользователя.Параметр =  Новый ПараметрКомпоновкиДанных(отбр.ЛевоеЗначение) Тогда //rarus kabany 20.04.2021 17505 +  
					ОтборПользователя.Значение = отбр.правоезначение;
					ОтборПользователя.Использование = отбр.Использование;  
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;		
	КонецЕсли;
	
	ФормаОтчета.СкомпоноватьРезультат();
	ФормаОтчета.Открыть();
			
КонецПроцедуры

&НаСервере
Функция ПолучитьОтборы()	
	ИсполняемыеНастройки = Элементы.ЗаявкиНаОтгрузку.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	Если ЗначениеЗаполнено(ИсполняемыеНастройки) Тогда 		 	
		Возврат ИсполняемыеНастройки.Отбор;
		КонецЕсли;
	КонецФункции
		
&НаКлиенте
Процедура ОткрытьОтчетПлановыеОтгрузки(Команда)
	
	ОткрытьФорму("Отчет.Scan_ИнформацияПоПлановымОтгрузкам.Форма");	
	
КонецПроцедуры

//rarus kabany 12.04.2021 17505 ---

//rarus agar 01.02.2021 17178 --

//rarus ozhnik 17212 04.06.2021 + 
&НаКлиенте
Процедура ОткрытьОтчетDD_DDS(Команда)
	ОткрытьФорму("Отчет.Scan_DD_DDS.Форма");
КонецПроцедуры
//rarus ozhnik 17212 04.06.2021 -

// rarus kabany 12.05.2021 17464 +++
&НаКлиенте
Процедура СоздатьНаОснованииЗапросНаНадстройку(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда	
		мВыбранныхСсылок = мВыбраныСсылкиРаспределение;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СвободныеНовые" Тогда // rarus kabany 21.06.2021 17869 +	
		мВыбранныхСсылок = мВыбраныСсылкиСвободные;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Продажи" Тогда	
		мВыбранныхСсылок = мВыбраныСсылкиПродажи;	 
	КонецЕсли;
 
	Если мВыбранныхСсылок.Количество() = 0 Тогда
		Сообщить(НСтр("ru = 'Выберите строки'; en = 'Select lines'"));
		Возврат;
	Иначе
		ЗаказыНаЗавод = ПолучитьЗаказыВыбранныхПродуктов(мВыбранныхСсылок);
		
		Если ЗаказыНаЗавод.Количество() = 1 Тогда
			ПараметрыФормы = Новый Структура("ЗаказыНаЗавод", ЗаказыНаЗавод);
			ОткрытьФорму("Документ.Scan_ЗапросНаНадстройки.ФормаОбъекта", ПараметрыФормы);
		Иначе
			ДополнительныеПараметры = Новый Структура("ЗаказыНаЗавод", ЗаказыНаЗавод);
			
			ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьНаОснованииЗапросНаНадстройкиЗавершение", ЭтотОбъект, ДополнительныеПараметры),
			Нстр("ru = 'Сгруппировать выделенные строки в одну строку запроса?'; en = 'Group selected lines into one query line?'"), РежимДиалогаВопрос.ДаНетОтмена);
		КонецЕсли;
		
		СнятьФлажки(Команды.Найти("СнятьФлажки"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗаказыВыбранныхПродуктов(ВыбранныеПродукты)
	
	МассивЗаказовНаЗавод = Новый Массив;
	
	Для Каждого ВыбранныйПродукт Из ВыбранныеПродукты Цикл
		ЗаказПродукта = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(ВыбранныйПродукт);
		Если ЗначениеЗаполнено(ЗаказПродукта) Тогда
			МассивЗаказовНаЗавод.Добавить(ЗаказПродукта);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивЗаказовНаЗавод;
	
КонецФункции

&НаКлиенте
Процедура СоздатьНаОснованииЗапросНаНадстройкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ГруппироватьЗаказы = РезультатВопроса = КодВозвратаДиалога.Да;
	
	ПараметрыФормы = Новый Структура("ЗаказыНаЗавод,ГруппироватьЗаказы", ДополнительныеПараметры.ЗаказыНаЗавод, ГруппироватьЗаказы);
	ОткрытьФорму("Документ.Scan_ЗапросНаНадстройки.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

// rarus kabany 12.05.2021 17464 ---

// rarus kabany 18.05.2021 17727 +++
&НаКлиенте
Процедура ПоказатьВсеПродукты(Команда)
	//Снятие/ возвращение всех условий (кроме заполненности продукта) в запросе списка на закладке "Все заказы "
	Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка = НЕ Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка;  
	ЗаказыНаЗаводВсеЗаказы.Параметры.УстановитьЗначениеПараметра("ИспользоватьДопУсловия",НЕ Элементы.ЗаказыНаЗаводВсеЗаказыПоказатьВсеПродукты.Пометка);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКонтрольнуюТочку(Команда)
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	МассивСсылок = Новый Массив;
	
	Если ТекущаяСтраница = Элементы.ВсеЗаказы Тогда 	
		МассивСсылок = мВыбраныСсылкиВсеЗаказы;
	Иначе
		Возврат;
	КонецЕсли;	
	
	Если МассивСсылок.Количество() <> 0 И ЕстьЗаполненныеКТ() Тогда
		УстановитьЗначенияКонтрольныхТочек(МассивСсылок);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочки(Команда)
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	Если ТекущаяСтраница = Элементы.ВсеЗаказы Тогда 	
		Элементы.ГруппаКонтрольныеТочкиВсеЗаказы.Видимость 			= НЕ Элементы.ГруппаКонтрольныеТочкиВсеЗаказы.Видимость; 
		Элементы.ЗаказыНаЗаводВсеЗаказыКонтрольныеТочки.Пометка 	= НЕ Элементы.ЗаказыНаЗаводВсеЗаказыКонтрольныеТочки.Пометка; 
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиВсеЗаказыПередНачаломИзменения(Элемент, Отказ)
	
	КонтрольныеТочкиПередНачаломИзменения(Элемент, Отказ);//rarus vikhle 15.02.2021 mt 17220
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиПередНачаломИзменения(Элемент, Отказ)
	
	//rarus vikhle 15.02.2021 mt 17220 +++
	ИмяСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	ИмяТаблицы = "КонтрольныеТочки" + ИмяСтраницы;
	ИмяКолонкиЗначения = ИмяТаблицы + "Значение";
	
	ТипКонтрольнойТочки = ПолучитьТипКТ(Элементы[ИмяТаблицы].ТекущиеДанные.КонтрольнаяТочка);
	
	Элемент.ПодчиненныеЭлементы[ИмяКолонкиЗначения].ВыбиратьТип = Ложь;
	Элемент.ПодчиненныеЭлементы[ИмяКолонкиЗначения].ОграничениеТипа = ТипКонтрольнойТочки;	
	//rarus vikhle 15.02.2021 mt 17220 ---
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиВсеЗаказыОчиститьПриИзменении(Элемент) // Rarus tenkam 16.11.2021 mantis 18493 +++
	ИмяТаблицы = "КонтрольныеТочкиВсеЗаказы";
	ТекДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	Если ТекДанные.Очистить Тогда
		ТипКонтрольнойТочки = ПолучитьТипКТ(ТекДанные.КонтрольнаяТочка);
		ТекДанные.Значение = ТипКонтрольнойТочки.ПривестиЗначение();
	КонецЕсли;
	
КонецПроцедуры // Rarus tenkam 16.11.2021 mantis 18493 ---

&НаКлиенте
Процедура ПолеОтбораПоПериодуВсеЗаказыПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры
// rarus kabany 18.05.2021 17727 ---

&НаКлиенте
Процедура ОткрытьDD2DDSИнформер(Команда) //rarus vikhle 19.07.2021 17933 +++
	
	ОткрытьФорму("Обработка.Scan_DD2DDSИнформер.Форма");
	
КонецПроцедуры //rarus vikhle 19.07.2021 17933 ---

&НаКлиенте
Процедура ПродуктыПоОтветственным(Команда) //rarus vikhle 05.08.2021 mt 17834 +++
	
	Элементы.ГруппаПродуктыПоОтветственнымРезервSRU.Видимость			= НЕ Элементы.ГруппаПродуктыПоОтветственнымРезервSRU.Видимость;
	Элементы.ЗаказыНаЗаводРезервSRUПродуктыПоОтветственным.Пометка		= НЕ Элементы.ЗаказыНаЗаводРезервSRUПродуктыПоОтветственным.Пометка;
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаКлиенте
Процедура ОбновитьДеревоПродуктыПоОтветственным(Команда) //rarus vikhle 05.08.2021 mt 17834 +++
	
	ОбновитьДеревоПродуктыПоОтветственнымНаСервере();
	
КонецПроцедуры //rarus vikhle 05.08.2021 mt 17834 ---

&НаКлиенте
Процедура СоздатьЗаявкуНаСОПSRU(Команда) //rarus vikhle 11.08.2021 mt 17834 +++
	
	ОчиститьСообщения();
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	// Проверка на интерактивно добавленную страницу
	Если ТекущаяСтраница = Неопределено Тогда
		Возврат;		
	КонецЕсли;	
	
	МассивСсылок = ?(ТекущаяСтраница = Элементы.СвободныеНовые, мВыбраныСсылкиСвободные, мВыбраныСсылкиСвободныеБУ);
	
	ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов();
	// Установим Ложь у реквизитов, которые не нужно проверять
	ПроверяемыеРеквизиты.МодельПродукта			 = Ложь;
	ПроверяемыеРеквизиты.СпецификацияПродукта	 = Ложь;
	ПроверяемыеРеквизиты.ТипСпецификации		 = Ложь;
	ПроверяемыеРеквизиты.СтандартнаяСпецификация = Ложь; //rarus vikhle 21.09.2021 mt 18298
	МожноСоздатьЗаявку = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(МассивСсылок, ПроверяемыеРеквизиты);
	
	Если НЕ МожноСоздатьЗаявку Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ТипЗаявки",			ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU"));
	ДанныеЗаполнения.Вставить("ЗаявкаНаБУПродукты", ТекущаяСтраница = Элементы.СвободныеБУ);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", 		ДанныеЗаполнения);
	ПараметрыФормы.Вставить("СписокПродуктов",	МассивСсылок);
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияЗаявки",ЭтотОбъект, ТекущаяСтраница);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",ПараметрыФормы,,,,,Оповещение);
				
	СнятьФлажки(Команды.СнятьФлажки);
	
КонецПроцедуры //rarus vikhle 11.08.2021 mt 17834 ---

&НаКлиенте
Процедура СоздатьЗаявкуНаСОП(Команда) //rarus vikhle 12.08.2021 mt 17834 +++
	
	ОчиститьСообщения();
	
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	// Проверка на интерактивно добавленную страницу
	Если ТекущаяСтраница = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	Если мВыбраныСсылкиРезервSRU.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны продукты'"));
		Возврат;
	КонецЕсли;
	
	ПроверяемыеРеквизиты = Scan_ОбщегоНазначенияКлиентСервер.ПроверяемыеРеквизитыПродуктов();
	МожноСоздатьЗаявку = Scan_ВспомогательныеФункцииСервер.МожноСоздатьЗаявку(мВыбраныСсылкиРезервSRU, ПроверяемыеРеквизиты);
	
	Если НЕ МожноСоздатьЗаявку Тогда
		Возврат;
	КонецЕсли;
	
	Основание = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(мВыбраныСсылкиРезервSRU[0], "СоглашениеОПоставке");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокПродуктов",	мВыбраныСсылкиРезервSRU);
	ПараметрыФормы.Вставить("Основание", 		Основание);
	ПараметрыФормы.Вставить("СозданиеЗаявкиИзРМ", Истина); // rarus tenkam 17.08.2021 mantis 17834 + 
		
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияЗаявки", ЭтотОбъект, ТекущаяСтраница);
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.ФормаОбъекта",ПараметрыФормы,,,,,Оповещение);
	
	СнятьФлажки(Команды.СнятьФлажки);
	
КонецПроцедуры //rarus vikhle 12.08.2021 mt 17834 ---

// rarus agar 17758 16.08.2021 ++
&НаКлиенте
Процедура ОткрытьLeadTimeReport(Команда)
	
	ОткрытьФорму("Отчет.Scan_LeadTimeReport.Форма");
	
КонецПроцедуры
// rarus agar 17758 16.08.2021 --

&НаКлиенте
Процедура ОткрытьОтчетЧекЛист(Команда) //rarus vikhle 16.09.2021 mt 18276 +++
	
	ОткрытьФорму("Отчет.Scan_ЧекЛист.Форма");	
	
КонецПроцедуры //rarus vikhle 16.09.2021 mt 18276 ---



#КонецОбласти
