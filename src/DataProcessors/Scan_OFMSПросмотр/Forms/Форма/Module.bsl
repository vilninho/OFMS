&НаКлиенте
Перем мКритерииПоискаПоСписку;
&НаКлиенте
Перем мКритерииПоискаПоКоридору;
&НаКлиенте
Перем мИменаСтраниц;


#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаОтборРаспределение.Видимость = Ложь;
	Элементы.ГруппаОтборСвободные.Видимость     = Ложь;
	Элементы.ГруппаОтборВсеПродукты.Видимость   = Ложь; // rarus kabany 18.06.2021 17810 +
	Элементы.ГруппаОтборРезервSRU.Видимость		= Ложь; //rarus vikhle 06.08.2021 mt 17834
	
	КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа;	
	
	Элементы.ЗаказыПоМоделямГруппа.Видимость           = Ложь;
	Элементы.ГруппаЗаказыПоМоделямСвободные.Видимость  = Ложь;
	Элементы.ГруппаЗаказыПоМоделямВсеПродукты.Видимость  = Ложь; // rarus kabany 18.06.2021 17810 +
	
	Элементы.ГруппаПродуктыПоОтветственным.Видимость = Ложь; //rarus vikhle 06.08.2021 mt 17834
	
	ТумблерПоиск = "0"; 
	
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	// rarus kabany 18.06.2021 17810 +++
	ЗаказыНаЗаводВсеПродукты.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);		
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг); //rarus vikhle 06.08.2021 mt 17834
	
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата() 
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата() 
	ЗаказыНаЗаводВсеПродукты.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); // rarus kabany 29.06.2021 OFMS устранение ошибок Sonar Qube (АПК) // было: ТекущаяДата() 
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДатаСеанса()); //rarus vikhle 06.08.2021 mt 17834
	ЗаказыНаЗаводВсеПродукты.Параметры.УстановитьЗначениеПараметра("ИспользоватьДопУсловия",Истина); 
	
	МассивСтатусов = Новый Массив;

	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	
	ЗаказыНаЗаводВсеПродукты.Параметры.УстановитьЗначениеПараметра("СтатусыЗаявок",МассивСтатусов);
	// rarus kabany 18.06.2021 17810 ---
	
	//rarus vikhle 09.08.2021 mt 17834 +++
	ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРаспределение, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободные, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеПродукты, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); // rarus kabany 18.06.2021 17810 +
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); //rarus vikhle 06.08.2021 mt 17834
	
	ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводВсеПродукты.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//rarus vikhle 09.08.2021 mt 17834 ---
	
	КритерииПоискаПоКоридору = КритерииПоиска();
	
	ТумблерПоиск = "0";
	
	ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре();
	
	ОбновитьДеревоПродуктыПоОтветственнымНаСервере();//rarus vikhle 12.08.2021 mt 17834
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьМассивИменСтраниц();
	
	мКритерииПоискаПоКоридору = ПолучитьМассивКритериевПоиска(); 
	Элементы.ПолеОтбораПоПериодуРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуСвободные.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериодуВсеПродукты.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору); // rarus kabany 18.06.2021 17810 +
	Элементы.ПолеОтбораПоПериодуРезервSRU.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);//rarus vikhle 06.08.2021 mt 17834
	
	//rarus vikhle 09.08.2021 mt 17834 перенес в присозданиинасервере +++
	//ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	//БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРаспределение, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободные, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеПродукты, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); // rarus kabany 18.06.2021 17810 +
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ); //rarus vikhle 06.08.2021 mt 17834
	//
	//ЗаказыНаЗаводРаспределение.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//ЗаказыНаЗаводСвободные.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//ЗаказыНаЗаводВсеПродукты.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);
	//ЗаказыНаЗаводРезервSRU.Параметры.УстановитьЗначениеПараметра("ВидГрузовыеАвтомобили",ГрузовыеАвтомобили);//rarus vikhle 06.08.2021 mt 17834
	//rarus vikhle 09.08.2021 mt 17834 ---
	
	КоличествоСтрокРаспределение = РассчитатьКоличествоСтрок("Распределение"); 
	ОбновитьКоличествоЗаказов(Элементы.Страницы.ТекущаяСтраница.Имя, Истина); 		
	УправлениеДиалогом(); 
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ТумблерПоискРезервSRUПриИзменении(Элемент) //rarus vikhle 06.08.2021 mt 17834 +++
	
	УправлениеДиалогом();
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ПолеОтбораПоПериодуРезервSRUПриИзменении(Элемент) //rarus vikhle 06.08.2021 mt 17834 +++
	
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент);
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводРезервSRUПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) //rarus vikhle 06.08.2021 mt 17834 +++
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ЗаказыНаЗаводРезервSRUВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 06.08.2021 mt 17834 +++
	
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ДеревоПродуктыПоОтветственнымВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 06.08.2021 mt 17834 +++
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.ДеревоПродуктыПоОтветственнымКоличество Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU, "Продукт");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU,
																				"ОтветственныйЗаРезерв",
																				ТекущиеДанные.ОтветственныйЗаРезерв,
																				ВидСравненияКомпоновкиДанных.Равно);
		// Дополнительно накладываем отбор по продукту, если выбор сделан на 2м уровне группировки																		
		Если ТекущиеДанные.ИмяГруппировки = "Продукт" Тогда  	
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводРезервSRU,
																					"Продукт",
																					ТекущиеДанные.Продукт,
																					ВидСравненияКомпоновкиДанных.Равно);		
		КонецЕсли;
	КонецЕсли
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

#КонецОбласти

#Область Вспомогательные

Функция КритерииПоиска()
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	МассивКолонокОтбора.Добавить("№ Шасси");
	МассивКолонокОтбора.Добавить("CDD");
	МассивКолонокОтбора.Добавить("CDD2");
	МассивКолонокОтбора.Добавить("DD");
	МассивКолонокОтбора.Добавить("DD2");
	МассивКолонокОтбора.Добавить("DDS");	
	
	Возврат МассивКолонокОтбора;	
КонецФункции
//rarus bonmak 09.08.2021 16834 ++
//&НаСервере 
//Функция ПродуктыИзДинамическогоСписка()
//	
//	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда	
//		ИмяСписка = "ЗаказыНаЗаводРаспределение" 
//	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда	
//		ИмяСписка = "ЗаказыНаЗаводСвободные";
//	КонецЕсли;
//	
//	ПродуктыТаблица = ДинамическийСписокВТаблицуЗначений(Элементы[ИмяСписка], "Продукт");
//	ПродуктыМассив = ПродуктыТаблица.ВыгрузитьКолонку("Продукт");
//	Возврат ПродуктыМассив;
//КонецФункции
//rarus bonmak 09.08.2021 16834 --
&НаСервере
Процедура УправлениеДиалогом()
	Если ТумблерПоиск = "0" Тогда
		Элементы.ГруппаПоСпискуРаспределение.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийРаспределение.Видимость = Ложь;
		Элементы.ГруппаПоСпискуСвободные.Видимость = Истина;
		Элементы.ГруппаПоКоридоруЗначенийСвободные.Видимость = Ложь;			
		// rarus kabany 18.06.2021 17810 +++
		Элементы.ГруппаПоСпискуВсеПродукты.Видимость  = Истина;
		Элементы.ГруппаПоКоридоруЗначенийВсеПродукты.Видимость = Ложь;
		// rarus kabany 18.06.2021 17810 ---		
		//rarus vikhle 06.08.2021 mt 17834 +++
		Элементы.ГруппаПоСпискуРезервSRU.Видимость  = Истина;
		Элементы.ГруппаПоКоридоруЗначенийРезервSRU.Видимость = Ложь;
		//rarus vikhle 06.08.2021 mt 17834 ---
		ПолеС = "";
		ПолеПо = "";
		ПолеОтбораПоПериоду = ""
	Иначе
		Элементы.ГруппаПоСпискуРаспределение.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийРаспределение.Видимость = Истина;
		Элементы.ГруппаПоСпискуСвободные.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийСвободные.Видимость = Истина;
		// rarus kabany 18.06.2021 17810 +++
		Элементы.ГруппаПоСпискуВсеПродукты.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийВсеПродукты.Видимость = Истина;
		// rarus kabany 18.06.2021 17810 ---
		//rarus vikhle 06.08.2021 mt 17834 +++
		Элементы.ГруппаПоСпискуРезервSRU.Видимость = Ложь;
		Элементы.ГруппаПоКоридоруЗначенийРезервSRU.Видимость = Истина;
		//rarus vikhle 06.08.2021 mt 17834 ---
		ПолеВвода = "";
		КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.ПустаяСсылка();
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискРаспределениеПриИзменении(Элемент)
	УправлениеДиалогом();
	Если ТумблерПоиск = "1" Тогда
		Элементы.ПолеОтбораПоПериодуРаспределение.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискСвободныеПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура КритерийПоискаПриИзменении(Элемент)
	ПолеВвода = "";
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуРаспределениеПриИзменении(Элемент)
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуСвободныеПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент) 
	Для Каждого Страница ИЗ мИменаСтраниц Цикл
		ИмяПоляС = "ПолеС" + Страница;
		ИмяПоляПо = "ПолеПо" + Страница;
		Если Элемент.ТекстРедактирования = "№ Заказа" ИЛИ Элемент.ТекстРедактирования = "№ Шасси" Тогда
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Строка");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Иначе
			Элементы[ИмяПоляС].ОграничениеТипа = Новый ОписаниеТипов("Дата");
			Элементы[ИмяПоляПо].ОграничениеТипа = Новый ОписаниеТипов("Дата");
		КонецЕсли;
		ПолеС = Неопределено;
		ПолеПо = Неопределено;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоПродуктыПоОтветственнымНаСервере()  //rarus vikhle 06.08.2021 mt 17834 +++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделийОстатки.Изделие КАК Изделие,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК Местонахождение,
	               |	МАКСИМУМ(Scan_МестонахождениеИзделийОстатки.МестоХранения) КАК МестоХранения
	               |ПОМЕСТИТЬ ТекущееМестонахождение
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки КАК Scan_МестонахождениеИзделийОстатки
	               |ГДЕ
	               |	Scan_МестонахождениеИзделийОстатки.КоличествоОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_МестонахождениеИзделийОстатки.Изделие
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Изделие
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ОтветственныйЗаРезерв КАК ОтветственныйЗаРезерв,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	1 КАК Количество
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТекущееМестонахождение КАК ТекущееМестонахождение
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = ТекущееМестонахождение.Изделие
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(, ) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО Scan_СводнаяИнформацияПоПродукту.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод <> ЗНАЧЕНИЕ(Справочник.Scan_ЗаказыНаЗавод.ПустаяСсылка)
	               |	И (Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ИЛИ Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве ЕСТЬ NULL)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта = ЗНАЧЕНИЕ(Справочник.Scan_МаркиПродуктов.Scania)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ПометкаУдаления
	               |	И Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.ТипСоглашенияОПоставке = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU)
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(Продукт),
	               |	СУММА(Количество)
	               |ПО
	               |	ОтветственныйЗаРезерв";
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();			 
	Запрос.УстановитьПараметр("МассивТиповПродуктовНадстроекИУслуг",МассивТиповПродуктовНадстроекИУслуг);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПервыйУровень = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Дерево = РеквизитФормыВЗначение("ДеревоПродуктыПоОтветственным");
	Дерево.Строки.Очистить();
	
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		Корень 							= Дерево.Строки.Добавить();
		Корень.КолонкаГруппировки		= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.ОтветственныйЗаРезерв 	= ВыборкаПервыйУровень.ОтветственныйЗаРезерв;
		Корень.Количество 				= ВыборкаПервыйУровень.Количество; 
		Корень.ИмяГруппировки 			= "ОтветственныйЗаРезерв"; //используется при выборе в дереве на форме
		
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВторойУровень.Следующий() Цикл
			ДетальныеЗаписи 						= Корень.Строки.Добавить();
			ДетальныеЗаписи.КолонкаГруппировки		= ВыборкаВторойУровень.Продукт; 
			ДетальныеЗаписи.Продукт 				= ВыборкаВторойУровень.Продукт;
			ДетальныеЗаписи.Количество 				= ВыборкаВторойУровень.Количество;
			ДетальныеЗаписи.ОтветственныйЗаРезерв   = ВыборкаВторойУровень.ОтветственныйЗаРезерв;
			ДетальныеЗаписи.ИмяГруппировки 			= "Продукт"; //используется при выборе в дереве на форме
		КонецЦикла;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПродуктыПоОтветственным");
		
КонецПроцедуры  //rarus vikhle 06.08.2021 mt 17834 ---

#КонецОбласти

#Область СобытияКомандФормы

&НаКлиенте
Процедура ОткрытьОтчетПлановыеЦеныПродажиШасси(Команда)
	ОткрытьФорму("Отчет.Scan_ОтчетПоПлановымЦенамПродажиШасси.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderIntake(Команда)
	ОткрытьФорму("Отчет.Scan_OrderIntake.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьOrderBookStatistics(Команда)
	ОткрытьФорму("Отчет.Scan_OrderBookStatistics.Форма");
КонецПроцедуры

//rarus ozhnik 17212 21.06.2021 + 
&НаКлиенте
Процедура ОткрытьDD_DDS(Команда)
	ОткрытьФорму("Отчет.Scan_DD_DDS.Форма");
КонецПроцедуры
//rarus ozhnik 17212 21.06.2021 -

// rarus agar 17758 16.08.2021 ++
&НаКлиенте
Процедура ОткрытьLeadTimeReport(Команда)
	
	ОткрытьФорму("Отчет.Scan_LeadTimeReport.Форма");
	
КонецПроцедуры
// rarus agar 17758 16.08.2021 --

&НаКлиенте
Процедура ОткрытьOrderBookMargin(Команда) //rarus vikhle 31.01.2022 m 18269 +++
	
	ОткрытьФорму("Отчет.Scan_OrderBookMargin.Форма");
	
КонецПроцедуры //rarus vikhle 31.01.2022 m 18269 ---

&НаКлиенте
Процедура ОткрытьСводнаяИнформацияПоПродукту(Команда) //rarus vikhle 10.09.2021 mt 18110 +++
	
	ОткрытьФорму("Отчет.Scan_СводнаяИнформацияПоПродукту.Форма");	
	
КонецПроцедуры //rarus vikhle 10.09.2021 mt 18110 ---

&НаКлиенте
Процедура ДействияИПоиск(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ИмяГруппыОтбора = "ГруппаОтборРаспределение";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда
		ИмяГруппыОтбора = "ГруппаОтборСвободные";
		// rarus kabany 18.06.2021 17810 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеПродукты" Тогда
		ИмяГруппыОтбора = "ГруппаОтборВсеПродукты";
		// rarus kabany 18.06.2021 17810 ---
	//rarus vikhle 06.08.2021 mt 17834 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "РезервSRU" Тогда
		ИмяГруппыОтбора = "ГруппаОтборРезервSRU";
	//rarus vikhle 06.08.2021 mt 17834
	КонецЕсли;
	
	Если Не Элементы[ИмяГруппыОтбора].Видимость Тогда 
		Элементы[ИмяГруппыОтбора].Видимость = Истина;
	Иначе
		Элементы[ИмяГруппыОтбора].Видимость = Ложь;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокПоСтранице(Страница)
	Если Страница = "Распределение" Тогда
		Возврат ЗаказыНаЗаводРаспределение;
	ИначеЕсли Страница = "Свободные" Тогда
		Возврат ЗаказыНаЗаводСвободные;
		// rarus kabany 18.06.2021 17810 +++
	ИначеЕсли Страница = "ВсеПродукты" Тогда
		Возврат ЗаказыНаЗаводВсеПродукты;
		// rarus kabany 18.06.2021 17810 ---	
	//rarus vikhle 06.08.2021 mt 17834 +++
	ИначеЕсли Страница = "РезервSRU" Тогда
		Возврат ЗаказыНаЗаводРезервSRU;
	//rarus vikhle 06.08.2021 mt 17834 ---
	КонецЕсли;
КонецФункции	

&НаКлиенте
Функция ПолучитьМассивКритериевПоиска()
	МассивКолонокОтбора = Новый Массив;
	МассивКолонокОтбора.Добавить("№ Заказа");
	МассивКолонокОтбора.Добавить("№ Шасси");
	МассивКолонокОтбора.Добавить("PDD");
	МассивКолонокОтбора.Добавить("CDD");
	МассивКолонокОтбора.Добавить("CDD2");
	МассивКолонокОтбора.Добавить("EDD");
	МассивКолонокОтбора.Добавить("DD");
	МассивКолонокОтбора.Добавить("DD2");
	МассивКолонокОтбора.Добавить("DDS");
	МассивКолонокОтбора.Добавить("Бронь");	
	Возврат МассивКолонокОтбора;   		
КонецФункции

&НаКлиенте
Процедура ЗаполнитьМассивИменСтраниц()
	мИменаСтраниц = Новый Массив;
	мИменаСтраниц.Добавить("Распределение");
	мИменаСтраниц.Добавить("Свободные");
	мИменаСтраниц.Добавить("ВсеПродукты"); // rarus kabany 18.06.2021 17810 + 
	мИменаСтраниц.Добавить("РезервSRU"); //rarus vikhle 06.08.2021 mt 17834
КонецПроцедуры	

&НаСервере
Процедура ОкПоискПоКритериямНаСервере(Страница)
	Если ТумблерПоиск = "0" Тогда  
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
		МассивПодстрок2 = Новый Массив;
		// rarus kabany 15.06.2021 17905 +++
		//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивПодстрок2,МассивПодстрок);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок2, МассивПодстрок, Истина);
		// rarus kabany 15.06.2021 17905 ---
		
		//преобразование массива, чтобы находить заказы и шасси по номеру без нулей
		Индекс = -1;
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (7 - КолВоЗнаковЧисло) Цикл  // 7-длина номера шасси  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		// rarus kabany 15.06.2021 17905 +++
		//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивПодстрок,МассивПодстрок2);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок, МассивПодстрок2, Истина);
		// rarus kabany 15.06.2021 17905 ---
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.МодельПродукта Тогда
			ЛевоеЗначение = "Модель.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.Дилер Тогда
			ЛевоеЗначение = "Заявка.Дилер.Наименование";
		КонецЕсли;
		
		ОбъектНастройки = ПолучитьСписокПоСтранице(Страница).КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
		ОбъектНастройки.Очистить();
		
		НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НовыйОтбор.ПравоеЗначение = МассивПодстрок;
	Иначе
		ОбъектНастройки =  ПолучитьСписокПоСтранице(Страница).КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		ОбъектНастройки.Очистить();
		
		Если ПолеОтбораПоПериоду = "№ Шасси" Тогда
			ЛевоеЗначение = "Шасси";
		ИначеЕсли ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		Иначе
			ЛевоеЗначение = ПолеОтбораПоПериоду;
		КонецЕсли;
		
		Если ПолеОтбораПоПериоду = "№ Шасси" ИЛИ
			ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ДинамическийСписок = ПолучитьСписокПоСтранице(Страница);
			
			СообщениеОбОшибке = "";
			ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(ДинамическийСписок, ЛевоеЗначение, ПолеС, ПолеПо,,СообщениеОбОшибке);
			Если НЕ ОтборУстановлен Тогда
				Сообщить(СообщениеОбОшибке);
			КонецЕсли;
		Иначе
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеС; 	
			
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеПо;	
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОкПоискПоКритериям(Команда)
	ИспользоватьЧислоВместоСтроки = Ложь;
	Если ТумблерПоиск = "0" Тогда 	
		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Если СокрЛП(ПолеВвода) = "" Тогда
			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПолеОтбораПоПериоду) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Попытка
			ЧислоПолеС = Число(ПолеС);
			ЧислоПолеПо = Число(ПолеПо);
			ИспользоватьЧислоВместоСтроки = Истина;
		Исключение
		КонецПопытки;
		
		Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо < ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда  
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
		ИначеЕсли ИспользоватьЧислоВместоСтроки Тогда 	
			Если ЧислоПолеПо < ЧислоПолеС Тогда   
				Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	ОкПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПоискПоКритериям(Команда)
	ОтключитьПоискПоКритериямНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
КонецПроцедуры

&НаСервере
Процедура ОтключитьПоискПоКритериямНаСервере(Страница)
	Список = ПолучитьСписокПоСтранице(Страница);
	Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();
	ПолеВвода = "";
	ПолеС  = Неопределено;
	ПолеПо = Неопределено;
КонецПроцедуры

//ЗАКАЗЫ ПО МОДЕЛЯМ

&НаКлиенте
Процедура ЗаказыПоМоделямВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямКолВо" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводРаспределение.Отбор.Элементы.Очистить();
		УстановитьОтборПоМодели(Элемент.ТекущиеДанные.МодельПродукта);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоМоделямСвободныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямСвободныеКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводСвободные.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводСвободные, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоМодели(Модель)
	ОбъектНастройки = ЗаказыНаЗаводРаспределение.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
	ОбъектНастройки.Очистить();
	НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование  = Истина;
	НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Модель");
	Если НЕ Модель = "" Тогда
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		НовыйОтбор.ПравоеЗначение = Модель;	
	Иначе
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаказыПоМоделям(Команда)
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "Распределение" Тогда
		ИмяГруппыЗаказовПоМоделям = "ЗаказыПоМоделямГруппа";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Свободные" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямСвободные";
		// rarus kabany 18.06.2021 17810 +++
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "ВсеПродукты" Тогда
		ИмяГруппыЗаказовПоМоделям = "ГруппаЗаказыПоМоделямВсеПродукты";
		// rarus kabany 18.06.2021 17810 ---
	КонецЕсли;	
	
	Элементы[ИмяГруппыЗаказовПоМоделям].Видимость = НЕ Элементы[ИмяГруппыЗаказовПоМоделям].Видимость;
КонецПроцедуры


//РАСЧЕТ КОЛИЧЕСТВА ЗАКАЗОВ

&НаКлиенте
Процедура ОбновитьКоличествоЗаказов (ТекущаяСтраница, ПовторныйРасчет = Ложь)
	КнопкаКоличество = "ЗаказыНаЗавод" + ТекущаяСтраница + "КолВо";
	
	Если ТекущаяСтраница = "Распределение" И ПовторныйРасчет Тогда
		КоличествоСтрокРаспределение = РассчитатьКоличествоСтрок("Распределение");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокРаспределение;
	ИначеЕсли ТекущаяСтраница = "Свободные" И (КоличествоСтрокСвободные = 0 ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокСвободные = РассчитатьКоличествоСтрок("Свободные");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокСвободные;
		// rarus kabany 18.06.2021 17810 +++	
	ИначеЕсли ТекущаяСтраница = "ВсеПродукты" И (КоличествоСтрокВсеЗаказы = 0 ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокВсеЗаказы = РассчитатьКоличествоСтрок("ВсеПродукты");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокВсеЗаказы;	
		// rarus kabany 18.06.2021 17810 ---	
	//rarus vikhle 06.08.2021 mt 17834 +++
	ИначеЕсли ТекущаяСтраница = "РезервSRU" И (КоличествоСтрокРезервSRU = 0 ИЛИ ПовторныйРасчет) Тогда
		КоличествоСтрокРезервSRU = РассчитатьКоличествоСтрок("РезервSRU");
		Элементы[КнопкаКоличество].Заголовок = "Количество продуктов:" + КоличествоСтрокРезервSRU;
	//rarus vikhle 06.08.2021 mt 17834 ---
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоЗаказовКоманда(Команда)
	ОбновитьКоличествоЗаказов(Элементы.Страницы.ТекущаяСтраница.Имя, Истина);
КонецПроцедуры

&НаСервере
Функция РассчитатьКоличествоСтрок(ТекущаяСтраница)
	
	НазваниеСписка = "ЗаказыНаЗавод" + ТекущаяСтраница;
	
	Схема = Элементы[НазваниеСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы[НазваниеСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаРезультат.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	ТаблицаРезультат.Свернуть("ПродуктКоличество");
	НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "ПродуктКоличество");
	
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаРезультат.Удалить(НайденнаяСтрока);
	КонецЕсли;
	
	Возврат ТаблицаРезультат.Количество();
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаПродукт(СтрокаРС)
	ПродуктСсылка = Справочники.Scan_Изделия.ПустаяСсылка();
	Если ТипЗнч(СтрокаРС) = Тип("РегистрСведенийКлючЗаписи.Scan_СводнаяИнформацияПоПродукту") Тогда
		ПродуктСсылка = СтрокаРС.Продукт;
	КонецЕсли;
	
	Возврат ПродуктСсылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаДоговор(СтрокаВыбор)
	СОПСсылка = Справочники.Scan_Изделия.ПустаяСсылка();
	Если ТипЗнч(СтрокаВыбор) = Тип("СправочникСсылка.Scan_СоглашенияОПоставке") Тогда
		СОПСсылка = СтрокаВыбор.Договор;
	КонецЕсли;
	
	Возврат СОПСсылка;
	
КонецФункции


&НаКлиенте
Процедура ОбработатьВыборСписка (Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	ПродуктСсылка = ПолучитьСсылкуНаПродукт(ВыбраннаяСтрока);
	
	ИмяСписка = Элемент.Имя;
	ИмяПоля = Поле.Имя;
	
	Если ИмяПоля = "ЗаказыНаЗаводРаспределениеЗаказНаЗавод" Тогда
		СсылкаНАЗаказНаЗавод = Элементы.ЗаказыНаЗаводРаспределение.ТекущиеДанные.ЗаказНаЗавод;
		ПоказатьЗначение(,СсылкаНАЗаказНаЗавод);
		
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводРаспределениеСОП" Тогда
		Заявка = Элементы.ЗаказыНаЗаводПродажи.ТекущиеДанные.Заявка;
		ПоказатьЗначение(,Заявка);
		
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводСвободныеЗаказНаЗавод" Тогда
		СсылкаНАЗаказНаЗавод = Элементы.ЗаказыНаЗаводСвободные.ТекущиеДанные.ЗаказНаЗавод;
		ПоказатьЗначение(,СсылкаНАЗаказНаЗавод);
		
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводСвободныеСОП" Тогда
		Заявка = Элементы.ЗаказыНаЗаводПродажи.ТекущиеДанные.Заявка;
		ПоказатьЗначение(,Заявка);
		
	ИначеЕсли ИмяПоля = "СоглашенияОПоставкеНомерСОП" Тогда
		СсылкаДоговор = ПолучитьСсылкуНаДоговор(ВыбраннаяСтрока);
		ПоказатьЗначение(,СсылкаДоговор);	
		// rarus kabany 18.06.2021 17810 +++	
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводВсеПродуктыЗаказНаЗавод" Тогда
		СсылкаНАЗаказНаЗавод = Элементы.ЗаказыНаЗаводВсеПродукты.ТекущиеДанные.ЗаказНаЗавод;
		ПоказатьЗначение(,СсылкаНАЗаказНаЗавод);
		
	ИначеЕсли ИмяПоля = "ЗаказыНаЗаводВсеПродуктыНомерСОП" Тогда
		СсылкаДоговор = Элементы.ЗаказыНаЗаводВсеПродукты.ТекущиеДанные.СОПСсылка;
		ПоказатьЗначение(,СсылкаДоговор);
		// rarus kabany 18.06.2021 17810 ---			
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "Страница_СоглашенияОПоставке" Тогда
		ПоказатьЗначение(,ВыбраннаяСтрока);
	Иначе
		ПоказатьЗначение(,ПродуктСсылка);
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаказыНаЗаводРаспределениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);  //rarus pechek 15.06.2020 mantis 16056 +++
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводСвободныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); 
КонецПроцедуры

&НаКлиенте
Процедура СоглашенияОПоставкеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); 
КонецПроцедуры


&НаСервереБезКонтекста
Процедура УстановитьОформлениеЯчейкиЦветКабины(Строки)
	
	ЧерныйЦвет = Новый Цвет(0,0,0);
	
	Для Каждого СтрокаСписка Из Строки Цикл
		Если Не СтрокаСписка.Значение.Данные.ЦветКабиныПТС.Пустая() Тогда
			ЦветФона = СтрокаСписка.Значение.Данные.ЦветКабиныПТС.ЦветФона.Получить();
			Если ЦветФона <> ЧерныйЦвет И НЕ СтрокаСписка.Значение.Оформление.Получить("ЦветКабины") = Неопределено Тогда 
				СтрокаСписка.Значение.Оформление["ЦветКабины"].УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводРаспределениеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводСвободныеПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре()
	
	ТекстДекорации = Scan_ПраваИНастройки.Scan_Право("ТекстовоеСообщениеПоТекущейПродуктовойСтруктуре");
	
	Если ЗначениеЗаполнено(ТекстДекорации) Тогда
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Заголовок = ТекстДекорации;
	Иначе
		Элементы.ТекстовоеСообщениеПоПродуктовойСтруктуре.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.Свободные Тогда
		ЗаполнитьЗаголовокТекстовоеСообщениеПоПродуктовойСтруктуре(); 
	КонецЕсли;
КонецПроцедуры

// ВСЕ ЗАКАЗЫ

// rarus kabany 18.06.2021 17810 +++
&НаКлиенте
Процедура ПоказатьВсеПродукты(Команда)
	//Снятие/ возвращение всех условий (кроме заполненности продукта) в запросе списка на закладке "Все продукты "
	Элементы.ЗаказыНаЗаводВсеПродуктыПоказатьВсеПродукты.Пометка = НЕ Элементы.ЗаказыНаЗаводВсеПродуктыПоказатьВсеПродукты.Пометка;  
	ЗаказыНаЗаводВсеПродукты.Параметры.УстановитьЗначениеПараметра("ИспользоватьДопУсловия",НЕ Элементы.ЗаказыНаЗаводВсеПродуктыПоказатьВсеПродукты.Пометка);
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискВсеЗаказыПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуВсеЗаказыПриИзменении(Элемент)
	ПолеС = "";
	ПолеПо = "";
	ПолеОтбораПоПериодуПриИзмененииУниверсальная(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоМоделямВсеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямВсеПродуктыМодельПродукта" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МодельПродукта) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МодельПродукта);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ЗаказыПоМоделямВсеПродуктыКоличество" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Количество) Тогда
		ЗаказыНаЗаводВсеПродукты.Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаказыНаЗаводВсеПродукты, "Модель", Элемент.ТекущиеДанные.МодельПродукта, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаказыНаЗаводВсеЗаказыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	УстановитьОформлениеЯчейкиЦветКабины(Строки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаЗаводВсеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборСписка(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка); 
КонецПроцедуры
// rarus kabany 18.06.2021 17810 ---

&НаКлиенте
Процедура ПродуктыПоОтветственным(Команда) //rarus vikhle 06.08.2021 mt 17834 +++
	
	Элементы.ГруппаПродуктыПоОтветственным.Видимость					= НЕ Элементы.ГруппаПродуктыПоОтветственным.Видимость;
	Элементы.ЗаказыНаЗаводРезервSRUПродуктыПоОтветственным.Пометка		= НЕ Элементы.ЗаказыНаЗаводРезервSRUПродуктыПоОтветственным.Пометка;
	
КонецПроцедуры //rarus vikhle 06.08.2021 mt 17834 ---

&НаКлиенте
Процедура ОбновитьДеревоПродуктыПоОтветственным(Команда)  //rarus vikhle 06.08.2021 mt 17834 +++
	
	ОбновитьДеревоПродуктыПоОтветственнымНаСервере();
	
КонецПроцедуры  //rarus vikhle 06.08.2021 mt 17834 ---

#КонецОбласти
