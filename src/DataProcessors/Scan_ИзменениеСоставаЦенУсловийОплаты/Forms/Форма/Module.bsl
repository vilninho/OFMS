#Область ОписаниеПеременных
//rarus vikhle 27.05.2021 m 17653 +++
//&НаКлиенте
//Перем ПредыдущееЗначениеДилера; //rarus vikhle 17.09.2021 mt 18288 закомментировал, поменял на реквизит
//rarus vikhle 27.05.2021 m 17653 ---
// rarus kabany 14.07.2021 17992 ++
&НаКлиенте
Перем ИзменитьУсловияДоговораКлиент;
// rarus kabany 14.07.2021 17992 --
//rarus vikhle 03.08.2021 m 17637 +++
&НаКлиенте
Перем УдаленныеПродукты; // Для фиксации фактических продуктов, удаленных стандартным платформенным способом из таблицы
//rarus vikhle 03.08.2021 m 17637 ---

#КонецОбласти

//vikhle 05.08.2020 mt 16181 +++
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Условия") 
		И Не Параметры.Свойство("Состав") 
		И Не Параметры.Свойство("Цены") 
		И НЕ Параметры.Свойство("Сроки") //rarus vikhle 01.04.2021 mt 17472 добавил сроки
		И Не Параметры.Свойство("ОбщиеДанныеЗаявки") //rarus vikhle 24.05.2021 mt 17653
		И НЕ Параметры.Свойство("РазделениеЗаявки") //rarus vikhle 29.09.2021 mt 18076
		Тогда
		ВызватьИсключение НСтр("ru = 'Открытие обработки возможно только из заявки.'");//rarus vikhle 01.10.2020 mt 16181
	КонецЕсли;	
	// rarus kabany 14.07.2021 17992 ++
	Если Параметры.Свойство("ИзменитьУсловияДоговора") Тогда	
		ИзменитьУсловияДоговора = Параметры.ИзменитьУсловияДоговора;
	КонецЕсли;
	// rarus kabany 14.07.2021 17992 --
	Элементы.СтраницаУсловияОплаты.Видимость	 = Параметры.Условия;
	Элементы.СтраницаСостав.Видимость 			 = Параметры.Состав;
	Элементы.СтраницаЦены.Видимость 			 = Параметры.Цены;
	Элементы.СтраницаСроки.Видимость 			 = Параметры.Сроки; //rarus vikhle 01.04.2021 m 17472 
	Элементы.СтраницаОбщиеДанныеЗаявки.Видимость = Параметры.ОбщиеДанныеЗаявки; //rarus vikhle 24.05.2021 mt 17653
	Элементы.СтраницаРазделениеЗаявки.Видимость	 = Параметры.РазделениеЗаявки; //rarus vikhle 29.09.2021 mt 18076
	
	//rarus vikhle 28.02.2021 mt 17186 +++
	ПользовательДилер = Параметры.Свойство("РольИсполнителя") И Параметры.РольИсполнителя = Справочники.РолиИсполнителей.НайтиПоНаименованию("Дилер"); 
	Если ПользовательДилер Тогда  
		Элементы.ГруппаСкидкиНаценки.ТолькоПросмотр 							= Истина;
		Элементы.СписокПродуктовЦеныЛогистическиеЗатратыСумма.ТолькоПросмотр	= Истина;
		Элементы.СписокПродуктовЦеныКомпенсацииСумма.ТолькоПросмотр				= Истина;
		// rarus agar 13.05.2021 17776 ++
		//Элементы.ИзменениеСпецификацииПоИнициативеЗаводаСумма.ТолькоПросмотр	= Истина;	// rarus tenkam 23.04.2021 mantis 17648 +
		Элементы.СписокПродуктовЦеныИзменениеСпецификацииПоИнициативеЗаводаСумма.ТолькоПросмотр = Истина;
		// rarus agar 13.05.2021 17776 --
		Элементы.СписокПродуктовСоставDDS.ТолькоПросмотр						= Истина;
		//rarus vikhle 24.05.2021 mt 17780 +++
		Элементы.СписокПродуктовЦеныСебестоимость.Видимость						= Ложь;
		//Элементы.Себестоимость.Видимость										= Ложь;
		Элементы.ГруппаЗаполнениеСебестоимость.Видимость						= Ложь; //rarus vikhle 24.09.2021 m 18286 
		//rarus vikhle 24.05.2021 mt 17780 ---
	КонецЕсли;
	//rarus vikhle 28.02.2021 mt 17186 ---
	
	
	//rarus vikhle 09.11.2020 mt 16181 +++ перенес в отдельную процедуру
	//СтруктураТаблиц = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилища);
	//УсловияОплаты.Загрузить(СтруктураТаблиц.ТаблицаУсловия); //rarus vikhle 05.10.2020 mt 16181
	//	
	//СписокПродуктов.Загрузить(СтруктураТаблиц.ТаблицаСостав); //rarus vikhle 11.09.2020 mt 16526
	//Если Параметры.Состав ИЛИ Параметры.Цены Тогда
	//	Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
	//		СтрокаТаблицы.ТипПродукта = ТипЗнч(СтрокаТаблицы.Продукт);	
	//		Если Параметры.Цены И ТипЗнч(СтрокаТаблицы.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
	//			ТаблицаРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(СтрокаТаблицы.Продукт);
	//			СтрокаЗатраты = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ЛогистическиеЗатраты,"СоставляющаяЦены");
	//			Если НЕ СтрокаЗатраты =  Неопределено Тогда
	//				СтрокаТаблицы.ЛогистическиеЗатратыСумма = СтрокаЗатраты.ЦенаСНДС;
	//				СтрокаТаблицы.ЛогистическиеЗатратыСуммаТекущие = СтрокаЗатраты.ЦенаСНДС;
	//			КонецЕсли;
	//			СтрокаКомпенсация = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.Компенсация,"СоставляющаяЦены");
	//			Если НЕ СтрокаКомпенсация =  Неопределено Тогда
	//				СтрокаТаблицы.КомпенсацииСумма = СтрокаКомпенсация.ЦенаСНДС;
	//				СтрокаТаблицы.КомпенсацииСуммаТекущие = СтрокаКомпенсация.ЦенаСНДС;
	//			КонецЕсли;
	//		КонецЕсли;	
	//	КонецЦикла;	
	//КонецЕсли;
	//rarus vikhle 09.11.2020 mt 16181 ---
	
	//rarus vikhle 03.09.2020 mt 16181 +++
	//ОтсрочкаПлатежа 				= Параметры.Ссылка.ОтсрочкаПлатежа; //rarus bonmak 13.01.2021 17041
	//Склад 						= Параметры.Ссылка.СкладОтгрузки; //rarus vikhle 11.09.2020 mt 16526
	ТекущееСоглашениеОПоставке 		= Параметры.Ссылка;
	Модель 							= Параметры.Ссылка.Модель;
	ТекущийДоговор					= ТекущееСоглашениеОПоставке.Договор;
	КонечныйКлиент					= Параметры.Ссылка.КонечныйКлиент;
	//ПриоритетныйСклад 			= Параметры.Ссылка.Дилер.ПриоритетныйСклад; //rarus vikhle 22.09.2020 mt 16181
	//rarus vikhle 20.01.2021 mt 16981 +++
	ПриоритетныйСклад				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ссылка.Дилер,"ПриоритетныйСклад");	
	//ПриоритетныйСклад               = РегистрыСведений.Scan_СоответствиеСкладовИМестХранения.ПолучитьСклад(ПриоритетноеМестоХранения);
	//rarus vikhle 20.01.2021 mt 16981 ---
	//СуммаПродуктовБезСУ				= Параметры.СуммаПродуктовБезСУ; //rarus vikhle 11.06.2021 mt 17637 переименовал //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	ОбщаяСуммаТекущегоСоглашения	= Параметры.ОбщаяСуммаСоглашения;//rarus vikhle 06.07.2021 17637 Откат, вернул как было
	СтавкаНДС						= ТекущееСоглашениеОПоставке.СтавкаНДС; //rarus vikhle 13.05.2021 mt 17733 поменял на ссылку 
	СсылкаНаТаблицыСоглашения		= Параметры.АдресВременногоХранилища; //rarus vikhle 09.11.2020 mt 16181 
	ПроцентДрайв					= СтрЗаменить(Scan_ПраваИНастройки.Scan_Право("ПроцентДрайв"),",","."); //rarus vikhle 25.12.2020 mt 16846
	//Дилер							= ТекущееСоглашениеОПоставке.Дилер; //rarus vikhle 28.01.2021 mt 16929
	ЗаявкаНаБУПродукты				= ТекущееСоглашениеОПоставке.ЗаявкаНаБУПродукты; //rarus vikhle 13.05.2021 mt 17733
	УсловияОплатыСтандартные		= Параметры.УсловияОплатыСтандартные; //rarus vikhle 17.09.2021 mt 18288
	
	Элементы.СписокПродуктовСоставПодобратьПродукты.Видимость	= НЕ Параметры.Ссылка.ТребуетсяРазмещениеЗаказа И НЕ ПользовательДилер;
	Элементы.СписокПродуктовСостав.ИзменятьСоставСтрок			= Параметры.Ссылка.ТребуетсяРазмещениеЗаказа И НЕ ПользовательДилер И ТекущийДоговор.Пустая(); // rarus vikhle 31.01.2022 m 18813 + условие на договор
	Элементы.СписокПродуктовСоставДобавить.Видимость 			= Параметры.Ссылка.ТребуетсяРазмещениеЗаказа И НЕ ПользовательДилер И ТекущийДоговор.Пустая(); // rarus vikhle 31.01.2022 m 18813 + условие на договор
	Элементы.ГруппаТаблицаПродуктыКП.Видимость 					= Ложь;
	
	//rarus vikhle 01.10.2021 m 18076 +++
	МассивНомеровЗаявок = Новый Массив;
	МассивНомеровЗаявок.Добавить(1);
	МассивНомеровЗаявок.Добавить(2);
	Элементы.ПродуктыКПереносуЗаявка.СписокВыбора.ЗагрузитьЗначения(МассивНомеровЗаявок);
	//rarus vikhle 01.10.2021 m 18076 ---
	
	//rarus vikhle 26.05.2021 m 17780 +++
	//ПользовательСотрудникОКП = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.РольИсполнителя,"Наименование")) = "Сотрудник отдела клиентской поддержки"; //rarus vikhle 23.03.2021 mt 17472
	НаименованиеРоли = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.РольИсполнителя,"Наименование"));
	Если НаименованиеРоли = "Сотрудник отдела клиентской поддержки" ИЛИ НаименованиеРоли = "Руководитель отдела клиентской поддержки" Тогда
		ПользовательСотрудникОКП = Истина;
	Иначе
		ПользовательСотрудникОКП = Ложь;
	КонецЕсли;	
	//rarus vikhle 26.05.2021 m 17780 ---
	
	//rarus vikhle 13.01.2021 m 18269 +++
	// rarus vikhle 21.12.2021 m 18269 +++
	//РолиИзменяющиеСебестоимость = РолиИзменяющиеСебестоимость(); 
	//Если НЕ ТекущееСоглашениеОПоставке.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UO
	//	И НЕ ТекущееСоглашениеОПоставке.УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UUO 
	//	ИЛИ (Параметры.Свойство("РольИсполнителя") И РолиИзменяющиеСебестоимость.Найти(Параметры.РольИсполнителя) = Неопределено) Тогда
	//	Элементы.ГруппаЗаполнениеСебестоимость.ТолькоПросмотр		= Истина;
	//	Элементы.СписокПродуктовЦеныСебестоимость.ТолькоПросмотр	= Истина;
	//КонецЕсли;	
	// rarus vikhle 21.12.2021 m 18269 ---
	//rarus vikhle 13.01.2021 m 18269 ---
	
	//rarus vikhle 03.12.2020 mt 16892 +++
	Если Элементы.СтраницаЦены.Видимость Тогда
		//ПользовательСотрудникОКП = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.РольИсполнителя,"Наименование")) = "Сотрудник отдела клиентской поддержки"; //rarus vikhle 23.03.2021 mt 17472 
		//Элементы.ИспользоватьДрайв.Доступность = ПользовательСотрудникОКП;
		Элементы.ГруппаЗаполнениеДрайв.ТолькоПросмотр = НЕ ПользовательСотрудникОКП; // rarus vikhle 24.09.2021 m 18286
		Элементы.СписокПродуктовЦеныДрайвИспользование.Доступность = ПользовательСотрудникОКП;
		Элементы.СписокПродуктовЦеныДрайв.ТолькоПросмотр = НЕ ПользовательСотрудникОКП;//rarus vikhle 21.12.2020 mt 16846
		Элементы.СписокПродуктовЦеныЦенаСНДС.ТолькоПросмотр = НЕ ПользовательСотрудникОКП;//rarus vikhle 29.12.2020 mt 16181
		//Элементы.ЦенаСНДС.ТолькоПросмотр = НЕ ПользовательСотрудникОКП; //rarus vikhle 10.03.2021 mt 17392
		Элементы.ГруппаЗаполнениеЦена.ТолькоПросмотр = НЕ ПользовательСотрудникОКП; // rarus vikhle 24.09.2021 m 18286
		//rarus vikhle 19.05.2021 mt 17795 +++
		//Элементы.ЦенаПоВалютнойОговорке.ТолькоПросмотр = НЕ ПользовательСотрудникОКП;
		Элементы.ГруппаЗаполнениеВалОговорка.ТолькоПросмотр = НЕ ПользовательСотрудникОКП; // rarus vikhle 24.09.2021 m 18286 
		Элементы.СписокПродуктовЦеныЦенаПоВалютнойОговорке.ТолькоПросмотр = НЕ ПользовательСотрудникОКП;
		//rarus vikhle 19.05.2021 mt 17795 ---
	КонецЕсли;	
	//rarus vikhle 03.12.2020 mt 16892 ---
	
	ДопустимыеРолиДляЗаменыДрафтов = ПолучитьДопустимыеРолиДляЗаменыДрафтов();
	Если ДопустимыеРолиДляЗаменыДрафтов.Количество() = 2 Тогда 
		Элементы.СписокПродуктовСоставЗаполнитьПоЗаказам.Видимость = Параметры.Ссылка.ТребуетсяРазмещениеЗаказа
																	И (Параметры.РольИсполнителя = ДопустимыеРолиДляЗаменыДрафтов[0] 
																	ИЛИ Параметры.РольИсполнителя = ДопустимыеРолиДляЗаменыДрафтов[1]);  
		//rarus vikhle 21.10.2021 18076 +++															
		ПроверяемыйСтатус = ПолучитьСтарыйСтатусСоглашения(ТекущееСоглашениеОПоставке);															
		Элементы.СтатусНовойВерсииЗаявки.Видимость =  ПроверяемыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено
														И (Параметры.РольИсполнителя = ДопустимыеРолиДляЗаменыДрафтов[0] 
														ИЛИ Параметры.РольИсполнителя = ДопустимыеРолиДляЗаменыДрафтов[1]);
		Элементы.СтатусНовойВерсииЗаявки.СписокВыбора.Очистить();												
		Элементы.СтатусНовойВерсииЗаявки.СписокВыбора.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП);												
		//rarus vikhle 21.10.2021 18076 ---												
	Иначе
		Элементы.СписокПродуктовСоставЗаполнитьПоЗаказам.Видимость = Ложь;	
	КонецЕсли;
	//rarus vikhle 03.09.2020 mt 16181 ---
	
	ЗаполнитьТаблицы(); //rarus vikhle 09.11.2020 mt 16181
	ЗаполнитьОбщиеДанныеЗаявки(); //rarus vikhle 24.05.2021 m 17653
	
	УстановитьУсловноеОформление(); //rarus vikhle 01.04.2021 mt 17472 убрал параметр
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПредыдущееЗначениеДилера		= Дилер;//rarus vikhle 26.05.2021
	ИзменитьУсловияДоговораКлиент	= ИзменитьУсловияДоговора; // rarus kabany 14.07.2021 17992 +	
	УдаленныеПродукты				= Новый Массив; //rarus vikhle 03.08.2021 mt 17637
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	//rarus vikhle 27.08.2020 mt 16181 +++
	Если НЕ НовоеСоглашениеОПоставке.Пустая() Тогда
		Оповестить("СозданоДопСоглашение", НовоеСоглашениеОПоставке);
	ИначеЕсли НЕ Элементы.Выполнить.Доступность Тогда //rarus vikhle 10.11.2020 mt 16181
		Оповестить("ИзмененыСкладыОтгрузки");
		// rarus kabany 14.07.2021 17992 ++	
	ИначеЕсли ИзменитьУсловияДоговораКлиент Тогда
		Оповестить("ИзменитьУсловияДоговора");
		// rarus kabany 14.07.2021 17992 --
	КонецЕсли;	
	//rarus vikhle 27.08.2020 mt 16181 ---
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы
//rarus bonmak 09.08.2021 16834 ++
//&НаКлиенте
//Процедура УсловияОплатыДатаНачалаОтсчетаАвансаПриИзменении(Элемент)
//	//РассчитатьКрайнююДатуОплаты(); rarus viklhe 06.10.2020 mt 16181
//КонецПроцедуры
//rarus bonmak 09.08.2021 16834 --
//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыСрокОплатыАвансаПриИзменении(Элемент)
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора") Тогда
//		РассчитатьКрайнююДатуОплаты();
//	КонецЕсли;	
//	 //rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

&НаКлиенте
Процедура СписокПродуктовСоставПродуктПриИзменении(Элемент)
	ТекущийПродукт = Элементы.СписокПродуктовСостав.ТекущиеДанные.Продукт;
	Если ЗначениеЗаполнено(ТекущийПродукт) И ТипЗнч(ТекущийПродукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		Элементы.СписокПродуктовСостав.ТекущиеДанные.Количество = 1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСоставПриИзменении(Элемент)
	ТекущиеДанные = Элементы.СписокПродуктовСостав.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			ТекущиеДанные.Модель = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Продукт,"МодельПродукта");
			ТекущиеДанные.ТипПродукта = ТипЗнч(ТекущиеДанные.Продукт);
			//ТекущиеДанные.ТипПродукта = ПолучитьОписаниеТипаПродукта(ТекущиеДанные.Продукт);//rarus vikhle 07.05.2021 mt 17752
		ИначеЕсли ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда 
			ТекущиеДанные.Модель = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Продукт,"Модель");
			ТекущиеДанные.Количество = ?(ЗначениеЗаполнено(ТекущиеДанные.Количество),ТекущиеДанные.Количество,1);
			ТекущиеДанные.ТипПродукта = ТипЗнч(ТекущиеДанные.Продукт);
			//ТекущиеДанные.ТипПродукта = ПолучитьОписаниеТипаПродукта(ТекущиеДанные.Продукт);//rarus vikhle 07.05.2021 mt 17752
			//rarus vikhle 22.09.2020 mt 16526 +++
			ТекущиеДанные.СкладОтгрузки = ПриоритетныйСклад;
			ТекущиеДанные.ПриоритетныйСклад = НЕ ПриоритетныйСклад.Пустая(); 
			//rarus vikhle 22.09.2020 mt 16526 ---
		КонецЕсли;	
	КонецЕсли;	
	
	//rarus vikhle 02.08.2021 mt 17637 +++
	// При наличии фактических продуктов, удаленных стандартным платформенным способом из таблицы, удаляем строки условий и графика по ним
	Если ТипЗнч(УдаленныеПродукты) = Тип("Массив") И УдаленныеПродукты.Количество() > 0 Тогда
		УдалитьУсловияОплатыПродуктов(УдаленныеПродукты);
		УдаленныеПродукты.Очистить();
	КонецЕсли;	
	//rarus vikhle 02.08.2021 mt 17637 ---
	
КонецПроцедуры

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
//	Если НоваяСтрока Тогда
//		Элемент.ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата");
//		//rarus vikhle 08.09.2020 mt 16181 +++
//		Элемент.ТекущиеДанные.РасчетДатыОплаты				= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора"); //rarus vikhle 01.10.2020 mt 16181
//		// rarus tenkam 08.04.2021 mantis 17523 +++
//		//Если НЕ ТекущийДоговор.Пустая() Тогда
//		//	//Элемент.ТекущиеДанные.ДатаНачалаОтсчетаАванса	= Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийДоговор,"ДатаНачала");
//		//	//ДатаНачалаДоговора 								= Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийДоговор,"ДатаНачала"); 
//		//ДатаНачалаДоговора								= ПолучитьДатуНачалаПервогоДоговора(ТекущийДоговор);//rarus vikhle 09.10.2020 mt 16181
//		
//		//rarus vikhle 23.06.2021 17637 +++
//		//ДатаНачалаДоговора = НачалоДня(ТекущаяДата());
//		//rarus vikhle 28.06.2021 АПК +++
//		//ДатаНачалаДоговора = ?(ТекущийДоговор.Пустая(), Дата(1,1,1), НачалоДня(ТекущаяДата()));
//		ДатаНачалаДоговора = ?(ТекущийДоговор.Пустая(), Дата(1,1,1), НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса()));
//		//rarus vikhle 28.06.2021 АПК ---
//		//rarus vikhle 23.06.2021 17637 ---
//		// rarus tenkam 08.04.2021 mantis 17523 ---
//		Элемент.ТекущиеДанные.КрайняяДатаОплаты			= ДатаНачалаДоговора;
//		//КонецЕсли;	// rarus tenkam 08.04.2021 mantis 17523 +
//		//rarus vikhle 08.09.2020 mt 16181 --
//	КонецЕсли;	
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

&НаКлиенте
Процедура СписокПродуктовСоставПродуктНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктовСостав.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		Элемент.ОграничениеТипа =  Новый ОписаниеТипов("СправочникСсылка.Scan_Изделия");
		СтандартнаяОбработка = Ложь;
	Иначе
		Элемент.ОграничениеТипа =  Новый ОписаниеТипов("СправочникСсылка.Scan_ДрафтыПродуктов");
		//МассивПараметров = Новый Массив();
		//МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Модель", Модель));
		//ЗначениеПараметровВыбора = Новый ФиксированныйМассив(МассивПараметров);
		//Элемент.ПараметрыВыбора = ЗначениеПараметровВыбора;
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Модель,ОтборПоЧастичномуСовпадениюМодели",Модель,Истина); //rarus vikhle 14.10.2020 mt 16181
		ОткрытьФорму("Справочник.Scan_ДрафтыПродуктов.ФормаВыбора",ПараметрыФормы,Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦеныСпецУсловияПриИзменении(Элемент)
	
	//rarus vikhle 15.06.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные; 
	ТекущаяСтрока = Элементы.СписокПродуктовЦены.ТекущаяСтрока;//rarus vikhle 04.08.2021 mt 17637 
	
	//rarus vikhle 22.06.2021 mt 17637 +++
	Если НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда 
		Если ПримененияСпециальныхУсловийИсчерпаны(ТекущиеДанные.СпециальныеУсловия) Тогда
			ТекущиеДанные.СпециальныеУсловия = Неопределено;
			ВывестиСообщениеПол(Нстр("ru = 'По выбранным Специальным условиям все применения исчерпаны. Невозможно применить.'"));
		КонецЕсли;
	КонецЕсли;	
	//rarus vikhle 22.06.2021 mt 17637 ---
	
	//rarus vikhle 03.08.2021 17637 +++ Раскомментировал
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		//СписокПродуктовЦеныСпецУсловияПриИзмененииСервер(); //rarus vikhle 03.08.2021 mt 17637 закомментировал
		ОбновитьУсловияОплаты(ТекущаяСтрока); //rarus vikhle 04.08.2021 mt 17637
	Иначе
		ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);
	КонецЕсли;	
	//rarus vikhle 03.08.2021 17637 ---
	
	//ОбновитьУсловияОплаты();//rarus vikhle 03.08.2021 17637 Закомментировал
	
	
	//rarus vikhle 25.11.2020 mt 16846 +++
	//ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	//Если ЗначениеЗаполнено(ТекущиеДанные.СпециальныеУсловия) Тогда
	//	Если Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"ДрайвНеПрименим") Тогда
	//		ТекущиеДанные.Драйв = Ложь; //rarus vikhle 25.11.2020 mt 16846
	//		ТекущиеДанные.ПроцентДрайв = 0;	
	//		ВывестиСообщениеПол("В указанных специальных условиях %1 установлен признак ""Драйв не применим"". Поле ""Драйв"" очищено.",,,,,
	//							ТекущиеДанные.СпециальныеУсловия);
	//	КонецЕсли;	
	//КонецЕсли;
	//ОбновитьУсловияОплаты(); //rarus vikhle 05.10.2020 mt 16181
	////rarus vikhle 25.11.2020 mt 16846 ---
	//
	////rarus vikhle 24.05.2021 mt 17780 +++
	
	//rarus vikhle 06.07.2021 17637 Откат, раскомментировал
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;	
	Если НЕ ТекущиеДанные = Неопределено 
		И НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() И ТекущиеДанные.ЦенаПоВалютнойОговорке = 0 Тогда
		СебестоимостьСУ = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"СебестоимостьСНДС");
		ТекущиеДанные.Себестоимость = СебестоимостьСУ;
	КонецЕсли;
	//rarus vikhle 24.05.2021 mt 17780 ---
	//rarus vikhle 06.07.2021 17637 ---
	
	//rarus vikhle 15.06.2021 mt 17637 ---
	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦеныДрайвПриИзменении(Элемент)
	//rarus vikhle 25.11.2020 mt 16846 +++
	//ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	//Если ЗначениеЗаполнено(ТекущиеДанные.СпециальныеУсловия) Тогда
	//	Если Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"ДрайвНеПрименим") Тогда
	//		ТекущиеДанные.ПроцентДрайв = 0;	
	//		ВывестиСообщениеПол("В указанных специальных условиях %1 установлен признак ""Драйв не применим"". Поле ""Процент драйва"" очищено.",,,,,
	//							ТекущиеДанные.СпециальныеУсловия);
	//	КонецЕсли;	
	//КонецЕсли;
	//ОбновитьУсловияОплаты(); //rarus vikhle 05.10.2020 mt 16181
	//rarus vikhle 25.11.2020 mt 16846
	
	//rarus vikhle 21.12.2020 mt 16846 +++
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктовЦены.ТекущаяСтрока; //rarus vikhle 04.08.2021 mt 17637
	
	Если ЗначениеЗаполнено(ТекущиеДанные.СпециальныеУсловия) И ТекущиеДанные.ПроцентДрайв > 0 Тогда
		Если Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"ДрайвНеПрименим") Тогда
			ТекущиеДанные.Драйв = Ложь;
			ТекущиеДанные.ПроцентДрайв = 0;	
			ВывестиСообщениеПол("В указанных специальных условиях %1 установлен признак ""Драйв не применим"". Поле ""Драйв"" очищено.",,,,,
								ТекущиеДанные.СпециальныеУсловия);
		Иначе
			ТекущиеДанные.Драйв	= ТекущиеДанные.ПроцентДрайв > 0;						
			//rarus vikhle 03.08.2021 17637 +++ Раскомментировал
			//rarus vikhle 15.06.2021 mt 17637 +++
			Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
				ОбновитьУсловияОплаты(ТекущаяСтрока); //rarus vikhle 04.08.2021 mt 17637 + параметр
			Иначе 	
				ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);
			КонецЕсли;	
			//rarus vikhle 15.06.2021 mt 17637 ---
			//rarus vikhle 03.08.2021 17637 ---
		КонецЕсли;
	Иначе
		ТекущиеДанные.Драйв	= ТекущиеДанные.ПроцентДрайв > 0;
		//rarus vikhle 03.08.2021 17637 +++ Раскомментировал
		//rarus vikhle 15.06.2021 mt 17637 +++
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			ОбновитьУсловияОплаты(ТекущаяСтрока);//rarus vikhle 04.08.2021 mt 17637 + параметр
		Иначе 	
			ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);
		КонецЕсли;	
		//rarus vikhle 15.06.2021 mt 17637 ---
		//rarus vikhle 03.08.2021 17637 ---
	КонецЕсли;	
	//rarus vikhle 21.12.2020 mt 16846 ---
		
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСоставПередНачаломИзменения(Элемент, Отказ)
	
	//rarus vikhle 10.11.2020 mt 16181 +++ перенес в условное оформление
	//Если Элемент.ТекущийЭлемент = Элементы.СписокПродуктовСоставКоличество  
	//	И ТипЗнч(Элемент.ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
	//	Отказ = Истина;
	//КонецЕсли;
	//rarus vikhle 10.11.2020 mt 16181 ---
	
	ТекущиеДанные = Элементы.СписокПродуктовСостав.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") И Элемент.ТекущийЭлемент = Элементы.СписокПродуктовСоставПродукт Тогда
		Элемент.ТекущийЭлемент.ОграничениеТипа 			= Новый ОписаниеТипов("СправочникСсылка.Scan_Изделия");
		Элемент.ТекущийЭлемент.КнопкаВыпадающегоСписка 	= Ложь;
		Элемент.ТекущийЭлемент.КнопкаВыбора 			= Ложь;
		Элемент.ТекущийЭлемент.КнопкаОчистки 			= Ложь;
		Элемент.ТекущийЭлемент.КнопкаСоздания 			= Ложь;
		Элемент.ТекущийЭлемент.РедактированиеТекста 	= Ложь;
		Элемент.ТекущийЭлемент.ИсторияВыбораПриВводе 	= ИсторияВыбораПриВводе.НеИспользовать;
	ИначеЕсли Элемент.ТекущийЭлемент = Элементы.СписокПродуктовСоставПродукт Тогда
		Элемент.ТекущийЭлемент.ОграничениеТипа 			= Новый ОписаниеТипов("СправочникСсылка.Scan_ДрафтыПродуктов");
		Элемент.ТекущийЭлемент.КнопкаВыпадающегоСписка 	= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаВыбора 			= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаОчистки 			= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаСоздания 			= Неопределено;
		Элемент.ТекущийЭлемент.РедактированиеТекста 	= Истина;
		Элемент.ТекущийЭлемент.ИсторияВыбораПриВводе 	= ИсторияВыбораПриВводе.Авто;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСоставПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	//rarus vikhle 10.11.2020 mt 16181 +++	
	ТекущиеДанные = Элементы.СписокПродуктовСостав.ТекущиеДанные;
	Если НоваяСтрока И НЕ Элемент.ТекущийЭлемент = Элементы.СписокПродуктовСоставDDS Тогда 
		Элемент.ТекущийЭлемент.ОграничениеТипа 			= Новый ОписаниеТипов("СправочникСсылка.Scan_ДрафтыПродуктов");
		Элемент.ТекущийЭлемент.КнопкаВыпадающегоСписка 	= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаВыбора 			= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаОчистки 			= Неопределено;
		Элемент.ТекущийЭлемент.КнопкаСоздания 			= Неопределено;
		Элемент.ТекущийЭлемент.РедактированиеТекста 	= Истина;
	ИначеЕсли НоваяСтрока Тогда
		ТекущиеДанные.ВТекущейЗаявке = Ложь;
	КонецЕсли;
	//rarus vikhle 10.11.2020 mt 16181 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСоставПродуктОткрытие(Элемент, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктовСостав.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
		Если Не Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиент.ТекущийПользователь(),"ПользовательСотрудник") Тогда
			СтандартнаяОбработка = Ложь;
			ПараметрыФормы = Новый Структура("Ключ,ФормаОткрытаИзРабочегоМестаДилера",ТекущиеДанные.Продукт,Истина);
			ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦеныПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Продукт) Тогда
		 Отказ = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦеныСпецУсловияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;//rarus vikhle 10.06.2021 mt 17637
	
	//rarus vikhle 28.01.2021 mt 16929 +++
	СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(ВыбранноеЗначение,"Статус,Модель,СрокДействияСпециальныхУсловий,Дилер");
	Если СтруктураРеквизитов.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП")
		И СтруктураРеквизитов.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП") Тогда
		//rarus vikhle 24.03.2021 +++
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'У выбранных СУ статус не равен ""Одобрено, нет в СОП"" и ""Одобрено, нет в СОП"".'"));
		Возврат;	
	ИначеЕсли ВРег(Лев(СокрЛП(СтруктураРеквизитов.Модель),10)) <> Врег(Лев(СокрЛП(Модель),10)) Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Различаются модели СУ и заявки.'"));
		Возврат;	
	ИначеЕсли СтруктураРеквизитов.СрокДействияСпециальныхУсловий < НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса()) Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Срок действия СУ истек.'"));
		Возврат;	
	ИначеЕсли СтруктураРеквизитов.Дилер <> Дилер Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Дилер СУ отличается от дилера заявки.'"));
		Возврат;
		//rarus vikhle 24.03.2021 ---	
	//rarus vikhle 02.08.2021 17637 +++ Раскомментировал	
	//rarus vikhle 09.06.2021 mt 17637 +++	
	ИначеЕсли ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
		И НЕ ПродуктУказанВСУ(ВыбранноеЗначение,ТекущиеДанные.Продукт) Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Продукт не указан в СУ.'"));
		Возврат;	
	//rarus vikhle 02.08.2021 17637 ---	
	КонецЕсли;	
	//rarus vikhle 28.01.2021 mt 16929 ---
	
	//rarus vikhle 28.02.2021 mt 17186 +++
	
	//rarus vikhle 22.06.2021 mt 17637 +++ перенес в приизменении
	//Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
	//	Если ПримененияСпециальныхУсловийИсчерпаны(ВыбранноеЗначение) Тогда
	//		СтандартнаяОбработка = Ложь;
	//		ВывестиСообщениеПол(Нстр("ru = 'По выбранным Специальным условиям все применения исчерпаны. Невозможно применить.'"));
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	//rarus vikhle 22.06.2021 mt 17637 ---
	
	//rarus vikhle 10.03.2021 mt 17413 +++
	//ТипСпецификации = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"УникальностьСпецификации");
	//Если НЕ ТипСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
	//	Если НЕ СпецификацииСовпадают(Элементы.СписокПродуктовЦены.ТекущиеДанные.Продукт,ВыбранноеЗначение,ТекущееСоглашениеОПоставке) Тогда
	//		СтандартнаяОбработка = Ложь;
	//		ВывестиСообщениеПол(Нстр("ru = 'Отличаются спецификации SPORT. Специальные условия не были добавлены.'"));
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;	
	//rarus vikhle 28.02.2021 mt 17186 ---
	//rarus vikhle 10.03.2021 mt 17413 ---
	
	//rarus vikhle 02.08.2021 17637 +++ Закомментировал
	//rarus vikhle 18.06.2021 mt 17637 +++
	//Если НЕ ПроверитьСпециальныеУсловия(ВыбранноеЗначение) Тогда
	//	//ВывестиСообщениеПол("Условия оплаты в специальных условиях %1 отличаются от условий оплаты в соглашении о поставке.",,,,,ВыбранноеЗначение);
	//	ВывестиСообщениеПол(Нстр("ru = 'Условия оплаты в специальных условиях %1 отличаются от условий оплаты в заявке.'"),,,,,ВыбранноеЗначение); //rarus vikhle 05.11.2020 mt 16723	
	//КонецЕсли;
	//rarus vikhle 18.06.2021 mt 17637 ---
	//rarus vikhle 02.08.2021 17637 ---
	
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные; 
	Если ЗначениеЗаполнено(ТекущиеДанные.ПроцентДрайв) Тогда
		Если Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение,"ДрайвНеПрименим")  Тогда
			ТекущиеДанные.Драйв = Ложь; //rarus vikhle 25.11.2020 mt 16846
			ТекущиеДанные.ПроцентДрайв = 0;
			ВывестиСообщениеПол(Нстр("ru = 'При использовании специальных условий %1 драйв не применяется, поле очищено.'"),,,,,ВыбранноеЗначение); //rarus vikhle 05.11.2020 mt 16723		
		КонецЕсли;	
	КонецЕсли;
		
КонецПроцедуры
//rarus bonmak 09.08.2021 16834 ++
//&НаКлиенте
//Процедура СписокПродуктовЦеныПриАктивизацииЯчейки(Элемент)
//	//rarus vikhle 29.12.2020 mt 16181 +++ убрал в условное оформление
//	//Если НЕ Элемент.ТекущийЭлемент = Элементы.СписокПродуктовЦеныКоличество 
//	//	И НЕ Элемент.ТекущийЭлемент = Элементы.СписокПродуктовЦеныДрайв Тогда  
//	//	Элемент.ТекущийЭлемент.ТолькоПросмотр = Ложь;
//	//	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
//	//	Если НЕ ТекущиеДанные = Неопределено Тогда
//	//		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") 
//	//			И (Элемент.ТекущийЭлемент = Элементы.СписокПродуктовЦеныЛогистическиеЗатратыСумма
//	//			ИЛИ Элемент.ТекущийЭлемент = Элементы.СписокПродуктовЦеныКомпенсацииСумма) Тогда
//	//			Элемент.ТекущийЭлемент.ТолькоПросмотр = Истина;
//	//		КонецЕсли;
//	//	КонецЕсли;
//	//КонецЕсли;	
//	//rarus vikhle 29.12.2020 mt 16181 ---
//КонецПроцедуры
//rarus bonmak 09.08.2021 16834 --
&НаКлиенте
Процедура СписокПродуктовЦеныПродуктОткрытие(Элемент, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
		Если Не Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиент.ТекущийПользователь(),"ПользовательСотрудник") Тогда
			СтандартнаяОбработка = Ложь;
			ПараметрыФормы = Новый Структура("Ключ,ФормаОткрытаИзРабочегоМестаДилера",ТекущиеДанные.Продукт,Истина);
			ОткрытьФорму("Справочник.Scan_Изделия.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПродуктыКПВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыборПродуктаКП();	
КонецПроцедуры

&НаКлиенте
Процедура ПродуктыПрицепыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) // Rarus tenkam 21.10.2021 mantis 17822 +++
	ОбработатьВыборПродуктаКП(, Истина);	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСкладОтгрузкиПриИзменении(Элемент)
	//rarus vikhle 22.09.2020 mt 16526 +++
	ТекущиеДанные = Элементы.СписокПродуктов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные.ПриоритетныйСклад = (ТекущиеДанные.СкладОтгрузки = ПриоритетныйСклад  И НЕ ПриоритетныйСклад.Пустая()); 
		//rarus vikhle 26.01.2021 mt 16981 +++
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(ТекущиеДанные.Продукт,"СкладПродажи,МестоПередачи,ЗапретИзмененияСкладаПродажи");
			//Если СтруктураРеквизитов.СкладПродажи = ПредопределенноеЗначение("Справочник.Scan_Склады.ПустаяСсылка") Тогда
			Если НЕ СтруктураРеквизитов.ЗапретИзмененияСкладаПродажи Тогда //rarus vikhle 05.05.2021 mt 17748
				ТекущиеДанные.СкладПродажи = ТекущиеДанные.СкладОтгрузки; 		
			КонецЕсли;
			Если СтруктураРеквизитов.МестоПередачи = ПредопределенноеЗначение("Справочник.Scan_Склады.ПустаяСсылка") Тогда
				ТекущиеДанные.МестоПередачи = ТекущиеДанные.СкладОтгрузки; 		
			КонецЕсли;
		КонецЕсли;	
		//rarus vikhle 26.01.2021 mt 16981 ---
	КонецЕсли;	
	//rarus vikhle 22.09.2020 mt 16526 ---
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСоставПередУдалением(Элемент, Отказ)
	
	УдаленныеПродукты.Очистить();
	
	Для Каждого ИДСтроки Из Элемент.ВыделенныеСтроки Цикл
		ТекущиеДанные = СписокПродуктов.НайтиПоИдентификатору(ИДСтроки);
		// Запоминаем удаленные продукты, для последующей обработки в событии ПриИзменении с использованием серверных процедур
		Если НЕ ТекущиеДанные = Неопределено Тогда 
			ТекущийПродукт = ТекущиеДанные.Продукт; 
			Если ТипЗнч(ТекущийПродукт) = Тип("СправочникСсылка.Scan_Изделия") 
				И НЕ ТекущийПродукт.Пустая() Тогда
				УдаленныеПродукты.Добавить(ТекущийПродукт);	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦеныЛогистическиеЗатратыСуммаПриИзменении(Элемент)
	//rarus vikhle 05.10.2020 mt 16181 +++
	//ОбновитьУсловияОплаты(); //rarus vikhle 04.08.2021 mt 17637 закомментировал
	//rarus vikhle 05.10.2020 mt 16181 ---
	
	//rarus vikhle 04.08.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктовЦены.ТекущаяСтрока;
	
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		ОбновитьУсловияОплаты(ТекущаяСтрока);
	КонецЕсли;	
	//rarus vikhle 04.08.2021 mt 17637 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦеныКомпенсацииСуммаПриИзменении(Элемент)
	//rarus vikhle 05.10.2020 mt 16181 +++
	//ОбновитьУсловияОплаты();//rarus vikhle 04.08.2021 mt 17637 закомментировал
	//rarus vikhle 05.10.2020 mt 16181 ---
	
	//rarus vikhle 04.08.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктовЦены.ТекущаяСтрока;
	
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		ОбновитьУсловияОплаты(ТекущаяСтрока);
	КонецЕсли;	
	//rarus vikhle 04.08.2021 mt 17637 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦеныИзменениеСпецификацииПоИнициативеЗаводаСуммаПриИзменении(Элемент)	// rarus tenkam 23.04.2021 mantis 17648 +
	//ОбновитьУсловияОплаты();//rarus vikhle 04.08.2021 mt 17637 закомментировал
	
	//rarus vikhle 04.08.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктовЦены.ТекущаяСтрока;
	
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		ОбновитьУсловияОплаты(ТекущаяСтрока);
	КонецЕсли;	
	//rarus vikhle 04.08.2021 mt 17637 ---
	
КонецПроцедуры

#Область ЗакомментированоПоУсловиямОплаты
//rarus vikhle 04.08.2021 mt 17637 +++
//&НаКлиенте
//Процедура СписокПродуктовСоставПослеУдаления(Элемент)
//	//rarus vikhle 02.10.2020 mt 16181 +++
//	//ОбновитьУсловияОплаты();
//	//rarus vikhle 02.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 04.08.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыСуммаПриИзменении(Элемент)
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.Сумма > ОбщаяСуммаТекущегоСоглашения  Тогда
//		ТекущиеДанные.Сумма = 0;
//		ТекущиеДанные.ПроцентОплаты = 0;
//		ОбновитьСтрокуПостоплаты();
//		ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//	ИначеЕсли ТекущиеДанные.Сумма = 0 Тогда
//		ТекущиеДанные.ПроцентОплаты = 0;	
//	Иначе
//		Если НЕ ОбщаяСуммаТекущегоСоглашения = 0 Тогда
//			ТекущиеДанные.ПроцентОплаты =  ТекущиеДанные.Сумма / ОбщаяСуммаТекущегоСоглашения * 100;
//			//rarus vikhle 15.06.2021 mt 17637 +++			
//			//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//			//ОбщийПроцент		= 0;
//			//СтрокаПостоплаты 	= Неопределено;
//			//rarus vikhle 06.07.2021 17637 ---
//			
//			//ПараметрыОтбора = Новый Структура;//rarus vikhle 06.07.2021 17637 Откат, закомментировал
//			ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));//rarus vikhle 06.07.2021 17637 Откат, раскомментировал
//			//ПараметрыОтбора.Вставить("Продукт", ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));//rarus vikhle 06.07.2021 17637 Откат, закомментировал
//			//rarus vikhle 15.06.2021 mt 17637 ---
//			СтрокиБезПродукта = УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//			
//			//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//			//Для Каждого СтрокаТаблицы Из СтрокиБезПродукта Цикл
//			//	ОбщийПроцент = ОбщийПроцент + СтрокаТаблицы.ПроцентОплаты;
//			//	Если СтрокаТаблицы.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата") Тогда
//			//		СтрокаПостоплаты = СтрокаТаблицы;
//			//	КонецЕсли;	
//			//КонецЦикла;
//			//rarus vikhle 06.07.2021 17637 ---
//			
//			//Если СтрокаПостоплаты = Неопределено Тогда //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//			Если СтрокиБезПродукта.Количество() = 0 Тогда //rarus vikhle 06.07.2021 17637 Откат, добавил
//				ОбщийПроцент = УсловияОплаты.Итог("ПроцентОплаты"); //rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, раскомментировал
//				Если ОбщийПроцент  > 100 Тогда
//					ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//					ТекущиеДанные.ПроцентОплаты = 0;
//					ТекущиеДанные.Сумма = 0;
//				КонецЕсли;	
//			Иначе
//				ОбщийПроцент = УсловияОплаты.Итог("ПроцентОплаты"); //rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, раскомментировал
//				Если ОбщийПроцент > 100 Тогда
//					//ДоляПредоплаты = СтрокаПостоплаты.ПроцентОплаты - (ОбщийПроцент - 100); //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//					ДоляПредоплаты = СтрокиБезПродукта[0].ПроцентОплаты - (ОбщийПроцент - 100); //rarus vikhle 06.07.2021 17637 Откат, добавил как было
//					Если ДоляПредоплаты < 0 Тогда 
//						ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//						ТекущиеДанные.ПроцентОплаты = 0;
//						ТекущиеДанные.Сумма = 0;
//					КонецЕсли;	
//				КонецЕсли;	
//			КонецЕсли;
//		КонецЕсли;	
//	КонецЕсли;	
//	
//	ОбновитьСтрокуПостоплаты();
//	ОбновитьГрафикПлатежей(); //rarus vikhle 24.12.2020 mt 17026
//	//rarus vikhle 12.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПроцентОплатыПриИзменении(Элемент)
//	//rarus vikhle 12.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	//rarus vikhle 15.06.2021 mt 17637 +++
//	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//	//ОбщийПроцент		= 0;
//	//СтрокаПостоплаты	= Неопределено;
//	//rarus vikhle 06.07.2021 17637 ---
//	
//	ПараметрыОтбора = Новый Структура("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));//rarus vikhle 06.07.2021 17637 Откат, раскомментировал
//	//ПараметрыОтбора = Новый Структура("Продукт",ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка")); //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//	//rarus vikhle 15.06.2021 mt 17637 ---
//	
//	СтрокиБезПродукта = УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//	
//	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//	//Для Каждого СтрокаТаблицы Из СтрокиБезПродукта Цикл
//	//	ОбщийПроцент = ОбщийПроцент + СтрокаТаблицы.ПроцентОплаты;
//	//	Если СтрокаТаблицы.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата") Тогда
//	//		СтрокаПостоплаты = СтрокаТаблицы;
//	//	КонецЕсли;	
//	//КонецЦикла;
//	//rarus vikhle 06.07.2021 17637 ---
//	
//	//Если СтрокаПостоплаты = Неопределено Тогда
//	Если СтрокиБезПродукта.Количество() = 0 Тогда //rarus vikhle 06.07.2021 17637 Откат, добавил как было
//		ОбщийПроцент = УсловияОплаты.Итог("ПроцентОплаты");//rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, раскомментировал
//		Если ОбщийПроцент  > 100 Тогда
//			ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//			ТекущиеДанные.ПроцентОплаты = 0;
//			ТекущиеДанные.Сумма = 0;
//		КонецЕсли;	
//	Иначе
//		ОбщийПроцент = УсловияОплаты.Итог("ПроцентОплаты");//rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, раскомментировал
//		Если ОбщийПроцент > 100 Тогда
//			ДоляПредоплаты = СтрокиБезПродукта[0].ПроцентОплаты - (ОбщийПроцент - 100);//rarus vikhle 06.07.2021 17637 Откат, раскомментировал 
//			
//			// Проверка на превышение 100% после автоматической корректировки процента в строке постоплаты
//			//ДоляПредоплаты = СтрокаПостоплаты.ПроцентОплаты - (ОбщийПроцент - 100); //rarus vikhle 09.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//			
//			Если ДоляПредоплаты < 0 Тогда 
//				ВывестиСообщениеПол(Нстр("ru = 'Общий процент превышает 100'"));
//				ТекущиеДанные.ПроцентОплаты = 0;
//				ТекущиеДанные.Сумма = 0;
//			КонецЕсли;	
//		КонецЕсли;	
//	КонецЕсли;
//		
//	Если НЕ ТекущиеДанные.ПроцентОплаты = 0 И НЕ ОбщаяСуммаТекущегоСоглашения = 0 Тогда
//		ТекущиеДанные.Сумма = ТекущиеДанные.ПроцентОплаты / 100 * ОбщаяСуммаТекущегоСоглашения;
//	Иначе
//		ТекущиеДанные.Сумма = 0;	
//	КонецЕсли;
//	
//	ОбновитьСтрокуПостоплаты();
//	
//	//rarus vikhle 12.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыРасчетДатыОплатыПриИзменении(Элемент)
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS")
//		ИЛИ ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS")
//		ИЛИ ТекущиеДанные.РасчетДатыОплаты.Пустая() Тогда
//		ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1);
//	ИначеЕсли ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1) Тогда
//		РассчитатьКрайнююДатуОплаты();
//	КонецЕсли;	
//	//rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПриАктивизацииЯчейки(Элемент)
//	//rarus vikhle 18.12.2020 mt 16181 +++ перенес в УО
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	//Если  Элемент.ТекущийЭлемент = Элементы.УсловияОплатыКрайняяДатаОплаты Тогда
//	//	ТекущиеДанные = Элемент.ТекущиеДанные;
//	//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS")
//	//		ИЛИ ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS")
//	//		ИЛИ ТекущиеДанные.РасчетДатыОплаты.Пустая() Тогда
//	//		Элементы.УсловияОплатыКрайняяДатаОплаты.ТолькоПросмотр = Истина;
//	//	Иначе
//	//		Элементы.УсловияОплатыКрайняяДатаОплаты.ТолькоПросмотр = Ложь;	
//	//	КонецЕсли;
//	//КонецЕсли;	
//	//rarus vikhle 01.10.2020 mt 16181 ---
//	//rarus vikhle 18.12.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыКрайняяДатаОплатыПриИзменении(Элемент)
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора") 
//		И НЕ ТекущийДоговор.Пустая() Тогда
//		// rarus tenkam 08.04.2021 mantis 17523 +++
//		//ДатаНачалаДоговора = ПолучитьДатуНачалаПервогоДоговора(ТекущийДоговор);
//		ДатаНачалаДоговора = НачалоДня(ТекущаяДата());
//		// rarus tenkam 08.04.2021 mantis 17523 ---
//		Если ЗначениеЗаполнено(ДатаНачалаДоговора) И ЗначениеЗаполнено(ТекущиеДанные.КрайняяДатаОплаты) 
//			И НачалоДня(ДатаНачалаДоговора) > НачалоДня(ТекущиеДанные.КрайняяДатаОплаты) Тогда
//			ОчиститьСообщения();
//			ВывестиСообщениеПол("Указанная дата меньше даты начала договора!");
//			ТекущиеДанные.СрокОплатыАванса = 0;
//		Иначе	
//			// rarus tenkam 08.04.2021 mantis 17523 +++
//			//ТекущиеДанные.СрокОплатыАванса = (НачалоДня(ТекущиеДанные.КрайняяДатаОплаты) - НачалоДня(ДатаНачалаДоговора)) / (60 * 60 * 24);
//			ТекущиеДанные.СрокОплатыАванса = Scan_ОбщегоНазначенияСервер.ПолучитьРазницуВРабочихДнях(ТекущиеДанные.КрайняяДатаОплаты, ДатаНачалаДоговора);
//			// rarus tenkam 08.04.2021 mantis 17523 ---
//		КонецЕсли;	
//	КонецЕсли;
//	//rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыВидОплатыПриИзменении(Элемент)
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	Если ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата") Тогда 
//		ПараметрыОтбора = Новый Структура;
//		ПараметрыОтбора.Вставить("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
//		//ПараметрыОтбора.Вставить("Продукт",ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));//rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//		СтрокиПостоплаты = УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//		Если СтрокиПостоплаты.Количество() > 1 Тогда
//			ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата");
//			ТекущиеДанные.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора");
//			// rarus tenkam 08.04.2021 mantis 17523 +++
//			//Если НЕ ТекущийДоговор.Пустая() Тогда       
//			//ДатаНачалаДоговора = ПолучитьДатуНачалаПервогоДоговора(ТекущийДоговор);
//			
//			//rarus vikhle 23.06.2021 17637 +++
//			//ДатаНачалаДоговора = НачалоДня(ТекущаяДата());
//			//rarus vikhle 28.06.2021 АПК +++
//			//ДатаНачалаДоговора = ?(ТекущийДоговор.Пустая(), Дата(1,1,1), НачалоДня(ТекущаяДата()));
//			ДатаНачалаДоговора = ?(ТекущийДоговор.Пустая(), Дата(1,1,1), НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса()));
//			//rarus vikhle 28.06.2021 АПК ---
//			//rarus vikhle 23.06.2021 17637 ---
//			
//			// rarus tenkam 08.04.2021 mantis 17523 ---
//			ТекущиеДанные.КрайняяДатаОплаты	= ДатаНачалаДоговора;
//			//КонецЕсли;	// rarus tenkam 08.04.2021 mantis 17523 +
//			ОчиститьСообщения();
//			ВывестиСообщениеПол("В таблице уже есть строка с постоплатой.");
//		Иначе
//			ПараметрыОтбора = Новый Структура;
//			ПараметрыОтбора.Вставить("ВидОплаты",ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата"));
//			//ПараметрыОтбора.Вставить("Продукт",ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));//rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//			МассивСтрокПредоплаты = УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//			ОбщаяСуммаПредоплаты = 0;
//			ОбщийПроцентПредоплаты = 0;
//			Для Каждого ЭлементМассива Из МассивСтрокПредоплаты Цикл
//				ОбщаяСуммаПредоплаты = ОбщаяСуммаПредоплаты + ЭлементМассива.Сумма;
//				ОбщийПроцентПредоплаты = ОбщийПроцентПредоплаты + ЭлементМассива.ПроцентОплаты;  
//			КонецЦикла;	
//			ТекущиеДанные.Сумма = ОбщаяСуммаТекущегоСоглашения - ОбщаяСуммаПредоплаты;
//			ТекущиеДанные.ПроцентОплаты = 100 - ОбщийПроцентПредоплаты;
//			//rarus bonmak 13.01.2021 17041 ++
//			ТекущиеДанные.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
//			ТекущиеДанные.СрокОплатыАванса	= 30;
//			ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1);
//			//rarus bonmak 13.01.2021 17041 --
//		КонецЕсли;
//	КонецЕсли;	
//	//rarus vikhle 01.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---
#КонецОбласти

&НаКлиенте
Процедура СписокПродуктовЦеныЦенаСНДСПриИзменении(Элемент)
	
	ЗначениеСтавкиНДС = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтавкаНДС,"Ставка");//rarus vikhle 13.05.2021 mt 17733
	//rarus vikhle 09.11.2020 mt 16181 +++
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные.ЦенаБезНДС = 100 * ТекущиеДанные.ЦенаСНДС/ (100 + ЗначениеСтавкиНДС); //rarus vikhle 13.05.2021 mt 17733
	КонецЕсли;		
	ТекущаяСтрока = Элементы.СписокПродуктовЦены.ТекущаяСтрока; //rarus vikhle 04.08.2021 mt 17637
	//rarus vikhle 09.11.2020 mt 16181 ---
	
	//rarus vikhle 15.06.2021 mt 17637 +++
	//rarus vikhle 02.08.2021 17637 +++ Раскомментировал
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		ОбновитьУсловияОплаты(ТекущаяСтрока); //rarus vikhle 29.12.2020 mt 16181 //rarus vikhle 04.08.2021 mt 17637 + Параметр
	Иначе
		ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);
	КонецЕсли;	
	//rarus vikhle 02.08.2021 17637 ---
	//rarus vikhle 15.06.2021 mt 17637 ---
	
КонецПроцедуры

//rarus vikhle 25.11.2020 mt 16846 +++
&НаКлиенте
Процедура СписокПродуктовЦеныДрайвИспользованиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктовЦены.ТекущаяСтрока; //rarus vikhle 04.08.2021 mt 17637
	
	Если ЗначениеЗаполнено(ТекущиеДанные.СпециальныеУсловия) И ТекущиеДанные.Драйв Тогда
		Если Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"ДрайвНеПрименим") Тогда
			ТекущиеДанные.Драйв = Ложь;
			ТекущиеДанные.ПроцентДрайв = 0;	
			ВывестиСообщениеПол("В указанных специальных условиях %1 установлен признак ""Драйв не применим"". Поле ""Драйв"" очищено.",,,,,
								ТекущиеДанные.СпециальныеУсловия);
		Иначе
			ТекущиеДанные.ПроцентДрайв = ПроцентДрайв;						
			//rarus vikhle 03.08.2021 17637 +++ Раскомментировал
			//rarus vikhle 15.06.2021 mt 17637 +++
			Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
				ОбновитьУсловияОплаты(ТекущаяСтрока); //rarus vikhle 04.08.2021 mt 17637 + параметр
			Иначе 	
				ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);
			КонецЕсли;	
			//rarus vikhle 15.06.2021 mt 17637 ---
			//rarus vikhle 03.08.2021 17637 ---
		КонецЕсли;	
	Иначе
		ТекущиеДанные.ПроцентДрайв = ?(ТекущиеДанные.Драйв,ПроцентДрайв,0);
		//rarus vikhle 03.08.2021 17637 +++ Раскомментировал
		//rarus vikhle 15.06.2021 mt 17637 +++
		Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			ОбновитьУсловияОплаты(ТекущаяСтрока);//rarus vikhle 04.08.2021 mt 17637 + параметр
		Иначе 	
			ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);
		КонецЕсли;	
		//rarus vikhle 15.06.2021 mt 17637 ---
		//rarus vikhle 03.08.2021 17637 ---
	КонецЕсли;
	
КонецПроцедуры
//rarus vikhle 25.11.2020 mt 16846 ---

&НаКлиенте
Процедура СписокПродуктовЦеныЦенаПоВалютнойОговоркеПриИзменении(Элемент)	// rarus tenkam 02.04.2021 mantis 17419 +
	ТекущиеДанные = Элементы.СписокПродуктовЦены.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктовЦены.ТекущаяСтрока;//rarus vikhle 04.08.2021 mt 17637
	
	//Если ЗначениеЗаполнено(ТекущиеДанные.ЦенаПоВалютнойОговорке) Тогда
	//	ТекущиеДанные.ДатаПерерасчета = ТекущаяДата();
	//Иначе
	//	ТекущиеДанные.ДатаПерерасчета = Дата('00010101');
	//КонецЕсли;
	
	//rarus vikhle 03.08.2021 17637 +++ Раскомментировал
	//rarus vikhle 15.06.2021 mt 17637 +++
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		ОбновитьУсловияОплаты(ТекущаяСтрока);//rarus vikhle 04.08.2021 mt 17637 + параметр
	Иначе
		ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);
	КонецЕсли;	
	//rarus vikhle 15.06.2021 mt 17637 ---
	//rarus vikhle 03.08.2021 17637 ---
	
	//rarus vikhle 24.05.2021 mt 17780 +++
	Если ТекущиеДанные.ЦенаПоВалютнойОговорке = 0 И НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
		ТекущиеДанные.Себестоимость = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"СебестоимостьСНДС");
		ВывестиСообщениеПол(Нстр("ru = 'Себестоимость по продукту %1 была заполнена из СУ'"),,,,,ТекущиеДанные.Продукт);
	КонецЕсли;
	//rarus vikhle 24.05.2021 mt 17780 ---
КонецПроцедуры

//rarus vikhle 04.10.2021 mt 18076 +++ раскомментировал
&НаКлиенте
Процедура СписокПродуктовСоставКоличествоПриИзменении(Элемент)
	//rarus vikhle 17.06.2021 mt 17637 +++
	//ОбновитьУсловияОплаты(); //rarus vikhle 29.12.2020 mt 16181 //rarus vikhle 02.08.2021 17637 Закомментировал
	ТекущаяСтрока = Элементы.СписокПродуктовСостав.ТекущаяСтрока; //rarus vikhle 04.10.2021 mt 18076 
	ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект, ТекущаяСтрока); //rarus vikhle 04.10.2021 mt 18076
	//rarus vikhle 17.06.2021 mt 17637 ---
КонецПроцедуры
//rarus vikhle 04.10.2021 mt 18076 ---

&НаКлиенте
Процедура СписокПродуктовСоставDDSПриИзменении(Элемент)
	
	//rarus vikhle 18.06.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктовСостав.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктовСостав.ТекущаяСтрока;//rarus vikhle 04.08.2021 mt 17637
	
	//rarus vikhle 03.08.2021 17637 +++ Раскомментировал
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
	//	Если ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
			//ОбновитьГрафикПлатежей();
	//	Иначе	
		ОбновитьУсловияОплаты(ТекущаяСтрока, Ложь);//rarus vikhle 02.10.2020 mt 16181 //rarus vikhle 04.08.2021 mt 17637 + Параметры
	//	КонецЕсли;	
	КонецЕсли;
	//rarus vikhle 03.08.2021 17637 ---
	
	//ОбновитьГрафикПлатежей(Элементы.Страницы.ТекущаяСтраница.Имя); //rarus vikhle 24.12.2020 mt 17026
	//rarus vikhle 18.06.2021 mt 17637 ---
	
КонецПроцедуры

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПриИзменении(Элемент)
//	ОбновитьГрафикПлатежей(); //rarus vikhle 24.12.2020 mt 17026
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПередУдалением(Элемент, Отказ)
//	
//	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//	//rarus vikhle 08.06.2021 mt 17637 +++
//	//ТекущиеДанные = Элемент.ТекущиеДанные;
//	//Если НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
//	//	ВывестиСообщениеПол(Нстр("ru = 'Запрещено удалять строки с заполненными СУ'"));
//	//	Отказ = Истина;
//	//КонецЕсли;	
//	//rarus vikhle 08.06.2021 mt 17637 ---
//	//rarus vikhle 06.07.2021 17637 ---
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
//&НаКлиенте
//Процедура УсловияОплатыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
//	
//	//rarus vikhle 10.06.2021 mt 17637 +++
//	Если Копирование Тогда
//		Отказ = Истина;
//		ВывестиСообщениеПол(Нстр("ru = 'Копирование строк табличной части запрещено'"));
//	КонецЕсли;
//	//rarus vikhle 10.06.2021 mt 17637 ---
//	
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

&НаКлиенте
Процедура СпециальныеУсловияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачатьВыборСУ(Элемент,СтандартнаяОбработка); //rarus vikhle 28.01.2021 mt 16929
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовЦеныСпецУсловияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачатьВыборСУ(Элемент,СтандартнаяОбработка); //rarus vikhle 28.01.2021 mt 16929
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальныеУсловияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//rarus vikhle 28.01.2021 mt 16929 +++
	СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(ВыбранноеЗначение,"Статус,Модель,СрокДействияСпециальныхУсловий,Дилер");
	Если СтруктураРеквизитов.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП")
		И СтруктураРеквизитов.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП") Тогда
	//rarus vikhle 24.03.2021 +++	
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'У выбранных СУ статус не равен ""Одобрено, нет в СОП"" и ""Одобрено, нет в СОП"".'"));
		Возврат;	
	ИначеЕсли ВРег(Лев(СокрЛП(СтруктураРеквизитов.Модель),10)) <> Врег(Лев(СокрЛП(Модель),10)) Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Различаются модели СУ и заявки.'"));
		Возврат;	
	ИначеЕсли СтруктураРеквизитов.СрокДействияСпециальныхУсловий < НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса()) Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Срок действия СУ истек.'"));
		Возврат;	
	ИначеЕсли СтруктураРеквизитов.Дилер <> Дилер Тогда
		СтандартнаяОбработка = Ложь;
		ВывестиСообщениеПол(Нстр("ru = 'Дилер СУ отличается от дилера обработки.'"));//rarus vikhle 27.05.2021 mt 17653
		Возврат;
	КонецЕсли;	
	//rarus vikhle 24.03.2021 ---
	//rarus vikhle 28.01.2021 mt 16929 ---
КонецПроцедуры

&НаКлиенте
Процедура СписокПродуктовСрокиDDSПриИзменении(Элемент)
	
	//rarus vikhle 15.06.2021 mt 17637 +++
	ТекущиеДанные = Элементы.СписокПродуктовСроки.ТекущиеДанные;
	ТекущаяСтрока = Элементы.СписокПродуктовСроки.ТекущаяСтрока; //rarus vikhle 04.08.2021 mt 17637
	
	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
	//	Если ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
		//ОбновитьГрафикПлатежей(); //rarus vikhle 01.04.2021 mt 17472
	//	Иначе	
		ОбновитьУсловияОплаты(ТекущаяСтрока, Ложь);//rarus vikhle 02.10.2020 mt 16181 //rarus vikhle 04.08.2021 mt 17637 + параметры
	//	КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 15.06.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
	
КонецПроцедуры

//rarus vikhle 25.05.2021 m 17653 +++
&НаКлиенте
Процедура ДилерПриИзменении(Элемент)
	
	Если Не Дилер.Пустая() Тогда
		МассивКомпаний = ПолучитьКомпанииПользователя();
		Если МассивКомпаний.Найти(Дилер) = Неопределено Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Дилер ""%1"" недоступен для выбора!'"), ЭтотОбъект,,,, Дилер);
			Дилер = ПредыдущееЗначениеДилера;
			Возврат;
		КонецЕсли;
		
		Если НЕ ЕстьСвязьСКонтрагентом(Дилер,Контрагент) Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Выбранный дилер ""%1"" не связан с контрагентом ""%2"" текущего СОП.'"),,,,,Дилер,Контрагент);
			Дилер = ПредыдущееЗначениеДилера;
			Возврат;
		КонецЕсли;	
				
		СУДругогоДилера = СУДругогоДилера();
    	Если СУДругогоДилера.Количество() > 0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаУдалениеСУ",ЭтотОбъект,СУДругогоДилера);	
			ТекстВопроса = СтрШаблон(Нстр("ru = 'В таблице ""Список продуктов"" имеются СУ с дилером, отличным от ""%1"". СУ будут удалены из таблицы, продолжить?'"),Дилер);
			ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса,РежимДиалогаВопрос.ДаНет);			
			Возврат;
		КонецЕсли;
	Иначе
		ПредыдущееЗначениеДилера = ПредопределенноеЗначение("Справочник.Scan_Компании.ПустаяСсылка");
	КонецЕсли;
	
	ПриИзмененииДилераНаСервере();
			
КонецПроцедуры

&НаКлиенте
Процедура ДилерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УстановитьРежимОтображенияСписок", Истина);
	
	МассивКомпаний = ПолучитьКомпанииПользователя();
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор, "Ссылка", ВидСравненияКомпоновкиДанных.ВСписке, МассивКомпаний,,Истина);
	ПараметрыФормы.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	
	ОткрытьФорму("Справочник.Scan_Компании.ФормаВыбора", ПараметрыФормы, Элемент);
			
КонецПроцедуры

&НаКлиенте
Процедура ДилерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПредыдущееЗначениеДилера = Дилер;
	ОписаниеОповещения = Новый ОписаниеОповещения("ДилерОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение);
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка,Ложь);
	// Для случая, когда установлено право 30057 "Запрет работы с неактивными дилерами"
	// возвращаем предыдущее непустое значение дилера (чтобы не отображалась пустая ссылка в истории выбора).
	Если ВыбранноеЗначение = Неопределено И НЕ ПредыдущееЗначениеДилера.Пустая() Тогда
		ВыбранноеЗначение = ПредыдущееЗначениеДилера;
	КонецЕсли;
		
КонецПроцедуры
//rarus vikhle 25.05.2021 m 17653 ---

//rarus vikhle 28.07.2021 mt 17637 закомментировал +++
//&НаКлиенте
//Процедура УсловияОплатыПослеУдаления(Элемент)
//	
//	//rarus vikhle 17.06.2021 mt 17637 +++
//	ОбновитьСтрокуПостоплаты();
//	ОбновитьГрафикПлатежей();
//	//rarus vikhle 17.06.2021 mt 17637 ---
//	
//КонецПроцедуры
//rarus vikhle 28.07.2021 mt 17637 ---

&НаКлиенте
Процедура СкидкиНаценкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	//rarus vikhle 24.09.2021 m 18286 +++
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Флаг = Истина;
	КонецЕсли;	
	//rarus vikhle 24.09.2021 m 18286 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусНовойВерсииЗаявкиПриИзменении(Элемент) //rarus vikhle 21.10.2021 m 18076 +++
	
	СтатусНовойВерсииЗаявкиПриИзмененииНаСервере();		
	
КонецПроцедуры //rarus vikhle 21.10.2021 m 18076 ---

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьДляВыбранныхПродуктов(Команда)
	
	//rarus vikhle 15.09.2021 18235 +++
	//Если НЕ СпециальныеУсловия.Пустая() Тогда
	Если ИспользоватьЗаполнениеСУ Тогда //rarus vikhe 24.09.2021 mt 18286	
		
		ПроверяемыйСтатус = ПолучитьСтарыйСтатусСоглашения(ТекущееСоглашениеОПоставке);
		
		Если НЕ ПроверяемыйСтатус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично") Тогда
			// При заполнении СУ для всех продуктов будут дополнительно перезаполнены условия оплаты из СУ
			СтруктураОтбора = Новый Структура("Флаг", Истина);
			ВыбранныеСтроки = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
		
			Если ВыбранныеСтроки.Количество() = СписокПродуктов.Количество() Тогда
				
				Если НЕ СпециальныеУсловия.Пустая() Тогда //rarus vikhe 24.09.2021 mt 18286
				
					Если МожноПрименитьСУ(Неопределено) Тогда // Проверяем, можно ли применить СУ ко всем продуктам
						ОписаниеОповещения	= Новый ОписаниеОповещения("ПослеВопросаЗаполнениеСУ", ЭтотОбъект);
						ТекстВопроса		= СтрШаблон(Нстр("ru = 'Внимание! У всех продуктов заявки на СОП будут применены СУ № %1, включая условия оплаты. Ранее указанные СУ по продуктам будут заменены на выбранные. Продолжить?'"), СпециальныеУсловия); 
						ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
						Возврат;
					Иначе
						ВывестиСообщениеПол(Нстр("ru = 'СУ № %1 нельзя применить ко всем продуктам заявки на СОП'"),,,,, СпециальныеУсловия);
						Возврат;
					КонецЕсли;
					
				Иначе	
					//rarus vikhe 24.09.2021 mt 18286 +++
					ОписаниеОповещения	= Новый ОписаниеОповещения("ПослеВопросаЗаполнениеСУ", ЭтотОбъект);
					ТекстВопроса		= СтрШаблон(Нстр("ru = 'Внимание! У всех продуктов заявки на СОП будут очищены СУ и установлены стандартные условия оплаты, продолжить?'")); 
					ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
					Возврат;	
					//rarus vikhe 24.09.2021 mt 18286 ---
				КонецЕсли;	
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЕсли;
	//rarus vikhle 15.09.2021 18235 ---
	
	ЗаполнитьДляВыбранныхПродуктовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДляВыбранныхПродуктовНаСервере(ЗаполнениеСУДляВсех = Ложь) // rarus vikhle 15.09.2021 m 18235 + ЗаполнениеСУДляВсех 
	
	//rarus vikhle 25.05.2021 mt 17780 +++
	ТипДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"Дилер.ВидДилера");
	ИмяКолонкиДатаПродажи = ?(ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный, "ДатаПродажиКлиенту", "ДатаПродажиДилеру");
	МожноИзменятьЦеныПроданныхТС = Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи");
	//rarus vikhle 25.05.2021 mt 17780 ---
	ТаблицаСкидокНаценок = ДанныеФормыВЗначение(СкидкиНаценки,Тип("ТаблицаЗначений"));
	
	//rarus vikhle 27.09.2021 m 18286 +++
	Отбор = Новый Структура("Флаг", Ложь);
	ТаблицаНеВыбранныхСтрок = ТаблицаСкидокНаценок.Скопировать(Отбор);
	
	Отбор.Флаг = Истина;
	ТаблицаВыбранныхСтрок = ТаблицаСкидокНаценок.Скопировать(Отбор);
	ТаблицаВыбранныхСтрок.Свернуть("СкидкаНаценка, Флаг", "СуммаСНДС");
	//rarus vikhle 27.09.2021 m 18286 ---
	
	//ТаблицаСкидокНаценок.Свернуть("СкидкаНаценка","СуммаСНДС");// rarus vikhle 27.09.2021 m 18286
	// rarus tenkam 23.04.2021 mantis 17648 +++
	//ТаблицаСкидокНаценок.Свернуть("СкидкаНаценка","СуммаСНДС, Комментарий");
	//rarus vikhle 13.05.2021 mt 17733
	//Если НЕ ЦенаСНДС = 0 Тогда
	Если ИспользоватьЗаполнениеЦены Тогда //rarus vikhe 24.09.2021 mt 18286
		ЗначениеСтавкиНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтавкаНДС,"Ставка");	
	КонецЕсли;	
	//rarus vikhle 13.05.2021 mt 17733
	//НужноОбновитьУсловияОплаты = Ложь;//rarus vikhle 18.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	//rarus vikhle 22.06.2021 mt 17637 +++
	ПримененийСУВТекущейЗаявке  = 0; 	
	ПримененийСУВДругихЗаявках	= 0;
	//rarus vikhle 22.06.2021 mt 17637 ---
	
	// Заполним комментарии
	//ТаблицаСкидокНаценок.Колонки.Добавить("Комментарий",Новый ОписаниеТипов("Строка")); // rarus vikhle 27.09.2021 m 18286
	ТаблицаВыбранныхСтрок.Колонки.Добавить("Комментарий",Новый ОписаниеТипов("Строка"));
	Для Каждого ТекСтрока Из СкидкиНаценки Цикл
		Если ТекСтрока.Флаг // rarus vikhle 27.09.2021 mt 18286 
			И ЗначениеЗаполнено(ТекСтрока.СкидкаНаценка) И ЗначениеЗаполнено(ТекСтрока.Комментарий) Тогда
			//НайденнаяСтрока = ТаблицаСкидокНаценок.Найти(ТекСтрока.СкидкаНаценка, "СкидкаНаценка");
			НайденнаяСтрока = ТаблицаВыбранныхСтрок.Найти(ТекСтрока.СкидкаНаценка, "СкидкаНаценка");// // rarus vikhle 27.09.2021 m 18286
			Если ЗначениеЗаполнено(НайденнаяСтрока) Тогда
				НайденнаяСтрока.Комментарий = СокрЛП(НайденнаяСтрока.Комментарий + " " + ТекСтрока.Комментарий);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	// rarus tenkam 23.04.2021 mantis 17648 ---
	
	// rarus vikhle 27.09.2021 m 18286 +++
	Для Каждого СтрокаТЗ Из ТаблицаНеВыбранныхСтрок Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаВыбранныхСтрок.Добавить(), СтрокаТЗ);
	КонецЦикла;	
	//ЗначениеВДанныеФормы(ТаблицаСкидокНаценок,СкидкиНаценки);
	ЗначениеВДанныеФормы(ТаблицаВыбранныхСтрок,СкидкиНаценки);
	// rarus vikhle 27.09.2021 m 18286 ---
	
	СтруктураОтбора = Новый Структура ("СкидкаНаценка",Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ПустаяСсылка());
	ПустыеСтроки = СкидкиНаценки.НайтиСтроки(СтруктураОтбора);
	Для Каждого Строка Из ПустыеСтроки Цикл
		Если Строка.Флаг Тогда // rarus vikhle 27.09.2021 m 18286 
			СкидкиНаценки.Удалить(Строка);	
		КонецЕсли;	
	КонецЦикла;
	
	//rarus vikhle 05.10.2020 mt 16181 +++
	СтруктураОтбора = Новый Структура("Флаг",Истина);
	ВыбранныеСтроки = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
	Если ВыбранныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	//rarus vikhle 05.10.2020 mt 16181 ---
	
	//rarus vikhle 25.02.2021 mt 17186 +++
	//Если НЕ СпециальныеУсловия.Пустая() Тогда
	Если ИспользоватьЗаполнениеСУ Тогда //rarus vikhle 24.09.2021 m 18286 
		Если НЕ СпециальныеУсловия.Пустая() Тогда //rarus vikhle 24.09.2021 m 18286
			РеквизитыСУ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СпециальныеУсловия,"СебестоимостьСНДС,КоличествоПродуктов");//rarus vikhle 22.06.2021 mt 17637
			
			//ТекущаяДата 				= НачалоДня(ТекущаяДатаСеанса()); //rarus vikhle 15.09.2021 m 18235 закомментировал	
			ТипСпецификации 			= Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"УникальностьСпецификации");
			//rarus vikhle 22.06.2021 mt 17637 +++
			СебестоимостьСУ 			= РеквизитыСУ.СебестоимостьСНДС;
			КвотаСУ						= РеквизитыСУ.КоличествоПродуктов;
			ПримененийСУВДругихЗаявках  = ПримененийСУВДругихЗаявках(СпециальныеУсловия);
			ПримененийСУВТекущейЗаявке	= ПримененийСУВТекущейЗаявке(СпециальныеУсловия);
			//rarus vikhle 22.06.2021 mt 17637 ---
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 25.02.2021 mt 17186 ---
	
	Для Каждого СтрокаСписка Из ВыбранныеСтроки Цикл //rarus vikhle 05.10.2020 mt 16181
		НужноОбновитьУсловияОплаты = Ложь; //rarus vikhle 04.08.2021 mt 17637
		Если ЗначениеЗаполнено(СтрокаСписка.Продукт) Тогда //rarus vikhle 05.10.2020 mt 16181
			//rarus vikhle 02.10.2020 mt 16181 +++
			//rarus vikhle 25.11.2020 mt 16846 +++
			//Если ИспользоватьДрайв Тогда 
			Если ИспользоватьЗаполнениеДрайв Тогда	//rarus vikhle 24.09.2021 mt 18286
				
				//rarus vikhle 24.09.2021 mt 18286 +++
				//СтрокаСписка.Драйв			= Истина;
				//СтрокаСписка.ПроцентДрайв	= ПроцентДрайв;
				
				СтрокаСписка.Драйв		  = ИспользоватьДрайв;
				СтрокаСписка.ПроцентДрайв = ?(ИспользоватьДрайв, ПроцентДрайв, 0) ;
				//rarus vikhle 24.09.2021 mt 18286 ---
				
				//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
				//rarus vikhle 18.06.2021 mt 17637 +++
				//Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
				//	НужноОбновитьУсловияОплаты = Истина;
				//Иначе
				//	ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);	
				//КонецЕсли;	
				//rarus vikhle 18.06.2021 mt 17637 ---
				//rarus vikhle 06.07.2021 17637 ---
				НужноОбновитьУсловияОплаты = Истина; //rarus vikhle 04.08.2021 mt 17637
			КонецЕсли;	
			//rarus vikhle 25.11.2020 mt 16846
			
			//rarus vikhle 02.10.2020 mt 16181 ---
			Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
				Для Каждого СтрокаСкидокНаценок Из СкидкиНаценки Цикл
					
					//rarus vikhle 24.09.2021 mt 18286 +++
					Если Не СтрокаСкидокНаценок.Флаг Тогда
						Продолжить;
					КонецЕсли;	
					//rarus vikhle 24.09.2021 mt 18286 ---
					
					Если СтрокаСкидокНаценок.СкидкаНаценка = Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ЛогистическиеЗатраты Тогда
						СтрокаСписка.ЛогистическиеЗатратыСумма = СтрокаСкидокНаценок.СуммаСНДС;
						СтрокаСписка.КомментарийЛогистическиеЗатраты = СтрокаСкидокНаценок.Комментарий;	// rarus tenkam 23.04.2021 mantis 17648 +
						НужноОбновитьУсловияОплаты = Истина;//rarus vikhle 18.06.2021 mt 17637//rarus vikhle 04.08.2021 17637 Раскомментировал
					ИначеЕсли СтрокаСкидокНаценок.СкидкаНаценка = Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.Компенсация Тогда
						СтрокаСписка.КомпенсацииСумма = СтрокаСкидокНаценок.СуммаСНДС;	
						СтрокаСписка.КомментарийКомпенсации = СтрокаСкидокНаценок.Комментарий;	// rarus tenkam 23.04.2021 mantis 17648 +
						НужноОбновитьУсловияОплаты = Истина;//rarus vikhle 18.06.2021 mt 17637
					// rarus tenkam 23.04.2021 mantis 17648 +++
					ИначеЕсли СтрокаСкидокНаценок.СкидкаНаценка = Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ИзменениеСпецификацииПоИнициативеЗавода Тогда
						СтрокаСписка.ИзменениеСпецификацииПоИнициативеЗаводаСумма = СтрокаСкидокНаценок.СуммаСНДС;
						СтрокаСписка.КомментарийИзменениеСпецификации = СтрокаСкидокНаценок.Комментарий;
						НужноОбновитьУсловияОплаты = Истина;//rarus vikhle 18.06.2021 mt 17637//rarus vikhle 04.08.2021 17637 Раскомментировал
					// rarus tenkam 23.04.2021 mantis 17648 ---
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;	
			
			//rarus vikhle 24.05.2021 mt 17780 +++ перенес до заполнения СУ
			//rarus vikhle 10.03.2021 mt 17392 +++
			//Если НЕ ЦенаСНДС = 0 Тогда
			Если ИспользоватьЗаполнениеЦены Тогда //rarus vikhle 24.09.2021 m 18286
				//rarus vikhle 25.05.2021 mt 17780 +++
				Если СтрокаСписка[ИмяКолонкиДатаПродажи] = Дата(1,1,1) ИЛИ МожноИзменятьЦеныПроданныхТС Тогда
					СтрокаСписка.ЦенаСНДС 	= ЦенаСНДС;
					СтрокаСписка.ЦенаБезНДС = 100 * СтрокаСписка.ЦенаСНДС / (100 + ЗначениеСтавкиНДС);//rarus vikhle 13.05.2021 mt 17733	
					//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
					//rarus vikhle 18.06.2021 mt 17637 +++
					//Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
					//	НужноОбновитьУсловияОплаты = Истина;
					//Иначе
					//	ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);
					//КонецЕсли;	
					//rarus vikhle 18.06.2021 mt 17637 ---
					//rarus vikhle 06.07.2021 17637 ---
					НужноОбновитьУсловияОплаты = Истина; //rarus vikhle 04.08.2021 mt 17637
				Иначе
					ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи. Изменение базовой цены недоступно.'"),,,,,СтрокаСписка.Продукт);//rarus vikhle 25.05.2021 mt 17780	
				КонецЕсли;	
				//rarus vikhle 25.05.2021 mt 17780 ---
			КонецЕсли;	
			//rarus vikhle 10.03.2021 mt 17392 ---
			
			// rarus tenkam 02.04.2021 mantis 17419 +++
			//Если НЕ ЦенаПоВалютнойОговорке = 0 Тогда
			Если ИспользоватьЗаполнениеВалОговорки Тогда //rarus vikhle 24.09.2021 m 18286
				//rarus vikhle 25.05.2021 mt 17780 +++
				Если СтрокаСписка[ИмяКолонкиДатаПродажи] = Дата(1,1,1) ИЛИ МожноИзменятьЦеныПроданныхТС Тогда
					СтрокаСписка.ЦенаПоВалютнойОговорке = ЦенаПоВалютнойОговорке;
					//СтрокаСписка.ДатаПерерасчета = ТекущаяДата();
					//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
					//rarus vikhle 18.06.2021 mt 17637 +++
					//Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
					//	НужноОбновитьУсловияОплаты = Истина;
					//Иначе
					//	ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);	
					//КонецЕсли;	
					//rarus vikhle 18.06.2021 mt 17637 ---
					//rarus vikhle 06.07.2021 17637 ---
					НужноОбновитьУсловияОплаты = Истина; //rarus vikhle 04.08.2021 mt 17637
				Иначе
					ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи. Изменение цены по валютной оговорке недоступно.'"),,,,,СтрокаСписка.Продукт);//rarus vikhle 25.05.2021 mt 17780	
				КонецЕсли;
				//rarus vikhle 25.05.2021 mt 17780 ---
			КонецЕсли;			
			// rarus tenkam 02.04.2021 mantis 17419 ---
							
			//rarus vikhle 24.05.2021 mt 17780 ---
						
			//rarus vikhle 25.02.2021 mt 17186 +++
			//Если НЕ СпециальныеУсловия.Пустая() Тогда
			Если ИспользоватьЗаполнениеСУ Тогда //rarus vikhle 24.09.2021 m 18286
			
				//rarus vikhle 15.09.2021 m 18235 +++
				Если НЕ ЗаполнениеСУДляВсех 
					И НЕ СпециальныеУсловия.Пустая() Тогда //rarus vikhle 24.09.2021 m 18286
					ЗапретНаИзменениеСУ = НЕ МожноПрименитьСУ(СтрокаСписка, ПримененийСУВДругихЗаявках, ПримененийСУВТекущейЗаявке, КвотаСУ); //rarus vikhle 15.09.2021 mt 18235
				Иначе
					// Проверка на возможность применения уже проведена или происходит очистка СУ для всех
					ЗапретНаИзменениеСУ = Ложь;
				КонецЕсли;	
				//rarus vikhle 15.09.2021 m 18235 --- 
				
				//rarus vikhle 15.09.2021 m 18235 +++ Закомментировал, перенес в метод "МожноПрименитьСУ" 
				//ЗапретНаИзменениеСУ = Ложь;//rarus vikhle 24.05.2021 mt 17780
				////rarus kabany 16.04.2021 17533 +++
				//Если НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда //rarus kabany 12.04.2021 17533 +
				//	Если Дилер.ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда	
				//		Если СтрокаСписка.ДатаПродажиКлиенту <> Дата(1,1,1) Тогда
				//			ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи. Изменение СУ недоступно.';
				//			|en = 'Product %1 has a sale date. Changing the SU is not available.'"),,,,,СтрокаСписка.Продукт);
				//			//rarus vikhle 24.05.2021 mt 17780 +++
				//			//Продолжить;
				//			ЗапретНаИзменениеСУ = Истина; 
				//			//rarus vikhle 24.05.2021 mt 17780 ---
				//		КонецЕсли;		
				//	Иначе
				//		Если СтрокаСписка.ДатаПродажиДилеру <> Дата(1,1,1) Тогда
				//			ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи. Изменение СУ недоступно.';
				//			|en = 'Product %1 has a sale date. Changing the SU is not available."),,,,,СтрокаСписка.Продукт);
				//			//rarus vikhle 24.05.2021 mt 17780 +++
				//			//Продолжить; 
				//			ЗапретНаИзменениеСУ = Истина;
				//			//rarus vikhle 24.05.2021 mt 17780 ---
				//		КонецЕсли;				
				//	КонецЕсли;
				//КонецЕсли;
				////rarus kabany 16.04.2021 17533 ---
				//
				////rarus vikhle 02.08.2021 17637 +++ Раскомментировал
				////rarus vikhle 10.06.2021 mt 17637 +++
				//Если Не ЗапретНаИзменениеСУ Тогда
				//	Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия")
				//		И НЕ ПродуктУказанВСУ(СпециальныеУсловия,СтрокаСписка.Продукт) Тогда
				//		ЗапретНаИзменениеСУ = Истина;
				//		ВывестиСообщениеПол(Нстр("ru = 'Продукт %1 не указан в СУ. СУ не были применены.'"),,,,,СтрокаСписка.Продукт);
				//	КонецЕсли;	
				//КонецЕсли;	
				////rarus vikhle 10.06.2021 mt 17637 ---
				////rarus vikhle 02.08.2021 17637 ---
				//
				////rarus vikhle 22.06.2021 mt 17637 +++
				//Если Не ЗапретНаИзменениеСУ Тогда
				//	//Проверка на превышение квоты в случае указания СУ
				//	ОбщееКоличествоПримененийСУ = ПримененийСУВТекущейЗаявке + ПримененийСУВДругихЗаявках + СтрокаСписка.Количество;  
				//	Если ОбщееКоличествоПримененийСУ > РеквизитыСУ.КоличествоПродуктов Тогда
				//		ВывестиСообщениеПол(Нстр("ru = 'По выбранным Специальным условиям все применения исчерпаны. Невозможно применить к продукту %1.'"),,,,,СтрокаСписка.Продукт);	
				//		ЗапретНаИзменениеСУ = Истина;
				//	Иначе
				//		ПримененийСУВТекущейЗаявке = ПримененийСУВТекущейЗаявке + СтрокаСписка.Количество;	
				//	КонецЕсли;	
				//КонецЕсли;	
				////rarus vikhle 22.06.2021 mt 17637 ---
				//rarus vikhle 15.09.2021 m 18235 --- закомментировал
				
				
				//rarus kabany 12.04.2021 17533 +++
				//Если СтрокаСписка.ДатаБрони = ТекущаяДата Тогда
				//	ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 запланирована отгрузка на сегодня. Изменение СУ недоступно.'"),,,,,СтрокаСписка.Продукт);
				//	Продолжить;
				//КонецЕсли;	
				//Если СтрокаСписка.ДатаБрони = ТекущаяДата + 60 * 60 * 24 Тогда
				//	ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 запланирована отгрузка на завтра. Изменение СУ недоступно.'"),,,,,СтрокаСписка.Продукт);
				//	Продолжить;
				//КонецЕсли;	
				//rarus kabany 12.04.2021 17533 ---
				
				//rarus vikhle 18.03.2021 mt 17186 +++
				//Если НЕ ТипСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда 
				//	Если НЕ СпецификацииСовпадают(СтрокаСписка.Продукт,СпециальныеУсловия,ТекущееСоглашениеОПоставке) Тогда
				//		ВывестиСообщениеПол(Нстр("ru = 'Отличаются спецификации SPORT. Изменение СУ недоступно.'"),,,,,СтрокаСписка.Продукт);
				//		Продолжить;
				//	КонецЕсли;
				//КонецЕсли;	
				//rarus vikhle 18.03.2021 mt 17186 ---
				Если НЕ ЗапретНаИзменениеСУ Тогда
					//rarus vikhle 15.09.2021 m 18235 +++ закомментировал, проверяется выше
					//Если  СтрокаСписка[ИмяКолонкиДатаПродажи] = Дата(1,1,1) ИЛИ МожноИзменятьЦеныПроданныхТС Тогда //rarus vikhle 25.05.2021 mt 17780
					//rarus vikhle 15.09.2021 m 18235 ---						
					
					СтрокаСписка.СпециальныеУсловия = СпециальныеУсловия;
					
					//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
					//rarus vikhle 18.06.2021 mt 17637 +++
					//Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
					//	ОбработатьУсловияОплатыСУ(СтрокаСписка.ПолучитьИдентификатор());
					//	НужноОбновитьУсловияОплаты = Истина;
					//Иначе
					//	ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект);	
					//КонецЕсли;	
					//rarus vikhle 06.07.2021 17637 ---
					//rarus vikhle 18.06.2021 mt 17637 ---
					//rarus vikhle 24.05.2021 mt 17780 +++
					НужноОбновитьУсловияОплаты = Истина; //rarus vikhle 04.08.2021 mt 17637
					
					Если СтрокаСписка.ЦенаПоВалютнойОговорке = 0 
						И Не СпециальныеУсловия.Пустая() Тогда //rarus vikhle 27.09.2021 mt 18286
						СтрокаСписка.Себестоимость = СебестоимостьСУ;
						Если Элементы.Себестоимость.Видимость Тогда
							ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 была заполнена себестоимость из СУ.'"),,,,,СтрокаСписка.Продукт);
						КонецЕсли;	
					КонецЕсли;
					//rarus vikhle 15.09.2021 m 18235 +++ закомменировал +++	
					//Иначе
					//	ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи. Изменение СУ недоступно.'"),,,,,СтрокаСписка.Продукт);//rarus vikhle 25.05.2021 mt 17780
					//КонецЕсли;
					//rarus vikhle 15.09.2021 m 18235 +++ закомменировал ---
					
				КонецЕсли;	
			КонецЕсли;
			
			//rarus vikhle 24.05.2021 mt 17780 +++
			//Если НЕ Себестоимость = 0 Тогда
			Если ИспользоватьЗаполнениеСебестоимости Тогда //rarus vikhle 24.09.2021 m 18286
				Если СтрокаСписка[ИмяКолонкиДатаПродажи] = Дата(1,1,1) ИЛИ МожноИзменятьЦеныПроданныхТС Тогда //rarus vikhle 25.05.2021 mt 17780
					Если НЕ (СтрокаСписка.ЦенаПоВалютнойОговорке = 0 И НЕ СтрокаСписка.СпециальныеУсловия.Пустая()) Тогда
						СтрокаСписка.Себестоимость = Себестоимость; 	
					Иначе
						ИндексСтроки = СписокПродуктов.Индекс(СтрокаСписка);
						ПутьКПолюСс = "СписокПродуктов[" + ИндексСтроки + "]" + ".Себестоимость";
						ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 не была изменена с/с, т.к. указаны СУ и не заполнена цена по валютной оговорке.'"),,ПутьКПолюСс,,,СтрокаСписка.Продукт);
					КонецЕсли;
				Иначе
					ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи. Изменение с/с недоступно.'"),,,,,СтрокаСписка.Продукт);//rarus vikhle 25.05.2021 mt 17780
				КонецЕсли;	
			КонецЕсли;
			//rarus vikhle 25.02.2021 mt 17186 ---
		КонецЕсли;		
		//rarus vikhle 04.08.2021 mt 17637 +++
	    Если НужноОбновитьУсловияОплаты Тогда                                  
			Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
				И НЕ ЗаполнениеСУДляВсех Тогда //rarus vikhle 15.09.2021 mt 18235 при заполнении СУ для всех условия будут полностью перезаполнены 
				ОбновитьУсловияОплаты(СтрокаСписка.ПолучитьИдентификатор());
			Иначе
				ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект, СтрокаСписка.ПолучитьИдентификатор());	
			КонецЕсли;
		КонецЕсли;	
		//rarus vikhle 04.08.2021 mt 17637 ---	
	КонецЦикла;
	
	//rarus vikhle 15.09.2021 mt 18235 +++
	Если ЗаполнениеСУДляВсех Тогда
		//rarus vikhle 27.09.2021 m 18286 +++
		Если СпециальныеУсловия.Пустая() Тогда // СУ очищены у всех продуктов, восстанавливаем стандартные условия
			ЗаполнитьСтандартныеУсловияОплаты();
		Иначе
			//СУ заполнены у всех продуктов, меняем условия оплаты заявки на условия из СУ
			СгруппированныеУсловияОплаты.Загрузить(СпециальныеУсловия.УсловияОплаты.Выгрузить());
			ДобавитьУсловияОплаты(, Истина); // Полностью перезаполняем условия и обновляем итоговые цены у продуктов
			ПроверитьСовпадениеУсловийОплаты();	
		КонецЕсли;	
		//rarus vikhle 27.09.2021 m 18286 ---
	КонецЕсли;	
	//rarus vikhle 15.09.2021 mt 18235 ---
	
	//rarus vikhle 18.06.2021 mt 17637 +++
	//Если НужноОбновитьУсловияОплаты Тогда //rarus vikhle 06.07.2021 17637 Откат, закомментировал
		//ОбновитьУсловияОплаты();//rarus vikhle 06.10.2020 mt 16181 //rarus vikhle 04.08.2021 mt 17637 Закомментировал
	//КонецЕсли; //rarus vikhle 06.07.2021 17637 Откат, закомментировал	
	//rarus vikhle 18.06.2021 mt 17637 ---
		
КонецПроцедуры	

&НаКлиенте
Процедура ВыполнитьЗаполнение(Команда)
	
	ОчиститьСообщения(); //rarus vikhle 29.10.2020 mt 16181 
	
	//rarus vikhle 04.03.2022 m 18956 +++
	Если Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиент.ТекущийПользователь(), "ПользовательСотрудник") Тогда
		ЕстьУдаленныеПродукты = ЕстьУдаленныеПродукты();
		Если ЕстьУдаленныеПродукты Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаРезерва", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = 'Перенести удаленные продукты в резерв?'"), РежимДиалогаВопрос.ДаНетОтмена);
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	//rarus vikhle 04.03.2022 m 18956 ---
	
	//rarus agar 25.12.2020 17006 ++
	КорректировкиЗаявокНаОтгрузку = КорректировкиЗаявокНаОтгрузкуПоУдаляемымПродуктам();
	Если КорректировкиЗаявокНаОтгрузку <> Неопределено Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("АдресКорректировокЗаявокНаОтгрузку", КорректировкиЗаявокНаОтгрузку.АдресКорректировок);
		//ДополнительныеПараметры.Вставить("ТекстКорректировок", КорректировкиЗаявокНаОтгрузку.ТекстКорректировок);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьЗаполнениеНаСервереЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = '"+КорректировкиЗаявокНаОтгрузку.ТекстКорректировок+"'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		//ВыполнитьЗаполнениеНаСервере();
		ВыполнитьЗаполнениеНаСервереПродолжение(); //rarus vikhle 27.10.2021 m 18426
	КонецЕсли;
	//rarus agar 25.12.2020 17006 --
	
КонецПроцедуры

//rarus agar 25.12.2020 17006 ++
&НаКлиенте
Процедура ВыполнитьЗаполнениеНаСервереЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		//ВыполнитьЗаполнениеНаСервере(ДополнительныеПараметры);
		ВыполнитьЗаполнениеНаСервереПродолжение(ДополнительныеПараметры); //rarus vikhle 27.10.2021 m 18426
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 25.12.2020 17006 --

&НаКлиенте
Процедура ВыполнитьЗаполнениеНаСервереПродолжение(ДополнительныеПараметры = Неопределено) //rarus vikhle 27.10.2021 m 18426 +++
	
	НеобходимоОбновлениеDDS = Ложь;
	
	ВыполнитьЗаполнениеНаСервере(НеобходимоОбновлениеDDS, ДополнительныеПараметры);	
	
	// Обновление данных по DDS в предыдущих неактуальных заявках 
	Если НеобходимоОбновлениеDDS И НЕ НовоеСоглашениеОПоставке.Пустая() Тогда
		Scan_ВспомогательныеФункцииКлиент.НачатьФоновоеОбновлениеDDS(НовоеСоглашениеОПоставке);
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 27.10.2021 m 18426 ---

//rarus vikhle 05.11.2020 mt 16181 +++
&НаКлиенте
Процедура Восстановить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждения",ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения,Нстр("ru = 'Данные на закладках будут перезаполнены данными из текущей заявки, продолжить?'"),РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры
//rarus vikhle 05.11.2020 mt 16181 ---

&НаСервере
//rarus agar 25.12.2020 17006 ++
//Процедура ВыполнитьЗаполнениеНаСервере()
Процедура ВыполнитьЗаполнениеНаСервере(НеобходимоОбновлениеDDS, ДополнительныеПараметры = Неопределено) //rarus vikhle 27.10.2021 m 18426 + НеобходимоФоновоеОбновлениеDDS
//rarus agar 25.12.2020 17006 --

	ИзмененыУсловияОплаты	  	= Ложь;
	ИзмененСостав			  	= Ложь;
	ИзмененыЦены			  	= Ложь;
	НеобходимоСоздатьСОПВ1БД  	= Ложь; // rarus tenkam 14.10.2020 mantis 16181 +
	ИзмененыСклады			  	= Ложь; //rarus vikhle 10.11.2020 mt 16181
	ИзмененыСроки			  	= Ложь; //rarus vikhle 01.04.2021 mt 17472
	ИзмененыОбщиеДанныеЗаявки 	= Ложь; //rarus vikhle 24.05.2021 mt 17653
	
	НеобходимоРазделениеЗаявки	= ПродуктыКПереносу.Количество() > 0; //rarus vikhle 06.10.2021 mt 18076
	
	//rarus vikhle 21.10.2021 m 18076 +++
	Если СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП
		И ТекущийДоговор.Пустая() Тогда
		ПереводВСтатусНачатоОформлениеСОП = Истина;
	ИначеЕсли СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП
		И НЕ ТекущийДоговор.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'У текущей заявки заполнен договор, нельзя создать новую версии заявки и СОП. Очистите поле ""Статус новой заявки на СОП"".'"));
		Возврат;
	Иначе
		ПереводВСтатусНачатоОформлениеСОП = Ложь;	
	КонецЕсли; 	
	//rarus vikhle 21.10.2021 m 18076 ---
	
	СтарыйСтатус = ПолучитьСтарыйСтатусСоглашения(ТекущееСоглашениеОПоставке);//rarus vikhle 07.10.2021 mt 18076
	
	//rarus vikhle 15.01.2021 mt 17055 +++
	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
		Если СтрокаСписка.Продукт = Неопределено 
			ИЛИ СтрокаСписка.Продукт = Справочники.Scan_ДрафтыПродуктов.ПустаяСсылка()
			ИЛИ СтрокаСписка.Продукт = Справочники.Scan_Изделия.ПустаяСсылка() Тогда
			ВывестиСообщениеПол(Нстр("ru = 'В таблице продуктов имеются строки с незаполненным продуктом.'"));	
			Возврат;	
		КонецЕсли;	
		
		// rarus tenkam 26.04.2021 mantis 17468 +++
		Если (ЗначениеЗаполнено(СтрокаСписка.КомментарийЛогистическиеЗатраты) И НЕ ЗначениеЗаполнено(СтрокаСписка.ЛогистическиеЗатратыСумма)) ИЛИ
			(ЗначениеЗаполнено(СтрокаСписка.КомментарийКомпенсации) И НЕ ЗначениеЗаполнено(СтрокаСписка.КомпенсацииСумма)) ИЛИ
			(ЗначениеЗаполнено(СтрокаСписка.КомментарийИзменениеСпецификации) И НЕ ЗначениеЗаполнено(СтрокаСписка.ИзменениеСпецификацииПоИнициативеЗаводаСумма)) Тогда
			ВывестиСообщениеПол(Нстр("ru = 'В таблице продуктов имеются строки с заполненными комментариями при отсутствии суммы составляющих расчета.'"));	
			Возврат;	
		КонецЕсли;	
		// rarus tenkam 26.04.2021 mantis 17468 ---
	КонецЦикла;
	//rarus vikhle 15.01.2021 mt 17055 ---
	
	//rarus vikhle 05.10.2021 mt 18076 +++
	Если НеобходимоРазделениеЗаявки Тогда
		Для Каждого СтрокаСписка Из ПродуктыКПереносу Цикл
			Если (ЗначениеЗаполнено(СтрокаСписка.КомментарийЛогистическиеЗатраты) И НЕ ЗначениеЗаполнено(СтрокаСписка.ЛогистическиеЗатратыСумма)) 
				ИЛИ (ЗначениеЗаполнено(СтрокаСписка.КомментарийКомпенсации) И НЕ ЗначениеЗаполнено(СтрокаСписка.КомпенсацииСумма)) 
				ИЛИ (ЗначениеЗаполнено(СтрокаСписка.КомментарийИзменениеСпецификации) И НЕ ЗначениеЗаполнено(СтрокаСписка.ИзменениеСпецификацииПоИнициативеЗаводаСумма)) Тогда
				ВывестиСообщениеПол(Нстр("ru = 'В таблице ""Продукты к переносу"" имеются строки с заполненными комментариями при отсутствии суммы составляющих расчета.  Необходимо вернуть продукты в таблицу ""Продукты текущей заявки"" и скорректировать данные'"));	
				Возврат;	
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	//rarus vikhle 05.10.2021 mt 18076 ---
	
	//rarus vikhle 31.12.2020 mt 17056 +++
	Если СписокПродуктов.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Таблица продуктов пустая, создание новой версии заявки невозможно.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 31.12.2020 mt 17056 ---
	
	//rarus vikhle 24.05.2021 mt 17653 +++
	Если Дилер.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнен дилер, создание новой версии заявки невозможно'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 24.05.2021 mt 17653 ---
	
	//rarus vikhle 29.09.2021 mt 18076 +++
	// Проверим не превышены ли лимиты по количеству и сумме
	//rarus vikhle 17.01.2022 m 18269 +++
	ЛимитПоКоличеству	= Scan_ПраваИНастройки.Scan_Право("ЛимитКоличестваПродуктовВЗаявкеНаСОП");
	ЛимитПоСумме		= Scan_ПраваИНастройки.Scan_Право("ЛимитСуммыПродуктовВЗаявкеНаСОП");
	//rarus vikhle 17.01.2022 m 18269 ---
	
	Если НЕ СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено
		ИЛИ ПереводВСтатусНачатоОформлениеСОП Тогда //rarus vikhle 21.10.2021 m 18076
		
		Если Справочники.Scan_СоглашенияОПоставке.НужноПроверятьЛимиты(Дилер, ТекущийДоговор) Тогда //rarus vikhle 21.10.2021 m 18076	
				
			//rarus vikhle 17.01.2022 m 18269 +++
			//ЛимитПоКоличеству	= Scan_ПраваИНастройки.Scan_Право("ЛимитКоличестваПродуктовВЗаявкеНаСОП");
			//ЛимитПоСумме		= Scan_ПраваИНастройки.Scan_Право("ЛимитСуммыПродуктовВЗаявкеНаСОП"); 
			//rarus vikhle 17.01.2022 m 18269 ---
			
			Если СписокПродуктов.Итог("Количество") > ЛимитПоКоличеству Тогда
				ВывестиСообщениеПол(Нстр("ru = 'Превышен лимит по количеству продуктов в заявке. Измените текущую заявку или разделите заявку, выбрав тип корректировки ""Разделение заявки"".'"));
				Возврат;
			ИначеЕсли СписокПродуктов.Итог("ИтоговаяСумма") > ЛимитПоСумме Тогда
				ВывестиСообщениеПол(Нстр("ru = 'Превышен лимит по общей сумме заявки. Измените текущую заявку или разделите заявку, выбрав тип корректировки ""Разделение заявки"".'"));
				Возврат;
			КонецЕсли;
			
		КонецЕсли; //rarus vikhle 21.10.2021 m 18076	
				
	КонецЕсли;	
	
	Если НеобходимоРазделениеЗаявки Тогда
		// Проверим, не будут ли превышены лимиты в новых заявках 
		ИтогиПоЗаявкам = РеквизитФормыВЗначение("ПродуктыКПереносу");
		ИтогиПоЗаявкам.Свернуть("Заявка", "Количество, ИтоговаяСумма");
		ИтогиПоЗаявкам.Сортировать("Заявка");
		Если НЕ СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Одобрено
			ИЛИ ПереводВСтатусНачатоОформлениеСОП Тогда //rarus vikhle 21.10.2021 m 18076
			
			Для Каждого Строка Из ИтогиПоЗаявкам Цикл
				
				Если Строка.Количество > ЛимитПоКоличеству Тогда
					ВывестиСообщениеПол(Нстр("ru = 'Превышен лимит по количеству продуктов в заявке № %1. Скорректируйте значение в колонке ""Заявка"" вручную или перезаполните таблицу автоматически.'"),,,,, Строка.Заявка);
					Возврат;
				КонецЕсли;
				
				Если Строка.ИтоговаяСумма > ЛимитПоСумме Тогда
					ВывестиСообщениеПол(Нстр("ru = 'Превышен лимит по общей сумме в заявке № %1. Скорректируйте значение в колонке ""Заявка"" вручную или перезаполните таблицу автоматически.'"),,,,, Строка.Заявка);
					Возврат;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;	
		
	КонецЕсли;
	//rarus vikhle 29.09.2021 mt 18076 ---
	
	//rarus vikhle 21.10.2021 m 18076 +++
	Если ПереводВСтатусНачатоОформлениеСОП Тогда
		
		КонтрагентДилера = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Дилер);
		
		Если НЕ ЗначениеЗаполнено(КонтрагентДилера) Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Не задан Контрагент дилера. Создание договора невозможно.'"));	
			Возврат;
		ИначеЕсли Справочники.Scan_СоглашенияОПоставке.СоглашениеСодержитДрафты(СписокПродуктов) Тогда
			ВывестиСообщениеПол(Нстр("ru = 'В таблице продуктов присутствуют драфты продуктов, договор не может быть создан. Скорректируйте таблицу или очистите поле ""Статус новой версии заявки""'")); 
			Возврат;
		КонецЕсли;
		
		//rarus vikhle 10.02.2022 m 18875 +++
		СтруктураОтбора = Новый Структура("Себестоимость", 0);
		СтрокиБезСС = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
		
		Если СтрокиБезСС.Количество() > 0 Тогда
			Отказ = Истина;
			ВывестиСообщениеПол(Нстр("ru = 'В тч ""Список продуктов"" есть продукты с незаполненной себестоимостью'"));
			Возврат;
		КонецЕсли;
		//rarus vikhle 10.02.2022 m 18875 ---
		
	КонецЕсли;
		
	//rarus vikhle 21.10.2021 m 18076 ---
	
	ПроверитьМодифицированностьДанных(ИзмененыУсловияОплаты,ИзмененСостав,ИзмененыЦены,ИзмененыСклады,ИзмененыСроки,ИзмененыОбщиеДанныеЗаявки); //rarus vikhle 01.04.2021 mt 17472 + измененысроки
		
	Если НЕ ИзмененыУсловияОплаты 
		И НЕ ИзмененСостав 
		И НЕ ИзмененыЦены 
		И НЕ ИзмененыСклады 
		И НЕ ИзмененыСроки //rarus vikhle 01.04.2021 mt 17472 + измененысроки 
		И НЕ ИзмененыОбщиеДанныеЗаявки //rarus vikhle 26.05.2021 m 17653 
		И НЕ НеобходимоРазделениеЗаявки Тогда //rarus vikhle 06.10.2021 mt 18076
		Сообщить(Нстр("ru = 'Данные обработки идентичны данным заявки.'")); //rarus vikhle 05.11.2020 mt 16723 
		Возврат;
	ИначеЕсли НЕ ИзмененыУсловияОплаты 
		И НЕ ИзмененСостав 
		И НЕ ИзмененыЦены 
		И НЕ ИзмененыСроки 
		И НЕ ИзмененыОбщиеДанныеЗаявки //rarus vikhle 26.05.2021 m 17653
		И НЕ НеобходимоРазделениеЗаявки //rarus vikhle 06.10.2021 mt 18076  
		И ИзмененыСклады Тогда //rarus vikhle 01.04.2021 mt 17472 + измененысроки
		//При изменении только запрашиваемого места передачи обновляем текущую заявку
		Отказ = Ложь; //rarus vikhle 22.01.2021 mt 16981
		ТекущееСоглашениеОбъект = ТекущееСоглашениеОПоставке.ПолучитьОбъект();
		ТекущееСоглашениеОбъект.СписокПродуктов.Загрузить(РеквизитФормыВЗначение("СписокПродуктов",Тип("ТаблицаЗначений")));
		Попытка
			ТекущееСоглашениеОбъект.Записать();
			//ВывестиСообщениеПол(Нстр("ru = 'В текущей заявке обновлены склады отгрузки.'"));
			ВывестиСообщениеПол(Нстр("ru = 'В текущей заявке обновлены запрашиваемые места передачи.'")); //rarus vikhle 20.01.2021 mt 16981
		Исключение
			Отказ = Истина;
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи текущей заявки.'"));
			ЗаписьЖурналаРегистрации(Нстр("ru = 'Корректировка текущей заявки'"),
									УровеньЖурналаРегистрации.Ошибка,,,
									Нстр("ru = 'Произошла ошибка при записи текущей заявки.'") +  ОписаниеОшибки());	
		КонецПопытки;	
		
		//rarus vikhle 22.01.2021 mt 16981 +++
		//Обновим при необходимости реквизиты складов в заявках
		Если НЕ Отказ Тогда
			ОбработатьПродуктыТекущейВерсии(ТекущееСоглашениеОПоставке); //rarus vikhle 07.10.2021 mt 18076 + параметр
		КонецЕсли;	
		//rarus vikhle 22.01.2021 mt 16981 ---
		
		Элементы.Выполнить.Доступность = Ложь;
		Возврат;
	//rarus vikhle 10.11.2020 mt 16181 ---	
	КонецЕсли;	
	
	
	//ПроверитьСоответствиеУсловийОплаты(ИзмененыУсловияОплаты); //rarus vikhle 10.06.2021 mt 17637 //rarus vikhle 03.08.2021 17637 Закомментировал
	
	//СтарыйСтатус = ПолучитьСтарыйСтатусСоглашения(ТекущееСоглашениеОПоставке); //rarus vikhle 15.09.2021 m 18235 +++ добавил параметр //rarus vikhle 07.10.2021 mt 18076 перенес выше
	//Создание доп. соглашения
	НачатьТранзакцию();
	Попытка
		ДопСоглашениеОПоставке = Справочники.Scan_СоглашенияОПоставке.СоздатьЭлемент();
		//rarus vikhle 14.12.2020 mt 16977 +++ перенес до заполнения
		
		//rarus vikhle 02.02.2021 mt 17179 +++
		ТЗУсловияОплаты = РеквизитФормыВЗначение("УсловияОплаты");
		//rarus vikhle 15.06.2021 mt 17637 +++
		СуммаУсловийОплаты = Окр(ТЗУсловияОплаты.Итог("Сумма")); //rarus vikhle 06.07.2021 17637 Откат, раскомментировал //rarus vikhle 12.07.2021 18012 добавил округление
		//rarus vikhle 07.07.2021 17637 +++ Откат, закомментировал
		//СтрокаПостоплаты	= Неопределено;
		//СуммаУсловийОплаты	= 0;
		//ОбщийПроцентУсловий = 0;
		//СтруктураОтбора		= Новый Структура("Продукт",Справочники.Scan_Изделия.ПустаяСсылка());
		//СтрокиБезПродукта	= УсловияОплаты.НайтиСтроки(СтруктураОтбора);
		//rarus vikhle 07.07.2021 17637 ---
		
		//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
		//Для Каждого СтрокаТаблицы Из СтрокиБезПродукта Цикл
		//	Если СтрокаТаблицы.ВидОплаты = Перечисления.Scan_ВидыОплат.Постоплата Тогда
		//		СтрокаПостоплаты = СтрокаТаблицы;
		//	КонецЕсли;	
		//	СуммаУсловийОплаты  = СуммаУсловийОплаты + СтрокаТаблицы.Сумма; 
		//	ОбщийПроцентУсловий = ОбщийПроцентУсловий + СтрокаТаблицы.ПроцентОплаты;
		//КонецЦикла;
		//rarus vikhle 15.06.2021 mt 17637 ---
		//rarus vikhle 06.07.2021 17637 ---
		
		//rarus vikhle 28.07.2021 mt 17637 закомментировал +++
		//Если СуммаУсловийОплаты < ОбщаяСуммаТекущегоСоглашения Тогда //rarus vikhle 12.07.2021 18012 изменил на "<"
		//	СтрокаПостоплаты = ТЗУсловияОплаты.Найти(Перечисления.Scan_ВидыОплат.Постоплата,"ВидОплаты"); //rarus vikhle 06.07.2021 17637 Откат, раскомментировал
		//	Если СтрокаПостоплаты = Неопределено Тогда
		//		СтрокаПостоплаты 					= ТЗУсловияОплаты.Добавить();
		//		СтрокаПостоплаты.ВидОплаты			= Перечисления.Scan_ВидыОплат.Постоплата;
		//		СтрокаПостоплаты.Сумма 				= ОбщаяСуммаТекущегоСоглашения - СуммаУсловийОплаты;
		//		//СтрокаПостоплаты.ПроцентОплаты		= 100 - ОбщийПроцентУсловий;//rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
		//		СтрокаПостоплаты.ПроцентОплаты		= 100 - УсловияОплаты.Итог("ПроцентОплаты");//rarus vikhle 06.07.2021 17637 Откат, добавил как было
		//		СтрокаПостоплаты.СрокОплатыАванса 	= 30;
		//		СтрокаПостоплаты.РасчетДатыОплаты	= ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
		//		СтрокаПостоплаты.КрайняяДатаОплаты 	= Дата(1,1,1);
		//	Иначе
		//		СтрокаПостоплаты.Сумма 				= ОбщаяСуммаТекущегоСоглашения - СуммаУсловийОплаты; 	
		//		СтрокаПостоплаты.ПроцентОплаты		= СтрокаПостоплаты.Сумма / ОбщаяСуммаТекущегоСоглашения * 100; 
		//	КонецЕсли;	
		//	ЗначениеВРеквизитФормы(ТЗУсловияОплаты,"УсловияОплаты");
		//	ОбновитьГрафикПлатежей();
		//КонецЕсли;	
		//rarus vikhle 02.02.2021 mt 17179 ---
		//rarus vikhle 28.07.2021 mt 17637 ---
		
		// rarus tenkam 22.03.2021 mantis 17503 +++
		//// Проверим, не пустая ли сумма
		//Если ОбщаяСуммаТекущегоСоглашения <= 0 Тогда
		//	Сообщить(Нстр("ru = 'Не заполнены цены продажи. Проверьте корректность данных.'"));
		//	Возврат; 			
		//КонецЕсли;
		
		// Проверим, нет ли в условиях оплаты пустых сумм
		Для Каждого ТекСтрокаУО Из УсловияОплаты Цикл
			Если ТекСтрокаУО.Сумма = 0 Тогда
				Сообщить(Нстр("ru = 'В условиях оплаты не заполнена сумма оплаты. Проверьте корректность данных.'"));
				Возврат;
			КонецЕсли;  		
		КонецЦикла;
		
		// Rarus tenkam 12.11.2021 mantis 18486 +++
		ЛимитИзмененияСпецификацииПоИнициативеЗавода = -Scan_ПраваИНастройки.Scan_Право("ЛимитСоставляющейИзменениеСпецификацииПоИнициативеЗавода");
		ДатаНачалаДействияЛимита = Scan_ПраваИНастройки.Scan_Право("ДатаНачалаДействияЛимитаНаИзменениеСпецификацииПоИнициативеЗавода");
		ДатаПервойЗаявки = ПолучитьДатуСозданияПервойЗаявкиНаСОП(ТекущееСоглашениеОПоставке);
		// Rarus tenkam 12.11.2021 mantis 18486 ---
			
		// Проверим, не пустые ли цены продажи по продуктам
		Для Каждого ТекСтрокаСП Из СписокПродуктов Цикл
			//Если ТекСтрокаСП.ИтоговаяСумма = 0 Тогда
			Если ТекСтрокаСП.ЦенаСНДС = 0 И НЕ ЗначениеЗаполнено(ТекСтрокаСП.СпециальныеУсловия) И
				ТекСтрокаСП.ЛогистическиеЗатратыСумма = 0 И ТекСтрокаСП.КомпенсацииСумма = 0 И
				ТекСтрокаСП.ЦенаПоВалютнойОговорке = 0 И 	// rarus tenkam 06.04.2021 mantis 17419 +
				ТекСтрокаСП.ИзменениеСпецификацииПоИнициативеЗаводаСумма = 0 Тогда	// rarus tenkam 23.04.2021 mantis 17648 + 
				Сообщить(Нстр("ru = 'Не заполнены цены продажи продуктов. Проверьте корректность данных.'"));
				Возврат; 		
			КонецЕсли;
			
			// Rarus tenkam 19.11.2021 mantis 18486 +++
			Если ЗначениеЗаполнено(ДатаНачалаДействияЛимита) И 
				ДатаНачалаДействияЛимита <= ДатаПервойЗаявки И
				ТекСтрокаСП.ИзменениеСпецификацииПоИнициативеЗаводаСумма < 0 И 
				ТекСтрокаСП.ИзменениеСпецификацииПоИнициативеЗаводаСумма < ЛимитИзмененияСпецификацииПоИнициативеЗавода Тогда
				
				ВывестиСообщениеПол(Нстр("ru = 'Сумма составляющей по изменению спецификации по инициативе завода не может превышать установленного лимита:%1.'"),,,,,ЛимитИзмененияСпецификацииПоИнициативеЗавода);
				Возврат;			
			КонецЕсли;
			// Rarus tenkam 19.11.2021 mantis 18486 ---
		КонецЦикла;
		// rarus tenkam 22.03.2021 mantis 17503 ---   		
		
		//rarus vikhle 05.10.2021 mt 18076 +++
		Если НеобходимоРазделениеЗаявки Тогда
			
			Для Каждого ТекСтрокаСП Из ПродуктыКПереносу Цикл
				Если ТекСтрокаСП.ЦенаСНДС = 0 И НЕ ЗначениеЗаполнено(ТекСтрокаСП.СпециальныеУсловия)
					И ТекСтрокаСП.ЛогистическиеЗатратыСумма = 0 И ТекСтрокаСП.КомпенсацииСумма = 0 
					И ТекСтрокаСП.ЦенаПоВалютнойОговорке = 0 
					И ТекСтрокаСП.ИзменениеСпецификацииПоИнициативеЗаводаСумма = 0 Тогда 
					ВывестиСообщениеПол(Нстр("ru = 'Не заполнены цены продажи продуктов в таблице ""Продукты к переносу"". Необходимо вернуть продукты в таблицу ""Продукты текущей заявки"" и скорректировать данные.'"));
					ОтменитьТранзакцию(); //rarus vikhle 15.10.2021 АПК
					Возврат; 		
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;	
		//rarus vikhle 05.10.2021 mt 18076 ---
		
		ДопСоглашениеОПоставке.УсловияОплаты.Загрузить(РеквизитФормыВЗначение("УсловияОплаты",Тип("ТаблицаЗначений")));
		ДопСоглашениеОПоставке.СписокПродуктов.Загрузить(РеквизитФормыВЗначение("СписокПродуктов",Тип("ТаблицаЗначений")));
		ДопСоглашениеОПоставке.ГрафикПлатежей.Загрузить(РеквизитФормыВЗначение("ГрафикПлатежей",Тип("ТаблицаЗначений"))); //rarus vikhle 24.12.2020 mt 17026
		ДопСоглашениеОПоставке.Количество = ДопСоглашениеОПоставке.СписокПродуктов.Итог("Количество");
		ДопСоглашениеОПоставке.СтавкаНДС = СтавкаНДС; //rarus vikhle 13.05.2021 mt 17733
		//rarus vikhle 14.12.2020 mt 16977 ---
		ДопСоглашениеОПоставке.Дилер = Дилер; // rarus vikhle 10.08.2021 mt 17637 перенес до заполнения
		
		ДопСоглашениеОПоставке.Заполнить(ТекущееСоглашениеОПоставке);
		//ДопСоглашениеОПоставке.СкладОтгрузки	= Склад; //rarus vikhle 11.09.2020 mt 16526
		//ДопСоглашениеОПоставке.ОтсрочкаПлатежа	= ОтсрочкаПлатежа; //rarus bonmak 13.01.2021 17041
		ДопСоглашениеОПоставке.Автор = Пользователи.ТекущийПользователь().КонтактноеЛицоКомпании;
		//rarus vikhle 26.05.2021 m 17653 +++
		
		//rarus vikhle 21.10.2021 m 18076 +++
		Если ПереводВСтатусНачатоОформлениеСОП Тогда
			ДопСоглашениеОПоставке.Статус = СтатусНовойВерсииЗаявки;
		КонецЕсли;	
		//rarus vikhle 21.10.2021 m 18076 ---
		
		ДилерТекущейЗаявки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"Дилер");
		Если ДопСоглашениеОПоставке.Дилер <> ДилерТекущейЗаявки Тогда  
			ДопСоглашениеОПоставке.ПродавецДилера			= ПродавецДилера;
			ДопСоглашениеОПоставке.РегиональныйМенеджер 	= РегиональныйМенеджер;
			ДопСоглашениеОПоставке.ЗакрепленныйМенеджерОКП  = ЗакрепленныйМенеджерОКП;
		КонецЕсли;	
		//rarus vikhle 26.05.2021 m 17653 ---
		
		
		// rarus tenkam 09.04.2021 mantis 17419 +++
		ДопСоглашениеОПоставке.ВалютнаяОговорка = Ложь;
		Для Каждого ТекСтрокаПродуктов Из ДопСоглашениеОПоставке.СписокПродуктов Цикл
			Если ЗначениеЗаполнено(ТекСтрокаПродуктов.ЦенаПоВалютнойОговорке) Тогда
				ДопСоглашениеОПоставке.ВалютнаяОговорка = Истина;
				Прервать;
			КонецЕсли;		
		КонецЦикла;
		// rarus tenkam 09.04.2021 mantis 17419 ---		
		
		//Заполнение таблиц
		
		//rarus vikhle 06.10.2020 mt 16181 +++
		
		//Если Элементы.СтраницаУсловияОплаты.Видимость Тогда
		//	ДопСоглашениеОПоставке.УсловияОплаты.Загрузить(РеквизитФормыВЗначение("УсловияОплаты",Тип("ТаблицаЗначений")));
		//Иначе
		//	ДопСоглашениеОПоставке.УсловияОплаты.Загрузить(ТекущееСоглашениеОПоставке.УсловияОплаты.Выгрузить());
		//КонецЕсли;
		//rarus vikhle 06.10.2020 mt 16181 ---
		
				
		//Корректировка текущего соглашения о поставке
		ТекущееСоглашениеОбъект = ТекущееСоглашениеОПоставке.ПолучитьОбъект();
		ТекущееСоглашениеОбъект.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС;
		ТекущееСоглашениеОбъект.IDПродуктаКП = "";
		ТекущееСоглашениеОбъект.НомерКоммерческогоПредложенияSPORT = "";
		НачатьТранзакцию();
		Попытка
			ТекущееСоглашениеОбъект.Записать();
			//Сообщить("В текущем соглашении о поставке установлен статус ""Неактуально. Есть ДС""");
			ВывестиСообщениеПол(Нстр("ru = 'В текущей заявке установлен статус ""Неактуально. Есть ДС"".'")); //rarus vikhle 05.11.2020 mt 16723
			ЗафиксироватьТранзакцию();								
		Исключение
			ОтменитьТранзакцию();
			//rarus vikhle 05.11.2020 mt 16723 +++
			//Сообщить("Произошла ошибка при записи текущего соглашения о поставке.");
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи текущей заявки.'"));
			ЗаписьЖурналаРегистрации(Нстр("ru = 'Корректировка текущей заявки'"),
									УровеньЖурналаРегистрации.Ошибка,,,
									Нстр("ru = 'Произошла ошибка при записи текущей заявки.'") +  ОписаниеОшибки());
			//rarus vikhle 05.11.2020 mt 16723 ---						
			ВызватьИсключение;							
		КонецПопытки;
		
		//Корректировка СОП
		
		Если ЗначениеЗаполнено(ТекущееСоглашениеОПоставке.Договор) Тогда 
			Если СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Оформлен
				ИЛИ СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично //rarus vikhle 14.12.2020 mt 16977 
				ИЛИ СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Исполнен //rarus vikhle 14.12.2020 mt 16977
				ИЛИ (СтарыйСтатус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП И ИзменитьУсловияДоговора) Тогда // rarus kabany 14.07.2021 17992 + 
				ТекущийСОПОбъект = ТекущееСоглашениеОПоставке.Договор.ПолучитьОбъект();
				ТекущийСОПОбъект.ДатаОкончания = ТекущаяДатаСеанса();
				НачатьТранзакцию();
				Попытка
					ТекущийСОПОбъект.Записать();
					Сообщить("В текущем СОП установлена дата окончания.");
					ЗафиксироватьТранзакцию();						
				Исключение
					ОтменитьТранзакцию();
					Сообщить("Произошла ошибка при записи текущего СОП");
					ЗаписьЖурналаРегистрации(Нстр("ru = 'Корректировка текущего СОП'"),
											УровеньЖурналаРегистрации.Ошибка,,,
											Нстр("ru = 'Произошла ошибка при записи текущего СОП.'") +  ОписаниеОшибки());
					ВызватьИсключение;						
				КонецПопытки;
										
				ДопСоглашениеКСОП = Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьЭлемент();
				ДопСоглашениеКСОП.Заполнить(ТекущийСОПОбъект.Ссылка);
				ДопСоглашениеКСОП.ДатаНачала = ТекущаяДата();	// rarus tenkam 04.03.2021 mantis 17362
				ДопСоглашениеКСОП.ВидДоговора = Перечисления.Scan_ВидыДоговоров.ДопСоглашениеКСОП;
				ДопСоглашениеКСОП.Компания = Дилер; //rarus vikhle 26.05.2021 m 17653
				//rarus vikhle 27.08.2020 mt 16181 +++
				ИндексРазделителяНомераСоглашения = СтрНайти(ТекущийСОПОбъект.НомерДоговора,"-",,6); 
				Если НЕ ИндексРазделителяНомераСоглашения = 0 Тогда
					//имеются доп соглашения, прибавляем 1
					СтарыйНомерДопСоглашения = Число(Прав(ТекущийСОПОбъект.НомерДоговора,СтрДлина(ТекущийСОПОбъект.НомерДоговора)- ИндексРазделителяНомераСоглашения));
					ДопСоглашениеКСОП.НомерДоговора = Лев(ТекущийСОПОбъект.НомерДоговора,СтрДлина(ТекущийСОПОбъект.НомерДоговора)
													- СтрДлина(СтарыйНомерДопСоглашения)) + (СтарыйНомерДопСоглашения + 1); 	
				Иначе
					//первое доп соглашение
					ДопСоглашениеКСОП.НомерДоговора = ТекущийСОПОбъект.НомерДоговора + "-1";	
				КонецЕсли;
				ДопСоглашениеКСОП.Наименование = "№ " + СокрЛП(ДопСоглашениеКСОП.НомерДоговора) + " от " + Формат(ДопСоглашениеКСОП.ДатаНачала,"ДФ=dd.MM.yyyy; ДЛФ=Д");
				//rarus vikhle 27.08.2020 mt 16181 ---
				
				ДопСоглашениеКСОП.IDExternalSystem = ""; // rarus tenkam 14.10.2020 mantis 16181 +
				НачатьТранзакцию();
				Попытка
					ДопСоглашениеКСОП.Записать();
					Сообщить("Успешно создана новая версия СОП");
					НеобходимоСоздатьСОПВ1БД = Истина;	// rarus tenkam 14.10.2020 mantis 16181 +

					ЗафиксироватьТранзакцию();						
				Исключение
					ОтменитьТранзакцию();
					Сообщить("Произошла ошибка при записи новой версии СОП");
					ЗаписьЖурналаРегистрации("Создание новой версии СОП",
											УровеньЖурналаРегистрации.Ошибка,,,
											"Произошла ошибка при записи новой версии СОП." + (ОписаниеОшибки()));
					ВызватьИсключение;						
				КонецПопытки;	
				
				ДопСоглашениеОПоставке.Договор = ДопСоглашениеКСОП.Ссылка;
			Иначе
				ДопСоглашениеОПоставке.Договор = ТекущееСоглашениеОПоставке.Договор;
				//rarus vikhle 26.05.2021 m 17653 +++ 
				// На статусе "Начато оформление СОП" обновляем компанию в СОП, если был изменен дилер заявки
				Если ИзмененыОбщиеДанныеЗаявки Тогда
					ТекущийСОПОбъект = ТекущееСоглашениеОПоставке.Договор.ПолучитьОбъект();
					ТекущийСОПОбъект.Компания = Дилер;
					НачатьТранзакцию();
					Попытка
						ТекущийСОПОбъект.Записать();
						Сообщить("В текущем СОП изменена компания.");
						ЗафиксироватьТранзакцию();						
					Исключение
						ОтменитьТранзакцию();
						Сообщить(НСтр("ru = 'Произошла ошибка при записи текущего СОП'"));
						ЗаписьЖурналаРегистрации(Нстр("ru = 'Корректировка текущего СОП'"),
												УровеньЖурналаРегистрации.Ошибка,,,
												Нстр("ru = 'Произошла ошибка при записи текущего СОП.'") +  ПодробноеПредставлениеОшибки(ОписаниеОшибки()));
						ВызватьИсключение;						
					КонецПопытки;
				КонецЕсли;	
				//rarus vikhle 26.05.2021 m 17653
			КонецЕсли;	
			
		ИначеЕсли ПереводВСтатусНачатоОформлениеСОП Тогда //rarus vikhle 21.10.2021 m 18076 +++	
			
			НачатьТранзакцию();
			Попытка
				
				ТекущийДоговор = Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьДоговорСОП(Дилер, СтавкаНДС);
				
				Если ЗначениеЗаполнено(ТекущийДоговор) Тогда
					
					ВывестиСообщениеПол(Нстр("ru ='Создана первая версия СОП.'"));
					ДопСоглашениеОПоставке.Договор = ТекущийДоговор;
					ДопСоглашениеОПоставке.ДополнительныеСвойства.Вставить("БылСозданДоговор", Истина);
					ЗафиксироватьТранзакцию();						
					
				Иначе
					
					ОтменитьТранзакцию();
					ВызватьИсключение Нстр("ru = 'Первая версия СОП не была создана'");
					
				КонецЕсли;	
				
			Исключение
				
				ОтменитьТранзакцию();
				ВывестиСообщениеПол(НСтр("ru = 'Произошла ошибка при создании первой версии СОП: %1'"),,,,, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(Нстр("ru = 'Создание первой версии СОП'", ОбщегоНазначения.КодОсновногоЯзыка()),
										УровеньЖурналаРегистрации.Ошибка,,,
										Нстр("ru = 'Произошла ошибка при создании первой версии СОП. '") +  ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ВызватьИсключение;
				
			КонецПопытки;	
			
		КонецЕсли; //rarus vikhle 21.10.2021 m 18076 ---
		
		НачатьТранзакцию();
		Попытка
			ДопСоглашениеОПоставке.Записать();
			//Сообщить("Успешно создано дополнительное соглашение о поставке.");
			ВывестиСообщениеПол(Нстр("ru = 'Успешно создана дополнительная заявка.'"));//rarus vikhle 05.11.2020 mt 16723
			ЗафиксироватьТранзакцию();						
		Исключение
			ОтменитьТранзакцию();
			//rarus vikhle 05.11.2020 mt 16723 +++
			//Сообщить("Произошла ошибка при записи дополнительного соглашения о поставке.");
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при записи дополнительной заявки.'"));
			ЗаписьЖурналаРегистрации("Создание дополнительной заявки",
									УровеньЖурналаРегистрации.Ошибка,,,
									"Произошла ошибка при записи дополнительной заявки." + ОписаниеОшибки());
			//rarus vikhle 05.11.2020 mt 16723 ---						
			ВызватьИсключение;						
		КонецПопытки;
		
		НовоеСоглашениеОПоставке = ДопСоглашениеОПоставке.Ссылка;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();	
		Сообщить("Во время записи данных произошли ошибки, все изменения отменены. Подробности в журнале регистрации");
		ВызватьИсключение;
	КонецПопытки;
	
	НеобходимоОбновлениеDDS = ИзмененыСроки; //rarus vikhle 27.10.2021 m 18426
	
	// СОЗДАНИЕ/ИЗМЕНЕНИЕ ДОКУМЕНТОВ УСТАНОВКИ ПЛАНОВЫХ ЦЕН
	
	ТаблицаИзделий = ПолучитьТаблицуПродуктовОбработки(); //rarus vikhle 22.01.2021 mt 16981
	//rarus vikhle 27.05.2021 mt 17653 +++
	МассивПродуктов = ТаблицаИзделий.ВыгрузитьКолонку("Продукт"); 
	
	Если ИзмененыОбщиеДанныеЗаявки Тогда
		ОтменитьЗаявкиНаОтгрузкуДругихДилеров(МассивПродуктов);
	КонецЕсли;	
	//rarus vikhle 27.05.2021 mt 17653 ---
	
	ОбновитьЗаявкиНаОтгрузку(МассивПродуктов); //rarus vikhle 30.09.2020 mt 16181
	
	Если ИзмененыУсловияОплаты 
		И НЕ ИзмененСостав 
		И НЕ ИзмененыЦены 
		И НЕ НеобходимоРазделениеЗаявки Тогда	//rarus vikhle 06.10.2021 mt 18076
		Элементы.Выполнить.Доступность = Ложь;
		
		АктуальнаяЗаявка = ?(НовоеСоглашениеОПоставке.Пустая(),ТекущееСоглашениеОПоставке,НовоеСоглашениеОПоставке); //rarus vikhle 07.10.2021 mt 18076
		ОбработатьПродуктыТекущейВерсии(АктуальнаяЗаявка);//rarus vikhle 08.02.2021 mt 16981 //rarus vikhle 07.10.2021 mt 18076 + параметр
		// rarus tenkam 14.10.2020 mantis 16181 +++
		Если НеобходимоСоздатьСОПВ1БД И НЕ НовоеСоглашениеОПоставке.Пустая() Тогда
			Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьДоговорВ1БД(НовоеСоглашениеОПоставке.Договор, НовоеСоглашениеОПоставке);		
		КонецЕсли;
		// rarus tenkam 14.10.2020 mantis 16181 ---
		
		//rarus vikhle 13.10.2021 mt 18292 +++
		// Создаем новые документы цен для продуктов
		//СоздатьДокументыПлановыхЦен(ТаблицаИзделий, АктуальнаяЗаявка, ИзмененыЦены);
		СоздатьДокументыПлановыхЦен(ТаблицаИзделий, АктуальнаяЗаявка); //rarus vikhle 02.11.2021 m 18502
		
		// rarus tenkam 18.03.2021 mantis 17440 +++ 
		//Для Каждого СтрТаблицы Из ТаблицаИзделий Цикл
		//	Документы.Scan_УстановкаПлановыхЦенПродукта.ОбновитьЗаявкуВДокументе(СтрТаблицы.Продукт,,ДопСоглашениеОПоставке.Ссылка);
		//КонецЦикла;
		// rarus tenkam 18.03.2021 mantis 17440 ---
		//rarus vikhle 13.10.2021 mt 18292 ---
		Возврат;	
	КонецЕсли;
	
	
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	//СоздатьДокументыПлановыхЦен(ТаблицаИзделий, ДопСоглашениеОПоставке.Ссылка, ИзмененыЦены); //rarus vikhle 14.10.2021 mt 18292
	СоздатьДокументыПлановыхЦен(ТаблицаИзделий, ДопСоглашениеОПоставке.Ссылка); //rarus vikhle 02.11.2021 m 18502
	
	//rarus vikhle 14.10.2021 mt 18292 +++ 
	//Для Каждого СтрокаТаблицы Из ТаблицаИзделий Цикл
	//	
	//	//rarus vikhle 29.10.2020 mt 16181 +++
	//	Если НЕ Элементы.СтраницаЦены.Видимость И НЕ ИзмененыОбщиеДанныеЗаявки //rarus vikhle 31.05.2021 mt 17653 
	//		И ТекущееСоглашениеОПоставке.СписокПродуктов.Найти(СтрокаТаблицы.Продукт,"Продукт") <> Неопределено Тогда
	//		Продолжить;
	//	КонецЕсли;	
	//	//rarus vikhle 29.10.2020 mt 16181 ---
	//			
	//	ТабРучныхСоставляющих = ЗаполнитьТаблицуСоставляющих(СтрокаТаблицы,ДопСоглашениеОПоставке.Ссылка,ТекущийПользователь);		
	//	ДокументУстановкиЦен = Документы.Scan_УстановкаПлановыхЦенПродукта.СоздатьСкорректироватьДокументУстановкиЦен(СтрокаТаблицы.Продукт,ТабРучныхСоставляющих,ДопСоглашениеОПоставке.Ссылка,СтрокаТаблицы.СпециальныеУсловия);	
	//	
	//	Если ДокументУстановкиЦен = Неопределено Тогда
	//		ВывестиСообщениеПол(НСтр("ru = 'Ошибка при создании документа установки плановых цен продукта %1: %2'"),,,,,
	//							СтрокаТаблицы.Продукт, ОписаниеОшибки());				
	//	Иначе
	//		ВывестиСообщениеПол(НСтр("ru = 'Успешно создан/скорректирован документ установки плановых цен для продукта %1.'"),,,,,
	//							СтрокаТаблицы.Продукт);						
	//	КонецЕсли;
	//																														
	//КонецЦикла;	
	//rarus vikhle 14.10.2021 mt 18292 ---
	
	ТаблицаИзделийСоглашения = ТекущееСоглашениеОПоставке.СписокПродуктов.Выгрузить();
	ЗаявкиНаОтгрузкуПереносимыхПродуктов = Неопределено; //rarus vikhle 08.10.2021 mt 18076
	
	// rarus vikhle 17.10.2022 m 18269 +++
	// Фиксация измененения себестоимости в регистре "Плановая себестоимость продуктов"
	ПродуктыСИзмененнойСебестоимостью = Справочники.Scan_СоглашенияОПоставке.ПродуктыСИзмененнойСебестоимостью(ТаблицаИзделийСоглашения, ТаблицаИзделий);
	Для Каждого СтрокаПродуктСебестоимость Из ПродуктыСИзмененнойСебестоимостью Цикл
		РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(СтрокаПродуктСебестоимость.Продукт, 
																					СтрокаПродуктСебестоимость.Себестоимость);
	КонецЦикла;
	// rarus vikhle 17.10.2022 m 18269 ---
	
	Если ИзмененСостав Тогда
		//Обработка добавленных в новую версию продуктов
		ОбработатьДобавленныеПродукты(ТаблицаИзделий,ТаблицаИзделийСоглашения, НовоеСоглашениеОПоставке);//rarus vikhle 03.09.2020 mt 16181
		//Обработка продуктов, которые есть в текущей заявке (из которой вызывали корректировку)
		ОбработатьПродуктыТекущейВерсии(НовоеСоглашениеОПоставке, ТаблицаИзделий, ТаблицаИзделийСоглашения);//rarus vikhle 22.01.2021 mt 16981 //rarus vikhle 07.10.2021 mt 18076 + 1й параметр
		//Обработка продуктов, которые удалили в корректировке 
		
		//rarus vikhle 04.03.2022 m 18956 +++
		Если ДополнительныеПараметры <> Неопределено И ДополнительныеПараметры.Свойство("ПереноситьВРезерв") Тогда
			ЗарезервироватьУдаленные = Истина;
		Иначе
			ЗарезервироватьУдаленные = Ложь;
		КонецЕсли;	
				
		//ОбработатьУдаленныеПродукты(ТаблицаИзделий,ТаблицаИзделийСоглашения);
		ОбработатьУдаленныеПродукты(ТаблицаИзделий,ТаблицаИзделийСоглашения, ЗарезервироватьУдаленные);
		//rarus vikhle 04.03.2022 m 18956 --
		
		//rarus agar 25.12.2020 17006 ++
		Если  ДополнительныеПараметры <> Неопределено 
			И ДополнительныеПараметры.Свойство("АдресКорректировокЗаявокНаОтгрузку")
			Тогда
			ОбработатьКорректировкиЗаявокНаОтгрузку(ДополнительныеПараметры.АдресКорректировокЗаявокНаОтгрузку, ЗаявкиНаОтгрузкуПереносимыхПродуктов); //rarus vikhle 08.10.2021 mt 18076 + 2й параметр  
		КонецЕсли;
		//rarus agar 25.12.2020 17006 --
		
		//rarus vikhle 13.10.2021 mt 18292 +++
		// rarus tenkam 18.03.2021 mantis 17440 +++ 
		//Для Каждого СтрТаблицы Из ТаблицаИзделий Цикл
		//	Документы.Scan_УстановкаПлановыхЦенПродукта.ОбновитьЗаявкуВДокументе(СтрТаблицы.Продукт,,ДопСоглашениеОПоставке.Ссылка);
		//КонецЦикла;
		// rarus tenkam 18.03.2021 mantis 17440 ---
		//rarus vikhle 13.10.2021 mt 18292 ---
	КонецЕсли;
	
	//Изменим, при необходимости, в СУ статус на "Одобрено, есть в СОП" или "Одобрено, нет в СОП"
	Справочники.Scan_СпециальныеУсловия.ОбновитьСУ(ТаблицаИзделийСоглашения,ПолучитьТаблицуПродуктовОбработки(,Истина));//rarus vikhle 29.01.2021 mt 16929
	
	Элементы.Выполнить.Доступность = Ложь;
	
	// rarus tenkam 14.10.2020 mantis 16181 +++
	Если НеобходимоСоздатьСОПВ1БД И НЕ НовоеСоглашениеОПоставке.Пустая() Тогда
		Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьДоговорВ1БД(НовоеСоглашениеОПоставке.Договор, НовоеСоглашениеОПоставке);		
	КонецЕсли;
	// rarus tenkam 14.10.2020 mantis 16181 ---
	
	//rarus vikhle 05.10.2021 mt 18076 +++
	Если НеобходимоРазделениеЗаявки Тогда
		
		ВыполнитьРазделениеЗаявки(ИтогиПоЗаявкам, НеобходимоСоздатьСОПВ1БД, ТаблицаИзделийСоглашения, ЗаявкиНаОтгрузкуПереносимыхПродуктов);
		
	КонецЕсли;
	//rarus vikhle 05.10.2021 mt 18076 ---
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого СтрокаТЗ Из СписокПродуктов Цикл
		СтрокаТЗ.Флаг = Ложь;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого СтрокаТЗ Из СписокПродуктов Цикл
		СтрокаТЗ.Флаг = Истина;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьПродукты(Команда)
	//rarus vikhle 27.09.2021 m 18286 +++
	ПроверяемыйСтатус = ПолучитьСтарыйСтатусСоглашения(ТекущееСоглашениеОПоставке);
	УстановитьСтандартныеУсловия = Ложь;
	//rarus vikhle 27.09.2021 m 18286 ---
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Модель", Модель);
	МаркаМодели = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Модель,"МаркаПродукта");//rarus vikhle 18.02.2021 mt 17123
	Если МаркаМодели = ПредопределенноеЗначение("Справочник.Scan_МаркиПродуктов.Scania") Тогда //rarus vikhle 18.02.2021 mt 17123
		СтруктураОтбора.Вставить("ОтборПоЧастичномуСовпадениюМодели",Истина); //rarus vikhle 14.10.2020 mt 16181
	КонецЕсли;	
	СтруктураОтбора.Вставить("БУ", ЗаявкаНаБУПродукты); //rarus vikhle 13.05.2021 mt 17733
	//rarus vikhle 13.05.2021 mt 17733 +++
	Если НЕ СписокПродуктов.Количество() = 0 Тогда
		СтруктураОтбора.Вставить("СтавкаНДС",СтавкаНДС);
	КонецЕсли;	
	//rarus vikhle 13.05.2021 mt 17733 ---
	СтруктураОтбора.Вставить("ПустоеСоглашениеОПоставке", Истина);
	УникальностьСпецификации =  Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"УникальностьСпецификации");//rarus vikhle 23.11.2020 mt 16181
	СтруктураОтбора.Вставить("ТипСпецификации",УникальностьСпецификации); //rarus vikhle 23.11.2020 mt 16181
	СтандартнаяСпецификация = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"СтандартнаяСпецификация"); 
	Если УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") И НЕ СтандартнаяСпецификация.Пустая() Тогда
		СтруктураОтбора.Вставить("НомерСпецификации",Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтандартнаяСпецификация,"НомерСпецификации"));	
	КонецЕсли;
	СтруктураОтбора.Вставить("ПроверятьСовпадениеСтандартнойСпецификации", Истина); //rarus vikhle 22.09.2021 mt 18298
	//rarus vikhle 27.09.2021 m 18286 +++
	Если НЕ ПроверяемыйСтатус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично") 
		И НЕ УсловияОплатыСтандартные Тогда
		СтруктураОтбора.Вставить("НестандартныеУсловияОплаты");
		УстановитьСтандартныеУсловия = Истина;
	ИначеЕсли ПроверяемыйСтатус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично") 
		И НЕ УсловияОплатыСтандартные Тогда
		ВывестиСообщениеПол(НСтр("ru = 'Запрещено добавление продуктов, т.к. условия оплаты нестандартные и есть отгруженные ТС'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 27.09.2021 m 18286 ---
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбора", ЭтотОбъект, УстановитьСтандартныеУсловия); //rarus vikhle 27.09.2021 mt 18286 + УстановитьСтандартныеУсловия
	
	ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаПодбораПродуктов",
				СтруктураОтбора,
				ЭтаФорма,,,,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте  
Процедура ОбработкаВыбора(ВыбранноеЗначение, УстановитьСтандартныеУсловия) Экспорт //rarus vikhle 27.09.2021 mt 18286 + УстановитьСтандартныеУсловия 
	Если ВыбранноеЗначение <> Неопределено Тогда
		ОбработатьПодбор(ВыбранноеЗначение, УстановитьСтандартныеУсловия); //rarus vikhle 27.09.2021 mt 18286 + УстановитьСтандартныеУсловия 	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОбработатьПодбор(ВыбранноеЗначение, УстановитьСтандартныеУсловия) //rarus vikhle 27.09.2021 mt 18286 + УстановитьСтандартныеУсловия
	ТаблицаПодбора = ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
	//rarus vikhle 13.05.2021 mt 17733 +++
	Если ТаблицаПодбора.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Если ЗаявкаНаБУПродукты Тогда
		//Для заявок по БУ при подборе в заявку без продуктов ставку НДС устанавливаем, равную ставке подобранных БУ продуктов
		Если СписокПродуктов.Количество() = 0 И СтавкаНДС <> ТаблицаПодбора[0].СтоимостьПродажиБУСтавкаНДС Тогда
			СтавкаНДС = ТаблицаПодбора[0].СтоимостьПродажиБУСтавкаНДС;		
		КонецЕсли;	
	КонецЕсли;	
	
	ЗначениеСтавкиНДС 			= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтавкаНДС,"Ставка");
	ДатаDDБУИАвтобусов			= Дата(1,1,1);
	УникальностьСпецификации	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке, "УникальностьСпецификации"); // rarus vikhle 21.12.2021 m 18269
	СебестоимостьПродуктов		= Новый Соответствие; // rarus vikhle 21.12.2021 m 18269
	
	// rarus vikhle 21.12.2021 m 18269 +++
	Если УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Scan_Изделия.Ссылка КАК Продукт,
		               |	Scan_Изделия.СтандартнаяСпецификация.ПлановаяСебестоимостьСНДС КАК ПлановаяСебестоимостьСНДС
		               |ИЗ
		               |	Справочник.Scan_Изделия КАК Scan_Изделия
		               |ГДЕ
		               |	Scan_Изделия.Ссылка В(&Продукты)";
		Запрос.УстановитьПараметр("Продукты", ТаблицаПодбора.ВыгрузитьКолонку("Продукт"));
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СебестоимостьПродуктов.Вставить(Выборка.Продукт, Выборка.ПлановаяСебестоимостьСНДС);	
		КонецЦикла;	
		
   	КонецЕсли;
	// rarus vikhle 21.12.2021 m 18269 ---
	
	//При добавлении продуктов БУ или с видом продукта "Автобусы" будем автоматически заполнять колонку DD датой начала договора, для доступности редактирования DDS
	//Заполняемая дата DD зависит от того, будет ли создано доп. соглашение к СОП (договору).
	Если НЕ ТекущийДоговор.Пустая()
		ИЛИ СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП Тогда //rarus vikhle 21.10.2021 m 18076
		СтатусЗаявки = ПолучитьСтарыйСтатусСоглашения(ТекущееСоглашениеОПоставке);//Для статуса "Запрос изменений СОП" берется предыдущий //rarus vikhle 15.09.2021 m 18235 +++ добавил параметр
		ВидПродуктаАвтобус = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус");
		Если СтатусЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Оформлен
			ИЛИ СтатусЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично
			ИЛИ СтатусЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Исполнен 
			ИЛИ СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП Тогда //rarus vikhle 21.10.2021 m 18076
			ДатаDDБУИАвтобусов = ТекущаяДатаСеанса(); // Будет создано доп. соглашение, используем текущую дату 
		Иначе
			ДатаDDБУИАвтобусов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийДоговор,"ДатаНачала");//Не будет создано доп. соглашение, используется дата начала текущего договора	
		КонецЕсли;	
	КонецЕсли;
	//rarus vikhle 13.05.2021 mt 17733 ---
	
	//rarus vikhle 31.08.2021 mt 17933 +++
	ЗаказыСоответствие	= ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ТаблицаПодбора.ВыгрузитьКолонку("Продукт"), "ЗаказНаЗавод");
	ЗаказыМассив		= ОбщегоНазначения.ВыгрузитьКолонку(ЗаказыСоответствие, "Значение");
	
	НаличиеЗаписейВОчередиDD2DDSИнформера = РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ПолучитьНаличиеЗаписейПоЗаказам(ЗаказыМассив);
	//rarus vikhle 31.08.2021 mt 17933 ---
	СтандартныеУсловияУстановлены = Ложь; //rarus vikhle 27.09.2021 mt 18286
		
	Для Каждого СтрокаПродукта Из ТаблицаПодбора Цикл   		
		Поиск = Новый Структура("Продукт", СтрокаПродукта.Продукт);	
		МассивСтрок = СписокПродуктов.НайтиСтроки(Поиск);	
		Если МассивСтрок.Количество() = 0 Тогда
		    НоваяСтрока = СписокПродуктов.Добавить();         		
			НоваяСтрока.Продукт = СтрокаПродукта.Продукт;
			НоваяСтрока.Модель 	= СтрокаПродукта.Продукт.МодельПродукта;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.ВТекущейЗаявке = Ложь; //rarus vikhle 10.11.2020 mt 16181
			//rarus vikhle 17.12.2020 mt 16977 +++
			//rarus vikhle 17.05.2021 mt 17733 +++
			Если (НЕ ТекущийДоговор.Пустая()
				ИЛИ СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП)
				И (СтрокаПродукта.Продукт.ТипПродукта.ВидПродукта = ВидПродуктаАвтобус ИЛИ (ЗаявкаНаБУПродукты И СтрокаПродукта.Продукт.БУ)) Тогда 
				НоваяСтрока.DD = ДатаDDБУИАвтобусов;
			Иначе
				НоваяСтрока.DD = СтрокаПродукта.DD;	
			КонецЕсли;	
			//rarus vikhle 17.05.2021 mt 17733 ---
			НоваяСтрока.DD2 = СтрокаПродукта.DD2;
			НоваяСтрока.ДатаПродажиДилеру = СтрокаПродукта.ДатаПродажиДилеру; 
			//rarus vikhle 17.12.2020 mt 16977 ---
			НоваяСтрока.ДатаПродажиКлиенту = СтрокаПродукта.ДатаПродажиКлиенту; //rarus vikhle 10.03.2021 mt 17324
			
			//rarus vikhle 31.08.2021 mt 17933 +++
			//rarus vikhle 14.10.2020 mt 16181 +++
			//Если ТипЗнч(НоваяСтрока.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
			//	НоваяСтрока.ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(НоваяСтрока.Продукт);
			//КонецЕсли;	
			//rarus vikhle 14.10.2020 mt 16181 ---
			НоваяСтрока.ЗаказНаЗавод = ЗаказыСоответствие[НоваяСтрока.Продукт];
			НоваяСтрока.ВходитВОчередьDD2DDSИнформера = НаличиеЗаписейВОчередиDD2DDSИнформера[НоваяСтрока.ЗаказНаЗавод];
			//rarus vikhle 31.08.2021 mt 17933 ---
			
			НоваяСтрока.СкладОтгрузки = ПриоритетныйСклад;
			//rarus vikhle 04.02.2021 mt 16981 +++
			Если НЕ НоваяСтрока.Продукт.ЗапретИзмененияСкладаПродажи Тогда
				НоваяСтрока.СкладПродажи  = ПриоритетныйСклад;
			Иначе
				НоваяСтрока.СкладПродажи = НоваяСтрока.Продукт.СкладПродажи;	
			КонецЕсли;
			
			//rarus vikhle 25.01.2021 mt 16981 +++
			//Если НоваяСтрока.Продукт.СкладПродажи.Пустая() Тогда 
			//	НоваяСтрока.СкладПродажи  = НоваяСтрока.СкладОтгрузки;
			//Иначе
			//	НоваяСтрока.СкладПродажи = НоваяСтрока.Продукт.СкладПродажи;	
			//КонецЕсли;	
			//rarus vikhle 04.02.2021 mt 16981 ---
			
			Если НоваяСтрока.Продукт.МестоПередачи.Пустая() Тогда 
				НоваяСтрока.МестоПередачи  = НоваяСтрока.СкладОтгрузки;	
			Иначе
				НоваяСтрока.МестоПередачи = НоваяСтрока.Продукт.МестоПередачи;	
			КонецЕсли;
			//rarus vikhle 25.01.2021 mt 16981 ---
			
			ТаблицаРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(СтрокаПродукта.Продукт);
			СтрокаЗатраты = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ЛогистическиеЗатраты,"СоставляющаяЦены");
			Если НЕ СтрокаЗатраты =  Неопределено Тогда
				НоваяСтрока.ЛогистическиеЗатратыСумма = СтрокаЗатраты.ЦенаСНДС;
				НоваяСтрока.ЛогистическиеЗатратыСуммаТекущие = СтрокаЗатраты.ЦенаСНДС;
				НоваяСтрока.КомментарийЛогистическиеЗатраты = СтрокаЗатраты.Комментарий; 	// rarus tenkam 26.04.2021 mantis 17468 +
			КонецЕсли;
			СтрокаЗатраты = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.Компенсация,"СоставляющаяЦены");
			Если НЕ СтрокаЗатраты =  Неопределено Тогда
				НоваяСтрока.КомпенсацииСумма = СтрокаЗатраты.ЦенаСНДС;
				НоваяСтрока.КомпенсацииСуммаТекущие = СтрокаЗатраты.ЦенаСНДС;
				НоваяСтрока.КомментарийКомпенсации = СтрокаЗатраты.Комментарий; 	// rarus tenkam 26.04.2021 mantis 17468 +
			КонецЕсли;
			// rarus tenkam 23.04.2021 mantis 17648 +++
			СтрокаЗатраты = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ИзменениеСпецификацииПоИнициативеЗавода,"СоставляющаяЦены");
			Если НЕ СтрокаЗатраты =  Неопределено Тогда
				НоваяСтрока.ИзменениеСпецификацииПоИнициативеЗаводаСумма = СтрокаЗатраты.ЦенаСНДС;
				НоваяСтрока.ИзменениеСпецификацииПоИнициативеЗаводаСуммаТекущие = СтрокаЗатраты.ЦенаСНДС;
				НоваяСтрока.КомментарийИзменениеСпецификации = СтрокаЗатраты.Комментарий;
			КонецЕсли;
			// rarus tenkam 23.04.2021 mantis 17648 ---
			
			// rarus tenkam 02.04.2021 mantis 17419 +++
			РазницаПоВалОговорке = РегистрыСведений.Scan_ПлановыеЗначенияСоставляющихЦеныПродукта.ПолучитьЦенуПродукта(СтрокаПродукта.Продукт,ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.РазницаПоВалютнойОговорке"));
			Если РазницаПоВалОговорке <> 0  Тогда
				СтрокаЦенаПоВалютнойОговорке = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаПоВалютнойОговорке,"СоставляющаяЦены");
				Если НЕ СтрокаЦенаПоВалютнойОговорке =  Неопределено Тогда
					НоваяСтрока.ЦенаПоВалютнойОговорке = СтрокаЦенаПоВалютнойОговорке.ЦенаСНДС;
				КонецЕсли;  
			КонецЕсли;
			// rarus tenkam 02.04.2021 mantis 17419 ---
			
			НоваяСтрока.ТипПродукта = ТипЗнч(НоваяСтрока.Продукт); //rarus vikhle 03.09.2020 mt 16181
			//НоваяСтрока.ТипПродукта = ПолучитьОписаниеТипаПродукта(НоваяСтрока.Продукт); //rarus vikhle 07.05.2021 mt 17752
			
			//rarus vikhle 13.05.2021 mt 17733 +++
			Если ЗаявкаНаБУПродукты Тогда
				НоваяСтрока.ЦенаСНДС = СтрокаПродукта.СтоимостьПродажиБУ;
				НоваяСтрока.ЦенаБезНДС = 100 * НоваяСтрока.ЦенаСНДС / (100 + ЗначениеСтавкиНДС);
				ОбновитьИтоговуюСуммуПродукта(НоваяСтрока); //rarus vikhle 04.08.2021 mt 17637
			КонецЕсли;	
			//rarus vikhle 13.05.2021 mt 17733 ---
			
			НоваяСтрока.Себестоимость = СебестоимостьПродуктов[НоваяСтрока.Продукт]; // rarus vikhle 21.12.2021 m 18269
						
			//rarus vikhle 27.09.2021 mt 18286 +++
			Если УстановитьСтандартныеУсловия И НЕ СтандартныеУсловияУстановлены Тогда
				ЗаполнитьСтандартныеУсловияОплаты();	
				ПроверитьСовпадениеУсловийОплаты();
				СтандартныеУсловияУстановлены = Истина;
			КонецЕсли;	
			//rarus vikhle 27.09.2021 mt 18286 ---
			
			ДобавитьУсловияОплаты(НоваяСтрока.ПолучитьИдентификатор());//rarus vikhle 04.08.2021 mt 17637
						
		Иначе
			ВывестиСообщениеПол("Продукт %1 уже добавлен список продуктов.",ЭтотОбъект,,,,СтрокаПродукта.Продукт);
		КонецЕсли;
	КонецЦикла;
	
	//rarus vikhle 04.08.2021 mt 17637 +++ закомментировал
	//rarus vikhle 14.05.2021 mt 17733 +++
	//Если ЗаявкаНаБУПродукты Тогда
	//	ОбновитьУсловияОплаты();//rarus vikhle 18.05.2021 mt 17733
	//Иначе
	//	//ОбновитьГрафикПлатежей();//rarus vikhle 18.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	//КонецЕсли;	
	//rarus vikhle 14.05.2021 mt 17733 ---
	//rarus vikhle 04.08.2021 mt 17637 ---
	
	//rarus vikhle 28.02.2021 mt 17186 +++
	ДатыОтгрузки	= ПолучитьДатыОтгрузкиПродуктов();
	Для Каждого СтрокаПродукта Из СписокПродуктов Цикл 
		НайденнаяСтрока = ДатыОтгрузки.Найти(СтрокаПродукта.Продукт, "Продукт");
		Если НайденнаяСтрока <> Неопределено Тогда
			СтрокаПродукта.ДатаБрони   = НайденнаяСтрока.ДатаОтгрузки;
		КонецЕсли;
	КонецЦикла;	
	//rarus vikhle 28.02.2021 mt 17186 ---
	
КонецПроцедуры

//rarus vikhle 01.09.2020 mt 16181 +++
&НаКлиенте
Процедура Удалить(Команда)
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.СписокПродуктовСостав.ТекущиеДанные;
	//rarus vikhle 29.12.2020 mt 16181 +++
	Если ТекущиеДанные = Неопределено Тогда
		ВывестиСообщениеПол(Нстр("ru = 'В таблице не выбрана строка.'"));
		Возврат;
	КонецЕсли;	
	//rarus vikhle 29.12.2020 mt 16181 ---
	
	//rarus vikhle 30.09.2020 mt 16181 +++
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
		И НЕ ТекущиеДанные.Продукт.Пустая() Тогда
		ЗаявкиНаОтгрузкуПоПродукту = ПолучитьЗаявкиНаОгрузкуПродукта(ТекущиеДанные.Продукт);
		Если НЕ ЗаявкиНаОтгрузкуПоПродукту.Количество() = 0 Тогда
			ПереченьЗаявок = "";
			ЭтоПерваяЗаявка = Истина;
			Для Каждого Заявка Из ЗаявкиНаОтгрузкуПоПродукту Цикл
				ПереченьЗаявок = ПереченьЗаявок + ?(ЭтоПерваяЗаявка,"",", ") + Заявка;
			КонецЦикла;	
			
			ТекстПредупреждения = ("Продукт включен в заявки на отгрузку: " + ПереченьЗаявок + 
									" Перед удалением продукта в заявке необходимо удалить продукт в заявке на отгрузку."); //rarus vikhle 05.11.2020 mt 16723
			ПоказатьПредупреждение(,ТекстПредупреждения);	
			Возврат;
		КонецЕсли;	
		
		ДатаПродажиПродукта = ПолучитьДатуПродажиПродукта(ТекущиеДанные.Продукт); 
		Если НЕ ДатаПродажиПродукта = Дата(1,1,1) Тогда
			ТекстПредупреждения = ("У продукта есть дата продажи. Удаление невозможно.");
			ПоказатьПредупреждение(,ТекстПредупреждения);
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	//rarus vikhle 30.09.2020 mt 16181 ---
	СписокПродуктов.Удалить(ТекущиеДанные);
	
	//rarus vikhle 03.08.2021 mt 17637 +++
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
		УдалитьУсловияОплатыПродукта(ТекущиеДанные.Продукт);
	КонецЕсли;	
	
	//ОбщаяСуммаТекущегоСоглашения = СписокПродуктов.Итог("ИтоговаяСумма"); //rarus vikhle 04.08.2021 mt 17637 закомментировал
	//rarus vikhle 03.08.2021 mt 17637 ---
	
	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//rarus vikhle 09.06.2021 mt 17637 +++
	//Если ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
		//ОбновитьУсловияОплаты(); //rarus vikhle 02.10.2020 mt 16181 //rarus vikhle 03.08.2021 mt 17637 Закомментировал
	//Иначе	
	//	УдалитьУсловияОплатыПродукта(ТекущиеДанные.Продукт);
	//КонецЕсли;	
	//rarus vikhle 09.06.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
		 
КонецПроцедуры
//rarus vikhle 01.09.2020 mt 16181 +++

&НаКлиенте
Процедура ЗаполнитьПоЗаказам(Команда)
	ЗаполнитьПоЗаказамНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПродукт(Команда)
	ОбработатьВыборПродуктаКП();	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеПродукты(Команда)
	ОбработатьВыборПродуктаКП(Истина);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПродуктПрицеп(Команда) // Rarus tenkam 21.10.2021 mantis 17822 +++
	ОбработатьВыборПродуктаКП(,Истина);
КонецПроцедуры  // Rarus tenkam 21.10.2021 mantis 17822 ---

&НаКлиенте
Процедура ВыбратьВсеПродуктыПрицепы(Команда) // Rarus tenkam 21.10.2021 mantis 17822 +++
	ОбработатьВыборПродуктаКП(Истина, Истина);
КонецПроцедуры // Rarus tenkam 21.10.2021 mantis 17822 ---


#Область РазделениеЗаявки

&НаКлиенте
Процедура ВернутьВсеВТекущуюЗаявку(Команда) //rarus vikhle 28.09.2021 mt 18076 +++
	
	Если ПродуктыКПереносу.Количество() > 0 Тогда
		
		ВернутьВсеВТекущуюЗаявкуНаСервере();	
		
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 18076 ---

&НаКлиенте
Процедура ВернутьВТекущуюЗаявку(Команда) //rarus vikhle 28.09.2021 mt 18076 +++
	
	ОчиститьСообщения();
	ТекущиеДанные = Элементы.ПродуктыКПереносу.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбрана строка к переносу'"),, "ПродуктыКПереносу");
		Возврат;		
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") 
		И ТекущиеДанные.Количество > 1 Тогда
		
		ВывестиСообщениеПол(Нстр("ru = 'Выберите количество драфтов для переноса'"));
		СписокВыбора = Новый СписокЗначений;
		Для Инд = 1 По ТекущиеДанные.Количество Цикл  
			СписокВыбора.Добавить(Инд);
		КонецЦикла;	
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораКоличества", ЭтотОбъект, Элементы.ПродуктыКПереносу);
		ПоказатьВыборИзМеню(ОписаниеОповещения, СписокВыбора);
		Возврат;
		
	КонецЕсли;
	
	ВернутьВТекущуюЗаявкуНаСервере();	
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 1807 ---

&НаКлиенте
Процедура ПеренестиВРазделение(Команда) //rarus vikhle 28.09.2021 mt 18076 +++
	
	ТекущиеДанные = Элементы.СоставТекущейЗаявки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбрана строка к переносу'"),, "СписокПродуктов");
		Возврат;		
	КонецЕсли;	
		
	Если Не Дилер.Пустая() Тогда
		ВидДилера = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Дилер,"ВидДилера");
		КолонкаДатыПродажи = ?(ВидДилера = ПредопределенноеЗначение("Перечисление.Scan_ВидыДилеров.Собственный"), "ДатаПродажиКлиенту", "ДатаПродажиДилеру");
		Если НЕ ТекущиеДанные[КолонкаДатыПродажи] = Дата(1,1,1) Тогда
			ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи, нельзя перенести в другую заявку.'"),,,,, ТекущиеДанные.Продукт);
			Возврат;
		КонецЕсли;	
	ИначеЕсли НЕ ТекущиеДанные.ДатаПродажиДилеру = Дата(1,1,1) ИЛИ НЕ ТекущиеДанные.ДатаПродажиКлиенту = Дата(1,1,1) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнен дилер, нельзя определить дату продажи, продукт нельзя перенести в другую заявку'"));
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") 
		И ТекущиеДанные.Количество > 1 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Выберите количество драфтов для переноса'"));
		
		СписокВыбора = Новый СписокЗначений;
		Для Инд = 1 По ТекущиеДанные.Количество Цикл  
			СписокВыбора.Добавить(Инд);
		КонецЦикла;	
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораКоличества",ЭтотОбъект, Элементы.СоставТекущейЗаявки);
		ПоказатьВыборИзМеню(ОписаниеОповещения, СписокВыбора);
		
		Возврат;
	КонецЕсли;	
	
	ПеренестиВРазделениеНаСервере();	
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 18076 ---

&НаКлиенте
Процедура УстранитьПревышениеПоЛимитам(Команда) //rarus vikhle 28.09.2021 mt 18076
	
	Если ПродуктыКПереносу.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаАвтоматическогоПереноса", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, 
						Нстр("ru = 'В таблице ""Продукты к переносу"" есть строки. Восстановить по умолчанию перед автоматическим переносом?'"), 
						РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;	
	КонецЕсли;	
	
	УстранитьПревышениеПоЛимитамНаСервере();	
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 18076 ---

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьДопустимыеРолиДляЗаменыДрафтов()
	//rarus vikhle 03.09.2020 mt 16181 +++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РолиИсполнителей.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.РолиИсполнителей КАК РолиИсполнителей
	               |ГДЕ
	               |	(РолиИсполнителей.Код = &КодРолиСотрудникОППиУП
	               |	И РолиИсполнителей.Наименование = &НаименованиеРолиСотрудникОППиУП)
	               |	ИЛИ (РолиИсполнителей.Код = &КодРолиРуководительОППиУП
	               |	И РолиИсполнителей.Наименование = &НаименованиеРолиРуководительОППиУП)";
	Запрос.УстановитьПараметр("КодРолиСотрудникОППиУП","000000005");
	Запрос.УстановитьПараметр("НаименованиеРолиСотрудникОППиУП","Сотрудник отдела планирования продаж и управления продуктом");
	Запрос.УстановитьПараметр("КодРолиРуководительОППиУП","000000013");
	Запрос.УстановитьПараметр("НаименованиеРолиРуководительОППиУП","Руководитель ОПП и УП");
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	//rarus vikhle 03.09.2020 mt 16181 ---	
КонецФункции

//rarus vikhle 06.08.2021 АПК/17637 закомментировал +++ 
//&НаКлиенте
//Процедура РассчитатьКрайнююДатуОплаты()
//	ТекущиеДанные = Элементы.УсловияОплаты.ТекущиеДанные;
//	//rarus vikhle 01.10.2020 mt 16181 +++
//	// rarus tenkam 08.04.2021 mantis 17523 +++
//	//Если НЕ ТекущийДоговор.Пустая() Тогда
//		//ДатаНачалаДоговора = ПолучитьДатуНачалаПервогоДоговора(ТекущийДоговор);
//		
//		//rarus vikhle 23.06.2021 m 17637 +++
//		//ДатаНачалаДоговора = НачалоДня(ТекущаяДата());
//		//rarus vikhle 28.06.2021 АПК +++
//		//ДатаНачалаДоговора = ?(ТекущийДоговор.Пустая(), Дата(1,1,1), НачалоДня(ТекущаяДата()));
//		ДатаНачалаДоговора = ?(ТекущийДоговор.Пустая(), Дата(1,1,1), НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса()));
//		//rarus vikhle 28.06.2021 АПК ---
//		//rarus vikhle 23.06.2021 m 17637 ---
//		// rarus tenkam 08.04.2021 mantis 17523 ---
//		//ТекущиеДанные.КрайняяДатаОплаты = ТекущиеДанные.ДатаНачалаОтсчетаАванса + ТекущиеДанные.СрокОплатыАванса * 60*60*24;
//		Если ЗначениеЗаполнено(ДатаНачалаДоговора) Тогда
//			// rarus tenkam 08.04.2021 mantis 17523 +++
//			//ТекущиеДанные.КрайняяДатаОплаты = ДатаНачалаДоговора + ТекущиеДанные.СрокОплатыАванса * 60*60*24;
//			ТекущиеДанные.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора, ТекущиеДанные.СрокОплатыАванса);
//			// rarus tenkam 08.04.2021 mantis 17523 ---
//		Иначе
//	 		ТекущиеДанные.КрайняяДатаОплаты = Дата(1,1,1);
//		КонецЕсли;
//	//КонецЕсли; // rarus tenkam 08.04.2021 mantis 17523 +
//	//rarus vikhle 01.10.2020 mt 16181  ---
//КонецПроцедуры
//rarus vikhle 06.08.2021 АПК/17637 ---

//rarus vikhle 03.08.2021 17637 +++ Закомментировал
//rarus vikhle 28.06.2021 АПК +++
//&НаСервере
//Функция ПроверитьСпециальныеУсловия(СУ)
//	
//	//ИменаКолонок = "ПроцентОплаты,ДатаНачалаОтсчетаАванса,СрокОплатыАванса,КрайняяДатаОплаты,ВидОплаты";
//	ИменаКолонок = "ВидОплаты,ПроцентОплаты,СрокОплатыАванса,КрайняяДатаОплаты,Сумма,РасчетДатыОплаты"; //rarus vikhle 02.10.2020 mt 16181
//	Если Элементы.СтраницаУсловияОплаты.Видимость Тогда
//		Возврат ОбщегоНазначения.КоллекцииИдентичны(СУ.УсловияОплаты,УсловияОплаты,ИменаКолонок);		
//	Иначе	
//		Возврат ОбщегоНазначения.КоллекцииИдентичны(СУ.УсловияОплаты,ТекущееСоглашениеОПоставке.УсловияОплаты,ИменаКолонок);	
//	КонецЕсли;	
//КонецФункции
//rarus vikhle 28.06.2021 АПК ---
//rarus vikhle 03.08.2021 17637 ---

&НаСервере
Функция ЗаполнитьТаблицуСоставляющих(СтрокаТаблицы, СсылкаНаСоглашение, ТекущийПользователь, Знач ДокументУстановкиЦен = Неопределено) //rarus vikhle 14.10.2021 m 18292 + ДокументУстановкиЦен 
	ТабРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(СтрокаТаблицы.Продукт, ДокументУстановкиЦен); //rarus vikhle 14.10.2021 m 18292 + ДокументУстановкиЦен
	    		
	// Установка Базовой цены
	СтрокаСоставляющей 				= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаДилера"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС 	= СтрокаТаблицы.ЦенаСНДС; //rarus vikhle 08.09.2020 mt 16181
	СтрокаСоставляющей.ЦенаБезНДС 	= СтрокаТаблицы.ЦенаБезНДС; //rarus vikhle 08.09.2020 mt 16181
	СтрокаСоставляющей.СтавкаНДС 	= СсылкаНаСоглашение.СтавкаНДС;
	СтрокаСоставляющей.Пользователь = ТекущийПользователь;
	СтрокаСоставляющей.Источник 	= СсылкаНаСоглашение; 
	
	// Установка СУ и цены для клиента
	Если ЗначениеЗаполнено(СтрокаТаблицы.СпециальныеУсловия) Тогда
		СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.СпециальныеУсловия.СпецDealerNet;//rarus vikhle 17.12.2020 mt 16181 заменил на согласованную
		СтрокаСоставляющей.ЦенаБезНДС 		= СтрокаТаблицы.СпециальныеУсловия.ЦенаБезНДС;
		СтрокаСоставляющей.СтавкаНДС 		= СтрокаТаблицы.СпециальныеУсловия.СтавкаНДС;
		СтрокаСоставляющей.Пользователь		= ТекущийПользователь;
		СтрокаСоставляющей.Источник			= СсылкаНаСоглашение;
		
		СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.СпециальныеУсловия.СпецCustomerPrice;//rarus vikhle 17.12.2020 mt 16181 заменил на согласованную
		СтрокаСоставляющей.ЦенаБезНДС		= СтрокаТаблицы.СпециальныеУсловия.ЦенаДляКлиентаБезНДС;//rarus vikhle 17.12.2020 mt 16181
		СтрокаСоставляющей.СтавкаНДС 		= СтрокаТаблицы.СпециальныеУсловия.СтавкаНДС;
		СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
		СтрокаСоставляющей.Источник 		= СсылкаНаСоглашение;
	Иначе
		СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= 0;
		СтрокаСоставляющей.ЦенаБезНДС 		= 0;
		СтрокаСоставляющей.Пользователь		= ТекущийПользователь;
		СтрокаСоставляющей.Источник			= СсылкаНаСоглашение;
		
		СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice"),"СоставляющаяЦены");
		СтрокаСоставляющей.ЦенаСНДС 		= 0;
		СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
		СтрокаСоставляющей.Источник 		= СсылкаНаСоглашение;	
	КонецЕсли;	
	
	// rarus tenkam 02.04.2021 mantis 17419 +++
	// Установка цены по валютной оговорке
	СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаПоВалютнойОговорке"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.ЦенаПоВалютнойОговорке;
	СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
	СтрокаСоставляющей.Источник 		= СсылкаНаСоглашение;
	// rarus tenkam 02.04.2021 mantis 17419 ---
		
	// Установка % драйва
	СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ПроцентДрайва"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.ПроцентДрайв;
	СтрокаСоставляющей.ЦенаБезНДС 		= СтрокаТаблицы.ПроцентДрайв;	
	СтрокаСоставляющей.СтавкаНДС 		= СсылкаНаСоглашение.СтавкаНДС;
	СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
	СтрокаСоставляющей.Источник 		= СсылкаНаСоглашение;
	
	
	// Установка лог. затрат
	СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЛогистическиеЗатраты"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.ЛогистическиеЗатратыСумма;
	СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
	СтрокаСоставляющей.Источник 		= СсылкаНаСоглашение;
	СтрокаСоставляющей.Комментарий 		= СтрокаТаблицы.КомментарийЛогистическиеЗатраты;	// rarus tenkam 26.04.2021 mantis 17468 +
	
	
	// Установка компенсации
	СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.Компенсация"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.КомпенсацииСумма;
	СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
	СтрокаСоставляющей.Источник 		= СсылкаНаСоглашение;
	СтрокаСоставляющей.Комментарий 		= СтрокаТаблицы.КомментарийКомпенсации;	// rarus tenkam 26.04.2021 mantis 17468 +
	
	// rarus tenkam 23.04.2021 mantis 17648 +++
	// Установка изменения спецификации по инициативе завода
	СтрокаСоставляющей 					= ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ИзменениеСпецификацииПоИнициативеЗавода"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС 		= СтрокаТаблицы.ИзменениеСпецификацииПоИнициативеЗаводаСумма;
	СтрокаСоставляющей.Пользователь 	= ТекущийПользователь;
	СтрокаСоставляющей.Источник 		= СсылкаНаСоглашение;
	СтрокаСоставляющей.Комментарий 		= СтрокаТаблицы.КомментарийИзменениеСпецификации;
	// rarus tenkam 23.04.2021 mantis 17648 ---
	
	Возврат ТабРучныхСоставляющих;
КонецФункции

&НаСервере
Процедура ОбработатьУдаленныеПродукты(ТаблицаИзделийОбработки,ТаблицаИзделийСоглашения, ЗарезервироватьУдаленные = Ложь) //rarus vikhle 04.03.2022 m 18956 + ЗарезервироватьУдаленные
	ДатаРасторженияПоПродукту = ТекущаяДата();	// rarus tenkam 05.11.2020 mantis 16759 +
	ВидПродуктаАвтобус = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус"); //rarus vikhle 13.05.2021 mt 17733
	
	//Отмена документов установки цен для продуктов, удаленных из новой версии заявки, которые не пересены в другие заявки
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ТаблицаИзделийСоглашения.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
	               |ПОМЕСТИТЬ УдаленныеПродукты
	               |ИЗ
	               |	&ТаблицаИзделийСоглашения КАК ТаблицаИзделийСоглашения
	               |ГДЕ
	               |	НЕ ТаблицаИзделийСоглашения.Продукт В (&ТаблицаИзделийОбработки)
	               |	И ТаблицаИзделийСоглашения.Продукт ССЫЛКА Справочник.Scan_Изделия
				   //rarus vikhle 04.10.2021 mt 18076 +++
				   |	И НЕ ТаблицаИзделийСоглашения.Продукт В (&ПродуктыКПереносу)
				   //rarus vikhle 04.10.2021 mt 18076 ---
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПродуктыТекущегоСоглашения.Продукт КАК Продукт,
	               |	ПродуктыТекущегоСоглашения.Продукт.МестоПередачи КАК МестоПередачи,
	               |	ПродуктыТекущегоСоглашения.Продукт.ЗапрашиваемоеМестоПередачи КАК ЗапрашиваемоеМестоПередачи,
	               |	ПродуктыТекущегоСоглашения.Продукт.СкладПродажи КАК СкладПродажи,
	               |	ПродуктыТекущегоСоглашения.Продукт.ЗапретИзмененияСкладаПродажи КАК ЗапретИзмененияСкладаПродажи,
	               |	ПродуктыТекущегоСоглашения.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта,
	               |	ПродуктыТекущегоСоглашения.Продукт.БУ КАК БУ,
				   |	ПродуктыТекущегоСоглашения.Продукт.КомментарийДилера КАК КомментарийДилера,
				   |	ПродуктыТекущегоСоглашения.Продукт.СоглашениеОПоставке КАК СоглашениеОПоставке,
				   |	ПродуктыТекущегоСоглашения.Продукт.КлиентСоглашенияОПоставке КАК КлиентСоглашенияОПоставке,
				   |	ПродуктыТекущегоСоглашения.Продукт.СОП КАК СОП
	               |ИЗ
	               |	УдаленныеПродукты КАК ПродуктыТекущегоСоглашения";
	Запрос.УстановитьПараметр("ТаблицаИзделийСоглашения",ТаблицаИзделийСоглашения);
	Запрос.УстановитьПараметр("ТаблицаИзделийОбработки",ТаблицаИзделийОбработки);
	Запрос.УстановитьПараметр("ПродуктыКПереносу", ОбщегоНазначения.ВыгрузитьКолонку(ПродуктыКПереносу, "Продукт")); //rarus vikhle 04.10.2021 mt 18076 
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НужноЗаписатьПродукт = Ложь; //rarus vikhle 25.01.2021 mt 16981
		
		Документы.Scan_УстановкаПлановыхЦенПродукта.ОтменитьДокументУстановкиЦенПоПродукту(Выборка.Продукт);
		МенеджерЗаписи 						= РегистрыСведений.Scan_СоставСоглашенийОПоставке.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период 				= ТекущаяДатаСеанса();
		МенеджерЗаписи.Изделие 				= Выборка.Продукт;
		МенеджерЗаписи.СоглашениеОПоставке 	= Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
		МенеджерЗаписи.Записать();	
		
		// rarus tenkam 05.11.2020 mantis 16759 +++
		РегистрыСведений.Scan_OrderIntake.ЗаписатьДатуРасторжения(Выборка.Продукт, ДатаРасторженияПоПродукту);
		// rarus tenkam 05.11.2020 mantis 16759 ---
		
		// rarus agar 20.09.2021 17739 ++
		//РегистрыСведений.Scan_РасчетOrderIntake.ЗаписатьОтменуОплаты(ТекущаяДатаСеанса(),, Выборка.Продукт);
		// rarus agar 20.09.2021 17739 --
		
		//rarus vikhle 21.07.2021 mt 17933 +++
		// Очистка DDS для удаленных продуктов
		РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Выборка.Продукт.ЗаказНаЗавод,
																						Перечисления.Scan_КлючевыеДаты.DDS,Дата(1,1,1));
		// Удаление из очереди DD2/DDS информера																				
		РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(Выборка.Продукт.ЗаказНаЗавод);
		//rarus vikhle 21.07.2021 mt 17933 ---
		//Rarus bonmak 04.02.2022 18590 ++
		// Очистка Внутренний резерв дилера для удаленных продуктов
		РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Выборка.Продукт,
																						Перечисления.Scan_КлючевыеДаты.ВнутреннийРезервДилера,Дата(1,1,1));
		//Rarus bonmak 04.02.2022 18590 --
		//rarus vikhle 13.05.2021 mt 17733 +++
		//Для удаленных продуктов БУ или с видом Автобус очистим дату DD
		Если Выборка.ВидПродукта = ВидПродуктаАвтобус ИЛИ (Выборка.БУ И ЗаявкаНаБУПродукты) Тогда  
			РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Выборка.Продукт.ЗаказНаЗавод,Перечисления.Scan_КлючевыеДаты.DD,Дата(1,1,1));	
		КонецЕсли;	
		//rarus vikhle 13.05.2021 mt 17733 ---
		
		// Очистка себестоимости продуктов в регистре "Плановая себестоимость продуктов"
		// rarus vikhle 17.01.2022 m 18269 +++
		РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(Выборка.Продукт, 0);
		//РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.УдалитьЗаписьПоПродукту(Выборка.Продукт); //rarus vikhle 21.12.2021 m 18269 +++ 
		// rarus vikhle 17.01.2022 m 18269 ---
		
		Если Выборка.ЗапрашиваемоеМестоПередачи <> Справочники.Scan_Склады.ПустаяСсылка() 
			ИЛИ Выборка.МестоПередачи <> Справочники.Scan_Склады.ПустаяСсылка() 
			ИЛИ (Выборка.СкладПродажи <> Справочники.Scan_Склады.ПустаяСсылка() 
			И НЕ Выборка.ЗапретИзмененияСкладаПродажи)	//rarus vikhle 04.02.2021 mt 16981 
			ИЛИ УстановитьСтатусDELETED // rarus tenkam 15.04.2021 mantis 17519 + 
			ИЛИ Выборка.КомментарийДилера <> "" //rarus vikhle 09.11.2021 m 18485	 
			ИЛИ НЕ Выборка.СоглашениеОПоставке.Пустая() //rarus vikhle 14.02.2022 m 17739 +++
			ИЛИ НЕ Выборка.КлиентСоглашенияОПоставке.Пустая()
			ИЛИ НЕ Выборка.СОП.Пустая() Тогда //rarus vikhle 14.02.2022 m 17739
				НужноЗаписатьПродукт = Истина;
		КонецЕсли;	
		
		Если НужноЗаписатьПродукт Тогда
			ПродуктОбъект = Выборка.Продукт.ПолучитьОбъект();
			//rarus vikhle 08.02.2021 mt 16981 +++ Для записи источника и статуса в регистре история продуктов
			ПродуктОбъект.ДополнительныеСвойства.Вставить("Источник",НовоеСоглашениеОПоставке);
			ПродуктОбъект.ДополнительныеСвойства.Вставить("Статус",НовоеСоглашениеОПоставке.Статус);
			//rarus vikhle 08.02.2021 mt 16981 ---
			ПродуктОбъект.МестоПередачи = Справочники.Scan_Склады.ПустаяСсылка();
			ПродуктОбъект.ЗапрашиваемоеМестоПередачи = Справочники.Scan_Склады.ПустаяСсылка();
			//rarus vikhle 04.02.2021 mt 16981 +++
			Если НЕ ПродуктОбъект.ЗапретИзмененияСкладаПродажи Тогда
				ПродуктОбъект.СкладПродажи = Справочники.Scan_Склады.ПустаяСсылка(); 	
			КонецЕсли;	
			//rarus vikhle 04.02.2021 mt 16981 ---
			
			ПродуктОбъект.КомментарийДилера = ""; // rarus vikhle 09.11.2021 m 18485
			
			//rarus vikhle 14.02.2022 m 17739 +++
			ПродуктОбъект.СоглашениеОПоставке		= Справочники.Scan_СоглашенияОПоставке.ПустаяСсылка();
			ПродуктОбъект.КлиентСоглашенияОПоставке	= Справочники.Scan_Контрагенты.ПустаяСсылка();   
			ПродуктОбъект.СОП						= Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
			//rarus vikhle 14.02.2022 m 17739 ---
			
			// rarus tenkam 15.04.2021 mantis 17519 +++	
			Если УстановитьСтатусDELETED Тогда
				Если Не Scan_ПраваИНастройки.Scan_Право("РазрешатьИзменениеСтатусовПродуктов") Тогда
					ВывестиСообщениеПол(Нстр("ru = 'Нет права на изменение локальных статусов продуктов.'"));
				Иначе
					ПродуктОбъект.ЛокальныйСтатусПродукта = ПредопределенноеЗначение("Справочник.Scan_ЛокальныеСтатусыПродуктов.DELETED"); 	
				КонецЕсли;
			КонецЕсли;	
			// rarus tenkam 15.04.2021 mantis 17519 ---
			
			Попытка 
				ПродуктОбъект.Записать();
				ВывестиСообщениеПол("У продукта %1 успешно обновлены склады",,,,,Выборка.Продукт);
			Исключение
				ВывестиСообщениеПол("У продукта %1 произошла ошибка при записи продукта",,,,,Выборка.Продукт);
				ЗаписьЖурналаРегистрации("Изменение складов продукта",УровеньЖурналаРегистрации.Ошибка,,
										Выборка.Продукт,"Произошла ошибка при записи продукта");						
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	//rarus vikhle 26.01.2021 mt 16981 +++
	Если НЕ РезультатЗапроса.Пустой() И Scan_ПраваИНастройки.Scan_Право("ИспользоватьМеханизмШаблоновДляОтправкиПисем") Тогда
		РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонПисьмаПриРасторженииЗаявкиНаСОППоПродукту",НовоеСоглашениеОПоставке);	
	КонецЕсли; 
	//rarus vikhle 26.01.2021 mt 16981 ---
	
	//rarus vikhle 04.03.2022 m 18956 +++
	Если ЗарезервироватьУдаленные Тогда
		УдаленныеПродукты = РезультатЗапроса.Выгрузить();
		Справочники.Scan_СоглашенияОПоставке.СоздатьЗаявкуНаСОПSRU(ТекущееСоглашениеОПоставке, УдаленныеПродукты, Истина);
	КонецЕсли;	
	//rarus vikhle 04.03.2022 m 18956 ---
	
	// rarus agar 29.12.2021 17739 ++
	АльтернативныйРасчет = Scan_ПраваИНастройки.Scan_Право("ИспользоватьАльтернативныйРасчетДатOrderIntake");
	Если АльтернативныйРасчет Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("П1", ТаблицаИзделийСоглашения);
		Запрос.УстановитьПараметр("П2", ТаблицаИзделийОбработки);
		Запрос.УстановитьПараметр("П3", ОбщегоНазначения.ВыгрузитьКолонку(ПродуктыКПереносу, "Продукт"));
		Запрос.Текст = "ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаИзделийСоглашения.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
		|ПОМЕСТИТЬ ВТ_ТаблицаИзделийСоглашения
		|ИЗ
		|	&П1 КАК ТаблицаИзделийСоглашения
		|ГДЕ
		|	ТаблицаИзделийСоглашения.Продукт ССЫЛКА Справочник.Scan_Изделия
		|	И НЕ ТаблицаИзделийСоглашения.Продукт В (&П2)
		|	И НЕ ТаблицаИзделийСоглашения.Продукт В (&П3)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаИзделийСоглашения.Продукт КАК Продукт,
		|	ВТ_ТаблицаИзделийСоглашения.Продукт.ЗаказНаЗавод КАК ЗаказНаЗавод
		|ИЗ
		|	ВТ_ТаблицаИзделийСоглашения КАК ВТ_ТаблицаИзделийСоглашения";
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Scan_OrderIntake.ЗарегистрироватьРасторжение(ТекущаяДатаСеанса(), Выборка.ЗаказНаЗавод, Выборка.Продукт);
			Scan_OrderIntake.ЗарегистрироватьОтменуОплаты(ТекущаяДатаСеанса(), Выборка.ЗаказНаЗавод, Выборка.Продукт);
		КонецЦикла;
	КонецЕсли;
	// rarus agar 29.12.2021 17739 --
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПродуктыТекущейВерсии(Заявка, ТаблицаОбработки = Неопределено, ТаблицаИзделийСоглашения = Неопределено) //rarus vikhle 07.10.2021 mt 18076 + параметр Заявка
	//Обработаем продукты, которые были в заявке до вызова корректировки у которых изменились склады
	//rarus vikhle 22.01.2021 mt 16981 +++
	
	Если ТаблицаОбработки = Неопределено Тогда
		ТаблицаОбработки = ПолучитьТаблицуПродуктовОбработки();
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ТаблицаОбработки.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
	               |	ТаблицаОбработки.СкладОтгрузки КАК СкладОтгрузки,
	               |	ТаблицаОбработки.МестоПередачи КАК МестоПередачи,
	               |	ТаблицаОбработки.СкладПродажи КАК СкладПродажи
	               |ПОМЕСТИТЬ ТаблицаОбработки
	               |ИЗ
	               |	&ТаблицаОбработки КАК ТаблицаОбработки
	               |ГДЕ
	               |	ТаблицаОбработки.Продукт ССЫЛКА Справочник.Scan_Изделия
	               |"+?(НЕ ТаблицаИзделийСоглашения = Неопределено, " И ТаблицаОбработки.Продукт В(&ТаблицаИзделийСоглашения)","")+"
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаОбработки.Продукт КАК Продукт,
	               |	ТаблицаОбработки.СкладОтгрузки КАК СкладОтгрузки,
	               |	ТаблицаОбработки.МестоПередачи КАК МестоПередачи,
	               |	ТаблицаОбработки.СкладПродажи КАК СкладПродажи
	               |ИЗ
	               |	ТаблицаОбработки КАК ТаблицаОбработки
	               |ГДЕ
	               |	(НЕ ТаблицаОбработки.СкладОтгрузки = ТаблицаОбработки.Продукт.ЗапрашиваемоеМестоПередачи
	               |			ИЛИ НЕ ТаблицаОбработки.СкладПродажи = ТаблицаОбработки.Продукт.СкладПродажи
	               |			ИЛИ НЕ ТаблицаОбработки.МестоПередачи = ТаблицаОбработки.Продукт.МестоПередачи)";
	Запрос.УстановитьПараметр("ТаблицаОбработки",РеквизитФормыВЗначение("СписокПродуктов"));			   
	Если НЕ ТаблицаИзделийСоглашения = Неопределено Тогда 
		Запрос.УстановитьПараметр("ТаблицаИзделийСоглашения",ТаблицаИзделийСоглашения);
	КонецЕсли;	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПродуктОбъект = Выборка.Продукт.ПолучитьОбъект();
		//rarus vikhle 08.02.2021 mt 16981 +++ Для записи источника и статуса в регистре история продуктов
		//rarus vikhle 07.10.2021 mt 18076 +++
		//АктуальнаяЗаявка = ?(НовоеСоглашениеОПоставке.Пустая(),ТекущееСоглашениеОПоставке,НовоеСоглашениеОПоставке);
		//ПродуктОбъект.ДополнительныеСвойства.Вставить("Источник",АктуальнаяЗаявка);
		//ПродуктОбъект.ДополнительныеСвойства.Вставить("Статус",АктуальнаяЗаявка.Статус);
		ПродуктОбъект.ДополнительныеСвойства.Вставить("Источник", Заявка);
		ПродуктОбъект.ДополнительныеСвойства.Вставить("Статус", Заявка.Статус);
		//rarus vikhle 07.10.2021 mt 18076 ---
		//rarus vikhle 08.02.2021 mt 16981 ---
		Если ПродуктОбъект.ЗапрашиваемоеМестоПередачи <> Выборка.СкладОтгрузки Тогда
			ПродуктОбъект.ЗапрашиваемоеМестоПередачи   = Выборка.СкладОтгрузки;
		КонецЕсли;	
		Если ПродуктОбъект.МестоПередачи <> Выборка.МестоПередачи Тогда
			ПродуктОбъект.МестоПередачи  = Выборка.МестоПередачи;
		КонецЕсли;
		Если ПродуктОбъект.СкладПродажи <> Выборка.СкладПродажи Тогда
			ПродуктОбъект.СкладПродажи  = Выборка.СкладПродажи;
		КонецЕсли;
		
		Попытка 
			ПродуктОбъект.Записать();
			ВывестиСообщениеПол("У продукта %1 успешно обновлены склады",,,,,Выборка.Продукт);
		Исключение
			ВывестиСообщениеПол("У продукта %1 произошла ошибка при записи продукта:" + ОписаниеОшибки(),,,,,Выборка.Продукт);
			ЗаписьЖурналаРегистрации("Изменение складов продукта",УровеньЖурналаРегистрации.Ошибка,,
									Выборка.Продукт,"Произошла ошибка при записи продукта");						
		КонецПопытки;
	КонецЦикла;
	//rarus vikhle 22.01.2021 mt 16981 ---
КонецПроцедуры

&НаСервере
Процедура ОбработатьДобавленныеПродукты(ТаблицаИзделийОбработки, ТаблицаИзделийСоглашения, Заявка) //rarus vikhle 07.10.2021 mt 18076 + параметр Заявка
	
	//rarus vikhle 13.05.2021 mt 17733 +++
	ВидПродуктаАвтобус = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус");
	СтруктураРеквизитовДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НовоеСоглашениеОПоставке,"Договор,Договор.ДатаНачала"); //rarus vikhle 07.10.2021 mt 18076
	//rarus vikhle 13.05.2021 mt 17733 ---
	
	Запрос = Новый Запрос;
	//rarus vikhle 29.03.2021 mt 17520 +++
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	//rarus vikhle 29.03.2021 mt 17520 ---
	
	//rarus vikhle 02.11.2020 mt 16181 +++
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ВЫРАЗИТЬ(ТаблицаИзделийСоглашения.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
	//               |ПОМЕСТИТЬ ТаблицаИзделийСоглашения
	//               |ИЗ
	//               |	&ТаблицаИзделийСоглашения КАК ТаблицаИзделийСоглашения
	//               |ГДЕ
	//               |	ТаблицаИзделийСоглашения.Продукт ССЫЛКА Справочник.Scan_Изделия
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ВЫРАЗИТЬ(ТаблицаИзделийОбработки.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
	//               |ПОМЕСТИТЬ ТаблицаИзделийОбработки
	//               |ИЗ
	//               |	&ТаблицаИзделийОбработки КАК ТаблицаИзделийОбработки
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ТаблицаИзделийОбработки.Продукт КАК Продукт,
	//               |	ТаблицаИзделийОбработки.Продукт.IDПродуктаКП КАК IDПродуктаКП
	//               |ПОМЕСТИТЬ ДобавленныеИзделия
	//               |ИЗ
	//               |	ТаблицаИзделийОбработки КАК ТаблицаИзделийОбработки
	//               |ГДЕ
	//               |	НЕ ТаблицаИзделийОбработки.Продукт В
	//               |				(ВЫБРАТЬ
	//               |					ТаблицаИзделийСоглашения.Продукт
	//               |				ИЗ
	//               |					ТаблицаИзделийСоглашения КАК ТаблицаИзделийСоглашения)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ДобавленныеИзделия.Продукт КАК Продукт,
	//               |	Scan_СпецификацииПродуктов.Ссылка КАК Спецификация,
	//               |	ДобавленныеИзделия.IDПродуктаКП КАК IDПродуктаКП
	//               |ПОМЕСТИТЬ СпецификацииПродуктов
	//               |ИЗ
	//               |	ДобавленныеИзделия КАК ДобавленныеИзделия
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_СпецификацииПродуктов КАК Scan_СпецификацииПродуктов
	//               |		ПО ДобавленныеИзделия.Продукт = Scan_СпецификацииПродуктов.Изделие
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	СпецификацииПродуктов.Продукт КАК Продукт,
	//               |	СпецификацииПродуктов.Спецификация КАК Спецификация,
	//               |	СпецификацииПродуктов.IDПродуктаКП КАК IDПродуктаКП,
	//               |	Scan_КоммерческиеПредложенияПродуктыКП.Спецификация КАК СпецификацияКП,
	//               |	ВЫБОР
	//               |		КОГДА Scan_ВерсииБазовыхСпецификаций.ВидСпецификации = ЗНАЧЕНИЕ(Справочник.Scan_ВидыСпецификацийПродуктов.SPORTСпецификация)
	//               |			ТОГДА Scan_ВерсииБазовыхСпецификаций.Ссылка
	//               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Scan_ВерсииБазовыхСпецификаций.ПустаяСсылка)
	//               |	КОНЕЦ КАК ВерсияБазовойСпецификацииКП,
	//               |	ВЫБОР
	//               |		КОГДА Scan_ВерсииБазовыхСпецификаций1.ВидСпецификации = ЗНАЧЕНИЕ(Справочник.Scan_ВидыСпецификацийПродуктов.SPORTСпецификация)
	//               |			ТОГДА Scan_ВерсииБазовыхСпецификаций1.Ссылка
	//               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Scan_ВерсииБазовыхСпецификаций.ПустаяСсылка)
	//               |	КОНЕЦ КАК ВерсияБазовойСпецификации
	//               |ИЗ
	//               |	СпецификацииПродуктов КАК СпецификацииПродуктов
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_КоммерческиеПредложения.ПродуктыКП КАК Scan_КоммерческиеПредложенияПродуктыКП
	//               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ВерсииБазовыхСпецификаций КАК Scan_ВерсииБазовыхСпецификаций
	//               |			ПО Scan_КоммерческиеПредложенияПродуктыКП.Спецификация = Scan_ВерсииБазовыхСпецификаций.Владелец
	//               |		ПО СпецификацииПродуктов.IDПродуктаКП = Scan_КоммерческиеПредложенияПродуктыКП.IDПродуктаКП
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ВерсииБазовыхСпецификаций КАК Scan_ВерсииБазовыхСпецификаций1
	//               |		ПО СпецификацииПродуктов.Спецификация = Scan_ВерсииБазовыхСпецификаций1.Владелец
	//               |ГДЕ
	//               |	Scan_КоммерческиеПредложенияПродуктыКП.Ссылка = &КП
	//               |ИТОГИ
	//               |	МАКСИМУМ(Спецификация),
	//               |	МАКСИМУМ(СпецификацияКП),
	//               |	МАКСИМУМ(ВерсияБазовойСпецификацииКП),
	//               |	МАКСИМУМ(ВерсияБазовойСпецификации)
	//               |ПО
	//               |	Продукт";
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ТаблицаИзделийСоглашения.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
	               |ПОМЕСТИТЬ ТаблицаИзделийСоглашения
	               |ИЗ
	               |	&ТаблицаИзделийСоглашения КАК ТаблицаИзделийСоглашения
	               |ГДЕ
	               |	ТаблицаИзделийСоглашения.Продукт ССЫЛКА Справочник.Scan_Изделия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ТаблицаИзделийОбработки.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
	               |	ТаблицаИзделийОбработки.СкладОтгрузки КАК СкладОтгрузки,
	               |	ТаблицаИзделийОбработки.СкладПродажи КАК СкладПродажи,
	               |	ТаблицаИзделийОбработки.МестоПередачи КАК МестоПередачи
	               |ПОМЕСТИТЬ ТаблицаИзделийОбработки
	               |ИЗ
	               |	&ТаблицаИзделийОбработки КАК ТаблицаИзделийОбработки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаИзделийОбработки.Продукт КАК Продукт,
	               |	ТаблицаИзделийОбработки.Продукт.НомерКП КАК НомерКП,
	               |	ТаблицаИзделийОбработки.СкладОтгрузки КАК СкладОтгрузки,
	               |	ТаблицаИзделийОбработки.СкладПродажи КАК СкладПродажи,
	               |	ТаблицаИзделийОбработки.МестоПередачи КАК МестоПередачи
	               |ПОМЕСТИТЬ ДобавленныеИзделия
	               |ИЗ
	               |	ТаблицаИзделийОбработки КАК ТаблицаИзделийОбработки
	               |ГДЕ
	               |	НЕ ТаблицаИзделийОбработки.Продукт В
	               |				(ВЫБРАТЬ
	               |					ТаблицаИзделийСоглашения.Продукт
	               |				ИЗ
	               |					ТаблицаИзделийСоглашения КАК ТаблицаИзделийСоглашения)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДобавленныеИзделия.Продукт КАК Продукт,
	               |	Scan_СпецификацииПродуктов.Ссылка КАК Спецификация,
	               |	ДобавленныеИзделия.НомерКП КАК НомерКП,
	               |	ДобавленныеИзделия.СкладОтгрузки КАК СкладОтгрузки,
	               |	ДобавленныеИзделия.СкладПродажи КАК СкладПродажи,
	               |	ДобавленныеИзделия.МестоПередачи КАК МестоПередачи
	               |ПОМЕСТИТЬ СпецификацииПродуктов
	               |ИЗ
	               |	ДобавленныеИзделия КАК ДобавленныеИзделия
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_СпецификацииПродуктов КАК Scan_СпецификацииПродуктов
	               |		ПО ДобавленныеИзделия.Продукт = Scan_СпецификацииПродуктов.Изделие
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СпецификацииПродуктов.Продукт КАК Продукт,
	               |	СпецификацииПродуктов.Спецификация КАК Спецификация,
	               |	СпецификацииПродуктов.НомерКП КАК НомерКП,
	               |	Scan_КоммерческиеПредложенияПродуктыКП.Спецификация КАК СпецификацияКП,
	               |	ВЫБОР
	               |		КОГДА Scan_ВерсииБазовыхСпецификаций.ВидСпецификации = ЗНАЧЕНИЕ(Справочник.Scan_ВидыСпецификацийПродуктов.SPORTСпецификация)
	               |			ТОГДА Scan_ВерсииБазовыхСпецификаций.Ссылка
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Scan_ВерсииБазовыхСпецификаций.ПустаяСсылка)
	               |	КОНЕЦ КАК ВерсияБазовойСпецификацииКП,
	               |	ВЫБОР
	               |		КОГДА Scan_ВерсииБазовыхСпецификаций1.ВидСпецификации = ЗНАЧЕНИЕ(Справочник.Scan_ВидыСпецификацийПродуктов.SPORTСпецификация)
	               |			ТОГДА Scan_ВерсииБазовыхСпецификаций1.Ссылка
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Scan_ВерсииБазовыхСпецификаций.ПустаяСсылка)
	               |	КОНЕЦ КАК ВерсияБазовойСпецификации,
	               |	СпецификацииПродуктов.СкладОтгрузки КАК СкладОтгрузки,
	               |	СпецификацииПродуктов.СкладПродажи КАК СкладПродажи,
	               |	СпецификацииПродуктов.МестоПередачи КАК МестоПередачи,
	               |	СпецификацииПродуктов.Продукт.БУ КАК БУ,
	               |	СпецификацииПродуктов.Продукт.ТипПродукта.ВидПродукта КАК ВидПродукта
	               |ИЗ
	               |	СпецификацииПродуктов КАК СпецификацииПродуктов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_КоммерческиеПредложения.ПродуктыКП КАК Scan_КоммерческиеПредложенияПродуктыКП
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ВерсииБазовыхСпецификаций КАК Scan_ВерсииБазовыхСпецификаций
	               |			ПО Scan_КоммерческиеПредложенияПродуктыКП.Спецификация = Scan_ВерсииБазовыхСпецификаций.Владелец
	               |		ПО СпецификацииПродуктов.НомерКП = Scan_КоммерческиеПредложенияПродуктыКП.Ссылка.НомерКП
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ВерсииБазовыхСпецификаций КАК Scan_ВерсииБазовыхСпецификаций1
	               |		ПО СпецификацииПродуктов.Спецификация = Scan_ВерсииБазовыхСпецификаций1.Владелец
				   //rarus bonmak 19.05.2021 17615 ++
				   |СГРУППИРОВАТЬ ПО
				   |	СпецификацииПродуктов.Продукт,
				   |	СпецификацииПродуктов.Спецификация,
				   |	СпецификацииПродуктов.НомерКП,
				   |	Scan_КоммерческиеПредложенияПродуктыКП.Спецификация,
				   |	ВЫБОР
				   |		КОГДА Scan_ВерсииБазовыхСпецификаций.ВидСпецификации = ЗНАЧЕНИЕ(Справочник.Scan_ВидыСпецификацийПродуктов.SPORTСпецификация)
				   |			ТОГДА Scan_ВерсииБазовыхСпецификаций.Ссылка
				   |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Scan_ВерсииБазовыхСпецификаций.ПустаяСсылка)
				   |	КОНЕЦ,
				   |	ВЫБОР
				   |		КОГДА Scan_ВерсииБазовыхСпецификаций1.ВидСпецификации = ЗНАЧЕНИЕ(Справочник.Scan_ВидыСпецификацийПродуктов.SPORTСпецификация)
				   |			ТОГДА Scan_ВерсииБазовыхСпецификаций1.Ссылка
				   |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Scan_ВерсииБазовыхСпецификаций.ПустаяСсылка)
				   |	КОНЕЦ,
				   |	СпецификацииПродуктов.СкладОтгрузки,
				   |	СпецификацииПродуктов.СкладПродажи,
				   |	СпецификацииПродуктов.МестоПередачи,
				   |	СпецификацииПродуктов.Продукт.БУ,
				   |	СпецификацииПродуктов.Продукт.ТипПродукта.ВидПродукта
				   //rarus bonmak 19.05.2021 17615 --
				   //|ГДЕ
	               //|	Scan_КоммерческиеПредложенияПродуктыКП.Ссылка = &КП
	               |ИТОГИ
	               |	МАКСИМУМ(Спецификация),
	               |	МАКСИМУМ(СпецификацияКП),
	               |	МАКСИМУМ(ВерсияБазовойСпецификацииКП),
	               |	МАКСИМУМ(ВерсияБазовойСпецификации),
	               |	МАКСИМУМ(СкладОтгрузки),
	               |	МАКСИМУМ(СкладПродажи),
	               |	МАКСИМУМ(МестоПередачи)
	               |ПО
	               |	Продукт";
	//rarus vikhle 02.11.2020 mt 16181 ---
	Запрос.УстановитьПараметр("ТаблицаИзделийОбработки", ТаблицаИзделийОбработки);	
	Запрос.УстановитьПараметр("ТаблицаИзделийСоглашения", ТаблицаИзделийСоглашения);
	//Запрос.УстановитьПараметр("КП", ТекущееСоглашениеОПоставке.КоммерческоеПредложениеSPORT);// rarus vikhle 22.01.2021 mt 16981
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//rarus vikhle 21.09.2020 mt 16181 +++
	Пока Выборка.Следующий() Цикл
		СпецификацияСсылкаДляЗаписиВПродукт = Справочники.Scan_СпецификацииПродуктов.ПустаяСсылка(); //rarus bonmak 19.05.2021 17615
		Если Выборка.Спецификация = NULL Тогда
			Если ЗначениеЗаполнено(Выборка.СпецификацияКП) Тогда
				НоваяСпецификация = Выборка.СпецификацияКП.Скопировать();
				НоваяСпецификация.Изделие = Выборка.Продукт;
				НоваяСпецификация.Наименование = НоваяСпецификация.Наименование + " " + Выборка.Продукт.Наименование;
				Попытка
					НоваяСпецификация.Записать();
					ВывестиСообщениеПол("Для продукта %1 успешно создана спецификация",,,,,Выборка.Продукт);
					СпецификацияСсылкаДляЗаписиВПродукт = НоваяСпецификация.Ссылка; //rarus bonmak 19.05.2021 17615
				Исключение
					ВывестиСообщениеПол("Произошла ошибка при создании спецификации для продукта %1",,,,,Выборка.Продукт);	
				КонецПопытки;	
					
				Если ЗначениеЗаполнено(Выборка.ВерсияБазовойСпецификацииКП) И ЗначениеЗаполнено(НоваяСпецификация.Ссылка) Тогда
					НоваяВерсияСпецификации = Выборка.ВерсияБазовойСпецификацииКП.Скопировать();
					НоваяВерсияСпецификации.Владелец = НоваяСпецификация.Ссылка;
					Попытка
						НоваяВерсияСпецификации.Записать();
						ВывестиСообщениеПол("Для продукта %1 успешно создана версия базовой спецификации",,,,,Выборка.Продукт);
					Исключение
						ВывестиСообщениеПол("Произошла ошибка при создании версии базовой спецификации для продукта %1",,,,,Выборка.Продукт);
					КонецПопытки;	
						
					СтруктураЗаписи = Новый Структура;
					СтруктураЗаписи.Вставить("Спецификация", НоваяВерсияСпецификации.Ссылка);
					СтруктураЗаписи.Вставить("ВидСпецификации", НоваяВерсияСпецификации.ВидСпецификации);
					СтруктураЗаписи.Вставить("ВерсияСпецификации", НоваяВерсияСпецификации.ВерсияСпецификации);
					СтруктураЗаписи.Вставить("Опции", НоваяВерсияСпецификации.Опции);
					СтруктураЗаписи.Вставить("ДатаВерсииСпецификации", НоваяВерсияСпецификации.ДатаСоздания);
					СтруктураЗаписи.Вставить("ПродуктКП", НоваяВерсияСпецификации.Владелец.ПродуктКП);
					СтруктураЗаписи.Вставить("НомерКПSPORT", НоваяВерсияСпецификации.Владелец.НомерКПSPORT); 							
					СтруктураЗаписи.Вставить("IDExternalSystem", "");
					                         
					РегистрыСведений.Scan_ВерсииСпецификаций.ЗаписьЗначенияРегистраСведения(СтруктураЗаписи); 
					РегистрыСведений.Scan_ОпределяемыеПараметрыПоОпциямПродуктов.ОбновитьОпределяемыеПараметры(Выборка.Продукт);
				КонецЕсли;	
			КонецЕсли;
		Иначе
			Если НЕ ЗначениеЗаполнено(Выборка.ВерсияБазовойСпецификации) Тогда
				Если ЗначениеЗаполнено(Выборка.ВерсияБазовойСпецификацииКП) Тогда 
					НоваяВерсияСпецификации = Выборка.ВерсияБазовойСпецификацииКП.Скопировать();
					НоваяВерсияСпецификации.Владелец = Выборка.Спецификация;
					Попытка
						НоваяВерсияСпецификации.Записать();
						ВывестиСообщениеПол("Для продукта %1 успешно создана версия базовой спецификации",,,,,Выборка.Продукт);
					Исключение
						ВывестиСообщениеПол("Произошла ошибка при создании версии базовой спецификации для продукта %1",,,,,Выборка.Продукт);	
					КонецПопытки;
					//rarus bonmak 19.05.2021 17615 ++
					Если ЗначениеЗаполнено(Выборка.СпецификацияКП) И НЕ ЗначениеЗаполнено (Выборка.Спецификация.НомерКПSPORT) Тогда
						//Если спецификация была создана ранее, обновим поля
						фОбъектСпецификация 				 = Выборка.Спецификация.ПолучитьОбъект();
						фОбъектСпецификация.Заблокировать(); //rarus vikhle 13.08.2021 АПК
						фОбъектСпецификация.МодельПродукта	 = Выборка.СпецификацияКП.МодельПродукта;
						фОбъектСпецификация.НомерКПSPORT	 = Выборка.СпецификацияКП.НомерКПSPORT;
						фОбъектСпецификация.ОписаниеПродукта = Выборка.СпецификацияКП.ОписаниеПродукта;
						фОбъектСпецификация.ПродуктКП		 = Выборка.СпецификацияКП.ПродуктКП;
						фОбъектСпецификация.Изделие			 = Выборка.Продукт;
						фОбъектСпецификация.Наименование	 = Выборка.СпецификацияКП.Наименование + " " + Выборка.Продукт.Наименование;
					КонецЕсли;
					
					УстановитьПривилегированныйРежим(Истина);
					Попытка	
						фОбъектСпецификация.Записать();
						СпецификацияСсылкаДляЗаписиВПродукт = фОбъектСпецификация.Ссылка; 
					Исключение
						// Rarus tenkam 05.07.2022 mantis 18726 АПК +++
						//СообщениеОбОшибке = "Произошла ошибка при обновлении данных в спецификации " + фОбъектСпецификация.Наименование 
						//+ " для продукта " + Выборка.Продукт.IDExternalSystemProduct + " : " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());						
						
						ТекстСообщения = НСтр("ru = 'Произошла ошибка при обновлении данных в спецификации %1 для продукта %2 : %3'");
						СообщениеОбОшибке = СтрШаблон(ТекстСообщения, фОбъектСпецификация.Наименование, Выборка.Продукт.IDExternalSystemProduct, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
						// Rarus tenkam 05.07.2022 mantis 18726 АПК ---
						ЗаписьЖурналаРегистрации(Нстр("ru = 'Замена драфтов на продукты'", ОбщегоНазначения.КодОсновногоЯзыка()),УровеньЖурналаРегистрации.Ошибка,,
						Выборка.Продукт,
						СообщениеОбОшибке); // Rarus tenkam 11.02.2022 АПК добавлен КодОсновногоЯзыка 
					КонецПопытки;
					УстановитьПривилегированныйРежим(Ложь);
					//rarus bonmak 19.05.2021 17615 --
					
					СтруктураЗаписи = Новый Структура;
					СтруктураЗаписи.Вставить("Спецификация", НоваяВерсияСпецификации.Ссылка);
					СтруктураЗаписи.Вставить("ВидСпецификации", НоваяВерсияСпецификации.ВидСпецификации);
					СтруктураЗаписи.Вставить("ВерсияСпецификации", НоваяВерсияСпецификации.ВерсияСпецификации);
					СтруктураЗаписи.Вставить("Опции", НоваяВерсияСпецификации.Опции);
					СтруктураЗаписи.Вставить("ДатаВерсииСпецификации", НоваяВерсияСпецификации.ДатаСоздания);
					СтруктураЗаписи.Вставить("ПродуктКП", НоваяВерсияСпецификации.Владелец.ПродуктКП);
					СтруктураЗаписи.Вставить("НомерКПSPORT", НоваяВерсияСпецификации.Владелец.НомерКПSPORT); 							
					СтруктураЗаписи.Вставить("IDExternalSystem", "");
					                         
					РегистрыСведений.Scan_ВерсииСпецификаций.ЗаписьЗначенияРегистраСведения(СтруктураЗаписи); 
					РегистрыСведений.Scan_ОпределяемыеПараметрыПоОпциямПродуктов.ОбновитьОпределяемыеПараметры(Выборка.Продукт);
				КонецЕсли;	
			Иначе
				Продолжить;
			КонецЕсли;	
		КонецЕсли;	
		//rarus vikhle 21.09.2020 mt 16181 ---
		
		ИзделиеОбъект = Выборка.Продукт.ПолучитьОбъект();
		//rarus vikhle 08.02.2021 mt 16981 +++ Для записи источника и статуса в регистре история продуктов
		//rarus vikhle 07.10.2021 mt 18076 +++
		//ИзделиеОбъект.ДополнительныеСвойства.Вставить("Источник",НовоеСоглашениеОПоставке);
		//ИзделиеОбъект.ДополнительныеСвойства.Вставить("Статус",НовоеСоглашениеОПоставке.Статус);
		
		ИзделиеОбъект.ДополнительныеСвойства.Вставить("Источник", Заявка);
		ИзделиеОбъект.ДополнительныеСвойства.Вставить("Статус", Заявка.Статус);
		//rarus vikhle 07.10.2021 mt 18076 ---
		//rarus vikhle 08.02.2021 mt 16981 ---
		Если ИзделиеОбъект.ЛокальныйСтатусПродукта <> Справочники.Scan_ЛокальныеСтатусыПродуктов.OPEN Тогда
			ИзделиеОбъект.ЛокальныйСтатусПродукта = Справочники.Scan_ЛокальныеСтатусыПродуктов.OPEN; 	
		КонецЕсли;	
		
		//rarus vikhle 22.01.2021 mt 16981 +++
		Если ИзделиеОбъект.ЗапрашиваемоеМестоПередачи <> Выборка.СкладОтгрузки Тогда  
			ИзделиеОбъект.ЗапрашиваемоеМестоПередачи  = Выборка.СкладОтгрузки;	
		КонецЕсли; 	
		
		Если ИзделиеОбъект.МестоПередачи <> Выборка.МестоПередачи Тогда  
			ИзделиеОбъект.МестоПередачи  = Выборка.МестоПередачи;	
		КонецЕсли;
		
		Если ИзделиеОбъект.СкладПродажи <> Выборка.СкладПродажи Тогда  
			ИзделиеОбъект.СкладПродажи  = Выборка.СкладПродажи;	
		КонецЕсли;
		
		//rarus vikhle 22.01.2021 mt 16981 ---
		//rarus bonmak 19.05.2021 17615 ++
		Если ИзделиеОбъект.СпецификацияПродукта <> СпецификацияСсылкаДляЗаписиВПродукт 
			И НЕ СпецификацияСсылкаДляЗаписиВПродукт.Пустая() Тогда  
			ИзделиеОбъект.СпецификацияПродукта  = СпецификацияСсылкаДляЗаписиВПродукт;	
		КонецЕсли;
		//rarus bonmak 19.05.2021 17615 --
		Если ИзделиеОбъект.Модифицированность() Тогда //rarus vikhle 22.01.2021 mt 16981
			Попытка 
				ИзделиеОбъект.Записать();
				ВывестиСообщениеПол("У продукта %1 успешно установлен локальный статус Open и обновлены склады",,,,,Выборка.Продукт);//rarus vikhle 22.01.2021 mt 16981
			Исключение
				ВывестиСообщениеПол("У продукта %1 произошла ошибка при записи: " + ОписаниеОшибки(),,,,,Выборка.Продукт);
				ЗаписьЖурналаРегистрации("Запись продукта",УровеньЖурналаРегистрации.Ошибка,,
										Выборка.Продукт,"Произошла ошибка при записи продукта");	
			КонецПопытки;
		КонецЕсли;
		
		//rarus vikhle 13.05.2021 mt 17733 +++
		//Для добавленных продуктов БУ или с видом Автобус установим DD, равную дате начала СОП  
		Если НЕ СтруктураРеквизитовДоговора.Договор.Пустая() Тогда
			Если Выборка.ВидПродукта = ВидПродуктаАвтобус ИЛИ (Выборка.БУ И ЗаявкаНаБУПродукты) Тогда  
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Выборка.Продукт.ЗаказНаЗавод,
																						Перечисления.Scan_КлючевыеДаты.DD,
																						СтруктураРеквизитовДоговора.ДоговорДатаНачала);	
			КонецЕсли;	
		КонецЕсли;	
		//rarus vikhle 13.05.2021 mt 17733 --- 
		
	КонецЦикла;	
	
	// Для нового СОП переносимых продуктов не будет оплат на момент создания
	Если Заявка = НовоеСоглашениеОПоставке Тогда //rarus vikhle 07.10.2021 mt 18076
		ДобавитьДанныеПоOrderIntake(МенеджерВременныхТаблиц); //rarus vikhle 29.03.2021 mt 17520
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ПроверитьМодифицированностьДанных(ИзмененыУсловияОплаты,ИзмененСостав,ИзмененыЦены,ИзмененыСклады,ИзмененыСроки,ИзмененыОбщиеДанныеЗаявки)
	//Проверяем изменение данных
	
	//Удаление пустых строк
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПроцентОплаты",0);
	ПараметрыОтбора.Вставить("ВидОплаты",Перечисления.Scan_ВидыОплат.ПустаяСсылка());
	ПараметрыОтбора.Вставить("КрайняяДатаОплаты",Дата(1,1,1));
	ПараметрыОтбора.Вставить("СрокОплатыАванса",0);
	//rarus vikhle 02.10.2020 mt 16181 +++
	ПараметрыОтбора.Вставить("Сумма",0);
	ПараметрыОтбора.Вставить("РасчетДатыОплаты",Перечисления.Scan_ВидыРасчетаДатыОплаты.ПустаяСсылка());
	//rarus vikhle 02.10.2020 mt 16181 ---
	МассивПустыхСтрок = УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
	Для каждого ЭлементМассива Из МассивПустыхСтрок Цикл 
		УсловияОплаты.Удалить(ЭлементМассива); 
	КонецЦикла; 
	
	//ИменаКолонок = "ВидОплаты,ПроцентОплаты,СрокОплатыАванса,КрайняяДатаОплаты,Сумма,РасчетДатыОплаты,Продукт,СпециальныеУсловия"; //rarus vikhle 10.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	ИменаКолонок = "ВидОплаты,ПроцентОплаты,СрокОплатыАванса,КрайняяДатаОплаты,Сумма,РасчетДатыОплаты,Продукт";//rarus vikhle 03.08.2021 17637 Вернул продукт
	Если	НЕ ОбщегоНазначения.КоллекцииИдентичны(УсловияОплаты,ТекущееСоглашениеОПоставке.УсловияОплаты,ИменаКолонок)
			//И	ОбщегоНазначения.КоллекцииИдентичны(СписокПродуктов,ТекущееСоглашениеОПоставке.СписокПродуктов,"Продукт,СкладОтгрузки") //rarus vikhle 11.09.2020 mt 16526
			//И	ОтсрочкаПлатежа = ТекущееСоглашениеОПоставке.ОтсрочкаПлатежа) //rarus bonmak 13.01.2021 17041 
			ИЛИ НЕ ОбщегоНазначения.КоллекцииИдентичны(ГрафикПлатежей,ТекущееСоглашениеОПоставке.ГрафикПлатежей,"ВидОплаты,ДатаПлатежа,Сумма,Продукт")//rarus vikhle 28.06.2021 mt 17637 //rarus vikhle 03.08.2021 17637 Вернул продукт 
			Тогда
			ИзмененыУсловияОплаты = Истина;
	КонецЕсли;	
	
	Если Элементы.СтраницаСостав.Видимость 
		ИЛИ Элементы.СтраницаРазделениеЗаявки.Видимость Тогда	//rarus vikhle 08.10.2021 mt 18076
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Продукт",Неопределено);
		МассивПустыхСтрок = СписокПродуктов.НайтиСтроки(ПараметрыОтбора);
		Для каждого ЭлементМассива Из МассивПустыхСтрок Цикл 
			СписокПродуктов.Удалить(ЭлементМассива); 
		КонецЦикла;	
		Если НЕ ОбщегоНазначения.КоллекцииИдентичны(СписокПродуктов,ТекущееСоглашениеОПоставке.СписокПродуктов,"Продукт,Количество") Тогда
			ИзмененСостав = Истина;
		КонецЕсли;
	КонецЕсли;
	
	//rarus vikhle 01.04.2021 mt 17472 +++
	//Проверка измененения DDS на закладках Состав и Сроки
	Если Элементы.СтраницаСостав.Видимость ИЛИ Элементы.СтраницаСроки.Видимость Тогда
		Если Не ОбщегоНазначения.КоллекцииИдентичны(СписокПродуктов,ТекущееСоглашениеОПоставке.СписокПродуктов,"Продукт,DDS") Тогда
			ИзмененыСроки = Истина;	
		КонецЕсли;	
	КонецЕсли;	
	//rarus vikhle 01.04.2021 mt 17472 ---
	
	//rarus vikhle 10.11.2020 mt 16181 +++
	//Если Элементы.СтраницаУсловияОплаты.Видимость Тогда //rarus vikhle 22.01.2021 mt 16981 могут поменяться при добавлении продукта
		Если НЕ ОбщегоНазначения.КоллекцииИдентичны(СписокПродуктов,ТекущееСоглашениеОПоставке.СписокПродуктов,"Продукт,СкладОтгрузки") Тогда
			ИзмененыСклады = Истина;
		ИначеЕсли ИзмененСостав Тогда // при добавлении продукта заполняются склады по умолчанию
			ИменаРеквизитов = "СкладПродажи,МестоПередачи,ЗапрашиваемоеМестоПередачи";
			Для Каждого СтрокаСписка Из СписокПродуктов Цикл
				Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
					ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаСписка.Продукт,ИменаРеквизитов);
					Если СтрокаСписка.СкладПродажи <> ЗначенияРеквизитов.СкладПродажи 
						ИЛИ СтрокаСписка.СкладОтгрузки <> ЗначенияРеквизитов.ЗапрашиваемоеМестоПередачи
						ИЛИ СтрокаСписка.МестоПередачи <> ЗначенияРеквизитов.МестоПередачи Тогда
						ИзмененыСклады = Истина;
						Прервать;
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
	//КонецЕсли;	
	//rarus vikhle 10.11.2020 mt 16181 ---
	
	//rarus vikhle 24.05.2021 mt 17653 +++ 
	Если Дилер <> ТекущееСоглашениеОПоставке.Дилер Тогда
		ИзмененыОбщиеДанныеЗаявки = Истина;
	КонецЕсли;	
	//rarus vikhle 24.05.2021 mt 17653 ---
	
	Если Элементы.СтраницаЦены.Видимость ИЛИ ИзмененыОбщиеДанныеЗаявки Тогда //rarus vikhle 31.05.2021 mt 17653 + ИзмененыОбщиеДанныеЗаявки
		МассивИзмененныхЗатрат = Новый Массив;
		Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
			Если НЕ СтрокаТаблицы.ЛогистическиеЗатратыСумма = СтрокаТаблицы.ЛогистическиеЗатратыСуммаТекущие	
				 ИЛИ НЕ  СтрокаТаблицы.КомпенсацииСумма = СтрокаТаблицы.КомпенсацииСуммаТекущие 
				 ИЛИ НЕ СтрокаТаблицы.ИзменениеСпецификацииПоИнициативеЗаводаСумма = СтрокаТаблицы.ИзменениеСпецификацииПоИнициативеЗаводаСуммаТекущие Тогда	// rarus tenkam 23.04.2021 mantis 17648 +
				 МассивИзмененныхЗатрат.Добавить(СтрокаТаблицы);
			КонецЕсли;	
		КонецЦикла;		
		//rarus vikhle 24.05.2021 mt 17780 + Себестоимость 
		ИменаКолонок = "Продукт,ПроцентДрайв,СпециальныеУсловия,ЦенаСНДС,ЦенаПоВалютнойОговорке,Себестоимость"; //rarus vikhle 09.11.2020 mt 16181 // rarus tenkam 06.04.2021 mantis 17419 валютная оговорка +
		Если НЕ ОбщегоНазначения.КоллекцииИдентичны(СписокПродуктов,ТекущееСоглашениеОПоставке.СписокПродуктов,ИменаКолонок) 
			 ИЛИ НЕ МассивИзмененныхЗатрат.Количество() = 0 Тогда
			 ИзмененыЦены = Истина;
		КонецЕсли;		
	КонецЕсли;
	
		
КонецПроцедуры	

//rarus vikhle 03.08.2021 17637 +++ Закомментировал
//rarus vikhle 10.06.2021 mt 17637 +++
//&НаСервере
//Процедура ПроверитьСоответствиеУсловийОплаты(ИзмененыУсловияОплаты)
//	//Проверка соответствия условий оплаты заявки и спец. условий
//	Если Элементы.СтраницаЦены.Видимость ИЛИ Элементы.СтраницаОбщиеДанныеЗаявки.Видимость //rarus vikhle 31.05.2021 mt 17653
//		И ИзмененыУсловияОплаты Тогда
//		//ИменаКолонок = "ВидОплаты,ПроцентОплаты,ДатаНачалаОтсчетаАванса,СрокОплатыАванса,КрайняяДатаОплаты";
//		ИменаКолонок = "ВидОплаты,ПроцентОплаты,СрокОплатыАванса,КрайняяДатаОплаты,Сумма,РасчетДатыОплаты"; //rarus vikhle 06.10.2020 mt 16181
//		Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
//			Если ЗначениеЗаполнено(СтрокаТаблицы.СпециальныеУсловия) Тогда
//				Если ОбщегоНазначения.КоллекцииИдентичны(СтрокаТаблицы.СпециальныеУсловия.УсловияОплаты,УсловияОплаты,ИменаКолонок) Тогда
//					ВывестиСообщениеПол(Нстр("ru = 'Условия оплаты в специальных условиях %1 отличаются от условий оплаты в обработке.'"),,,,, //rarus vikhle 12.07.2021 АПК
//										СтрокаТаблицы.СпециальныеУсловия);
//				КонецЕсли;	
//			КонецЕсли;	
//		КонецЦикла;	
//	КонецЕсли;	
//КонецПроцедуры	
//rarus vikhle 10.06.2021 mt 17637 ---
//rarus vikhle 03.08.2021 17637 ---

&НаКлиенте
Процедура ОбработатьВыборПродуктаКП(ВыбратьВсе = Ложь, ЭтоПрицепы = Ложь)	// Rarus tenkam 21.20.2021 mantis 17822 второй параметр
	
	Если ЭтоПрицепы Тогда
		ИмяТаблицы = "ПродуктыПрицепы";
	Иначе
		ИмяТаблицы = "ПродуктыКП";
	КонецЕсли;
		
	// Rarus tenkam 21.20.2021 mantis 17822 +++
	//Если ПродуктыКП.Количество() = 0 Тогда
	Если ЭтотОбъект[ИмяТаблицы].Количество() = 0 Тогда
	// Rarus tenkam 21.20.2021 mantis 17822 ---
		Возврат;
	КонецЕсли;
	
	// rarus tenkam 22.04.2021 mantis 17691 +++
	//СтруктураОтбора = Новый Структура("ТипПродукта","Драфты продуктов (scania)");
	СтруктураОтбора = Новый Структура("ТипПродукта",Строка(Тип("СправочникСсылка.Scan_ДрафтыПродуктов")));//rarus vikhle 07.05.2021 mt 17752
	// rarus tenkam 22.04.2021 mantis 17691 ---
		
	МассивСтрокДрафтов = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
	Если МассивСтрокДрафтов.Количество() = 0 Тогда
		ВывестиСообщениеПол("В таблице отсутствуют драфты продуктов.");
		Возврат;
	КонецЕсли;	
	
	//НужноОбновитьУсловияОплаты = Ложь;//rarus vikhle 18.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	
	Если ВыбратьВсе Тогда
		Индекс = 0;
		МассивСтрокКУдалению = Новый Массив;
		МассивИДСтрокПродуктов = Новый Массив;//rarus vikhle 04.08.2021 mt 17637
		// Rarus tenkam 21.20.2021 mantis 17822 +++
		//Для Каждого СтрокаСписка Из ПродуктыКП Цикл	
		Для Каждого СтрокаСписка Из ЭтотОбъект[ИмяТаблицы] Цикл	
		// Rarus tenkam 21.20.2021 mantis 17822 ---
			Если МассивСтрокДрафтов.Количество() >= Индекс + 1 Тогда
				//rarus vikhle 22.09.2020 mt 16181 +++
				//Если НЕ СтрокаСписка.Модель = Модель Тогда
				Если НЕ Лев(СокрЛП(СтрокаСписка.Модель),10) = Лев(СокрЛП(Модель),10) Тогда //rarus vikhle 14.10.2020 mt 16181
					//rarus vikhle 05.11.2020 mt 16723 +++
					//ВывестиСообщениеПол("Модель %1 продукта %2 не соответствует модели %3 текущего соглашения.",,,,,
					//					СтрокаСписка.Модель,СтрокаСписка.Продукт,Модель);
					ВывестиСообщениеПол(Нстр("ru = 'Модель %1 продукта %2 не соответствует модели %3 текущей заявки.'"),,,,,
										СтрокаСписка.Модель,СтрокаСписка.Продукт,Модель);					
					//rarus vikhle 05.11.2020 mt 16723 ---					
					Продолжить;					
				КонецЕсли;
				//rarus vikhle 22.09.2020 mt 16181  ---
				//rarus vikhle 06.11.2020 mt 16181 +++
				Если ЗначениеЗаполнено(СтрокаСписка.НомерСоглашения) Тогда
					ВывестиСообщениеПол(Нстр("ru = Продукт %1 включен в другую заявку, добавление невозможно.'"),,,,,СтрокаСписка.Продукт);		
					Продолжить;	
				КонецЕсли;	
				//rarus vikhle 06.11.2020 mt 16181 ---
				СтрокаДрафта = МассивСтрокДрафтов[Индекс];
				нСтрокаСписка = СписокПродуктов.Добавить();
				нСтрокаСписка.Продукт = СтрокаСписка.Продукт;
				нСтрокаСписка.Модель = СтрокаСписка.Модель;
				нСтрокаСписка.ЗаказНаЗавод = СтрокаСписка.ЗаказНаЗавод; //rarus vikhle 14.10.2020 mt 16181
				нСтрокаСписка.Количество = 1;
				нСтрокаСписка.Драйв = СтрокаДрафта.Драйв; //rarus vikhle 25.11.2020 mt 16846
				нСтрокаСписка.ПроцентДрайв = СтрокаДрафта.ПроцентДрайв; 
				
				нСтрокаСписка.СпециальныеУсловия = СтрокаДрафта.СпециальныеУсловия;
				//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
				//rarus vikhle 18.06.2021 mt 17637 +++
				//Если Не СтрокаДрафта.СпециальныеУсловия.Пустая() Тогда
				//	//Перенос условий оплаты из СУ
				//	ОбработатьУсловияОплатыСУ(нСтрокаСписка.ПолучитьИдентификатор());
				//	НужноОбновитьУсловияОплаты = Истина;
				//КонецЕсли;
				//rarus vikhle 18.06.2021 mt 17637 ---
				//rarus vikhle 06.07.2021 17637 ---
				
				//rarus vikhle 04.08.2021 mt 17637 +++
				нСтрокаСписка.ИтоговаяСумма = СтрокаДрафта.ИтоговаяСумма;
				МассивИДСтрокПродуктов.Добавить(нСтрокаСписка.ПолучитьИдентификатор());
				//rarus vikhle 04.08.2021 mt 17637 ---
				
				нСтрокаСписка.DDЗапрошенная = СтрокаДрафта.DDЗапрошенная;
				нСтрокаСписка.DDS = СтрокаДрафта.DDS;
				нСтрокаСписка.ЦенаСНДС = СтрокаДрафта.ЦенаСНДС;
				нСтрокаСписка.ЦенаБезНДС = СтрокаДрафта.ЦенаБезНДС;
				// rarus tenkam 22.04.2021 mantis 17691 +++
				//нСтрокаСписка.ТипПродукта = "Изделия (scania)";
				нСтрокаСписка.ТипПродукта = Тип("СправочникСсылка.Scan_Изделия");//rarus vikhle 07.05.2021 mt 17752
				// rarus tenkam 22.04.2021 mantis 17691 ---
				//нСтрокаСписка.ТипПродукта = ПолучитьОписаниеТипаПродукта(ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));//rarus vikhle 07.05.2021 mt 17752
				//rarus vikhle 22.09.2020 mt 16181 +++
				нСтрокаСписка.СкладОтгрузки = СтрокаДрафта.СкладОтгрузки;
				нСтрокаСписка.ПриоритетныйСклад = СтрокаДрафта.ПриоритетныйСклад; 
				//rarus vikhle 22.09.2020 mt 16181 ---
				//rarus vikhle 07.04.2021 mt 17613 +++
				Если НЕ СтрокаСписка.ЗапретИзмененияСкладаПродажи Тогда
					нСтрокаСписка.СкладПродажи = нСтрокаСписка.СкладОтгрузки;
				КонецЕсли;	
				нСтрокаСписка.МестоПередачи = нСтрокаСписка.СкладОтгрузки; 
				//rarus vikhle 07.04.2021 mt 17613 ---
				нСтрокаСписка.ВТекущейЗаявке = Ложь; //rarus vikhle 10.11.2020 mt 16181
				нСтрокаСписка.Себестоимость = СтрокаДрафта.Себестоимость; // rarus agar 10.12.2020 16892 +- 
				//rarus vikhle 17.12.2020 mt 16977 +++
				нСтрокаСписка.DD = СтрокаСписка.DD;
				нСтрокаСписка.DD2 = СтрокаСписка.DD2;
				нСтрокаСписка.ДатаПродажиДилеру = СтрокаСписка.ДатаПродажиДилеру;
				//rarus vikhle 17.12.2020 mt 16977 ---
				нСтрокаСписка.ДатаПродажиКлиенту = СтрокаСписка.ДатаПродажиКлиенту; //rarus vikhle 10.03.2021 mt 17324
				
				Если СтрокаДрафта.Количество > 1 Тогда
					СтрокаДрафта.Количество = СтрокаДрафта.Количество - 1;
					ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект, СтрокаДрафта.ПолучитьИдентификатор());//rarus vikhle 10.08.2021 mt 17637
				Иначе
					СписокПродуктов.Удалить(СтрокаДрафта);
					Индекс = Индекс + 1;
				КонецЕсли;
				МассивСтрокКУдалению.Добавить(СтрокаСписка);
			КонецЕсли;		
		КонецЦикла;
		Для Каждого ЭлементМассива Из МассивСтрокКУдалению Цикл
       		// Rarus tenkam 21.20.2021 mantis 17822 +++
			//ПродуктыКП.Удалить(ЭлементМассива);
			ЭтотОбъект[ИмяТаблицы].Удалить(ЭлементМассива);
		    // Rarus tenkam 21.20.2021 mantis 17822 ---
		КонецЦикла;
		//rarus vikhle 04.08.2021 mt 17637 +++
		Если МассивИДСтрокПродуктов.Количество() > 0 Тогда
			ДобавитьУсловияОплаты(МассивИДСтрокПродуктов, Истина); //rarus vikhle 10.08.2021 mt 17637 + 2й параметр
		КонецЕсли;	
		//rarus vikhle 04.08.2021 mt 17637 ---
	Иначе
		// Rarus tenkam 21.20.2021 mantis 17822 +++
		//ТекущиеДанные = Элементы.ПродуктыКП.ТекущиеДанные;
		ТекущиеДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
		// Rarus tenkam 21.20.2021 mantis 17822 ---
		Если НЕ ТекущиеДанные = Неопределено Тогда
			//rarus vikhle 22.09.2020 mt 16181 +++
			//Если НЕ ТекущиеДанные.Модель = Модель Тогда
			Если НЕ Лев(СокрЛП(ТекущиеДанные.Модель),10) = Лев(СокрЛП(Модель),10) Тогда //rarus vikhle 14.10.2020 mt 16181	
				//rarus vikhle 05.11.2020 mt 16723 +++
				//ВывестиСообщениеПол("Модель %1 продукта %2 не соответствует модели %3 текущего соглашения.",,,,,
				//					ТекущиеДанные.Модель,ТекущиеДанные.Продукт,Модель);
				ВывестиСообщениеПол(Нстр("ru = 'Модель %1 продукта %2 не соответствует модели %3 текущей заявки.'"),,,,,
									ТекущиеДанные.Модель,ТекущиеДанные.Продукт,Модель);					
				//rarus vikhle 05.11.2020 mt 16723 +++					
				Возврат;					
			КонецЕсли;
			//rarus vikhle 22.09.2020 mt 16181 ---
			//rarus vikhle 06.11.2020 mt 16181 +++
			Если ЗначениеЗаполнено(ТекущиеДанные.НомерСоглашения) Тогда
				ВывестиСообщениеПол(Нстр("ru = 'Продукт %1 включен в другую заявку, добавление невозможно.'"),,,,,ТекущиеДанные.Продукт);		
				Возврат;	
			КонецЕсли;	
			//rarus vikhle 06.11.2020 mt 16181 ---
			СтрокаДрафта = МассивСтрокДрафтов[0];
			нСтрокаСписка = СписокПродуктов.Добавить();
			нСтрокаСписка.Продукт = ТекущиеДанные.Продукт;
			нСтрокаСписка.Модель = ТекущиеДанные.Модель;
			нСтрокаСписка.ЗаказНаЗавод = ТекущиеДанные.ЗаказНаЗавод; //rarus vikhle 14.10.2020 mt 16181
			нСтрокаСписка.Количество = 1;
			нСтрокаСписка.Драйв = СтрокаДрафта.Драйв; //rarus vikhle 25.11.2020 mt 16846
			нСтрокаСписка.ПроцентДрайв = СтрокаДрафта.ПроцентДрайв; 
			
			нСтрокаСписка.СпециальныеУсловия = СтрокаДрафта.СпециальныеУсловия;
			//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
			//rarus vikhle 18.06.2021 mt 17637 +++
			//Если Не СтрокаДрафта.СпециальныеУсловия.Пустая() Тогда
			//	//Перенос условий оплаты из СУ
			//	ОбработатьУсловияОплатыСУ(нСтрокаСписка.ПолучитьИдентификатор());
			//	НужноОбновитьУсловияОплаты = Истина;
			//КонецЕсли;
			//rarus vikhle 18.06.2021 mt 17637 ---
			//rarus vikhle 06.07.2021 17637 ---
						
			нСтрокаСписка.DDЗапрошенная = СтрокаДрафта.DDЗапрошенная;
			нСтрокаСписка.DDS = СтрокаДрафта.DDS;
			нСтрокаСписка.ЦенаСНДС = СтрокаДрафта.ЦенаСНДС;
			нСтрокаСписка.ЦенаБезНДС = СтрокаДрафта.ЦенаБезНДС;
			//rarus vikhle 22.09.2020 mt 16181 +++
			нСтрокаСписка.СкладОтгрузки = СтрокаДрафта.СкладОтгрузки;
			нСтрокаСписка.ПриоритетныйСклад = СтрокаДрафта.ПриоритетныйСклад;
			//rarus vikhle 22.09.2020 mt 16181 ---
			//rarus vikhle 07.04.2021 mt 17613 +++
			Если НЕ ТекущиеДанные.ЗапретИзмененияСкладаПродажи Тогда
				нСтрокаСписка.СкладПродажи = нСтрокаСписка.СкладОтгрузки;
			КонецЕсли;	
			нСтрокаСписка.МестоПередачи = нСтрокаСписка.СкладОтгрузки; 
			//rarus vikhle 07.04.2021 mt 17613 ---
			// rarus tenkam 22.04.2021 mantis 17691 +++
			//нСтрокаСписка.ТипПродукта = "Изделия (scania)";
			нСтрокаСписка.ТипПродукта = Тип("СправочникСсылка.Scan_Изделия");//rarus vikhle 07.05.2021 mt 17752
			// rarus tenkam 22.04.2021 mantis 17691 ---			
			//нСтрокаСписка.ТипПродукта = ПолучитьОписаниеТипаПродукта(ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка"));//rarus vikhle 07.05.2021 mt 17752
			нСтрокаСписка.ВТекущейЗаявке = Ложь; //rarus vikhle 10.11.2020 mt 16181
			нСтрокаСписка.Себестоимость = СтрокаДрафта.Себестоимость; // rarus agar 10.12.2020 16892 +-
			//rarus vikhle 17.12.2020 mt 16977 +++
			нСтрокаСписка.DD = ТекущиеДанные.DD;
			нСтрокаСписка.DD2 = ТекущиеДанные.DD2;
			нСтрокаСписка.ДатаПродажиДилеру = ТекущиеДанные.ДатаПродажиДилеру;
			//rarus vikhle 17.12.2020 mt 16977 ---
			нСтрокаСписка.ДатаПродажиКлиенту = ТекущиеДанные.ДатаПродажиКлиенту; //rarus vikhle 10.03.2021 mt 17324
			
			//rarus vikhle 04.08.2021 mt 17637 +++
			//нСтрокаСписка.ИтоговаяСумма = СтрокаДрафта.ИтоговаяСумма;//rarus vikhle 10.08.2021 mt 17637
			ДобавитьУсловияОплаты(нСтрокаСписка.ПолучитьИдентификатор(), Истина); //rarus vikhle 10.08.2021 mt 17637
			//rarus vikhle 04.08.2021 mt 17637 ---
			
			Если СтрокаДрафта.Количество > 1 Тогда
				СтрокаДрафта.Количество = СтрокаДрафта.Количество - 1;
				ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект, СтрокаДрафта.ПолучитьИдентификатор());//rarus vikhle 10.08.2021 mt 17637
			Иначе
				СписокПродуктов.Удалить(СтрокаДрафта);		
			КонецЕсли;	
			// Rarus tenkam 21.20.2021 mantis 17822 +++
			//ПродуктыКП.Удалить(ПродуктыКП.НайтиПоИдентификатору(Элементы.ПродуктыКП.ТекущаяСтрока));
			ЭтотОбъект[ИмяТаблицы].Удалить(ЭтотОбъект[ИмяТаблицы].НайтиПоИдентификатору(Элементы[ИмяТаблицы].ТекущаяСтрока));
			// Rarus tenkam 21.20.2021 mantis 17822 ---
		КонецЕсли;
	КонецЕсли;
	
	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//rarus vikhle 18.06.2021 mt 17637 +++
	//Если НужноОбновитьУсловияОплаты Тогда
	//	ОбновитьУсловияОплаты();
	//КонецЕсли;
	//rarus vikhle 18.06.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЗаказамНаСервере() 
	Запрос = Новый Запрос;
	//rarus vikhle 02.11.2020 mt 16181 +++
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ПродуктыОбработки.Продукт КАК Продукт
	//               |ПОМЕСТИТЬ ПродуктыОбработки
	//               |ИЗ
	//               |	&ПродуктыОбработки КАК ПродуктыОбработки
	//               |ГДЕ
	//               |	ПродуктыОбработки.Продукт ССЫЛКА Справочник.Scan_Изделия
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Scan_Изделия.Ссылка КАК Продукт,
	//               |	Scan_Изделия.IDПродуктаКП КАК IDПродуктаКП,
	//               |	Scan_Изделия.СоглашениеОПоставке.НомерСоглашенияОПоставке КАК НомерСоглашения,
	//               |	Scan_Изделия.МодельПродукта КАК Модель,
	//               |	Scan_Изделия.ЗаказНаЗавод КАК ЗаказНаЗавод
	//               |ИЗ
	//               |	Справочник.Scan_Изделия КАК Scan_Изделия
	//               |ГДЕ
	//               |	Scan_Изделия.IDПродуктаКП = &IDПродуктаКП
	//               |	И Scan_Изделия.IDПродуктаКП <> """"
	//               |	И НЕ Scan_Изделия.ЛокальныйСтатусПродукта В (ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Sold), ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Deleted))
	//               |	И НЕ Scan_Изделия.Ссылка В
	//               |				(ВЫБРАТЬ
	//               |					ПродуктыОбработки.Продукт
	//               |				ИЗ
	//               |					ПродуктыОбработки КАК ПродуктыОбработки)";
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПродуктыОбработки.Продукт КАК Продукт
	               |ПОМЕСТИТЬ ПродуктыОбработки
	               |ИЗ
	               |	&ПродуктыОбработки КАК ПродуктыОбработки
	               |ГДЕ
	               |	ПродуктыОбработки.Продукт ССЫЛКА Справочник.Scan_Изделия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК Модель,
	               |	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод КАК ЗаказНаЗавод,
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерКП КАК НомерКП,
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |	КОНЕЦ КАК ДатаПродажиДилеру,
	               |	Scan_СводнаяИнформацияПоПродукту.DD КАК DD,
	               |	Scan_СводнаяИнформацияПоПродукту.DD2 КАК DD2,
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
	               |	КОНЕЦ КАК ДатаПродажиКлиенту
	               |ПОМЕСТИТЬ ПродуктыКП
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерКП = &НомерКП
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт.ЛокальныйСтатусПродукта В (ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Sold), ЗНАЧЕНИЕ(Справочник.Scan_ЛокальныеСтатусыПродуктов.Deleted))
	               |	И НЕ Scan_СводнаяИнформацияПоПродукту.Продукт В
	               |				(ВЫБРАТЬ
	               |					ПродуктыОбработки.Продукт
	               |				ИЗ
	               |					ПродуктыОбработки КАК ПродуктыОбработки)
	               |	И Scan_СводнаяИнформацияПоПродукту.Продукт.НомерКП <> """"
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПродуктыКП.Продукт КАК Продукт,
	               |	ПродуктыКП.Модель КАК Модель,
	               |	ПродуктыКП.ЗаказНаЗавод КАК ЗаказНаЗавод,
	               |	ПродуктыКП.НомерКП КАК НомерКП,
	               |	ПродуктыКП.ДатаПродажиДилеру КАК ДатаПродажиДилеру,
	               |	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.НомерСоглашенияОПоставке КАК НомерСоглашения,
	               |	ПродуктыКП.DD КАК DD,
	               |	ПродуктыКП.DD2 КАК DD2,
	               |	ПродуктыКП.ДатаПродажиКлиенту КАК ДатаПродажиКлиенту,
	               |	ПродуктыКП.Продукт.ЗапретИзмененияСкладаПродажи КАК ЗапретИзмененияСкладаПродажи
	               |ИЗ
	               |	ПродуктыКП КАК ПродуктыКП
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(
	               |				,
	               |				Изделие В
	               |					(ВЫБРАТЬ
	               |						ПродуктыКП.Продукт
	               |					ИЗ
	               |						ПродуктыКП КАК ПродуктыКП)) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	               |		ПО ПродуктыКП.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие";
	//Запрос.УстановитьПараметр("IDПродуктаКП",ТекущееСоглашениеОПоставке.IDПродуктаКП);
	//Запрос.УстановитьПараметр("КП",ТекущееСоглашениеОПоставке.КоммерческоеПредложениеSPORT);
	//rarus vikhle 16.12.2020 mt 16955 +++
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"УникальностьСпецификации") = Перечисления.Scan_ТипыСпецификации.Std Тогда
		НомерКП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"НомерКоммерческогоПредложенияSPORTДляЗаказа");  		
	Иначе	
		НомерКП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"КоммерческоеПредложениеSPORT.НомерКП");	
	КонецЕсли;	
	Запрос.УстановитьПараметр("НомерКП",НомерКП);
	//rarus vikhle 16.12.2020 mt 16955 ---
	//Запрос.УстановитьПараметр("НомерКП",ТекущееСоглашениеОПоставке.КоммерческоеПредложениеSPORT.НомерКП);
	//rarus vikhle 02.11.2020 mt 16181 ---
	//Запрос.УстановитьПараметр("Модель",Модель); //rarus vikhle 22.09.2020 mt 16181	
	Запрос.УстановитьПараметр("ПродуктыОбработки",РеквизитФормыВЗначение("СписокПродуктов")); //rarus vikhle 14.10.2020 mt 16181
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();	
	ПродуктыКП.Загрузить(РезультатЗапроса);
	Элементы.ГруппаТаблицаПродуктыКП.Видимость = Истина;
	
	// Rarus tenkam 21.10.2021 mantis 17822 +++
	Если ЗначениеЗаполнено(ЗаказНаЗакупку) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ЗаказНаЗакупкуПродуктыКЗаказу.Продукт КАК Продукт,
		|	Scan_ЗаказНаЗакупкуПродуктыКЗаказу.Продукт.МодельПродукта КАК Модель,
		|	Scan_ЗаказНаЗакупкуПродуктыКЗаказу.ЗаказНаЗавод КАК ЗаказНаЗавод,
		|	Scan_ЗаказНаЗакупкуПродуктыКЗаказу.Ссылка КАК ЗаказНаЗакупку,
		|	Scan_СводнаяИнформацияПоПродукту.DD КАК DD,
		|	Scan_СводнаяИнформацияПоПродукту.DD2 КАК DD2,
		|	ВЫБОР
		|		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
		|			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
		|		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
		|	КОНЕЦ КАК ДатаПродажиДилеру,
		|	ВЫБОР
		|		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
		|			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту
		|		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту
		|	КОНЕЦ КАК ДатаПродажиКлиенту
		|ПОМЕСТИТЬ ПродуктыЗаказаНаЗакупку
		|ИЗ
		|	Документ.Scan_ЗаказНаЗакупку.ПродуктыКЗаказу КАК Scan_ЗаказНаЗакупкуПродуктыКЗаказу
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
		|		ПО Scan_ЗаказНаЗакупкуПродуктыКЗаказу.Продукт = Scan_СводнаяИнформацияПоПродукту.Продукт
		|ГДЕ
		|	Scan_ЗаказНаЗакупкуПродуктыКЗаказу.Ссылка = &ЗаказНаЗакупку
		|	И Scan_ЗаказНаЗакупкуПродуктыКЗаказу.Продукт.ГруппаИзделийOFMS = ЗНАЧЕНИЕ(Перечисление.Scan_ГруппыИзделийOFMS.ПрицепнаяТехника)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродуктыЗаказаНаЗакупку.Продукт КАК Продукт,
		|	ПродуктыЗаказаНаЗакупку.Модель КАК Модель,
		|	ПродуктыЗаказаНаЗакупку.ЗаказНаЗавод КАК ЗаказНаЗавод,
		|	ПродуктыЗаказаНаЗакупку.ЗаказНаЗакупку КАК ЗаказНаЗакупку,
		|	ПродуктыЗаказаНаЗакупку.DD КАК DD,
		|	ПродуктыЗаказаНаЗакупку.DD2 КАК DD2,
		|	ПродуктыЗаказаНаЗакупку.ДатаПродажиДилеру КАК ДатаПродажиДилеру,
		|	ПродуктыЗаказаНаЗакупку.ДатаПродажиКлиенту КАК ДатаПродажиКлиенту,
		|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.НомерСоглашенияОПоставке КАК НомерСоглашения
		|ИЗ
		|	ПродуктыЗаказаНаЗакупку КАК ПродуктыЗаказаНаЗакупку
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(
		|				,
		|				Изделие В
		|					(ВЫБРАТЬ
		|						ПродуктыЗаказаНаЗакупку.Продукт
		|					ИЗ
		|						ПродуктыЗаказаНаЗакупку КАК ПродуктыЗаказаНаЗакупку)) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
		|		ПО ПродуктыЗаказаНаЗакупку.Продукт = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие";
		
		Запрос.УстановитьПараметр("ЗаказНаЗакупку", ЗаказНаЗакупку);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		ПродуктыПрицепы.Загрузить(РезультатЗапроса);
		Элементы.ГруппаПереносПрицепов.Видимость = Истина;
	КонецЕсли;
	// Rarus tenkam 21.10.2021 mantis 17822 ---
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтарыйСтатусСоглашения(ТекущееСоглашениеОПоставке)
	//rarus vikhle 09.09.2020 mt 16181 +++
	Если НЕ ТекущееСоглашениеОПоставке.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП Тогда
		Возврат ТекущееСоглашениеОПоставке.Статус;
	КонецЕсли;	
	//Получение статуса до запроса изменений дилером
	//rarus vikhle 14.01.2021 mt 17055 +++
	//Получим список родительских заявок из структуры подчиненности + текущая заявка
	СписокЗаявок = Scan_ВспомогательныеФункцииСервер.ПолучитьРодительскиеОбъекты(ТекущееСоглашениеОПоставке, "Основание",,Истина); //rarus vikhle 06.10.2021 mt 18076 + 2й параметр
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.Статус КАК Статус,
	               |	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.Период КАК Период
	               |ИЗ
	               |	РегистрСведений.Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий КАК Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних
	               |ГДЕ
	               |	НЕ Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.Статус В (&Статусы)
	               |	И Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.ОбъектСтатуса В (&СписокЗаявок)
				   //rarus vikhle 31.08.2021 17834 +++
				   |	И Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловийСрезПоследних.ОбъектСтатуса.ТипСоглашенияОПоставке = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП)
				    //rarus vikhle 31.08.2021 17834 ---
				   |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период УБЫВ";
	Статусы = Новый Массив;
	Статусы.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	Статусы.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ЗапросНаИзменениеСОП);
	Запрос.УстановитьПараметр("Статусы",Статусы);
	//Запрос.УстановитьПараметр("ТекущийОбъект", ТекущееСоглашениеОПоставке);
	Запрос.УстановитьПараметр("СписокЗаявок", СписокЗаявок); ////rarus vikhle 14.01.2021 mt 17055
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Статус;
	//rarus vikhle 09.09.2020 mt 16181 ---
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьЗаявкиНаОгрузкуПродукта(Продукт, Дилер = Неопределено) //rarus vikhle 27.05.2021 mt 17653
	//rarus vikhle 01.09.2021 mt 18228 +++
	//rarus vikhle 30.09.2020 mt 16181 +++
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка КАК ЗаявкаНаОтгрузку
	//               |ИЗ
	//               |	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	//               |ГДЕ
	//               |	НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус В (&СтатусыОтмены)
	//               |	И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.ПометкаУдаления
	//               |	И Scan_ЗаявкаНаОтгрузкуПродукты.Продукт В (&ТекущийПродукт)";
	//
	//МассивСтатусов = Новый Массив;
	//МассивСтатусов.Добавить(Справочники.Scan_СтатусыЗаявокНаОтгрузку.Отказ);
	//МассивСтатусов.Добавить(Справочники.Scan_СтатусыЗаявокНаОтгрузку.Отменена);	
	//Запрос.УстановитьПараметр("СтатусыОтмены",МассивСтатусов);
	//Запрос.УстановитьПараметр("ТекущийПродукт",Продукт);
	////rarus vikhle 27.05.2021 mt 17653 +++
	//Если НЕ Дилер = Неопределено Тогда
	//	Запрос.Текст = Запрос.Текст + " И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Дилер = &Дилер";
	//	Запрос.УстановитьПараметр("Дилер",Дилер);
	//КонецЕсли;	
	//РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	//МассивЗаявок = РезультатЗапроса.ВыгрузитьКолонку("ЗаявкаНаОтгрузку");
	//Возврат МассивЗаявок;	
	//rarus vikhle 30.09.2020 mt 16181 ---
	
	Возврат Документы.Scan_ЗаявкаНаОтгрузку.ПолучитьЗаявкиНаОгрузкуПродукта(Продукт, Дилер);
	//rarus vikhle 01.09.2021 mt 18228 ---
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуПродажиПродукта(Продукт)
	//rarus vikhle 30.09.2020 mt 16181 +++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Scan_СводнаяИнформацияПоПродукту.Продукт.БУ
	               |			ТОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру
	               |		ИНАЧЕ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия
	               |	КОНЕЦ КАК ДатаПродажиИзделия
	               |ИЗ
	               |	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	               |ГДЕ
	               |	Scan_СводнаяИнформацияПоПродукту.Продукт = &Продукт";
	Запрос.УстановитьПараметр("Продукт",Продукт);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ДатаПродажиИзделия;
	Иначе
		Возврат Дата(1,1,1);
	КонецЕсли;
	//rarus vikhle 30.09.2020 mt 16181 ---
КонецФункции	

&НаСервере
Процедура ОбновитьЗаявкиНаОтгрузку(МассивПродуктов)
	//rarus vikhle 01.09.2021 mt 18228 +++
	//rarus vikhle 30.09.2020 mt 16181 +++
	//МассивЗаявокНаОтгрузку = ПолучитьЗаявкиНаОгрузкуПродукта(МассивПродуктов);
	//Для Каждого ЗаявкаНаОтгрузку Из МассивЗаявокНаОтгрузку Цикл
	//	Если НЕ ЗаявкаНаОтгрузку.СоглашениеОПоставке = НовоеСоглашениеОПоставке Тогда  
	//		ОбъектЗаявкаНаОтгрузку = ЗаявкаНаОтгрузку.ПолучитьОбъект();
	//		ОбъектЗаявкаНаОтгрузку.СоглашениеОПоставке = НовоеСоглашениеОПоставке;
	//		Попытка
	//			 ОбъектЗаявкаНаОтгрузку.Записать();
	//			 //ВывестиСообщениеПол("В заявке на отгрузку %1 обновлен реквизит ""Соглашение о поставке"".",,,,,ОбъектЗаявкаНаОтгрузку.Ссылка);
	//			 ВывестиСообщениеПол(Нстр("ru = 'В заявке на отгрузку %1 обновлен реквизит ""Заявка"".'"),,,,,ОбъектЗаявкаНаОтгрузку.Ссылка); //rarus vikhle 05.11.2020 mt 16723
	//		Исключение 
	//		   	ЗаписьЖурналаРегистрации(Нстр("ru = 'Запись заявки на отгрузку'"),УровеньЖурналаРегистрации.Ошибка,,
	//									ОбъектЗаявкаНаОтгрузку.Ссылка,
	//									Нстр("ru = 'Произошла ошибка при записи заявки на отгрузку. '") + ОписаниеОшибки());
	//		КонецПопытки;
	//	КонецЕсли;							
	//КонецЦикла;
	//rarus vikhle 30.09.2020 mt 16181 ---
	
	Документы.Scan_ЗаявкаНаОтгрузку.ОбновитьЗаявкуВЗаявкахНаОтгрузкуПродуктов(МассивПродуктов, НовоеСоглашениеОПоставке);
	//rarus vikhle 01.09.2021 mt 18228 ---
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьУсловияОплаты(ИДСтрокиСпискаПродуктов, ИзмененаЦена = Истина)//rarus vikhle 03.08.2021 17637 добавил параметры ИДСтрокиСпискаПродуктов и ИзмененаЦена
	//rarus vikhle 02.10.2020 mt 16181 +++
	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//Если ИзмененаЦена Тогда //rarus vikhle 17.06.2021 mt 17637
	//	ОбновитьСуммуПродуктовБезСУ();
	//	СписокПродуктовТЗ = РеквизитФормыВЗначение("СписокПродуктов");
	//	Для Каждого СтрокаТаблицы Из УсловияОплаты Цикл
	//		Если СтрокаТаблицы.Продукт.Пустая() Тогда
	//			СтрокаТаблицы.Сумма = СтрокаТаблицы.ПроцентОплаты / 100 * ОбщаяСуммаТекущегоСоглашения; 
	//		Иначе
	//			СтрокаПродукта = СписокПродуктовТЗ.Найти(СтрокаТаблицы.Продукт);
	//			Если НЕ СтрокаПродукта = Неопределено Тогда
	//				СтрокаТаблицы.Сумма = СтрокаТаблицы.ПроцентОплаты / 100 * СтрокаПродукта.ИтоговаяСумма; 
	//			КонецЕсли;	
	//		КонецЕсли; 
	//	КонецЦикла;
	//Иначе
	//	//rarus vikhle 28.06.2021 m 17637 +++ 
	//	//rarus vikhle 18.06.2021 mt 17637 +++
	//	ТаблицаПродуктов = ТаблицаПродуктовПоСтранице(ЭтотОбъект);
	//	Если ТаблицаПродуктов = Неопределено Тогда
	//		Возврат;	
	//	КонецЕсли;	
	//	//rarus vikhle 18.06.2021 mt 17637 ---
	//	//rarus vikhle 28.06.2021 m 17637 ---
	//	
	//	//rarus vikhle 17.06.2021 mt 17637 +++
	//	// Изменена DDS, в строках с продуктом обновляем дату, если вид расчета зависит от DDS
	//	СтрокаПродукта = СписокПродуктов.НайтиПоИдентификатору(ТаблицаПродуктов.ТекущаяСтрока);
	//	ТекущийПродукт = СтрокаПродукта.Продукт;
	//	
	//	СтруктураОтбора	= Новый Структура("Продукт",ТекущийПродукт);
	//	СтрокиПродукта	= УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	//	Для Каждого Строка Из СтрокиПродукта Цикл
	//		Если Строка.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS Тогда
	//			Если НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда
	//				Строка.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), Строка.СрокОплатыАванса); 	
	//			Иначе
	//				Строка.КрайняяДатаОплаты = Дата(1,1,1);	
	//			КонецЕсли;
	//		ИначеЕсли Строка.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS Тогда 
	//			Если НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда 
	//				Строка.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), Строка.СрокОплатыАванса); 
	//			Иначе
	//				Строка.КрайняяДатаОплаты = Дата(1,1,1);	
	//			КонецЕсли; 
	//		КонецЕсли;	
	//	КонецЦикла;	
	//	//rarus vikhle 17.06.2021 mt 17637 ---
	//КонецЕсли;	
	//ОбновитьГрафикПлатежей();//rarus vikhle 24.12.2020 mt 17026
	//ВывестиСообщениеПол(Нстр("ru = 'Обновлены условия оплаты'"));
	//rarus vikhle 06.07.2021 17637 ---
	
	//rarus vikhle 04.08.2021 17637 +++ Закомментировал
	//ОбновитьОбщуюСуммуСоглашения();
	//Для Каждого СтрокаТаблицы Из УсловияОплаты Цикл
	//	СтрокаТаблицы.Сумма = СтрокаТаблицы.ПроцентОплаты / 100 * ОбщаяСуммаТекущегоСоглашения; 
	//КонецЦикла;
	//ОбновитьГрафикПлатежей();
	//ВывестиСообщениеПол(Нстр("ru = 'Обновлены условия оплаты'"));
	//rarus vikhle 04.08.2021 17637 ---
	
	//rarus vikhle 04.08.2021 mt 17637 +++
	СтрокаСпискаПродуктов	= СписокПродуктов.НайтиПоИдентификатору(ИДСтрокиСпискаПродуктов); 
	Продукт					= СтрокаСпискаПродуктов.Продукт;
		
	// Ищем строки условий с продуктом
	СтруктураОтбора			= Новый Структура("Продукт", Продукт);
	СтрокиУсловийПродукта 	= УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	
	Если ИзмененаЦена Тогда
		
		// Обновляем итоговую сумму продажи в списке продуктов
		ОбновитьИтоговуюСуммуПродукта(СтрокаСпискаПродуктов);
				
		// Пересчет сумм в условиях оплаты продукта
		Для Каждого СтрокаУсловий Из СтрокиУсловийПродукта Цикл
			СтрокаУсловий.Сумма = СтрокаУсловий.ПроцентОплаты / 100 * СтрокаСпискаПродуктов.ИтоговаяСумма;				
		КонецЦикла;
				
	Иначе 
		// Изменена DDS
		Для Каждого СтрокаУсловий Из СтрокиУсловийПродукта Цикл 
			Если СтрокаУсловий.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS Тогда
				Если НЕ СтрокаСпискаПродуктов.DDS = Дата(1,1,1) Тогда
					СтрокаУсловий.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаСпискаПродуктов.DDS), СтрокаУсловий.СрокОплатыАванса); 	
				Иначе
					СтрокаУсловий.КрайняяДатаОплаты = Дата(1,1,1);	
				КонецЕсли;	
			ИначеЕсли СтрокаУсловий.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS Тогда
				Если НЕ СтрокаСпискаПродуктов.DDS = Дата(1,1,1) Тогда 
					СтрокаУсловий.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаСпискаПродуктов.DDS), СтрокаУсловий.СрокОплатыАванса); 
				Иначе
					СтрокаУсловий.КрайняяДатаОплаты = Дата(1,1,1);	
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;	
			
	КонецЕсли;
	
	ОбновитьГрафикПлатежей(Продукт);
	//rarus vikhle 04.08.2021 mt 17637 ---
	
	//rarus vikhle 02.10.2020 mt 16181  ---
КонецПроцедуры	

&НаСервере
Процедура ОбновитьИтоговуюСуммуПродукта(СтрокаСпискаПродуктов)
	//rarus vikhle 02.10.2020 mt 16181 +++
	Если ТипЗнч(СтрокаСпискаПродуктов.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
	   	ТаблицаРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки();
		СтрокаБазовойЦены = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаДилера"),"СоставляющаяЦены");
		Если НЕ СтрокаБазовойЦены =  Неопределено Тогда
			СтрокаБазовойЦены.ЦенаСНДС = СтрокаСпискаПродуктов.ЦенаСНДС;
			СтрокаБазовойЦены.ЦенаБезНДС = СтрокаСпискаПродуктов.ЦенаБезНДС;	
			СтрокаБазовойЦены.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
		КонецЕсли;
		
		Если НЕ СтрокаСпискаПродуктов.СпециальныеУсловия.Пустая() Тогда
			СтрокаЦеныСУ	 			= ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
			Если НЕ СтрокаЦеныСУ = Неопределено Тогда
				СтрокаЦеныСУ.ЦенаСНДС 		= СтрокаСпискаПродуктов.СпециальныеУсловия.СпецDealerNet;//rarus vikhle 17.12.2020 mt 16181 заменил на согласованную
				СтрокаЦеныСУ.ЦенаБезНДС 	= СтрокаСпискаПродуктов.СпециальныеУсловия.ЦенаБезНДС;
				СтрокаЦеныСУ.СтавкаНДС 		= СтрокаСпискаПродуктов.СпециальныеУсловия.СтавкаНДС;
			КонецЕсли;
			
			СтрокаЦеныСУ = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice"),"СоставляющаяЦены");
			Если НЕ СтрокаЦеныСУ = Неопределено Тогда
				СтрокаЦеныСУ.ЦенаСНДС 		= СтрокаСпискаПродуктов.СпециальныеУсловия.СпецCustomerPrice;//rarus vikhle 17.12.2020 mt 16181 заменил на согласованную
				СтрокаЦеныСУ.ЦенаБезНДС		= СтрокаСпискаПродуктов.СпециальныеУсловия.ЦенаДляКлиентаБезНДС;//rarus vikhle 17.12.2020 mt 16181
				СтрокаЦеныСУ.СтавкаНДС 		= СтрокаСпискаПродуктов.СпециальныеУсловия.СтавкаНДС;
			КонецЕсли;
		Иначе
			СтрокаЦеныСУ 				= ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
			СтрокаЦеныСУ.ЦенаСНДС 		= 0;
			СтрокаЦеныСУ.ЦенаБезНДС 	= 0;
							
			СтрокаЦеныСУ = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice"),"СоставляющаяЦены");
			СтрокаЦеныСУ.ЦенаСНДС 		= 0;
		КонецЕсли;
		
		// rarus tenkam 02.04.2021 mantis 17419 +++
		СтрокаЦенаПоВалОговорке = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаПоВалютнойОговорке"),"СоставляющаяЦены");
		Если НЕ СтрокаЦенаПоВалОговорке =  Неопределено Тогда
			СтрокаЦенаПоВалОговорке.ЦенаСНДС = СтрокаСпискаПродуктов.ЦенаПоВалютнойОговорке;
			СтрокаЦенаПоВалОговорке.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
		КонецЕсли;
		// rarus tenkam 02.04.2021 mantis 17419 ---
		
		СтрокаЛогЗатраты = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЛогистическиеЗатраты"),"СоставляющаяЦены");
		Если НЕ СтрокаЛогЗатраты =  Неопределено Тогда
			СтрокаЛогЗатраты.ЦенаСНДС = СтрокаСпискаПродуктов.ЛогистическиеЗатратыСумма;
			СтрокаЛогЗатраты.ЦенаБезНДС = СтрокаСпискаПродуктов.ЛогистическиеЗатратыСумма;	
			СтрокаЛогЗатраты.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
		КонецЕсли;
		
		СтрокаКомпенсации = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.Компенсация"),"СоставляющаяЦены");
		Если НЕ СтрокаКомпенсации =  Неопределено Тогда
			СтрокаКомпенсации.ЦенаСНДС = СтрокаСпискаПродуктов.КомпенсацииСумма;
			СтрокаКомпенсации.ЦенаБезНДС = СтрокаСпискаПродуктов.КомпенсацииСумма;	
			СтрокаКомпенсации.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
		КонецЕсли;
		
		// rarus tenkam 23.04.2021 mantis 17648 +++
		СтрокаИзменениеСпецификации = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ИзменениеСпецификацииПоИнициативеЗавода"),"СоставляющаяЦены");
		Если НЕ СтрокаИзменениеСпецификации =  Неопределено Тогда
			СтрокаИзменениеСпецификации.ЦенаСНДС = СтрокаСпискаПродуктов.ИзменениеСпецификацииПоИнициативеЗаводаСумма;
			СтрокаИзменениеСпецификации.ЦенаБезНДС = СтрокаСпискаПродуктов.ИзменениеСпецификацииПоИнициативеЗаводаСумма;	
			СтрокаИзменениеСпецификации.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
		КонецЕсли; 		
		// rarus tenkam 23.04.2021 mantis 17648 ---
		
		СтрокаДрайва = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ПроцентДрайва"),"СоставляющаяЦены");
		Если НЕ СтрокаДрайва =  Неопределено Тогда
			СтрокаДрайва.ЦенаСНДС = СтрокаСпискаПродуктов.ПроцентДрайв;
			СтрокаДрайва.ЦенаБезНДС = СтрокаСпискаПродуктов.ПроцентДрайв;	
			СтрокаДрайва.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
		КонецЕсли;
		
		ПолнаяТаблицаСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.РассчитатьПолнуюТаблицуСоставляющих(ТаблицаРучныхСоставляющих);
		СтрокаИтоговойЦены = ПолнаяТаблицаСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаDealerNetСоСкидкой"),"СоставляющаяЦены");
		Если НЕ СтрокаИтоговойЦены =  Неопределено Тогда
			СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаИтоговойЦены.ЦенаСНДС;
		КонецЕсли;	
	//rarus vikhle 03.08.2021 17637 +++ Закомментировал	
	//rarus vikhle 17.06.2021 mt 17637 +++	
	//ИначеЕсли ТипЗнч(СтрокаСпискаПродуктов.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
	//	Если СтрокаСпискаПродуктов.СпециальныеУсловия.Пустая() Тогда
	//		СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.ЦенаСНДС * СтрокаСпискаПродуктов.Количество; //rarus vikhle 29.12.2020 mt 16181 добавил умножение на количество
	//	Иначе
	//		СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.СпециальныеУсловия.СпецDealerNet * СтрокаСпискаПродуктов.Количество;//rarus vikhle 29.12.2020 mt 16181 добавил умножение на количество	
	//	КонецЕсли;	
	//	Если НЕ СтрокаСпискаПродуктов.ПроцентДрайв = 0 Тогда
	//		СтрокаСпискаПродуктов.ИтоговаяСумма = СтрокаСпискаПродуктов.ИтоговаяСумма - (СтрокаСпискаПродуктов.ИтоговаяСумма * СтрокаСпискаПродуктов.ПроцентДрайв / 100); 
	//	КонецЕсли;	
	//rarus vikhle 17.06.2021 mt 17637 ---
	//rarus vikhle 03.08.2021 17637 ---
	КонецЕсли;
	//rarus vikhle 02.10.2020 mt 16181 ---
КонецПроцедуры	

//rarus vikhle 04.08.2021 mt 17637 +++ Закомментировал
//&НаСервере
////Процедура ОбновитьСуммуПродуктовБезСУ() //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//Процедура ОбновитьОбщуюСуммуСоглашения() //rarus vikhle 06.07.2021 17637 Откат, переименовал
//	//rarus vikhle 02.10.2020 mt 16181 +++	
//	ОбщаяСуммаТекущегоСоглашения = 0;
//	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
//		ОбновитьИтоговуюСуммуПродукта(СтрокаСписка);
//		//СуммаПродуктовБезСУ = СуммаПродуктовБезСУ + СтрокаСписка.ИтоговаяСумма;
//		//rarus vikhle 17.06.2021 mt 17637 +++
//		//Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") И СтрокаСписка.СпециальныеУсловия.Пустая() Тогда //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//			ОбщаяСуммаТекущегоСоглашения = ОбщаяСуммаТекущегоСоглашения + СтрокаСписка.ИтоговаяСумма;
//		//КонецЕсли;//rarus vikhle 06.07.2021 17637 Откат, закомментировал	
//		//rarus vikhle 17.06.2021 mt 17637 ---
//	КонецЦикла;	
//	//rarus vikhle 02.10.2020 mt 16181 ---
//КонецПроцедуры
//rarus vikhle 04.08.2021 mt 17637 ---
//rarus bonmak 09.08.2021 16834 ++
//&НаСервереБезКонтекста
//Функция ПолучитьДатуНачалаПервогоДоговора(ПодчиненныйДоговор)
//	//rarus vikhle 05.10.2020 mt 16181 +++
//	
//	Если ПодчиненныйДоговор.ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение Тогда
//		Возврат ПодчиненныйДоговор.ДатаНачала; 
//	КонецЕсли;	
//	
//	ДоговорОснование = ПодчиненныйДоговор.ДоговорОснование;
//	Если НЕ ДоговорОснование.Пустая() И ДоговорОснование.ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение Тогда
//		Возврат ДоговорОснование.ДатаНачала;
//	КонецЕсли;
//	
//	МассивСОП = Новый Массив;
//    МассивСОП.Добавить(ДоговорОснование);
//			
//	Для Каждого СОП Из МассивСОП Цикл
//		ДоговорОснование = СОП.ДоговорОснование; 
//		Если НЕ ДоговорОснование.Пустая() И ДоговорОснование.ВидДоговора = Перечисления.Scan_ВидыДоговоров.Соглашение Тогда
//			Возврат ДоговорОснование.ДатаНачала;
//		ИначеЕсли НЕ ДоговорОснование.Пустая() Тогда 
//			МассивСОП.Добавить(ДоговорОснование);
//        КонецЕсли;	
//	КонецЦикла;
//	
//	Возврат Дата(1,1,1);
//	
//	//rarus vikhle 05.10.2020 mt 16181 ---
//КонецФункции
//rarus bonmak 09.08.2021 16834 --
//rarus vikhle 03.08.2021 mt 17637 +++
//&НаКлиенте
//Процедура ОбновитьСтрокуПостоплаты()
//	//rarus vikhle 09.10.2020 mt 16181 +++
//	//ПустаяСсылкаПродукта = ПредопределенноеЗначение("Справочник.Scan_Изделия.ПустаяСсылка");//rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//	
//	ПараметрыОтбора = Новый Структура;
//	ПараметрыОтбора.Вставить("ВидОплаты", ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Постоплата"));
//	//ПараметрыОтбора.Вставить("Продукт",	  ПустаяСсылкаПродукта);//rarus vikhle 15.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//	
//	СтрокиПостоплаты = УсловияОплаты.НайтиСтроки(ПараметрыОтбора);//rarus vikhle 15.06.2021 mt 17637
//	
//	Если СтрокиПостоплаты.Количество() = 0 Тогда
//		Возврат;
//	Иначе
//		ПараметрыОтбора = Новый Структура;
//		ПараметрыОтбора.Вставить("ВидОплаты", ПредопределенноеЗначение("Перечисление.Scan_ВидыОплат.Предоплата"));
//		//ПараметрыОтбора.Вставить("Продукт",   ПустаяСсылкаПродукта);//rarus vikhle 10.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//		МассивСтрокПредоплаты = УсловияОплаты.НайтиСтроки(ПараметрыОтбора);
//		ОбщаяСуммаПредоплаты = 0;
//		ОбщийПроцентПредоплаты = 0;
//		Для Каждого ЭлементМассива Из МассивСтрокПредоплаты Цикл
//			ОбщаяСуммаПредоплаты	= ОбщаяСуммаПредоплаты + ЭлементМассива.Сумма;
//			ОбщийПроцентПредоплаты	= ОбщийПроцентПредоплаты + ЭлементМассива.ПроцентОплаты;  
//		КонецЦикла;	
//		СтрокиПостоплаты[0].Сумма			= ОбщаяСуммаТекущегоСоглашения - ОбщаяСуммаПредоплаты;
//		СтрокиПостоплаты[0].ПроцентОплаты	= 100 - ОбщийПроцентПредоплаты;
//	КонецЕсли;	
//		
//	//rarus vikhle 09.10.2020 mt 16181 ---	
//КонецПроцедуры
//rarus vikhle 03.08.2021 mt 17637 ---

//rarus vikhle 05.11.2020 mt 16181 +++
&НаКлиенте
Процедура ПослеЗакрытияПредупреждения(Результат,ДопПараметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьОбщиеДанныеЗаявки();
		ЗаполнитьТаблицы();
		ПродуктыКПереносу.Очистить(); //rarus vikhle 28.09.2021 mt 18076
		СтатусНовойВерсииЗаявки = Неопределено; //rarus vikhle 21.10.2021 m 18076
	КонецЕсли;	

КонецПроцедуры
//rarus vikhle 05.11.2020 mt 16181 ---

//rarus vikhle 05.11.2020 mt 16181 +++
&НаСервере
Процедура ЗаполнитьТаблицы()
	
	СтруктураТаблиц = ПолучитьИзВременногоХранилища(СсылкаНаТаблицыСоглашения);
	УсловияОплаты.Загрузить(СтруктураТаблиц.ТаблицаУсловия); //rarus vikhle 05.10.2020 mt 16181
	ГрафикПлатежей.Загрузить(СтруктураТаблиц.ТаблицаГрафикПлатежей); //rarus vikhle 24.12.2020 mt 17026	
	СписокПродуктов.Загрузить(СтруктураТаблиц.ТаблицаСостав); //rarus vikhle 11.09.2020 mt 16526
	СгруппированныеУсловияОплаты.Загрузить(СтруктураТаблиц.ТаблицаСгруппированныеУсловияОплаты);//rarus vikhle 04.08.2021 mt 17637
	СтандартныеУсловияОплаты.Загрузить(СтруктураТаблиц.ТаблицаСтандартныеУсловияОплаты); //rarus vikhle 17.09.2021 mt 18288
	
	// rarus tenkma 13.04.2021 mantis 17523 +++
	// даты должны рассчитаться от текущего дня т.к. от того дня будет доп. соглашение
	Если НЕ ТекущийДоговор.Пустая() Тогда //rarus vikhle 23.06.2021 17637
		Для Каждого ТекСтрокаУО Из УсловияОплаты Цикл
			Если ТекСтрокаУО.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора") Тогда
				ТекСтрокаУО.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(ТекущаяДата()), ТекСтрокаУО.СрокОплатыАванса);
			КонецЕсли;
		КонецЦикла;	
		ОбновитьГрафикПлатежей();
		// rarus tenkam 13.04.2021 mantis 17523 ---    	
	КонецЕсли;	
		
	//rarus vikhle 10.11.2021 m 18529 +++
	//Если Элементы.СтраницаСостав.Видимость 
	//	ИЛИ Элементы.СтраницаЦены.Видимость 
	//	ИЛИ Элементы.СтраницаРазделениеЗаявки.Видимость //rarus vikhle 08.10.2021 mt 18076
	//	ИЛИ Элементы.СтраницаОбщиеДанныеЗаявки.Видимость Тогда //rarus vikhle 31.05.2021 mt 17653 
	//rarus vikhle 10.11.2021 m 18529 ---
	
	Для Каждого СтрокаТаблицы Из СписокПродуктов Цикл
		СтрокаТаблицы.ТипПродукта = ТипЗнч(СтрокаТаблицы.Продукт);	
		//СтрокаТаблицы.ТипПродукта = ПолучитьОписаниеТипаПродукта(СтрокаТаблицы.Продукт);//rarus vikhle 07.05.2021 mt 17752
		СтрокаТаблицы.ВТекущейЗаявке = Истина; //rarus vikhle 10.11.2020 mt 16181
		//Если (Элементы.СтраницаЦены.Видимость ИЛИ Элементы.СтраницаОбщиеДанныеЗаявки.Видимость)//rarus vikhle 31.05.2021 mt 17653 //rarus vikhle 10.11.2021 m 18529
		Если ТипЗнч(СтрокаТаблицы.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда //rarus vikhle 10.11.2021 m 18529
			
			ТаблицаРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(СтрокаТаблицы.Продукт);
			СтрокаЗатраты = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ЛогистическиеЗатраты,"СоставляющаяЦены");
			Если НЕ СтрокаЗатраты =  Неопределено Тогда
				СтрокаТаблицы.ЛогистическиеЗатратыСумма = СтрокаЗатраты.ЦенаСНДС;
				СтрокаТаблицы.ЛогистическиеЗатратыСуммаТекущие = СтрокаЗатраты.ЦенаСНДС;
				СтрокаТаблицы.КомментарийЛогистическиеЗатраты = СтрокаЗатраты.Комментарий; 	// rarus tenkam 26.04.2021 mantis 17468 +
			КонецЕсли;
			СтрокаКомпенсация = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.Компенсация,"СоставляющаяЦены");
			Если НЕ СтрокаКомпенсация =  Неопределено Тогда
				СтрокаТаблицы.КомпенсацииСумма = СтрокаКомпенсация.ЦенаСНДС;
				СтрокаТаблицы.КомпенсацииСуммаТекущие = СтрокаКомпенсация.ЦенаСНДС;
				СтрокаТаблицы.КомментарийКомпенсации = СтрокаКомпенсация.Комментарий; 	// rarus tenkam 26.04.2021 mantis 17468 +
			КонецЕсли;
			
			// rarus tenkam 23.04.2021 mantis 17648 +++
			СтрокаИзменениеСпецификации = ТаблицаРучныхСоставляющих.Найти(Справочники.Scan_СоставляющиеРасчетаЦеныПродуктов.ИзменениеСпецификацииПоИнициативеЗавода,"СоставляющаяЦены");
			Если НЕ СтрокаИзменениеСпецификации =  Неопределено Тогда
				СтрокаТаблицы.ИзменениеСпецификацииПоИнициативеЗаводаСумма = СтрокаИзменениеСпецификации.ЦенаСНДС;
				СтрокаТаблицы.ИзменениеСпецификацииПоИнициативеЗаводаСуммаТекущие = СтрокаИзменениеСпецификации.ЦенаСНДС;
				СтрокаТаблицы.КомментарийИзменениеСпецификации = СтрокаИзменениеСпецификации.Комментарий;
			КонецЕсли;
			// rarus tenkam 23.04.2021 mantis 17648 ---
		КонецЕсли;
	КонецЦикла;	
	//КонецЕсли; //rarus vikhle 10.11.2021 m 18529
	
	Если Элементы.ГруппаТаблицаПродуктыКП.Видимость Тогда
		ЗаполнитьПоЗаказамНаСервере();	
	КонецЕсли;	
		
КонецПроцедуры	
//rarus vikhle 05.11.2020 mt 16181 ---

&НаСервере
Процедура УстановитьУсловноеОформление()//rarus vikhle 01.04.2021 mt 17472 убрал параметр
	
	//rarus vikhle 10.11.2020 mt 16181 +++
	УсловноеОформление.Элементы.Очистить();//rarus vikhle 18.12.2020 mt 16181 +++
	//rarus vikhle 25.05.2021 mt 17780 +++
	ТипДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"Дилер.ВидДилера");
	ПутьКПолюДатыПродажи = ?(ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный, "СписокПродуктов.ДатаПродажиКлиенту", "СписокПродуктов.ДатаПродажиДилеру");
	//rarus vikhle 25.05.2021 mt 17780 ---
	
	//dds
	Если НЕ Элементы.СписокПродуктовСоставDDS.ТолькоПросмотр Тогда //rarus vikhle 28.02.2021 mt 17186 для дилеров всегда недоступно
		
		//rarus vikhle 23.03.2021 mt 17472 +++
		//При незаполненном DD недоступно DDS
				
		Элемент = УсловноеОформление.Элементы.Добавить();

		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСоставDDS.Имя);

		//rarus vikhle 01.04.2021 mt 17472 +++
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСрокиDDS.Имя); 
		//rarus vikhle 01.04.2021 mt 17472 ---
		
		ГруппаОтбора			= Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.ТипГруппы	= ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		
		ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.DD");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
		//rarus vikhle 23.03.2021 mt 17472 ---
		//При заполненной дате продажи недоступно DDS
		//rarus vikhle 25.05.2021 mt 17780 +++
		//ТипДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"Дилер.ВидДилера");
		//ПутьКПолюДатыПродажи = ?(ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный,"СписокПродуктов.ДатаПродажиКлиенту","ДатаПродажиДилеру");
		//rarus vikhle 25.05.2021 mt 17780 ---
		ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюДатыПродажи);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		//rarus vikhle 26.03.2021 mt 17472 +++
		
		
		//rarus vikhle 26.03.2021 mt 17472 ---
		
		Если НЕ Элементы.СтраницаСроки.Видимость Тогда //rarus vikhle 01.04.2021 mt 17472
			//Доступность DDS на странице состав для добавленных продуктов
			
			//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));//rarus vikhle 23.03.2021 mt 17472
			ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ВТекущейЗаявке");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Истина;

			//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);//rarus vikhle 23.03.2021 mt 17472
		КонецЕсли; //rarus vikhle 23.03.2021 mt 17472
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);//rarus vikhle 23.03.2021 mt 17472
	КонецЕсли;
	//количество
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСоставКоличество.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ТипПродукта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Строка(Тип("СправочникСсылка.Scan_Изделия"));
	//ОтборЭлемента.ПравоеЗначение = ПолучитьОписаниеТипаПродукта(Справочники.Scan_Изделия.ПустаяСсылка()); //rarus vikhle 07.05.2021 mt 17752
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//базовая цена
	//rarus vikhle 29.12.2020 mt 16181 +++ корректировка базовой цены доступна для всех продуктов
	//Элемент = УсловноеОформление.Элементы.Добавить();

	//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныЦенаСНДС.Имя);

	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ВТекущейЗаявке");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = Истина;

	//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//rarus vikhle 29.12.2020 mt 16181---
	
	//rarus vikhle 10.11.2020 mt 16181 ---
	
	//rarus vikhle 18.12.2020 mt 16181 +++ 
	
	//Условия оплаты
	//rarus vikhle 28.07.2021 mt 17637 +++ закомментировал
	
	//Элемент = УсловноеОформление.Элементы.Добавить();

	//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УсловияОплатыКрайняяДатаОплаты.Имя);
	//
	//ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	//
	//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УсловияОплаты.РасчетДатыОплаты");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	//
	//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УсловияОплаты.РасчетДатыОплаты");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS");
	//
	//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УсловияОплаты.РасчетДатыОплаты");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS");
	//
	//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//rarus vikhle 28.07.2021 mt 17637 ---
	//rarus vikhle 18.12.2020 mt 16181 ---
	
	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//rarus vikhle 08.06.2021 mt 17637 +++
	// Только просмотр во всех колонках т.ч. "Условия оплаты" для строк с заполненным продуктом 
	//Элемент = УсловноеОформление.Элементы.Добавить();

	//Для Каждого Колонка Из Элементы.УсловияОплаты.ПодчиненныеЭлементы Цикл
	//	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Колонка.Имя);
	//КонецЦикла;
	//	
	//ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("УсловияОплаты.Продукт");
	//ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	//
	//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//rarus vikhle 08.06.2021 mt 17637 ---
	//rarus vikhle 06.07.2021 17637 ---
	
	//rarus vikhle 29.12.2020 mt 16181 +++
	//Лог. затраты
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныЛогистическиеЗатратыСумма.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ТипПродукта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Строка(Тип("СправочникСсылка.Scan_ДрафтыПродуктов"));
	//ОтборЭлемента.ПравоеЗначение = ПолучитьОписаниеТипаПродукта(Справочники.Scan_ДрафтыПродуктов.ПустаяСсылка()); //rarus vikhle 07.05.2021 mt 17752
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//Компенсации
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныКомпенсацииСумма.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ТипПродукта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Строка(Тип("СправочникСсылка.Scan_ДрафтыПродуктов"));
	//ОтборЭлемента.ПравоеЗначение = ПолучитьОписаниеТипаПродукта(Справочники.Scan_ДрафтыПродуктов.ПустаяСсылка()); //rarus vikhle 07.05.2021 mt 17752
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//rarus vikhle 29.12.2020 mt 16181 ---
	
	// rarus tenkam 23.04.2021 mantis 17648 +++
	//Изменение спецификации по инициативе завода
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныИзменениеСпецификацииПоИнициативеЗаводаСумма.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ТипПродукта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Строка(Тип("СправочникСсылка.Scan_ДрафтыПродуктов"));
	//ОтборЭлемента.ПравоеЗначение = ПолучитьОписаниеТипаПродукта(Справочники.Scan_ДрафтыПродуктов.ПустаяСсылка()); //rarus vikhle 07.05.2021 mt 17752
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// rarus tenkam 23.04.2021 mantis 17648 ---
	
	//rarus vikhle 25.02.2021 mt 17186 +++
	
	//Доступность СУ для продуктов в зависимости от наличия даты продажи
	Если НЕ Элементы.СписокПродуктовЦеныСпецУсловия.ТолькоПросмотр Тогда
		//rarus kabany 16.04.2021 17533 +++
		//ТипДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"Дилер.ВидДилера"); //rarus vikhle 25.05.2021 mt 17780
		Если НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда
			//Если ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда //rarus vikhle 25.05.2021 mt 17780	
			//rarus kabany 16.04.2021 17533 ---	
			Элемент = УсловноеОформление.Элементы.Добавить();                  
			
			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныСпецУсловия.Имя);
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			//rarus vikhle 25.05.2021 mt 17780 +++
			//rarus kabany 16.04.2021 17533 +++
			//Если ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
			//	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ДатаПродажиКлиенту");  
			//Иначе
			//	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ДатаПродажиДилеру");	
			//КонецЕсли;
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюДатыПродажи);
			//rarus vikhle 25.05.2021 mt 17780 ---
			//rarus kabany 16.04.2021 17533 ---
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
			Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
			//КонецЕсли;
		КонецЕсли;
		//rarus vikhle 26.05.2021 m 17533 +++
		//Доступность СУ для продуктов в зависимости от даты отгрузки
		//Элемент = УсловноеОформление.Элементы.Добавить();
		//
		//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныСпецУсловия.Имя);
		//
		//ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		//ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		//
		////rarus vikhle 25.05.2021 mt 17780 +++ перенес в 1 условный блок
		////Если дата отгрузки равна текущей или завтрашней дате, тогда только просмотр для колонки СУ
		//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ДатаБрони");
		//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ОтборЭлемента.ПравоеЗначение = НачалоДня(ТекущаяДатаСеанса()); 
		//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		//
		//ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ДатаБрони");
		//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ОтборЭлемента.ПравоеЗначение = НачалоДня(ТекущаяДатаСеанса()) + 60 * 60 * 24; 
		//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		//rarus vikhle 25.05.2021 mt 17780 ---
		//rarus vikhle 26.05.2021 m 17533 ---
	КонецЕсли;
	//rarus vikhle 25.02.2021 mt 17186 ---
	
	//rarus vikhle 24.05.2021 mt 17780 +++
	//Себестоимость
	//Доступность
	Если НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда //rarus vikhle 25.05.2021 mt 17780
		Элемент = УсловноеОформление.Элементы.Добавить();

		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныСебестоимость.Имя);
		
		//rarus vikhle 25.05.2021 mt 17780 +++
		ГруппаОтбораГлавная = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных")); 
		ГруппаОтбораГлавная.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		//rarus vikhle 25.05.2021 mt 17780 ---
		
		ГруппаОтбораПодчиненная = ГруппаОтбораГлавная.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбораПодчиненная.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ОтборЭлемента = ГруппаОтбораПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.СпециальныеУсловия");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		
		ОтборЭлемента = ГруппаОтбораПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ЦенаПоВалютнойОговорке");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
		
		//rarus vikhle 25.05.2021 mt 17780 +++
		ОтборЭлемента = ГруппаОтбораГлавная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюДатыПродажи);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		//rarus vikhle 25.05.2021 mt 17780 ---
			
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	КонецЕсли;	
	
	//Изменение фона
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныСебестоимость.Имя);
	
	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.Себестоимость");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.Себестоимость");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("СписокПродуктов.ИтоговаяСумма");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.ТемноОранжевый);
	//rarus vikhle 24.05.2021 mt 17780 ---
	
	//rarus vikhle 25.05.2021 mt 17780 +++
	//Валютная оговорка
	Если НЕ Элементы.СписокПродуктовЦеныЦенаПоВалютнойОговорке.ТолькоПросмотр 
		И  НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда
		Элемент = УсловноеОформление.Элементы.Добавить();

		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныЦенаПоВалютнойОговорке.Имя);
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюДатыПродажи);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	КонецЕсли;	
	
	//rarus vikhle 25.05.2021 mt 17780 +++
	//Базовая цена с НДС.
	Если НЕ Элементы.СписокПродуктовЦеныЦенаСНДС.ТолькоПросмотр 
		И  НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда
		Элемент = УсловноеОформление.Элементы.Добавить();

		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовЦеныЦенаСНДС.Имя);
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюДатыПродажи);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	КонецЕсли;	
			
	//rarus vikhle 25.05.2021 mt 17780 ---
	
	//rarus vikhle 30.08.2021 mt 17933 +++
	//Заказы с записью в регистре "Очередь DD2/DDS информера"
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСостав.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПродуктовСроки.Имя);//rarus vikhle 06.09.2021 mt 17933

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокПродуктов.ВходитВОчередьDD2DDSИнформера");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
	//rarus vikhle 30.08.2021 mt 17933 ---
		
КонецПроцедуры	

&НаСервере
Процедура ОбновитьГрафикПлатежей(Продукт = Неопределено) //rarus vikhle 04.08.2021 mt 17637 + параметр Продукт
	
	//rarus vikhle 24.12.2020 mt 17026 +++
	тзГрафикПлатежей = РеквизитФормыВЗначение("ГрафикПлатежей"); 
	//rarus vikhle 27.10.2021 m 18426 +++
	Справочники.Scan_СоглашенияОПоставке.ОбновитьГрафикПлатежей(тзГрафикПлатежей, УсловияОплаты, Продукт);
	ЗначениеВРеквизитФормы(тзГрафикПлатежей, "ГрафикПлатежей");
	//rarus vikhle 27.10.2021 m 18426 ---
	
	//rarus vikhle 04.08.2021 mt 17637 +++ Закомментировал
	//тзГрафикПлатежей.Очистить();
	//Для Каждого СтрокаУсловий Из УсловияОплаты Цикл
	//	
	//	//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//	//rarus vikhle 17.06.2021 mt 17637 +++
	//	//Строки условий оплаты с заполненным продуктом переносим без изменений
	//	//Если НЕ СтрокаУсловий.Продукт.Пустая() Тогда
	//	//	нСтрокаГрафика 				= тзГрафикПлатежей.Добавить();
	//	//	нСтрокаГрафика.ВидОплаты 	= СтрокаУсловий.ВидОплаты;
	//	//	нСтрокаГрафика.ДатаПлатежа	= СтрокаУсловий.КрайняяДатаОплаты;
	//	//	нСтрокаГрафика.Продукт		= СтрокаУсловий.Продукт;
	//	//	нСтрокаГрафика.Сумма		= СтрокаУсловий.Сумма;
	//	//	Продолжить;
	//	//КонецЕсли;	
	//	//rarus vikhle 17.06.2021 mt 17637 ---
	//	//rarus vikhle 06.07.2021 17637 ---
	//	
	//	Для Каждого СтрокаПродукта Из СписокПродуктов Цикл
	//		
	//		//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//		//rarus vikhle 09.06.2021 mt 17637 +++
	//		//Не учитываем драфты
	//		//Если НЕ ТипЗнч(СтрокаПродукта.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
	//		//	ИЛИ НЕ СтрокаПродукта.СпециальныеУсловия.Пустая() Тогда
	//		//	Продолжить;
	//		//КонецЕсли;	
	//		//rarus vikhle 09.06.2021 mt 17637 ---
	//		//rarus vikhle 06.07.2021 17637 ---
	//		
	//		нСтрокаГрафика = тзГрафикПлатежей.Добавить();
	//		нСтрокаГрафика.ВидОплаты = СтрокаУсловий.ВидОплаты;
	//		//нСтрокаГрафика.Продукт = СтрокаПродукта.Продукт;//rarus vikhle 18.06.2021 mt 17637 //rarus vikhle 06.07.2021 17637 Откат, закомментировал
	//		Если СтрокаУсловий.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора") Тогда
	//			нСтрокаГрафика.ДатаПлатежа	= СтрокаУсловий.КрайняяДатаОплаты;
	//			//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//			//rarus vikhle 18.06.2021 mt 17637 +++
	//			//Если НЕ ОбщаяСуммаТекущегоСоглашения = 0 Тогда
	//			//	ПроцентПродукта = 100 * СтрокаПродукта.ИтоговаяСумма / ОбщаяСуммаТекущегоСоглашения;
	//			//	СуммаПоПродукту = СтрокаУсловий.Сумма * ПроцентПродукта / 100;
	//			//	нСтрокаГрафика.Сумма = СуммаПоПродукту;
	//			//КонецЕсли;
	//			//rarus vikhle 06.07.2021 17637 ---
	//			нСтрокаГрафика.Сумма = СтрокаУсловий.Сумма;//rarus vikhle 06.07.2021 17637 Откат, добавил как было
	//			Прервать; //rarus vikhle 06.07.2021 17637 Откат, раскомментировал
	//			//rarus vikhle 18.06.2021 mt 17637 ---
	//		ИначеЕсли СтрокаУсловий.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS") Тогда
	//			Если ЗначениеЗаполнено(СтрокаПродукта.DDS) Тогда
	//				// rarus tenkam 08.04.2021 mantis 17523 +++
	//				//нСтрокаГрафика.ДатаПлатежа = НачалоДня(СтрокаПродукта.DDS) - СтрокаУсловий.СрокОплатыАванса * 60 * 60 * 24;
	//				нСтрокаГрафика.ДатаПлатежа = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), СтрокаУсловий.СрокОплатыАванса);
	//				// rarus tenkam 08.04.2021 mantis 17523 ---		
	//			КонецЕсли;
	//			Если НЕ ОбщаяСуммаТекущегоСоглашения = 0 Тогда
	//				ПроцентПродукта			= 100 * СтрокаПродукта.ИтоговаяСумма / ОбщаяСуммаТекущегоСоглашения; 
	//				СуммаПоПродукту 		= СтрокаУсловий.Сумма * ПроцентПродукта / 100;
	//				нСтрокаГрафика.Сумма	= СуммаПоПродукту;
	//			КонецЕсли;	
	//		ИначеЕсли СтрокаУсловий.РасчетДатыОплаты = ПредопределенноеЗначение("Перечисление.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS") Тогда
	//			Если ЗначениеЗаполнено(СтрокаПродукта.DDS) Тогда
	//				// rarus tenkam 08.04.2021 mantis 17523 +++
	//				//нСтрокаГрафика.ДатаПлатежа = НачалоДня(СтрокаПродукта.DDS) + СтрокаУсловий.СрокОплатыАванса * 60 * 60 * 24;
	//				нСтрокаГрафика.ДатаПлатежа = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаПродукта.DDS), СтрокаУсловий.СрокОплатыАванса);
	//				// rarus tenkam 08.04.2021 mantis 17523 ---		
	//			КонецЕсли;
	//			Если НЕ ОбщаяСуммаТекущегоСоглашения = 0 Тогда
	//				ПроцентПродукта = 100 * СтрокаПродукта.ИтоговаяСумма / ОбщаяСуммаТекущегоСоглашения; 
	//				СуммаПоПродукту = СтрокаУсловий.Сумма * ПроцентПродукта / 100;
	//				нСтрокаГрафика.Сумма = СуммаПоПродукту;
	//			КонецЕсли;	
	//		КонецЕсли;			
	//	КонецЦикла;	
	//КонецЦикла;
	//rarus vikhle 04.08.2021 mt 17637 ---
	
	//rarus vikhle 27.10.2021 m 18426 +++ закомментировал
	//// Если не передан продукт, полностью перезаполняем график
	//Если Продукт = Неопределено Тогда
	//	тзГрафикПлатежей.Очистить();
	//	Для Каждого СтрокаУсловий Из УсловияОплаты Цикл
	//		//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
	//		//rarus vikhle 09.06.2021 mt 17637 +++
	//		//Строки условий оплаты с заполненным продуктом переносим без изменений
	//		//Если НЕ СтрокаУсловий.Продукт.Пустая() Тогда
	//		//rarus vikhle 29.07.2021 mt 17637 раскомментировал +++
	//		нСтрокаГрафика 				= тзГрафикПлатежей.Добавить();
	//		нСтрокаГрафика.ВидОплаты 	= СтрокаУсловий.ВидОплаты;
	//		нСтрокаГрафика.ДатаПлатежа	= СтрокаУсловий.КрайняяДатаОплаты;
	//		нСтрокаГрафика.Продукт		= СтрокаУсловий.Продукт;
	//		нСтрокаГрафика.Сумма		= СтрокаУсловий.Сумма;
	//	КонецЦикла;	
	//Иначе // Передан продукт, добавляем строки по нему
	//	СтруктураОтбора = Новый Структура("Продукт", Продукт);
	//	
	//	// Удаляем имеющиеся строки графика по продукту
	//	СтрокиГрафикаПродукта = тзГрафикПлатежей.НайтиСтроки(СтруктураОтбора);
	//	Для Каждого СтрокаГрафикаПродукта Из СтрокиГрафикаПродукта Цикл
	//		тзГрафикПлатежей.Удалить(СтрокаГрафикаПродукта);
	//	КонецЦикла;	
	//	
	//	// Копируем строки условий по продукту в график
	//	СтрокиУсловийПродукта = УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	//	Для Каждого СтрокаУсловийПродукта Из СтрокиУсловийПродукта Цикл
	//		нСтрокаГрафика 				= тзГрафикПлатежей.Добавить();
	//		нСтрокаГрафика.ВидОплаты 	= СтрокаУсловийПродукта.ВидОплаты;
	//		нСтрокаГрафика.ДатаПлатежа	= СтрокаУсловийПродукта.КрайняяДатаОплаты;
	//		нСтрокаГрафика.Продукт		= СтрокаУсловийПродукта.Продукт;
	//		нСтрокаГрафика.Сумма		= СтрокаУсловийПродукта.Сумма;
	//	КонецЦикла;
	//КонецЕсли;
	//
	//тзГрафикПлатежей.Свернуть("ВидОплаты,ДатаПлатежа,Продукт","Сумма");//rarus vikhle 10.06.2021 mt 17637 + Продукт
	//тзГрафикПлатежей.Сортировать("ВидОплаты Убыв,ДатаПлатежа");
	//ЗначениеВРеквизитФормы(тзГрафикПлатежей,"ГрафикПлатежей");
	////rarus vikhle 24.12.2020 mt 17026 ---
	//rarus vikhle 27.10.2021 m 18426 ---
	
КонецПроцедуры

//rarus agar 25.12.2020 17006 ++
&НаСервере
Функция КорректировкиЗаявокНаОтгрузкуПоУдаляемымПродуктам()
	
	Если СписокПродуктов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИзмененСостав = Ложь;
	
	ТаблицаПродуктовОбработки  = СписокПродуктов.Выгрузить();
	ТаблицаПродуктовСоглашения = ТекущееСоглашениеОПоставке.СписокПродуктов.Выгрузить();
	
	Если Элементы.СтраницаСостав.Видимость 
		ИЛИ ПродуктыКПереносу.Количество() > 0 Тогда //rarus vikhle 07.10.2021 mt 18076
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Продукт", Неопределено);
		
		МассивПустыхСтрок = ТаблицаПродуктовОбработки.НайтиСтроки(ПараметрыОтбора);
		Для Каждого ЭлементМассива Из МассивПустыхСтрок Цикл
			ТаблицаПродуктовОбработки.Удалить(ЭлементМассива);
		КонецЦикла;
		
		Если Не ОбщегоНазначения.КоллекцииИдентичны(ТаблицаПродуктовОбработки, ТаблицаПродуктовСоглашения, "Продукт") Тогда
			ИзмененСостав = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ИзмененСостав Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаПродуктовОбработки",  ТаблицаПродуктовОбработки);
	Запрос.УстановитьПараметр("ТаблицаПродуктовСоглашения", ТаблицаПродуктовСоглашения);
	Запрос.УстановитьПараметр("ПродуктыКПереносу",			ОбщегоНазначения.ВыгрузитьКолонку(ПродуктыКПереносу, "Продукт"));  //rarus vikhle 06.10.2021 mt 18076
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаПродуктовСоглашения.Продукт КАК Продукт
	|ПОМЕСТИТЬ ВТ_УдаленныеПродукты
	|ИЗ
	|	&ТаблицаПродуктовСоглашения КАК ТаблицаПродуктовСоглашения
	|ГДЕ
	|	НЕ ТаблицаПродуктовСоглашения.Продукт В (&ТаблицаПродуктовОбработки)
	|	И ТаблицаПродуктовСоглашения.Продукт ССЫЛКА Справочник.Scan_Изделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка КАК ЗаявкаНаОтгрузку,
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт КАК Продукт,
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт.НомерИзделия КАК НомерПродукта,
	//rarus vikhle 06.10.2021 mt 18076 +++
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт В (&ПродуктыКПереносу) КАК ПродуктКПереносу
	//rarus vikhle 06.10.2021 mt 18076 ---
	|ПОМЕСТИТЬ ВТ_ЗаявкиНаОтгрузку
	|ИЗ
	|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	|ГДЕ
	|	НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.ПометкаУдаления
	|	И Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена)
	|	И Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отказ)
	|	И Scan_ЗаявкаНаОтгрузкуПродукты.Продукт В
	|			(ВЫБРАТЬ
	|				ВТ_УдаленныеПродукты.Продукт КАК Продукт
	|			ИЗ
	|				ВТ_УдаленныеПродукты)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//rarus vikhle 06.10.2021 mt 18076 +++
	|ВЫБРАТЬ
	|	ВТ_ЗаявкиНаОтгрузку.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку,
	|	ВТ_ЗаявкиНаОтгрузку.Продукт КАК Продукт,
	|	ВТ_ЗаявкиНаОтгрузку.НомерПродукта КАК НомерПродукта,
	|	ВТ_ЗаявкиНаОтгрузку.ПродуктКПереносу КАК ПродуктКПереносу
	|ИЗ
	|	ВТ_ЗаявкиНаОтгрузку КАК ВТ_ЗаявкиНаОтгрузку
	|;
	//rarus vikhle 06.10.2021 mt 18076 ---
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка КАК ЗаявкаНаОтгрузку,
	|	СУММА(1) КАК КоличествоПродуктов,
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Номер КАК НомерЗаявкиНаОтгрузку
	|ИЗ
	|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	|ГДЕ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_ЗаявкиНаОтгрузку.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку
	|			ИЗ
	|				ВТ_ЗаявкиНаОтгрузку)
	|
	|СГРУППИРОВАТЬ ПО
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка";
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатУдаляемыеПродукты = РезультатыЗапроса[2]; //rarus vikhle 06.10.2021 mt 18076 поменял на 2
	РезультатЗаявкиНаОтгрузку  = РезультатыЗапроса[3]; //rarus vikhle 06.10.2021 mt 18076 поменял на 3
	
	Если РезультатЗаявкиНаОтгрузку.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УдаляемыеПродукты = РезультатУдаляемыеПродукты.Выгрузить();
	
	ТекстКорректировок           = "";
	ФрагментыТекстаКорректировок = Новый Массив;
	
	Выборка = РезультатЗаявкиНаОтгрузку.Выбрать();
	Пока Выборка.Следующий() Цикл
		НайденныеСтроки = УдаляемыеПродукты.НайтиСтроки(Новый Структура("ЗаявкаНаОтгрузку", Выборка.ЗаявкаНаОтгрузку));
		Если Выборка.КоличествоПродуктов = НайденныеСтроки.Количество() Тогда
			Если НайденныеСтроки.Количество() = 1 Тогда
				Если НайденныеСтроки[0].ПродуктКПереносу Тогда //rarus vikhle 08.10.2021 mt 18076 +++ 
					ШаблонФрагментаТекста = Нстр("ru = 'На удаляемый продукт № %1 есть оформленная заявка на отгрузку № %2. Он будет удален из данной заявки на отгрузку и перенесен в новую. При удалении продукта у заявки на отгрузку будет установлен статус ""Отменена"".'"); //rarus vikhle 15.10.2021 АПК	
				Иначе	
					ШаблонФрагментаТекста = Нстр("ru = 'На удаляемый продукт № %1 есть оформленная заявка на отгрузку № %2. При удалении продукта у заявки на отгрузку будет установлен статус ""Отменена"".'"); //rarus vikhle 15.10.2021 АПК
				КонецЕсли;
				//rarus vikhle 08.10.2021 mt 18076 ---
			Иначе
				//rarus vikhle 08.10.2021 mt 18076 +++
				//ШаблонФрагментаТекста = "На удаляемые продукты №№ %1 есть оформленная заявка на отгрузку № %2. При удалении продуктов у заявки на отгрузку будет установлен статус ""Отменена"".";
				ШаблонФрагментаТекста = Нстр("ru = 'На удаляемые продукты № %1 есть оформленная заявка на отгрузку № %2. При удалении продуктов у заявки на отгрузку будет установлен статус ""Отменена"". Для переносимых продуктов будут созданы новые заявки на отгрузку.'"); //rarus vikhle 15.10.2021 АПК
				//rarus vikhle 08.10.2021 mt 18076 ---
			КонецЕсли;
		Иначе
			Если НайденныеСтроки.Количество() = 1 Тогда
				Если НайденныеСтроки[0].ПродуктКПереносу Тогда //rarus vikhle 08.10.2021 mt 18076 +++ 
					ШаблонФрагментаТекста = Нстр("ru = 'На удаляемый продукт № %1 есть оформленная заявка на отгрузку № %2. Он будет удален из данной заявки на отгрузку и перенесен в новую.'");//rarus vikhle 15.10.2021 АПК	
				Иначе
					ШаблонФрагментаТекста = Нстр("ru = 'Удаляемый продукт № %1 включен в заявку на отгрузку № %2. При удалении продукта, он будет исключен из заявки на отгрузку.'");//rarus vikhle 15.10.2021 АПК
				КонецЕсли;
				//rarus vikhle 08.10.2021 mt 18076 ---
			Иначе
				//rarus vikhle 08.10.2021 mt 18076
				//ШаблонФрагментаТекста = "Удаляемые продукты №№ %1 включены в заявку на отгрузку № %2. При удалении продуктов, они будут исключены из заявки на отгрузку."
				ШаблонФрагментаТекста = Нстр("ru = 'Удаляемые продукты №№ %1 включены в заявку на отгрузку № %2. При удалении продуктов, они будут исключены из заявки на отгрузку. Для переносимых продуктов будут созданы новые заявки на отгрузку.'"); //rarus vikhle 15.10.2021 АПК
				//rarus vikhle 08.10.2021 mt 18076 ---
			КонецЕсли;
		КонецЕсли;
		
		НомераУдаляемыхПродуктов = Новый Массив;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НомераУдаляемыхПродуктов.Добавить(НайденнаяСтрока.НомерПродукта);
		КонецЦикла;
		
		ФрагментТекста = СтрШаблон(ШаблонФрагментаТекста, СтрСоединить(НомераУдаляемыхПродуктов, ", "), Выборка.НомерЗаявкиНаОтгрузку);
		ФрагментыТекстаКорректировок.Добавить(ФрагментТекста);
	КонецЦикла;
	
	АдресКорректировок = ПоместитьВоВременноеХранилище(УдаляемыеПродукты, Новый УникальныйИдентификатор);
	
	Если ФрагментыТекстаКорректировок.Количество() > 0 Тогда
		ФрагментыТекстаКорректировок.Вставить(0, "Внимание!");
		ФрагментыТекстаКорректировок.Добавить("Продолжить?");
		ТекстКорректировок = СтрСоединить(ФрагментыТекстаКорректировок, Символы.ПС);
	КонецЕсли;
	
	КорректировкиЗаявокНаОтгрузку = Новый Структура;
	КорректировкиЗаявокНаОтгрузку.Вставить("АдресКорректировок", АдресКорректировок);
	КорректировкиЗаявокНаОтгрузку.Вставить("ТекстКорректировок", ТекстКорректировок);
	
	Возврат КорректировкиЗаявокНаОтгрузку;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОбработатьКорректировкиЗаявокНаОтгрузку(АдресКорректировокЗаявокНаОтгрузку, ЗаявкиНаОтгрузкуПереносимыхПродуктов = Неопределено) //rarus vikhle 08.10.2021 mt 18076
	
	КорректировкиЗаявокНаОтгрузку = ПолучитьИзВременногоХранилища(АдресКорректировокЗаявокНаОтгрузку);
	
	//rarus vikhle 08.10.2021 mt 18076 +++
	ЗаявкиНаОтгрузкуПереносимыхПродуктов = Новый ТаблицаЗначений;
	ЗаявкиНаОтгрузкуПереносимыхПродуктов.Колонки.Добавить("Продукт");
	ЗаявкиНаОтгрузкуПереносимыхПродуктов.Колонки.Добавить("ЗаявкаНаОтгрузку");
	ЗаявкиНаОтгрузкуПереносимыхПродуктов.Колонки.Добавить("Статус");
	//rarus vikhle 08.10.2021 mt 18076 ---
	
	КопияКорректировок = КорректировкиЗаявокНаОтгрузку.Скопировать(, "ЗаявкаНаОтгрузку");
	КопияКорректировок.Свернуть("ЗаявкаНаОтгрузку");
	
	Для Каждого СтрокаКопииКорректировки Из КопияКорректировок Цикл
		ЗаявкаНаОтгрузкуСсылка = СтрокаКопииКорректировки.ЗаявкаНаОтгрузку;
		ЗаявкаНаОтгрузкуОбъект = ЗаявкаНаОтгрузкуСсылка.ПолучитьОбъект();
		
		НайденныеСтрокиКорректировок = КорректировкиЗаявокНаОтгрузку.НайтиСтроки(Новый Структура("ЗаявкаНаОтгрузку", ЗаявкаНаОтгрузкуСсылка));
		Для Каждого НайденнаяСтрокаКорректировки Из НайденныеСтрокиКорректировок Цикл
			СтрокаЗаявкиНаОтгрузку = ЗаявкаНаОтгрузкуОбъект.Продукты.Найти(НайденнаяСтрокаКорректировки.Продукт, "Продукт");
			Если СтрокаЗаявкиНаОтгрузку <> Неопределено Тогда
				ЗаявкаНаОтгрузкуОбъект.Продукты.Удалить(СтрокаЗаявкиНаОтгрузку);
				//rarus vikhle 08.10.2021 mt 18076 +++
				Если НайденнаяСтрокаКорректировки.ПродуктКПереносу Тогда
					НоваяСтрока = ЗаявкиНаОтгрузкуПереносимыхПродуктов.Добавить(); 
					НоваяСтрока.Продукт = НайденнаяСтрокаКорректировки.Продукт;
					НоваяСтрока.ЗаявкаНаОтгрузку = ЗаявкаНаОтгрузкуСсылка;
					НоваяСтрока.Статус = ЗаявкаНаОтгрузкуСсылка.Статус;  
				КонецЕсли;	
				//rarus vikhle 08.10.2021 mt 18076 ---
			КонецЕсли;
		КонецЦикла;
		
		Если ЗаявкаНаОтгрузкуОбъект.Продукты.Количество() = 0 Тогда
			ЗаявкаНаОтгрузкуОбъект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена");
		ИначеЕсли ЗаявкаНаОтгрузкуОбъект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.ЧастичноИсполнена") Тогда
			КоличествоПроданныхПродуктов = 0;
			
			Для Каждого СтрокаПродукта Из ЗаявкаНаОтгрузкуОбъект.Продукты Цикл
				Если СтрокаПродукта.Продукт.БУ Тогда
					ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(СтрокаПродукта.Продукт,
					Перечисления.Scan_ОбъектыКлючевыхДат.Изделие, Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру, ТекущаяДата());
				Иначе
					ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(СтрокаПродукта.Продукт);
					
					ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод,
					Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия, ТекущаяДата());
				КонецЕсли;
				
				Если  ЗначениеЗаполнено(ДатаПродажиПродукта) 
					И ТипЗнч(ДатаПродажиПродукта) = Тип("Дата")
					И ДатаПродажиПродукта <> Дата(1,1,1) 
					Тогда
					КоличествоПроданныхПродуктов = КоличествоПроданныхПродуктов + 1;
				КонецЕсли;
			КонецЦикла;
			
			Если КоличествоПроданныхПродуктов = ЗаявкаНаОтгрузкуОбъект.Продукты.Количество() Тогда
				ЗаявкаНаОтгрузкуОбъект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Исполнена");
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ЗаявкаНаОтгрузкуОбъект.Записать();
			ВывестиСообщениеПол(Нстр("ru = 'Скорректирована заявка на отгрузку № '"+ЗаявкаНаОтгрузкуОбъект.Номер));
		Исключение
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при корректировке заявки на отгрузку №.'"+ЗаявкаНаОтгрузкуОбъект.Номер));
			ЗаписьЖурналаРегистрации(Нстр("ru = 'Корректировка заявки на отгрузку'"),
									УровеньЖурналаРегистрации.Ошибка,,,
									Нстр("ru = 'Произошла ошибка при корректировке заявки на отгрузку №.'"+ЗаявкаНаОтгрузкуОбъект.Номер) +  ОписаниеОшибки());
									
			//rarus vikhle 08.10.2021 mt 18076 +++						
			//Для Каждого НайденнаяСтрокаКорректировки Из НайденныеСтрокиКорректировок Цикл // rarus vikhle 15.10.2021 АПК
			СтрокиЗаявкиНаОтгрузку = ЗаявкиНаОтгрузкуПереносимыхПродуктов.НайтиСтроки(Новый Структура("ЗаявкаНаОтгрузку", ЗаявкаНаОтгрузкуСсылка));
			Для Каждого СтрокаЗаявкиНаОтгрузку Из СтрокиЗаявкиНаОтгрузку Цикл
				ЗаявкиНаОтгрузкуПереносимыхПродуктов.Удалить(СтрокаЗаявкиНаОтгрузку);						
			КонецЦикла;	
			//КонецЦикла;
			//rarus vikhle 08.10.2021 mt 18076 ---
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры
//rarus agar 25.12.2020 17006 --

&НаСервере
Функция ПолучитьТаблицуПродуктовОбработки(Таблица = "СписокПродуктов", ВключатьДрафты = Ложь) //rarus vikhle 07.10.2021 mt 18076 + таблица
	//rarus vikhle 22.01.2021 mt 16981 +++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(СписокПродуктов.Продукт КАК Справочник.Scan_Изделия) КАК Продукт,
	               |	СписокПродуктов.Количество КАК Количество,
	               |	СписокПродуктов.ПроцентДрайв КАК ПроцентДрайв,
	               |	СписокПродуктов.СпециальныеУсловия КАК СпециальныеУсловия,
	               |	СписокПродуктов.ЛогистическиеЗатратыСумма КАК ЛогистическиеЗатратыСумма,
	               |	СписокПродуктов.КомпенсацииСумма КАК КомпенсацииСумма,
	               |	СписокПродуктов.ИзменениеСпецификацииПоИнициативеЗаводаСумма КАК ИзменениеСпецификацииПоИнициативеЗаводаСумма,	// rarus tenkam 23.04.2021 mantis 17648 +
	               |	СписокПродуктов.КомментарийЛогистическиеЗатраты КАК КомментарийЛогистическиеЗатраты,	// rarus tenkam 23.04.2021 mantis 17648 +
	               |	СписокПродуктов.КомментарийКомпенсации КАК КомментарийКомпенсации,	// rarus tenkam 23.04.2021 mantis 17648 +
	               |	СписокПродуктов.КомментарийИзменениеСпецификации КАК КомментарийИзменениеСпецификации,	// rarus tenkam 23.04.2021 mantis 17648 +
	               |	СписокПродуктов.ЦенаСНДС КАК ЦенаСНДС,
	               |	СписокПродуктов.ЦенаБезНДС КАК ЦенаБезНДС,
	               |	СписокПродуктов.ЦенаПоВалютнойОговорке КАК ЦенаПоВалютнойОговорке,	// rarus tenkam 06.04.2021 mantis 17419 +
	               |	СписокПродуктов.СкладОтгрузки КАК СкладОтгрузки,
	               |	СписокПродуктов.СкладПродажи КАК СкладПродажи,
	               |	СписокПродуктов.МестоПередачи КАК МестоПередачи,
				   // rarus vikhle 17.01.2022 m 18269 +++
				   |	СписокПродуктов.Себестоимость КАК Себестоимость
				   // rarus vikhle 17.01.2022 m 18269 ---
	               |ПОМЕСТИТЬ СписокПродуктов
	               |ИЗ
	               |	&СписокПродуктов КАК СписокПродуктов";
	Запрос.Текст = ?(НЕ ВключатьДрафты, Запрос.Текст + " ГДЕ СписокПродуктов.Продукт ССЫЛКА Справочник.Scan_Изделия;",Запрос.Текст + ";"); //rarus vikhle 29.01.2021 mt 16929			   
	Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
	                              |	СписокПродуктов.Продукт КАК Продукт,
	                              |	СписокПродуктов.Количество КАК Количество,
	                              |	СписокПродуктов.ПроцентДрайв КАК ПроцентДрайв,
	                              |	СписокПродуктов.СпециальныеУсловия КАК СпециальныеУсловия,
	                              |	СписокПродуктов.ЛогистическиеЗатратыСумма КАК ЛогистическиеЗатратыСумма,
	                              |	СписокПродуктов.КомпенсацииСумма КАК КомпенсацииСумма,
	                              |	СписокПродуктов.ИзменениеСпецификацииПоИнициативеЗаводаСумма КАК ИзменениеСпецификацииПоИнициативеЗаводаСумма,	// rarus tenkam 23.04.2021 mantis 17648 +
	                              |	СписокПродуктов.КомментарийЛогистическиеЗатраты КАК КомментарийЛогистическиеЗатраты,	// rarus tenkam 23.04.2021 mantis 17648 +
	                              |	СписокПродуктов.КомментарийКомпенсации КАК КомментарийКомпенсации,	// rarus tenkam 23.04.2021 mantis 17648 +
	                              |	СписокПродуктов.КомментарийИзменениеСпецификации КАК КомментарийИзменениеСпецификации,	// rarus tenkam 23.04.2021 mantis 17648 +
	                              |	СписокПродуктов.ЦенаСНДС КАК ЦенаСНДС,
	                              |	СписокПродуктов.ЦенаБезНДС КАК ЦенаБезНДС,
	                              |	СписокПродуктов.ЦенаПоВалютнойОговорке КАК ЦенаПоВалютнойОговорке,	// rarus tenkam 06.04.2021 mantis 17419 +
	                              |	СписокПродуктов.СкладОтгрузки КАК СкладОтгрузки,
	                              |	СписокПродуктов.СкладПродажи КАК СкладПродажи,
	                              |	СписокПродуктов.МестоПередачи КАК МестоПередачи,
								  // rarus vikhle 17.01.2022 m 18269 +++
								  |	СписокПродуктов.Себестоимость КАК Себестоимость
								  // rarus vikhle 17.01.2022 m 18269 ---
	                              |ИЗ
	                              |	СписокПродуктов КАК СписокПродуктов";
				   
	//Запрос.УстановитьПараметр("СписокПродуктов",РеквизитФормыВЗначение("СписокПродуктов"));
	Запрос.УстановитьПараметр("СписокПродуктов",РеквизитФормыВЗначение(Таблица)); //rarus vikhle 07.10.2021 mt 18076 + таблица 
	ТаблицаИзделий = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаИзделий;
	//rarus vikhle 22.01.2021 mt 16981 ---
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыОбъекта(Ссылка,Реквизиты)
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,Реквизиты); //rarus vikhle 26.01.2021 mt 16981
КонецФункции	

&НаКлиенте
Процедура НачатьВыборСУ(Элемент, СтандартнаяОбработка)
	
	//rarus vikhle 28.01.2021 mt 16929 +++
	СтандартнаяОбработка	= Ложь;
	ТекущиеДанные			= Элементы.СписокПродуктов.ТекущиеДанные;
	СтруктураРеквизитов		= ПолучитьРеквизитыОбъекта(ТекущееСоглашениеОПоставке,"УникальностьСпецификации,СтандартнаяСпецификация"); //rarus vikhle 28.02.2021 mt 17186 
	МассивСтатусов 			= Новый Массив;
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноЕстьВСОП"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ОдобреноНетВСОП"));
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"Статус",
															ВидСравненияКомпоновкиДанных.ВСписке,
															МассивСтатусов,,Истина);			
	ОсноваИмениМодели = Лев(СокрЛП(Модель),10);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
															"Модель.Наименование",
															ВидСравненияКомпоновкиДанных.НачинаетсяС,
															ОсноваИмениМодели,,Истина);														
	//rarus vikhle 10.03.2021 mt 17413 +++														
	//rarus vikhle 28.02.2021 mt 17186 +++
	//Если СтруктураРеквизитов.УникальностьСпецификации = ПредопределенноеЗначение("Перечисление.Scan_ТипыСпецификации.Std") Тогда
	//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
	//															"СтандартнаяСпецификация",
	//															ВидСравненияКомпоновкиДанных.Равно,
	//															СтруктураРеквизитов.СтандартнаяСпецификация,,Истина);
	//КонецЕсли;															
	//rarus vikhle 28.02.2021 mt 17186 ---														
	//rarus vikhle 10.03.2021 mt 17413 ---
	ПараметрыФормы = Новый Структура("ФиксированныеНастройки",ФиксированныеНастройки);
	ОткрытьФорму("Справочник.Scan_СпециальныеУсловия.ФормаВыбора",ПараметрыФормы,Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//rarus vikhle 28.01.2021 mt 16929 ---	
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьДатыОтгрузкиПродуктов()
	//rarus vikhle 28.02.2021 mt 17186 +++
	ДатыИСтатусыОтгрузки = Новый ТаблицаЗначений;
	
	Если СписокПродуктов.Количество() > 0 Тогда
		СписокПродуктовТЗ = ДанныеФормыВЗначение(СписокПродуктов, Тип("ТаблицаЗначений"));
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СоглашениеОПоставке", ТекущееСоглашениеОПоставке);
		Запрос.УстановитьПараметр("Продукты",            СписокПродуктовТЗ.ВыгрузитьКолонку("Продукт")); 
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.ДатаОтгрузки КАК ДатаОтгрузки,
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус КАК СтатусОтгрузки,
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт КАК Продукт
		|ИЗ
		|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
		|ГДЕ
		|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.СоглашениеОПоставке = &СоглашениеОПоставке
		|	И Scan_ЗаявкаНаОтгрузкуПродукты.Продукт В(&Продукты)
		|	И Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена)
		|	И Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отказ)";
		РезультатЗапроса = Запрос.Выполнить();
		ДатыИСтатусыОтгрузки = РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
	Возврат ДатыИСтатусыОтгрузки;
	//rarus vikhle 28.02.2021 mt 17186 ---
КонецФункции
//rarus bonmak 09.08.2021 16834 ++
//rarus vikhle 28.02.2021 mt 17186 +++
//&НаСервереБезКонтекста
//Функция СпецификацииСовпадают(Продукт,СУ,Заявка)
//	
//	Возврат Scan_ВспомогательныеФункцииСервер.СпецификацииСовпадают(Продукт,СУ,Заявка);
//		
//КонецФункции	
//rarus bonmak 09.08.2021 16834 --
&НаСервере
Функция ПримененияСпециальныхУсловийИсчерпаны(СпециальныеУсловия)
	
	//rarus vikhle 22.06.2021 mt 17637 +++
	//СтатусыЗаявок	= Новый Массив;
	//
	//СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	//СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	//СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	//СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	//rarus vikhle 22.06.2021 mt 17637 ---
				
	ПримененийСУВТекущейЗаявке	= ПримененийСУВТекущейЗаявке(СпециальныеУсловия); 
	ПримененийСУВДругихЗаявках 	= ПримененийСУВДругихЗаявках(СпециальныеУсловия);
	//rarus vikhle 22.06.2021 mt 17637 ---
	
	
	//rarus vikhle 22.06.2021 mt 17637 +++
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("СтатусыЗаявок",      СтатусыЗаявок);
	//Запрос.УстановитьПараметр("СпециальныеУсловия", СпециальныеУсловия);
	//Запрос.УстановитьПараметр("ТекущаяЗаявка", 		ТекущееСоглашениеОПоставке);//rarus vikhle 22.06.2021 mt 17637 Для текущей заявки подсчет отдельный с учетом незаписанных данных
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Scan_ИспользованиеСпециальныхУсловий.Ссылка КАК Заявка
	//               |ПОМЕСТИТЬ Заявки
	//               |ИЗ
	//               |	КритерийОтбора.Scan_ИспользованиеСпециальныхУсловий(&СпециальныеУсловия) КАК Scan_ИспользованиеСпециальныхУсловий
	//               |ГДЕ
	//               |	НЕ Scan_ИспользованиеСпециальныхУсловий.Ссылка.Статус В (&СтатусыЗаявок)
	//               |	И НЕ Scan_ИспользованиеСпециальныхУсловий.Ссылка = &ТекущаяЗаявка
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЕСТЬNULL(СУММА(Scan_СоглашенияОПоставкеСписокПродуктов.Количество), 0) КАК КоличествоПрименений
	//               |ИЗ
	//               |	Заявки КАК Заявки
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	//               |		ПО Заявки.Заявка = Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка
	//               |ГДЕ
	//               |	Scan_СоглашенияОПоставкеСписокПродуктов.СпециальныеУсловия = &СпециальныеУсловия";
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//Если Выборка.Следующий() Тогда
	//	СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(СпециальныеУсловия, "КоличествоПродуктов");
	//	ОбщееКоличествоПрименений = Выборка.КоличествоПрименений + ПримененийВТекущейЗаявке; //rarus vikhle 22.06.2021 mt 17637
	//	//Если Выборка.КоличествоПрименений >= СтруктураРеквизитов.КоличествоПродуктов Тогда
	//	Если ОбщееКоличествоПрименений > СтруктураРеквизитов.КоличествоПродуктов Тогда //rarus vikhle 22.06.2021 mt 17637			
	//		Возврат Истина;
	//	КонецЕсли;
	//КонецЕсли;
	
	СтруктураРеквизитов = ПолучитьРеквизитыОбъекта(СпециальныеУсловия, "КоличествоПродуктов");
	
	ОбщееКоличествоПрименений = ПримененийСУВДругихЗаявках + ПримененийСУВТекущейЗаявке;
	Если ОбщееКоличествоПрименений > СтруктураРеквизитов.КоличествоПродуктов Тогда			
		Возврат Истина;
	КонецЕсли;
	//rarus vikhle 22.06.2021 mt 17637 ---
	
	Возврат Ложь;
	
КонецФункции

//rarus vikhle 28.02.2021 mt 17186 ---

&НаСервере
Процедура ДобавитьДанныеПоOrderIntake(МенеджерВременныхТаблиц)
	
	//Проверяем поступала ли оплата по текущему СОП
	СтатусОплатыСОП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийДоговор,"СОП_СтатусОплаты");
	
	мСтатусовОплачено = Новый Массив;
	мСтатусовОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.Оплачено);
	мСтатусовОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ОплаченоЧастично);
	мСтатусовОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику);
	мСтатусовОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику);
	мСтатусовОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью);
	мСтатусовОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ОплаченоПолностью);
	
	Если мСтатусовОплачено.Найти(СтатусОплатыСОП) = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	мСтатусовНеОплачено = Новый Массив;
	мСтатусовНеОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.НеОплачено);
	мСтатусовНеОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаОтсутствует);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ИсторияИзмененияДанныхПоСОП.Период КАК Период,
	               |	Scan_ИсторияИзмененияДанныхПоСОП.Договор КАК Договор,
	               |	Scan_ИсторияИзмененияДанныхПоСОП.ВидЗначения КАК ВидЗначения,
	               |	Scan_ИсторияИзмененияДанныхПоСОП.Значение КАК Значение
	               |ПОМЕСТИТЬ ЗаписиПоОплате
	               |ИЗ
	               |	РегистрСведений.Scan_ИсторияИзмененияДанныхПоСОП КАК Scan_ИсторияИзмененияДанныхПоСОП
	               |ГДЕ
	               |	Scan_ИсторияИзмененияДанныхПоСОП.Договор = &Договор
	               |	И Scan_ИсторияИзмененияДанныхПоСОП.ВидЗначения = &ВидЗначения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МИНИМУМ(ЗаписиПоОплате.Период) КАК ДатаВнесенияОплаты
	               |ИЗ
	               |	ЗаписиПоОплате КАК ЗаписиПоОплате
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ИсторияИзмененияДанныхПоСОП.СрезПоследних(
	               |				,
	               |				Договор = &Договор
	               |					И ВидЗначения = &ВидЗначения
	               |					И Значение В (&СтатусыНеОплачено)) КАК Scan_ИсторияИзмененияДанныхПоСОПСрезПоследних
	               |		ПО ЗаписиПоОплате.Договор = Scan_ИсторияИзмененияДанныхПоСОПСрезПоследних.Договор
	               |ГДЕ
	               |	ЗаписиПоОплате.Значение В(&СтатусыОплачено)
	               |	И ЗаписиПоОплате.Период > ЕСТЬNULL(Scan_ИсторияИзмененияДанныхПоСОПСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДобавленныеИзделия.Продукт КАК Продукт,
	               |	ДобавленныеИзделия.Продукт.ЗаказНаЗавод КАК ЗаказНаЗавод
	               |ИЗ
	               |	ДобавленныеИзделия КАК ДобавленныеИзделия
				   //rarus vikhle 03.09.2021 mt 18212 +++
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
				   |				,
				   |				Заказ В
				   |						(ВЫБРАТЬ
				   |							ДобавленныеИзделия.Продукт.ЗаказНаЗавод
				   |						ИЗ
				   |							ДобавленныеИзделия КАК ДобавленныеИзделия)
				   |					И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
				   |		ПО ДобавленныеИзделия.Продукт.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
				   |ГДЕ
				   |	(ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод)) В (&ТипыЗаказаFirm)";
				   //rarus vikhle 03.09.2021 mt 18212 ---
				   
	Запрос.УстановитьПараметр("Договор",			ТекущийДоговор);
	Запрос.УстановитьПараметр("ВидЗначения",		Перечисления.Scan_ДополнительнаяИнформацияПоСОП.СтатусОплаты);
	Запрос.УстановитьПараметр("СтатусыОплачено",	мСтатусовОплачено);
	Запрос.УстановитьПараметр("СтатусыНеОплачено",	мСтатусовНеОплачено);
	Запрос.УстановитьПараметр("ТипыЗаказаFirm",		Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm()); //rarus vikhle 03.09.2021 mt 18212
	
	мРезультатовЗапроса = Запрос.ВыполнитьПакет();
	//Дата первого поступления оплаты, после которого не было статусов без оплаты
	ВыборкаЗаписиРегистра = мРезультатовЗапроса[1].Выбрать();
	Если ВыборкаЗаписиРегистра.Следующий() И ЗначениеЗаполнено(ВыборкаЗаписиРегистра.ДатаВнесенияОплаты) Тогда	
		ДатаВнесенияОплаты = ВыборкаЗаписиРегистра.ДатаВнесенияОплаты;
	Иначе
		ДатаВнесенияОплаты = ТекущаяДатаСеанса();
	КонецЕсли;	
	
	// rarus agar 15.09.2021 17739 ++
	//АльтернативныйРасчет = Scan_ПраваИНастройки.Scan_Право("ИспользоватьАльтернативныйРасчетДатOrderIntake");
	// rarus agar 15.09.2021 17739 --
	
	ВыборкаДобавленныеПродукты = мРезультатовЗапроса[2].Выбрать();
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Пока ВыборкаДобавленныеПродукты.Следующий() Цикл
		Если ВыборкаДобавленныеПродукты.ЗаказНаЗавод.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		//Для добавленных в новую версию продуктов фиксируем дату внесения оплаты и дату Order Intake (при наличии подтверждения завода) в регистр Order Intake	
		МенеджерЗаписи 						= РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период				= ДатаВнесенияОплаты;
		МенеджерЗаписи.ЗаказНаЗавод			= ВыборкаДобавленныеПродукты.ЗаказНаЗавод;
		МенеджерЗаписи.ВидДаты				= Перечисления.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты;
		МенеджерЗаписи.ИспользоватьВОтчетах = Истина;
		МенеджерЗаписи.Пользователь 		= ТекущийПользователь;
		МенеджерЗаписи.Записать();
		
		РегистрыСведений.Scan_OrderIntake.СоздатьЗаписьПоOI(МенеджерЗаписи);
		
		// rarus agar 15.09.2021 17739 ++
		//Если АльтернативныйРасчет Тогда
		//	МенеджерЗаписи = РегистрыСведений.Scan_РасчетOrderIntake.СоздатьМенеджерЗаписи();
		//	МенеджерЗаписи.Период       = ТекущаяДатаСеанса();
		//	МенеджерЗаписи.ЗаказНаЗавод = ВыборкаДобавленныеПродукты.ЗаказНаЗавод;
		//	МенеджерЗаписи.Событие      = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты;
		//	МенеджерЗаписи.ДатаСобытия  = ДатаВнесенияОплаты;
		//	МенеджерЗаписи.Пользователь = ТекущийПользователь;
		//	УстановитьПривилегированныйРежим(Истина);
		//	МенеджерЗаписи.Записать();
		//	УстановитьПривилегированныйРежим(Ложь);
		//КонецЕсли;
		// rarus agar 15.09.2021 17739 ++
	КонецЦикла;
	
	// rarus agar 29.12.2021 17739 ++
	АльтернативныйРасчет = Scan_ПраваИНастройки.Scan_Право("ИспользоватьАльтернативныйРасчетДатOrderIntake");
	Если АльтернативныйРасчет Тогда
		СтатусыНеОплачено = Новый Массив;
		СтатусыНеОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.НеОплачено);
		СтатусыНеОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.НеТребуется);
		СтатусыНеОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаНеТребуется);
		СтатусыНеОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаОтсутствует);
		
		СтатусыОплачено = Новый Массив;
		СтатусыОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.Оплачено);
		СтатусыОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ОплаченоЧастично);
		СтатусыОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику);
		СтатусыОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику);
		СтатусыОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью);
		СтатусыОплачено.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ОплаченоПолностью);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("П1", ТекущийДоговор);
		Запрос.УстановитьПараметр("П2", СтатусыОплачено);
		Запрос.УстановитьПараметр("П3", СтатусыНеОплачено);
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_ИсторияИзмененияДанныхПоСОП.Период КАК Период,
		|	Scan_ИсторияИзмененияДанныхПоСОП.Договор КАК Договор,
		|	Scan_ИсторияИзмененияДанныхПоСОП.ВидЗначения КАК ВидЗначения,
		|	Scan_ИсторияИзмененияДанныхПоСОП.Значение КАК Значение
		|ПОМЕСТИТЬ ВТ_ЗаписиПоОплате
		|ИЗ
		|	РегистрСведений.Scan_ИсторияИзмененияДанныхПоСОП КАК Scan_ИсторияИзмененияДанныхПоСОП
		|ГДЕ
		|	Scan_ИсторияИзмененияДанныхПоСОП.Договор = &П1
		|	И Scan_ИсторияИзмененияДанныхПоСОП.ВидЗначения = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоСОП.СтатусОплаты)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ЗаписиПоОплате.Период) КАК ДатаОплаты
		|ИЗ
		|	ЗаписиПоОплате КАК ЗаписиПоОплате
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ИсторияИзмененияДанныхПоСОП.СрезПоследних(
		|				,
		|				Договор = &П1
		|					И ВидЗначения = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоСОП.СтатусОплаты)
		|					И Значение В (&П3)) КАК Scan_ИсторияИзмененияДанныхПоСОПСрезПоследних
		|		ПО ЗаписиПоОплате.Договор = Scan_ИсторияИзмененияДанныхПоСОПСрезПоследних.Договор
		|ГДЕ
		|	ЗаписиПоОплате.Значение В(&П2)
		|	И ЗаписиПоОплате.Период > ЕСТЬNULL(Scan_ИсторияИзмененияДанныхПоСОПСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДобавленныеИзделия.Продукт КАК Продукт,
		|	ДобавленныеИзделия.Продукт.ЗаказНаЗавод КАК ЗаказНаЗавод
		|ИЗ
		|	ДобавленныеИзделия КАК ДобавленныеИзделия";
		РезультатыЗапросов = Запрос.ВыполнитьПакет();
		
		ВыборкаДатаОплаты = РезультатыЗапросов[1].Выбрать();
		Если  ВыборкаДатаОплаты.Следующий() 
			И ЗначениеЗаполнено(ВыборкаДатаОплаты.ДатаОплаты) 
			Тогда
			// rarus vikhle 14.02.2022 m 17739 +++ 
			//ДатаОплаты = ВыборкаЗаписиРегистра.ДатаОплаты;
			ДатаОплаты = ВыборкаДатаОплаты.ДатаОплаты;
			// rarus vikhle 14.02.2022 m 17739 ---
		Иначе
			ДатаОплаты = ТекущаяДатаСеанса();
		КонецЕсли;
		
		// rarus agar 15.02.2022 17739 ++
		ДатаОплаты = ТекущаяДатаСеанса();
		// rarus agar 15.02.2022 17739 --
		
		Выборка = РезультатыЗапросов[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ЗаказНаЗавод.Пустая() Тогда
				Продолжить;
			КонецЕсли;
			Scan_OrderIntake.ЗарегистрироватьПоступлениеОплаты(ДатаОплаты, Выборка.ЗаказНаЗавод);
		КонецЦикла;
	КонецЕсли;
	// rarus agar 29.12.2021 17739 --
	
КонецПроцедуры

//rarus vikhle 07.05.2021 mt 17752 +++
//&НаКлиентеНаСервереБезКонтекста
//Функция ПолучитьОписаниеТипаПродукта(ПродуктСсылка)
//	
//	мТипов = Новый Массив;
//	мТипов.Добавить(ТипЗнч(ПродуктСсылка));
//	ОписаниеТипов = Новый ОписаниеТипов(мТипов);
//	Возврат ОписаниеТипов;
//	
//КонецФункции	
//rarus vikhle 07.05.2021 mt 17752 ---

//rarus vikhle 26.05.2021 m 17653 +++
&НаСервере
Процедура СформироватьНаименование()
	НомерЗаявки  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"НомерСоглашенияОПоставке");
	Наименование = СокрЛП(Строка(Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП) + " / "
						+ ?(ЗначениеЗаполнено(Дилер),Строка(Дилер) + " / ","")
						+ ?(ЗначениеЗаполнено(Модель),Строка(Модель) + " / ","") 
						+ ?(ЗначениеЗаполнено(КонечныйКлиент),Строка(КонечныйКлиент) + " / ","") 
						+ ?(ЗначениеЗаполнено(НомерЗаявки),"(" + НомерЗаявки + ")",""));
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПриоритетныеСкладыДилеров(МассивДилеров)
	
	СоответствиеСкладовДилеров = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивДилеров,"ПриоритетныйСклад");	
	Возврат СоответствиеСкладовДилеров; 
	
КонецФункции	

&НаСервере
Процедура ПриИзмененииДилераНаСервере(ОчищеныСУ = Ложь) //rarus vikhle 17.09.2021 mt 18288 + параметр ОчищеныСУ
	
	СформироватьНаименование();
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если Дилер.Пустая() Тогда
		ПродавецДилера = Неопределено;
	ИначеЕсли ПродавецДилера.Пустая() Тогда
		ПродавецДилера = ТекущийПользователь.КонтактноеЛицоКомпании;
	КонецЕсли;
	
	Если Дилер.Пустая() Тогда
		РегиональныйМенеджер = Неопределено;
		ЗакрепленныйМенеджерОКП = Неопределено; 
	Иначе
		РегиональныйМенеджер = Документы.Scan_ЗакреплениеМенеджеровЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер);
		ЗакрепленныйМенеджерОКП = Документы.Scan_ЗакреплениеМенеджеровОКПЗаДилерами.ПолучитьЗакрепленногоМенеджера(Дилер); 
		ДилерЗаявки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке,"Дилер");
		Если ДилерЗаявки <> Дилер Тогда 
			МассивДилеров = Новый Массив;
			МассивДилеров.Добавить(Дилер);
			МассивДилеров.Добавить(ДилерЗаявки);
			ПриоритетныеСкладыДилеров = ПриоритетныеСкладыДилеров(МассивДилеров);
			
			Если НЕ ПриоритетныеСкладыДилеров[Дилер].Пустая()
				И НЕ ПриоритетныеСкладыДилеров[ДилерЗаявки].Пустая()
				И НЕ ПриоритетныеСкладыДилеров[Дилер] = ПриоритетныеСкладыДилеров[ДилерЗаявки] Тогда
				ВывестиСообщениеПол(Нстр("ru = 'Обратите внимание:
									|приоритетный склад ""%1"" дилера ""%2"" отличается от приоритетного склада ""%3"" дилера ""%4"" заявки.'"),,,,,
									ПриоритетныеСкладыДилеров[Дилер],
									Дилер,
									ПриоритетныеСкладыДилеров[ДилерЗаявки],
									ДилерЗаявки);
			КонецЕсли;					
		КонецЕсли;
		
		//rarus vikhle 17.09.2021 mt 18288 +++
		Если УсловияОплатыСтандартные
			И Scan_ВспомогательныеФункцииСервер.ИзменилсяВидДилера(ПредыдущееЗначениеДилера, Дилер)
			ИЛИ ОчищеныСУ Тогда
			ЗаполнитьСтандартныеУсловияОплаты();
			ПроверитьСовпадениеУсловийОплаты();
		КонецЕсли;
		//rarus vikhle 17.09.2021 mt 18288 ---
		
	КонецЕсли;
	
	//rarus vikhle 17.09.2021 mt 18288 +++
	Если НЕ СпециальныеУсловия.Пустая() Тогда
		ДилерСУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СпециальныеУсловия, "Дилер");
		Если НЕ ДилерСУ = Дилер Тогда
			СпециальныеУсловия = Неопределено;
			ВывестиСообщениеПол(Нстр("ru = 'Дилер специальных условий отличается от текущего дилера, поле ""Специальные условия"" очищено'"));
		КонецЕсли;	
	КонецЕсли;		
	//rarus vikhle 17.09.2021 mt 18288 ---
		
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьОбщиеДанныеЗаявки()
	
	Дилер					= ТекущееСоглашениеОПоставке.Дилер;
	ПродавецДилера			= ТекущееСоглашениеОПоставке.ПродавецДилера;
	РегиональныйМенеджер	= ТекущееСоглашениеОПоставке.РегиональныйМенеджер;
	ЗакрепленныйМенеджерОКП	= ТекущееСоглашениеОПоставке.ЗакрепленныйМенеджерОКП;
	Наименование			= ТекущееСоглашениеОПоставке.Наименование;
	Контрагент              = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийДоговор, "Владелец");
	
КонецПроцедуры	

&НаКлиенте
Процедура ДилерОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Дилер = ВыбраннаяКомпания;
	Иначе
		Дилер = ПредыдущееЗначениеДилера;	
	КонецЕсли;
	
	ДилерПриИзменении(Элементы.Дилер);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКомпанииПользователя()
	
	КомпанииСКонтрагентами = РегистрыСведений.Scan_КомпанииПользователей.ПолучитьКомпаниюДилераПользователя(ПараметрыСеанса.ТекущийПользователь);
	КомпанииПользователя   = КомпанииСКонтрагентами.ВыгрузитьКолонку("Компания");
	
	Возврат КомпанииПользователя;
	
КонецФункции

&НаКлиенте
Процедура ПослеВопросаУдалениеСУ(РезультатВопроса, СУДругогоДилера) Экспорт 
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОчиститьСУДругогоДилера(СУДругогоДилера);
	Иначе
		Дилер = ПредыдущееЗначениеДилера;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция СУДругогоДилера()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВЫРАЗИТЬ(СписокПродуктов.СпециальныеУсловия КАК Справочник.Scan_СпециальныеУсловия) КАК СпециальныеУсловия
	               |ПОМЕСТИТЬ СУЗаявки
	               |ИЗ
	               |	&СписокПродуктов КАК СписокПродуктов
	               |ГДЕ
	               |	НЕ СписокПродуктов.СпециальныеУсловия = ЗНАЧЕНИЕ(Справочник.Scan_СпециальныеУсловия.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУЗаявки.СпециальныеУсловия КАК СпециальныеУсловия
	               |ИЗ
	               |	СУЗаявки КАК СУЗаявки
	               |ГДЕ
	               |	НЕ СУЗаявки.СпециальныеУсловия.Дилер = &ДилерЗаявки";
	Запрос.УстановитьПараметр("СписокПродуктов",РеквизитФормыВЗначение("СписокПродуктов"));
	Запрос.УстановитьПараметр("ДилерЗаявки",Дилер);
	СУДругогоДилера = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СпециальныеУсловия");
	
	Возврат СУДругогоДилера;
		
КонецФункции

&НаСервере
Процедура ОчиститьСУДругогоДилера(СУДругогоДилера)
	
	Для Каждого СУ Из СУДругогоДилера Цикл 
		СтруктураОтбора = Новый Структура("СпециальныеУсловия",СУ);
		мСтрокСпискаПродуктов = СписокПродуктов.НайтиСтроки(СтруктураОтбора);
		Для Каждого СтрокаСпискаПродуктов Из мСтрокСпискаПродуктов Цикл
			СтрокаСпискаПродуктов.СпециальныеУсловия = Справочники.Scan_СпециальныеУсловия.ПустаяСсылка();
			ОбновитьУсловияОплаты(СтрокаСпискаПродуктов.ПолучитьИдентификатор());//rarus vikhle 04.08.2021 mt 17637
		КонецЦикла;	
	КонецЦикла;
	
	//ОбновитьУсловияОплаты();//rarus vikhle 04.08.2021 mt 17637 Закомментировал 
	ПриИзмененииДилераНаСервере(Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьСвязьСКонтрагентом(Дилер,КонтрагентСоп)
	
	КонтрагентДилера = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Дилер);
	Возврат КонтрагентСоп = КонтрагентДилера; 
	
КонецФункции	

&НаСервере
Процедура ОтменитьЗаявкиНаОтгрузкуДругихДилеров(МассивПродуктов)
	
	МассивЗаявокНаОтгрузку = ПолучитьЗаявкиНаОгрузкуПродукта(МассивПродуктов,Дилер);
	Для Каждого ЗаявкаНаОтгрузку Из МассивЗаявокНаОтгрузку Цикл
		ОбъектЗаявкаНаОтгрузку = ЗаявкаНаОтгрузку.ПолучитьОбъект();
		ОбъектЗаявкаНаОтгрузку.ДополнительныеСвойства.Вставить("НужноУведомитьОбОтмене",Истина); // При отмене заявки будет отправлено письмо по праву 72128
		ОбъектЗаявкаНаОтгрузку.Статус = Справочники.Scan_СтатусыЗаявокНаОтгрузку.Отменена;
		Попытка
			 ОбъектЗаявкаНаОтгрузку.Записать();
			 ВывестиСообщениеПол(Нстр("ru = 'Заявка на отгрузку № %1 была отменена, т.к. в ней дилер отличается от дилера новой версии заявки.'"),,,,,ОбъектЗаявкаНаОтгрузку.Номер);
		Исключение 
			ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при установке статуса ""Отменена"" у заявки на отгрузку № %1 '"),,,,,ОбъектЗаявкаНаОтгрузку.Номер);
			ЗаписьЖурналаРегистрации(Нстр("ru = 'Запись заявки на отгрузку'", ОбщегоНазначения.КодОсновногоЯзыка()),УровеньЖурналаРегистрации.Ошибка,,
									ОбъектЗаявкаНаОтгрузку.Ссылка,
									Нстр("ru = 'Произошла ошибка при записи заявки на отгрузку. '") + ПодробноеПредставлениеОшибки(ОписаниеОшибки())); // Rarus tenkam 11.02.2022 АПК добавлен КодОсновногоЯзыка
		КонецПопытки;	
	КонецЦикла;	
	
КонецПроцедуры	
//rarus vikhle 26.05.2021 m 17653 ---

//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//rarus vikhle 10.06.2021 mt 17637 +++
//&НаСервере
//Процедура СписокПродуктовЦеныСпецУсловияПриИзмененииСервер();
//	
//	ОбработатьУсловияОплатыСУ();
//	ОбновитьУсловияОплаты();
//		
//	ТекущиеДанные = СписокПродуктов.НайтиПоИдентификатору(Элементы.СписокПродуктовЦены.ТекущаяСтрока);	
//	Если НЕ ТекущиеДанные = Неопределено 
//		И НЕ ТекущиеДанные.СпециальныеУсловия.Пустая() И ТекущиеДанные.ЦенаПоВалютнойОговорке = 0 Тогда
//		СебестоимостьСУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"СебестоимостьСНДС");
//		ТекущиеДанные.Себестоимость = СебестоимостьСУ;
//	КонецЕсли;

//	
//КонецПроцедуры
//rarus vikhle 06.07.2021 17637 ---

//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//&НаСервере
//Процедура ОбработатьУсловияОплатыСУ(ИдентификаторСтроки = Неопределено)
//	
//	Если ИдентификаторСтроки = Неопределено Тогда
//		ТекущиеДанные = СписокПродуктов.НайтиПоИдентификатору(Элементы.СписокПродуктовЦены.ТекущаяСтрока);
//	Иначе
//		ТекущиеДанные = СписокПродуктов.НайтиПоИдентификатору(ИдентификаторСтроки);	
//	КонецЕсли;	
//	
//	СУ					= ТекущиеДанные.СпециальныеУсловия;
//	ДатаНачалаДоговора  = Неопределено;
//	
//	//Удаление существующих строк с текущим продуктом в таблице "Условия оплаты"
//	УдалитьУсловияОплатыПродукта(ТекущиеДанные.Продукт);
//		
//	Если СУ.Пустая() Тогда
//		Возврат;
//	КонецЕсли;	
//	
//	//Перенос условий оплаты из СУ
//	Для Каждого СтрокаУсловийСУ Из СУ.УсловияОплаты Цикл
//		СтрокаУсловийЗаявки = УсловияОплаты.Добавить();
//		СтрокаУсловийЗаявки.Продукт = ТекущиеДанные.Продукт;
//		СтрокаУсловийЗаявки.СпециальныеУсловия = СУ;
//		ЗаполнитьЗначенияСвойств(СтрокаУсловийЗаявки, СтрокаУсловийСУ,,"Сумма,КрайняяДатаОплаты");
//		
//		Если СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора
//			И НЕ ТекущийДоговор.Пустая() Тогда 
//			Если ДатаНачалаДоговора = Неопределено Тогда
//				ДатаНачалаДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийДоговор,"ДатаНачала"); 
//			КонецЕсли;	
//			СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора,СтрокаУсловийЗаявки.СрокОплатыАванса);
//		ИначеЕсли СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS
//			И НЕ ТекущиеДанные.DDS = Дата(1,1,1) Тогда
//			СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ТекущиеДанные.DDS,СтрокаУсловийЗаявки.СрокОплатыАванса);	
//		ИначеЕсли СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS
//			И НЕ ТекущиеДанные.DDS = Дата(1,1,1) Тогда 	
//			СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(ТекущиеДанные.DDS,СтрокаУсловийЗаявки.СрокОплатыАванса);	
//		КонецЕсли;	
//	КонецЦикла;
//			
//КонецПроцедуры

//rarus vikhle 02.08.2021 m 17637 раскомментировал +++
&НаСервере
Процедура УдалитьУсловияОплатыПродукта(Продукт)
	
	СтруктураОтбора = Новый Структура("Продукт",Продукт);
	СтрокиПродукта	= УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	Для Каждого СтрокаПродукта ИЗ СтрокиПродукта Цикл
		УсловияОплаты.Удалить(СтрокаПродукта);
	КонецЦикла;
	
	УдалитьГрафикПродукта(Продукт);
	
КонецПроцедуры	

&НаСервере
Процедура УдалитьГрафикПродукта(Продукт)
	
	СтруктураОтбора = Новый Структура("Продукт",Продукт);
	СтрокиПродукта	= ГрафикПлатежей.НайтиСтроки(СтруктураОтбора);
	Для Каждого СтрокаПродукта ИЗ СтрокиПродукта Цикл
		ГрафикПлатежей.Удалить(СтрокаПродукта);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПродуктУказанВСУ(СУ,Продукт)
	// Для СУ с незаполненным списком продуктов не проверяем вхождение продукта из заявки, 
	// с заполненным списком - проверяем  
 	Возврат СУ.СписокПродуктов.Количество() = 0 ИЛИ СУ.СписокПродуктов.Найти(Продукт) <> Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоговуюСуммуДрафта(Форма, ТекущаяСтрока = Неопределено) //rarus vikhle 04.08.2021 mt 17637 + ТекущаяСтрока
	
	//rarus vikhle 17.06.2021 mt 17637 +++	
	
	ТаблицаПродуктов = ТаблицаПродуктовПоСтранице(Форма);	
	Если ТаблицаПродуктов = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	#Если Сервер Тогда
		//rarus vikhle 04.08.2021 mt 17637 +++
		Если ТекущаяСтрока = Неопределено Тогда
			ТекущиеДанные = Форма.СписокПродуктов.НайтиПоИдентификатору(ТаблицаПродуктов.ТекущаяСтрока);	
		Иначе
			ТекущиеДанные = Форма.СписокПродуктов.НайтиПоИдентификатору(ТекущаяСтрока);
		КонецЕсли;	
		//rarus vikhle 04.08.2021 mt 17637 ---
		ЦенаСУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"СпецDealerNet");	
	#Иначе
		//rarus vikhle 04.08.2021 mt 17637 +++
		Если ТекущаяСтрока = Неопределено Тогда
			ТекущиеДанные = ТаблицаПродуктов.ТекущиеДанные;
		Иначе
			ТекущиеДанные = Форма.СписокПродуктов.НайтиПоИдентификатору(ТекущаяСтрока); 
		КонецЕсли;	
		//rarus vikhle 04.08.2021 mt 17637 ---
		ЦенаСУ = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СпециальныеУсловия,"СпецDealerNet");
	#КонецЕсли
	
	Если ТипЗнч(ТекущиеДанные.Продукт) <> Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.СпециальныеУсловия.Пустая() Тогда
		ТекущиеДанные.ИтоговаяСумма = ТекущиеДанные.ЦенаСНДС * ТекущиеДанные.Количество;
	Иначе
		ТекущиеДанные.ИтоговаяСумма = ЦенаСУ * ТекущиеДанные.Количество;	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ЦенаПоВалютнойОговорке) Тогда
		ТекущиеДанные.ИтоговаяСумма = ТекущиеДанные.ЦенаПоВалютнойОговорке * ТекущиеДанные.Количество;
	КонецЕсли;
	
	Если НЕ ТекущиеДанные.ПроцентДрайв = 0 Тогда
		ТекущиеДанные.ИтоговаяСумма = ТекущиеДанные.ИтоговаяСумма - (ТекущиеДанные.ИтоговаяСумма * ТекущиеДанные.ПроцентДрайв / 100); 
	КонецЕсли;	
	
	//округление до рубля
	ТекущиеДанные.ИтоговаяСумма = Окр(ТекущиеДанные.ИтоговаяСумма);
	//rarus vikhle 17.06.2021 mt 17637 ---
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Функция ТаблицаПродуктовПоСтранице(Форма)
	
	ТаблицаПродуктов = Неопределено;
	ТекущаяСтраница = Форма.Элементы.Страницы.ТекущаяСтраница;
	
	Если ТекущаяСтраница = Форма.Элементы.СтраницаСостав Тогда
		ТаблицаПродуктов = Форма.Элементы.СписокПродуктовСостав;
	ИначеЕсли ТекущаяСтраница = Форма.Элементы.СтраницаЦены Тогда
		ТаблицаПродуктов = Форма.Элементы.СписокПродуктовЦены;
	ИначеЕсли ТекущаяСтраница = Форма.Элементы.СтраницаСроки Тогда
		ТаблицаПродуктов = Форма.Элементы.СписокПродуктовСроки; 	
	//rarus vikhle 04.10.2021 m 18076 +++	
	ИначеЕсли ТекущаяСтраница = Форма.Элементы.СтраницаРазделениеЗаявки Тогда
		ТаблицаПродуктов = Форма.Элементы.СоставТекущейЗаявки; 
	//rarus vikhle 04.10.2021 m 18076 ---	
	КонецЕсли;
	
	Возврат ТаблицаПродуктов;
	
КонецФункции	

//rarus vikhle 10.06.2021 mt 17637 ---
//rarus vikhle 02.08.2021 m 17637 ---

//rarus vikhle 22.06.2021 mt 17637 +++
&НаСервере
Функция ПримененийСУВДругихЗаявках(СпециальныеУсловия)
	
	КоличествоПримененийСУ = 0;
	
	СтатусыЗаявок = Новый Массив;
	
	СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен);
	СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут);
	СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ);
	СтатусыЗаявок.Добавить(Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтатусыЗаявок",      СтатусыЗаявок);
	Запрос.УстановитьПараметр("СпециальныеУсловия", СпециальныеУсловия);
	Запрос.УстановитьПараметр("ТекущаяЗаявка", 		ТекущееСоглашениеОПоставке);// Для текущей заявки подсчет отдельный с учетом незаписанных данных
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ИспользованиеСпециальныхУсловий.Ссылка КАК Заявка
	               |ПОМЕСТИТЬ Заявки
	               |ИЗ
	               |	КритерийОтбора.Scan_ИспользованиеСпециальныхУсловий(&СпециальныеУсловия) КАК Scan_ИспользованиеСпециальныхУсловий
	               |ГДЕ
	               |	НЕ Scan_ИспользованиеСпециальныхУсловий.Ссылка.Статус В (&СтатусыЗаявок)
	               |	И НЕ Scan_ИспользованиеСпециальныхУсловий.Ссылка = &ТекущаяЗаявка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(Scan_СоглашенияОПоставкеСписокПродуктов.Количество), 0) КАК КоличествоПрименений
	               |ИЗ
	               |	Заявки КАК Заявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	               |		ПО Заявки.Заявка = Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка
	               |ГДЕ
	               |	Scan_СоглашенияОПоставкеСписокПродуктов.СпециальныеУсловия = &СпециальныеУсловия";
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		КоличествоПримененийСУ = Выборка.КоличествоПрименений;
	КонецЕсли;
	
	Возврат КоличествоПримененийСУ;
	
	
КонецФункции	

&НаСервере
Функция ПримененийСУВТекущейЗаявке(СпециальныеУсловия)
	
	ПримененийСУВТекущейЗаявке = 0;
	
	ПараметрыОтбора = Новый Структура("СпециальныеУсловия",СпециальныеУсловия);
	СтрокиСУ = СписокПродуктов.НайтиСтроки(ПараметрыОтбора);
	Для Каждого СтрокаСУ Из СтрокиСУ Цикл
		ПримененийСУВТекущейЗаявке = ПримененийСУВТекущейЗаявке + СтрокаСУ.Количество;
	КонецЦикла;
	
	//rarus vikhle 05.10.2021 mt 18076 +++
	СтрокиСУ = ПродуктыКПереносу.НайтиСтроки(ПараметрыОтбора);
	Для Каждого СтрокаСУ Из СтрокиСУ Цикл
		ПримененийСУВТекущейЗаявке = ПримененийСУВТекущейЗаявке + СтрокаСУ.Количество;
	КонецЦикла;
	//rarus vikhle 05.10.2021 mt 18076 ---
	
	Возврат ПримененийСУВТекущейЗаявке;
	
КонецФункции
//rarus vikhle 22.06.2021 mt 17637 ---

//rarus vikhle 28.07.2021 mt 17637 закомментировал +++
//&НаКлиенте
//Процедура ОбновитьУсловияОплатыИнтерактивно(Команда) //rarus vikhle 28.06.2021 m 17637 +++
//	
//	//ОбновитьУсловияОплатыИнтерактивноНаСервере(); //rarus vikhle 06.07.2021 17637 Откат, закомментировал
//	
//КонецПроцедуры //rarus vikhle 28.06.2021 m 17637 ---
//rarus vikhle 28.07.2021 mt 17637 ---

//rarus vikhle 06.07.2021 17637 +++ Откат, закомментировал
//&НаСервере
//Процедура ОбновитьУсловияОплатыИнтерактивноНаСервере() //rarus vikhle 28.06.2021 m 17637 +++
//	
//	//rarus vikhle 30.06.2021 mt 17637 +++
//	//УсловияОплаты.Очистить();
//	ЕстьПродуктыССУ = Ложь;
//	//rarus vikhle 30.06.2021 mt 17637 ---
//	Для Каждого СтрокаСписка Из СписокПродуктов Цикл
//		Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") 
//			И НЕ СтрокаСписка.СпециальныеУсловия.Пустая() Тогда
//			ОбработатьУсловияОплатыСУ(СтрокаСписка.ПолучитьИдентификатор());
//			ЕстьПродуктыССУ = Истина;
//		КонецЕсли;	
//	КонецЦикла;	
//	
//	Если ЕстьПродуктыССУ Тогда //rarus vikhle 30.06.2021 m 17637
//		ОбновитьУсловияОплаты();
//	КонецЕсли;	
//	
//КонецПроцедуры //rarus vikhle 28.06.2021 m 17637 ---
//rarus vikhle 06.07.2021 17637 ---

&НаСервере
Процедура УдалитьУсловияОплатыПродуктов(МассивПродуктов) //rarus vikhle 03.08.2021 17637 +++
	
	Для Каждого Продукт ИЗ МассивПродуктов Цикл
		УдалитьУсловияОплатыПродукта(Продукт);
	КонецЦикла;
	
КонецПроцедуры //rarus vikhle 03.08.2021 17637 ---

&НаСервере
Процедура ДобавитьУсловияОплаты(ИДСтрокиПродукта = Неопределено, ОбновитьИтоговуюСумму = Ложь)//rarus vikhle 10.08.2021 mt 17637 + ОбновитьИтоговуюСумму 
	
	Если ИДСтрокиПродукта = Неопределено Тогда 
		
		//rarus vikhle 21.10.2021 m 18076 +++
		Если СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП Тогда
			ДатаНачалаДоговора = ТекущаяДатаСеанса();
		Иначе	
			ДатаНачалаДоговора = Неопределено;
		КонецЕсли;	
		//rarus vikhle 21.10.2021 m 18076 ---
		
		// Не передан ИД строки продукт, нужно полностью перезаполнить условия оплаты и график
		УсловияОплаты.Очистить();
				
		Для Каждого СтрокаСписка Из СписокПродуктов Цикл
			Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия") И НЕ СтрокаСписка.Продукт.Пустая() Тогда
				//rarus vikhle 10.08.2021 mt 17637 +++
				Если ОбновитьИтоговуюСумму Тогда
					ОбновитьИтоговуюСуммуПродукта(СтрокаСписка);	
				КонецЕсли;
				//rarus vikhle 10.08.2021 mt 17637 ---
				
				Для Каждого СтрокаУсловий Из СгруппированныеУсловияОплаты Цикл
					НоваяСтрока = УсловияОплаты.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУсловий);
					НоваяСтрока.Сумма = НоваяСтрока.ПроцентОплаты / 100 * СтрокаСписка.ИтоговаяСумма;
					НоваяСтрока.Продукт = СтрокаСписка.Продукт;
					
					Если НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора 
						И (НЕ ТекущийДоговор.Пустая() 
						ИЛИ СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП) Тогда  //rarus vikhle 21.10.2021 m 18076
						
						Если ДатаНачалаДоговора = Неопределено Тогда
							ДатаНачалаДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийДоговор, "ДатаНачала"); 
						КонецЕсли;	
						НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора,НоваяСтрока.СрокОплатыАванса);
					ИначеЕсли НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS И НЕ СтрокаСписка.DDS = Дата(1,1,1) Тогда
						НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаСписка.DDS), НоваяСтрока.СрокОплатыАванса); 
					ИначеЕсли НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS И НЕ СтрокаСписка.DDS = Дата(1,1,1) Тогда
						НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаСписка.DDS), НоваяСтрока.СрокОплатыАванса); 	
					КонецЕсли;	
					
				КонецЦикла;
			КонецЕсли;		
		КонецЦикла;
		
		ОбновитьГрафикПлатежей();
		
	ИначеЕсли ТипЗнч(ИДСтрокиПродукта) = Тип("Число") Тогда	
		// Передан ИД строки продукта, добавляем условия и график по продукту строки
		СтрокаПродукта = СписокПродуктов.НайтиПоИдентификатору(ИДСтрокиПродукта);
		//rarus vikhle 21.10.2021 m 18076 +++
		Если СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП Тогда
			ДатаНачалаДоговора = ТекущаяДатаСеанса();
		Иначе	
			ДатаНачалаДоговора = Неопределено;
		КонецЕсли;	
		//rarus vikhle 21.10.2021 m 18076 ---
		
		// Удаляем имеющиеся условия с продуктом
		УдалитьУсловияОплатыПродукта(СтрокаПродукта.Продукт);
		
		// Удаление строк без продукта
		УдалитьУсловияОплатыПродукта(Справочники.Scan_Изделия.ПустаяСсылка());//rarus vikhle 13.08.2021 mt 18154
		
		//rarus vikhle 10.08.2021 mt 17637 +++
		Если ОбновитьИтоговуюСумму Тогда
			ОбновитьИтоговуюСуммуПродукта(СтрокаПродукта);	
		КонецЕсли;
		//rarus vikhle 10.08.2021 mt 17637 ---
		
		Для Каждого СтрокаУсловий Из СгруппированныеУсловияОплаты Цикл
			СтрокаУсловийЗаявки 		= УсловияОплаты.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаУсловийЗаявки, СтрокаУсловий);
			СтрокаУсловийЗаявки.Продукт	= СтрокаПродукта.Продукт;
			СтрокаУсловийЗаявки.Сумма	= СтрокаУсловийЗаявки.ПроцентОплаты / 100 * СтрокаПродукта.ИтоговаяСумма;
						
			Если СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора
				И (НЕ ТекущийДоговор.Пустая() 
				ИЛИ СтатусНовойВерсииЗаявки = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП) Тогда  //rarus vikhle 21.10.2021 m 18076 
				
				Если ДатаНачалаДоговора = Неопределено Тогда
					ДатаНачалаДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийДоговор, "ДатаНачала"); 
				КонецЕсли;	
				
				СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора,СтрокаУсловийЗаявки.СрокОплатыАванса);
			ИначеЕсли СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS
				И НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда
				СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(СтрокаПродукта.DDS,СтрокаУсловийЗаявки.СрокОплатыАванса);	
			ИначеЕсли СтрокаУсловийЗаявки.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS
				И НЕ СтрокаПродукта.DDS = Дата(1,1,1) Тогда 	
				СтрокаУсловийЗаявки.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(СтрокаПродукта.DDS,СтрокаУсловийЗаявки.СрокОплатыАванса);	
			КонецЕсли;	
		КонецЦикла;
		
		ОбновитьГрафикПлатежей(СтрокаПродукта.Продукт);
		
	ИначеЕсли ТипЗнч(ИДСтрокиПродукта) = Тип("Массив") Тогда	
		// Передан массив ИД строк продукта, добавляем условия и график по продуктам	
		Для Каждого ЭлМассива Из ИДСтрокиПродукта Цикл
			//СтрокаСпискаПродуктов = СписокПродуктов.НайтиПоИдентификатору(ЭлМассива);
			//ОбновитьИтоговуюСуммуПродукта(СтрокаСпискаПродуктов);
			ДобавитьУсловияОплаты(ЭлМассива,ОбновитьИтоговуюСумму);
		КонецЦикла;	
	КонецЕсли;	
		
КонецПроцедуры //rarus vikhle 04.08.2021 mt 17637 ---

&НаСервере
Функция МожноПрименитьСУ(СтрокаСписка, ПримененийСУВДругихЗаявках = 0, ПримененийСУВТекущейЗаявке = 0, КвотаСУ = 0) // rarus vikhle 15.09.2021 m 18235 +++
	
	ЗапретНаИзменениеСУ = Ложь;//rarus vikhle 24.05.2021 mt 17780
	
	
	Если СтрокаСписка = Неопределено Тогда
		// Не передана строка таблицы, тогда проверяются все строки
		
		ПримененийСУВДругихЗаявках  = ПримененийСУВДругихЗаявках(СпециальныеУсловия);
		ПримененийСУВТекущейЗаявке	= ПримененийСУВТекущейЗаявке(СпециальныеУсловия);
		КвотаСУ						= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СпециальныеУсловия, "КоличествоПродуктов");
		
		Для Каждого Строка ИЗ СписокПродуктов Цикл
			МожноПрименитьКПродукту = МожноПрименитьСУ(Строка, ПримененийСУВДругихЗаявках, ПримененийСУВТекущейЗаявке, КвотаСУ);
			
			Если НЕ МожноПрименитьКПродукту Тогда
				Возврат Ложь;
			КонецЕсли;
			
		КонецЦикла;	
		
	Иначе 		
			
		//rarus kabany 16.04.2021 17533 +++
		Если НЕ Scan_ПраваИНастройки.Scan_Право("РазрешитьКорректировкуЦенПродуктовПриНаличииКлючевойДатыПродажи") Тогда //rarus kabany 12.04.2021 17533 +
			Если Дилер.ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда	
				Если СтрокаСписка.ДатаПродажиКлиенту <> Дата(1,1,1) Тогда
					ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи. Изменение СУ недоступно.';
					|en = 'Product %1 has a sale date. Changing the SU is not available.'"),,,,,СтрокаСписка.Продукт);
					//rarus vikhle 24.05.2021 mt 17780 +++
					//Продолжить;
					ЗапретНаИзменениеСУ = Истина; 
					//rarus vikhle 24.05.2021 mt 17780 ---
				КонецЕсли;		
			Иначе
				Если СтрокаСписка.ДатаПродажиДилеру <> Дата(1,1,1) Тогда
					ВывестиСообщениеПол(Нстр("ru = 'У продукта %1 есть дата продажи. Изменение СУ недоступно.';
					|en = 'Product %1 has a sale date. Changing the SU is not available."),,,,,СтрокаСписка.Продукт);
					//rarus vikhle 24.05.2021 mt 17780 +++
					//Продолжить; 
					ЗапретНаИзменениеСУ = Истина;
					//rarus vikhle 24.05.2021 mt 17780 ---
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли;
		//rarus kabany 16.04.2021 17533 ---
		
		//rarus vikhle 02.08.2021 17637 +++ Раскомментировал
		//rarus vikhle 10.06.2021 mt 17637 +++
		Если Не ЗапретНаИзменениеСУ Тогда
			Если ТипЗнч(СтрокаСписка.Продукт) = Тип("СправочникСсылка.Scan_Изделия")
				И НЕ ПродуктУказанВСУ(СпециальныеУсловия, СтрокаСписка.Продукт) Тогда
				ЗапретНаИзменениеСУ = Истина;
				ВывестиСообщениеПол(Нстр("ru = 'Продукт %1 не указан в СУ. СУ не были применены.'"),,,,,СтрокаСписка.Продукт);
			КонецЕсли;	
		КонецЕсли;	
		//rarus vikhle 10.06.2021 mt 17637 ---
		//rarus vikhle 02.08.2021 17637 ---
		
		//rarus vikhle 22.06.2021 mt 17637 +++
		Если Не ЗапретНаИзменениеСУ Тогда
			//Проверка на превышение квоты в случае указания СУ
			ОбщееКоличествоПримененийСУ = ПримененийСУВТекущейЗаявке + ПримененийСУВДругихЗаявках + СтрокаСписка.Количество;  
			Если ОбщееКоличествоПримененийСУ > КвотаСУ Тогда
				ВывестиСообщениеПол(Нстр("ru = 'По выбранным Специальным условиям все применения исчерпаны. Невозможно применить к продукту %1.'"),,,,,СтрокаСписка.Продукт);	
				ЗапретНаИзменениеСУ = Истина;
			Иначе
				ПримененийСУВТекущейЗаявке = ПримененийСУВТекущейЗаявке + СтрокаСписка.Количество;	
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЕсли;	
		
	Возврат НЕ ЗапретНаИзменениеСУ;
	
КонецФункции // rarus vikhle 15.09.2021 m 18235 ---	

&НаКлиенте
Процедура ПослеВопросаЗаполнениеСУ(ОтветПользователя, ДопПараметры) Экспорт // rarus vikhle 15.09.2021 m 18235
	
	Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДляВыбранныхПродуктовНаСервере(Истина);	
	КонецЕсли;	
	
КонецПроцедуры // rarus vikhle 15.09.2021 m 18235 ---	

&НаСервере
Процедура ЗаполнитьСтандартныеУсловияОплаты() //rarus vikhle 17.09.2021 mt 18288 +++
		
	ВидДилера				 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Дилер, "ВидДилера");
	УникальностьСпецификации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееСоглашениеОПоставке, "УникальностьСпецификации");
	
	Если УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
		И (ВидДилера = Перечисления.Scan_ВидыДилеров.Независимый 
		ИЛИ НЕ ЗначениеЗаполнено(ВидДилера)) Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляSTDДляНезависимыхДилеров";
	ИначеЕсли (УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UO
		ИЛИ УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UUO) 
		И (ВидДилера = Перечисления.Scan_ВидыДилеров.Независимый 
		ИЛИ НЕ ЗначениеЗаполнено(ВидДилера)) Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляUOUUOДляНезависимыхДилеров";
	ИначеЕсли УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.Std 
		И ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляSTDДляОСП";
	ИначеЕсли (УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UO
		ИЛИ УникальностьСпецификации = Перечисления.Scan_ТипыСпецификации.UUO) 
		И ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
		Право = "ШаблонСтандартныхУсловийОплатыДляUOUUOДляОСП";
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" не загружены стандартные условия оплаты, т.к. не удалось определить настройку с шаблоном условий оплаты.'"));
		Возврат;
	КонецЕсли;
		
	ШаблонУсловийОплаты = Scan_ПраваИНастройки.Scan_Право(Право);
	
	Если ЗначениеЗаполнено(ШаблонУсловийОплаты) Тогда
		УсловияОплатыШаблона = ШаблонУсловийОплаты.УсловияОплаты.Выгрузить();
		СтандартныеУсловияОплаты.Загрузить(УсловияОплатыШаблона);
		СгруппированныеУсловияОплаты.Загрузить(УсловияОплатыШаблона);
		ДобавитьУсловияОплаты();
		ПринадлежностьНастройки = ?(ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный, Нстр("ru = 'ОСП'"), Нстр("ru = 'независимых дилеров'")); //rarus vikhle 27.09.2021 АПК
		ВывестиСообщениеПол(Нстр("ru = 'В табличную часть ""Условия оплаты"" загружены стандартные условия оплаты для %1 для %2'"),,,,,
							УникальностьСпецификации, ПринадлежностьНастройки);
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'Не указан шаблон стандартных условий оплаты'"));
	КонецЕсли;	
	
		
КонецПроцедуры //rarus vikhle 17.09.2021 mt 18288 ---

&НаСервере
Процедура ПроверитьСовпадениеУсловийОплаты() //rarus vikhle 17.09.2021 mt 18288 +++
	
	УсловияСовпадают = Ложь;
	
	Если СгруппированныеУсловияОплаты.Количество() > 0 
		И СгруппированныеУсловияОплаты.Количество() = СтандартныеУсловияОплаты.Количество() Тогда
		
		Отбор = Новый Структура("ВидОплаты,ПроцентОплаты,СрокОплатыАванса,РасчетДатыОплаты");
		МассивОбработанныхСтрок = Новый Массив;
		
		Для Каждого СтрокаУсловийСУ Из СгруппированныеУсловияОплаты Цикл
			ЗаполнитьЗначенияСвойств(Отбор,СтрокаУсловийСУ);
			Строки = СтандартныеУсловияОплаты.НайтиСтроки(Отбор);
			Если Строки.Количество() = 0 Тогда 
				Прервать;
			Иначе	
				Для Каждого СтрокаСтандартныхУсловий Из Строки Цикл
					Если МассивОбработанныхСтрок.Найти(СтрокаСтандартныхУсловий) = Неопределено Тогда
						МассивОбработанныхСтрок.Добавить(СтрокаСтандартныхУсловий);
						Прервать;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;	
		
		УсловияСовпадают = СгруппированныеУсловияОплаты.Количество() = МассивОбработанныхСтрок.Количество();	
	КонецЕсли;
			
	УсловияОплатыСтандартные = УсловияСовпадают;
		
		
КонецПроцедуры //rarus vikhle 17.09.2021 mt 18288 ---

&НаКлиенте
Процедура СоставТекущейЗаявкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 28.09.2021 mt 18076 +++
	
	ПеренестиВРазделение(Команды.ПеренестиВРазделение);	
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 18076  ---

&НаКлиенте
Процедура ПродуктыКПереносуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //rarus vikhle 28.09.2021 mt 18076 +++
	
	Если НЕ Поле = Элементы.ПродуктыКПереносуЗаявка Тогда
		ВернутьВТекущуюЗаявку(Команды.ВернутьВТекущуюЗаявку);
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 18076 ---

&НаСервереБезКонтекста
Функция ИмяКолонкиСДатойПродажи(Знач ДилерСсылка) //rarus vikhle 29.09.2021 mt 18076 +++
	
	ТипДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДилерСсылка,"ВидДилера");
	ИмяКолонкиСДатойПродажи = ?(ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный, "ДатаПродажиКлиенту", "ДатаПродажиДилеру");
	
	Возврат ИмяКолонкиСДатойПродажи; 
	
КонецФункции //rarus vikhle 29.09.2021 mt 18076 ---	

&НаКлиенте
Процедура ПродуктыКПереносуЗаявкаПриИзменении(Элемент) //rarus vikhle 01.10.2021 mt 18076 +++
	
	ОбновитьНомераЗаявок();// rarus vikhle 13.10.2021 mt 18076 +++
	
	//ТекущиеДанные = Элементы.ПродуктыКПереносу.ТекущиеДанные;
	//СписокВыбора  = Элементы.ПродуктыКПереносуЗаявка.СписокВыбора; 
	//МаксНомерЗаявки = Элементы.ПродуктыКПереносуЗаявка.СписокВыбора[Элементы.ПродуктыКПереносуЗаявка.СписокВыбора.Количество() - 1].Значение;
	//
	////rarus vikhle 12.10.2021 mt 18076 +++
	//Отбор = Новый Структура("Заявка", МаксНомерЗаявки);
	//СтрокиСМаксНомером = ПродуктыКПереносу.НайтиСтроки(Отбор);
	////rarus vikhle 12.10.2021 mt 18076 ---
	//
	//Если ТекущиеДанные.Заявка = МаксНомерЗаявки 
	//	И СтрокиСМаксНомером.Количество() > 1 Тогда //rarus vikhle 12.10.2021 mt 18076
	//	СписокВыбора.Добавить(МаксНомерЗаявки + 1);	
	//КонецЕсли;	
	// rarus vikhle 13.10.2021 mt 18076 ---
	
КонецПроцедуры //rarus vikhle 01.10.2021 mt 18076 ---

&НаСервере
Процедура ВернутьВсеВТекущуюЗаявкуНаСервере() //rarus vikhle 28.09.2021 mt 18076 +++
	
	//Для Каждого СтрокаТаблицы Из ПродуктыКПереносу Цикл
	КоличествоЭлементов = ПродуктыКПереносу.Количество();
	Для ОбратныйИндекс = 1 По КоличествоЭлементов Цикл
		//rarus vikhle 12.10.2021 mt 18076 +++
		//Если ТипЗнч(СтрокаТаблицы.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		//	
		//	Отбор = Новый Структура("Продукт", СтрокаТаблицы.Продукт);
		// 	СтрокиПродукта = СписокПродуктов.НайтиСтроки(Отбор);
		//	Если СтрокиПродукта.Количество() > 0 Тогда
		//		ВывестиСообщениеПол(Нстр("ru = 'В таблице продуктов уже есть продукт %1'"),,,,, СтрокаТаблицы.Продукт);
		//		Продолжить;
		//	КонецЕсли;
		//	
		//КонецЕсли;					
		//
		//НоваяСтрока = СписокПродуктов.Добавить();
		//ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		//
		//Если ТипЗнч(СтрокаТаблицы.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда 
		//	ДобавитьУсловияОплаты(НоваяСтрока.ПолучитьИдентификатор());
		//КонецЕсли;	
		ТекущаяСтрока = ПродуктыКПереносу[КоличествоЭлементов - ОбратныйИндекс];
		ВернутьВТекущуюЗаявкуНаСервере(ТекущаяСтрока.ПолучитьИдентификатор(), ТекущаяСтрока.Количество, Ложь);
		//rarus vikhle 12.10.2021 mt 18076 ---
				
	КонецЦикла;	
	
	ПродуктыКПереносу.Очистить();
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 18076 ---

&НаКлиенте
Процедура ПослеВыбораКоличества(СтрокаКоличества, Источник) Экспорт //rarus vikhle 28.09.2021 mt 18076 +++
	
	Если НЕ СтрокаКоличества = Неопределено Тогда
		
		Если Источник = Элементы.СоставТекущейЗаявки Тогда
			ПеренестиВРазделениеНаСервере(, СтрокаКоличества.Значение);	
		ИначеЕсли Источник = Элементы.ПродуктыКПереносу Тогда
			ВернутьВТекущуюЗаявкуНаСервере(, СтрокаКоличества.Значение);;
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 18076 ---

&НаКлиенте
Процедура ПослеВопросаАвтоматическогоПереноса(ОтветПользователя, ДопПараметры) Экспорт //rarus vikhle 28.09.2021 mt 18076 +++ 
	
	Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
		
		ВернутьВсеВТекущуюЗаявкуНаСервере();
		УстранитьПревышениеПоЛимитамНаСервере();
		
	ИначеЕсли ОтветПользователя = КодВозвратаДиалога.Нет Тогда	
		
		УстранитьПревышениеПоЛимитамНаСервере();	
		
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 28.09.2021 mt 18076 ---	

&НаСервере
Процедура УстранитьПревышениеПоЛимитамНаСервере()
	
	// Проверим, если ли превышение по лимитам
	ЛимитПоКоличеству	= Scan_ПраваИНастройки.Scan_Право("ЛимитКоличестваПродуктовВЗаявкеНаСОП");
	ЛимитПоСумме		= Scan_ПраваИНастройки.Scan_Право("ЛимитСуммыПродуктовВЗаявкеНаСОП"); 
	
	ПревышениеПоКоличеству	= СписокПродуктов.Итог("Количество") > ЛимитПоКоличеству;
	ПревышениеПоСумме		= СписокПродуктов.Итог("ИтоговаяСумма") > ЛимитПоСумме;
	
	Если НЕ ПревышениеПоКоличеству И НЕ ПревышениеПоСумме Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Нет превышения по количеству продуктов или по общей сумме. Автоматический перенос не выполнен.'"));
		Возврат;
	КонецЕсли;	
	
	ИмяКолонкиСДатойПродажи = ИмяКолонкиСДатойПродажи(Дилер);
	НужноДобавитьЗаявку		= Истина;
	
	// Обрабатываем только строки без даты продажи
	Отбор = Новый Структура(ИмяКолонкиСДатойПродажи, Дата(1,1,1));
	СтрокиБезДатыПродажи = СписокПродуктов.НайтиСтроки(Отбор);
		
	Для Каждого СтрокаБезДатыПродажи Из СтрокиБезДатыПродажи Цикл
		
		Для Индекс = 1 По СтрокаБезДатыПродажи.Количество Цикл
			
			// Проверяем, сохраняется ли превышение лимитов  
			Если (СписокПродуктов.Итог("Количество") > ЛимитПоКоличеству ИЛИ СписокПродуктов.Итог("ИтоговаяСумма") > ЛимитПоСумме)
				И СписокПродуктов.Итог("Количество") > 1 Тогда
				
				ПеренестиВРазделениеНаСервере(СтрокаБезДатыПродажи.ПолучитьИдентификатор(), 1);
				
			ИначеЕсли (СписокПродуктов.Итог("Количество") > ЛимитПоКоличеству ИЛИ СписокПродуктов.Итог("ИтоговаяСумма") > ЛимитПоСумме)
				И СписокПродуктов.Итог("Количество") <= 1 Тогда 
				// В текущей заявки остался 1 продукт/драфт и превышение осталось,переносить больше нельзя  
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	Если СписокПродуктов.Итог("Количество") <= ЛимитПоКоличеству И СписокПродуктов.Итог("ИтоговаяСумма") <= ЛимитПоСумме Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Превышение по лимитам устранено'"));
	Иначе
		ВывестиСообщениеПол(Нстр("ru = 'Невозможно устранить превышение лимита по общей сумме'"));
		ВернутьВсеВТекущуюЗаявкуНаСервере();
	КонецЕсли;	
		
КонецПроцедуры	

&НаСервере
Процедура ПеренестиВРазделениеНаСервере(ИДСтроки = Неопределено, Количество = 1)
	
	Если НЕ ЗначениеЗаполнено(Количество) Тогда
		Возврат;
	КонецЕсли;	
		
	Если ИДСтроки = Неопределено Тогда
		ТекущаяСтрока = Элементы.СоставТекущейЗаявки.ТекущаяСтрока;
	Иначе
		ТекущаяСтрока = ИДСтроки;
	КонецЕсли;	
	
	ТекущиеДанные = СписокПродуктов.НайтиПоИдентификатору(ТекущаяСтрока);
	
	//Помещаем в первую заявку, с непревышенным лимитом
	ЛимитПоКоличеству	= Scan_ПраваИНастройки.Scan_Право("ЛимитКоличестваПродуктовВЗаявкеНаСОП");
	ЛимитПоСумме		= Scan_ПраваИНастройки.Scan_Право("ЛимитСуммыПродуктовВЗаявкеНаСОП");
	
	СгруппированнаяТаблица = РеквизитФормыВЗначение("ПродуктыКПереносу").Скопировать(,"Количество, Заявка, ИтоговаяСумма");
	СгруппированнаяТаблица.Свернуть("Заявка", "ИтоговаяСумма, Количество");
	СгруппированнаяТаблица.Сортировать("Заявка");
	
	ТекущаяИтоговаяСумма = ТекущиеДанные.ИтоговаяСумма / ТекущиеДанные.Количество * Количество;
			
	Если СгруппированнаяТаблица.Количество() > 0 Тогда
		
		НомерЗаявки = 1;
		
		//rarus vikhle 13.10.2021 mt 18076 +++
		МаксСтрока = СгруппированнаяТаблица[СгруппированнаяТаблица.Количество() - 1];
		
		Если МаксСтрока.ИтоговаяСумма + ТекущаяИтоговаяСумма <= ЛимитПоСумме 
			И МаксСтрока.Количество + Количество <= ЛимитПоКоличеству Тогда
			НомерЗаявки = МаксСтрока.Заявка;		
		Иначе
			НомерЗаявки = МаксСтрока.Заявка + 1;			
		КонецЕсли;			
		
		//Для Индекс = 1 По Количество Цикл
		//	
		//	Для Каждого СтрокаТаблицы Из СгруппированнаяТаблица Цикл
		//		
		//		Если СтрокаТаблицы.ИтоговаяСумма + ТекущаяИтоговаяСумма <= ЛимитПоСумме 
		//			И СтрокаТаблицы.Количество + Количество <= ЛимитПоКоличеству Тогда
		//			НомерЗаявки = СтрокаТаблицы.Заявка;
		//			Прервать;
		//			
		//		Иначе
		//			НомерЗаявки = НомерЗаявки + 1;
		//		КонецЕсли;	
		//		
		//	КонецЦикла;
		//	
		//КонецЦикла;	
		//rarus vikhle 13.10.2021 mt 18076 ---
	Иначе
		
		НомерЗаявки = 1;
		
	КонецЕсли;	
	
	НоваяСтрока = ПродуктыКПереносу.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные,, "Количество");
	НоваяСтрока.Количество = Количество;
	НоваяСтрока.Заявка = НомерЗаявки;
	НоваяСтрока.ИтоговаяСумма = ТекущаяИтоговаяСумма; 
	
	Если ТекущиеДанные.Количество - Количество = 0 Тогда
		СписокПродуктов.Удалить(ТекущиеДанные);
	Иначе
		ТекущиеДанные.Количество = ТекущиеДанные.Количество - Количество; 
		ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект, ТекущаяСтрока);
	КонецЕсли;	
		
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		УдалитьУсловияОплатыПродукта(ТекущиеДанные.Продукт)
	КонецЕсли;	
	
	ЗаполнитьСписокВыбораНомераЗаявки(); //rarus vikhle 13.10.2021 mt 18076
			
КонецПроцедуры

&НаСервере
Процедура ВернутьВТекущуюЗаявкуНаСервере(ИДСтроки = Неопределено, Количество = 1, ОбновитьНомераЗаявок = Истина) //rarus vikhle 12.10.2021 mt 18076 + ИДСтроки и ОбновитьНомераЗаявок
	
	
	
	//rarus vikhle 12.10.2021 mt 18076 +++
	Если ИДСтроки = Неопределено Тогда
		ТекущаяСтрока = Элементы.ПродуктыКПереносу.ТекущаяСтрока;
	Иначе
		ТекущаяСтрока = ИДСтроки;
	КонецЕсли;	
	//rarus vikhle 12.10.2021 mt 18076 ---
	
	ТекущиеДанные = ПродуктыКПереносу.НайтиПоИдентификатору(ТекущаяСтрока);
	
	Если НЕ ЗначениеЗаполнено(Количество) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		
		Отбор			= Новый Структура("Продукт", ТекущиеДанные.Продукт);
	 	СтрокиПродукта	= СписокПродуктов.НайтиСтроки(Отбор);
		Если СтрокиПродукта.Количество() > 0 Тогда
			
			ПродуктыКПереносу.Удалить(ТекущиеДанные);				
			ВывестиСообщениеПол(Нстр("ru = 'В таблице продуктов уже есть продукт %1. Продукт удален из таблицы ""Продукты к переносу"".'"),,,,, ТекущиеДанные.Продукт);
			Возврат;
			
		КонецЕсли;
		
		НоваяСтрока = СписокПродуктов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные);
		НоваяСтрока.Количество = Количество;
		
		ДобавитьУсловияОплаты(НоваяСтрока.ПолучитьИдентификатор());
		
	ИначеЕсли ТипЗнч(ТекущиеДанные.Продукт) = Тип("СправочникСсылка.Scan_ДрафтыПродуктов") Тогда 	
		
		Отбор = Новый Структура();
		//rarus vikhle 12.10.2021 mt 18076 +++
		Отбор.Вставить("Продукт");
		Отбор.Вставить("СпециальныеУсловия");
		Отбор.Вставить("ПроцентДрайв");
		Отбор.Вставить("DDЗапрошенная");
		Отбор.Вставить("СкладОтгрузки");
		Отбор.Вставить("Себестоимость");
		Отбор.Вставить("Драйв");
				
		//СписокПродуктовТЗ	= РеквизитФормыВЗначение("СписокПродуктов");
		//Для Каждого Колонка Из СписокПродуктовТЗ.Колонки Цикл
		//	Отбор.Вставить(Колонка.Имя,);
		//КонецЦикла;	
		//rarus vikhle 12.10.2021 mt 18076 ---
		ЗаполнитьЗначенияСвойств(Отбор, ТекущиеДанные);
		СовпадающиеСтрокиДрафта = СписокПродуктов.НайтиСтроки(Отбор);
		
		Если СовпадающиеСтрокиДрафта.Количество() > 0 Тогда
			
			ЗаполнитьЗначенияСвойств(СовпадающиеСтрокиДрафта[0], ТекущиеДанные,, "Количество"); //rarus vikhle 12.10.2021 mt 18076 + Количество
			СовпадающиеСтрокиДрафта[0].Количество = СовпадающиеСтрокиДрафта[0].Количество + Количество;
			ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект, СовпадающиеСтрокиДрафта[0].ПолучитьИдентификатор()); 
			
		Иначе
			
			НоваяСтрока = СписокПродуктов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные);
			НоваяСтрока.Количество = Количество;
			ОбновитьИтоговуюСуммуДрафта(ЭтотОбъект, НоваяСтрока.ПолучитьИдентификатор());
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	 
	Если ТекущиеДанные.Количество - Количество = 0 Тогда
		
		ПродуктыКПереносу.Удалить(ТекущиеДанные);
		
	Иначе
		
		ТекущиеДанные.ИтоговаяСумма = ТекущиеДанные.ИтоговаяСумма / ТекущиеДанные.Количество * (ТекущиеДанные.Количество - Количество); 
		ТекущиеДанные.Количество = ТекущиеДанные.Количество - Количество;
		
	КонецЕсли;
	
	//rarus vikhle 12.10.2021 mt 18076 +++
	Если ОбновитьНомераЗаявок Тогда
		ОбновитьНомераЗаявок();
	КонецЕсли;	
	//rarus vikhle 12.10.2021 mt 18076 ---
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРазделениеЗаявки(ИтогиПоЗаявкам, НеобходимоСоздатьСОПВ1БД, ТаблицаИзделийСоглашения, ЗаявкиНаОтгрузкуПереносимыхПродуктов) //rarus vikhle 06.10.2021 mt 18076 +++
	
	ТекущийПользователь				= Пользователи.ТекущийПользователь();
	СообщенияТекЗаявки				= РегистрыСведений.Scan_Сообщения.СообщенияСвязанныхЗаявок(НовоеСоглашениеОПоставке);
	НомераСозданныхЗаявок			= Новый Массив;
		
	Если ЗначениеЗаполнено(ЗаявкиНаОтгрузкуПереносимыхПродуктов) Тогда
		ЗаявкиНаОтгрузку = ЗаявкиНаОтгрузкуПереносимыхПродуктов.Скопировать(, "ЗаявкаНаОтгрузку, Статус"); 
		ЗаявкиНаОтгрузку.Свернуть("ЗаявкаНаОтгрузку, Статус");
	КонецЕсли;	
	
	Для Каждого Строка Из ИтогиПоЗаявкам Цикл
		
		Отбор				   = Новый Структура("Заявка", Строка.Заявка);
		ТаблицаПродуктовЗаявки = РеквизитФормыВЗначение("ПродуктыКПереносу").Скопировать(Отбор);
		СопНовойЗаявки		   = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();	
		
		НачатьТранзакцию();
		Попытка
			// Создание СОП
			Если НЕ НовоеСоглашениеОПоставке.Договор.Пустая() Тогда
				СопНовойЗаявки = НовоеСоглашениеОПоставке.Договор.Скопировать();
				
				СопНовойЗаявки.ДатаНачала		= ТекущаяДатаСеанса();
				СопНовойЗаявки.ВидДоговора		= Перечисления.Scan_ВидыДоговоров.Соглашение;
				СопНовойЗаявки.IdExternalSystem = "";	
								
				НачатьТранзакцию();	
				Попытка
					СопНовойЗаявки.ЗаполнитьДанныеНумерацииСОП();
					СопНовойЗаявки.Записать();
					ВывестиСообщениеПол(Нстр("ru = 'Создан СОП № %1'"),,,,, СопНовойЗаявки.НомерДоговора);
					ЗафиксироватьТранзакцию();
					
				Исключение
					
					ОтменитьТранзакцию();
					ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при создании СОП № %1'"),,,,, СопНовойЗаявки.НомерДоговора);
					ЗаписьЖурналаРегистрации(Нстр("ru = 'Разделение заявки'", ОбщегоНазначения.КодОсновногоЯзыка()),
											УровеньЖурналаРегистрации.Ошибка,,,
											Нстр("ru = 'Произошла ошибка при создании СОП. '") +  ПодробноеПредставлениеОшибки(ОписаниеОшибки()));
				КонецПопытки;
				
			КонецЕсли;
			
			// Создание заявки
			НоваяЗаявка = НовоеСоглашениеОПоставке.Скопировать();
			
			//rarus vikhle 15.10.2021 mt 18427 +++
			НоваяЗаявка.СписокПродуктов.Очистить();
			НоваяЗаявка.УсловияОплаты.Очистить();
			НоваяЗаявка.ГрафикПлатежей.Очистить();
			
			НоваяЗаявка.НомерСоглашенияОПоставке	= "";
			НоваяЗаявка.Статус						= Неопределено;
			НоваяЗаявка.Основание					= Неопределено;
			НоваяЗаявка.ИсходнаяЗаявка				= Неопределено;
			
			НоваяЗаявка.Договор						= Неопределено;
			НоваяЗаявка.НомерСОП					= "";
			
			НоваяЗаявка.DDS							= Неопределено;
			НоваяЗаявка.DeliveryDate				= Неопределено;
			НоваяЗаявка.КоличествоРабочихДней		= Неопределено;
			НоваяЗаявка.IDПродуктаКП				= "";
			НоваяЗаявка.СпециальныеУсловия			= Неопределено;
			
			НоваяЗаявка.НомерЗаявкиНаСОПSOWA		= "";
			НоваяЗаявка.КомментарийДилераSOWA		= "";
			НоваяЗаявка.КомментарийSRUSOWA			= "";
			НоваяЗаявка.КомментарийИзУТ				= "";
			НоваяЗаявка.ОтветственныйЗаРезерв		= Неопределено;
			//rarus vikhle 15.10.2021 mt 18427 ---
			
			НоваяЗаявка.СписокПродуктов.Загрузить(ТаблицаПродуктовЗаявки);
			
			// Заполним условия оплаты и график платежей
			УсловияОплатыТЗ	 = ПолучитьУсловияОплатыНовойЗаявки(ТаблицаПродуктовЗаявки, СопНовойЗаявки.Ссылка);
			НоваяЗаявка.УсловияОплаты.Загрузить(УсловияОплатыТЗ);
			
			ГрафикПлатежейТЗ = ПолучитьГрафикПлатежейНовойЗаявки(УсловияОплатыТЗ);
			НоваяЗаявка.ГрафикПлатежей.Загрузить(ГрафикПлатежейТЗ);
			
			НоваяЗаявка.Статус			= СтатусНовойЗаявки(НеобходимоСоздатьСОПВ1БД); //rarus vikhle 13.10.2021 mt 18076
			//НоваяЗаявка.Статус			= НовоеСоглашениеОПоставке.Статус;
			НоваяЗаявка.Договор			= СопНовойЗаявки.Ссылка;
			НоваяЗаявка.НомерСОП		= СопНовойЗаявки.НомерДоговора;
			НоваяЗаявка.Количество		= НоваяЗаявка.СписокПродуктов.Итог("Количество");
			НоваяЗаявка.ИсходнаяЗаявка	= ТекущееСоглашениеОПоставке;
			
			Для Каждого ТекСтрокаПродуктов Из НоваяЗаявка.СписокПродуктов Цикл
				Если ЗначениеЗаполнено(ТекСтрокаПродуктов.ЦенаПоВалютнойОговорке) Тогда
					НоваяЗаявка.ВалютнаяОговорка = Истина;
					Прервать;
				КонецЕсли;		
			КонецЦикла;
			
			НачатьТранзакцию();
			Попытка
				
				НоваяЗаявка.Записать();
				ВывестиСообщениеПол(Нстр("ru = 'Создана заявка № %1'"),,,,, НоваяЗаявка.НомерСоглашенияОПоставке);
				ЗафиксироватьТранзакцию();
				
			Исключение	
				ОтменитьТранзакцию();
				ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при создании заявки № %1'"),,,,, НоваяЗаявка.НомерСоглашенияОПоставке);
				ЗаписьЖурналаРегистрации(Нстр("ru = 'Разделение заявки'", ОбщегоНазначения.КодОсновногоЯзыка()),
										УровеньЖурналаРегистрации.Ошибка,,,
										Нстр("ru = 'Произошла ошибка при создании заявки. '") +  ПодробноеПредставлениеОшибки(ОписаниеОшибки()));
							
			КонецПопытки;
			
			НомераСозданныхЗаявок.Добавить("№ " + НоваяЗаявка.НомерСоглашенияОПоставке); //rarus vikhle 15.10.2021 АПК перенес до фиксации транзакции
			
			ЗафиксироватьТранзакцию();	
			
		Исключение	
			
			ОтменитьТранзакцию();
			ВывестиСообщениеПол(Нстр("ru = 'Во время записи данных произошли ошибки, заявка и договор не созданы по заявке № %1. Подробности в журнале регистрации'"),,,,, Строка.Заявка);
			Продолжить;
			
		КонецПопытки;	
		
		// Создание / корректировка документов цен
		
		//rarus vikhle 14.10.2021 mt 18292 +++
		//СоздатьДокументыПлановыхЦен(ТаблицаПродуктовЗаявки, НоваяЗаявка.Ссылка, Истина);
		СоздатьДокументыПлановыхЦен(ТаблицаПродуктовЗаявки, НоваяЗаявка.Ссылка);//rarus vikhle 02.11.2021 m 18502
		
		// Фиксация измененения себестоимости в регистре "Плановая себестоимость продуктов"
		// rarus vikhle 17.01.2022 m 18269 +++
		ПродуктыСИзмененнойСебестоимостью = Справочники.Scan_СоглашенияОПоставке.ПродуктыСИзмененнойСебестоимостью(ТаблицаИзделийСоглашения,
																													ТаблицаПродуктовЗаявки);		
		Для Каждого СтрокаПродуктСебестоимость Из ПродуктыСИзмененнойСебестоимостью Цикл
			РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(СтрокаПродуктСебестоимость.Продукт, 
																						СтрокаПродуктСебестоимость.Себестоимость);
		КонецЦикла;	
		// rarus vikhle 17.01.2022 m 18269 ---
		
		//Для Каждого СтрокаТаблицы Из ТаблицаПродуктовЗаявки Цикл
		//	
		//	//rarus vikhle 12.10.2021 mt 18076 +++
		//	Если НЕ ТипЗнч(СтрокаТаблицы.Продукт) = Тип("СправочникСсылка.Scan_Изделия") Тогда
		//		Продолжить;
		//	КонецЕсли;	
		//	//rarus vikhle 12.10.2021 mt 18076 ---
		//	
		//	ТабРучныхСоставляющих = ЗаполнитьТаблицуСоставляющих(СтрокаТаблицы, НоваяЗаявка.Ссылка, ТекущийПользователь);		
		//	ДокументУстановкиЦен  = Документы.Scan_УстановкаПлановыхЦенПродукта.СоздатьСкорректироватьДокументУстановкиЦен(СтрокаТаблицы.Продукт, ТабРучныхСоставляющих, НоваяЗаявка.Ссылка, СтрокаТаблицы.СпециальныеУсловия);	
		//	
		//	Если ДокументУстановкиЦен = Неопределено Тогда
		//		ВывестиСообщениеПол(НСтр("ru = 'Ошибка при создании документа установки плановых цен продукта %1: %2'"),,,,,
		//							СтрокаТаблицы.Продукт, ОписаниеОшибки());				
		//	Иначе
		//		ВывестиСообщениеПол(НСтр("ru = 'Успешно создан/скорректирован документ установки плановых цен для продукта %1.'"),,,,,
		//							СтрокаТаблицы.Продукт);						
		//	КонецЕсли;	        
		//						
		//КонецЦикла;
		//rarus vikhle 14.10.2021 mt 18292 ---
		
		Если НеобходимоСоздатьСОПВ1БД Тогда
			Справочники.Scan_ДоговорыВзаиморасчетов.СоздатьДоговорВ1БД(НоваяЗаявка.Договор, НоваяЗаявка.Ссылка);		
		КонецЕсли;
		
		// Копируем сообщения
		РегистрыСведений.Scan_Сообщения.СкопироватьСообщения(НоваяЗаявка.Ссылка,, СообщенияТекЗаявки);
				
		// Добавляем служебное сообщение в созданную заявку
		ТекстСообщения = СтрШаблон(Нстр("ru = 'Заявка № %1 была создана при разделении заявки № %2'"), 
								НоваяЗаявка.НомерСоглашенияОПоставке, 
								ТекущееСоглашениеОПоставке.НомерСоглашенияОПоставке);
		РегистрыСведений.Scan_Сообщения.ЗаписатьСообщение(НоваяЗаявка.Ссылка, ТекущийПользователь,, ТекстСообщения); 
		
		// Создаем новые заявки на отгрузку для продуктов, у которых были заявки на отгрузку
		Если НЕ ЗначениеЗаполнено(ЗаявкиНаОтгрузку) Тогда
			Продолжить;
		КонецЕсли;	
				
		Для Каждого Строка Из ЗаявкиНаОтгрузку Цикл
			НомераСозданныхЗаявокНаОтгрузку = Новый Массив;
			НомераПродуктов = Новый Массив;
			
			Отбор = Новый Структура("ЗаявкаНаОтгрузку", Строка.ЗаявкаНаОтгрузку);
			СтрокиПоЗаявкеНаОтгрузку = ЗаявкиНаОтгрузкуПереносимыхПродуктов.НайтиСтроки(Отбор);  
			
			ПродуктыЗаявкиНаОтгрузку = Новый Массив;
			Для Каждого СтрокаПоЗаявкеНаОтгрузку Из СтрокиПоЗаявкеНаОтгрузку Цикл
				Отбор = Новый Структура("Продукт", СтрокаПоЗаявкеНаОтгрузку.Продукт);
				СтрокиЗаявкиНаСОП = ТаблицаПродуктовЗаявки.НайтиСтроки(Отбор);
				Если СтрокиЗаявкиНаСОП.Количество() > 0 Тогда
					ПродуктыЗаявкиНаОтгрузку.Добавить(СтрокаПоЗаявкеНаОтгрузку.Продукт);
					НомераПродуктов.Добавить(СтрокаПоЗаявкеНаОтгрузку.Продукт.НомерИзделия);
				КонецЕсли;	
			КонецЦикла;	
			
			ЗаявкаНаОтгрузку = СоздатьЗаявкуНаОтгрузку(ПродуктыЗаявкиНаОтгрузку, Строка.ЗаявкаНаОтгрузку, Строка.Статус, НоваяЗаявка.Ссылка);
			
			Если НЕ ЗаявкаНаОтгрузку.Пустая() Тогда
				
				ТекстСообщения = СтрШаблон(Нстр("ru = 'Заявка на отгрузку № %1 была автоматически создана на основании заявки на отгрузку № %2'"), 
								ЗаявкаНаОтгрузку.Номер, 
								Строка.ЗаявкаНаОтгрузку.Номер);
				РегистрыСведений.Scan_Сообщения.ЗаписатьСообщение(ЗаявкаНаОтгрузку, ТекущийПользователь,, ТекстСообщения);	
				
				НомераСозданныхЗаявокНаОтгрузку.Добавить(ЗаявкаНаОтгрузку.Номер);
			КонецЕсли;	
			
			Если НомераСозданныхЗаявокНаОтгрузку.Количество() > 0 Тогда
				Если НомераПродуктов.Количество() = 1 Тогда
					ТекстСообщения = СтрШаблон(Нстр("ru = 'Из заявки на отгрузку продукт № %1 был перенесен в автоматически созданную заявку на отгрузку № %2'"),
											НомераПродуктов[0],
											СтрСоединить(НомераСозданныхЗаявок, ", "));	
					
				Иначе	
					ТекстСообщения = СтрШаблон(Нстр("ru = 'Из заявки на отгрузку продукты № %1 были перенесены в автоматически созданную заявку на отгрузку № %2'"),
												СтрСоединить(НомераПродуктов, ", "),
												СтрСоединить(НомераСозданныхЗаявок, ", "));
											
				КонецЕсли;							
				РегистрыСведений.Scan_Сообщения.ЗаписатьСообщение(Строка.ЗаявкаНаОтгрузку, ТекущийПользователь,, ТекстСообщения);	
			КонецЕсли;	
			
		КонецЦикла;	
								
	КонецЦикла;	
	
	// Добавляем служебное сообщение в разделяемую заявку
	Если НомераСозданныхЗаявок.Количество() > 0 Тогда
		
		ТаблицаИзделий = ПолучитьТаблицуПродуктовОбработки("ПродуктыКПереносу");
		ОбработатьДобавленныеПродукты(ТаблицаИзделий, ТаблицаИзделийСоглашения, НоваяЗаявка);
		ОбработатьПродуктыТекущейВерсии(НоваяЗаявка, ТаблицаИзделий, ТаблицаИзделийСоглашения);
		
		//Изменим, при необходимости, в СУ статус на "Одобрено, есть в СОП" или "Одобрено, нет в СОП"
		Справочники.Scan_СпециальныеУсловия.ОбновитьСУ(ТаблицаИзделийСоглашения, ТаблицаИзделий);
		
		ТекстСообщения = СтрШаблон(Нстр("ru = 'Заявка № %1 была разделена на заявки %2'"), 
								ТекущееСоглашениеОПоставке.НомерСоглашенияОПоставке,
								СтрСоединить(НомераСозданныхЗаявок, ", "));
		РегистрыСведений.Scan_Сообщения.ЗаписатьСообщение(НовоеСоглашениеОПоставке, ТекущийПользователь,, ТекстСообщения);
		
	КонецЕсли;	
	
	
КонецПроцедуры //rarus vikhle 06.10.2021 mt 18076 ---	

&НаСервере
Функция СоздатьЗаявкуНаОтгрузку(Продукты, ИсходнаяЗаявкаНаОтгрузку, ИсходныйСтатус, ЗаявкаНаСОП) //rarus vikhle 08.10.2021 mt 18076 +++
	
	ЗаявкаНаОтгрузкуСсылка = Документы.Scan_ЗаявкаНаОтгрузку.ПустаяСсылка();
	
	ЗаявкаНаОтгрузкуОбъект = Документы.Scan_ЗаявкаНаОтгрузку.СоздатьДокумент();
	ЗаявкаНаОтгрузкуОбъект.Заполнить(ИсходнаяЗаявкаНаОтгрузку);
	
	Если ИсходнаяЗаявкаНаОтгрузку.Статус = Справочники.Scan_СтатусыЗаявокНаОтгрузку.Исполнена 
		ИЛИ ИсходнаяЗаявкаНаОтгрузку.Статус = Справочники.Scan_СтатусыЗаявокНаОтгрузку.ЧастичноИсполнена Тогда
		ЗаявкаНаОтгрузкуОбъект.Статус = Справочники.Scan_СтатусыЗаявокНаОтгрузку.Одобрена;
	Иначе
		ЗаявкаНаОтгрузкуОбъект.Статус = ИсходныйСтатус;
	КонецЕсли;
	
	ЗаявкаНаОтгрузкуОбъект.СоглашениеОПоставке		= ЗаявкаНаСОП;
	ЗаявкаНаОтгрузкуОбъект.ИсходнаяЗаявкаНаОтгрузку = ИсходнаяЗаявкаНаОтгрузку;
	Для Каждого Продукт Из Продукты Цикл
		СтрокаТЧ = ЗаявкаНаОтгрузкуОбъект.Продукты.Добавить();
		СтрокаТЧ.Продукт = Продукт;
	КонецЦикла;	
	
	Попытка
		ЗаявкаНаОтгрузкуОбъект.Записать();
		ВывестиСообщениеПол(Нстр("ru = 'Создана заявка на отгрузку № %1'"),,,,, ЗаявкаНаОтгрузкуОбъект.Номер);
		ЗаявкаНаОтгрузкуСсылка = ЗаявкаНаОтгрузкуОбъект.Ссылка; 
	Исключение
		ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при создании заявки на отгрузку №. %1'"),,,,, ЗаявкаНаОтгрузкуОбъект.Номер);
		ЗаписьЖурналаРегистрации(Нстр("ru = 'Создание заявки на отгрузку'", ОбщегоНазначения.КодОсновногоЯзыка()), //rarus vikhle 15.10.2021 АПК + КодОсновногоЯзыка 
								УровеньЖурналаРегистрации.Ошибка,,,
								Нстр("ru = 'Произошла ошибка при создании заявки на отгрузку №.'" + ЗаявкаНаОтгрузкуОбъект.Номер) +  ОписаниеОшибки()); 
	КонецПопытки;							
	
	Возврат ЗаявкаНаОтгрузкуСсылка; 
	
КонецФункции //rarus vikhle 08.10.2021 mt 18076 ---

&НаСервере
Функция ПолучитьУсловияОплатыНовойЗаявки(ТаблицаПродуктов, СопНовойЗаявки) //rarus vikhle 05.10.2021 mt 18076 +++
	
	УсловияОплатыНовойЗаявки = РеквизитФормыВЗначение("УсловияОплаты").СкопироватьКолонки();
	СгруппированныеУсловия 	 = Справочники.Scan_СоглашенияОПоставке.СгруппированныеУсловияОплаты(ТекущееСоглашениеОПоставке.УсловияОплаты.Выгрузить()); //rarus vikhle 22.11.2021 АПК исправил опечатку
	
	ДатаНачалаДоговора = СопНовойЗаявки.ДатаНачала;
	
	Для Каждого СтрокаТаблицы Из ТаблицаПродуктов Цикл
		
		Для Каждого СтрокаУсловий Из СгруппированныеУсловия Цикл
			НоваяСтрока = УсловияОплатыНовойЗаявки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУсловий);
			НоваяСтрока.Сумма = НоваяСтрока.ПроцентОплаты / 100 * СтрокаТаблицы.ИтоговаяСумма;
			НоваяСтрока.Продукт = СтрокаТаблицы.Продукт;
			
			Если НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора И НЕ СопНовойЗаявки.Пустая() Тогда  
				НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаНачалаДоговора,НоваяСтрока.СрокОплатыАванса);
			ИначеЕсли НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыОтгрузкиDDS И НЕ СтрокаТаблицы.DDS = Дата(1,1,1) Тогда
				НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(НачалоДня(СтрокаТаблицы.DDS), НоваяСтрока.СрокОплатыАванса); 
			ИначеЕсли НоваяСтрока.РасчетДатыОплаты = Перечисления.Scan_ВидыРасчетаДатыОплаты.ДоДатыОтгрузкиDDS И НЕ СтрокаТаблицы.DDS = Дата(1,1,1) Тогда
				НоваяСтрока.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ВычестьРабочиеДни(НачалоДня(СтрокаТаблицы.DDS), НоваяСтрока.СрокОплатыАванса); 	
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат УсловияОплатыНовойЗаявки;
	
КонецФункции //rarus vikhle 05.10.2021 mt 18076 ---

&НаСервере
Функция ПолучитьГрафикПлатежейНовойЗаявки(УсловияОплатыТЗ) //rarus vikhle 05.10.2021 mt 18076 +++
	
	ГрафикПлатежейТЗ = РеквизитФормыВЗначение("ГрафикПлатежей").СкопироватьКолонки();
	
	Для Каждого СтрокаУсловий Из УсловияОплатыТЗ Цикл
		нСтрокаГрафика 				= ГрафикПлатежейТЗ.Добавить();
		нСтрокаГрафика.ВидОплаты 	= СтрокаУсловий.ВидОплаты;
		нСтрокаГрафика.ДатаПлатежа	= СтрокаУсловий.КрайняяДатаОплаты;
		нСтрокаГрафика.Продукт		= СтрокаУсловий.Продукт;
		нСтрокаГрафика.Сумма		= СтрокаУсловий.Сумма;
	КонецЦикла;
	
	Возврат ГрафикПлатежейТЗ;
	
КонецФункции //rarus vikhle 05.10.2021 mt 18076 ---

&НаСервере
Функция СтатусНовойЗаявки(НеобходимоСоздатьСОПВ1БД) //rarus vikhle 05.10.2021 mt 18076 +++
	
	Если НЕ НовоеСоглашениеОПоставке.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично
		И НЕ НовоеСоглашениеОПоставке.Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Исполнен Тогда //rarus vikhle 13.10.2021 mt 18076
		Возврат НовоеСоглашениеОПоставке.Статус;
	//ИначеЕсли ЗначениеЗаполнено(НовоеСоглашениеОПоставке.Договор.IDExternalSystem) Тогда 
	ИначеЕсли НеобходимоСоздатьСОПВ1БД Тогда //rarus vikhle 13.10.2021 mt 18076
		Возврат Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Оформлен;
	Иначе 
		Возврат Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НачатоОформлениеСОП; 	
	КонецЕсли;	
	
КонецФункции //rarus vikhle 05.10.2021 mt 18076 ---	

&НаСервере
Процедура ОбновитьНомераЗаявок() //rarus vikhle 12.10.2021 mt 18076 +++
	
	Если ПродуктыКПереносу.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	// Получаем ТЗ с отсортированными номерами заявок
	ПродуктыКПереносуТЗ = РеквизитФормыВЗначение("ПродуктыКПереносу");
	ПродуктыКПереносуТЗ.Свернуть("Заявка");
	ПродуктыКПереносуТЗ.Сортировать("Заявка");
		
	// Заполняем соответствие текущих номеров и новых по порядку
	СоответствиеНомеров = Новый Соответствие;
		
	ТекНомер = 0;
	Для Каждого Строка Из ПродуктыКПереносуТЗ Цикл 
		ТекНомер = ТекНомер + 1; 
		СоответствиеНомеров.Вставить(Строка.Заявка, ТекНомер);
	КонецЦикла;	
	
	// Перезаполняем номера заявок по порядку в таблице
	Для Каждого Строка Из ПродуктыКПереносу Цикл
		Строка.Заявка = СоответствиеНомеров[Строка.Заявка];	
	КонецЦикла;	
	
	// Обновляем список выбора в колонке "Заявка"
	СписокВыбора	= Элементы.ПродуктыКПереносуЗаявка.СписокВыбора; 
	СписокНомеров	= Новый СписокЗначений;
	
	Для Каждого Строка Из СоответствиеНомеров Цикл
		СписокНомеров.Добавить(Строка.Значение);
	КонецЦикла;	
	
	СписокНомеров.СортироватьПоЗначению();
	МассивНомеров	= СписокНомеров.ВыгрузитьЗначения();
	МаксНомер		= МассивНомеров[МассивНомеров.ВГраница()];
	
	Отбор = Новый Структура("Заявка", МаксНомер);
	СтрокиСМаксНомером = ПродуктыКПереносу.НайтиСтроки(Отбор);
		
	Если СтрокиСМаксНомером.Количество() > 1 И МассивНомеров.Найти(МаксНомер + 1) = Неопределено Тогда
		МассивНомеров.Добавить(МаксНомер + 1);	
	КонецЕсли; 
		
	СписокВыбора.ЗагрузитьЗначения(МассивНомеров);
	
КонецПроцедуры //rarus vikhle 12.10.2021 mt 18076	

&НаСервере
Процедура ЗаполнитьСписокВыбораНомераЗаявки(); //rarus vikhle 13.10.2021 mt 18076 +++
	
	СписокВыбора	 = Элементы.ПродуктыКПереносуЗаявка.СписокВыбора;
	КоличествоЗаявок = ОбщегоНазначения.ВыгрузитьКолонку(ПродуктыКПереносу, "Заявка", Истина).Количество();
	МассивНомеров	 = Новый Массив; 
	ТекНомер		 = 0;
		
	Пока ТекНомер <= КоличествоЗаявок Цикл
		ТекНомер = ТекНомер + 1;
		МассивНомеров.Добавить(ТекНомер);	
	КонецЦикла;	
	
	Отбор = Новый Структура("Заявка", КоличествоЗаявок);
	СтрокиСМаксНомером = ПродуктыКПереносу.НайтиСтроки(Отбор);
		
	Если СтрокиСМаксНомером.Количество() > 1 И МассивНомеров.Найти(КоличествоЗаявок + 1) = Неопределено Тогда
		МассивНомеров.Добавить(КоличествоЗаявок + 1);	
	КонецЕсли;
	
	СписокВыбора.ЗагрузитьЗначения(МассивНомеров);
	
КонецПроцедуры //rarus vikhle 13.10.2021 mt 18076 ---	

&НаСервере
Процедура СоздатьДокументыПлановыхЦен(ТаблицаПродуктов, Заявка) //rarus vikhle 14.10.2021 m 18292 +++ //rarus vikhle 02.11.2021 m 18502 убрал параметр РассчитатьТаблицуЦен
	
	МассивПродуктов	= ТаблицаПродуктов.ВыгрузитьКолонку("Продукт");
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияТипаИзМассива(МассивПродуктов, Тип("СправочникСсылка.Scan_ДрафтыПродуктов"));
	ДокументыПродуктов = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьДокументыУстановкиЦенПоМассивуПродуктов(МассивПродуктов);
	
	Для Каждого СтрокаТаблицы Из ТаблицаПродуктов Цикл
		
		ДокументЦенПродукта = ДокументыПродуктов[СтрокаТаблицы.Продукт];
		
		//rarus vikhle 02.11.2021 m 18502 +++
		ТабРучныхСоставляющих = ЗаполнитьТаблицуСоставляющих(СтрокаТаблицы, Заявка, Пользователи.ТекущийПользователь(), ДокументЦенПродукта);
		//Если РассчитатьТаблицуЦен Тогда
		//	ТабРучныхСоставляющих = ЗаполнитьТаблицуСоставляющих(СтрокаТаблицы, Заявка, Пользователи.ТекущийПользователь(), ДокументЦенПродукта);		
		//Иначе
		//	ТабРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(СтрокаТаблицы.Продукт, ДокументЦенПродукта);
		//КонецЕсли;	
		//rarus vikhle 02.11.2021 m 18502 ---
		
		// Отменяем текущий документ цен и создаем новый
		//Если ДокументЦенПродукта <> Неопределено Тогда
		Если ЗначениеЗаполнено(ДокументЦенПродукта) Тогда //rarus vikhle 22.10.2021 m 18292
			Документы.Scan_УстановкаПлановыхЦенПродукта.ОтменитьДокументУстановкиЦен(ДокументЦенПродукта);
		КонецЕсли;	
		
		ДокументУстановкиЦен = Документы.Scan_УстановкаПлановыхЦенПродукта.СоздатьСкорректироватьДокументУстановкиЦен(СтрокаТаблицы.Продукт, 
																		ТабРучныхСоставляющих, 
																		Заявка,
																		СтрокаТаблицы.СпециальныеУсловия);	
		
		Если ДокументУстановкиЦен = Неопределено Тогда
			ВывестиСообщениеПол(НСтр("ru = 'Ошибка при создании документа установки плановых цен продукта %1: %2'"),,,,,
								СтрокаТаблицы.Продукт, ОписаниеОшибки());				
		Иначе
			ВывестиСообщениеПол(НСтр("ru = 'Успешно создан документ установки плановых цен для продукта %1.'"),,,,,
								СтрокаТаблицы.Продукт);						
		КонецЕсли;
																															
	КонецЦикла;
	
	
КонецПроцедуры //rarus vikhle 14.10.2021 m 18292

&НаСервере
Процедура СтатусНовойВерсииЗаявкиПриИзмененииНаСервере() //rarus vikhle 21.10.2021 m 18076 +++
	
	ЗначениеДаты = ?(СтатусНовойВерсииЗаявки.Пустая(), Дата(1,1,1), ТекущаяДатаСеанса());
	ЗаполнитьDDДляБУИАвтобусов(ЗначениеДаты);
	УстановитьДатуДоговораВУсловиях(ЗначениеДаты);
	
КонецПроцедуры //rarus vikhle 21.10.2021 m 18076 ---	

&НаСервере
Процедура УстановитьДатуДоговораВУсловиях(ДатаДоговора) //rarus vikhle 21.10.2021 m 18076 +++
	
	СтруктураОтбора = Новый Структура("РасчетДатыОплаты", Перечисления.Scan_ВидыРасчетаДатыОплаты.ОтДатыДоговора);
	СтрокиТЧ		= УсловияОплаты.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
		Если НЕ ДатаДоговора = Дата(1,1,1) Тогда
			СтрокаТЧ.КрайняяДатаОплаты = Scan_ОбщегоНазначенияСервер.ДобавитьРабочиеДни(ДатаДоговора, СтрокаТЧ.СрокОплатыАванса); 
		Иначе
			СтрокаТЧ.КрайняяДатаОплаты = ДатаДоговора;	
		КонецЕсли;	
	КонецЦикла;	
		
	Если СтрокиТЧ.Количество() > 0 Тогда
		ОбновитьГрафикПлатежей();
		ВывестиСообщениеПол(Нстр("ru = 'В условиях оплаты были скорректированы даты в строках с расчетом даты оплаты ""От даты договора"". Обновлен график платежей.'"));
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 21.10.2021 m 18076 ---

&НаСервере
Процедура ЗаполнитьDDДляБУИАвтобусов(ДатаDD) //rarus vikhle 21.10.2021 m 18076 +++
	
	ВидПродуктаАвтобус = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаАвтобус");
	СписокПродуктовТЗ  = РеквизитФормыВЗначение("СписокПродуктов");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(СписокПродуктов.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
	               |ПОМЕСТИТЬ СписокПродуктов
	               |ИЗ
	               |	&СписокПродуктов КАК СписокПродуктов
	               |ГДЕ
	               |	СписокПродуктов.Продукт ССЫЛКА Справочник.Scan_Изделия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СписокПродуктов.Продукт КАК Продукт
	               |ИЗ
	               |	СписокПродуктов КАК СписокПродуктов
	               |ГДЕ
	               |	(СписокПродуктов.Продукт.БУ
	               |				И &ЗаявкаНаБУПродукты
	               |			ИЛИ СписокПродуктов.Продукт.ТипПродукта.ВидПродукта = &Автобусы)";
	Запрос.УстановитьПараметр("СписокПродуктов", СписокПродуктовТЗ);
	Запрос.УстановитьПараметр("Автобусы", ВидПродуктаАвтобус);
	Запрос.УстановитьПараметр("ЗаявкаНаБУПродукты", ЗаявкаНаБУПродукты);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаПродукта = СписокПродуктовТЗ.Найти(Выборка.Продукт, "Продукт");	
		
		Если НЕ СтрокаПродукта = Неопределено Тогда
			СтрокаПродукта.DD = ДатаDD;
			
			Если ДатаDD = Дата(1,1,1) Тогда
				СтрокаПродукта.DDS = ДатаDD;
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(СписокПродуктовТЗ, "СписокПродуктов");
	
	Если Выборка.Количество() > 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Для продуктов БУ и продуктов с видом ""Автобусы"" были скорректированы значения в колонке ""DD""'"));
	КонецЕсли;	
		
КонецПроцедуры //rarus vikhle 21.10.2021 m 18076 ---	

&НаСервереБезКонтекста
Функция ПолучитьДатуСозданияПервойЗаявкиНаСОП(ЗаявкаНаСОПСсылка) // Rarus tenkam 19.11.2021 mantis 18486 +++
	
	СписокСвязанныхОбъектов = Scan_ВспомогательныеФункцииСервер.ПолучитьСтруктуруПодчиненности(ЗаявкаНаСОПСсылка, "Основание", Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий.Период) КАК ПервыйПериод
		|ИЗ
		|	РегистрСведений.Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий КАК Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий
		|ГДЕ
		|	Scan_ИсторияСтатусовСоглашенийОПоставкеИСпециальныхУсловий.ОбъектСтатуса В(&СписокСвязанныхОбъектов)";
	
	Запрос.УстановитьПараметр("СписокСвязанныхОбъектов", СписокСвязанныхОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат НачалоДня(ВыборкаДетальныеЗаписи.ПервыйПериод);	
	КонецЕсли;
		
	Возврат Дата(1,1,1);                                     	
КонецФункции  // Rarus tenkam 19.11.2021 mantis 18486 ---

//rarus vikhle 13.01.2021 m 18269 +++
//&НаСервереБезКонтекста
//Функция РолиИзменяющиеСебестоимость() //rarus vikhle 21.12.2021 m 18269 +++
//	
//	ИменаРолей = Новый Массив;
//	ИменаРолей.Добавить("Менеджер департамента продаж");
//	ИменаРолей.Добавить("Менеджер департамента продаж автобусов");
//	ИменаРолей.Добавить("Менеджер департамента продаж двигателей");
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	РолиИсполнителей.Ссылка КАК Ссылка
//	               |ИЗ
//	               |	Справочник.РолиИсполнителей КАК РолиИсполнителей
//	               |ГДЕ
//	               |	РолиИсполнителей.Наименование В(&ИменаРолей)";
//	Запрос.УстановитьПараметр("ИменаРолей", ИменаРолей);
//	Роли = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
//	
//	Возврат Роли;
//	
//КонецФункции //rarus vikhle 21.12.2021 m 18269 ---	
//rarus vikhle 13.01.2021 m 18269 ---

&НаСервере
Функция ЕстьУдаленныеПродукты() //rarus vikhle 04.03.2022 m 18956 +++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ТаблицаИзделийСоглашения.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
	               |ПОМЕСТИТЬ УдаленныеПродукты
	               |ИЗ
	               |	&ТаблицаИзделийСоглашения КАК ТаблицаИзделийСоглашения
	               |ГДЕ
	               |	НЕ ТаблицаИзделийСоглашения.Продукт В (&ТаблицаИзделийОбработки)
	               |	И ТаблицаИзделийСоглашения.Продукт ССЫЛКА Справочник.Scan_Изделия
	               |	И НЕ ТаблицаИзделийСоглашения.Продукт В (&ПродуктыКПереносу)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УдаленныеПродукты.Продукт КАК Продукт
	               |ИЗ
	               |	УдаленныеПродукты КАК УдаленныеПродукты";
	Запрос.УстановитьПараметр("ТаблицаИзделийСоглашения",	ТекущееСоглашениеОПоставке.СписокПродуктов.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаИзделийОбработки",	ПолучитьТаблицуПродуктовОбработки());
	Запрос.УстановитьПараметр("ПродуктыКПереносу", ОбщегоНазначения.ВыгрузитьКолонку(ПродуктыКПереносу, "Продукт")); 
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции //rarus vikhle 04.03.2022 m 18956 ---

&НаКлиенте
Процедура ПослеВопросаРезерва(Результат, ДопПараметры) Экспорт //rarus vikhle 04.03.2022 m 18956 +++ 
	
	ДополнительныеПараметры = Новый Структура;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДополнительныеПараметры.Вставить("ПереноситьВРезерв");					
	ИначеЕсли Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;	
	
	КорректировкиЗаявокНаОтгрузку = КорректировкиЗаявокНаОтгрузкуПоУдаляемымПродуктам();
	Если КорректировкиЗаявокНаОтгрузку <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("АдресКорректировокЗаявокНаОтгрузку", КорректировкиЗаявокНаОтгрузку.АдресКорректировок);
			
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьЗаполнениеНаСервереЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = '"+КорректировкиЗаявокНаОтгрузку.ТекстКорректировок+"'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьЗаполнениеНаСервереПродолжение(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры	//rarus vikhle 04.03.2022 m 18956 ---

#КонецОбласти

//vikhle 05.08.2020 mt 16181 ---

