//rarus tenkam 07.08.2017 mantis 10589 +++
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перегон = Scan_ПраваИНастройки.Scan_Право("ЛьготноеРасстояниеПриДоставке");
	ДатаУстановкиТарифов = ТекущаяДата();
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура МатрицаТарифовСтоимостьПриИзменении(Элемент)
	Элементы.МатрицаТарифов.ТекущиеДанные.ТарифУказанВручную = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДатаУстановкиТарифовПриИзменении(Элемент)
	Если МатрицаТарифов.Количество() <> 0 Тогда
		Элементы.ПредупреждениеДекорация.Видимость = Истина;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МестоПолученияПриИзменении(Элемент)
	Если МатрицаТарифов.Количество() <> 0 Тогда
		Элементы.ПредупреждениеДекорация.Видимость = Истина;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМатрицу(Команда)
		
	СообщениеОбОшибке = "";
	Если НЕ ЗначениеЗаполнено(МестоПолучения) Тогда
		СообщениеОбОшибке = СообщениеОбОшибке + " Поле 'Место получения' не заполнено." + Символы.ПС;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаУстановкиТарифов) Тогда
		СообщениеОбОшибке = СообщениеОбОшибке + " Поле 'Дата установки тарифов' не заполнено." + Символы.ПС;
	КонецЕсли;
	Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
		//rarus FominskiyAS 24.04.2019  mantis 14191 +++
		//Сообщить("Не удалось заполнить матрицу! По причине: " + Символы.ПС + СообщениеОбОшибке);
		Сообщить(НСтр("ru = 'Не удалось заполнить матрицу! По причине: '; en = 'Unable to complete the matrix! Because of: '") + Символы.ПС + СообщениеОбОшибке);
		//rarus FominskiyAS 24.04.2019  mantis 14191 ---  
		Возврат;
	КонецЕсли;
	Элементы.ПредупреждениеДекорация.Видимость = Ложь;
	ЗаполнитьМатрицуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМатрицуНаСервере()
		
	МатрицаТарифов.Очистить();
	Запрос = Новый Запрос;
	// rarus tenkam 27.09.2018 mantis 13597 +++
	//Запрос.Текст = "ВЫБРАТЬ
	//|	МАКСИМУМ(Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Период) КАК Период,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресПолучения,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресДоставки,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.ЛогистическийТип,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.КолеснаяФормула,
	//|	МАКСИМУМ(Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Стоимость1Км) КАК Стоимость1Км,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.СпособДоставки
	//|ПОМЕСТИТЬ АктуальныеМаксимальныеТарифыПеревозчика
	//|ИЗ
	//|	РегистрСведений.Scan_МатрицаТарифовПоДоставкеИзделий.СрезПоследних(&ДатаУстановкиТарифов, АдресПолучения = &МестоПолучения) КАК Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресДоставки,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.КолеснаяФормула,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.ЛогистическийТип,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресПолучения,
	//|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.СпособДоставки
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	АктуальныеМаксимальныеТарифыПеревозчика.Период КАК ДатаТарифаПеревозчика,
	//|	АктуальныеМаксимальныеТарифыПеревозчика.АдресПолучения,
	//|	АктуальныеМаксимальныеТарифыПеревозчика.АдресДоставки,
	//|	АктуальныеМаксимальныеТарифыПеревозчика.ЛогистическийТип,
	//|	АктуальныеМаксимальныеТарифыПеревозчика.КолеснаяФормула,
	//|	АктуальныеМаксимальныеТарифыПеревозчика.Стоимость1Км,
	//|	ЕСТЬNULL(Scan_РасстояниеМеждуАдресами.Расстояние, 0) КАК Расстояние,
	//|	АктуальныеМаксимальныеТарифыПеревозчика.СпособДоставки
	//|ИЗ
	//|	АктуальныеМаксимальныеТарифыПеревозчика КАК АктуальныеМаксимальныеТарифыПеревозчика
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_РасстояниеМеждуАдресами КАК Scan_РасстояниеМеждуАдресами
	//|		ПО АктуальныеМаксимальныеТарифыПеревозчика.АдресПолучения = Scan_РасстояниеМеждуАдресами.АдресПолучения
	//|			И АктуальныеМаксимальныеТарифыПеревозчика.АдресДоставки = Scan_РасстояниеМеждуАдресами.АдресДоставки";
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Период) КАК Период,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресПолучения КАК АдресПолучения,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресДоставки КАК АдресДоставки,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.ЛогистическийТип КАК ЛогистическийТип,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.КолеснаяФормула КАК КолеснаяФормула,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.СпособДоставки КАК СпособДоставки,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Контрагент КАК Контрагент
	               |ПОМЕСТИТЬ АктуальныеТарифыПеревозчиковМаксПериод
	               |ИЗ
	               |	РегистрСведений.Scan_МатрицаТарифовПоДоставкеИзделий.СрезПоследних(&ДатаУстановкиТарифов, АдресПолучения = &МестоПолучения) КАК Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресДоставки,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.КолеснаяФормула,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.ЛогистическийТип,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресПолучения,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.СпособДоставки,
	               |	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Контрагент
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Период,
	               |	АдресПолучения,
	               |	АдресДоставки,
	               |	ЛогистическийТип,
	               |	КолеснаяФормула,
	               |	СпособДоставки,
	               |	Контрагент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	АктуальныеТарифыПеревозчиковМаксПериод.Период КАК Период,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.АдресПолучения КАК АдресПолучения,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.АдресДоставки КАК АдресДоставки,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.ЛогистическийТип КАК ЛогистическийТип,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.КолеснаяФормула КАК КолеснаяФормула,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.СпособДоставки КАК СпособДоставки,
				   |	МАКСИМУМ(ЕСТЬNULL(Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Сумма, 0)) КАК Сумма,		// rarus tenkam 20.12.2018 mantis 13736 +
	               |	МАКСИМУМ(ЕСТЬNULL(Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Стоимость1Км, 0)) КАК Стоимость1Км
	               |ПОМЕСТИТЬ АктуальныеМаксимальныеТарифыПеревозчика2
	               |ИЗ
	               |	АктуальныеТарифыПеревозчиковМаксПериод КАК АктуальныеТарифыПеревозчиковМаксПериод
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_МатрицаТарифовПоДоставкеИзделий.СрезПоследних(&ДатаУстановкиТарифов, АдресПолучения = &МестоПолучения) КАК Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних
	               |		ПО АктуальныеТарифыПеревозчиковМаксПериод.Период = Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Период
	               |			И АктуальныеТарифыПеревозчиковМаксПериод.АдресПолучения = Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресПолучения
	               |			И АктуальныеТарифыПеревозчиковМаксПериод.АдресДоставки = Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.АдресДоставки
	               |			И АктуальныеТарифыПеревозчиковМаксПериод.ЛогистическийТип = Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.ЛогистическийТип
	               |			И АктуальныеТарифыПеревозчиковМаксПериод.КолеснаяФормула = Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.КолеснаяФормула
	               |			И АктуальныеТарифыПеревозчиковМаксПериод.СпособДоставки = Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.СпособДоставки
	               |			И АктуальныеТарифыПеревозчиковМаксПериод.Контрагент = Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Контрагент
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	АктуальныеТарифыПеревозчиковМаксПериод.ЛогистическийТип,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.АдресДоставки,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.АдресПолучения,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.Период,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.КолеснаяФормула,
	               |	АктуальныеТарифыПеревозчиковМаксПериод.СпособДоставки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(АктуальныеМаксимальныеТарифыПеревозчика2.Период) КАК ДатаТарифаПеревозчика,	// rarus tenkam 21.11.2018 mantis 13766 добавлен МАКСИМУМ +
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.АдресПолучения КАК АдресПолучения,
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.АдресДоставки КАК АдресДоставки,
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.ЛогистическийТип КАК ЛогистическийТип,
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.КолеснаяФормула КАК КолеснаяФормула,
	               |	МАКСИМУМ(АктуальныеМаксимальныеТарифыПеревозчика2.Стоимость1Км) КАК Стоимость1Км,		// rarus tenkam 21.11.2018 mantis 13766 добавлен МАКСИМУМ + 		
	               |	ЕСТЬNULL(Scan_РасстояниеМеждуАдресами.Расстояние, 0) КАК Расстояние,
				   |	МАКСИМУМ(АктуальныеМаксимальныеТарифыПеревозчика2.Сумма) КАК Сумма,						// rarus tenkam 21.11.2018 mantis 13736 +
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.СпособДоставки КАК СпособДоставки
	               |ИЗ
	               |	АктуальныеМаксимальныеТарифыПеревозчика2 КАК АктуальныеМаксимальныеТарифыПеревозчика2
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_РасстояниеМеждуАдресами КАК Scan_РасстояниеМеждуАдресами
	               |		ПО АктуальныеМаксимальныеТарифыПеревозчика2.АдресПолучения = Scan_РасстояниеМеждуАдресами.АдресПолучения
	               |			И АктуальныеМаксимальныеТарифыПеревозчика2.АдресДоставки = Scan_РасстояниеМеждуАдресами.АдресДоставки
	               |	// rarus tenkam 21.11.2018 mantis 13766 добавлен МАКСИМУМ +++
	               |СГРУППИРОВАТЬ ПО
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.АдресПолучения,
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.АдресДоставки,
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.ЛогистическийТип,
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.КолеснаяФормула,
	               |	АктуальныеМаксимальныеТарифыПеревозчика2.СпособДоставки,
	               |	ЕСТЬNULL(Scan_РасстояниеМеждуАдресами.Расстояние, 0)
	               |	// rarus tenkam 21.11.2018 mantis 13766 добавлен МАКСИМУМ ---
	               |УПОРЯДОЧИТЬ ПО
	               |	АдресПолучения,
	               |	АдресДоставки,
	               |	ЛогистическийТип,
	               |	КолеснаяФормула";
	// rarus tenkam 27.09.2018 mantis 13597 ---
	Запрос.УстановитьПараметр("МестоПолучения", МестоПолучения);
	Запрос.УстановитьПараметр("ДатаУстановкиТарифов", ДатаУстановкиТарифов);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТарифПолный = МатрицаТарифов.Добавить();
		ТарифПолный.УслугаПакета = Справочники.Scan_НоменклатураУслуг.ДоставкаПолная;
		ЗаполнитьЗначенияСвойств(ТарифПолный,ВыборкаДетальныеЗаписи);
		Если ВыборкаДетальныеЗаписи.Расстояние > 0 И ВыборкаДетальныеЗаписи.Стоимость1км > 0 Тогда
			// rarus tenkam 24.12.2018 mantis 13896 +++    		
			//ТарифПолный.Стоимость = Окр(ВыборкаДетальныеЗаписи.Расстояние * ВыборкаДетальныеЗаписи.Стоимость1км * 1.18,-2);				
			ТарифПолный.Стоимость = Окр(ВыборкаДетальныеЗаписи.Расстояние * ВыборкаДетальныеЗаписи.Стоимость1км * (1 + Справочники.Scan_СтавкиНДС.ОсновнаяСтавкаНДС.Ставка/100),-2);
			// rarus tenkam 24.12.2018 mantis 13896 ---	
		КонецЕсли;
		СтароеЗначение = РегистрыСведений.Scan_МатрицаТарифовДляДилеровПоДоставкеИзделий.ПолучитьПоследниеДанныеРегистра(ТарифПолный.УслугаПакета,ВыборкаДетальныеЗаписи.ЛогистическийТип,ВыборкаДетальныеЗаписи.СпособДоставки,
																						ВыборкаДетальныеЗаписи.КолеснаяФормула, ВыборкаДетальныеЗаписи.АдресПолучения, ВыборкаДетальныеЗаписи.АдресДоставки,ДатаУстановкиТарифов);
		Если СтароеЗначение.ТарифУказанВручную Тогда
			ТарифПолный.Стоимость = СтароеЗначение.Стоимость;
			ТарифПолный.ТарифУказанВручную = СтароеЗначение.ТарифУказанВручную;
		КонецЕсли;
		
		Если Перегон > 0 Тогда
			ТарифЛьготный = МатрицаТарифов.Добавить();
			ТарифЛьготный.УслугаПакета = Справочники.Scan_НоменклатураУслуг.ДоставкаЛьготная;
			ЗаполнитьЗначенияСвойств(ТарифЛьготный,ВыборкаДетальныеЗаписи);
			Если ВыборкаДетальныеЗаписи.Расстояние > 0 И ВыборкаДетальныеЗаписи.Стоимость1км > 0 И ВыборкаДетальныеЗаписи.Расстояние > Перегон Тогда
				// rarus tenkam 24.12.2018 mantis 13896 +++    		
				//ТарифЛьготный.Стоимость = Окр(((ВыборкаДетальныеЗаписи.Расстояние - Перегон) * ВыборкаДетальныеЗаписи.Стоимость1км * 1.18),-2); 				
				ТарифЛьготный.Стоимость = Окр(((ВыборкаДетальныеЗаписи.Расстояние - Перегон) * ВыборкаДетальныеЗаписи.Стоимость1км * (1 + Справочники.Scan_СтавкиНДС.ОсновнаяСтавкаНДС.Ставка/100)),-2);
				// rarus tenkam 24.12.2018 mantis 13896 ---
			КонецЕсли;	
			СтароеЗначение = РегистрыСведений.Scan_МатрицаТарифовДляДилеровПоДоставкеИзделий.ПолучитьПоследниеДанныеРегистра(ТарифЛьготный.УслугаПакета,ВыборкаДетальныеЗаписи.ЛогистическийТип,ВыборкаДетальныеЗаписи.СпособДоставки,
																						ВыборкаДетальныеЗаписи.КолеснаяФормула, ВыборкаДетальныеЗаписи.АдресПолучения, ВыборкаДетальныеЗаписи.АдресДоставки,ДатаУстановкиТарифов);
			Если СтароеЗначение.ТарифУказанВручную Тогда
				ТарифЛьготный.Стоимость = СтароеЗначение.Стоимость;
				ТарифЛьготный.ТарифУказанВручную = СтароеЗначение.ТарифУказанВручную;
			КонецЕсли; 			
		КонецЕсли;
		
		// rarus tenkam 20.12.2018 mantis 13736 +++
		ТарифЛьготныйПоСкидке = МатрицаТарифов.Добавить();
		ТарифЛьготныйПоСкидке.УслугаПакета = Справочники.Scan_НоменклатураУслуг.ДоставкаЛьготнаяПоСкидке;
		ЗаполнитьЗначенияСвойств(ТарифЛьготныйПоСкидке,ВыборкаДетальныеЗаписи);
		
		ЛьготаСканииРусь = Scan_Тарифы.ПолучитьЛьготуСканииРусь(ДатаУстановкиТарифов);
		
		Если ВыборкаДетальныеЗаписи.Сумма > 0 Тогда
			ТарифЛьготныйПоСкидке.Стоимость = Окр((ВыборкаДетальныеЗаписи.Сумма - ЛьготаСканииРусь) * (1 + Справочники.Scan_СтавкиНДС.ОсновнаяСтавкаНДС.Ставка / 100),-2);
		КонецЕсли;	
		СтароеЗначение = РегистрыСведений.Scan_МатрицаТарифовДляДилеровПоДоставкеИзделий.ПолучитьПоследниеДанныеРегистра(ТарифЛьготныйПоСкидке.УслугаПакета,ВыборкаДетальныеЗаписи.ЛогистическийТип,ВыборкаДетальныеЗаписи.СпособДоставки,
																						ВыборкаДетальныеЗаписи.КолеснаяФормула, ВыборкаДетальныеЗаписи.АдресПолучения, ВыборкаДетальныеЗаписи.АдресДоставки,ДатаУстановкиТарифов);
		Если СтароеЗначение.ТарифУказанВручную Тогда
			ТарифЛьготныйПоСкидке.Стоимость = СтароеЗначение.Стоимость;
			ТарифЛьготныйПоСкидке.ТарифУказанВручную = СтароеЗначение.ТарифУказанВручную;
		КонецЕсли;       		
		// rarus tenkam 20.12.2018 mantis 13726 ---
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьТарифы(Команда)
	Элементы.ПредупреждениеДекорация.Видимость = Ложь;
	ЗаписатьТарифыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТарифыНаСервере()
	ТаблицаТарифов = МатрицаТарифов.Выгрузить();
	ТекНомерСтроки = 1;
	ЗаписаноТарифов = 0;
	Для Каждого ТекТариф из ТаблицаТарифов Цикл
		Если ТекТариф.Стоимость > 0 Тогда
			
			//Чтение старого значения регистра
			СтруктураСведений = РегистрыСведений.Scan_МатрицаТарифовДляДилеровПоДоставкеИзделий.ПолучитьПоследниеДанныеРегистра(ТекТариф.УслугаПакета,ТекТариф.ЛогистическийТип,ТекТариф.СпособДоставки,ТекТариф.КолеснаяФормула,ТекТариф.АдресПолучения,ТекТариф.АдресДоставки,ДатаУстановкиТарифов);
			СтараяСтоимость = СтруктураСведений.Стоимость;
			Записывать = Ложь;
			
			//Введено значение, а старое отсутствует
			Если (ЗначениеЗаполнено(ТекТариф.Стоимость) И СтараяСтоимость = Неопределено) Тогда 
				Записывать = Истина; 
			КонецЕсли; 
			//Введено значение и было введено старое
			Если (ЗначениеЗаполнено(ТекТариф.Стоимость) И СтараяСтоимость <> Неопределено) Тогда
				//Значение изменилось
				Если ТекТариф.Стоимость <> СтараяСтоимость Тогда 
					Записывать = Истина; 
				КонецЕсли; 
			КонецЕсли; 
			Если Записывать Тогда
				Если СтараяСтоимость <> Неопределено Тогда
					Если СтруктураСведений.ТарифУказанВручную И НЕ ТекТариф.ТарифУказанВручную Тогда
						//тарифы указанные вручную не перезаписываем
						ТекНомерСтроки = ТекНомерСтроки + 1;
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				ЗаписьРегСведений = РегистрыСведений.Scan_МатрицаТарифовДляДилеровПоДоставкеИзделий.СоздатьМенеджерЗаписи();
				Если ТекТариф.ТарифУказанВручную Тогда
					ЗаписьРегСведений.Период 			= ДатаУстановкиТарифов;
				Иначе 
					ЗаписьРегСведений.Период 			= ТекТариф.ДатаТарифаПеревозчика;
				КонецЕсли;
				ЗаписьРегСведений.УслугаПакета 			= ТекТариф.УслугаПакета;
				ЗаписьРегСведений.АдресПолучения 		= ТекТариф.АдресПолучения;
				ЗаписьРегСведений.АдресДоставки 		= ТекТариф.АдресДоставки;
				ЗаписьРегСведений.КолеснаяФормула 		= ТекТариф.КолеснаяФормула;
				ЗаписьРегСведений.ЛогистическийТип 		= ТекТариф.ЛогистическийТип;
				ЗаписьРегСведений.СпособДоставки 		= ТекТариф.СпособДоставки;
				ЗаписьРегСведений.ТарифУказанВручную 	= ТекТариф.ТарифУказанВручную;
				ЗаписьРегСведений.Стоимость 			= ТекТариф.Стоимость;
				ЗаписьРегСведений.Пользователь 			= ПользователиКлиентСервер.ТекущийПользователь();
				Попытка
					ЗаписьРегСведений.Записать();
					ЗаписаноТарифов = ЗаписаноТарифов + 1;
				Исключение
					//rarus FominskiyAS 24.04.2019  mantis 14191 +++
					//Сообщить("Не удалось записать тариф в строке №" + ТекНомерСтроки);
					Сообщить(НСтр("ru = 'Не удалось записать тариф в строке №'; en = 'Could not write the tariff in line '") + ТекНомерСтроки);
					//rarus FominskiyAS 24.04.2019  mantis 14191 ---  
				КонецПопытки; 
			КонецЕсли; 
		КонецЕсли;
		ТекНомерСтроки = ТекНомерСтроки + 1;
	КонецЦикла;
	Если ЗаписаноТарифов = 0 Тогда
		ТекстСообщения = "Не записан ни один тариф.";
	Иначе
		ТекстСообщения = "Записано тарифов: " + ЗаписаноТарифов;
	КонецЕсли;
	//rarus FominskiyAS 24.04.2019  mantis 14191 +++
	//Сообщить("Выполнена запись тарифов в матрицу. " + ТекстСообщения);
	Сообщить(НСтр("ru = 'Выполнена запись тарифов в матрицу. '; en = 'Tariff is saved in the martix.'") + ТекстСообщения);
	//rarus FominskiyAS 24.04.2019  mantis 14191 ---  
КонецПроцедуры
//rarus tenkam 07.08.2017 mantis 10589 ---
