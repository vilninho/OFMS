//rarus vikhle 22.03.2021 mt 17479 +++
&НаКлиенте
Перем мКритерииПоискаПоКоридору;
&НаКлиенте
Перем мВыбранныхИД;
&НаКлиенте
Перем мВыбранныхЗаказов; //rarus vikhle 25.03.2021 mt 17479


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Элементы.ГруппаДействияИПоиск.Видимость			  	   = Ложь;
	Элементы.ГруппаДействияИПоиск_ЗаказыПродукты.Видимость = Ложь;
	
	КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа;
	ТумблерПоиск = "0";
	УправлениеДиалогом();
	
	БыстрыйДоступ = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ГрузовыеАвтомобили = Scan_ПраваИНастройки.Scan_Право("ВидПродуктаГрузовыеАвтомобили");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаписиПоOrderIntake, "Период", НачалоГода(ТекущаяДатаСеанса()), ВидСравненияКомпоновкиДанных.БольшеИлиРавно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор)); //rarus vikhle 05.04.2021 mt 17479 поменял отбор на начало года
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаписиПоOrderIntake, "ВидПродукта", ГрузовыеАвтомобили, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаписиПоOrderIntake, "БУ", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаписиПоOrderIntake, "Продукт.ЛокальныйСтатусПродукта", Справочники.Scan_ЛокальныеСтатусыПродуктов.DELETED, ВидСравненияКомпоновкиДанных.НеРавно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаписиПоOrderIntake, "Аренда", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	//Rarus bonmak 16.05.2022 19158 ++
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаписиПоOrderIntake, "ДемоИТест", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаписиПоOrderIntake, "Демо", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЗаписиПоOrderIntake, "Тест", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина,БыстрыйДоступ,Строка(Новый УникальныйИдентификатор));
	//Rarus bonmak 16.05.2022 19158 --
	Scan_СборСтатистики.Scan_ПриОткрытииОбработки(РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	мВыбранныхИД		= Новый Массив;
	мВыбранныхЗаказов	= Новый Массив; //rarus vikhle 25.03.2021 mt 17479
	ЗаписиПоOrderIntake.Параметры.УстановитьЗначениеПараметра("мВыбранныхИД",мВыбранныхИД);
	ЗаказыПродукты.Параметры.УстановитьЗначениеПараметра("мВыбранныхЗаказов",мВыбранныхЗаказов);//rarus vikhle 25.03.2021 mt 17479

	мКритерииПоискаПоКоридору = ПолучитьМассивПоКоридору();
	Элементы.ПолеОтбораПоПериоду.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	Элементы.ПолеОтбораПоПериоду_ЗаказыПродукты.СписокВыбора.ЗагрузитьЗначения(мКритерииПоискаПоКоридору);
	
	ОбновитьКоличествоЗаказовНаСервере();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЗаписиПоOrderIntakeВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	ТекущиеДанные 		 = Элементы.ЗаписиПоOrderIntake.ТекущиеДанные;
	ТекущаяСтрока		 = Элементы.ЗаписиПоOrderIntake.ТекущаяСтрока; 
	
	Если Поле = Элементы.ЗаписиПоOrderIntakeЗаказНаЗавод Тогда
		ИспользоватьНовуюФорму = Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовуюКарточкуЗаказаНаЗавод");
		НаименованиеФормы = ?(ИспользоватьНовуюФорму,"Справочник.Scan_ЗаказыНаЗавод.Форма.ФормаЭлементаНовая","Справочник.Scan_ЗаказыНаЗавод.Форма.ФормаЭлемента");
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.ЗаказНаЗавод);
		ОткрытьФорму(НаименованиеФормы,ПараметрыОткрытия);
	ИначеЕсли Поле = Элементы.ЗаписиПоOrderIntakeПродукт Тогда
		ИспользоватьНовуюФорму = Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовуюКарточкуПродукта");
		НаименованиеФормы = ?(ИспользоватьНовуюФорму,"Справочник.Scan_Изделия.Форма.ФормаЭлементаНовая","Справочник.Scan_Изделия.Форма.ФормаЭлемента");
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.Продукт);
		ОткрытьФорму(НаименованиеФормы,ПараметрыОткрытия);		
	ИначеЕсли Поле = Элементы.ЗаписиПоOrderIntakeФлаг Тогда
		ИдентификаторЗаписи = Элементы.ЗаписиПоOrderIntake.ТекущиеДанные.ИдентификаторЗаписи; 
		мИндекс = мВыбранныхИД.Найти(ИдентификаторЗаписи);
		Если мИндекс = Неопределено Тогда
			мВыбранныхИД.Добавить(ИдентификаторЗаписи);
		Иначе
			мВыбранныхИД.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхЗаказов_ДанныеOI = мВыбранныхИД.Количество();	
		ЗаписиПоOrderIntake.Параметры.УстановитьЗначениеПараметра("мВыбранныхИД", мВыбранныхИД);
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоискПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры

&НаКлиенте
Процедура КритерийПоискаПриИзменении(Элемент)
	
	ПолеВвода = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериодуПриИзменении(Элемент)
	
	ПолеС	= "";
	ПолеПо	= "";
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПродуктыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//rarus vikhle 25.03.2021 m 17479 +++
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.ЗаказыПродукты.ТекущиеДанные;
	
	Если Поле = Элементы.ЗаказыПродуктыФлаг Тогда
		Заказ = Элементы.ЗаказыПродукты.ТекущиеДанные.ЗаказНаЗавод; 
		мИндекс = мВыбранныхЗаказов.Найти(Заказ);
		Если мИндекс = Неопределено Тогда
			мВыбранныхЗаказов.Добавить(Заказ);
		Иначе
			мВыбранныхЗаказов.Удалить(мИндекс);
		КонецЕсли;
		КоличествоВыбранныхЗаказов_ЗаказыПродукты = мВыбранныхЗаказов.Количество();	
		ЗаказыПродукты.Параметры.УстановитьЗначениеПараметра("мВыбранныхЗаказов", мВыбранныхЗаказов);	
	ИначеЕсли Поле = Элементы.ЗаказыПродуктыЗаказНаЗавод И НЕ ТекущиеДанные.ЗаказНаЗавод.Пустая() Тогда
		ИспользоватьНовуюФорму = Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовуюКарточкуЗаказаНаЗавод");
		НаименованиеФормы = ?(ИспользоватьНовуюФорму,"Справочник.Scan_ЗаказыНаЗавод.Форма.ФормаЭлементаНовая","Справочник.Scan_ЗаказыНаЗавод.Форма.ФормаЭлемента");
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.ЗаказНаЗавод);
		ОткрытьФорму(НаименованиеФормы,ПараметрыОткрытия);		
	ИначеЕсли Поле = Элементы.ЗаказыПродуктыПродукт И НЕ ТекущиеДанные.Продукт.Пустая() Тогда
		ИспользоватьНовуюФорму = Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовуюКарточкуПродукта");
		НаименованиеФормы = ?(ИспользоватьНовуюФорму,"Справочник.Scan_Изделия.Форма.ФормаЭлементаНовая","Справочник.Scan_Изделия.Форма.ФормаЭлемента");
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.Продукт);
		ОткрытьФорму(НаименованиеФормы,ПараметрыОткрытия);		
	ИначеЕсли Поле = Элементы.ЗаказыПродуктыЗаявка И НЕ ТекущиеДанные.Заявка.Пустая() Тогда
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.Заявка);
		ОткрытьФорму("Справочник.Scan_СоглашенияОПоставке.Форма.ФормаЭлемента",ПараметрыОткрытия);	
	ИначеЕсли Поле = Элементы.ЗаказыПродуктыСОП И НЕ ТекущиеДанные.Договор.Пустая() Тогда
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.Договор);
		ОткрытьФорму("Справочник.Scan_ДоговорыВзаиморасчетов.Форма.ФормаЭлемента",ПараметрыОткрытия);	
	КонецЕсли;
	//rarus vikhle 25.03.2021 m 17479 ---
КонецПроцедуры

&НаКлиенте
Процедура ТумблерПоиск_ЗаказыПродуктыПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры

&НаКлиенте
Процедура КритерийПоиска_ЗаказыПродуктыПриИзменении(Элемент)
	
	ПолеВвода = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораПоПериоду_ЗаказыПродуктыПриИзменении(Элемент)
	
	ПолеС	= "";
	ПолеПо	= "";
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтключитьПоискПоКритериям(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	ОтключитьПоискПоКритериямНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	//rarus vikhle 25.03.2021 m 17479 +++
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake Тогда
		мВыбранныхИД.Очистить();
		ЗаписиПоOrderIntake.Параметры.УстановитьЗначениеПараметра("мВыбранныхИД",мВыбранныхИД);
		КоличествоВыбранныхЗаказов_ДанныеOI = 0;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗаказыИПродукты Тогда
		мВыбранныхЗаказов.Очистить();
		ЗаказыПродукты.Параметры.УстановитьЗначениеПараметра("мВыбранныхЗаказов",мВыбранныхЗаказов);
		КоличествоВыбранныхЗаказов_ЗаказыПродукты = 0;
    КонецЕсли;
	//rarus vikhle 25.03.2021 m 17479 ---
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТЗ = СписокВТЗнаСервере();
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake Тогда 
			Если мВыбранныхИД.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбранныхИД.Добавить(СтрокаТЗ);
			КонецЕсли;
		Иначе
			Если мВыбранныхЗаказов.Найти(СтрокаТЗ) = Неопределено Тогда
				мВыбранныхЗаказов.Добавить(СтрокаТЗ);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake Тогда
		КоличествоВыбранныхЗаказов_ДанныеOI = мВыбранныхИД.Количество();
		ЗаписиПоOrderIntake.Параметры.УстановитьЗначениеПараметра("мВыбранныхИД", мВыбранныхИД);
	Иначе
		КоличествоВыбранныхЗаказов_ЗаказыПродукты = мВыбранныхЗаказов.Количество();
		ЗаказыПродукты.Параметры.УстановитьЗначениеПараметра("мВыбранныхЗаказов", мВыбранныхЗаказов);	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИспользованиеВОтчетах(Команда)
	
	Если мВыбранныхИД.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны записи в списке.'"),ЭтотОбъект,"ЗаписиПоOrderIntake");
		Возврат;	
	КонецЕсли;	
	
	УстановитьИспользованиеВОтчетахНаСервере(мВыбранныхИД, ИспользоватьВОтчетах);
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_OrderIntake"));
	
	мВыбранныхИД.Очистить();
	ЗаписиПоOrderIntake.Параметры.УстановитьЗначениеПараметра("мВыбранныхИД",мВыбранныхИД);
	КоличествоВыбранныхЗаказов_ДанныеOI = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗапись(Команда)
	
	ОчиститьСообщения();
	
	Если ВидДаты.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнен вид даты.'"),,"ВидДаты");
		Возврат;
	ИначеЕсли мВыбранныхИД.Количество() = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны записи в списке.'"),ЭтотОбъект,"ЗаписиПоOrderIntake");
		Возврат;	
	ИначеЕсли НовоеЗначение = Дата(1,1,1) Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнено новое значение.'"),ЭтотОбъект,"НовоеЗначение");
		Возврат;	
	КонецЕсли;	
	
	АктуальныйВидДаты = ПолучитьОбщийВидДаты(); 
	Если АктуальныйВидДаты.Пустая() Тогда 	
		ВывестиСообщениеПол(Нстр("ru = 'У выделенных записей различается вид даты.'"),ЭтотОбъект,"ЗаписиПоOrderIntake");
		Возврат;
	ИначеЕсли НЕ АктуальныйВидДаты = ВидДаты Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Вид даты в поле ""Вид даты"" не совпадает с видом даты у выделенных записей.'"),ЭтотОбъект,"ЗаписиПоOrderIntake");
		Возврат;	
	КонецЕсли;
	
	Если ДатаЯвляетсяВыходным(НовоеЗначение) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьЗаписьПослеВопроса",ЭтотОбъект,Новый Структура("Команда",Команда));
		ПоказатьВопрос(ОписаниеОповещения,Нстр("ru = 'Введенное значение даты является выходним днем, продолжить?'"),РежимДиалогаВопрос.ДаНет);
	Иначе
		ИзменитьЗаписьПродолжение();	
	КонецЕсли;
		
	
КонецПроцедуры

&НаКлиенте
Процедура ОкПоискПоКритериям(Команда)
	
	ИспользоватьЧислоВместоСтроки = Ложь;
	
	Если Элементы.Страницы.ТекущаяСтраница = Неопределено Тогда
		Возврат;	
	КонецЕсли;	
	
	Если ТумблерПоиск = "0" Тогда 	
		Если НЕ ЗначениеЗаполнено(КритерийПоиска) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Если СокрЛП(ПолеВвода) = "" Тогда
			Сообщить(НСтр("ru = 'Список данных для поиска пустой!'; en = 'The search data list is empty!'"));
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПолеОтбораПоПериоду) Тогда
			Сообщить(НСтр("ru = 'Выберите критерий поиска!'; en = 'Select your search criteria!'"));
			Возврат;
		КонецЕсли;
		
		Попытка
			ЧислоПолеС = Число(ПолеС);
			ЧислоПолеПо = Число(ПолеПо);
			ИспользоватьЧислоВместоСтроки = Истина;
		Исключение
		КонецПопытки;
		
		Если ТипЗнч(ПолеПо)=ТипЗнч(ПолеС) И ПолеПо < ПолеС И НЕ ИспользоватьЧислоВместоСтроки Тогда
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
		ИначеЕсли ИспользоватьЧислоВместоСтроки Тогда 	
			Если ЧислоПолеПо < ЧислоПолеС Тогда
			Сообщить(НСтр("ru = 'Конечное значение коридора периода не может быть меньше начального!'; en = 'Final value cannot be lower that starting point of the period corridor!'"));
			Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	СнятьФлажки(Команды.СнятьФлажки);
	ОкПоискПоКритериямНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ДействияИПоиск(Команда)
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake Тогда
		Элементы.ГруппаДействияИПоиск.Видимость				= НЕ Элементы.ГруппаДействияИПоиск.Видимость;
		Элементы.ЗаписиПоOrderIntakeДействияИПоиск.Пометка	= Элементы.ГруппаДействияИПоиск.Видимость; 
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗаказыИПродукты Тогда //rarus vikhle 25.03.2021 mt 17479 +++	
		Элементы.ГруппаДействияИПоиск_ЗаказыПродукты.Видимость	= НЕ Элементы.ГруппаДействияИПоиск_ЗаказыПродукты.Видимость;
		Элементы.ЗаказыПродуктыДействияИПоиск.Пометка			= Элементы.ГруппаДействияИПоиск_ЗаказыПродукты.Видимость;	
	КонецЕсли; //rarus vikhle 25.03.2021 mt 17479 ---	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоЗаказов(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	ОбновитьКоличествоЗаказовНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВидДаты(Команда)
	
	ОчиститьСообщения();
	ВидДаты = ПредопределенноеЗначение("Перечисление.Scan_ДатыДляФормированияОтчетаOI.ПустаяСсылка");
	
	Если мВыбранныхИД = 0 Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны записи в списке.'"),ЭтотОбъект,"ЗаписиПоOrderIntake");
		Возврат;
	КонецЕсли;	
	
	ВидДаты = ПолучитьОбщийВидДаты();
	
	Если ВидДаты.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'У выделенных записей различаются виды дат'"));
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура Установить(Команда)
	//rarus vikhle 25.03.2021 mt 17479 +++
	ОчиститьСообщения();
	
	Если мВыбранныхЗаказов.Количество() = 0 Тогда	
		ВывестиСообщениеПол(Нстр("ru = 'Не выбраны заказы в списке.'"),,"ЗаказыПродукты");
		Возврат;		
	ИначеЕсли Период = Дата(1,1,1) Тогда		 
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнен период.'"),,"Период");
		Возврат;
	ИначеЕсли ВидДаты_ЗаказыПродукты.Пустая() Тогда
		ВывестиСообщениеПол(Нстр("ru = 'Не заполнен вид даты.'"),,"ВидДаты_ЗаказыПродукты");
		Возврат;
	КонецЕсли;
	
	Если ДатаЯвляетсяВыходным(Период) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьЗаписьПослеВопроса",ЭтотОбъект,Новый Структура("Команда",Команда));
		ПоказатьВопрос(ОписаниеОповещения,Нстр("ru = 'Введенное значение даты является выходним днем, продолжить?'"),РежимДиалогаВопрос.ДаНет);
	Иначе
		УстановитьЗаписьПродолжение();	
	КонецЕсли;	
	
	//rarus vikhle 25.03.2021 mt 17479 ---
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьЗаписьПродолжение()
	//rarus vikhle 25.03.2021 mt 17479 +++
	СозданыЗаписи = УстановитьНаСервере(мВыбранныхЗаказов, Период, ВидДаты_ЗаказыПродукты);
	Если СозданыЗаписи Тогда //rarus vikhle 08.09.2021 mt 18212
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_OrderIntake"));
		ВывестиСообщениеПол(Нстр("ru = 'Записи созданы.'"));
		
		СнятьФлажки(Команды.СнятьФлажки);	
	КонецЕсли;	
	
	
	//rarus vikhle 25.03.2021 mt 17479 ---
КонецПроцедуры	

&НаКлиенте
Процедура ИзменитьЗаписьПослеВопроса(Результат,ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да И ДопПараметры.Команда = Команды.ИзменитьЗапись Тогда
		ИзменитьЗаписьПродолжение();	
	ИначеЕсли Результат = КодВозвратаДиалога.Да И ДопПараметры.Команда = Команды.Установить Тогда
		УстановитьЗаписьПродолжение();	
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ИзменитьЗаписьПродолжение()
	
	ИзменитьЗаписьНаСервере(мВыбранныхИД,ВидДаты,НовоеЗначение);
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_OrderIntake"));
	
	мВыбранныхИД.Очистить();
	ЗаписиПоOrderIntake.Параметры.УстановитьЗначениеПараметра("мВыбранныхИД",мВыбранныхИД);
	КоличествоВыбранныхЗаказов_ДанныеOI = 0;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция УстановитьНаСервере(мВыбранныхЗаказов, Период, ВидДаты) //rarus vikhle 08.09.2021 mt 18212 переделал на функцию
	
	СозданыЗаписи = Ложь; //rarus vikhle 08.09.2021 mt 18212
	
	//rarus vikhle 08.09.2021 mt 18212 +++
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ КАК Заказ
	               |ИЗ
	               |	РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
	               |			,
	               |			Заказ В (&МассивЗаказов)
	               |				И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
	               |ГДЕ
	               |	ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) В (&ТипыЗаказаFirm)";
	ТипыЗаказаFirm = Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm();
	
	Запрос.УстановитьПараметр("МассивЗаказов",  мВыбранныхЗаказов);
	Запрос.УстановитьПараметр("ТипыЗаказаFirm", ТипыЗаказаFirm);
	
	ЗаказыFirm = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	//rarus vikhle 08.09.2021 mt 18212 ---
	
	//rarus vikhle 25.03.2021 mt 17479 +++
	Для Каждого Заказ Из мВыбранныхЗаказов Цикл
		
		Если ЗаказыFirm.Найти(Заказ) = Неопределено Тогда
			ВывестиСообщениеПол(Нстр("ru = 'У заказа %1 тип заказа отличается от Firm. Запись не добавлена в регистр Order Intake.'"),,,,,
								Заказ);
			Продолжить;					
		КонецЕсли;	
		
		МенеджерЗаписи				= РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ЗаказНаЗавод	= Заказ;
		МенеджерЗаписи.Период		= Период;
		МенеджерЗаписи.ВидДаты		= ВидДаты;
		МенеджерЗаписи.Пользователь = Пользователи.ТекущийПользователь();
		МенеджерЗаписи.ИспользоватьВОтчетах = Истина;
		МенеджерЗаписи.Записать();
		
		РегистрыСведений.Scan_OrderIntake.СоздатьЗаписьПоOI(МенеджерЗаписи);//rarus vikhle 26.03.2021 mt 17479
		
		СозданыЗаписи = Истина; //rarus vikhle 08.09.2021 mt 18212
	КонецЦикла;
	//rarus vikhle 25.03.2021 mt 17479 ---
	
	Возврат СозданыЗаписи; //rarus vikhle 08.09.2021 mt 18212
	
КонецФункции	
	
&НаКлиенте
Функция ПолучитьОбщийВидДаты()
	
	ОбщийВидДаты	  = ПредопределенноеЗначение("Перечисление.Scan_ДатыДляФормированияОтчетаOI.ПустаяСсылка");
	ВидДатыСовпадает  = Истина;
	ЭтоПерваяЗапись	  = Истина;
	ПредыдущийВидДаты = "";
	
	МассивСтруктурКлючей = ПолучитьЗаписиПоИД(мВыбранныхИД); 
	Для Каждого СтруктураКлюч Из МассивСтруктурКлючей Цикл
		ТекущийВидДаты = СтруктураКлюч.ВидДаты; 
		
		Если ЭтоПерваяЗапись Тогда
			ПредыдущийВидДаты = ТекущийВидДаты;
			ЭтоПерваяЗапись = Ложь;
		Иначе
			Если ТекущийВидДаты <> ПредыдущийВидДаты Тогда
				ВидДатыСовпадает = Ложь;
				Возврат ОбщийВидДаты; //пустую ссылку  
			Иначе
				ПредыдущийВидДаты = ТекущийВидДаты; 
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	ОбщийВидДаты = ТекущийВидДаты;
	
	Возврат ОбщийВидДаты;	
		
КонецФункции	

&НаСервере
Процедура ОкПоискПоКритериямНаСервере()
	
	Список = ?(Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake,ЗаписиПоOrderIntake,ЗаказыПродукты);
	
	Если ТумблерПоиск = "0" Тогда  
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолеВвода, Символы.ПС, Истина);
		МассивПодстрокБезИзменений = Новый Массив;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрокБезИзменений, МассивПодстрок, Истина);
		//преобразование массива, чтобы находить заказы по номеру без нулей
		Индекс = -1;
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (9 - КолВоЗнаковЧисло) Цикл  // 9-длина номера заказа  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;	
				КонецЕсли;
			КонецЦикла;	
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			Для Каждого ЭлементМассива Из МассивПодстрок Цикл
				Индекс = Индекс + 1;
				Если НЕ Лев(ЭлементМассива,1) = "0" Тогда
					Попытка
						ЧислоСтроки = Число(ЭлементМассива);
					Исключение
						Продолжить;
					КонецПопытки;	
					КолВоЗнаковЧисло = СтрДлина(ЧислоСтроки);
					Для нПрефикса = 0 По (7 - КолВоЗнаковЧисло) Цикл  // 7-длина номера шасси  
						ЭлементМассива = "0" + ЭлементМассива;
					КонецЦикла;
					МассивПодстрок[Индекс] = ЭлементМассива;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодстрок, МассивПодстрокБезИзменений, Истина);
		Если КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерЗаказа Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерИзделия Тогда
			ЛевоеЗначение = "Продукт.НомерИзделия";
		ИначеЕсли КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.НомерСоп Тогда
			ЛевоеЗначение = "СОП"
		КонецЕсли;
		
		ОбъектНастройки = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы; 
		ОбъектНастройки.Очистить();
				                                              
		НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.Использование  = Истина;
		НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
		НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НовыйОтбор.ПравоеЗначение = МассивПодстрок;
	Иначе
		ОбъектНастройки =  Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
		ОбъектНастройки.Очистить();
			
		Если ПолеОтбораПоПериоду = "№ Шасси" Тогда
			ЛевоеЗначение = "Продукт.НомерИзделия";
		ИначеЕсли ПолеОтбораПоПериоду = "№ Заказа" Тогда
			ЛевоеЗначение = "ЗаказНаЗавод.Наименование";
		ИначеЕсли ПолеОтбораПоПериоду = "№ СОП" Тогда 
			ЛевоеЗначение = "СОП";
		КонецЕсли;
		
		Если ПолеОтбораПоПериоду = "№ Шасси" ИЛИ
			ПолеОтбораПоПериоду = "№ Заказа" Тогда
						
			СообщениеОбОшибке = "";
			ОтборУстановлен = Scan_ОбщегоНазначенияКлиентСервер.УстановитьОтборДинамическогоСпискаПоНомеруОбъекта(Список, ЛевоеЗначение, ПолеС, ПолеПо,,СообщениеОбОшибке);
			Если НЕ ОтборУстановлен Тогда
				Сообщить(СообщениеОбОшибке);
			КонецЕсли;
		Иначе 
			//№ СОП
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеС; 	
			
			НовыйОтбор = ОбъектНастройки.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование  = Истина;
			НовыйОтбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
			НовыйОтбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			НовыйОтбор.ПравоеЗначение = ПолеПо;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтключитьПоискПоКритериямНаСервере()
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake Тогда
		ЗаписиПоOrderIntake.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();
	Иначе 
		ЗаказыПродукты.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Очистить();	
	КонецЕсли;	
		
	ПолеВвода	= "";
	ПолеС		= "";
	ПолеПо		= "";
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивПоКоридору();
	
	МассивПоКоридору = Новый Массив;
	МассивПоКоридору.Добавить("№ Заказа");
	МассивПоКоридору.Добавить("№ Шасси");
	МассивПоКоридору.Добавить("№ СОП");
		
	Возврат МассивПоКоридору;
	
КонецФункции	

&НаСервереБезКонтекста
Процедура ИзменитьЗаписьНаСервере(Знач МассивИД, ВидДаты, НовоеЗначение)
	
	МассивСтруктурКлючей = ПолучитьЗаписиПоИД(МассивИД); 
	Для Каждого СтруктураКлюч Из МассивСтруктурКлючей Цикл
		Если НЕ СтруктураКлюч.ВидДаты = ВидДаты Тогда
			Продолжить;
		КонецЕсли;	
		РегистрыСведений.Scan_OrderIntake.ИзменитьПериодЗаписи(СтруктураКлюч,ВидДаты,НовоеЗначение);	
	КонецЦикла;	
		
	ВывестиСообщениеПол(Нстр("ru = 'Записи изменены'"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьИспользованиеВОтчетахНаСервере(Знач МассивИД,ИспользоватьВОтчетах)
	
	МассивСтруктурКлючей = ПолучитьЗаписиПоИД(МассивИД);
	Для Каждого СтруктураКлюч ИЗ МассивСтруктурКлючей Цикл
		ЗаписьЗаписана = РегистрыСведений.Scan_OrderIntake.ЗаписатьИспользованиеВОтчетах(СтруктураКлюч,ИспользоватьВОтчетах);
	КонецЦикла;	
	ВывестиСообщениеПол(Нстр("ru = 'Записи изменены'"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗаписиПоИД(МассивИД)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_OrderIntake.Период КАК Период,
	               |	Scan_OrderIntake.ЗаказНаЗавод КАК ЗаказНаЗавод,
	               |	Scan_OrderIntake.ВидДаты КАК ВидДаты,
	               |	Scan_OrderIntake.ИспользоватьВОтчетах КАК ИспользоватьВОтчетах
	               |ИЗ
	               |	РегистрСведений.Scan_OrderIntake КАК Scan_OrderIntake
	               |ГДЕ
	               |	Scan_OrderIntake.ИдентификаторЗаписи В(&МассивИД)";
	Запрос.УстановитьПараметр("МассивИД",МассивИД);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Результат);
	
КонецФункции	

&НаСервереБезКонтекста
Функция ДатаЯвляетсяВыходным(ЗначениеДаты)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Год",         Год(ЗначениеДаты));
	Запрос.УстановитьПараметр("ДатаГрафика", ЗначениеДаты);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	КалендарныеГрафики.ДеньВключенВГрафик КАК ДеньВключенВГрафик
	|ИЗ
	|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	|ГДЕ
	|	КалендарныеГрафики.Год = &Год
	|	И КалендарныеГрафики.ДатаГрафика = &ДатаГрафика";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Не Выборка.ДеньВключенВГрафик;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
	
&НаСервере
Процедура УправлениеДиалогом()
	
	Если ТумблерПоиск = "0" Тогда
		Элементы.ГруппаОтборПоСписку.Видимость   = Истина;
		Элементы.ГруппаОтборПоКоридору.Видимость = Ложь;
		
		Элементы.ГруппаОтборПоСписку_ЗаказыПродукты.Видимость  = Истина;
		Элементы.ГруппаОтборПоКоридору_ЗаказыПродукты.Видимость = Ложь;
		
		ПолеС = "";
		ПолеПо = "";
		ПолеОтбораПоПериоду = ""
	Иначе
		Элементы.ГруппаОтборПоСписку.Видимость   = Ложь;
		Элементы.ГруппаОтборПоКоридору.Видимость = Истина;
		
		Элементы.ГруппаОтборПоСписку_ЗаказыПродукты.Видимость   = Ложь;
		Элементы.ГруппаОтборПоКоридору_ЗаказыПродукты.Видимость = Истина;
		
		ПолеВвода = "";
		КритерийПоиска = Перечисления.Scan_КритерииПоискаАРМ.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоЗаказовНаСервере()
	
	ТаблицаФормы = ?(Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake,Элементы.ЗаписиПоOrderIntake,Элементы.ЗаказыПродукты);
	
	Схема				= ТаблицаФормы.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки			= ТаблицаФормы.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета	= Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки		= КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если НЕ ТаблицаРезультат.Количество() = 0 Тогда
		ТаблицаРезультат.Свернуть("ЗаказНаЗавод");
		НайденнаяСтрока = ТаблицаРезультат.Найти(Неопределено, "ЗаказНаЗавод");
		Если НайденнаяСтрока <> Неопределено Тогда
			ТаблицаРезультат.Удалить(НайденнаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake Тогда 
		КоличествоЗаказовНаЗавод = ТаблицаРезультат.Количество();
		Элементы.ЗаписиПоOrderIntakeОбновитьКоличествоЗаказов.Заголовок = Нстр("ru = 'Количество заказов на завод: '") + КоличествоЗаказовНаЗавод;
	Иначе
		КоличествоЗаказовНаЗавод_ЗаказыПродукты = ТаблицаРезультат.Количество();
		Элементы.ЗаказыПродуктыОбновитьКоличествоЗаказов.Заголовок = Нстр("ru = 'Количество заказов на завод: '") + КоличествоЗаказовНаЗавод_ЗаказыПродукты;	
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Функция СписокВТЗнаСервере()
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеOrderIntake Тогда
		Список = Элементы.ЗаписиПоOrderIntake; 
	Иначе 
		Список = Элементы.ЗаказыПродукты;	
	КонецЕсли;	
	ТаблицаРезультат = ДинамическийСписокВТаблицуЗначений(Список);
		
	ИмяКолонки = ?(Список = Элементы.ЗаписиПоOrderIntake,"ИдентификаторЗаписи","ЗаказНаЗавод");
	Колонка = ТаблицаРезультат.ВыгрузитьКолонку(ИмяКолонки);
	Возврат Колонка;
	
КонецФункции	



//rarus vikhle 22.03.2021 mt 17479 ---

#КонецОбласти

