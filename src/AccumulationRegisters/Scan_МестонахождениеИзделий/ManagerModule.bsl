//rarus tenkam 05.10.2016 mantis 7183 ++
// Функция возвращает местонахождение изделия на указанную дату
Функция ПолучитьМестоположениеИзделия(ИзделиеСсылка, НаДату = Неопределено) Экспорт
	ТекДата = ?(ЗначениеЗаполнено(НаДату), НаДату, ТекущаяДата());
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделийОстатки.Изделие,
	               |	Scan_МестонахождениеИзделийОстатки.МестоХранения
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки(&ТекДата, Изделие = &ИзделиеСсылка) КАК Scan_МестонахождениеИзделийОстатки";
	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	Запрос.УстановитьПараметр("ИзделиеСсылка", ИзделиеСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.МестоХранения;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Функция возвращает местоположение и дату прихода изделия
Функция ПолучитьМестонахождениеИДатуПриходаИзделия(ИзделиеСсылка, НаДату = Неопределено) Экспорт
	Если НаДату = Неопределено ИЛИ НаДату > ТекущаяДата() Тогда
		НаДату = ТекущаяДата();
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделийОстатки.Изделие,
	               |	Scan_МестонахождениеИзделийОстатки.МестоХранения,
	               |	Scan_МестонахождениеИзделийОстатки.ДатаПрихода КАК ДатаПрихода
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки(&НаДату, Изделие = &ИзделиеСсылка) КАК Scan_МестонахождениеИзделийОстатки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаПрихода УБЫВ";	//rarus tenkam 09.03.2017 mantis 6897 +

	Запрос.УстановитьПараметр("ИзделиеСсылка", ИзделиеСсылка);
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() <> 0 Тогда
		Возврат Результат[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Функция возвращает последнюю дату прихода изделия на указанное место хранения
Функция ПолучитьДатуПриходаИзделия(Изделие, МестоХранения) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделий.ВидДвижения,
	               |	Scan_МестонахождениеИзделий.Изделие,
	               |	Scan_МестонахождениеИзделий.МестоХранения,
	               |	Scan_МестонахождениеИзделий.ДатаПрихода КАК ДатаПрихода,
	               |	Scan_МестонахождениеИзделий.ХозОперация
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий КАК Scan_МестонахождениеИзделий
	               |ГДЕ
	               |	Scan_МестонахождениеИзделий.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |	И Scan_МестонахождениеИзделий.Изделие = &Изделие
	               |	И Scan_МестонахождениеИзделий.МестоХранения = &МестоХранения
	               |	И (Scan_МестонахождениеИзделий.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ВводНачальныхОстатков)
	               |			ИЛИ Scan_МестонахождениеИзделий.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПоступлениеНаСклад))
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаПрихода УБЫВ";
	Запрос.УстановитьПараметр("Изделие", Изделие);
	Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ДатаПрихода;
	Иначе
		Возврат (Дата('00010101'));
	КонецЕсли;
КонецФункции
//rarus tenkam 05.10.2016 mantis 7183 --

//rarus tenkam 21.03.2017 mantis +++
Функция ПолучитьРегистраторовДвижений(Изделие) Экспорт
	МассивРегистраторов = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_МестонахождениеИзделий.Регистратор
	|ИЗ
	|	РегистрНакопления.Scan_МестонахождениеИзделий КАК Scan_МестонахождениеИзделий
	|ГДЕ
	|	Scan_МестонахождениеИзделий.Изделие = &Изделие
	|
	|СГРУППИРОВАТЬ ПО
	|	Scan_МестонахождениеИзделий.Регистратор";
	
	Запрос.УстановитьПараметр("Изделие", Изделие);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		МассивРегистраторов = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Регистратор");
	КонецЕсли;
	Возврат МассивРегистраторов;
		
КонецФункции

Функция ПолучитьКрайнююДатуПрихода(Изделие) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	// rarus tenkam 31.05.2019 mantis 14476 +++
	//"ВЫБРАТЬ ПЕРВЫЕ 1
	//|	Scan_МестонахождениеИзделийОстатки.Изделие,
	//|	Scan_МестонахождениеИзделийОстатки.ДатаПрихода КАК ДатаПрихода
	//|ИЗ
	//|	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки(, Изделие = &Изделие) КАК Scan_МестонахождениеИзделийОстатки
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДатаПрихода УБЫВ";
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Scan_МестонахождениеИзделий.Изделие КАК Изделие,
	|	Scan_МестонахождениеИзделий.ДатаПрихода КАК ДатаПрихода,
	|	Scan_МестонахождениеИзделий.ХозОперация КАК ХозОперация,
	|	Scan_МестонахождениеИзделий.Период КАК Период
	|ИЗ
	|	РегистрНакопления.Scan_МестонахождениеИзделий КАК Scan_МестонахождениеИзделий
	|ГДЕ
	|	Scan_МестонахождениеИзделий.Изделие = &Изделие
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПрихода УБЫВ,
	|	Период УБЫВ";
	// rarus tenkam 31.05.2019 mantis 14476 ---
	Запрос.УстановитьПараметр("Изделие", Изделие);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда	
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		// rarus tenkam 19.06.2019 mantis 14476 +++
		Если Выборка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.УбытиеИзУчета Тогда
			КрайняяДата = Выборка.Период;
		Иначе
		// rarus tenkam 19.06.2019 mantis 14476 ---
			КрайняяДата = Выборка.ДатаПрихода;
		КонецЕсли;	// rarus tenkam 19.06.2019 mantis 14476 +
		Возврат КрайняяДата;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеПоМестонахождениюИзделия(ИзделиеСсылка, НаДату = Неопределено, Регистратор = Неопределено) Экспорт
	Если НаДату = Неопределено ИЛИ НаДату > ТекущаяДата() Тогда
		НаДату = ТекущаяДата();
	КонецЕсли;
	
	// rarus tenkam 21.05.2018 mantis 13115 +++
	//ТекМомент = Новый МоментВремени(НаДату);   
	//
	//СтруктураОтбора = Новый Структура("Изделие", ИзделиеСсылка);
	//ОстаткиИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.Остатки(НаДату+1,СтруктураОтбора);
	//Если ОстаткиИзделия.Количество() = 0 Тогда
	//	Возврат Неопределено;
	//КонецЕсли;
	// rarus tenkam 21.05.2018 mantis 13115 ---
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Scan_МестонахождениеИзделий.МестоХранения КАК МестоХранения,
				   // rarus tenkam 21.05.2018 mantis 13115 +++
	               |	Scan_МестонахождениеИзделий.ВидДвижения КАК ВидДвижения,	
				   |	Scan_МестонахождениеИзделий.Период КАК Период,				
				   // rarus tenkam 21.05.2018 mantis 13115 ---
				   |	Scan_МестонахождениеИзделий.ДатаПрихода КАК ДатаПрихода,
	               |	Scan_МестонахождениеИзделий.Регистратор КАК Регистратор 	//rarus tenkam 07.11.2017 mantis 11665 для вывода в сообщение
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий КАК Scan_МестонахождениеИзделий
	               |ГДЕ
	               |	Scan_МестонахождениеИзделий.Изделие = &ИзделиеСсылка
	              // |	И Scan_МестонахождениеИзделий.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)		//
	               |	И Scan_МестонахождениеИзделий.ДатаПрихода < &НаДату
				   |	//УсловиеИсключенияРегистратора			//rarus tenkam 08.11.2017 mantis 11665 затерлось при добавлении регистратора
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаПрихода УБЫВ,
				   |	Период УБЫВ"; 		// rarus tenkam 21.05.2018 mantis 13115 +
				   //|    Scan_МестонахождениеИзделий.НомерСтроки УБЫВ"; // rarus bonmak 06.04.2021 17606
	Если Регистратор <> Неопределено И ЗначениеЗаполнено(Регистратор) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УсловиеИсключенияРегистратора","И Scan_МестонахождениеИзделий.Регистратор <> &Регистратор");
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИзделиеСсылка", ИзделиеСсылка); 
	Запрос.УстановитьПараметр("НаДату", НаДату + 1);		//rarus tenkam 31.10.2017 mantis 11665 добавим 1 сек.
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() <> 0 Тогда
		// rarus tenkam 21.05.2018 mantis 13115 +++
		Если Результат[0].ВидДвижения = ВидДвиженияНакопления.Расход Тогда
			Возврат Неопределено;
		Иначе
		// rarus tenkam 21.05.2018 mantis 13115 ---
		
			Возврат Результат[0];
		КонецЕсли;		// rarus tenkam 21.05.2018 mantis 13115 + 	
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции
//rarus tenkam 21.03.2017 mantis ---

//rarus tenkam 05.05.2017 mantis 9423 +++
Функция ПолучитьКоличествоСвободныхМест(МестоХранения, ДатаДоставки, КоличествоПоЗаказу = 0, ДокументСсылка = Неопределено, НаДату = Неопределено) Экспорт
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДата();
	КонецЕсли;
	
	Факт = ПолучитьФактическоеКоличествоИзделий(НаДату, МестоХранения);
	ПриходРасход = ПолучитьПланируемоеКоличествоИзделий(ДатаДоставки, МестоХранения, ДокументСсылка);
	
	ПланНаличие = Факт + ПриходРасход + КоличествоПоЗаказу;
	
	СогласованноеКоличество = МестоХранения.КоличествоПродуктовНаПлощадке;
	
	Результат = СогласованноеКоличество - ПланНаличие;
	Возврат Результат;
	
КонецФункции

Функция ПолучитьФактическоеКоличествоИзделий(НаДату, МестоХранения) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_МестонахождениеИзделийОстатки.МестоХранения,
		|	СУММА(Scan_МестонахождениеИзделийОстатки.КоличествоОстаток) КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки(&НаДату, МестоХранения = &МестоХранения) КАК Scan_МестонахождениеИзделийОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_МестонахождениеИзделийОстатки.МестоХранения";
	
	Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
	Запрос.УстановитьПараметр("НаДату", НаДату);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЕсли;  
	Возврат 0;
КонецФункции

Функция ПолучитьПланируемоеКоличествоИзделий(ДатаДоставки, МестоХранения, ДокументСсылка = Неопределено) Экспорт
	
	Если ДокументСсылка = Неопределено Тогда
		ДокументСсылка = Документы.Scan_ЗаявкаНаДействие.ПустаяСсылка();
	КонецЕсли;
	
	//Получим плановое количество, которое придет на склад 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		//rarus bonmak 28.08.2019 14430 ++
		//|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Продукт
		|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Изделие
		//rarus bonmak 28.08.2019 14430 --
		|ИЗ
		|	Документ.Scan_ЗаявкаНаДействие.ПродуктыПоЗаявке КАК Scan_ЗаявкаНаДействиеПродуктыПоЗаявке
		|ГДЕ
		|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.Исполнена)
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.Аннулирована)
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ДатаДоставкиПлановая > &ТекущаяДата
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ДатаДоставкиПлановая < &ДатаДоставки
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.Проведен = ИСТИНА
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.МестоДоставки = &МестоХранения
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка <> &ДокументСсылка";
	
	Запрос.УстановитьПараметр("ДатаДоставки", ДатаДоставки);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	КоличествоПриход = РезультатЗапроса.Количество();

	//Получим плановое количество, которое уйдет со склада
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		//rarus bonmak 28.08.2019 14430 ++
		//|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Продукт
		|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Изделие
		//rarus bonmak 28.08.2019 14430 --
		|ИЗ
		|	Документ.Scan_ЗаявкаНаДействие.ПродуктыПоЗаявке КАК Scan_ЗаявкаНаДействиеПродуктыПоЗаявке
		|ГДЕ
		|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.Исполнена)
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.Аннулирована)
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ДатаИВремяПоручения > &ТекущаяДата
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ДатаИВремяПоручения < &ДатаДоставки
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.МестоПолучения = &МестоХранения
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.Проведен = ИСТИНА
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация <> ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу)
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация <> ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу)
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация <> ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь)		//rarus tenkam 15.08.2017 mantis 9319 +		
		|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка <> &ДокументСсылка";
	Запрос.УстановитьПараметр("ДатаДоставки", ДатаДоставки);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	КоличествоРасход = РезультатЗапроса.Количество();
	
	ПриходРасход = КоличествоПриход - КоличествоРасход;
	
	Возврат ПриходРасход;
КонецФункции

//rarus tenkam 05.05.2017 mantis 9423 ---

// rarus tenkam 24.04.2018 mantis 13020 +++
Функция ЕслиДвиженияПослеРегистратора(Изделие,Регистратор, ДатаПрихода) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_МестонахождениеИзделий.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.Scan_МестонахождениеИзделий КАК Scan_МестонахождениеИзделий
		|ГДЕ
		|	Scan_МестонахождениеИзделий.Регистратор <> &Регистратор
		|	И Scan_МестонахождениеИзделий.ДатаПрихода > &ДатаПрихода
		|	И Scan_МестонахождениеИзделий.Изделие = &Изделие";
	
	Запрос.УстановитьПараметр("ДатаПрихода", ДатаПрихода);
	Запрос.УстановитьПараметр("Изделие", Изделие);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции
// rarus tenkam 24.04.2018 mantis 13020 ---

// rarus tenkam 08.10.2019 mantis 15111 +++
Функция ПолучитьДатуПрихода(Изделие, МестоХранения, НаДату = Неопределено) Экспорт
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_МестонахождениеИзделий.ДатаПрихода КАК ДатаПрихода
	               |ИЗ
	               |	РегистрНакопления.Scan_МестонахождениеИзделий КАК Scan_МестонахождениеИзделий
	               |ГДЕ
	               |	Scan_МестонахождениеИзделий.Изделие = &Изделие
	               |	И Scan_МестонахождениеИзделий.МестоХранения = &МестоХранения
	               |	И Scan_МестонахождениеИзделий.ВидДвижения = &ВидДвижения
	               |	И Scan_МестонахождениеИзделий.МоментВремени < &НаДату";
	Запрос.УстановитьПараметр("НаДату", Новый МоментВремени(НаДату));
	Запрос.УстановитьПараметр("Изделие", Изделие);
	Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ДатаПрихода;
	Иначе
		Возврат Дата('00010101');
	КонецЕсли;
	
КонецФункции
// rarus tenkam 08.10.2019 mantis 15111 ---