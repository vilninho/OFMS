//rarus sergei 28.06.2016 mantis 6976 ++


// Получение значение из структуры
//
// Параметры:
//  Структура           - Структура    - Структура, у которой нужно получить значение.
//  ИмяПараметра        - Строка       - Имя параметры структуры.
//  ЗначениеПоУмолчанию - Произвольный - Значение, которое подставится если параметр отсутствует или пустой.
//
Функция ПолучитьЗначениеПараметраСтруктуры(Структура, ИмяПараметра, ЗначениеПоУмолчанию=Неопределено) Экспорт
	
	ТипСтруктуры = ТипЗнч(Структура);
	
	Если ТипСтруктуры=Тип("Структура") ИЛИ ТипСтруктуры=Тип("ДанныеФормыСтруктура") ИЛИ ТипСтруктуры=Тип("ДанныеФормыЭлементКоллекции") ИЛИ ТипСтруктуры=Тип("ДанныеФормыЭлементДерева") Тогда
		// Проверка наличия свойства возможна
	Иначе
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ЗначениеПараметра = Неопределено;
	Структура.Свойство(ИмяПараметра, ЗначениеПараметра);
	
	Если ЗначениеПараметра = Неопределено Тогда
		ЗначениеПараметра = ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Возврат ЗначениеПараметра;
	
КонецФункции // ПолучитьЗначениеПараметраСтруктуры()

// Процедура используется для регистрации сообщений пользователю
//
// Параметры: 
//  ТекстСообщения - Строка - Текст, который должен быть показан , среди реквизитов которого производится поиск.
//  Объект                  - Объект, к основной форме которого привязываются выводимые сообщения.
//  Поле           - Строка - Поле, возле которого должно быть показано окно сообщения
//  
// 
Процедура ВывестиСообщениеПол(Знач ТекстСообщения, Знач Объект=Неопределено, Знач Поле="", НомерСтроки=Неопределено, Отказ=ЛОЖЬ, Знач Параметр1=Неопределено, Знач Параметр2=Неопределено, Знач Параметр3=Неопределено, Знач Параметр4=Неопределено, Знач Параметр5=Неопределено, Знач Параметр6=Неопределено, Знач Параметр7=Неопределено, Знач Параметр8=Неопределено, Знач Параметр9=Неопределено) Экспорт
	
	// Производим подстановку номера строки в даные сообщения
	Если НЕ НомерСтроки=Неопределено Тогда
		Поле           = СтрЗаменить(Поле,           "#", Формат(НомерСтроки-1, "ЧН=0; ЧГ=0"));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "#", Формат(НомерСтроки  , "ЧН=0; ЧГ=0"));
	КонецЕсли;
	
	// Производим подстановку в текст сообщения значений переданных параметров
	Если Найти(ТекстСообщения, "%") > 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СокрЛП(Параметр1), СокрЛП(Параметр2), СокрЛП(Параметр3), СокрЛП(Параметр4), СокрЛП(Параметр5), СокрЛП(Параметр6), СокрЛП(Параметр7), СокрЛП(Параметр8), СокрЛП(Параметр9));
	КонецЕсли;
	
	Если Найти(ТекстСообщения, "$") > 0 Тогда
		Для Сч=1 По 9 Цикл
			ИмяПараметра = "$"+Формат(Сч, "ЧГ=0");
			Если Найти(ТекстСообщения, ИмяПараметра) > 0 Тогда
				
				//!!!_ Получить синоним реквизита по имени из параметра и обновим значение текущего параметра
				ПредставлениеПоля = Вычислить("Параметр"+Формат(Сч, "ЧГ=0"));
				
				// Произведем подстановку полученного значения в строку сообщения
				ТекстСообщения = СтрЗаменить(ТекстСообщения, ИмяПараметра, ПредставлениеПоля);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Создаем новую струкуру для вывода сообщения
	Сообщение = Новый СообщениеПользователю;
	
	// Устанавливаем текст сообщения и имя реквизита объекта/формы, к которому следует привязать сообщение
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Поле  = Строка(Поле);
	
	// Заполним поля "Ключ данных" и "Путь к данным" в зависимости от типа переданного объекта
	Если ТипЗнч(Объект)=Тип("Строка") Тогда
		
		// Сообщение будет выведено в текущей форме, и привязано к объекту имя реквизита которого указано в переменной Объект
		Сообщение.КлючДанных              = Неопределено;
		Сообщение.ПутьКДанным             = Объект;
		
	ИначеЕсли ТипЗнч(Объект)=Тип("ДанныеФормыСтруктура") Тогда
		
		// Сообщение будет выведено в текущей форме, и привязано к реквизиту формы Объект
		Сообщение.КлючДанных              = Неопределено;
		Сообщение.ПутьКДанным             = "Объект";
		
	ИначеЕсли ТипЗнч(Объект)=Тип("УникальныйИдентификатор") Тогда
		
		// Сообщение будет выведено в форме с указанным идентификатором и привязано к основному объекту формы
		Сообщение.ИдентификаторНазначения = Объект;
		Сообщение.КлючДанных              = Неопределено;
		Сообщение.ПутьКДанным             = "";
		
	ИначеЕсли НЕ Объект=Неопределено Тогда
		
		#Если Клиент Тогда
			// Воспользуемся стандартным механизмом привязки сообщений к форме и ее реквизиту, в котором находиться объект
			Сообщение.УстановитьДанные(Объект);
		#Иначе
			Если ОбщегоНазначения.ЗначениеСсылочногоТипа(Объект) Тогда
				// Сообщение будет выведено в текущей форме, и привязано к объекту имя реквизита которого указано в переменной Объект
				Сообщение.КлючДанных              = Объект;
				Сообщение.ПутьКДанным             = "";
			Иначе
				// Воспользуемся стандартным механизмом привязки сообщений к форме и ее реквизиту, в котором находиться объект
				Сообщение.УстановитьДанные(Объект);
			КонецЕсли;
		#КонецЕсли
	КонецЕсли;
	
	// Производим вывод подготовленного сообщения
	Сообщение.Сообщить();
	
	// Взводим признак возникновения ошибки
	Отказ = ИСТИНА;
	
КонецПроцедуры // ВывестиСообщение()

//rarus sergei 28.06.2016 mantis 6976 --

&НаСервере
Функция СКД_В_ТаблицуЗначений(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных) Экспорт
	ТаблицаЗначений = Новый ТаблицаЗначений;
	СКД_В_Коллекцию(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ТаблицаЗначений);
	
	Возврат ТаблицаЗначений;
КонецФункции

&НаСервере
Функция СКД_В_ДеревоЗначений(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных) Экспорт
	ДеревоЗначений = Новый ДеревоЗначений;
	СКД_В_Коллекцию(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДеревоЗначений);
	
	Возврат ДеревоЗначений;
КонецФункции

&НаСервере
Процедура СКД_В_Коллекцию(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, КоллекцияДляРезультата)
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(КоллекцияДляРезультата);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
КонецПроцедуры

// Функция - Динмический список в таблицу значений
//
// Параметры:
//  ЭлементФормы - ТаблицаФормы	 - элемент формы, содержимое которого надо выгрузить в таблицу значений.
//  СписокПолей	 - Строка - список полей, разделенный запятыми.
// 
// Возвращаемое значение:
// ТаблицаЗначений - содержимое динамического списка.
//
&НаСервере
Функция ДинамическийСписокВТаблицуЗначений(ЭлементФормыДинамическийСписок, Знач СписокПолей = Неопределено) Экспорт //rarus BProg_Dekin 04.03.2020 mantis 0015725 +-
	
	СхемаКомпоновкиДанных 		= ЭлементФормыДинамическийСписок.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    НастройкиКомпоновкиДанных 	= ЭлементФормыДинамическийСписок.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	Если ЗначениеЗаполнено(СписокПолей) тогда
		НастройкиКомпоновкиДанных.Структура.Очистить();
		ГруппировкаКомпоновкиДанных = НастройкиКомпоновкиДанных.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		
		СписокПолей = СтрЗаменить(СписокПолей, " ", "");
		Для Каждого ИмяПоля из СтрРазделить(СписокПолей, ",") цикл 
			ВыбранноеПоле = ГруппировкаКомпоновкиДанных.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаЗначений = СКД_В_ТаблицуЗначений(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных);
	Возврат ТаблицаЗначений;

КонецФункции