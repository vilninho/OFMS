//rarus tenkam mantis 6897 ++
////////////////////////////////////////////////////////////////////////////////
// ВЫЗОВ ВЕБ-СЕРВИСОВ СКАНИИ НАЧАЛО

// Получает ответ веб-сервиса по выбранному запросу
//
// Параметры
//  ИмяМетодаWS   - <Строка> - имя запроса
//  СтруктураПараметров   - <Структура> - структура с параметрами для выбранного запроса (pCatNumber, ChassisNumber, firmId, prmDl, prmDc, partNum)  
//  Отказ   - <Булево> - если ф-я выполнилась с ошибкой, сюда возвращается Истина
//  WSПрокси   - <WSПрокси> - если уже есть открытый прокси, то можно передать его в ф-ю (для WS, которые вызываются подряд по много раз)
//  ИмяСобытияЖурналаРегистрации   - <Строка> - для записи ошибок в журнал регистрации 
//  КритическаяОшибка   - <Булево> - если ф-я выполнилась с критической ошибкой, сюда возвращается Истина (т.е. ошибка связана с вызовом WS, а не с содержимым XML-ответа)
//
// Возвращаемое значение:
//   <Строка> - ответ веб-сервиса; тест ошибки, если в параметре "Отказ" вернулась Истина 
//
Функция ВызовВебСервиса(ИмяМетодаWS, СтруктураПараметров, Отказ, WSПрокси = Неопределено, ИмяСобытияЖурналаРегистрации = "", СообщениеОбмена = "", КритическаяОшибка = Ложь) Экспорт
	
	Если ИмяСобытияЖурналаРегистрации = "" Тогда 
		ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетодаWS;	
	КонецЕсли;
	
	// Формируем сообщение обмена
	Если СокрЛП(СообщениеОбмена) = "" Тогда
		СообщениеОбмена = СформироватьСообщениеОбмена(ИмяМетодаWS, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
	КонецЕсли;	
	
	Если Отказ Тогда
		КритическаяОшибка = Истина;
		Возврат СообщениеОбмена;
	КонецЕсли;
	
	// Получаем WS прокси
	WSПрокси = ПолучитьWSПрокси(ИмяМетодаWS, Отказ, WSПрокси, ИмяСобытияЖурналаРегистрации);
	Если Отказ Тогда
		КритическаяОшибка = Истина;
		Возврат WSПрокси;
	КонецЕсли;
	
	// Вызываем веб-сервис
	Объект = Неопределено;
	
	// rarus tenkam 03.06.2020 mantis 16177 +++
	Проверка = Ложь;
	Если СтруктураПараметров.Свойство("Проверка") Тогда
		Проверка = СтруктураПараметров.Проверка;
	КонецЕсли;	
	// rarus tenkam 03.06.2020 mantis 16177 ---
	
	ТекстОтвета = ExecuteTask(WSПрокси, СообщениеОбмена, Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетодаWS, Объект, КритическаяОшибка, Проверка);	// rarus tenkam 03.06.2020 mantis 16177 + Проверка  
	Если Отказ Тогда
		Возврат ТекстОтвета;
	Иначе
		// Проверяем флаг "Successful"
		Successful = РазобратьОтветВебСервиса(ТекстОтвета, "Answer.Successful", Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетодаWS);
		Если Отказ Тогда 
			Возврат Successful;
		КонецЕсли;
		
		//Если Successful = "true" Тогда
		Если Successful = Истина ИЛИ Successful = "true" Тогда 
			ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,УровеньЖурналаРегистрации.Информация,,,"Успешно вызван метод "+ИмяМетодаWS);
		Иначе
			ErrorDescription = РазобратьОтветВебСервиса(ТекстОтвета, "Answer.ErrorMessage.ErrorDescription", Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетодаWS);
			Если Отказ Тогда 
				Возврат ErrorDescription;
			КонецЕсли;
			
			СообщениеОбОшибке = "Вызов веб-сервиса вернул ошибку ("+ИмяМетодаWS+"): "+ErrorDescription;
			ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,УровеньЖурналаРегистрации.Ошибка,,,СообщениеОбОшибке);
			Отказ = Истина;
			Возврат СообщениеОбОшибке;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТекстОтвета;
	
КонецФункции

// Возвращает создержимое указанного узла или СообщениеОбОшибке в случае ошибок
Функция РазобратьОтветВебСервиса(ТекстОтвета, ИмяУзла, Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетодаWS, СообщениеОбОшибке = "") Экспорт	// rarus tenkam 25.03.2019 mantis 13629 + (добавлено СообщениеОбОшибке) 
	ПространствоИменСхемы = "http://www.scania.org/webservice/SRUService";
	
	Попытка	
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(ТекстОтвета);
		ТипОбъектаExchangeMessage = ФабрикаXDTO.Тип(ПространствоИменСхемы, "ExchangeMessageType");
		ОбъектExchangeMessage = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,ТипОбъектаExchangeMessage);
		
		СодержимоеУзла = ОбъектExchangeMessage;
		МассивРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяУзла, ".");
		Для Каждого ТекИмяУзла Из МассивРеквизитов Цикл
			// rarus tenkam 02.04.2019 mantis 14298 +++
			Если ТекИмяУзла = "ErrorDescription" И ТипЗнч(СодержимоеУзла) = Тип("СписокXDTO") И СодержимоеУзла.Количество() <> 0 Тогда
				// ErrorMessage - список
				СодержимоеУзла = СодержимоеУзла[0];
			КонецЕсли;
			// rarus tenkam 02.04.2019 mantis 14298 ---
			СодержимоеУзла = СодержимоеУзла[ТекИмяУзла]; 	
		КонецЦикла;
		
		ЧтениеXML.Закрыть();
		Возврат СодержимоеУзла;   
	Исключение
		ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СообщениеОбОшибке = "Переданное сообщение не в формате XML или XML передан с ошибками ("+ИмяМетодаWS+"): "+ИнформацияОбОшибке;
		scЗафиксироватьОшибку(СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации); 
		Отказ = Истина;	
		Возврат СообщениеОбОшибке;
	КонецПопытки;
	
КонецФункции

Функция ExecuteTask(WS, СообщениеОбмена, Отказ, ИмяСобытияЖурналаРегистрации, ИмяМетодаWS, Объект = Неопределено, КритическаяОшибка = Ложь, Проверка = Ложь) Экспорт	// rarus tenkam 03.06.2020 mantis 16177 + Проверка	
	ПространствоИменСхемы = "http://www.scania.org/webservice/SRUService";
	
	Попытка
		ТекстОтвета =  WS.ExecuteTask(СообщениеОбмена);
	Исключение
		ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СообщениеОбОшибке = "Не удалось вызвать метод сервиса ("+ИмяМетодаWS+"): " + ИнформацияОбОшибке;
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СообщениеОбОшибке);
		КритическаяОшибка = Истина;
		Отказ = Истина;
		
		ЗаписьЖурналаОбменаNDB(ИмяМетодаWS, Объект, СообщениеОбмена, СообщениеОбОшибке, Ложь, Проверка);	// rarus tenkam 03.06.2020 mantis 16177 + Проверка
		Возврат СообщениеОбОшибке;
	КонецПопытки;
	
	Если ПустаяСтрока(ТекстОтвета) Тогда 
		СообщениеОбОшибке = "Пустой текст ответа веб-сервиса. ("+ИмяМетодаWS+")";
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СообщениеОбОшибке);
		Отказ = Истина;
		
		ЗаписьЖурналаОбменаNDB(ИмяМетодаWS, Объект, СообщениеОбмена, СообщениеОбОшибке, Ложь, Проверка);	// rarus tenkam 03.06.2020 mantis 16177 + Проверка
		Возврат СообщениеОбОшибке;
	КонецЕсли;
	
	ЗаписьЖурналаОбменаNDB(ИмяМетодаWS, Объект, СообщениеОбмена, ТекстОтвета, Истина, Проверка);	// rarus tenkam 03.06.2020 mantis 16177 + Проверка
	Возврат ТекстОтвета;
	
КонецФункции

Функция СформироватьСообщениеОбмена(ИмяМетодаWS, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации) Экспорт 
	ПространствоИменСхемы = "http://www.scania.org/webservice/SRUService";
	
	Попытка
		ТекстОшибки = "";
		
		ТипExchangeMessageType = ПолучитьОбъектТипаCML("ExchangeMessageType", ПространствоИменСхемы);
		
		ТипVersionType = ПолучитьОбъектТипаCML("VersionType", ПространствоИменСхемы);
		ЗаполнитьСвойствоXDTO(ТипVersionType, "Major", XMLСтрока(1), Истина, ТекстОшибки);
		ЗаполнитьСвойствоXDTO(ТипVersionType, "Minor", XMLСтрока(0), Истина, ТекстОшибки);
		ЗаполнитьСвойствоXDTO(ТипExchangeMessageType, "Version", ТипVersionType, Истина, ТекстОшибки);
		
		ТипRequestType = ПолучитьОбъектТипаCML("RequestType", ПространствоИменСхемы);
		ЗаполнитьСвойствоXDTO(ТипRequestType, "RequestStatement", XMLСтрока(ИмяМетодаWS), Истина, ТекстОшибки);
		ЗаполнитьСвойствоXDTO(ТипRequestType, "ConnectionString", ПолучитьСтрокуСоединенияИБ(), Истина, ТекстОшибки);

		ТипRequestConditions = ПолучитьОбъектТипаCML("RequestConditionsType", ПространствоИменСхемы);
		
		Если ИмяМетодаWS = "GetListOfProductMark" Тогда
			ТипЗапросМарокПродуктовТип = ПолучитьОбъектТипаCML("ЗапросМарокПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросМарокПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки, Ложь);
			ЗаполнитьСвойствоXDTO(ТипЗапросМарокПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки, Ложь);
			ЗаполнитьСвойствоXDTO(ТипЗапросМарокПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки, Ложь);
			ЗаполнитьСвойствоXDTO(ТипЗапросМарокПродуктовТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки, Ложь);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросМарокПродуктов", ТипЗапросМарокПродуктовТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetProductMark" Тогда 
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetListOfProductGroup" Тогда
			ТипЗапросГруппПродуктовТип = ПолучитьОбъектТипаCML("ЗапросГруппПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросГруппПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросГруппПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросГруппПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросГруппПродуктовТип, "DeletionMark", XMLСтрока(Ложь), , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросГруппПродуктов", ТипЗапросГруппПродуктовТип, Истина, ТекстОшибки);
		ИначеЕсли ИмяМетодаWS = "GetProductGroup" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetListOfProductType" Тогда
			ТипЗапросВидовПродуктовТип = ПолучитьОбъектТипаCML("ЗапросВидовПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросВидовПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросВидовПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросВидовПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросВидовПродуктовТип, "DeletionMark", XMLСтрока(Ложь), , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросВидовПродуктов", ТипЗапросВидовПродуктовТип, Истина, ТекстОшибки);	
		ИначеЕсли ИмяМетодаWS = "GetProductType" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetListOfProductSubType" Тогда
			ТипЗапросТиповПродуктовТип = ПолучитьОбъектТипаCML("ЗапросТиповПродуктовТип", ПространствоИменСхемы);
			
			ЗаполнитьСвойствоXDTO(ТипЗапросТиповПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТиповПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТиповПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТиповПродуктовТип, "DeletionMark", XMLСтрока(Ложь), , ТекстОшибки);

			//Получим тип продукта
			Если СтруктураПараметров.РодительGUID <> Неопределено Тогда
				ТипОсновныеСвойстваТиповПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваТиповПродуктовТип", ПространствоИменСхемы);
				Если ЗначениеЗаполнено(СтруктураПараметров.РодительGUID) Тогда
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваТиповПродуктовТип, "GUID", СтруктураПараметров.РодительGUID, Истина, ТекстОшибки);
				КонецЕсли;
			    //Заполним родителя
				ЗаполнитьСвойствоXDTO(ТипЗапросТиповПродуктовТип, "Родитель", ТипОсновныеСвойстваТиповПродуктовТип, Истина, ТекстОшибки, Истина);
			КонецЕсли;
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросТиповПродуктов", ТипЗапросТиповПродуктовТип, Истина, ТекстОшибки);		
		ИначеЕсли ИмяМетодаWS = "GetProductSubType" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		//rarus bonmak 14.04.2020 15891 ++	
		//ИначеЕсли ИмяМетодаWS = "GetListOfManufacturers" Тогда
		//	ТипЗапросПроизводителейПродуктовТип = ПолучитьОбъектТипаCML("ЗапросПроизводителейПродуктовТип", ПространствоИменСхемы);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросПроизводителейПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросПроизводителейПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросПроизводителейПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросПроизводителейПродуктовТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросПроизводителейПродуктов", ТипЗапросПроизводителейПродуктовТип, Истина, ТекстОшибки);	
		//ИначеЕсли ИмяМетодаWS = "GetManufacturers" Тогда
		//	ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		//rarus bonmak 14.04.2020 15891 --
		ИначеЕсли ИмяМетодаWS = "GetListOfProductModel" Тогда
			ТипЗапросМоделейПродуктовТип = ПолучитьОбъектТипаCML("ЗапросМоделейПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросМоделейПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросМоделейПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросМоделейПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросМоделейПродуктовТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
			
			//Будем пока модели получать только те, у которых марка - Скания
			ОсновныеСвойстваМарокПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваМарокПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ОсновныеСвойстваМарокПродуктовТип, "GUID", СтруктураПараметров.МаркаGUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросМоделейПродуктовТип, "Марка", ОсновныеСвойстваМарокПродуктовТип, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросМоделейПродуктов", ТипЗапросМоделейПродуктовТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetProductModel" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		// rarus tenkam 09.09.2019 mantis 14841 +++
		//rarus bonmak 24.09.2019 14177 ++
		ИначеЕсли ИмяМетодаWS = "GetListOfSpecifications" Тогда  
			ТипЗапросСпецификацийПродуктовТип = ПолучитьОбъектТипаCML("ЗапросСпецификацийПродуктовТип", ПространствоИменСхемы);
			//rarus ozhnik 15888 19.06.2020 + 
			Если СтруктураПараметров.Свойство("ЗапросИЗКП") и СтруктураПараметров.ЗапросИЗКП = "истина"  Тогда
				ОсновныеСвойстваQuotationТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваQuotationТип", ПространствоИменСхемы);	
				ЗаполнитьСвойствоXDTO(ОсновныеСвойстваQuotationТип, "GUID", XMLСтрока(СтруктураПараметров.GUID), Истина, ТекстОшибки); 	
				ЗаполнитьСвойствоXDTO(ТипЗапросСпецификацийПродуктовТип, "Quotation", ОсновныеСвойстваQuotationТип , Истина, ТекстОшибки);
				Если СтруктураПараметров.Свойство("ProductID") и ЗначениеЗаполнено(СтруктураПараметров.ProductID) Тогда
					ЗаполнитьСвойствоXDTO(ТипЗапросСпецификацийПродуктовТип, "ProductID", СтруктураПараметров.ProductID , Истина, ТекстОшибки);	
				КонецЕсли; 
				
			Иначе //rarus ozhnik 15888 19.06.2020 -
			ЗаполнитьСвойствоXDTO(ТипЗапросСпецификацийПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСпецификацийПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСпецификацийПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСпецификацийПродуктовТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
			//Отбор по периоду
			Если ЗначениеЗаполнено(СтруктураПараметров.ДатаНачала) И ЗначениеЗаполнено(СтруктураПараметров.ДатаОкончания) Тогда
				
				ТипПериодТип = ПолучитьОбъектТипаCML("ПериодТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипПериодТип, "ДатаНачала", СтруктураПараметров.ДатаНачала, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПериодТип, "ДатаОкончания", СтруктураПараметров.ДатаОкончания, , ТекстОшибки);
				
				ЗаполнитьСвойствоXDTO(ТипЗапросСпецификацийПродуктовТип, "ПериодИзменения", ТипПериодТип, , ТекстОшибки);
			КонецЕсли;
			КонецЕсли; //rarus ozhnik 15888 19.06.2020 +-
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросСпецификацийПродуктов", ТипЗапросСпецификацийПродуктовТип, Истина, ТекстОшибки, Ложь);			
		ИначеЕсли ИмяМетодаWS = "GetSpecification" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки); //rarus vikhle 11.10.2021 mt 18270
			//ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 24.09.2019 14177 --
		// rarus tenkam 09.09.2019 mantis 14841 ---
		//rarus bonmak 15.04.2020 14456 ++
		//ИначеЕсли ИмяМетодаWS = "GetListOfDealers" Тогда
		//	ТипЗапросДилеровТип = ПолучитьОбъектТипаCML("ЗапросДилеровТип", ПространствоИменСхемы);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросДилеровТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросДилеровТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросДилеровТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросДилеровТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросДилеровТип, "КодДилераSOWA", СтруктураПараметров.КодДилераSOWA, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросДилеровТип, "КодДилера", СтруктураПараметров.КодДилера, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросДилеров", ТипЗапросДилеровТип, Истина, ТекстОшибки, Ложь);
		//ИначеЕсли ИмяМетодаWS = "GetDealers" Тогда
		//	ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
		//	ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		//rarus bonmak 15.04.2020 14456 --
		ИначеЕсли ИмяМетодаWS = "GetCompany" Тогда //rarus bonmak 15.04.2020 14456 ++
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("GUID") Тогда
				Если ЗначениеЗаполнено(СтруктураПараметров.GUID) Тогда
					ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);//rarus vikhle 11.10.2021 mt 18270
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 15.04.2020 14456 --	
		ИначеЕсли ИмяМетодаWS = "GetListOfCompany" Тогда //rarus bonmak 15.04.2020 14456 ++
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросКомпанийТип", ПространствоИменСхемы);
			
			ТипСправочникОбъектаБазовыйТип = ПолучитьОбъектТипаCML("СправочникОбъектаБазовыйТип", ПространствоИменСхемы);
			Если СтруктураПараметров.Свойство("ВидВзаимодействия") Тогда
				Если ЗначениеЗаполнено(СтруктураПараметров.ВидВзаимодействия) Тогда
					ЗаполнитьСвойствоXDTO(ТипСправочникОбъектаБазовыйТип, "GUID", СтруктураПараметров.ВидВзаимодействия, , ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидВзаимодействия", ТипСправочникОбъектаБазовыйТип, Истина, ТекстОшибки, Ложь);

			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросКомпании", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 15.04.2020 14456 --
		ИначеЕсли ИмяМетодаWS = "GetListOfContragents" Тогда
			ТипЗапросКонтрагентовТип = ПолучитьОбъектТипаCML("ЗапросКонтрагентовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросКонтрагентовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросКонтрагентовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросКонтрагентовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросКонтрагентовТип, "НаименованиеПолное", СтруктураПараметров.НаименованиеПолное, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросКонтрагентовТип, "ИНН", СтруктураПараметров.ИНН, , ТекстОшибки);
			Если СтруктураПараметров.Свойство("КПП") Тогда //rarus bonmak 15.04.2020 14456 добавил условие
				ЗаполнитьСвойствоXDTO(ТипЗапросКонтрагентовТип, "КПП", СтруктураПараметров.КПП, , ТекстОшибки);
			КонецЕсли;
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросКонтрагентов", ТипЗапросКонтрагентовТип, Истина, ТекстОшибки, Ложь);	
		ИначеЕсли ИмяМетодаWS = "GetContragents" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetListOfSOP" Тогда
			ТипЗапросСОППродуктовТип = ПолучитьОбъектТипаCML("ЗапросСОППродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "НомерДоговора", СтруктураПараметров.НомерДоговора, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "Дата", СтруктураПараметров.Дата, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "Версия", СтруктураПараметров.Версия, , ТекстОшибки);
			
			Если ЗначениеЗаполнено(СтруктураПараметров.ДилерGUID) Тогда 
				ТипОсновныеСвойстваДилеровТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваДилеровТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваДилеровТип, "GUID", СтруктураПараметров.ДилерGUID, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "Дилер", ТипОсновныеСвойстваДилеровТип, , ТекстОшибки);
			КонецЕсли;
			
			//Отбор по периоду
			Если ЗначениеЗаполнено(СтруктураПараметров.ДатаНачала) И ЗначениеЗаполнено(СтруктураПараметров.ДатаОкончания) Тогда
				
				ТипПериодТип = ПолучитьОбъектТипаCML("ПериодТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипПериодТип, "ДатаНачала", СтруктураПараметров.ДатаНачала, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПериодТип, "ДатаОкончания", СтруктураПараметров.ДатаОкончания, , ТекстОшибки);
				
				ЗаполнитьСвойствоXDTO(ТипЗапросСОППродуктовТип, "ПериодИзменения", ТипПериодТип, , ТекстОшибки);
			КонецЕсли;
			
			//Если ЗначениеЗаполнено(СтруктураПараметров.ДилерGUID) Тогда
			//Отбор по дилеру
			//ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);
			//ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
			//
			//ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
			//ТипМаркаПродукта = ПолучитьОбъектТипаCML("ОсновныеСвойстваМарокПродуктовТип", ПространствоИменСхемы);
			//ЗаполнитьСвойствоXDTO(ТипМаркаПродукта, "GUID", "a9af8774-532b-11e6-80e5-001dd8b71c6f", , ТекстОшибки, Ложь);
			//ЗаполнитьСвойствоXDTO(ТипЗначение, "МаркаПродукта", ТипМаркаПродукта, , ТекстОшибки);
			//ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
			//
			//ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
			//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "МаркаПродукта", , ТекстОшибки, Ложь);
			//ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
			//
			//ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
			////ТипЗначенияСвойствСписок.СписокЗначенийСвойств.Добавить(ТипЗначениеСвойства);
			////ЗаполнитьСвойствоXDTO(ТипЗначенияСвойствСписок, "СписокЗначенийСвойств", ТипЗначениеСвойства, , ТекстОшибки);
			//ЗаполнитьСвойствоXDTO(ТипЗапросМоделейПродуктовТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);		
			//
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросСОППродуктов", ТипЗапросСОППродуктовТип, Истина, ТекстОшибки, Ложь);
			
		ИначеЕсли ИмяМетодаWS = "GetSOP" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetListOfChassis" Тогда
			ТипЗапросТранспортныхСредствТип = ПолучитьОбъектТипаCML("ЗапросТранспортныхСредствТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросТранспортныхСредствТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТранспортныхСредствТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТранспортныхСредствТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТранспортныхСредствТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТранспортныхСредствТип, "Шасси", СтруктураПараметров.Шасси, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТранспортныхСредствТип, "ДатаИзменения", СтруктураПараметров.ДатаИзменения, , ТекстОшибки);
			
			ТипВидовПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваВидовПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипВидовПродуктовТип, "GUID", СтруктураПараметров.ВидGUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросТранспортныхСредствТип, "ВидПродукта", ТипВидовПродуктовТип, , ТекстОшибки);
						
			//ВРЕМЕННО ЗАКОММЕНТИРОВАЛА
			//ТипПериодТип = ПолучитьОбъектТипаCML("ПериодТип", ПространствоИменСхемы);
			//ЗаполнитьСвойствоXDTO(ТипПериодТип, "ДатаНачала", СтруктураПараметров.ДатаНачала, , ТекстОшибки);
			//ЗаполнитьСвойствоXDTO(ТипПериодТип, "ДатаОкончания", СтруктураПараметров.ДатаОкончания, , ТекстОшибки);
			//
			//ЗаполнитьСвойствоXDTO(ТипЗапросТранспортныхСредствТип, "ПериодИзменения", ТипПериодТип, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросТранспортныхСредств", ТипЗапросТранспортныхСредствТип, Истина, ТекстОшибки, Ложь);
			
		ИначеЕсли ИмяМетодаWS = "GetChassis" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
			
		ИначеЕсли ИмяМетодаWS = "GetListOfEngines" Тогда
			ТипЗапросДвигателейТип = ПолучитьОбъектТипаCML("ЗапросДвигателейТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросДвигателейТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросДвигателейТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросДвигателейТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросДвигателейТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросДвигателей", ТипЗапросДвигателейТип, Истина, ТекстОшибки, Ложь);
			
		ИначеЕсли ИмяМетодаWS = "GetEngines" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetListOfProduct" Тогда
			ТипЗапросПродуктовТип = ПолучитьОбъектТипаCML("ЗапросПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ДатаИзменения", СтруктураПараметров.ДатаИзменения, , ТекстОшибки);
			//rarus bonmak 18.05.2020 14375 ++
			Если ЗначениеЗаполнено(СтруктураПараметров.НомерПродукта) Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "НомерПродукта", СтруктураПараметров.НомерПродукта, , ТекстОшибки);
			КонецЕсли;
			//rarus bonmak 18.05.2020 14375 --
			
			// Rarus tenkam 31.03.2022 mantis 19047 +++
			Если СтруктураПараметров.Свойство("ВидПродукта") И ЗначениеЗаполнено(СтруктураПараметров.ВидПродукта) Тогда
				Если ЗначениеЗаполнено(СтруктураПараметров.ВидПродукта.IDExternalSystem) Тогда
					ТипВидПродуктаТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваВидовПродуктовТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипВидПродуктаТип, "GUID", СтруктураПараметров.ВидПродукта.IDExternalSystem, , ТекстОшибки);
					 				
					ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ВидПродукта", ТипВидПродуктаТип, , ТекстОшибки); 
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("МаркаПродукта") И ЗначениеЗаполнено(СтруктураПараметров.МаркаПродукта) Тогда
				Если ЗначениеЗаполнено(СтруктураПараметров.МаркаПродукта.IDExternalSystem) Тогда
					ТипМарокПродуктаТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваМарокПродуктовТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипМарокПродуктаТип, "GUID", СтруктураПараметров.МаркаПродукта.IDExternalSystem, , ТекстОшибки);
					 				
					ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "Марка", ТипМарокПродуктаТип, , ТекстОшибки); 	
				КонецЕсли;
			КонецЕсли;			
			// Rarus tenkam 31.03.2022 mantis 19047 ---
		
			//Отбор по периоду
			Если ЗначениеЗаполнено(СтруктураПараметров.ДатаНачала) И ЗначениеЗаполнено(СтруктураПараметров.ДатаОкончания) Тогда
				
				ТипПериодТип = ПолучитьОбъектТипаCML("ПериодТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипПериодТип, "ДатаНачала", СтруктураПараметров.ДатаНачала, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПериодТип, "ДатаОкончания", СтруктураПараметров.ДатаОкончания, , ТекстОшибки);
				
				ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ПериодИзменения", ТипПериодТип, , ТекстОшибки);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтруктураПараметров.НомерПродукта) Тогда //rarus bonmak 18.05.2020 14375 добавил условие
				//Отбор по признаку TLMS
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.TLMS.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", XMLСтрока(Истина), , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "5175df22-a71b-11e6-80ed-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.TLMS.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "TLMS", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			//Отбор по шасси
			Если ЗначениеЗаполнено(СтруктураПараметров.ТСGUID) ИЛИ ЗначениеЗаполнено(СтруктураПараметров.ТСНомерШасси) Тогда
				ТипПредметыПродуктовТип = ПолучитьОбъектТипаCML("ПредметыПродуктовТип", ПространствоИменСхемы);
				
				ТипТСТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваТранспортныхСредствТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипТСТип, "Шасси", СтруктураПараметров.ТСНомерШасси, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипТСТип, "GUID", СтруктураПараметров.ТСGUID, , ТекстОшибки);
				
				ЗаполнитьСвойствоXDTO(ТипПредметыПродуктовТип, "ТранспортноеСредство", ТипТСТип, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ПредметПродукта", ТипПредметыПродуктовТип, , ТекстОшибки);
			КонецЕсли;
			
						
			////СОП продукта
			//ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "СОППродукта", СтруктураПараметров.Код, Истина, ТекстОшибки, Ложь);
			
			//ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "Марка", "", , ТекстОшибки);
			//ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ВидПродукта", "", , ТекстОшибки);
			
			//ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ТипПродукта", "", , ТекстОшибки);
			//
			//ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "Группа", СтруктураПараметров.DeletionMark, Истина, ТекстОшибки, Ложь);
			
			////Предмет продукта
			//ТипПредметыПродуктовТип = ПолучитьОбъектТипаCML("ПредметыПродуктовТип", ПространствоИменСхемы);
			//ЗаполнитьСвойствоXDTO(ТипПредметыПродуктовТип, "GUID", СтруктураПараметров.ПредметПродукта, , ТекстОшибки);
			////ЗаполнитьСвойствоXDTO(ТипПредметыПродуктовТип, "ПредметПродукта", "", Истина, ТекстОшибки);
			//ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ПредметПродукта", ТипПредметыПродуктовТип, , ТекстОшибки);
			////ЗаполнитьСвойствоXDTO(ТипЗапросПродуктовТип, "ПредметПродукта", "",Истина , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросПродуктов", ТипЗапросПродуктовТип, Истина, ТекстОшибки, Ложь);	
			
		ИначеЕсли ИмяМетодаWS = "GetProduct" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);		
		ИначеЕсли ИмяМетодаWS = "GetListOfCommercialOffers" Тогда
		ИначеЕсли ИмяМетодаWS = "GetProductCommercialOffers" Тогда
		ИначеЕсли ИмяМетодаWS = "GetListOfOrderToDelivery" Тогда
			ТипЗапросЗаказовПродуктовТип = ПолучитьОбъектТипаCML("ЗапросЗаказовПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросЗаказовПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросЗаказовПродуктовТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросЗаказовПродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросЗаказовПродуктовТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросЗаказовПродуктовТип, "НомерЗаказа", СтруктураПараметров.НомерЗаказа, , ТекстОшибки);
			
			Если ЗначениеЗаполнено(СтруктураПараметров.ПродуктGUID) Тогда 
				ТипОсновныеСвойстваПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваПродуктовТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваПродуктовТип, "GUID", СтруктураПараметров.ПродуктGUID, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипЗапросЗаказовПродуктовТип, "Продукт", ТипОсновныеСвойстваПродуктовТип, , ТекстОшибки);
			КонецЕсли;
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросЗаказовПродуктов", ТипЗапросЗаказовПродуктовТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetOrderToDelivery" Тогда
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "Период", СтруктураПараметров.Период, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);

		ИначеЕсли ИмяМетодаWS = "GetListOfStatuses" Тогда
			ТипЗапросСтатусовОбъектаТип = ПолучитьОбъектТипаCML("ЗапросСтатусовОбъектаТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросСтатусовОбъектаТип, "ВидСтатуса", СтруктураПараметров.ВидСтатуса, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросСтатусовОбъектов", ТипЗапросСтатусовОбъектаТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "GetListOfCountries" Тогда
			
		ИначеЕсли ИмяМетодаWS = "SetProduct" Тогда
			ТипДанныеПродуктаТип = ПолучитьОбъектТипаCML("ДанныеПродуктаТип", ПространствоИменСхемы);
			
			ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			
			//Получим список доп. реквизитов
			ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);
			
			//Установим реквизит TLMS
			Если СтруктураПараметров.Свойство("TLMS") И ЗначениеЗаполнено(СтруктураПараметров.TLMS) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.TLMS.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.TLMS, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "TLMS", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "5175df22-a71b-11e6-80ed-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.TLMS.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//rarus bonmak 18.05.2020 14375 ++
			//Установим реквизит БУ
			Если СтруктураПараметров.Свойство("БУ") И ЗначениеЗаполнено(СтруктураПараметров.БУ) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.БУ.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.БУ, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Транспортное средство с пробегом", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "46ab223b-c65d-11e9-9101-00155d81d751", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.БУ.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("VIN") И ЗначениеЗаполнено(СтруктураПараметров.VIN) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.VINКод.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.VIN, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "VIN-код", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "29173bd8-8f8b-11e6-80ed-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.VINКод.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ТипПродуктаЛогистический") И ЗначениеЗаполнено(СтруктураПараметров.ТипПродуктаЛогистический) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ЛогистическийТипПродукта.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипОсновныеСвойстваТиповПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваТиповПродуктовТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваТиповПродуктовТип, "GUID", СтруктураПараметров.ТипПродуктаЛогистический.IDExternalSystem, Истина, ТекстОшибки);
					
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "ТипПродукта", ТипОсновныеСвойстваТиповПродуктовТип, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Логистический тип продукта", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "ddaf9f0f-c35c-11e6-80f0-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ЛогистическийТипПродукта.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("МодельПродукта") И ЗначениеЗаполнено(СтруктураПараметров.МодельПродукта) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Модель.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипОсновныеСвойстваМоделейПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваМоделейПродуктовТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМоделейПродуктовТип, "GUID", СтруктураПараметров.МодельПродукта.IDExternalSystem, Истина, ТекстОшибки);
					
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Модель", ТипОсновныеСвойстваМоделейПродуктовТип, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Модель", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "098e6edc-84c8-11e6-80eb-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Модель.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//Установим реквизит УстановленныйТахограф
			Если СтруктураПараметров.Свойство("УстановленныйТахограф") И ЗначениеЗаполнено(СтруктураПараметров.УстановленныйТахограф) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ТахографУстановлен.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					Если ТипЗнч(СтруктураПараметров.УстановленныйТахограф) <> Тип("Строка") Тогда
						ТекЗначениеСтрока = СтруктураПараметров.УстановленныйТахограф.Наименование + " - " + СтруктураПараметров.УстановленныйТахограф.Расшифровка;
					Иначе 
						ТекЗначениеСтрока = СтруктураПараметров.УстановленныйТахограф;
					КонецЕсли;
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", ТекЗначениеСтрока, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Тахограф установлен", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "2e640900-7d41-11e7-80ff-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ТахографУстановлен.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("МодельДвигателяТС") И ЗначениеЗаполнено(СтруктураПараметров.МодельДвигателяТС) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ОбозначениеМоделиДвигателя.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.МодельДвигателяТС.Наименование, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Обозначение модели двигателя", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "2d29bca8-b601-11e6-80ef-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ОбозначениеМоделиДвигателя.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("НомерДвигателяТС") И ЗначениеЗаполнено(СтруктураПараметров.НомерДвигателяТС) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.EngineNo.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.НомерДвигателяТС, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "EngineNo", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "29173bdf-8f8b-11e6-80ed-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.EngineNo.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("НомерПолисаОСАГО") И ЗначениеЗаполнено(СтруктураПараметров.НомерПолисаОСАГО) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.НомерОСАГО.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.НомерПолисаОСАГО, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Номер ОСАГО", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "827b633f-ebe4-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.НомерОСАГО.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			// Rarus tenkam 10.11.2021 mantis 18493 +++
			//Если СтруктураПараметров.Свойство("ДатаИстеченияПолиса") И ЗначениеЗаполнено(СтруктураПараметров.ДатаИстеченияПолиса) Тогда
			Если СтруктураПараметров.Свойство("ДатаИстеченияПолиса") И СтруктураПараметров.ДатаИстеченияПолиса <> Неопределено Тогда
			// Rarus tenkam 10.11.2021 mantis 18493 ---
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ДатаОкончанияОСАГО.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// Rarus tenkam 10.11.2021 mantis 18493 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.ДатаИстеченияПолиса, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.ДатаИстеченияПолиса, , ТекстОшибки, Истина);
					// Rarus tenkam 10.11.2021 mantis 18493 ---
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Дата окончания ОСАГО", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "827b6342-ebe4-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ДатаОкончанияОСАГО.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("Комментарий") И ЗначениеЗаполнено(СтруктураПараметров.Комментарий) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Комментарий.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.Комментарий, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Комментарий", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "6e1e792d-7ff0-11e6-80eb-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Комментарий.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ВесПродукта") И ЗначениеЗаполнено(СтруктураПараметров.ВесПродукта) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ВесБрутто.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.ВесПродукта, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Вес брутто", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "29173bd2-8f8b-11e6-80ed-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ВесБрутто.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ДлинаПродукта") И ЗначениеЗаполнено(СтруктураПараметров.ДлинаПродукта) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ДлинаОбщая.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.ДлинаПродукта, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Длина общая", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "56e7d91e-dc75-11e8-811a-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ДлинаОбщая.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ВысотаПродукта") И ЗначениеЗаполнено(СтруктураПараметров.ВысотаПродукта) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ВысотаНезагруженногоТС.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.ВысотаПродукта, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Высота незагруженного ТС", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "56e7d91a-dc75-11e8-811a-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ВысотаНезагруженногоТС.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ШиринаПродукта") И ЗначениеЗаполнено(СтруктураПараметров.ШиринаПродукта) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Ширина.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.ШиринаПродукта, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Ширина", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "56e7d918-dc75-11e8-811a-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Ширина.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ГосударственныйНомер") И ЗначениеЗаполнено(СтруктураПараметров.ГосударственныйНомер) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ГосНомер.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.ГосударственныйНомер, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Гос номер", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "bd5f638d-6a2f-11e6-80e7-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ГосНомер.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			// Rarus tenkam 10.11.2021 mantis 18493 +++
			//Если СтруктураПараметров.Свойство("ГосударственныйНомерДатаПолучения") И ЗначениеЗаполнено(СтруктураПараметров.ГосударственныйНомерДатаПолучения) Тогда
			Если СтруктураПараметров.Свойство("ГосударственныйНомерДатаПолучения") И СтруктураПараметров.ГосударственныйНомерДатаПолучения <> Неопределено Тогда
			// Rarus tenkam 10.11.2021 mantis 18493 ---
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ДатаРегистрации.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// Rarus tenkam 10.11.2021 mantis 18493 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.ГосударственныйНомерДатаПолучения, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.ГосударственныйНомерДатаПолучения, , ТекстОшибки, Истина);
					// Rarus tenkam 10.11.2021 mantis 18493 ---
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Дата регистрации", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "b52771be-7c37-11e7-80ff-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ДатаРегистрации.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			//rarus bonmak 18.05.2020 14375 --
			
			// rarus tenkam 18.02.2021 mantis 17190 +++
			Если СтруктураПараметров.Свойство("DLV") И ЗначениеЗаполнено(СтруктураПараметров.DLV) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.DLV.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.DLV, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "DLV", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "ba8dceaa-53d8-11eb-9116-00155d81bcc8", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.DLV.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;      		
			// rarus tenkam 18.02.2021 mantis 17190 ---
			
			// Rarus tenkam 26.10.2021 mantis 17822 +++
			Если СтруктураПараметров.Свойство("НомерИзделия") И ЗначениеЗаполнено(СтруктураПараметров.НомерИзделия) Тогда				
				ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "НомерПродукта", СтруктураПараметров.НомерИзделия, , ТекстОшибки);
			КонецЕсли;      		
			// Rarus tenkam 26.10.2021 mantis 17822 ---
			
			//Поместим список в объект
			ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ДанныеПродукта", ТипДанныеПродуктаТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "SetOrderToDelivery" Тогда //rarus bonmak 15.08.2019 14576 ++
			ТипДанныеЗаказовПродуктовТип = ПолучитьОбъектТипаCML("ДанныеЗаказовПродуктовТип", ПространствоИменСхемы);
			
			ЗаполнитьСвойствоXDTO(ТипДанныеЗаказовПродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			
			//Получим список доп. реквизитов
			ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);
			
			//Установим реквизит локальный статус
			Если СтруктураПараметров.Свойство("ЛокальныйСтатуc") Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ЛокальныйСтатус.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//КодСтатуса = СтруктураПараметров.ЛокальныйСтатуc.КодСтатуса;
					IDExternalSystemЗначения = СтруктураПараметров.ЛокальныйСтатуc.IDExternalSystem; 
					
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ТипЗначениеСтатус = ПолучитьОбъектТипаCML("ОсновныеСвойстваСтатусовОбъектовТип", ПространствоИменСхемы);
					Если ЗначениеЗаполнено(IDExternalSystemЗначения) Тогда
						ЗаполнитьСвойствоXDTO(ТипЗначениеСтатус, "GUID", IDExternalSystemЗначения, , ТекстОшибки);
					КонецЕсли;
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Статус", ТипЗначениеСтатус, , ТекстОшибки, Ложь);				
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					// rarus tenkam 13.09.2019 mantis 14576 +++
					//ГуидДопРеквизитаЛокальныйСтатус = Справочники.Scan_ДополнительныеРеквизиты1ДБ.НайтиПоРеквизиту("ТипДопРеквизитаOFMS", Метаданные.Справочники.Scan_ДополнительныеРеквизиты1ДБ.Имя);
					//rarus bonmak 17468 23.09.2021 закомментировал ++
					//ТекДопРеквизит = Справочники.Scan_ДополнительныеРеквизиты1БД.НайтиПоНаименованию("Локальный Статус");
					//ГуидДопРеквизита = ?(ЗначениеЗаполнено(ТекДопРеквизит), ТекДопРеквизит.IDExternalSystem, "184fac3c-bb7f-11e9-90ff-00155d81d751");
					//rarus bonmak 17468 23.09.2021 --
					// rarus tenkam 13.09.2019 mantis 14576 ---
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "ЛокальныйСтатус", , ТекстОшибки, Ложь);
					// rarus tenkam 13.09.2019 mantis 14576 +++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", ГуидДопРеквизитаЛокальныйСтатус.IDExternalSystem, , ТекстОшибки, Ложь); 
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", ГуидДопРеквизита, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ЛокальныйСтатус.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					// rarus tenkam 13.09.2019 mantis 14576 ---
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//Поместим список в объект
			ЗаполнитьСвойствоXDTO(ТипДанныеЗаказовПродуктовТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗаказАМ", ТипДанныеЗаказовПродуктовТип, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 15.08.2019 14576 --
	    //rarus tenkam 26.01.2017 mantis 7175 +++
		ИначеЕсли ИмяМетодаWS = "SetChassis" Тогда
			ТипДанныеТСТип = ПолучитьОбъектТипаCML("ДанныеТранспортныхСредствТип", ПространствоИменСхемы);
			
			ЗаполнитьСвойствоXDTO(ТипДанныеТСТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			
			//Получим список доп. реквизитов
			ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);

			//Установим реквизит ЗамечанияПоАктуПП
			Если СтруктураПараметров.Свойство("Замечание") И ЗначениеЗаполнено(СтруктураПараметров.Замечание) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ЗамечаниеПоАктуПП.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.Замечание, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Замечание по акту ПП", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "827b6344-ebe4-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ЗамечаниеПоАктуПП.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//Установим реквизит НомерОСАГО
			Если СтруктураПараметров.Свойство("НомерПолисаОСАГО") И ЗначениеЗаполнено(СтруктураПараметров.НомерПолисаОСАГО) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.НомерОСАГО.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.НомерПолисаОСАГО, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Номер ОСАГО", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "827b633f-ebe4-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.НомерОСАГО.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//Установим реквизит ДатаОкончанияОСАГО
			// Rarus tenkam 17.11.2021 mantis 18493 +++
			//Если СтруктураПараметров.Свойство("ДатаИстеченияПолиса") И ЗначениеЗаполнено(СтруктураПараметров.ДатаИстеченияПолиса) Тогда
			Если СтруктураПараметров.Свойство("ДатаИстеченияПолиса") И СтруктураПараметров.ДатаИстеченияПолиса <> Неопределено Тогда 
			 // Rarus tenkam 17.11.2021 mantis 18493 ---
			Если Справочники.Scan_ДополнительныеРеквизиты1БД.ДатаОкончанияОСАГО.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// Rarus tenkam 10.11.2021 mantis 18493 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.ДатаИстеченияПолиса, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.ДатаИстеченияПолиса, , ТекстОшибки, Истина);
					// Rarus tenkam 10.11.2021 mantis 18493 ---
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Дата окончания ОСАГО", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "827b6342-ebe4-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ДатаОкончанияОСАГО.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//Установим реквизит УстановленныйТахограф
			Если СтруктураПараметров.Свойство("УстановленныйТахограф") И ЗначениеЗаполнено(СтруктураПараметров.УстановленныйТахограф) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.УстановленныйТахограф.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// rarus tenkam 23.09.2019 mantis 14576 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.УстановленныйТахограф, , ТекстОшибки, Ложь);
					Если ТипЗнч(СтруктураПараметров.УстановленныйТахограф) <> Тип("Строка") Тогда
						ТекЗначениеСтрока = СтруктураПараметров.УстановленныйТахограф.Наименование + " - " + СтруктураПараметров.УстановленныйТахограф.Расшифровка;
					Иначе 
						ТекЗначениеСтрока = СтруктураПараметров.УстановленныйТахограф;
					КонецЕсли;
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", ТекЗначениеСтрока, , ТекстОшибки, Ложь);
					// rarus tenkam 23.09.2019 mantis 14576 --- 				
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Установленный тахограф", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "827b6349-ebe4-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.УстановленныйТахограф.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//Установим реквизит СрокУстранениеНедостатковДни
			Если СтруктураПараметров.Свойство("СрокУстраненияНедостатковДоп") И ЗначениеЗаполнено(СтруктураПараметров.СрокУстраненияНедостатковДоп) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.СрокУстраненияНедостатковДни.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Число", СтруктураПараметров.СрокУстраненияНедостатковДоп, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Срок устранения недостатков дни", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "827b6348-ebe4-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.СрокУстраненияНедостатковДни.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//Установим реквизит СрокУстраненияНедостатковДата
			// Rarus tenkam 10.11.2021 mantis 18493 +++
			//Если СтруктураПараметров.Свойство("КрайняяДатаУстраненияНедостатков") И ЗначениеЗаполнено(СтруктураПараметров.КрайняяДатаУстраненияНедостатков) Тогда
			Если СтруктураПараметров.Свойство("КрайняяДатаУстраненияНедостатков") И СтруктураПараметров.КрайняяДатаУстраненияНедостатков <> Неопределено Тогда
			// Rarus tenkam 10.11.2021 mantis 18493 ---
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.СрокУстраненияНедостатковДата.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// Rarus tenkam 10.11.2021 mantis 18493 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.КрайняяДатаУстраненияНедостатков, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.КрайняяДатаУстраненияНедостатков, , ТекстОшибки, Истина);
					// Rarus tenkam 10.11.2021 mantis 18493 ---
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Срок устранения недостатков дата", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "827b6341-ebe4-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.СрокУстраненияНедостатковДата.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//Установим реквизит МодельПТС
			Если СтруктураПараметров.Свойство("МодельПТС") И ЗначениеЗаполнено(СтруктураПараметров.МодельПТС) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.МодельПоПТС.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// rarus tenkam 23.09.2019 mantis 14576 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.МодельПТС, , ТекстОшибки, Ложь);
					Если ТипЗнч(СтруктураПараметров.МодельПТС) <> Тип("Строка") Тогда
						ТекЗначениеСтрока = СтруктураПараметров.МодельПТС.Наименование;
					Иначе 
						ТекЗначениеСтрока = СтруктураПараметров.МодельПТС;
					КонецЕсли;
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", ТекЗначениеСтрока, , ТекстОшибки, Ложь);
					// rarus tenkam 23.09.2019 mantis 14576 --- 				
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Модель по ПТС", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "da15a102-ed53-11e6-80f1-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.МодельПоПТС.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;

			//Поместим список в объект
			ЗаполнитьСвойствоXDTO(ТипДанныеТСТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ДанныеТранспортныхСредств", ТипДанныеТСТип, Истина, ТекстОшибки, Ложь);
		ИначеЕсли ИмяМетодаWS = "SetProductPlace" Тогда
			ТипМестаХранения = ПолучитьОбъектТипаCML("ДанныеМестХраненияТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипМестаХранения, "ТипМестаХранения", СтруктураПараметров.ТипМестаХранения, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипМестаХранения, "GUIDИсточника", СтруктураПараметров.GUIDИсточника, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			
			Если СтруктураПараметров.Свойство("GUID") Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("Описание") Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Описание", СтруктураПараметров.Описание, , ТекстОшибки);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("Адрес") Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Адрес", СтруктураПараметров.Адрес, , ТекстОшибки);
			КонецЕсли;
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ДанныеМестХранения", ТипМестаХранения, Истина, ТекстОшибки, Ложь);		

		ИначеЕсли ИмяМетодаWS = "SendProductActivityEvent" Тогда
			ТипСобытиеПродукта = ПолучитьОбъектТипаCML("СобытиеПродуктаТип", ПространствоИменСхемы);
			//rarus tenkam 28.06.2017 mantis 9065 +++
			//ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "ВидСобытия", "ИзменениеМестонахождения", , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "ВидСобытия", СтруктураПараметров.ВидСобытия, , ТекстОшибки);
			//rarus tenkam 28.06.2017 mantis 9065 ---
			ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "ДатаСобытия", СтруктураПараметров.ДатаСобытия, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "GuidСобытияВВнешнейСистеме", СтруктураПараметров.GuidСобытияВВнешнейСистеме, , ТекстОшибки);
			
			//rarus tenkam 27.09.2017 mantis 10831 +++
			Если СтруктураПараметров.Свойство("GUIDСобытия") Тогда
				ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "GUIDСобытия", СтруктураПараметров.GUIDСобытия, , ТекстОшибки);
			КонецЕсли;
			//rarus tenkam 27.09.2017 mantis 10831 ---
			
			Если СтруктураПараметров.Свойство("ПричинаСобытия") Тогда
				ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "ПричинаСобытия", СтруктураПараметров.ПричинаСобытия, , ТекстОшибки);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ТекстСобытия") Тогда
				ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "ТекстСобытия", СтруктураПараметров.ТекстСобытия, , ТекстОшибки);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("Пользователь") Тогда
				ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "Пользователь", СтруктураПараметров.Пользователь, , ТекстОшибки);
			Иначе
				ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "Пользователь", ПользователиКлиентСервер.ТекущийПользователь().Наименование, , ТекстОшибки);	
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ТСGUID") Тогда
				ТипТСТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваТранспортныхСредствТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипТСТип, "GUID", СтруктураПараметров.ТСGUID, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "ТранспортноеСредство", ТипТСТип, , ТекстОшибки);
			КонецЕсли;
			
			//rarus tenkam 28.06.2017 mantis 9065 +++
			Если  СтруктураПараметров.ВидСобытия = "ИзменениеМестонахождения" ИЛИ 
				СтруктураПараметров.ВидСобытия = "РегистрацияПлановойДатыПрихода" Тогда 	//rarus tenkam 06.10.2017 mantis 10831 +
				//rarus tenkam 28.06.2017 mantis 9065 ---
				ТипМестаХранения  = ПолучитьОбъектТипаCML("ОсновныеСвойстваМестХраненияТип", ПространствоИменСхемы);
				
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Наименование", СтруктураПараметров.НаименованиеМестаХранения, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "ТипМестаХранения", СтруктураПараметров.ТипМестаХранения, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "GUIDИсточника", СтруктураПараметров.GUIDИсточника, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Код", СтруктураПараметров.КодИсточника, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Недействительный", СтруктураПараметров.Недействительный, , ТекстОшибки); //rarus pechek 07.05.2020 mantis 15981
				
				Если СтруктураПараметров.Свойство("GUIDИсточника1БД") Тогда
					ЗаполнитьСвойствоXDTO(ТипМестаХранения, "GUID", СтруктураПараметров.GUIDИсточника1БД, , ТекстОшибки);
				КонецЕсли;
				
				Если СтруктураПараметров.Свойство("Описание") Тогда
					ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Описание", СтруктураПараметров.Описание, , ТекстОшибки);
				КонецЕсли;
				
				Если СтруктураПараметров.Свойство("Адрес") Тогда
					ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Адрес", СтруктураПараметров.Адрес, , ТекстОшибки);
				КонецЕсли;
				ТипОбъектыСобытийПродуктов = ПолучитьОбъектТипаCML("ОбъектыСобытийПродуктов", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипОбъектыСобытийПродуктов, "Местонахождение", ТипМестаХранения, , ТекстОшибки);
				
				ЗаполнитьСвойствоXDTO(ТипСобытиеПродукта, "ОбъектСобытия", ТипОбъектыСобытийПродуктов, , ТекстОшибки);
			КонецЕсли;	//rarus tenkam 28.06.2017 mantis 9065 + 
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "СобытиеПродукта", ТипСобытиеПродукта, Истина, ТекстОшибки, Ложь);
		//rarus tenkam 09.01.2018 mantis 11952 +++
		ИначеЕсли ИмяМетодаWS = "StoreInfo" Тогда
			ТипPartInfoType = ПолучитьОбъектТипаCML("PartInfoType", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипPartInfoType, "pCatNumber", СтруктураПараметров.pCatNumber, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "PartInfo", ТипPartInfoType, Истина, ТекстОшибки, Ложь);
		//rarus tenkam 09.01.2017 mantis 11952 ---
		
		//rarus tenkam 16.02.2018 mantis 9428 +++
		ИначеЕсли ИмяМетодаWS = "CreateAppWO" Тогда
			ТипЗаявкаНаРаботы = ПолучитьОбъектТипаCML("ЗаявкаНаРаботыТип", ПространствоИменСхемы);
			
			ТипОсновныеСвойстваДилеровТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваДилеровТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваДилеровТип, "GUID", СтруктураПараметров.ДилерGUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗаявкаНаРаботы, "Дилер", ТипОсновныеСвойстваДилеровТип, , ТекстОшибки);
			
			ТипОсновныеСвойстваКонтрагентовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваКонтрагентовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваКонтрагентовТип, "GUID", СтруктураПараметров.ЗаказчикGUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗаявкаНаРаботы, "Заказчик", ТипОсновныеСвойстваКонтрагентовТип, , ТекстОшибки);
			
			ТипОсновныеСвойстваКонтрагентовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваКонтрагентовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваКонтрагентовТип, "GUID", СтруктураПараметров.ПлательщикGUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗаявкаНаРаботы, "Плательщик", ТипОсновныеСвойстваКонтрагентовТип, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипЗаявкаНаРаботы, "DesiredCompletionDate", СтруктураПараметров.ПлановаяДатаВыполнения, , ТекстОшибки);
			
			ТипОсновныеСвойстваПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваПродуктовТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваПродуктовТип, "GUID", СтруктураПараметров.ПродуктGUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗаявкаНаРаботы, "Продукт", ТипОсновныеСвойстваПродуктовТип, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипЗаявкаНаРаботы, "ПричинаОбращения", СтруктураПараметров.ПричинаОбращения, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗаявкаНаРаботы", ТипЗаявкаНаРаботы, Истина, ТекстОшибки, Ложь);		
			
		//rarus tenkam 16.02.2018 mantis 9428 ---
		ИначеЕсли ИмяМетодаWS = "GetAdditionalProperty" Тогда //rarus bonmak 04.09.2019 14442 ++
			//ТипЗапросДополнительныхРеквизитовТип
			ТипЗапросДополнительныхРеквизитовТип = ПолучитьОбъектТипаCML("ЗапросДополнительныхРеквизитовТип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("GUID") Тогда
				Если ЗначениеЗаполнено(СтруктураПараметров.GUID) Тогда
					ЗаполнитьСвойствоXDTO(ТипЗапросДополнительныхРеквизитовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросДополнительныхРеквизитов", ТипЗапросДополнительныхРеквизитовТип, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 04.09.2019 14442 --
		ИначеЕсли ИмяМетодаWS = "GetListOfOptions" Тогда //rarus bonmak 24.09.2019 14177 ++
			//ТипЗапросОпцийТип
			ТипЗапросОпцийТип = ПолучитьОбъектТипаCML("ЗапросОпцийТип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("GUID") Тогда
				Если ЗначениеЗаполнено(СтруктураПараметров.GUID) Тогда
					ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			//ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			//ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "Код", СтруктураПараметров.Код, , ТекстОшибки);
			//ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			//ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки);
			
			// rarus agar 25.01.2022 18594 ++
			Если СтруктураПараметров.Свойство("ВидПродукта") И ЗначениеЗаполнено(СтруктураПараметров.ВидПродукта) Тогда
				ОсновныеСвойстваВидовПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваВидовПродуктовТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ОсновныеСвойстваВидовПродуктовТип, "GUID", СтруктураПараметров.ВидПродукта, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "ВидПродукта", ОсновныеСвойстваВидовПродуктовТип, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("Наименование") И ЗначениеЗаполнено(СтруктураПараметров.Наименование) Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "Наименование", XMLСтрока(СтруктураПараметров.Наименование), Истина, ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("НаименованиеАнглийскоеОпции") И ЗначениеЗаполнено(СтруктураПараметров.НаименованиеАнглийскоеОпции) Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "НаименованиеАнглийскоеОпции", XMLСтрока(СтруктураПараметров.НаименованиеАнглийскоеОпции), Истина, ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("КодСемействаОпций") И ЗначениеЗаполнено(СтруктураПараметров.КодСемействаОпций) Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "КодСемействаОпций", XMLСтрока(СтруктураПараметров.КодСемействаОпций), Истина, ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("НаименованиеСемействаОпций") И ЗначениеЗаполнено(СтруктураПараметров.НаименованиеСемействаОпций) Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "НаименованиеСемействаОпций", XMLСтрока(СтруктураПараметров.НаименованиеСемействаОпций), Истина, ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("НаименованиеАнглийскоеСемействаОпций") И ЗначениеЗаполнено(СтруктураПараметров.НаименованиеАнглийскоеСемействаОпций) Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "НаименованиеАнглийскоеСемействаОпций", XMLСтрока(СтруктураПараметров.НаименованиеАнглийскоеСемействаОпций), Истина, ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("ИспользоватьВСпецификации") И ЗначениеЗаполнено(СтруктураПараметров.ИспользоватьВСпецификации) Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "ИспользоватьВСпецификации", XMLСтрока(Булево(СтруктураПараметров.ИспользоватьВСпецификации)), , ТекстОшибки, Ложь);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("ОсновнаяОпция") И ЗначениеЗаполнено(СтруктураПараметров.ОсновнаяОпция) Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросОпцийТип, "ОсновнаяОпция", XMLСтрока(Булево(СтруктураПараметров.ОсновнаяОпция)), Истина, ТекстОшибки);
			КонецЕсли;
			// rarus agar 25.01.2022 18594 --
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОпций", ТипЗапросОпцийТип, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 24.09.2019 14177 --
		ИначеЕсли ИмяМетодаWS = "GetListOfSpecificationType" Тогда //rarus bonmak 24.09.2019 14177 ++
			//не требует передачи входных параметров
			//rarus bonmak 24.09.2019 14177 --
		ИначеЕсли ИмяМетодаWS = "SetLocation" Тогда //rarus bonmak 02.12.2019 14375 ++			
			ТипМестаХранения = ПолучитьОбъектТипаCML("ДанныеМестХраненияТип", ПространствоИменСхемы);
			Если СтруктураПараметров.Свойство("НаименованиеМестаХранения") Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Наименование", СтруктураПараметров.НаименованиеМестаХранения, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("ТипМестаХранения") Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "ТипМестаХранения", СтруктураПараметров.ТипМестаХранения, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("GUIDИсточника") Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "GUIDИсточника", СтруктураПараметров.GUIDИсточника, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("КодИсточника") Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Код", СтруктураПараметров.КодИсточника, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("DeletionMark") Тогда
				Если СтруктураПараметров.DeletionMark Тогда
					ЗаполнитьСвойствоXDTO(ТипМестаХранения, "DeletionMark", СтруктураПараметров.DeletionMark, , ТекстОшибки, Ложь);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("GUID") И ЗначениеЗаполнено(СтруктураПараметров.GUID) Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("Адрес") И ЗначениеЗаполнено(СтруктураПараметров.Адрес) Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Адрес", СтруктураПараметров.Адрес, , ТекстОшибки);
			КонецЕсли;
			
			//rarus bonmak 15.04.2020 14456 ++
			//Если СтруктураПараметров.Свойство("Контрагент") И ЗначениеЗаполнено(СтруктураПараметров.Контрагент) Тогда
			//	Если ЗначениеЗаполнено(СтруктураПараметров.Контрагент.IDExternalSystem) Тогда
			//		ТипОсновныеСвойстваКонтрагентовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваКонтрагентовТип", ПространствоИменСхемы);
			//		ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваКонтрагентовТип, "GUID", СтруктураПараметров.Контрагент.IDExternalSystem, , ТекстОшибки);
			//		ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Контрагент", ТипОсновныеСвойстваКонтрагентовТип, , ТекстОшибки);
			//	КонецЕсли;	
			//КонецЕсли;
			//rarus bonmak 15.04.2020 14456 --
			
			//rarus pechek 06.05.2020 mantis 15981 +++
			Если СтруктураПараметров.Свойство("Недействительный") Тогда
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "Недействительный", СтруктураПараметров.Недействительный, , ТекстОшибки, Ложь);	
			КонецЕсли;
			//rarus pechek 06.05.2020 mantis 15981 ---   
			
			//место отгрузки
			Если СтруктураПараметров.Свойство("ИсходныйПункт") И ЗначениеЗаполнено(СтруктураПараметров.ИсходныйПункт) Тогда
				МестоОтгрузки = СтруктураПараметров.ИсходныйПункт;
				ТипОсновныеСвойстваМестХраненияОтгрузки  = ПолучитьОбъектТипаCML("ОсновныеСвойстваМестХраненияТип", ПространствоИменСхемы);
				Если ЗначениеЗаполнено(МестоОтгрузки.IDExternalSystem) Тогда
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияОтгрузки, "GUID", МестоОтгрузки.IDExternalSystem, , ТекстОшибки);
				КонецЕсли;
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияОтгрузки, "Код", МестоОтгрузки.Код, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияОтгрузки, "Наименование", МестоОтгрузки.Наименование, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияОтгрузки, "GUIDИсточника", Строка(МестоОтгрузки.УникальныйИдентификатор()), , ТекстОшибки);
				фТипМестаХранения = Scan_ВспомогательныеФункцииСервер.ПолучитьТипМестаХранения(МестоОтгрузки);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияОтгрузки, "ТипМестаХранения", фТипМестаХранения, , ТекстОшибки);	
				Адрес = Scan_ВспомогательныеФункцииСервер.ПолучитьАдресМестаХранения(МестоОтгрузки);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияОтгрузки, "Адрес", Адрес, , ТекстОшибки);
				
				//rarus bonmak 15.04.2020 14456 ++
				//Если ЗначениеЗаполнено(МестоОтгрузки.Контрагент.IDExternalSystem) Тогда
				//	ТипОсновныеСвойстваКонтрагентовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваКонтрагентовТип", ПространствоИменСхемы);
				//	ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваКонтрагентовТип, "GUID", МестоОтгрузки.Контрагент.IDExternalSystem, , ТекстОшибки);
				//	ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияОтгрузки, "Контрагент", ТипОсновныеСвойстваКонтрагентовТип, , ТекстОшибки);
				//КонецЕсли;
				//rarus bonmak 15.04.2020 14456 --
				
				//rarus pechek 06.05.2020 mantis 15981 +++
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияОтгрузки, "Недействительный", МестоОтгрузки.Недействительный, , ТекстОшибки, Ложь);	
				//rarus pechek 06.05.2020 mantis 15981 ---
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "МестоОтгрузки", ТипОсновныеСвойстваМестХраненияОтгрузки, , ТекстОшибки);	
			КонецЕсли;
			//место доставки
			Если СтруктураПараметров.Свойство("КонечныйПункт") И ЗначениеЗаполнено(СтруктураПараметров.КонечныйПункт) Тогда
				МестоДоставки = СтруктураПараметров.КонечныйПункт;
				ТипОсновныеСвойстваМестХраненияДоставки  = ПолучитьОбъектТипаCML("ОсновныеСвойстваМестХраненияТип", ПространствоИменСхемы);
				Если ЗначениеЗаполнено(МестоДоставки.IDExternalSystem) Тогда
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияДоставки, "GUID", МестоДоставки.IDExternalSystem, , ТекстОшибки);
				КонецЕсли;
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияДоставки, "Код", МестоДоставки.Код, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияДоставки, "Наименование", МестоДоставки.Наименование, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияДоставки, "GUIDИсточника", Строка(МестоДоставки.УникальныйИдентификатор()), , ТекстОшибки);
				фТипМестаХранения = Scan_ВспомогательныеФункцииСервер.ПолучитьТипМестаХранения(МестоДоставки);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияДоставки, "ТипМестаХранения", фТипМестаХранения, , ТекстОшибки);	
				Адрес = Scan_ВспомогательныеФункцииСервер.ПолучитьАдресМестаХранения(МестоДоставки);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияДоставки, "Адрес", Адрес, , ТекстОшибки);
				
				//rarus bonmak 15.04.2020 14456 ++
				//Если ЗначениеЗаполнено(МестоДоставки.Контрагент.IDExternalSystem) Тогда
				//	ТипОсновныеСвойстваКонтрагентовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваКонтрагентовТип", ПространствоИменСхемы);
				//	ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваКонтрагентовТип, "GUID", МестоДоставки.Контрагент.IDExternalSystem, , ТекстОшибки);
				//	ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияДоставки, "Контрагент", ТипОсновныеСвойстваКонтрагентовТип, , ТекстОшибки);
				//КонецЕсли;
				//rarus bonmak 15.04.2020 14456 --
				
				//rarus pechek 06.05.2020 mantis 15981 +++
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваМестХраненияДоставки, "Недействительный", МестоДоставки.Недействительный, , ТекстОшибки,Ложь);	
				//rarus pechek 06.05.2020 mantis 15981 ---
				ЗаполнитьСвойствоXDTO(ТипМестаХранения, "МестоДоставки", ТипОсновныеСвойстваМестХраненияДоставки, , ТекстОшибки);	
			КонецЕсли;
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ДанныеМестХранения", ТипМестаХранения, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 02.12.2019 14375 --
		ИначеЕсли ИмяМетодаWS = "GetUpdatesList" Тогда
			//rarus bonmak 09.01.2020 15279 ++
			//UpdateInfoType
			ТипUpdateInfoType = ПолучитьОбъектТипаCML("UpdateInfoType", ПространствоИменСхемы);			
			ЗаполнитьСвойствоXDTO(ТипUpdateInfoType, "UpdateSubject", СтруктураПараметров.UpdateSubject, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "UpdateInfo", ТипUpdateInfoType, Истина, ТекстОшибки, Ложь);		
			//rarus bonmak 09.01.2020 15279 --
		ИначеЕсли ИмяМетодаWS = "OpenExchangeSession" Тогда
			//rarus bonmak 09.01.2020 15279 ++
			ТипSessionInfoType = ПолучитьОбъектТипаCML("SessionInfoType", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionGUID", XMLСтрока(СтруктураПараметров.SessionGUID), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionStartDate", XMLСтрока(СтруктураПараметров.SessionStartDate), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "PacketSize", XMLСтрока(СтруктураПараметров.PacketSize), Истина, ТекстОшибки);		
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionAuthor", XMLСтрока(Строка(СтруктураПараметров.SessionAuthor)), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionSize", XMLСтрока(СтруктураПараметров.SessionSize), Истина, ТекстОшибки);
			
			//rarus bonmak 27.07.2020 16140 ++
			Если СтруктураПараметров.Свойство("UpdateSubject") И ЗначениеЗаполнено(СтруктураПараметров.UpdateSubject) Тогда							
	
				типSessionSubjects = ФабрикаXDTO.Тип(ПространствоИменСхемы,"SessionInfoType").Свойства.Получить("SessionSubjects").Тип;
				ОбъектSessionSubjects = ПолучитьОбъектТипаCML(типSessionSubjects, ПространствоИменСхемы);
				
				ТипUpdateInfoType = ПолучитьОбъектТипаCML("UpdateInfoType", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипUpdateInfoType, "UpdateSubject", XMLСтрока(СтруктураПараметров.UpdateSubject), Истина, ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипUpdateInfoType, "UpdateSubjectGUID", XMLСтрока(СтруктураПараметров.UpdateSubjectGUID), Истина, ТекстОшибки);
	            ДобавитьЭлементВСписокXDTO(ОбъектSessionSubjects,"SessionSubject", ТипUpdateInfoType, ТекстОшибки);
				
				ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionSubjects", ОбъектSessionSubjects, Истина, ТекстОшибки);		
			КонецЕсли;
			//rarus bonmak 27.07.2020 16140 --
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "SessionInfo", ТипSessionInfoType, Истина, ТекстОшибки);		
			//rarus bonmak 09.01.2020 15279 --
		ИначеЕсли ИмяМетодаWS = "CloseExchangeSession" Тогда
			//rarus bonmak 09.01.2020 15279 ++
			ТипSessionInfoType = ПолучитьОбъектТипаCML("SessionInfoType", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionGUID", XMLСтрока(СтруктураПараметров.SessionGUID), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionStartDate", XMLСтрока(СтруктураПараметров.SessionStartDate), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "PacketSize", XMLСтрока(СтруктураПараметров.PacketSize), Истина, ТекстОшибки);		
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionSize", XMLСтрока(СтруктураПараметров.SessionSize), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "SessionInfo", ТипSessionInfoType, Истина, ТекстОшибки);		
			//rarus bonmak 09.01.2020 15279 --
		ИначеЕсли ИмяМетодаWS = "SetTaskOfExecution" Тогда
			//rarus bonmak 09.01.2020 15279 ++
			ТипЗапросTaskOfExecutionType = ПолучитьОбъектТипаCML("TaskOfExecutionType", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросTaskOfExecutionType, "GUID", XMLСтрока(СтруктураПараметров.GUID), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросTaskOfExecutionType, "РезультатВыполнения", XMLСтрока(СтруктураПараметров.РезультатВыполнения), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросTaskOfExecutionType, "СтатусЗадачи", XMLСтрока(СтруктураПараметров.СтатусЗадачи), Истина, ТекстОшибки);
			Если СтруктураПараметров.СтатусЗадачи = Перечисления.Scan_СтатусыЗадач.Выполнена Тогда 
				ЗаполнитьСвойствоXDTO(ТипЗапросTaskOfExecutionType, "ДатаВыполнения", XMLСтрока(СтруктураПараметров.ДатаВыполнения), Истина, ТекстОшибки);
			Иначе
				ЗаполнитьСвойствоXDTO(ТипЗапросTaskOfExecutionType, "Дата", XMLСтрока(СтруктураПараметров.Дата), Истина, ТекстОшибки);
			КонецЕсли;
						
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "TaskOfExecution", ТипЗапросTaskOfExecutionType, Истина, ТекстОшибки);
			//rarus bonmak 09.01.2020 15279 --
		ИначеЕсли ИмяМетодаWS = "GetTaskOfExecution" Тогда
			//rarus bonmak 09.01.2020 15279 ++
			ТипSessionInfoType = ПолучитьОбъектТипаCML("SessionInfoType", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionGUID", XMLСтрока(СтруктураПараметров.SessionGUID), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionStartDate", XMLСтрока(СтруктураПараметров.SessionStartDate), Истина, ТекстОшибки); 
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "PacketSize", XMLСтрока(СтруктураПараметров.PacketSize), Истина, ТекстОшибки); 					
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionSize", XMLСтрока(СтруктураПараметров.SessionSize), Истина, ТекстОшибки); 
			
			ТипUpdateInfoType = ПолучитьОбъектТипаCML("UpdateInfoType", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипUpdateInfoType, "UpdateSubjectGUID", XMLСтрока(СтруктураПараметров.UpdateSubjectGUID), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипSessionInfoType, "SessionSubject", ТипUpdateInfoType, Истина, ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "SessionInfo", ТипSessionInfoType, Истина, ТекстОшибки);
			//rarus bonmak 09.01.2020 15279 --
		ИначеЕсли ИмяМетодаWS = "GetListOfCompanyType" Тогда //rarus BProg_Dekin 18.02.2020 mantis 0014456 +-
			//не требует передачи входных параметров
		ИначеЕсли ИмяМетодаWS = "GetListOfCompanyGroup" Тогда //rarus BProg_Dekin 18.02.2020 mantis 0014456 +-
			// Rarus tenkam 01.12.2021 mantis 18550 +++  
			ТипЗапросГруппКомпаний = ПолучитьОбъектТипаCML("ЗапросГруппКомпанийТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросГруппКомпаний", ТипЗапросГруппКомпаний, Истина, ТекстОшибки, Истина);
			// Rarus tenkam 01.12.2021 mantis 18550 ---
		ИначеЕсли ИмяМетодаWS = "GetListOfDealerType" Тогда //rarus BProg_Dekin 18.02.2020 mantis 0014456 +-
			//не требует передачи входных параметров
		ИначеЕсли ИмяМетодаWS = "GetListOfCooperationType" Тогда//rarus BProg_Dekin 18.02.2020 mantis 0014456 +- 
			//не требует передачи входных параметров
		ИначеЕсли ИмяМетодаWS = "GetListOfSpecificationViewType" Тогда //rarus BProg_Dekin 16.03.2020 mantis 0014177 +- 
			//не требует передачи входных параметров
		ИначеЕсли ИмяМетодаWS = "GetListOfSpecificationView" Тогда //rarus BProg_Dekin 16.03.2020 mantis 0014177 +- 
			ЗапросПредставленийСпецификацийТип = ПолучитьОбъектТипаCML("ЗапросПредставленийСпецификацийТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросПредставленийСпецификаций", ЗапросПредставленийСпецификацийТип, Истина, ТекстОшибки);
		ИначеЕсли ИмяМетодаWS = "GetSpecificationView" Тогда //rarus BProg_Dekin 16.03.2020 mantis 0014177 +-
			ЗапросОбъектаБазовыйТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);	
			ЗаполнитьСвойствоXDTO(ЗапросОбъектаБазовыйТип, "GUID", XMLСтрока(СтруктураПараметров.GUID), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ЗапросОбъектаБазовыйТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ЗапросОбъектаБазовыйТип, Истина, ТекстОшибки);
		ИначеЕсли ИмяМетодаWS = "GetSpecificationVersion" Тогда //rarus bonmak 20.03.2020 14177 ++
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 20.03.2020 14177 --
		//rarus ozhnik 15888 10.06.2020 + 
		ИначеЕсли ИмяМетодаWS = "GetListOfProductTypeSPORT" Тогда
			ТипЗапросСпискаТиповПродуктаКПSPORTТип = ПолучитьОбъектТипаCML("ЗапросProductTypeSPORTТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросProductTypeSPORT", ТипЗапросСпискаТиповПродуктаКПSPORTТип, Истина, ТекстОшибки);
			
		ИначеЕсли ИмяМетодаWS = "GetListOfQuotation" Тогда 
			ЗапросСпискаКПТип = ПолучитьОбъектТипаCML("ЗапросСпискаQuotationТип", ПространствоИменСхемы);	
			ЗаполнитьСвойствоXDTO(ЗапросСпискаКПТип, "ЛогинПорталаПользователя", XMLСтрока(СтруктураПараметров.ЛогинПорталаПользователя), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ЗапросСпискаКПТип, "QuotationNumber", XMLСтрока(СтруктураПараметров.QuotationNumber), Истина, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросСпискаQuotation ", ЗапросСпискаКПТип, Истина, ТекстОшибки);
		ИначеЕсли ИмяМетодаWS = "GetQuotation" Тогда 
			ТипЗапросОбъектаТип = ПолучитьОбъектТипаCML("ЗапросОбъектаБазовыйТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипЗапросОбъектаТип, "ВидРеквизитов", СтруктураПараметров.ВидРеквизитов, , ТекстОшибки); //rarus vikhle 11.10.2021 mt 18270
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросОбъекта", ТипЗапросОбъектаТип, Истина, ТекстОшибки);
		//rarus ozhnik 15888 10.06.2020 -
		//rarus ozhnik 15888 18.06.2020 + 
		//ИначеЕсли ИмяМетодаWS = "GetListOfSpecifications" Тогда
		//	ЗапросСпецификацийПродуктовТип = ПолучитьОбъектТипаCML("ЗапросСпецификацийПродуктовТип", ПространствоИменСхемы);
		//	
		//	//ЗаполнитьСвойствоXDTO(ЗапросСпецификацийПродуктовТип, "ProductID", СтруктураПараметров.ProductID , Истина, ТекстОшибки); 			
		//	ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросСпецификацийПродуктов", ЗапросСпецификацийПродуктовТип, Истина, ТекстОшибки);
		//rarus ozhnik 15888 18.06.2020 -
		ИначеЕсли ИмяМетодаWS = "CreateProduct" Тогда //rarus bonmak 18.05.2020 14375 ++ 
			ТипДанныеПродуктаТип = ПолучитьОбъектТипаCML("ДанныеПродуктаТип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("МаркаПродукта") И ЗначениеЗаполнено(СтруктураПараметров.МаркаПродукта) Тогда				
				ОсновныеСвойстваМарокПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваМарокПродуктовТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ОсновныеСвойстваМарокПродуктовТип, "GUID", СтруктураПараметров.МаркаПродукта.IDExternalSystem, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "Марка", ОсновныеСвойстваМарокПродуктовТип, , ТекстОшибки);
			КонецЕсли;

			Если СтруктураПараметров.Свойство("ТипПродукта") И ЗначениеЗаполнено(СтруктураПараметров.ТипПродукта) Тогда				
				ОсновныеСвойстваТиповПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваТиповПродуктовТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ОсновныеСвойстваТиповПродуктовТип, "GUID", СтруктураПараметров.ТипПродукта.IDExternalSystem, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "ТипПродукта", ОсновныеСвойстваТиповПродуктовТип, , ТекстОшибки);
				
				ОсновныеСвойстваВидовПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваВидовПродуктовТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ОсновныеСвойстваВидовПродуктовТип, "GUID", СтруктураПараметров.ТипПродукта.ВидПродукта.IDExternalSystem, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "ВидПродукта", ОсновныеСвойстваВидовПродуктовТип, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("НомерИзделия") И ЗначениеЗаполнено(СтруктураПараметров.НомерИзделия) Тогда				
				ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "НомерПродукта", СтруктураПараметров.НомерИзделия, , ТекстОшибки);
			КонецЕсли;
			
			//rarus agar 02.02.2021 17132 ++
			Если СтруктураПараметров.Свойство("Наименование") И ЗначениеЗаполнено(СтруктураПараметров.Наименование) Тогда
				ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			КонецЕсли;
			//rarus agar 02.02.2021 17132 --
			
			// Rarus tenkam 31.03.2022 mantis 19047 +++
			// ДОПОЛНИТЕЛЬНЫЕ РЕКВИЗИТЫ   			
			
			//Получим список доп. реквизитов
			ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);
			                  			
			Если СтруктураПараметров.Свойство("БУ") Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.БУ.ИспользуетсяВOFMSДляОтправки Тогда
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);  						
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.БУ, , ТекстОшибки, Ложь);   						
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);						
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.БУ.IDExternalSystem, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("TLMS") Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.TLMS.ИспользуетсяВOFMSДляОтправки Тогда
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);  						
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.TLMS, , ТекстОшибки, Ложь);   						
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);						
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.TLMS.IDExternalSystem, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;    					
			КонецЕсли;        			
			
			Если ТипЗначенияСвойствСписок.СписокЗначенийСвойств.Количество() <> 0 Тогда 
				//Поместим список в объект
				ЗаполнитьСвойствоXDTO(ТипДанныеПродуктаТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);
			КонецЕсли;           			
			// Rarus tenkam 31.03.2022 mantis 19047 ---
						
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ДанныеПродукта", ТипДанныеПродуктаТип, Истина, ТекстОшибки, Ложь);
			//rarus bonmak 18.05.2020 14375 --
		// rarus tenkam 23.09.2020 mantis 16181 +++
		ИначеЕсли ИмяМетодаWS = "CreateSOP" Тогда
			ТипДанныеСОППродуктовТип = ПолучитьОбъектТипаCML("ДанныеСОППродуктовТип", ПространствоИменСхемы);
			
			//ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "НомерДоговора", СтруктураПараметров.НомерДоговора, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "Дата", СтруктураПараметров.Дата, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "ВидДоговора", СтруктураПараметров.ВидДоговора, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "GuidИсточника", СтруктураПараметров.GuidИсточника, , ТекстОшибки);
			
			ТипОсновныеСвойстваДилеровТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваДилеровТип", ПространствоИменСхемы);
			ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваДилеровТип, "GUID", СтруктураПараметров.ДилерGUID, , ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "Дилер", ТипОсновныеСвойстваДилеровТип, , ТекстОшибки);
			
			// ТЧ ПРОДУКТЫ
			//Получим список продуктов
			ТипПродуктыСписок = ПолучитьОбъектТипаCML("СписокЭлементовСОПТип", ПространствоИменСхемы);
			
			Для Каждого ТекСтрока ИЗ СтруктураПараметров.Продукты Цикл
				//Получим элемент списка
				ТипПродуктСОП = ПолучитьОбъектТипаCML("ЭлементСОПБазовыйТип", ПространствоИменСхемы);
				
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СпециальныеУсловия", ТекСтрока.СпециальныеУсловия, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СуммаСкидки", ТекСтрока.СуммаСкидки, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "ПроцентДрайва", ТекСтрока.ПроцентДрайва, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "Количество", ТекСтрока.Количество, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "ЦенаПродажи", ТекСтрока.ЦенаПродажи, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СуммаПродажи", ТекСтрока.СуммаПродажи, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СуммаНДС", ТекСтрока.СуммаНДС, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СрокПоставки", ТекСтрока.СрокПоставки, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "ЦенаЗакупки", ТекСтрока.ЦенаЗакупки, , ТекстОшибки);//rarus vikhle 01.02.2021 mt 17179
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "ДатаПерерасчета", ТекСтрока.ДатаПерерасчета, , ТекстОшибки); // rarus tenkam 05.04.2021 mantis 17419 +
				
				ТипОсновныеСвойстваПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваПродуктовТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваПродуктовТип, "GUID", ТекСтрока.ПродуктGUID, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "Продукт", ТипОсновныеСвойстваПродуктовТип, , ТекстОшибки);
			
				ДобавитьЭлементВСписокXDTO(ТипПродуктыСписок,"ПродуктСОП", ТипПродуктСОП, ТекстОшибки);
			КонецЦикла;	
			
			//Поместим список продуктов в объект
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "Продукты", ТипПродуктыСписок, , ТекстОшибки);
			
			//// ТЧ УСЛОВИЯ ОПЛАТЫ
			
			Для Каждого ТекСтрока ИЗ СтруктураПараметров.УсловияОплаты Цикл
				ТипУсловиеОплатыСОПТип = ПолучитьОбъектТипаCML("УсловиеОплатыСОПТип", ПространствоИменСхемы);
				
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "ВидОплаты", ТекСтрока.ВидОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "Сумма", ТекСтрока.Сумма, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "Процент", ТекСтрока.Процент, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "ДатаОплаты", ТекСтрока.ДатаОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "РасчетДатыОплаты", ТекСтрока.РасчетДатыОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "СрокВДнях", ТекСтрока.СрокВДнях, , ТекстОшибки);
						
				//ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "УсловияОплаты", ТипУсловиеОплатыСОПТип, , ТекстОшибки);			
				ДобавитьЭлементВСписокXDTO(ТипДанныеСОППродуктовТип,"УсловияОплаты", ТипУсловиеОплатыСОПТип, ТекстОшибки);	
			КонецЦикла;
			
			//rarus vikhle 29.12.2020 mt 17026 +++
			//ТЧ ГРАФИК ПЛАТЕЖЕЙ
			Для Каждого ТекСтрока ИЗ СтруктураПараметров.ГрафикПлатежей Цикл
				ТипГрафикПлатежейСОПТип = ПолучитьОбъектТипаCML("ГрафикПлатежейСОПТип", ПространствоИменСхемы);
				
				ЗаполнитьСвойствоXDTO(ТипГрафикПлатежейСОПТип, "ВидОплаты", ТекСтрока.ВидОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипГрафикПлатежейСОПТип, "ДатаОплаты", ТекСтрока.ДатаОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипГрафикПлатежейСОПТип, "Сумма", ТекСтрока.Сумма, , ТекстОшибки);
										
				ДобавитьЭлементВСписокXDTO(ТипДанныеСОППродуктовТип,"ГрафикПлатежей", ТипГрафикПлатежейСОПТип, ТекстОшибки);	
			КонецЦикла;
			//rarus vikhle 29.12.2020 mt 17026 ---
			
			// ДОПОЛНИТЕЛЬНЫЕ РЕКВИЗИТЫ
			
			//Получим список доп. реквизитов
			ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("ВалютаCode") И ЗначениеЗаполнено(СтруктураПараметров.ВалютаCode) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Валюта.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипВалютыТип = ПолучитьОбъектТипаCML("Валюты", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипВалютыТип, "Code", СтруктураПараметров.ВалютаCode, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипВалютыТип, "Description", СтруктураПараметров.ВалютаDescription, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Валюта", ТипВалютыТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Валюта", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "5175df20-a71b-11e6-80ed-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Валюта.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ПродавецДилераIDПортала") И ЗначениеЗаполнено(СтруктураПараметров.ПродавецДилераIDПортала) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ПродавецДилера.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипДанныеСотрудникаТип = ПолучитьОбъектТипаCML("ДанныеСотрудникаТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "IDПортала", СтруктураПараметров.ПродавецДилераIDПортала, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "ЛогинПортала", СтруктураПараметров.ПродавецДилераЛогинПортала, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Сотрудник", ТипДанныеСотрудникаТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Продавец дилера", , ТекстОшибки, Ложь);
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "a76fea8e-de2c-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);	// rarus tenkam 05.03.2021 mantis 17379 +
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "b14f3036-e18d-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);	// rarus tenkam 05.03.2021 mantis 17379 +
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ПродавецДилера.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("СтатусGUID") И ЗначениеЗаполнено(СтруктураПараметров.СтатусGUID) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Статус.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипОсновныеСвойстваСтатусовОбъектовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваСтатусовОбъектовТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваСтатусовОбъектовТип, "GUID", СтруктураПараметров.СтатусGUID, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Статус", ТипОсновныеСвойстваСтатусовОбъектовТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Статус", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "bd5f639a-6a2f-11e6-80e7-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Статус.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			// rarus tenkam 05.04.2021 mantis 17419 +++
			Если СтруктураПараметров.Свойство("ВалютнаяОговорка") Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ВалютнаяОговорка.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.ВалютнаяОговорка, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Валютная оговорка", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 ++
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "13d35b78-8efa-11eb-910d-00155d81bc54", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f1d-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 --
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ВалютнаяОговорка.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ЗаявкаНаБУПродукты") Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.СОППоБУ.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.ЗаявкаНаБУПродукты, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "СОП по Б/У", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 ++
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "13d35b7a-8efa-11eb-910d-00155d81bc54", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f23-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 --
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.СОППоБУ.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			// rarus tenkam 05.04.2021 mantis 17419 ---
			
			//rarus bonmak 13.01.2021 17041 ++
			//Если СтруктураПараметров.Свойство("СрокОплатыОстатка") И ЗначениеЗаполнено(СтруктураПараметров.СрокОплатыОстатка) Тогда
			//	//Получим элемент списка доп. реквизитов
			//	ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
			//	            				
			//	//Заполним значение
			//	ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
			//	
			//	ЗаполнитьСвойствоXDTO(ТипЗначение, "Число", СтруктураПараметров.СрокОплатыОстатка, , ТекстОшибки, Ложь);
			//	
			//	ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
			//	
			//	//Заполним свойство
			//	ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
			//	ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Срок оплаты остатка", , ТекстОшибки, Ложь);
			//	ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "a76fea8f-de2c-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);
			//	ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
			//	
			//	//Добавим элемент в список
			//	ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
			//КонецЕсли;
			//rarus bonmak 13.01.2021 17041 --
			Если ТипЗначенияСвойствСписок.СписокЗначенийСвойств.Количество() <> 0 Тогда 
				//Поместим список в объект
				ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);
			КонецЕсли;
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ДанныеСОППродуктов", ТипДанныеСОППродуктовТип, Истина, ТекстОшибки);
		
		ИначеЕсли ИмяМетодаWS = "SetSOP" Тогда
			ТипДанныеСОППродуктовТип = ПолучитьОбъектТипаCML("ДанныеСОППродуктовТип", ПространствоИменСхемы);
			
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			
			Если СтруктураПараметров.Свойство("Наименование") И ЗначениеЗаполнено(СтруктураПараметров.Наименование) Тогда
				ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "Наименование", СтруктураПараметров.Наименование, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("НомерДоговора") И ЗначениеЗаполнено(СтруктураПараметров.НомерДоговора) Тогда
				ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "НомерДоговора", СтруктураПараметров.НомерДоговора, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("Дата") И ЗначениеЗаполнено(СтруктураПараметров.Дата) Тогда
				ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "Дата", СтруктураПараметров.Дата, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("ВидДоговора") И ЗначениеЗаполнено(СтруктураПараметров.ВидДоговора) Тогда
				ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "ВидДоговора", СтруктураПараметров.ВидДоговора, , ТекстОшибки);
			КонецЕсли;
			Если СтруктураПараметров.Свойство("GuidИсточника") И ЗначениеЗаполнено(СтруктураПараметров.GuidИсточника) Тогда
				ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "GuidИсточника", СтруктураПараметров.GuidИсточника, , ТекстОшибки);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ДилерGUID") И ЗначениеЗаполнено(СтруктураПараметров.ДилерGUID) Тогда  				
				ТипОсновныеСвойстваДилеровТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваДилеровТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваДилеровТип, "GUID", СтруктураПараметров.ДилерGUID, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "Дилер", ТипОсновныеСвойстваДилеровТип, , ТекстОшибки);
			КонецЕсли;
			
			// ТЧ ПРОДУКТЫ
			//Получим список продуктов
			ТипПродуктыСписок = ПолучитьОбъектТипаCML("СписокЭлементовСОПТип", ПространствоИменСхемы);
			
			Для Каждого ТекСтрока ИЗ СтруктураПараметров.Продукты Цикл
				//Получим элемент списка
				ТипПродуктСОП = ПолучитьОбъектТипаCML("ЭлементСОПБазовыйТип", ПространствоИменСхемы);
				
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СпециальныеУсловия", ТекСтрока.СпециальныеУсловия, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СуммаСкидки", ТекСтрока.СуммаСкидки, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "ПроцентДрайва", ТекСтрока.ПроцентДрайва, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "Количество", ТекСтрока.Количество, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "ЦенаПродажи", ТекСтрока.ЦенаПродажи, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СуммаПродажи", ТекСтрока.СуммаПродажи, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СуммаНДС", ТекСтрока.СуммаНДС, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "СрокПоставки", ТекСтрока.СрокПоставки, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "ЦенаЗакупки", ТекСтрока.ЦенаЗакупки, , ТекстОшибки);//rarus vikhle 01.02.2021 mt 17179
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "ДатаПерерасчета", ТекСтрока.ДатаПерерасчета, , ТекстОшибки); // rarus tenkam 05.04.2021 mantis 17419 +
				
				ТипОсновныеСвойстваПродуктовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваПродуктовТип", ПространствоИменСхемы);
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваПродуктовТип, "GUID", ТекСтрока.ПродуктGUID, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипПродуктСОП, "Продукт", ТипОсновныеСвойстваПродуктовТип, , ТекстОшибки);
			
				ДобавитьЭлементВСписокXDTO(ТипПродуктыСписок,"ПродуктСОП", ТипПродуктСОП, ТекстОшибки);
			КонецЦикла;	
			
			//Поместим список продуктов в объект
			ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "Продукты", ТипПродуктыСписок, , ТекстОшибки);
			
			//rarus vikhle 14.01.2020 mt 17026 +++
			//ТЧ ГРАФИК ПЛАТЕЖЕЙ
			Для Каждого ТекСтрока ИЗ СтруктураПараметров.ГрафикПлатежей Цикл
				ТипГрафикПлатежейСОПТип = ПолучитьОбъектТипаCML("ГрафикПлатежейСОПТип", ПространствоИменСхемы);
				
				ЗаполнитьСвойствоXDTO(ТипГрафикПлатежейСОПТип, "ВидОплаты", ТекСтрока.ВидОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипГрафикПлатежейСОПТип, "ДатаОплаты", ТекСтрока.ДатаОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипГрафикПлатежейСОПТип, "Сумма", ТекСтрока.Сумма, , ТекстОшибки);
				
				ДобавитьЭлементВСписокXDTO(ТипДанныеСОППродуктовТип,"ГрафикПлатежей", ТипГрафикПлатежейСОПТип, ТекстОшибки);
			КонецЦикла;
						
			//// ТЧ УСЛОВИЯ ОПЛАТЫ  			
			Для Каждого ТекСтрока ИЗ СтруктураПараметров.УсловияОплаты Цикл
				ТипУсловиеОплатыСОПТип = ПолучитьОбъектТипаCML("УсловиеОплатыСОПТип", ПространствоИменСхемы);
				
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "ВидОплаты", ТекСтрока.ВидОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "Сумма", ТекСтрока.Сумма, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "Процент", ТекСтрока.Процент, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "ДатаОплаты", ТекСтрока.ДатаОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "РасчетДатыОплаты", ТекСтрока.РасчетДатыОплаты, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипУсловиеОплатыСОПТип, "СрокВДнях", ТекСтрока.СрокВДнях, , ТекстОшибки);
						
				ДобавитьЭлементВСписокXDTO(ТипДанныеСОППродуктовТип,"УсловияОплаты", ТипУсловиеОплатыСОПТип, ТекстОшибки);
				//ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "УсловияОплаты", ТипУсловиеОплатыСОПТип, , ТекстОшибки);			
			КонецЦикла;
			//rarus vikhle 14.01.2020 mt 17026 ---
			
			// ДОПОЛНИТЕЛЬНЫЕ РЕКВИЗИТЫ
			
			//Получим список доп. реквизитов
			ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("ВалютаCode") И ЗначениеЗаполнено(СтруктураПараметров.ВалютаCode) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Валюта.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипВалютыТип = ПолучитьОбъектТипаCML("Валюты", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипВалютыТип, "Code", СтруктураПараметров.ВалютаCode, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипВалютыТип, "Description", СтруктураПараметров.ВалютаDescription, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Валюта", ТипВалютыТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Валюта", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "5175df20-a71b-11e6-80ed-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Валюта.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ПродавецДилераIDПортала") И ЗначениеЗаполнено(СтруктураПараметров.ПродавецДилераIDПортала) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ПродавецДилера.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипДанныеСотрудникаТип = ПолучитьОбъектТипаCML("ДанныеСотрудникаТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "IDПортала", СтруктураПараметров.ПродавецДилераIDПортала, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "ЛогинПортала", СтруктураПараметров.ПродавецДилераЛогинПортала, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Сотрудник", ТипДанныеСотрудникаТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Продавец дилера", , ТекстОшибки, Ложь);
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "a76fea8e-de2c-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);	// rarus tenkam 05.03.2021 mantis 17379 +
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "b14f3036-e18d-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);	// rarus tenkam 05.03.2021 mantis 17379 +
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ПродавецДилера.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("СтатусGUID") И ЗначениеЗаполнено(СтруктураПараметров.СтатусGUID) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Статус.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипОсновныеСвойстваСтатусовОбъектовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваСтатусовОбъектовТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваСтатусовОбъектовТип, "GUID", СтруктураПараметров.СтатусGUID, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Статус", ТипОсновныеСвойстваСтатусовОбъектовТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Статус", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "bd5f639a-6a2f-11e6-80e7-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Статус.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			// rarus tenkam 05.04.2021 mantis 17419 +++
			Если СтруктураПараметров.Свойство("ВалютнаяОговорка") И СтруктураПараметров.ВалютнаяОговорка <> Неопределено Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ВалютнаяОговорка.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.ВалютнаяОговорка, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Валютная оговорка", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 ++
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "13d35b78-8efa-11eb-910d-00155d81bc54", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f1d-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 --
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ВалютнаяОговорка.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ЗаявкаНаБУПродукты") И СтруктураПараметров.ЗаявкаНаБУПродукты <> Неопределено Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.СОППоБУ.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.ЗаявкаНаБУПродукты, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "СОП по Б/У", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 ++
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "13d35b7a-8efa-11eb-910d-00155d81bc54", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f23-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 --
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.СОППоБУ.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			// rarus tenkam 05.04.2021 mantis 17419 ---
			
			//rarus bonmak 13.01.2021 17041 ++
			//Если СтруктураПараметров.Свойство("СрокОплатыОстатка") И ЗначениеЗаполнено(СтруктураПараметров.СрокОплатыОстатка) Тогда
			//	//Получим элемент списка доп. реквизитов
			//	ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
			//	            				
			//	//Заполним значение
			//	ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
			//	
			//	ЗаполнитьСвойствоXDTO(ТипЗначение, "Число", СтруктураПараметров.СрокОплатыОстатка, , ТекстОшибки, Ложь);
			//	
			//	ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
			//	
			//	//Заполним свойство
			//	ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
			//	ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Срок оплаты остатка", , ТекстОшибки, Ложь);
			//	ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "a76fea8f-de2c-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);
			//	ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
			//	
			//	//Добавим элемент в список
			//	ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
			//КонецЕсли;
			//rarus bonmak 13.01.2021 17041 --
			Если ТипЗначенияСвойствСписок.СписокЗначенийСвойств.Количество() <> 0 Тогда 
				//Поместим список в объект
				ЗаполнитьСвойствоXDTO(ТипДанныеСОППродуктовТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);
			КонецЕсли;
			
		    ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ДанныеСОППродуктов", ТипДанныеСОППродуктовТип, Истина, ТекстОшибки);
		ИначеЕсли ИмяМетодаWS = "SetAdditionalProperty" Тогда
			ТипДополнительныеРеквизитыОбъектаТип = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыОбъектаТип", ПространствоИменСхемы);
			
			ЗаполнитьСвойствоXDTO(ТипДополнительныеРеквизитыОбъектаТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			Если СтруктураПараметров.Свойство("ТипОбъекта") Тогда	// rarus tenkam 28.04.2021 mantis 17659 +
				ЗаполнитьСвойствоXDTO(ТипДополнительныеРеквизитыОбъектаТип, "ТипОбъекта", СтруктураПараметров.ТипОбъекта, , ТекстОшибки);
			КонецЕсли;	// rarus tenkam 28.04.2021 mantis 17659 +   			
			//Получим список доп. реквизитов
			ТипЗначенияСвойствСписок = ПолучитьОбъектТипаCML("ЗначенияСвойствСписокТип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("ВалютаCode") И ЗначениеЗаполнено(СтруктураПараметров.ВалютаCode) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Валюта.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипВалютыТип = ПолучитьОбъектТипаCML("Валюты", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипВалютыТип, "Code", СтруктураПараметров.ВалютаCode, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипВалютыТип, "Description", СтруктураПараметров.ВалютаDescription, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Валюта", ТипВалютыТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Валюта", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "5175df20-a71b-11e6-80ed-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Валюта.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ПродавецДилераIDПортала") И ЗначениеЗаполнено(СтруктураПараметров.ПродавецДилераIDПортала) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ПродавецДилера.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипДанныеСотрудникаТип = ПолучитьОбъектТипаCML("ДанныеСотрудникаТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "IDПортала", СтруктураПараметров.ПродавецДилераIDПортала, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "ЛогинПортала", СтруктураПараметров.ПродавецДилераЛогинПортала, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Сотрудник", ТипДанныеСотрудникаТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Продавец дилера", , ТекстОшибки, Ложь);
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "a76fea8e-de2c-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);	// rarus tenkam 05.03.2021 mantis 17379 +
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "b14f3036-e18d-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);	// rarus tenkam 05.03.2021 mantis 17379 +
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ПродавецДилера.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("СтатусGUID") И ЗначениеЗаполнено(СтруктураПараметров.СтатусGUID) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.Статус.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипОсновныеСвойстваСтатусовОбъектовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваСтатусовОбъектовТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваСтатусовОбъектовТип, "GUID", СтруктураПараметров.СтатусGUID, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Статус", ТипОсновныеСвойстваСтатусовОбъектовТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Статус", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "bd5f639a-6a2f-11e6-80e7-001dd8b71c6f", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.Статус.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			// rarus tenkam 05.04.2021 mantis 17419 +++
			Если СтруктураПараметров.Свойство("ВалютнаяОговорка") И СтруктураПараметров.ВалютнаяОговорка <> Неопределено  Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.ВалютнаяОговорка.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.ВалютнаяОговорка, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Валютная оговорка", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 ++
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "13d35b78-8efa-11eb-910d-00155d81bc54", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f1d-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 --
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.ВалютнаяОговорка.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("ЗаявкаНаБУПродукты") И СтруктураПараметров.ЗаявкаНаБУПродукты <> Неопределено  Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.СОППоБУ.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Булево", СтруктураПараметров.ЗаявкаНаБУПродукты, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "СОП по Б/У", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 ++
					////ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "13d35b7a-8efa-11eb-910d-00155d81bc54", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f23-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					//rarus bonmak 12.04.2021 17419 --
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.СОППоБУ.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли; 			
			// rarus tenkam 05.04.2021 mantis 17419 ---
			
			// rarus tenkam 27.04.2021 mantis 17659 +++
			Если СтруктураПараметров.Свойство("DD") И СтруктураПараметров.DD <> Неопределено Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.DD.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// Rarus tenkam 10.11.2021 mantis 18493 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.DD, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.DD, , ТекстОшибки, Истина);
					// Rarus tenkam 10.11.2021 mantis 18493 ---
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "DD", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f1f-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.DD.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("DD2") И СтруктураПараметров.DD2 <> Неопределено  Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.DD2.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// Rarus tenkam 10.11.2021 mantis 18493 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.DD2, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.DD2, , ТекстОшибки, Истина);
					// Rarus tenkam 10.11.2021 mantis 18493 ---
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "DD2", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f22-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.DD2.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("DDS") И СтруктураПараметров.DDS <> Неопределено  Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.DDS.ИспользуетсяВOFMSДляОтправки Тогда //rarus bonmak 17468 23.09.2021
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					// Rarus tenkam 10.11.2021 mantis 18493 +++
					//ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.DDS, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Дата", СтруктураПараметров.DDS, , ТекстОшибки, Истина);
					// Rarus tenkam 10.11.2021 mantis 18493 ---
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					//rarus bonmak 17468 23.09.2021 ++
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "DDS", , ТекстОшибки, Ложь);
					//ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "f1129f21-9580-11eb-911c-00155d81d969", , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.DDS.IDExternalSystem, , ТекстОшибки, Ложь);
					//rarus bonmak 17468 23.09.2021 --
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;                			
			// rarus tenkam 27.04.2021 mantis 17659 ---
			
			// Rarus tenkam 26.10.2021 mantis 17822 +++
			Если СтруктураПараметров.Свойство("VIN") И ЗначениеЗаполнено(СтруктураПараметров.VIN) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.VINКод.ИспользуетсяВOFMSДляОтправки Тогда
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.VIN, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.VINКод.IDExternalSystem, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			// Rarus tenkam 26.10.2021 mantis 17822 ---			
			
			// rarus vikhle 18.01.2022 m 18755 +++
			Если СтруктураПараметров.Свойство("ТипСпецификации") И СтруктураПараметров.ТипСпецификации <> Неопределено Тогда
				
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.STDUO.ИспользуетсяВOFMSДляОтправки Тогда
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "STDUO", СтруктураПараметров.ТипСпецификации, , ТекстОшибки, Истина);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.STDUO.IDExternalSystem, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);	
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("СтандартнаяСпецификация") И СтруктураПараметров.СтандартнаяСпецификация <> Неопределено Тогда
				
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.НомерСтандартнойСпецификации.ИспользуетсяВOFMSДляОтправки Тогда
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Строка", СтруктураПараметров.СтандартнаяСпецификация, , ТекстОшибки, Истина);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.НомерСтандартнойСпецификации.IDExternalSystem, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);	
				КонецЕсли;	
				
			КонецЕсли;
			// rarus vikhle 18.01.2022 m 18755 ---
			
			// rarus vikhle 01.03.2022 m 18879 +++
			Если СтруктураПараметров.Свойство("РегиональныйМенеджерОКП") И ЗначениеЗаполнено(СтруктураПараметров.РегиональныйМенеджерОКП) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.РегиональныйМенеджерОКП.ИспользуетсяВOFMSДляОтправки Тогда
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипДанныеСотрудникаТип = ПолучитьОбъектТипаCML("ДанныеСотрудникаТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "IDПортала", СтруктураПараметров.РегиональныйМенеджерОКП.КодСотрудникаНаПортале, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "ЛогинПортала", СтруктураПараметров.РегиональныйМенеджерОКП.ЛогинНаПортале, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Сотрудник", ТипДанныеСотрудникаТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.РегиональныйМенеджерОКП.IDExternalSystem, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("РегиональныйМенеджерОП") И ЗначениеЗаполнено(СтруктураПараметров.РегиональныйМенеджерОП) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.РегиональныйМенеджерОП.ИспользуетсяВOFMSДляОтправки Тогда
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипДанныеСотрудникаТип = ПолучитьОбъектТипаCML("ДанныеСотрудникаТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "IDПортала", СтруктураПараметров.РегиональныйМенеджерОП.КодСотрудникаНаПортале, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "ЛогинПортала", СтруктураПараметров.РегиональныйМенеджерОП.ЛогинНаПортале, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Сотрудник", ТипДанныеСотрудникаТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.РегиональныйМенеджерОП.IDExternalSystem, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("РегиональныйМенеджерОПАвтобусов") И ЗначениеЗаполнено(СтруктураПараметров.РегиональныйМенеджерОПАвтобусов) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.РегиональныйМенеджерОПАвтобусов.ИспользуетсяВOFMSДляОтправки Тогда
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипДанныеСотрудникаТип = ПолучитьОбъектТипаCML("ДанныеСотрудникаТип", ПространствоИменСхемы);
					
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "IDПортала", СтруктураПараметров.РегиональныйМенеджерОПАвтобусов.КодСотрудникаНаПортале, , ТекстОшибки);
					ЗаполнитьСвойствоXDTO(ТипДанныеСотрудникаТип, "ЛогинПортала", СтруктураПараметров.РегиональныйМенеджерОПАвтобусов.ЛогинНаПортале, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Сотрудник", ТипДанныеСотрудникаТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.РегиональныйМенеджерОПАвтобусов.IDExternalSystem, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			// rarus vikhle 01.03.2022 m 18879 ---
			//Rarus bonmak 16.05.2022 19158 ++
			Если СтруктураПараметров.Свойство("СтатусПродукта") И ЗначениеЗаполнено(СтруктураПараметров.СтатусПродукта) Тогда
				Если Справочники.Scan_ДополнительныеРеквизиты1БД.СтатусПродукта.ИспользуетсяВOFMSДляОтправки Тогда 
					//Получим элемент списка доп. реквизитов
					ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
					
					//Заполним значение
					ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
					
					ТипОсновныеСвойстваСтатусовОбъектовТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваСтатусовОбъектовТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваСтатусовОбъектовТип, "GUID", СтруктураПараметров.СтатусПродукта, , ТекстОшибки);
					
					ЗаполнитьСвойствоXDTO(ТипЗначение, "Статус", ТипОсновныеСвойстваСтатусовОбъектовТип, , ТекстОшибки, Ложь);
					
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
					
					//Заполним свойство
					ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
					ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", Справочники.Scan_ДополнительныеРеквизиты1БД.СтатусПродукта.IDExternalSystem, , ТекстОшибки, Ложь);
					ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
					
					//Добавим элемент в список
					ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			//Rarus bonmak 16.05.2022 19158 --
			//rarus bonmak 13.01.2021 17041 ++
			//Если СтруктураПараметров.Свойство("СрокОплатыОстатка") И ЗначениеЗаполнено(СтруктураПараметров.СрокОплатыОстатка) Тогда
			//	//Получим элемент списка доп. реквизитов
			//	ТипЗначениеСвойства = ПолучитьОбъектТипаCML("ЗначениеСвойстваТип", ПространствоИменСхемы);
			//	            				
			//	//Заполним значение
			//	ТипЗначение = ПолучитьОбъектТипаCML("ВидыСвойствТип", ПространствоИменСхемы);
			//	
			//	ЗаполнитьСвойствоXDTO(ТипЗначение, "Число", СтруктураПараметров.СрокОплатыОстатка, , ТекстОшибки, Ложь);
			//	
			//	ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Значение", ТипЗначение, , ТекстОшибки);
			//	
			//	//Заполним свойство
			//	ТипСвойство = ПолучитьОбъектТипаCML("ДополнительныеРеквизитыБазовыйТип", ПространствоИменСхемы);
			//	ЗаполнитьСвойствоXDTO(ТипСвойство, "Наименование", "Срок оплаты остатка", , ТекстОшибки, Ложь);
			//	ЗаполнитьСвойствоXDTO(ТипСвойство, "GUID", "a76fea8f-de2c-11ea-910e-00155d81bcc8", , ТекстОшибки, Ложь);
			//	ЗаполнитьСвойствоXDTO(ТипЗначениеСвойства, "Свойство", ТипСвойство, , ТекстОшибки);
			//	
			//	//Добавим элемент в список
			//	ДобавитьЭлементВСписокXDTO(ТипЗначенияСвойствСписок,"СписокЗначенийСвойств", ТипЗначениеСвойства, ТекстОшибки);
			//КонецЕсли;
			//rarus bonmak 13.01.2021 17041 --
			//Поместим список в объект
			ЗаполнитьСвойствоXDTO(ТипДополнительныеРеквизитыОбъектаТип, "ДополнительныеРеквизиты", ТипЗначенияСвойствСписок, , ТекстОшибки);
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ДополнительныеРеквизитыОбъекта", ТипДополнительныеРеквизитыОбъектаТип, Истина, ТекстОшибки);
		
		// rarus tenkam 23.09.2020 mantis 16181 ---
		// rarus agar 12.08.2021 17205 ++
		ИначеЕсли ИмяМетодаWS = "GetEPTS" Тогда
			ТипЗапросЭПТСТип = ПолучитьОбъектТипаCML("ЗапросЭПТСтип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("GUID") И ЗначениеЗаполнено(СтруктураПараметров.GUID)Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросЭПТСТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			ИначеЕсли СтруктураПараметров.Свойство("GUIDПродукта") И ЗначениеЗаполнено(СтруктураПараметров.GUIDПродукта)  Тогда
				ТипОсновныеСвойстваТранспортныхСредствТип = ПолучитьОбъектТипаCML("ОсновныеСвойстваТранспортныхСредствТип", ПространствоИменСхемы);
				
				ЗаполнитьСвойствоXDTO(ТипОсновныеСвойстваТранспортныхСредствТип, "GUID", СтруктураПараметров.GUIDПродукта, , ТекстОшибки);
				ЗаполнитьСвойствоXDTO(ТипЗапросЭПТСТип, "ТранспортноеСредство", ТипОсновныеСвойстваТранспортныхСредствТип, , ТекстОшибки);
			КонецЕсли;
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросЭПТС", ТипЗапросЭПТСТип, Истина, ТекстОшибки);
		ИначеЕсли ИмяМетодаWS = "GetEPTSstatement" Тогда
			ТипЗапросЭПТСТип = ПолучитьОбъектТипаCML("ЗапросЭПТСтип", ПространствоИменСхемы);
			
			Если СтруктураПараметров.Свойство("GUID") И ЗначениеЗаполнено(СтруктураПараметров.GUID)Тогда
				ЗаполнитьСвойствоXDTO(ТипЗапросЭПТСТип, "GUID", СтруктураПараметров.GUID, , ТекстОшибки);
			КонецЕсли;
			
			ЗаполнитьСвойствоXDTO(ТипRequestConditions, "ЗапросЭПТС", ТипЗапросЭПТСТип, Истина, ТекстОшибки);
		// rarus agar 12.08.2021 17205 ++
		КонецЕсли;
		
		ЗаполнитьСвойствоXDTO(ТипRequestType, "RequestConditions", ТипRequestConditions, Истина, ТекстОшибки);
		ЗаполнитьСвойствоXDTO(ТипExchangeMessageType, "Request", ТипRequestType, Истина, ТекстОшибки);
		
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		ЗаписьXML = Новый ЗаписьXML;
		//ЗаписьXML.УстановитьСтроку("UTF-8");
		ЗаписьXML.УстановитьСтроку();
		//ЗаписьXML.ЗаписатьОбъявлениеXML();
		
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ТипExchangeMessageType, "ExchangeMessage",,,НазначениеТипаXML.Явное);
		
		СообщениеОбмена = ЗаписьXML.Закрыть();
		
		Возврат СообщениеОбмена;
	Исключение
		ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СообщениеОбОшибке = "Не удалось сформировать сообщение обмена ("+ИмяМетодаWS+"): "+ИнформацияОбОшибке;
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,УровеньЖурналаРегистрации.Ошибка,,,СообщениеОбОшибке);
		Отказ = Истина; 		
		Возврат СообщениеОбОшибке;
	КонецПопытки;
	
КонецФункции

Функция ПолучитьСтрокуСоединенияИБ() Экспорт
	
	Возврат XMLСтрока(ВРег(СтрокаСоединенияИнформационнойБазы()));
	
КонецФункции 

Функция ПолучитьWSПрокси(ИмяМетодаWS, Отказ, WSПрокси, ИмяСобытияЖурналаРегистрации) Экспорт
	
	Если WSПрокси = Неопределено Тогда
		АдресWS = Scan_ПраваИНастройки.Scan_Право("WSАдрес1DB");
		ЛогинWS = Scan_ПраваИНастройки.Scan_Право("Логин1DB");
		ПарольWS = Scan_ПраваИНастройки.Scan_Право("Пароль1DB");
		
		Если СокрЛП(АдресWS) = ""  ИЛИ
			СокрЛП(ЛогинWS) = "" ИЛИ
			СокрЛП(ПарольWS) = "" Тогда
			СообщениеОбОшибке = "Настройки подключения не заполнены! Не удалось подключиться к веб-сервису.";
			Отказ = Истина;
			Возврат СообщениеОбОшибке;
		КонецЕсли;
				
		Попытка
			Определения = Новый WSОпределения(АдресWS + "?wsdl", ЛогинWS, ПарольWS);
			WS = Новый WSПрокси(Определения, "http://www.scania.ru/SRUService", "SRUService", "SRUServiceSoap");
			WS.Пользователь = ЛогинWS;
			WS.Пароль = ПарольWS;
		Исключение
			ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			СообщениеОбОшибке = "Не удалось подключиться к веб-сервису по адресу <"+АдресWS+"> ("+ИмяМетодаWS+"): "+ИнформацияОбОшибке;
			ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,УровеньЖурналаРегистрации.Ошибка,,,СообщениеОбОшибке);
			Отказ = Истина;			
			Возврат СообщениеОбОшибке;
		КонецПопытки;
	Иначе 
		// Ничего не создаем, нам уже передали в параметрах
		WS = WSПрокси;
	КонецЕсли;
	
	Возврат WS;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ВЫЗОВ ВЕБ-СЕРВИСОВ СКАНИИ КОНЕЦ


////////////////////////////////////////////////////////////////////////////////
// ЛОГИРОВАНИЕ НАЧАЛО

Процедура ЗаписьЖурналаОбменаNDB(ВидЗапроса,Объект,ТекстЗапроса,ТекстОтвета,ОбменВыполненУспешно, Проверка = Ложь) Экспорт	// rarus tenkam 03.06.2020 mantis 16177 + Проверка	
	                                                                                                                       	
	МенеджерЗаписи = РегистрыСведений.Scan_РегистрацияОбмена1БД.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДата();
	//МенеджерЗаписи.Подразделение = ПолучитьПодразделение(Объект); //rarus bonmak 16210 20.08.2020
	// rarus tenkam 18.03.2019 mantis 13629 +++
	ТекВидЗапроса = Scan_ВебСервисыРазборОтветов.ПолучитьПеречислениеПоСтрокеВидаЗапроса(ВидЗапроса);
	МенеджерЗаписи.ВидЗапроса = ТекВидЗапроса; 
	//МенеджерЗаписи.ВидЗапроса = ВидЗапроса;
	// rarus tenkam 18.03.2019 mantis 13629 ---
	//МенеджерЗаписи.Объект = Объект; //rarus bonmak 16210 20.08.2020
	МенеджерЗаписи.ДатаВМиллисекундах = Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(), "ЧЦ=14; ЧВН=; ЧГ=0"); //rarus bonmak 16210 20.08.2020

	МенеджерЗаписи.ТекстЗапроса = ТекстЗапроса;
	МенеджерЗаписи.ТекстОтвета = ТекстОтвета;
	
	//rarus FominskiyAS 28.02.2019  mantis 13863 +++
	//МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь; 
	МенеджерЗаписи.Пользователь = ПользователиСлужебный.АвторизованныйПользователь();
	//rarus FominskiyAS 28.02.2019  mantis 13863 ---
	МенеджерЗаписи.Проверка = Проверка; 	// rarus tenkam 03.06.2020 mantis 16177 +
	
	МенеджерЗаписи.ОбменВыполненУспешно = ОбменВыполненУспешно;
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка записи обмена с 1БД", УровеньЖурналаРегистрации.Ошибка, Неопределено, Объект, ОписаниеОшибки());	
	КонецПопытки;
	
КонецПроцедуры

//Функция ПолучитьПодразделение(Объект)
//	
//	//Результат = ПараметрыСеанса.ПодразделениеКомпании;
//	
//	Если Объект <> Неопределено Тогда
//		
//		Попытка 
//			Результат = Объект.ПодразделениеКомпании;
//		Исключение
//			Попытка
//				Результат = Объект.Подразделение;
//			Исключение
//			КонецПопытки;
//		КонецПопытки;
//		
//	КонецЕсли;
//	
//	Возврат Результат;
//	
//КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЛОГИРОВАНИЕ КОНЕЦ

Процедура scЗафиксироватьОшибку(СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации, Знач ДанныеСсылка = Неопределено) Экспорт 
	
	Если ЗначениеЗаполнено(ДанныеСсылка) Тогда
		Попытка
			ОбъектМетаданных = ДанныеСсылка.Метаданные();			
		Исключение
			ОбъектМетаданных = Неопределено;
		КонецПопытки;
	Иначе
		ДанныеСсылка = Неопределено;		
		ОбъектМетаданных = Неопределено;
	КонецЕсли;
	
	#Если Клиент Тогда
		Сообщить(СообщениеОбОшибке, СтатусСообщения.Внимание);
	#КонецЕсли
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, ОбъектМетаданных, ДанныеСсылка, СообщениеОбОшибке);	
	
КонецПроцедуры

Процедура УстановитьЗначениеXDTO(ОбъектXDTO, ИмяСвойства, Значение, ТекстОшибки)
	
	Попытка
		ОбъектXDTO.Установить(ИмяСвойства, Значение);
	Исключение
		ШаблонСообщения = НСтр("ru = 'Ошибка установки значения свойства ""%1""!'");;
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации("Веб-сервис.Рекламация",УровеньЖурналаРегистрации.Ошибка,,"Ошибка", "Заполнение XDTO "+ТекстОшибки + "Имя свойства " + ИмяСвойства + " Значение " + Значение);
	КонецПопытки
	
КонецПроцедуры

// Заполняет свойство объекта XDTO.
//
// Параметры
//  ОбъектXDTO   – объект заполнения,
//  ИмяСвойства  - свойство объекта,
//  Значение     - устанавливаемое значение,
//  Обязательное - булево - признак обязательности заполнения свойства,
//  ТекстОшибки  - строка - текст ошибки в случае неудачного заполнения
//
Процедура ЗаполнитьСвойствоXDTO(ОбъектXDTO, ИмяСвойства, Значение, Обязательное = Ложь, ТекстОшибки = "", УстанавливатьПустыеЗначения = Ложь) Экспорт
	
	Если ТипЗнч(Значение) = Тип("ЗначениеXDTO") ИЛИ ТипЗнч(Значение) = Тип("ОбъектXDTO") Тогда
		УстановитьЗначениеXDTO(ОбъектXDTO, ИмяСвойства, Значение, ТекстОшибки);
	Иначе
		Если Обязательное ИЛИ ЗначениеЗаполнено(Значение) ИЛИ УстанавливатьПустыеЗначения Тогда
			УстановитьЗначениеXDTO(ОбъектXDTO, ИмяСвойства, Значение, ТекстОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭлементВСписокXDTO(ОбъектXDTO, ИмяСписка, ЗначениеЭлемента, ТекстОшибки = "") Экспорт
	Если (ТипЗнч(ЗначениеЭлемента) = Тип("ЗначениеXDTO") ИЛИ ТипЗнч(ЗначениеЭлемента) = Тип("ОбъектXDTO")) И
		ТипЗнч(ОбъектXDTO[ИмяСписка]) = Тип("СписокXDTO") Тогда
		Попытка
			ОбъектXDTO[ИмяСписка].Добавить(ЗначениеЭлемента);
		Исключение
			ШаблонСообщения = НСтр("ru = 'Ошибка добавления значения в список свойств ""%1""!'");;
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации("Веб-сервис.Рекламация",УровеньЖурналаРегистрации.Ошибка,,"Ошибка", "Заполнение XDTO "+ТекстОшибки + "Имя свойства " + ИмяСписка + " Значение " + ЗначениеЭлемента);
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Функция scСтрРазделить(Знач Строка, Разделитель)
	
	Результат = Новый Массив;
	Если ПустаяСтрока(Строка) Тогда
		Возврат Результат;
	КонецЕсли;
	
	НачПозицияПервогоЭлемента = Найти(Строка, "{");
	КонПозицияПервогоЭлемента = Найти(Строка, "}");
	Если НачПозицияПервогоЭлемента > 0 И КонПозицияПервогоЭлемента > 0 Тогда
		ПервыйЭлемент = Сред(Строка, НачПозицияПервогоЭлемента, КонПозицияПервогоЭлемента);
		Результат.Добавить(СокрЛП(ПервыйЭлемент));
		Строка = СокрЛП(Сред(Строка,КонПозицияПервогоЭлемента + 2));
	КонецЕсли;
	
	Пока Истина Цикл
		Позиция = Найти(Строка,Разделитель);
		Если Позиция = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Результат.Добавить(СокрЛП(Лев(Строка,Позиция - 1)));
		Строка = СокрЛП(Сред(Строка,Позиция + 1));
	КонецЦикла;
	
	Результат.Добавить(СокрЛП(Строка));
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьТипОбъектаCML(Тип, ВерсияСхемы = "4.01", ЗаменитьСимволы = Истина)
	
	МассивПути = scСтрРазделить(Тип, ".");
	
	Если ЗаменитьСимволы Тогда 
		ПервыйЭлемент = МассивПути[0];
	Иначе 
		ПервыйЭлемент = Тип;
	КонецЕсли;
	Если Лев(ПервыйЭлемент,1) = "{" И Прав(ПервыйЭлемент,1) = "}" Тогда
		ИмяПакета = Сред(ПервыйЭлемент, 2, СтрДлина(ПервыйЭлемент) - 2);
		Коллекция = ФабрикаXDTO.Пакеты.Получить(ИмяПакета).КорневыеСвойства;
	ИначеЕсли ВерсияСхемы <> "4.02" Тогда
		ТипОбъекта = ФабрикаXDTO.Тип(ВерсияСхемы, ПервыйЭлемент);
		Коллекция = ТипОбъекта.Свойства;
	КонецЕсли;
	
	Если ЗаменитьСимволы Тогда
		МассивПути.Удалить(0);
		Пока МассивПути.Количество() > 0 Цикл
			
			Если Коллекция = Неопределено Тогда
				Возврат Неопределено;
			КонецЕсли;
			
			Свойство = Коллекция.Получить(МассивПути[0]);
			Если Свойство = Неопределено Тогда
				Возврат Неопределено;
			КонецЕсли;
			
			ТипОбъекта = Свойство.Тип;
			МассивПути.Удалить(0);
			Попытка
				Коллекция = ТипОбъекта.Свойства;
			Исключение
				Коллекция = Неопределено;
			КонецПопытки;
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТипОбъекта;
	
КонецФункции

Функция ПолучитьОбъектТипаCML(Тип, ВерсияСхемы = "4.02", ЗаменитьСимволы = Истина) Экспорт
	Если ТипЗнч(Тип) = Тип("Строка") Тогда
		ТипОбъекта = ПолучитьТипОбъектаCML(Тип, ВерсияСхемы, ЗаменитьСимволы);
	Иначе
		ТипОбъекта = Тип;
	КонецЕсли;
	
	Если ТипОбъекта = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НовыйОбъект = ФабрикаXDTO.Создать(ТипОбъекта);
	
	Возврат НовыйОбъект;
	
КонецФункции

Функция СоздатьСтруктуруИзОбъектаXDTO(ОбъектXDTO) Экспорт
	
	Структура = Новый Структура();
	Для Каждого ТекСвойство Из ОбъектXDTO.Свойства() Цикл
		Если ТипЗнч(ОбъектXDTO[ТекСвойство.Имя]) = Тип("ОбъектXDTO") Тогда
			ВложеннаяСтруктура = СоздатьСтруктуруИзОбъектаXDTO(ОбъектXDTO[ТекСвойство.Имя]);
			Структура.Вставить(ТекСвойство.Имя, ВложеннаяСтруктура);
		Иначе
			Структура.Вставить(ТекСвойство.Имя, ОбъектXDTO[ТекСвойство.Имя]); 		
		КонецЕсли;
	КонецЦикла;	
	Возврат Структура;
	
КонецФункции

Функция СоздатьИзСтруктурыОбъектXDTO(Структура, ИмяТипа, ПространствоИменСхемы, ТекстОшибки)
	ОбъектXDTO = ПолучитьОбъектТипаCML(ИмяТипа, ПространствоИменСхемы);	
	ТипСвойстваXDTO = ОбъектXDTO.Тип().Свойства;
	
	Для Каждого ТекСвойство Из Структура Цикл
		ТипСвойствоXDTO = ТипСвойстваXDTO.Получить(ТекСвойство.Ключ);
		Если ТипЗнч(ТекСвойство.Значение) = Тип("Структура") Тогда
			// рекурсивно создаем вложенные объекты XDTO
			ДочернийОбъектXDTO = СоздатьИзСтруктурыОбъектXDTO(ТекСвойство.Значение, ТипСвойствоXDTO.Тип.Имя, ПространствоИменСхемы, ТекстОшибки);
			ЗаполнитьСвойствоXDTO(ОбъектXDTO, ТекСвойство.Ключ, ДочернийОбъектXDTO, Истина, ТекстОшибки);
		Иначе
			// заполняем примитивные типы
			Если ТипЗнч(ТекСвойство.Значение) = Тип("Строка") Тогда
				ТипСвойства = ПолучитьТипСвойстваXDTO(ТипСвойствоXDTO.Тип);
				Если ТипСвойства <> Неопределено Тогда
					ЗначениеСвойства = XMLЗначение(ТипСвойства, ТекСвойство.Значение);
				Иначе
					ЗначениеСвойства = ТекСвойство.Значение;
				КонецЕсли;
			Иначе
				ЗначениеСвойства = ТекСвойство.Значение;
			КонецЕсли;
			ЗаполнитьСвойствоXDTO(ОбъектXDTO, ТекСвойство.Ключ, ЗначениеСвойства, Истина, ТекстОшибки);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбъектXDTO;
КонецФункции

Функция ПолучитьТипСвойстваXDTO(СвойствоXDTOТип)
	
	ИмяТипа = СвойствоXDTOТип.Имя;
	URIТипа = СвойствоXDTOТип.URIПространстваИмен;   
	Если ИмяТипа = "date" Тогда   
		ИмяТипа = "dateTime";	
	КонецЕсли;
	ТипСвойства = ИзXMLТипа(ИмяТипа, URIТипа);
	
	Если ТипСвойства <> Неопределено Тогда
		Возврат ТипСвойства;
	Иначе
		Если СвойствоXDTOТип.БазовыйТип <> Неопределено Тогда
			Возврат ПолучитьТипСвойстваXDTO(СвойствоXDTOТип.БазовыйТип);	
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;	
	
КонецФункции

Функция ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации, СообщениеОбмена = "") Экспорт
	WS = Неопределено;
	ТекстОтвета = ВызовВебСервиса(ИмяМетода, СтруктураПараметров, Отказ, WS, ИмяСобытияЖурналаРегистрации, СообщениеОбмена); 
	Возврат ТекстОтвета;
КонецФункции

Функция ПрочитатьЗначениеРеквизитаИзXDTO(ТекОбъектXDTO, СтруктураТекРеквизита, ИмяСобытияЖурналаРегистрации, Отказ, СообщениеОбОшибке = "") Экспорт // rarus tenkam 25.03.2019 mantis 13629 + (добавлена СообщениеОбОшибке) 
	
	Попытка 
		Значение = ТекОбъектXDTO;
		ДеревоВложенныхРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтруктураТекРеквизита.ИмяXML, ".");
		Для Каждого ТекРеквизит Из ДеревоВложенныхРеквизитов Цикл
			Значение = Значение[ТекРеквизит];	
		КонецЦикла;
		
		Если НЕ СтруктураТекРеквизита.ТипРекв = "ОбъектXDTO" И
			НЕ СтруктураТекРеквизита.ТипРекв = "Дата" И
			НЕ СтруктураТекРеквизита.ТипРекв = "ДвоичныеДанные" И
			НЕ СтруктураТекРеквизита.ТипРекв = "Число" И 	// rarus tenkam 14.05.2019 mantis 14223 +
			НЕ СтруктураТекРеквизита.ТипРекв = "Булево" И 	//rarus bonmak 08.10.2019 14177 
			Значение <> Неопределено Тогда
			Значение = XMLЗначение(Тип(СтруктураТекРеквизита.ТипРекв), Значение);	
		КонецЕсли;
		
	Исключение
		Если СтруктураТекРеквизита.ВПопытке Тогда
			Если СтруктураТекРеквизита.ТипРекв = "Строка" Тогда
				Возврат "";
			ИначеЕсли СтруктураТекРеквизита.ТипРекв = "Число" Тогда
				Возврат 0; 
			ИначеЕсли СтруктураТекРеквизита.ТипРекв = "Дата" Тогда
				Возврат Дата(1,1,1);
			Иначе
				Возврат Неопределено;		
			КонецЕсли;
		Иначе				
			ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			СообщениеОбОшибке = "Ошибка разбора XML при чтении ревизита <"+СтруктураТекРеквизита.ИмяРекв+">: "+ИнформацияОбОшибке;
			scЗафиксироватьОшибку(СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации);
			Отказ = Истина;
			Возврат Неопределено;
		КонецЕсли;
	КонецПопытки;
	
	Возврат Значение;
	
КонецФункции

Функция ПолучитьСтруктуруПараметровМетода(ИмяМетода = "", ЭтоСписок = Истина) Экспорт
 	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("GUID","");
	СтруктураПараметров.Вставить("Проверка", Ложь);		// rarus tenkam 03.06.2020 mantis 16177 +
	
	Если СтрНайти(ИмяМетода, "ListOf") = 0 Тогда
		ЭтоСписок = Ложь;
	КонецЕсли;
	
	Если ЭтоСписок Тогда
		СтруктураПараметров.Вставить("Код","");
		СтруктураПараметров.Вставить("Наименование","");
		// rarus tenkam 03.04.2019 mantis 13629 +++
		//СтруктураПараметров.Вставить("ДатаНачала");
		//СтруктураПараметров.Вставить("ДатаОкончания");
		// rarus tenkam 03.04.2019 mantis 13629 ---
		СтруктураПараметров.Вставить("ДатаИзменения");
		СтруктураПараметров.Вставить("DeletionMark",XMLСтрока(Ложь));
	Иначе
		СтруктураПараметров.Вставить("Период");
		//СтруктураПараметров.Вставить("ВидРеквизитов","");
		СтруктураПараметров.Вставить("ВидРеквизитов", "Дополнительные"); //rarus vikhle 11.10.2021 mt 18270
	КонецЕсли;
	
	Если ИмяМетода = "GetListOfContragents" Тогда
		СтруктураПараметров.Вставить("НаименованиеПолное","");
		СтруктураПараметров.Вставить("ИНН","");
		СтруктураПараметров.Вставить("КПП","");
	ИначеЕсли ИмяМетода = "GetListOfProductModel" Тогда
		СтруктураПараметров.Вставить("МаркаGUID");
	ИначеЕсли ИмяМетода = "GetListOfProductSubType" Тогда
		СтруктураПараметров.Вставить("РодительGUID");
		//СтруктураПараметров.Вставить("ВидПродукта");
	ИначеЕсли ИмяМетода = "GetListOfOrderToDelivery" Тогда
		СтруктураПараметров.Вставить("НомерЗаказа");
		СтруктураПараметров.Вставить("ПродуктGUID");
	ИначеЕсли ИмяМетода = "GetListOfStatuses" Тогда
		СтруктураПараметров.Вставить("ВидСтатуса");	
	ИначеЕсли ИмяМетода = "GetListOfSOP" Тогда
		СтруктураПараметров.Вставить("НомерДоговора");
		СтруктураПараметров.Вставить("Дата");
		СтруктураПараметров.Вставить("Версия");
		//СтруктураПараметров.Вставить("Дилер");
		//СтруктураПараметров.Вставить("ДилерскийДоговор");
		СтруктураПараметров.Вставить("ДилерGUID");
		// rarus tenkam 03.04.2019 mantis 13629 +++
		СтруктураПараметров.Вставить("ДатаНачала");
		СтруктураПараметров.Вставить("ДатаОкончания");
		// rarus tenkam 03.04.2019 mantis 13629 ---
		//rarus bonmak 15.04.2020 14456 ++
		//ИначеЕсли ИмяМетода = "GetListOfDealers" Тогда
		//	СтруктураПараметров.Вставить("КодДилераSOWA");
		//	СтруктураПараметров.Вставить("КодДилера");
		//	СтруктураПараметров.Вставить("Контрагент");
		//rarus bonmak 15.04.2020 14456 ++
	//rarus bonmak 14.04.2020 15891 ++	
	//ИначеЕсли ИмяМетода = "GetListOfManufacturers" Тогда
	//	СтруктураПараметров.Вставить("МаркаПродукта");
	//	СтруктураПараметров.Вставить("Контрагент");
	//rarus bonmak 14.04.2020 15891 --
	ИначеЕсли ИмяМетода = "GetListOfChassis" Тогда
		СтруктураПараметров.Вставить("Шасси");
		СтруктураПараметров.Вставить("ДатаИзменения");
		СтруктураПараметров.Вставить("ВидGUID");
	ИначеЕсли ИмяМетода = "GetListOfProduct" Тогда
		СтруктураПараметров.Вставить("ТСНомерШасси");
		СтруктураПараметров.Вставить("ТСGUID");
		// rarus tenkam 03.04.2019 mantis 13629 +++
		СтруктураПараметров.Вставить("ДатаНачала");
		СтруктураПараметров.Вставить("ДатаОкончания");
		// rarus tenkam 03.04.2019 mantis 13629 ---
		СтруктураПараметров.Вставить("НомерПродукта"); //rarus bonmak 18.05.2020 14375
		// Rarus tenkam 31.03.2022 mantis 19047 +++
		СтруктураПараметров.Вставить("ВидПродукта");
		СтруктураПараметров.Вставить("МаркаПродукта");
		// Rarus tenkam 31.03.2022 mantis 19047 ---		
	ИначеЕсли ИмяМетода = "SetProduct" Тогда
		СтруктураПараметров.Вставить("TLMS");
		//rarus bonmak 18.05.2020 14375 ++
		СтруктураПараметров.Вставить("БУ");
		СтруктураПараметров.Вставить("VIN");
		СтруктураПараметров.Вставить("ТипПродуктаЛогистический");
		СтруктураПараметров.Вставить("МодельПродукта");
		СтруктураПараметров.Вставить("УстановленныйТахограф");
		СтруктураПараметров.Вставить("МодельДвигателяТС");
		СтруктураПараметров.Вставить("НомерДвигателяТС");
		СтруктураПараметров.Вставить("НомерПолисаОСАГО");
		СтруктураПараметров.Вставить("ДатаИстеченияПолиса");
		СтруктураПараметров.Вставить("Комментарий");
		СтруктураПараметров.Вставить("ВесПродукта");
		СтруктураПараметров.Вставить("ДлинаПродукта");
		СтруктураПараметров.Вставить("ВысотаПродукта");
		СтруктураПараметров.Вставить("ШиринаПродукта");
		СтруктураПараметров.Вставить("ГосударственныйНомер");
		СтруктураПараметров.Вставить("ГосударственныйНомерДатаПолучения");
		//rarus bonmak 18.05.2020 14375 --
	ИначеЕсли ИмяМетода = "SetOrderToDelivery" Тогда //rarus bonmak 15.08.2019 14576 ++	
		СтруктураПараметров.Вставить("ЛокальныйСтатуc"); //rarus bonmak 15.08.2019 14576 --
	ИначеЕсли ИмяМетода = "SetChassis" Тогда
		СтруктураПараметров.Вставить("Замечание");
		СтруктураПараметров.Вставить("НомерПолисаОСАГО");
		СтруктураПараметров.Вставить("ДатаИстеченияПолиса");
		СтруктураПараметров.Вставить("УстановленныйТахограф");
		СтруктураПараметров.Вставить("СрокУстраненияНедостатковДоп");
		СтруктураПараметров.Вставить("КрайняяДатаУстраненияНедостатков");
		СтруктураПараметров.Вставить("МодельПТС");
	ИначеЕсли ИмяМетода = "SetProductPlace" Тогда
		СтруктураПараметров.Вставить("Наименование");
		СтруктураПараметров.Вставить("ТипМестаХранения");
		СтруктураПараметров.Вставить("GUIDИсточника");
		СтруктураПараметров.Вставить("Описание");
		СтруктураПараметров.Вставить("Адрес");
		СтруктураПараметров.Вставить("Код","");
	ИначеЕсли ИмяМетода = "SendProductActivityEvent" Тогда
		СтруктураПараметров.Вставить("ВидСобытия");
		СтруктураПараметров.Вставить("ДатаСобытия");
		СтруктураПараметров.Вставить("GuidСобытияВВнешнейСистеме");
		СтруктураПараметров.Вставить("ПричинаСобытия");
		СтруктураПараметров.Вставить("ТекстСобытия");
		СтруктураПараметров.Вставить("Пользователь");
		СтруктураПараметров.Вставить("ТСGUID");
		СтруктураПараметров.Вставить("НаименованиеМестаХранения");
		СтруктураПараметров.Вставить("ТипМестаХранения");
		СтруктураПараметров.Вставить("GUIDИсточника");
		СтруктураПараметров.Вставить("КодИсточника");
		СтруктураПараметров.Вставить("Адрес");
		СтруктураПараметров.Вставить("GUIDИсточника1БД");
		СтруктураПараметров.Вставить("Недействительный"); //rarus pechek 07.05.2020 mantis 15981
	ИначеЕсли ИмяМетода = "StoreInfo" Тогда
		СтруктураПараметров.Вставить("pCatNumber");
	ИначеЕсли ИмяМетода = "GetListOfOptions" Тогда//rarus bonmak 24.09.2019 14177
		// rarus agar 25.01.2022 18594 ++
		СтруктураПараметров.Вставить("ВидПродукта");
		СтруктураПараметров.Вставить("Наименование");
		СтруктураПараметров.Вставить("НаименованиеАнглийскоеОпции");
		СтруктураПараметров.Вставить("КодСемействаОпций");
		СтруктураПараметров.Вставить("НаименованиеСемействаОпций");
		СтруктураПараметров.Вставить("НаименованиеАнглийскоеСемействаОпций");
		СтруктураПараметров.Вставить("ИспользоватьВСпецификации");
		СтруктураПараметров.Вставить("ОсновнаяОпция");
		// rarus agar 25.01.2022 18594 --
	ИначеЕсли ИмяМетода = "GetListOfSpecificationType" Тогда//rarus bonmak 24.09.2019 14177
	ИначеЕсли ИмяМетода = "GetListOfSpecifications" Тогда//rarus bonmak 24.09.2019 14177
		СтруктураПараметров.Вставить("ДатаНачала");
		СтруктураПараметров.Вставить("ДатаОкончания");
		СтруктураПараметров.Вставить("ЗапросИЗКП"); //rarus ozhnik 15888 19.06.2020 
		СтруктураПараметров.Вставить("ProductID"); //rarus ozhnik 15888 19.06.2020 
	ИначеЕсли ИмяМетода = "GetSpecification" Тогда//rarus bonmak 24.09.2019 14177
	ИначеЕсли ИмяМетода = "SetLocation" Тогда //rarus bonmak 02.12.2019 14375 ++
		СтруктураПараметров.Вставить("DeletionMark",XMLСтрока(Ложь));
		СтруктураПараметров.Вставить("КодИсточника");
		СтруктураПараметров.Вставить("НаименованиеМестаХранения");
		СтруктураПараметров.Вставить("Адрес");
		СтруктураПараметров.Вставить("ТипМестаХранения");
		СтруктураПараметров.Вставить("GUIDИсточника");
		СтруктураПараметров.Вставить("Контрагент");
		СтруктураПараметров.Вставить("ИсходныйПункт");
		СтруктураПараметров.Вставить("КонечныйПункт");
		//rarus bonmak 02.12.2019 14375 --
		СтруктураПараметров.Вставить("Недействительный");  //rarus pechek 06.05.2020 mantis 15981
	ИначеЕсли ИмяМетода = "GetUpdatesList" Тогда //rarus bonmak 09.01.2020 15279 ++
		СтруктураПараметров.Вставить("UpdateSubject");
		//rarus bonmak 09.01.2020 15279 --
	ИначеЕсли ИмяМетода = "OpenExchangeSession" Тогда //rarus bonmak 09.01.2020 15279 ++ 
		СтруктураПараметров.Вставить("SessionGUID");
		СтруктураПараметров.Вставить("SessionStartDate");
		СтруктураПараметров.Вставить("PacketSize");
		СтруктураПараметров.Вставить("SessionAuthor");
		СтруктураПараметров.Вставить("SessionSize");
		//rarus bonmak 09.01.2020 15279 --
	ИначеЕсли ИмяМетода = "CloseExchangeSession" Тогда //rarus bonmak 09.01.2020 15279 ++ 
		СтруктураПараметров.Вставить("SessionGUID");
		СтруктураПараметров.Вставить("SessionStartDate");
		СтруктураПараметров.Вставить("PacketSize");
		СтруктураПараметров.Вставить("SessionSize");
		//rarus bonmak 09.01.2020 15279 --
	ИначеЕсли ИмяМетода = "SetTaskOfExecution" Тогда //rarus bonmak 09.01.2020 15279 ++ 
		СтруктураПараметров.Вставить("Дата");
		СтруктураПараметров.Вставить("СтатусЗадачи");
		СтруктураПараметров.Вставить("ДатаВыполнения");
		СтруктураПараметров.Вставить("РезультатВыполнения");
		//rarus bonmak 09.01.2020 15279 --
	ИначеЕсли ИмяМетода = "GetTaskOfExecution" Тогда //rarus bonmak 09.01.2020 15279 ++ 
		СтруктураПараметров.Вставить("SessionGUID");
		СтруктураПараметров.Вставить("SessionStartDate");
		СтруктураПараметров.Вставить("PacketSize");
		СтруктураПараметров.Вставить("UpdateSubjectGUID");
		СтруктураПараметров.Вставить("SessionSize");
		//rarus bonmak 09.01.2020 15279 --
	ИначеЕсли ИмяМетода = "GetListOfCompanyType" Тогда //rarus BProg_Dekin 18.02.2020 mantis 0014456 +-
	ИначеЕсли ИмяМетода = "GetListOfCompanyGroup" Тогда //rarus BProg_Dekin 18.02.2020 mantis 0014456 +-
	ИначеЕсли ИмяМетода = "GetListOfDealerType" Тогда //rarus BProg_Dekin 18.02.2020 mantis 0014456 +-
	ИначеЕсли ИмяМетода = "GetListOfCooperationType" Тогда //rarus BProg_Dekin 18.02.2020 mantis 0014456 +-
	ИначеЕсли ИмяМетода = "GetListOfSpecificationViewType" Тогда //rarus BProg_Dekin 16.03.2020 mantis 0014177 +-
	ИначеЕсли ИмяМетода = "GetListOfSpecificationView" Тогда //rarus BProg_Dekin 16.03.2020 mantis 0014177 +-
	ИначеЕсли ИмяМетода = "GetSpecificationView" Тогда //rarus BProg_Dekin 16.03.2020 mantis 0014177 +-
	ИначеЕсли ИмяМетода = "GetListOfCompany" Тогда //rarus bonmak 15.04.2020 14456 ++
		СтруктураПараметров.Вставить("ВидВзаимодействия");
		//rarus bonmak 15.04.2020 14456 --
		//rarus ozhnik 15888 17.06.2020 + 
	ИначеЕсли ИмяМетода = "GetListOfProductTypeSPORT" Тогда 
	ИначеЕсли ИмяМетода = "GetListOfQuotation" Тогда
		СтруктураПараметров.Вставить("ЛогинПорталаПользователя");
		СтруктураПараметров.Вставить("QuotationNumber");
	ИначеЕсли ИмяМетода = "GetQuotation" Тогда
		//rarus ozhnik 15888 17.06.2020 +
	ИначеЕсли ИмяМетода = "CreateProduct" Тогда //rarus bonmak 18.05.2020 14375 ++
		СтруктураПараметров.Вставить("МаркаПродукта");
		СтруктураПараметров.Вставить("НомерИзделия");
		СтруктураПараметров.Вставить("ТипПродукта");
		//rarus bonmak 18.05.2020 14375 --
		СтруктураПараметров.Вставить("Наименование");//rarus agar 02.02.2021 17132 +-
		// Rarus tenkam 31.03.2022 mantis 19047 +++
		СтруктураПараметров.Вставить("БУ");
		СтруктураПараметров.Вставить("TLMS");
		// Rarus tenkam 31.03.2022 mantis 19047 ---
	// rarus tenkam 21.09.2020 mantis 16181 +++
	ИначеЕсли ИмяМетода = "CreateSOP" ИЛИ ИмяМетода = "SetSOP" Тогда
		СтруктураПараметров.Вставить("Наименование",);
		СтруктураПараметров.Вставить("НомерДоговора",);
		СтруктураПараметров.Вставить("Дата",);
		СтруктураПараметров.Вставить("ДилерGUID",);
		СтруктураПараметров.Вставить("ВидДоговора",);
		СтруктураПараметров.Вставить("GuidИсточника",);
		СтруктураПараметров.Вставить("Продукты",);
		СтруктураПараметров.Вставить("УсловияОплаты",);
		СтруктураПараметров.Вставить("ГрафикПлатежей",);//rarus vikhle 13.01.2021 mt 17026
		СтруктураПараметров.Вставить("ВалютаCode",);
		СтруктураПараметров.Вставить("ВалютаDescription",);		
		СтруктураПараметров.Вставить("ПродавецДилераIDПортала",);
		СтруктураПараметров.Вставить("ПродавецДилераЛогинПортала",);	
		СтруктураПараметров.Вставить("СтатусGUID",);
		//СтруктураПараметров.Вставить("СрокОплатыОстатка",);//rarus bonmak 13.01.2021 17041 
	    СтруктураПараметров.Вставить("КодДоговора",);
		// rarus tenkam 28.04.2021 mantis 17419 +++
		СтруктураПараметров.Вставить("ВалютнаяОговорка",);
		СтруктураПараметров.Вставить("ЗаявкаНаБУПродукты",);
		// rarus tenkam 28.04.2021 mantis 17419 ---		
		
	ИначеЕсли ИмяМетода = "SetAdditionalProperty" Тогда
		СтруктураПараметров.Вставить("ВалютаCode",);
		СтруктураПараметров.Вставить("ВалютаDescription",);		
		СтруктураПараметров.Вставить("ПродавецДилераIDПортала",);
		СтруктураПараметров.Вставить("ПродавецДилераЛогинПортала",);	
		СтруктураПараметров.Вставить("СтатусGUID",);
		// rarus tenkam 28.04.2021 mantis 17419 +++
		СтруктураПараметров.Вставить("ВалютнаяОговорка",);
		СтруктураПараметров.Вставить("ЗаявкаНаБУПродукты",);
		// rarus tenkam 28.04.2021 mantis 17419 ---		
		// rarus tenkam 27.04.2021 mantis 17659 +++
		СтруктураПараметров.Вставить("ТипОбъекта",);
		СтруктураПараметров.Вставить("DD",);
		СтруктураПараметров.Вставить("DD2",);
		СтруктураПараметров.Вставить("DDS",);
		// rarus tenkam 27.04.2021 mantis 17659 ---
		//СтруктураПараметров.Вставить("СрокОплатыОстатка",) ;//rarus bonmak 13.01.2021 17041 	
		// rarus vikhle 18.01.2022 m 18755 +++
		СтруктураПараметров.Вставить("ТипСпецификации");
		СтруктураПараметров.Вставить("СтандартнаяСпецификация");
		// rarus vikhle 18.01.2022 m 18755 ---
		// rarus vikhle 01.03.2022 m 18879 +++
		СтруктураПараметров.Вставить("РегиональныйМенеджерОКП");
		СтруктураПараметров.Вставить("РегиональныйМенеджерОП");
		СтруктураПараметров.Вставить("РегиональныйМенеджерОПАвтобусов");
		// rarus vikhle 01.03.2022 m 18879 ---
	// rarus tenkam 21.09.2020 mantis 16181 ---
	
	//rarus agar 15.10.2020 15696 ++
	ИначеЕсли ИмяМетода = "SetPurchaseOrder" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("ИдентификаторЗаказа");
		СтруктураПараметров.Вставить("ДатаЗаказа");
		СтруктураПараметров.Вставить("ТипЗаказа");
		СтруктураПараметров.Вставить("ДополнительнаяИнформация");
		СтруктураПараметров.Вставить("Комментарий");
		СтруктураПараметров.Вставить("Поставщик");
		СтруктураПараметров.Вставить("ИдентификаторПоставщика");
		СтруктураПараметров.Вставить("Договор");
		СтруктураПараметров.Вставить("ИдентификаторДоговора");
		СтруктураПараметров.Вставить("НаименованиеДоговора");
		СтруктураПараметров.Вставить("ЦентрЗатрат");
		СтруктураПараметров.Вставить("АдресПоставки");
		СтруктураПараметров.Вставить("УсловияПоставки");
		СтруктураПараметров.Вставить("УсловияОплаты");
		СтруктураПараметров.Вставить("Ответственный");
		СтруктураПараметров.Вставить("ИдентификаторПродукта");
		СтруктураПараметров.Вставить("Наименование");
		СтруктураПараметров.Вставить("ДатаПоставки");
		СтруктураПараметров.Вставить("Количество");
		СтруктураПараметров.Вставить("Цена");
		СтруктураПараметров.Вставить("КодВалюты");
		СтруктураПараметров.Вставить("СтавкаНДС");
		СтруктураПараметров.Вставить("КомментарийДляПоставщика");
		СтруктураПараметров.Вставить("КомментарийВнутренний");
	ИначеЕсли ИмяМетода = "SetPurchaseOrderApproval" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("ИдентификаторЗаказа");
	ИначеЕсли ИмяМетода = "GetOrderStatus" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("ИдентификаторЗаказа");
	ИначеЕсли ИмяМетода = "GetListOfCostCenters" Тогда
		СтруктураПараметров.Очистить();
	ИначеЕсли ИмяМетода = "GetListContragent" Тогда
		СтруктураПараметров.Очистить();
	ИначеЕсли ИмяМетода = "GetListDogovorov" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("ИдентификаторКонтрагента");
	ИначеЕсли ИмяМетода = "GetListOfCategories" Тогда
		СтруктураПараметров.Очистить();
	ИначеЕсли ИмяМетода = "GetListOfDeliveries" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("Ответственный");
	//rarus agar 15.10.2020 15696 --
	//rarus agar 13.03.2021 17373 ++
	ИначеЕсли ИмяМетода = "GetUser" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("ИдентификаторПользователя");
	ИначеЕсли ИмяМетода = "AddUpdateUser" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("ИдентификаторПользователя");
		СтруктураПараметров.Вставить("ТокенOFMS");
	ИначеЕсли ИмяМетода = "CheckUserTokenIsOnline" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("Логин");
		СтруктураПараметров.Вставить("Токен");
	//rarus agar 13.03.2021 17373 --
	//rarus agar 12.08.2021 17205 ++
	ИначеЕсли ИмяМетода = "GetEPTS" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("GUID");
		СтруктураПараметров.Вставить("GUIDПродукта");
	ИначеЕсли ИмяМетода = "GetEPTSstatement" Тогда
		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("GUID");
	//rarus agar 12.08.2021 17205 --
	КонецЕсли;
	Возврат СтруктураПараметров;
	
КонецФункции

//rarus tenkam mantis 6897 --

//rarus tenkam 16.08.2017 mantis 10831 +++
Процедура ОтправитьПлановыеДанныев1БД(ДокументСсылка) Экспорт
	
	Если Scan_ПраваИНастройки.Scan_Право("ОбменСПредставительством") И Scan_ПраваИНастройки.Scan_Право("ОбратныйОбменС1БД") Тогда		
	
		ИмяМетода = "SendProductActivityEvent";
		СообщениеОбОшибке = "";
		ОтказОбмена = Ложь;
		
		// Получим структуру данных
		СтруктураПараметров = ПолучитьСтруктуруПараметровМетода(ИмяМетода, Ложь);					
		Для Каждого ТекСтрока Из ДокументСсылка.СоставЗаявки Цикл  
			
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Изделие.IDExternalSystem) Тогда		//31.10.2017 +
				Продолжить;
			КонецЕсли;
			
			//Отправим плановую дату доставки 
			СтруктураПараметров.Вставить("ВидСобытия", "РегистрацияПлановойДатыПрихода");
			// rarus tenkam 15.08.2018 mantis 13381 +++
			//СтруктураПараметров.Вставить("ДатаСобытия", ДокументСсылка.ДатаДоставки);
			СтруктураПараметров.Вставить("ДатаСобытия", ТекСтрока.ДатаДоставкиПлан);
			// rarus tenkam 15.08.2018 mantis 13381 ---
			СтруктураПараметров.Вставить("GuidСобытияВВнешнейСистеме", Строка(ДокументСсылка.УникальныйИдентификатор()));
			СтруктураПараметров.Вставить("ДокументСсылка", ДокументСсылка);
			
			//rarus tenkam 27.09.2017 mantis 10831 +++
			//ПричинаСобытия = Строка(ДокументСсылка);
			//СтруктураПараметров.Вставить("ПричинаСобытия", "Подтверждение документа " + ПричинаСобытия);
			//СтруктураПараметров.Вставить("ТекстСобытия","ХО " + ДокументСсылка.ХозОперация.Наименование);
			
			СтруктураПараметров.Вставить("ПричинаСобытия","ETA " + ДокументСсылка.МестоДоставки.Наименование);
			СтруктураПараметров.Вставить("ТекстСобытия","Подтверждение документа " + Строка(ДокументСсылка));
			//rarus tenkam 27.09.2017 mantis 10831 ---
			
			//СтруктураПараметров.Вставить("Пользователь",ПользователиКлиентСервер.ТекущийПользователь().Наименование);
			//ПользовательИБ = ПользователиКлиентСервер.ТекущийПользователь().ПользовательОС;
			ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь().ПользовательОС;		//rarus tenkam 30.10.2017 10831 +
			ЛогинПользователя = ?(ПользовательИБ = "", ПользователиКлиентСервер.ТекущийПользователь().Наименование, ПолучитьЛогинПользователя(ПользовательИБ));   
			СтруктураПараметров.Вставить("Пользователь",ЛогинПользователя);
			СтруктураПараметров.Вставить("ПользовательСсылка",ПользователиКлиентСервер.ТекущийПользователь());
			СтруктураПараметров.Вставить("ТСGUID",ТекСтрока.Изделие.IDExternalSystem);
			
			//06.10.2017 Оказывается склад обязательный +++  			
			СтруктураПараметров.Вставить("НаименованиеМестаХранения", ДокументСсылка.МестоДоставки.Наименование);
			
			ТипМестаХранения = Scan_ВспомогательныеФункцииСервер.ПолучитьТипМестаХранения(ДокументСсылка.МестоДоставки);
			СтруктураПараметров.Вставить("ТипМестаХранения", ТипМестаХранения);
			
			СтруктураПараметров.Вставить("GUIDИсточника", Строка(ДокументСсылка.МестоДоставки.УникальныйИдентификатор()));
			СтруктураПараметров.Вставить("КодИсточника", ДокументСсылка.МестоДоставки.Код);
			СтруктураПараметров.Вставить("Недействительный", ДокументСсылка.МестоДоставки.Недействительный); //rarus pechek 07.05.2020 mantis 15981
			
			Адрес = Scan_ВспомогательныеФункцииСервер.ПолучитьАдресМестаХранения(ДокументСсылка.МестоДоставки);
			СтруктураПараметров.Вставить("Адрес", Адрес);			
			// ---
			
			//Отправим запрос в 1БД
			ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
			ТекстЗапроса = "";
			ТекЭлементОтвет = ВызватьМетод(ИмяМетода, СтруктураПараметров, ОтказОбмена, ИмяСобытияЖурналаРегистрации,ТекстЗапроса);
			Если Не ОтказОбмена Тогда
				GuidСобытия1БД = Scan_ВебСервисыРазборОтветов.РазборОтветаОтправкиСобытия(ТекЭлементОтвет, ОтказОбмена, СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации, ИмяМетода); 
				// Зафиксируем отправку события
				РегистрыСведений.Scan_Обмен1БДОтправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров,ТекстЗапроса,ТекЭлементОтвет,GuidСобытия1БД);
			Иначе
				// Зафиксируем неотправленное событие
				РегистрыСведений.Scan_Обмен1БДНеотправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров,ТекстЗапроса,ТекЭлементОтвет); 	// mantis 10824 +
			КонецЕсли;
			
		// rarus tenkam 26.09.2017 mantis 10831 +++
		//	//Отправим плановое место доставки
		//	СообщениеОбОшибке = "";
		//	ОтказОбмена = Ложь;
		//	ТекстЗапроса = "";
		//	СтруктураПараметров.Вставить("ВидСобытия", "ИзменениеМестонахождения");		
		//	СтруктураПараметров.Вставить("ДатаСобытия", ДокументСсылка.ДатаДоставки);
		//	СтруктураПараметров.Вставить("GuidСобытияВВнешнейСистеме", Строка(ДокументСсылка.УникальныйИдентификатор()));
		//	СтруктураПараметров.Вставить("ДокументСсылка", ДокументСсылка);
		//	
		//	ПричинаСобытия = Строка(ДокументСсылка);
		//	СтруктураПараметров.Вставить("ПричинаСобытия", "Подтверждение документа " + ПричинаСобытия);
		//	
		//	СтруктураПараметров.Вставить("ТекстСобытия","ХО " + ДокументСсылка.ХозОперация.Наименование);
		//	СтруктураПараметров.Вставить("Пользователь",ПользователиКлиентСервер.ТекущийПользователь().Наименование);
		//	СтруктураПараметров.Вставить("ТСGUID",ТекСтрока.Изделие.IDExternalSystem);
		//	
		//	СтруктураПараметров.Вставить("НаименованиеМестаХранения", ДокументСсылка.МестоДоставки.Наименование);
		//	
		//	ТипМестаХранения = Scan_ВспомогательныеФункцииСервер.ПолучитьТипМестаХранения(ДокументСсылка.МестоДоставки);
		//	СтруктураПараметров.Вставить("ТипМестаХранения", ТипМестаХранения);
		//	
		//	СтруктураПараметров.Вставить("GUIDИсточника", Строка(ДокументСсылка.МестоДоставки.УникальныйИдентификатор()));
		//	СтруктураПараметров.Вставить("КодИсточника", ДокументСсылка.МестоДоставки.Код);
		//	
		//	Адрес = Scan_ВспомогательныеФункцииСервер.ПолучитьАдресМестаХранения(ДокументСсылка.МестоДоставки);
		//	СтруктураПараметров.Вставить("Адрес", Адрес);
		//
		//	//Отправим запрос в 1БД
		//	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
		//	ТекЭлементОтвет = ВызватьМетод(ИмяМетода, СтруктураПараметров, ОтказОбмена, ИмяСобытияЖурналаРегистрации,ТекстЗапроса);
		//	Если Не ОтказОбмена Тогда
		//		GuidСобытия1БД = Scan_ВебСервисыРазборОтветов.РазборОтветаОтправкиСобытия(ТекЭлементОтвет, ОтказОбмена, СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации, ИмяМетода); 
		//		
		//		// Зафиксируем отправку события
		//		РегистрыСведений.Scan_Обмен1БДОтправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров,ТекстЗапроса,ТекЭлементОтвет,GuidСобытия1БД);
		//	    				
		//		//Запишем историю в регистр
		//		РегистрыСведений.Scan_Обмен1БДИсторияМестонахожденияИзделий.ЗаписьИстории(ТекСтрока.Изделие, ДокументСсылка.МестоДоставки, ДокументСсылка.ДатаДоставки, ДокументСсылка, GuidСобытия1БД);
		//	Иначе
		//		// Зафиксируем неотправленное событие
		//		РегистрыСведений.Scan_Обмен1БДНеотправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров,ТекстЗапроса,ТекЭлементОтвет); 	// mantis 10824 +
		//	КонецЕсли;
		// rarus tenkam 26.09.2017 mantis 10831 ---
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьGUIDСобытия(GuidСобытияВВнешнейСистеме, Вид, Изделие, ПричинаСобытия = "") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_Обмен1БДОтправленныеСобытия.GuidСобытия1БД КАК GuidСобытия1БД,
	|	Scan_Обмен1БДОтправленныеСобытия.ВидСобытия КАК ВидСобытия,
	|	Scan_Обмен1БДОтправленныеСобытия.ДатаСобытия КАК ДатаСобытия
	|ИЗ
	|	РегистрСведений.Scan_Обмен1БДОтправленныеСобытия КАК Scan_Обмен1БДОтправленныеСобытия
	|ГДЕ
	|	Scan_Обмен1БДОтправленныеСобытия.Изделие = &Изделие
	|	И Scan_Обмен1БДОтправленныеСобытия.GuidСобытияВВнешнейСистеме = &GuidСобытияВВнешнейСистеме
	|	И Scan_Обмен1БДОтправленныеСобытия.ВидСобытия = &Вид
	|	//УсловиеПричины
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСобытия УБЫВ";
	
	Запрос.УстановитьПараметр("GuidСобытияВВнешнейСистеме", GuidСобытияВВнешнейСистеме );
	Запрос.УстановитьПараметр("Вид", Вид);
	Запрос.УстановитьПараметр("Изделие", Изделие);
	
	Если ЗначениеЗаполнено(ПричинаСобытия) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УсловиеПричины", "И Scan_Обмен1БДОтправленныеСобытия.ПричинаСобытия = &ПричинаСобытия");
		Запрос.УстановитьПараметр("ПричинаСобытия", ПричинаСобытия);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.GuidСобытия1БД;	
	Иначе
		//Нет события
		Возврат "";
	КонецЕсли;			
КонецФункции

//rarus tenkam 16.08.2017 mantis 10831 ---

//rarus tenkam 16.08.2017 mantis 10824 +++
Процедура ОтправитьОтменуПлановыхДанныех1БД(ДокументСсылка, МассивИзделий = Неопределено) Экспорт
	
	Если Scan_ПраваИНастройки.Scan_Право("ОбменСПредставительством") И Scan_ПраваИНастройки.Scan_Право("ОбратныйОбменС1БД") Тогда		
	
		ИмяМетода = "SendProductActivityEvent";
		СообщениеОбОшибке = "";
		ОтказОбмена = Ложь;
		
		// Получим структуру данных
		СтруктураПараметров = ПолучитьСтруктуруПараметровМетода(ИмяМетода, Ложь);
		
		// rarus tenkam 26.02.2018 mantis 12831 +++    		
		Если НЕ ЗначениеЗаполнено(МассивИзделий) Тогда
			МассивИзделий = ДокументСсылка.СоставЗаявки.ВыгрузитьКолонку("Изделие");
		КонецЕсли;
		
		Для Каждого ТекИзделие Из МассивИзделий Цикл 		
		//Для Каждого ТекСтрока Из ДокументСсылка.СоставЗаявки Цикл  	
		
			Если НЕ ЗначениеЗаполнено(ТекИзделие) Тогда
				Продолжить;
			КонецЕсли;
			
			//Если НЕ ЗначениеЗаполнено(ТекСтрока.Изделие.IDExternalSystem) Тогда		//31.10.2017 +
			Если НЕ ЗначениеЗаполнено(ТекИзделие.IDExternalSystem) Тогда		
			// rarus tenkam 26.02.2018 mantis 12831 ---
				Продолжить;
			КонецЕсли;
			
			//Отправим отмену планового места доставки
			СообщениеОбОшибке = "";
			ОтказОбмена = Ложь;
			ТекстЗапроса = "";
			СтруктураПараметров.Вставить("ВидСобытия", "ОтменаИзменениеМестонахождения");		
			СтруктураПараметров.Вставить("ДатаСобытия", ТекущаяДата());
			СтруктураПараметров.Вставить("GuidСобытияВВнешнейСистеме", Строка(ДокументСсылка.УникальныйИдентификатор()));
			СтруктураПараметров.Вставить("ДокументСсылка", ДокументСсылка);
			//rarus tenkam 27.09.2017 mantis 10831 +++
			//ПричинаСобытия = Строка(ДокументСсылка);
			//СтруктураПараметров.Вставить("ПричинаСобытия", "Снятие подтверждения/аннулирование документа " + ПричинаСобытия);
			//СтруктураПараметров.Вставить("ТекстСобытия","ХО " + ДокументСсылка.ХозОперация.Наименование);
			СтруктураПараметров.Вставить("ПричинаСобытия", "Отмена плановой даты прихода");
			СтруктураПараметров.Вставить("ТекстСобытия","Снятие подтверждения/аннулирование документа/прибытие в место доставки " + Строка(ДокументСсылка));
			
			//rarus tenkam 27.09.2017 mantis 10831 +++
			//СтруктураПараметров.Вставить("Пользователь",ПользователиКлиентСервер.ТекущийПользователь().Наименование);
			//ПользовательИБ = ПользователиКлиентСервер.ТекущийПользователь().ПользовательОС;
			ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь().ПользовательОС;		//rarus tenkam 30.10.2017 10831 +
			ЛогинПользователя = ?(ПользовательИБ = "", ПользователиКлиентСервер.ТекущийПользователь().Наименование, ПолучитьЛогинПользователя(ПользовательИБ));   
			СтруктураПараметров.Вставить("Пользователь",ЛогинПользователя);
			СтруктураПараметров.Вставить("ПользовательСсылка",ПользователиКлиентСервер.ТекущийПользователь());
			// rarus tenkam 26.02.2018 mantis 12831 +++
			//СтруктураПараметров.Вставить("ТСGUID",ТекСтрока.Изделие.IDExternalSystem);
			СтруктураПараметров.Вставить("ТСGUID",ТекИзделие.IDExternalSystem);
			// rarus tenkam 26.02.2018 mantis 12831 ---			
			
			//rarus tenkam 27.09.2017 mantis 10831 +++
			//Получит ГУИД события, которое нужно отменить
			
			// rarus tenkam 26.02.2018 mantis 12831 +++
			//GuidСобытия = ПолучитьGUIDСобытия(Строка(ДокументСсылка.УникальныйИдентификатор()), "РегистрацияПлановойДатыПрихода", ТекСтрока.Изделие);
			GuidСобытия = ПолучитьGUIDСобытия(Строка(ДокументСсылка.УникальныйИдентификатор()), "РегистрацияПлановойДатыПрихода", ТекИзделие);
			// rarus tenkam 26.02.2018 mantis 12831 ---
			Если ЗначениеЗаполнено(GuidСобытия) Тогда
				СтруктураПараметров.Вставить("GuidСобытия",GuidСобытия);	
			Иначе
				//Нет события, которое нужно отменить
				Продолжить;	
			КонецЕсли;
			
			//Проверим, вдруг отмену уже отправляли
			
			// rarus tenkam 26.02.2018 mantis 12831 +++
			//Если РегистрыСведений.Scan_Обмен1БДОтправленныеСобытия.ОтменаПлановыеДанныеОтправлена(СтруктураПараметров.GuidСобытияВВнешнейСистеме, СтруктураПараметров.GuidСобытия, ТекСтрока.Изделие) Тогда
			Если РегистрыСведений.Scan_Обмен1БДОтправленныеСобытия.ОтменаПлановыеДанныеОтправлена(СтруктураПараметров.GuidСобытияВВнешнейСистеме, СтруктураПараметров.GuidСобытия, ТекИзделие) Тогда
			// rarus tenkam 26.02.2018 mantis 12831 ---	
				Продолжить;
			КонецЕсли;
			//rarus tenkam 27.09.2017 mantis 10831 ---
			
			//Отправим запрос в 1БД
			ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
			ТекЭлементОтвет = ВызватьМетод(ИмяМетода, СтруктураПараметров, ОтказОбмена, ИмяСобытияЖурналаРегистрации, ТекстЗапроса);
			Если Не ОтказОбмена Тогда
				GuidСобытия1БД = Scan_ВебСервисыРазборОтветов.РазборОтветаОтправкиСобытия(ТекЭлементОтвет, ОтказОбмена, СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации, ИмяМетода); 
				
				// Зафиксируем отправку события
				РегистрыСведений.Scan_Обмен1БДОтправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров,ТекстЗапроса,ТекЭлементОтвет,GuidСобытия1БД);
			    				
			Иначе
				// Зафиксируем неотправленное событие
				РегистрыСведений.Scan_Обмен1БДНеотправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров,ТекстЗапроса,ТекЭлементОтвет);  // mantis 10824 +
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

Процедура ОтправитьИзменениеМестонахождения(СтруктураПараметровФЗ) Экспорт
	
	ДокументСсылка = СтруктураПараметровФЗ.ДокументСсылка;
	ТабЗначенийМестонахождениеИзделий = СтруктураПараметровФЗ.ТабЗначенийМестонахождениеИзделий;	
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.Scan_ДвижениеИзделий") ИЛИ 
		ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.Scan_ЗаявкаПеревозчику") Тогда
		
		ИмяТЧ = "СоставЗаявки";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.Scan_ПеремещениеИзделий") Тогда 
		ИмяТЧ = "ИзделияДляПеремещения";	
	КонецЕсли;
	
	ЭтоТочноАннулирование = Ложь;	//rarus tenkam 28.09.2017 mantis 10831 +
	Если ТабЗначенийМестонахождениеИзделий.Количество() = 0 Тогда
		// Документ распровели или аннулировали, передадим текущее местонахождение
		Для Каждого ТекСтрока Из ДокументСсылка[ИмяТЧ] Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Изделие.IDExternalSystem) Тогда
				Продолжить;
			КонецЕсли;
			
			// Получим тек. местонахождение изделия
			ТекДанные = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестонахождениеИДатуПриходаИзделия(ТекСтрока.Изделие, ТекущаяДата());
			Если ТекДанные = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ТекМестонахождение = ТекДанные.МестоХранения;
			ТекДатаПрихода = ТекДанные.ДатаПрихода;	
			
			// Получим место хранения, которое было отправлено в 1БД
			ПоследниеДанныеПоИзделию = РегистрыСведений.Scan_Обмен1БДИсторияМестонахожденияИзделий.ПолучитьМестонахождение(ТекСтрока.Изделие,ТекущаяДата());
			//rarus tenkam 16.03.2017 mantis 7623 +++
			Если ПоследниеДанныеПоИзделию = Неопределено ИЛИ ПоследниеДанныеПоИзделию.Количество() = 0 Тогда
				ПоследнееОтправленноеМестонахождение = Неопределено;
			Иначе
				//rarus tenkam 16.03.2017 mantis 7623 ---
				ПоследнееОтправленноеМестонахождение = ПоследниеДанныеПоИзделию[0].МестоХранения;
				//rarus tenkam 16.03.2017 mantis 7623 +++
			КонецЕсли;
			//rarus tenkam 16.03.2017 mantis 7623 ---
			
			Если ТекМестонахождение <> ПоследнееОтправленноеМестонахождение Тогда
				// Возможно, это аннулирование или отмена проведения - отправим тек. местонахождение
				// Также возможно по какой-то причине последнее местоположение изделия не было отправлено
				
				//rarus tenkam 16.11.2017 mantis 10831 +++
				Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.Scan_ЗаявкаПеревозчику") Тогда					
					Если ДокументСсылка.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Аннулирована ИЛИ
						ДокументСсылка.ПометкаУдаления ИЛИ НЕ ДокументСсылка.Проведен ИЛИ ДокументСсылка.Сторнирован Тогда 
						ЭтоТочноАннулирование = Истина;		//rarus tenkam 28.09.2017 mantis 10831 +
					КонецЕсли;
				КонецЕсли;
				//rarus tenkam 16.11.2017 mantis 10831 ---
				
				ИмяМетода = "SendProductActivityEvent";
				СообщениеОбОшибке = "";
				ОтказОбмена = Ложь;
				
				// Получим структуру данных
				СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода, Ложь);	
				
				СтруктураПараметров.Вставить("ВидСобытия", "ИзменениеМестонахождения");		//rarus tenkam 28.06.2017 mantis 9065 +
				СтруктураПараметров.Вставить("ДатаСобытия", ТекДатаПрихода);
				СтруктураПараметров.Вставить("GuidСобытияВВнешнейСистеме", Строка(ДокументСсылка.УникальныйИдентификатор()));
				СтруктураПараметров.Вставить("ДокументСсылка", ДокументСсылка);
				
				// rarus tenkam 26.09.2017 mantis 10831 +++
				//ПричинаСобытия = "Отмена проведения / сторнирование документа " + Строка(ДокументСсылка);
				//СтруктураПараметров.Вставить("ПричинаСобытия", ПричинаСобытия);
				//
				//СтруктураПараметров.Вставить("ТекстСобытия","ХО " + ДокументСсылка.ХозОперация.Наименование);
				СтруктураПараметров.Вставить("ПричинаСобытия", ТекМестонахождение.Наименование);
				СтруктураПараметров.Вставить("ТекстСобытия","Отмена проведения / аннулирование документа " + Строка(ДокументСсылка));
				// rarus tenkam 26.09.2017 mantis 10831 ---

				//СтруктураПараметров.Вставить("Пользователь",ПользователиКлиентСервер.ТекущийПользователь().Наименование);
				//ПользовательИБ = ПользователиКлиентСервер.ТекущийПользователь().ПользовательОС;
				ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь().ПользовательОС;		//rarus tenkam 30.10.2017 10831 +
				ЛогинПользователя = ?(ПользовательИБ = "", ПользователиКлиентСервер.ТекущийПользователь().Наименование, ПолучитьЛогинПользователя(ПользовательИБ));   
				СтруктураПараметров.Вставить("Пользователь",ЛогинПользователя);
				СтруктураПараметров.Вставить("ПользовательСсылка",ПользователиКлиентСервер.ТекущийПользователь());
				СтруктураПараметров.Вставить("ТСGUID",ТекСтрока.Изделие.IDExternalSystem);
				
				СтруктураПараметров.Вставить("НаименованиеМестаХранения", ТекМестонахождение.Наименование);
				
				ТипМестаХранения = Scan_ВспомогательныеФункцииСервер.ПолучитьТипМестаХранения(ТекМестонахождение);
				СтруктураПараметров.Вставить("ТипМестаХранения", ТипМестаХранения);
				
				СтруктураПараметров.Вставить("GUIDИсточника", Строка(ТекМестонахождение.УникальныйИдентификатор()));
				СтруктураПараметров.Вставить("КодИсточника", ТекМестонахождение.Код);
				СтруктураПараметров.Вставить("Недействительный", ТекМестонахождение.Недействительный); //rarus pechek 07.05.2020 mantis 15981
				
				Адрес = Scan_ВспомогательныеФункцииСервер.ПолучитьАдресМестаХранения(ТекМестонахождение);
				СтруктураПараметров.Вставить("Адрес", Адрес);
				
				//Отправим запрос в 1БД
				ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
				ТекстЗапроса = "";
				ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, ОтказОбмена, ИмяСобытияЖурналаРегистрации, ТекстЗапроса);
				Если Не ОтказОбмена Тогда
					
					GuidСобытия1БД = Scan_ВебСервисыРазборОтветов.РазборОтветаОтправкиСобытия(ТекЭлементОтвет, ОтказОбмена, СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации, ИмяМетода); 
					
					//Запишем историю в регистр
					РегистрыСведений.Scan_Обмен1БДИсторияМестонахожденияИзделий.ЗаписьИстории(ТекСтрока.Изделие, ТекМестонахождение, ТекДатаПрихода, ДокументСсылка, GuidСобытия1БД);
					// Зафиксируем отправку события
					РегистрыСведений.Scan_Обмен1БДОтправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров, ТекстЗапроса, ТекЭлементОтвет, GuidСобытия1БД);		// mantis 10831 +
				Иначе
					// Зафиксируем неотправленное событие
					РегистрыСведений.Scan_Обмен1БДНеотправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров, ТекстЗапроса, ТекЭлементОтвет);					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		//rarus tenkam 27.09.2017 mantis 10831 +++ 		
		Если ЭтоТочноАннулирование Тогда
			ОтправитьОтменуПлановыхДанныех1БД(ДокументСсылка);
		КонецЕсли;
		//rarus tenkam 27.09.2017 mantis 10831 ---
	Иначе
		//Есть движения документа
		Для Каждого ТекСтрока Из ТабЗначенийМестонахождениеИзделий Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Изделие.IDExternalSystem) Тогда
				Продолжить;
			КонецЕсли;
			Если ТекСтрока.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
				Продолжить;
			КонецЕсли;
			
			//Проверим, вдруг уже отправляли
			Если РегистрыСведений.Scan_Обмен1БДИсторияМестонахожденияИзделий.ТакаяЗаписьУжеЕсть(ТекСтрока.Изделие, ТекСтрока.МестоХранения, ТекСтрока.ДатаПрихода, ДокументСсылка) Тогда 
				Продолжить;
			КонецЕсли;
			
			ИмяМетода = "SendProductActivityEvent";
			СообщениеОбОшибке = "";
			ОтказОбмена = Ложь;
			
			// Получим структуру данных
			СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода, Ложь);					
			
			СтруктураПараметров.Вставить("ВидСобытия", "ИзменениеМестонахождения");		//rarus tenkam 28.06.2017 mantis 9065 +
			СтруктураПараметров.Вставить("ДатаСобытия", ТекСтрока.ДатаПрихода);
			СтруктураПараметров.Вставить("GuidСобытияВВнешнейСистеме", Строка(ДокументСсылка.УникальныйИдентификатор()));
			СтруктураПараметров.Вставить("ДокументСсылка",ДокументСсылка);
			
			// rarus tenkam 26.09.2017 mantis 10831 +++
			//ПричинаСобытия = Строка(ДокументСсылка);
			//СтруктураПараметров.Вставить("ПричинаСобытия", ПричинаСобытия);
			//СтруктураПараметров.Вставить("ТекстСобытия","ХО " + ТекСтрока.ХозОперация.Наименование);
			
			СтруктураПараметров.Вставить("ПричинаСобытия", ТекСтрока.МестоХранения.Наименование);
			СтруктураПараметров.Вставить("ТекстСобытия","Изменение местонахождения по документу " + Строка(ДокументСсылка));
			// rarus tenkam 26.09.2017 mantis 10831 ---
			
			//СтруктураПараметров.Вставить("Пользователь",ТекСтрока.Пользователь.Наименование);
			//ПользовательИБ = ПользователиКлиентСервер.ТекущийПользователь().ПользовательОС;
			ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь().ПользовательОС;		//rarus tenkam 30.10.2017 10831 +
			ЛогинПользователя = ?(ПользовательИБ = "", ПользователиКлиентСервер.ТекущийПользователь().Наименование, ПолучитьЛогинПользователя(ПользовательИБ));   
			СтруктураПараметров.Вставить("Пользователь",ЛогинПользователя);
			СтруктураПараметров.Вставить("ПользовательСсылка",ПользователиКлиентСервер.ТекущийПользователь());
			СтруктураПараметров.Вставить("ТСGUID",ТекСтрока.Изделие.IDExternalSystem);
			
			СтруктураПараметров.Вставить("НаименованиеМестаХранения", ТекСтрока.МестоХранения.Наименование);
			
			ТипМестаХранения = Scan_ВспомогательныеФункцииСервер.ПолучитьТипМестаХранения(ТекСтрока.МестоХранения);
			СтруктураПараметров.Вставить("ТипМестаХранения", ТипМестаХранения);
			
			СтруктураПараметров.Вставить("GUIDИсточника", Строка(ТекСтрока.МестоХранения.УникальныйИдентификатор()));
			СтруктураПараметров.Вставить("КодИсточника", ТекСтрока.МестоХранения.Код);
			СтруктураПараметров.Вставить("Недействительный", ТекСтрока.МестоХранения.Недействительный); //rarus pechek 07.05.2020 mantis 15981
			
			Адрес = Scan_ВспомогательныеФункцииСервер.ПолучитьАдресМестаХранения(ТекСтрока.МестоХранения);
			СтруктураПараметров.Вставить("Адрес", Адрес);
			
			//rarus tenkam 28.09.2017 mantis 10831 +++
			//Проверим, вдруг это корректировка даты
			GuidСобытия = ПолучитьGUIDСобытия(Строка(ДокументСсылка.УникальныйИдентификатор()), "ИзменениеМестонахождения", ТекСтрока.Изделие, ТекСтрока.МестоХранения.Наименование);
			Если ЗначениеЗаполнено(GuidСобытия) Тогда
				СтруктураПараметров.Вставить("GuidСобытия",GuidСобытия);
				СтруктураПараметров.ТекстСобытия = СтруктураПараметров.ТекстСобытия + " (корректировка события)";
			КонецЕсли;
			//rarus tenkam 28.09.2017 mantis 10831 ---
			
			//Отправим запрос в 1БД
			ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
			ТекстЗапроса = "";
			ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, ОтказОбмена, ИмяСобытияЖурналаРегистрации, ТекстЗапроса);
			Если Не ОтказОбмена Тогда
				GuidСобытия1БД = Scan_ВебСервисыРазборОтветов.РазборОтветаОтправкиСобытия(ТекЭлементОтвет, ОтказОбмена, СообщениеОбОшибке,ИмяСобытияЖурналаРегистрации, ИмяМетода); 
				
				//Запишем историю в регистр
				РегистрыСведений.Scan_Обмен1БДИсторияМестонахожденияИзделий.ЗаписьИстории(ТекСтрока.Изделие, ТекСтрока.МестоХранения, ТекСтрока.ДатаПрихода, ДокументСсылка, GuidСобытия1БД);
				// Зафиксируем отправку события
				РегистрыСведений.Scan_Обмен1БДОтправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров, ТекстЗапроса, ТекЭлементОтвет, GuidСобытия1БД);		// mantis 10831 +
			Иначе
				// Зафиксируем неотправленное событие
				РегистрыСведений.Scan_Обмен1БДНеотправленныеСобытия.ЗаписатьСобытиеВРегистр(СтруктураПараметров, ТекстЗапроса, ТекЭлементОтвет);					
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли; 	
КонецПроцедуры 

Функция ПолучитьЛогинПользователя(ПользовательИБ) Экспорт
	Логин = "";
	Если НЕ ЗначениеЗаполнено(ПользовательИБ) Тогда
		Возврат Логин;
	КонецЕсли;
	
	ИсхСтрока = ПользовательИБ;
	Поз = Найти(ИсхСтрока, "\");
	ПозК = 0;
	Пока Поз <> 0 Цикл
		ПозК = ПозК + Поз;
		ИсхСтрока = Сред(ИсхСтрока, Поз+1);
		Поз = Найти(ИсхСтрока, "\");
	КонецЦикла;    
	Логин = Сред(ПользовательИБ,ПозК + 1);
	
	Возврат Логин;
	
КонецФункции

//rarus tenkam 16.09.2017 mantis 10824 ---

// rarus tenkam 08.11.2018 mantis 13686 +++
Процедура ОтправитьОтменуИРегистрациюПлановыхДанныхВ1БД(ПараметрыФоновогоЗадания) Экспорт
	// Отправим отмену старых ЕТА
	ОтправитьОтменуПлановыхДанныех1БД(ПараметрыФоновогоЗадания.ДокументСсылка, ПараметрыФоновогоЗадания.МассивПродуктовСИзмененнойПлановойДатой);
		
	// Отправим новые данные по ЕТА
	ОтправитьПлановыеДанныев1БД(ПараметрыФоновогоЗадания.ДокументСсылка); 	
КонецПроцедуры
// rarus tenkam 08.11.2018 mantis 13686 ---

//rarus vikhle 16.04.2020 mt 15695 +++ 
////////////////////////////////////////////////////////////////////////////////
// ВЫЗОВ ВЕБ-СЕРВИСА ПОРТАЛА СКАНИИ

Функция ВызовВебСервисаПортала(ИмяМетодаWS,СтруктураПараметров,Отказ,ИмяСобытияЖурналаРегистрации) Экспорт 
	
	ЛогинНаПортале = Scan_ПраваИНастройки.Scan_Право("ЛогинНаПортале");
	ПарольНаПортале = Scan_ПраваИНастройки.Scan_Право("ПарольНаПортале");
	
	МестоположениеWSDL = Scan_ПраваИНастройки.Scan_Право("АдресВебСервисаПортала");
	WSОпределение = Новый WSОпределения(МестоположениеWSDL);
 
 	ПространствоИмен =  WSОпределение.Сервисы[0].URIПространстваИмен;
	ИмяСервиса = WSОпределение.Сервисы[0].Имя;
	ИмяТочкиПодключения =  WSОпределение.Сервисы[0].ТочкиПодключения[0].Имя;
	
	Прокси = Новый WSПрокси(WSОпределение, ПространствоИмен, ИмяСервиса, ИмяТочкиПодключения);
	
	Прокси.Пользователь = ЛогинНаПортале;
	Прокси.Пароль = ПарольНаПортале;
	
	//rarus agar 13.03.2021 17373 ++
	ТекстЗапроса = СформироватьТекстЗапросаПортала(СтруктураПараметров);
	//rarus agar 13.03.2021 17373 --
	
	//универсальные параметры методов
	faultcode = "";
	faultstring = "";
	detail = "";
	
	Попытка
		Если ИмяМетодаWS = "getUser" Тогда
			id = СтруктураПараметров.id;
			Прокси.getUser(id,,faultcode,faultstring,,detail);
		ИначеЕсли ИмяМетодаWS = "addUpdateUser" Тогда
			id = СтруктураПараметров.id;
			tokenofms = СтруктураПараметров.tokenofms;
			// rarus tenkam 31.12.2020 mantis 16934 +++
			//Прокси.addUpdateUser(,,,,,,,tokenofms,id,faultcode,detail);
			Прокси.addUpdateUser(,,,,,,,tokenofms,id,,faultcode,detail);
			// rarus tenkam 31.12.2020 mantis 16934 ---
		ИначеЕсли ИмяМетодаWS = "checkUserTokenIsOnline" Тогда
			login = СтруктураПараметров.login;
			token = СтруктураПараметров.token;
			Прокси.checkUserTokenIsOnline(login,token,faultcode, detail);
		КонецЕсли;	
	Исключение
		ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СообщениеОбОшибке = "Не удалось вызвать метод "+ИмяМетодаWS+" портала: " + ИнформацияОбОшибке;
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СообщениеОбОшибке);
		Отказ = Истина;
		
		//rarus agar 13.03.2021 17373 ++
		ЗаписьЖурналаОбменаСПорталом(ИмяМетодаWS, , ТекстЗапроса, ИнформацияОбОшибке, Ложь);
		//rarus agar 13.03.2021 17373 --
		
		Возврат СообщениеОбОшибке;
	КонецПопытки;
	
	//rarus agar 13.03.2021 17373 ++
	ТекстОтвета = ПолучитьТекстОтветаПортала(Прокси, detail);
	ЗаписьЖурналаОбменаСПорталом(ИмяМетодаWS, , ТекстЗапроса, ТекстОтвета, Истина);
	//rarus agar 13.03.2021 17373 --
	
	Если faultcode = 0 Тогда 
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,УровеньЖурналаРегистрации.Информация,,,"Успешно вызван метод "+ ИмяМетодаWS+" портала" );
		Возврат РазобратьОтветВебСервисаПортала (detail,ИмяМетодаWS); 
	Иначе
		Отказ = Истина;
		СообщениеОбОшибке = "Метод "+ ИмяМетодаWS + " портала вернул ошибку " + ?(faultstring = "",detail,faultstring);
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СообщениеОбОшибке);
		Возврат СообщениеОбОшибке;
	КонецЕсли;
КонецФункции

Функция РазобратьОтветВебСервисаПортала(ОбъектXDTO,ИмяМетодаWS)
	Если ИмяМетодаWS = "getUser" Тогда 	
		ДанныеОСотруднике = Новый Структура;
		ДанныеОСотруднике.Вставить("Логин",ОбъектXDTO.login);
		ДанныеОСотруднике.Вставить("Имя",ОбъектXDTO.name);
		ДанныеОСотруднике.Вставить("Отчество",ОбъектXDTO.middlename);
		ДанныеОСотруднике.Вставить("Фамилия",ОбъектXDTO.lastname);
		ДанныеОСотруднике.Вставить("Почта", ОбъектXDTO.email);
		ДанныеОСотруднике.Вставить("Телефон",ОбъектXDTO.phone);
		ДанныеОСотруднике.Вставить("Пароль",ОбъектXDTO.tokenofms);
		Возврат ДанныеОСотруднике;
	ИначеЕсли  ИмяМетодаWS = "addUpdateUser" ИЛИ ИмяМетодаWS = "checkUserTokenIsOnline" Тогда
		Возврат Истина;
	КонецЕсли;
КонецФункции

Функция ПолучитьСтруктуруПараметровМетодаПортала(ИмяМетода) Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	Если ИмяМетода = "getUser" Тогда
		СтруктураПараметров.Вставить("id");
	ИначеЕсли ИмяМетода = "checkUserTokenIsOnline" Тогда
		СтруктураПараметров.Вставить("login");
		СтруктураПараметров.Вставить("token");
	ИначеЕсли ИмяМетода = "addUpdateUser" Тогда
		СтруктураПараметров.Вставить("tokenofms");
		СтруктураПараметров.Вставить("id");
	КонецЕсли;
	Возврат СтруктураПараметров; 	
КонецФункции

//rarus vikhle 16.04.2020 mt 15695 ---

//rarus agar 13.03.2021 17373 ++
Функция СформироватьТекстЗапросаПортала(ПараметрыВызова) Экспорт
	
	ТекстЗапроса = "";
	
	ФрагментыТекстаЗапроса = Новый Массив;
	
	Для Каждого КлючИЗначение Из ПараметрыВызова Цикл
		СтрокаПараметра = ""+ КлючИЗначение.Ключ +": "+ КлючИЗначение.Значение;
		ФрагментыТекстаЗапроса.Добавить(СтрокаПараметра);
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(ФрагментыТекстаЗапроса, Символы.ПС);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТекстОтветаПортала(Прокси, ОтветXDTO) Экспорт
	
	ТекстОтвета = "";
	
	Если ТипЗнч(ОтветXDTO) = Тип("ОбъектXDTO") Тогда
		ЗаписьXML  = Новый ЗаписьXML;
		ЗаписьXML.УстановитьСтроку();
		
		Прокси.ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОтветXDTO);
		
		ТекстОтвета = ЗаписьXML.Закрыть();
	Иначе
		ТекстОтвета = Строка(ОтветXDTO);
	КонецЕсли;
	
	Возврат ТекстОтвета;
	
КонецФункции

Процедура ЗаписьЖурналаОбменаСПорталом(ВидЗапроса, Объект = Неопределено, ТекстЗапроса, ТекстОтвета, ОбменВыполненУспешно) Экспорт
	
	ТекВидЗапроса = Scan_ВебСервисыРазборОтветов.ПолучитьПеречислениеПоСтрокеВидаЗапроса(ВидЗапроса);
	
	МенеджерЗаписи = РегистрыСведений.Scan_РегистрацияОбменаСПорталом.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период               = ТекущаяДатаСеанса();
	МенеджерЗаписи.ВидЗапроса           = ТекВидЗапроса;
	МенеджерЗаписи.ДатаВМиллисекундах   = Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(), "ЧЦ=14; ЧВН=; ЧГ=0");
	МенеджерЗаписи.ТекстЗапроса         = ТекстЗапроса;
	МенеджерЗаписи.ТекстОтвета          = ТекстОтвета;
	МенеджерЗаписи.Пользователь         = ПользователиСлужебный.АвторизованныйПользователь();
	МенеджерЗаписи.ОбменВыполненУспешно = ОбменВыполненУспешно;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка записи обмена с порталом", УровеньЖурналаРегистрации.Ошибка, Неопределено, Объект, ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры
//rarus agar 13.03.2021 17373 --

Процедура ЗагрузкаСпецификацииSPORTФоновое (Параметры, АдресХранилища) Экспорт
	
	//вызов метода GetListOfQuotation
	ИмяМетода = "GetListOfSpecifications";
	СообщениеОбОшибке = "";
	Отказ = Ложь;
	СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетода(ИмяМетода);
	СтруктураПараметров.ЗапросИЗКП = "истина";
	СтруктураПараметров.ProductID = Параметры.IDПродуктаКП;
	СтруктураПараметров.GUID = Параметры.КоммерческоеПредложениеSPORT.IDExternalSystem;
	ИмяСобытияЖурналаРегистрации = "Веб-сервис." + ИмяМетода;
	ТекЭлементОтвет = Scan_ВебСервисы.ВызватьМетод(ИмяМетода, СтруктураПараметров, Отказ, ИмяСобытияЖурналаРегистрации);
	
	Если Не Параметры.ОбщаяСпецификация = Неопределено Тогда
		Если НЕ Отказ Тогда
			Scan_ВебСервисыРазборОтветов.РазборОтветаСправочникВерсииСпецификацииПродуктов(ТекЭлементОтвет, Отказ, СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации, ИмяМетода, Параметры.ОбщаяСпецификация, Параметры.ИсходныйОбъект);
		КонецЕсли;	
	КонецЕсли;       	
	
КонецПроцедуры
	
//rarus agar 07.09.2020 15696 ++
////////////////////////////////////////////////////////////////////////////////
// ВЫЗОВ ВЕБ-СЕРВИСА 1С:ДО
	
Функция ВызовВебСервиса1СДО(ИмяМетодаWS, ПараметрыВызова, Отказ = Ложь) Экспорт 
	
	Прокси = ПолучитьПрокси1СДО();
	
	СообщениеОбОшибке = "";
	
	Если ИмяМетодаWS = "setPurchaseOrder" Тогда
		ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод1СДО_setPurchaseOrder(Прокси, ПараметрыВызова, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "setPurchaseOrderApproval" Тогда
		ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод1СДО_setPurchaseOrderApproval(Прокси, ПараметрыВызова, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetOrderStatus" Тогда
		ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод1СДО_GetOrderStatus(Прокси, ПараметрыВызова, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListOfCostCenters" Тогда
		ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод1СДО_GetListOfCostCenters(Прокси, ПараметрыВызова, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListContragent" Тогда
		ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод1СДО_GetListContragent(Прокси, ПараметрыВызова, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListDogovorov" Тогда
		ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод1СДО_GetListDogovorov(Прокси, ПараметрыВызова, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListOfCategories" Тогда
		ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод1СДО_GetListOfCategories(Прокси, ПараметрыВызова, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListOfDeliveries" Тогда
		ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод1СДО_GetListOfDeliveries(Прокси, ПараметрыВызова, Отказ, СообщениеОбОшибке);
	КонецЕсли;
	
	Если Не Отказ Тогда
		Возврат РазборОтвета1СДО(ИмяМетодаWS, ОтветСервиса, Отказ, СообщениеОбОшибке);
	Иначе
		Возврат СообщениеОбОшибке;
	КонецЕсли;
		
КонецФункции

Функция РазборОтвета1СДО(ИмяМетодаWS, ОтветСервиса, Отказ, СообщениеОбОшибке) Экспорт
	
	Если ИмяМетодаWS = "setPurchaseOrder" Тогда
		Возврат Scan_ВебСервисыРазборОтветов.РазборОтвета1СДО_setPurchaseOrder(ОтветСервиса, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "setPurchaseOrderApproval" Тогда
		Возврат Scan_ВебСервисыРазборОтветов.РазборОтвета1СДО_setPurchaseOrderApproval(ОтветСервиса, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetOrderStatus" Тогда
		Возврат Scan_ВебСервисыРазборОтветов.РазборОтвета1СДО_GetOrderStatus(ОтветСервиса, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListOfCostCenters" Тогда
		Возврат Scan_ВебСервисыРазборОтветов.РазборОтвета1СДО_GetListOfCostCenters(ОтветСервиса, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListContragent" Тогда
		Возврат Scan_ВебСервисыРазборОтветов.РазборОтвета1СДО_GetListContragent(ОтветСервиса, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListDogovorov" Тогда
		Возврат Scan_ВебСервисыРазборОтветов.РазборОтвета1СДО_GetListDogovorov(ОтветСервиса, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListOfCategories" Тогда
		Возврат Scan_ВебСервисыРазборОтветов.РазборОтвета1СДО_GetListOfCategories(ОтветСервиса, Отказ, СообщениеОбОшибке);
	ИначеЕсли ИмяМетодаWS = "GetListOfDeliveries" Тогда
		Возврат Scan_ВебСервисыРазборОтветов.РазборОтвета1СДО_GetListOfDeliveries(ОтветСервиса, Отказ, СообщениеОбОшибке);
	КонецЕсли;
	
КонецФункции
//rarus agar 07.09.2020 15696 --

//rarus agar 15.10.2020 15696 ++
Функция ПолучитьПрокси1СДО() Экспорт
	
	Логин1СДО  = Scan_ПраваИНастройки.Scan_Право("Логин1СДО");
	Пароль1СДО = Scan_ПраваИНастройки.Scan_Право("Пароль1СДО");
	
	МестоположениеWSDL = Scan_ПраваИНастройки.Scan_Право("АдресВебСервиса1СДО");
	WSОпределение = Новый WSОпределения(МестоположениеWSDL+"?wsdl", Логин1СДО, Пароль1СДО);
	
	ПространствоИмен    = WSОпределение.Сервисы[0].URIПространстваИмен;
	ИмяСервиса          = WSОпределение.Сервисы[0].Имя;
	ИмяТочкиПодключения = WSОпределение.Сервисы[0].ТочкиПодключения[0].Имя;
	
	Прокси = Новый WSПрокси(WSОпределение, ПространствоИмен, ИмяСервиса, ИмяТочкиПодключения);
	
	Прокси.Пользователь = Логин1СДО;
	Прокси.Пароль       = Пароль1СДО;
	
	Возврат Прокси;
	
КонецФункции

Функция СформироватьТекстЗапроса1СДО(ИмяМетодаWS, Прокси, ПараметрыВызова, ОбъектXDTO = Неопределено) Экспорт
	
	ТекстЗапроса = "";
	
	Если    ИмяМетодаWS = "setPurchaseOrder" 
		Или ИмяМетодаWS = "SetPurchaseOrder"
		Или ИмяМетодаWS = "GetListDogovorov"
		Тогда
		ЗаписьXML  = Новый ЗаписьXML;
		ЗаписьXML.УстановитьСтроку();
		
		Прокси.ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОбъектXDTO);
		
		ТекстЗапроса = ЗаписьXML.Закрыть();
	ИначеЕсли ИмяМетодаWS = "GetOrderStatus"
		Или   ИмяМетодаWS = "GetListOfCostCenters"
		Или   ИмяМетодаWS = "GetListContragent"
		Или   ИмяМетодаWS = "GetListOfCategories"
		Или   ИмяМетодаWS = "GetListOfDeliveries"
		Или   ИмяМетодаWS = "setPurchaseOrderApproval"
		Или   ИмяМетодаWS = "SetPurchaseOrderApproval"
		Тогда
		Для Каждого КлючИЗначение Из ПараметрыВызова Цикл
			СтрокаПараметра = ""+ КлючИЗначение.Ключ +": "+ КлючИЗначение.Значение;
			ТекстЗапроса    = ТекстЗапроса + СтрокаПараметра + Символы.ПС;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТекстОтвета1СДО(Прокси, ОтветXDTO) Экспорт
	
	ТекстОтвета = "";
	
	Если ТипЗнч(ОтветXDTO) = Тип("ОбъектXDTO") Тогда
		ЗаписьXML  = Новый ЗаписьXML;
		ЗаписьXML.УстановитьСтроку();
		
		Прокси.ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОтветXDTO);
		
		ТекстОтвета = ЗаписьXML.Закрыть();
	Иначе
		ТекстОтвета = Строка(ОтветXDTO);
	КонецЕсли;
	
	Возврат ТекстОтвета;
	
КонецФункции

Процедура ЗаписьЖурналаОбмена1СДО(ВидЗапроса, Объект = Неопределено, ТекстЗапроса, ТекстОтвета, ОбменВыполненУспешно) Экспорт
	
	ТекВидЗапроса = Scan_ВебСервисыРазборОтветов.ПолучитьПеречислениеПоСтрокеВидаЗапроса(ВидЗапроса);
	
	МенеджерЗаписи = РегистрыСведений.Scan_РегистрацияОбменаС1СДО.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период               = ТекущаяДатаСеанса();
	МенеджерЗаписи.ВидЗапроса           = ТекВидЗапроса;
	МенеджерЗаписи.ДатаВМиллисекундах   = Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(), "ЧЦ=14; ЧВН=; ЧГ=0");
	МенеджерЗаписи.ТекстЗапроса         = ТекстЗапроса;
	МенеджерЗаписи.ТекстОтвета          = ТекстОтвета;
	МенеджерЗаписи.Пользователь         = ПользователиСлужебный.АвторизованныйПользователь();
	МенеджерЗаписи.ОбменВыполненУспешно = ОбменВыполненУспешно;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка записи обмена с 1С:ДО", УровеньЖурналаРегистрации.Ошибка, Неопределено, Объект, ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры
//rarus agar 15.10.2020 15696 --




