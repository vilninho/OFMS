// rarus tenkam 02.06.2020 mantis 15715 +++
#Область УДАЛЕНИЕ
//rarus sergei 22.11.2016 mantis 6965 ++
//rarus bonmak 09.08.2021 16834 удалить вместе с старым АРМ отдела логистики 
Процедура ЗагрузитьФайлОтСканияПитер(ЗначенияВыбранныхПараметров, Параметры) Экспорт  
		  
	Если ЗначенияВыбранныхПараметров = Неопределено ИЛИ
		ЗначенияВыбранныхПараметров = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	//rarus FominskiyAS 19.04.2019  mantis 14191 +++
	//Сообщить("Начата загрузка файла"+" "+ТекущаяДата());
	Сообщить(Нстр("ru = 'Начата загрузка файла'; en = 'Downloading'")+" "+ТекущаяДата());
	//rarus FominskiyAS 19.04.2019  mantis 14191 ---
	

	
	ДвоичныеДанные=Новый ДвоичныеДанные(ЗначенияВыбранныхПараметров.ПутьКФайлу);
    Адрес= ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
	Scan_ВспомогательныеФункцииСервер.ПрочитатьТабличныйДокумент(Адрес,ЗначенияВыбранныхПараметров);	
	
	//ПрочитатьТабличныйДокумент(ЗначенияВыбранныхПараметров);
	
		
	//rarus FominskiyAS 19.04.2019  mantis 14191 +++
	//Сообщить("Загрузка файла завершена"+" "+ТекущаяДата());
	Сообщить(Нстр("ru = 'Загрузка файла завершена'; en = 'Completed'")+" "+ТекущаяДата());
	//rarus FominskiyAS 19.04.2019  mantis 14191 ---
	

КонецПроцедуры
//rarus sergei 22.11.2016 mantis 6965 --
#КонецОбласти
// rarus tenkam 02.06.2020 mantis 15715 ---


//rarus tenkam 23.11.2016 mantis 7750 ++
 
// Процедура - Обработать изменение заявки на действие
//
// Параметры:
//  ЭтоКорректировка - Булево	 - Истина, если корректировка, ложь - при аннулировании
//  ДокументСсылка	 - ДокументСсылка.Scan_ЗаявкаНаДействие	 - Ссылка на заявку, которую необходимо скорректировать/аннулировать
//
Процедура ОбработатьИзменениеЗаявкиНаДействие(ЭтоКорректировка, ДокументСсылка, Форма = Неопределено, ИмяСписка = "") Экспорт	// rarus tenkam 17.03.2021 mantis 17455 + (ИмяСписка)
	ТипИзменения = ?(ЭтоКорректировка, "корректировка", "аннулирование");
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоКорректировка",ЭтоКорректировка);
	СтруктураПараметров.Вставить("ДокументСсылка",ДокументСсылка);
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("ИмяСписка", ИмяСписка);	// rarus tenkam 17.03.2021 mantis 17455 +	
	Оповещение = Новый ОписаниеОповещения("ОбработатьИзменениеЗаявкиНаДействиеЗавершение", ЭтотОбъект,СтруктураПараметров); 
	ТекстВопроса = "Вы уверены, что требуется " + ТипИзменения + " документа (" + ДокументСсылка + ")?"; 
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
КонецПроцедуры 

// Процедура - Обработать изменение заявки на действие завершение
//
// Параметры:
//  Результат				 - 	 - 
//  ДополнительныеПараметры	 - 	 - 
//
Процедура ОбработатьИзменениеЗаявкиНаДействиеЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда 
		Если ДополнительныеПараметры.ЭтоКорректировка Тогда
			// Корректируем
			КорректироватьЗаявкуНаКлиенте(ДополнительныеПараметры.ДокументСсылка);
		Иначе
			// Аннулируем
			Scan_ВспомогательныеФункцииСервер.АннулироватьЗаявку(ДополнительныеПараметры.ДокументСсылка);
		КонецЕсли;
		Если ДополнительныеПараметры.Форма <> Неопределено Тогда 
			
			Если ДополнительныеПараметры.Форма.Элементы.Найти("Список") <> Неопределено Тогда	// rarus tenkam 08.05.2018 mantis 13063 +
				ДополнительныеПараметры.Форма.Элементы.Список.Обновить();
				// rarus tenkam 08.05.2018 mantis 13063 +++
			Иначе
				// rarus agar 02.11.2020 16010 ++
				//ДополнительныеПараметры.Форма.Прочитать();
				ДополнительныеПараметры.Форма.ОбновитьОтображениеДанных();
				// rarus agar 02.11.2020 16010 --
			КонецЕсли;
			// rarus tenkam 08.05.2018 mantis 13063 ---
			
			// rarus tenkam 17.03.2021 mantis 17455 +++
			Если ДополнительныеПараметры.ИмяСписка <> "" Тогда				
				Если ДополнительныеПараметры.Форма.Элементы.Найти(ДополнительныеПараметры.ИмяСписка) <> Неопределено Тогда
					ДополнительныеПараметры.Форма.Элементы[ДополнительныеПараметры.ИмяСписка].Обновить();
				КонецЕсли;
			КонецЕсли;
			// rarus tenkam 17.03.2021 mantis 17455 ---
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

// Процедура - Корректировать заявку на действие
//
// Параметры:
//  ДокументСсылка	 - 	 - 
//
Процедура КорректироватьЗаявкуНаКлиенте(ДокументСсылка, МассивИзделийДляИсключения = Неопределено) Экспорт
	
	//rarus tenkam 20.01.2017 mantis 8172 ++
	Если НЕ Scan_ВспомогательныеФункцииСервер.ЭтоЗаявкаCПеревозкой(ДокументСсылка) Тогда
		Если Scan_ВспомогательныеФункцииСервер.ПолучитьСтатусЗаявкаНаДействие(ДокументСсылка) = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Исполнена") Тогда
			Возврат;
		КонецЕсли;
		
		Если Scan_ВспомогательныеФункцииСервер.ПолучитьСтатусЗаявкаНаДействие(ДокументСсылка) = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Новая") Тогда
			Если Scan_ВспомогательныеФункцииСервер.ЗаявкаНаДействиеПроверенаАдмПродаж(ДокументСсылка) Тогда
				// Откроем новый документ "Заявка на действие" с теми же данными, но с признаком корректировка
				ПараметрыФормы = Новый Структура("Основание", ДокументСсылка);
					ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаДокумента", ПараметрыФормы);
			Иначе
				//Откроем форму документа "Заявка на действие"
				ПараметрыФормы = Новый Структура("Ключ", ДокументСсылка);
				ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаДокумента", ПараметрыФормы);
			КонецЕсли;
		ИначеЕсли  Scan_ВспомогательныеФункцииСервер.ПолучитьСтатусЗаявкаНаДействие(ДокументСсылка) = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе") Тогда
			// Откроем новый документ "Заявка на действие" с теми же данными, но с признаком корректировка
			ПараметрыФормы = Новый Структура("Основание", ДокументСсылка);
			ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаДокумента", ПараметрыФормы);

		КонецЕсли;	
	Иначе
	//rarus tenkam 20.01.2017 mantis 8172 --
		ДанныеПоИзделиям = Scan_ВспомогательныеФункцииСервер.ПолучитьДанныеПоИзделиям(ДокументСсылка);
		СостояниеЗаявки = Scan_ВспомогательныеФункцииСервер.ПолучитьСостояниеЗаявки(ДокументСсылка, ДанныеПоИзделиям);
		
		Если СостояниеЗаявки = "НеПроверена" ИЛИ 
			СостояниеЗаявки = "НеПроведена" Тогда	//rarus tenkam 30.03.2017 mantis 9171 +	
			// Заявка на действие еще не проверена адм. продаж или не проведена - откроем форму
			ПараметрыФормы = Новый Структура("Ключ", ДокументСсылка);
			//rarus tenkam 07.02.2017 mantis 7750 +++
			Если ЗначениеЗаполнено(МассивИзделийДляИсключения) Тогда 
				ПараметрыФормы.Вставить("ИсключитьИзделия", МассивИзделийДляИсключения);
			КонецЕсли;
			//rarus tenkam 07.02.2017 mantis 7750 ---
			ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаДокумента", ПараметрыФормы);

		ИначеЕсли СостояниеЗаявки = "Проверена" Тогда
			// Заявка на действие проверена адм. продаж, но убытия на маршрут еще нет
			Если НЕ ЗначениеЗаполнено(ДанныеПоИзделиям) Тогда
				// Ошибка в программе	
				Возврат;	
			КонецЕсли;
			
			// Откроем новый документ "Заявка на действие" с теми же данными, но с признаком корректировка
			ПараметрыФормы = Новый Структура("Основание", ДокументСсылка);
			//rarus tenkam 07.02.2017 mantis 7750 +++
			Если ЗначениеЗаполнено(МассивИзделийДляИсключения) Тогда 
				ПараметрыФормы.Вставить("ИсключитьИзделия", МассивИзделийДляИсключения);
			КонецЕсли;
			//rarus tenkam 07.02.2017 mantis 7750 ---
			
			ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаДокумента", ПараметрыФормы);
			
		ИначеЕсли СостояниеЗаявки = "ПолученаПеревозчиком" Тогда
			// Заявка на действие проверана адм. продаж, и есть убытие на маршрут - нужно согласовывать	
			// Откроем новый документ "Заявка на действие" с теми же данными, но с признаком корректировка
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("Основание", ДокументСсылка);
			ПараметрыФормы.Вставить("ТребуетСогласования", Истина);
			//rarus tenkam 07.02.2017 mantis 7750 +++
			Если ЗначениеЗаполнено(МассивИзделийДляИсключения) Тогда 
				ПараметрыФормы.Вставить("ИсключитьИзделия", МассивИзделийДляИсключения);
			КонецЕсли;
			//rarus tenkam 07.02.2017 mantis 7750 ---
			
			ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаДокумента", ПараметрыФормы);
			
		ИначеЕсли СостояниеЗаявки = "Исполнена" Тогда
			// Заявка на действие исполнена - 
		КонецЕсли;
	КонецЕсли;	//rarus tenkam 20.01.2017 mantis 8172 +
	
КонецПроцедуры

// Процедура - Корректировать заявку перевозчику 
//
// Параметры:
//  ДокументСсылка			 - 	 - 
//  ДополнительныеПараметры	 - 	 - 
//
Процедура КорректироватьЗаявкуПеревозчикуНаКлиенте(ДокументСсылка, ДополнительныеПараметры = Неопределено) Экспорт
	//Корректировка "Заявки перевозчику" может быть только в двух случаях: добавление/исключение изделия
	ПараметрыФормы = Новый Структура("Основание", ДокументСсылка);
	Если ДополнительныеПараметры.Свойство("ДобавитьИзделия") Тогда
		ПараметрыФормы.Вставить("ДобавитьИзделия", ДополнительныеПараметры.ДобавитьИзделия);
	ИначеЕсли ДополнительныеПараметры.Свойство("ИсключитьИзделия") Тогда
		ПараметрыФормы.Вставить("ИсключитьИзделия", ДополнительныеПараметры.ИсключитьИзделия);
	КонецЕсли;
	ОткрытьФорму("Документ.Scan_ЗаявкаПеревозчику.Форма.ФормаДокумента", ПараметрыФормы);		
КонецПроцедуры

//rarus tenkam 23.11.2016 mantis 7750 --



//rarus pechek 12.03.2020 mantis 15466 +++  
Процедура ОбработатьИзменениеСпецификацииСтандартнойМодели(ЭтоКорректировка, ДокументСсылка, Форма = Неопределено) Экспорт
	ТипИзменения = ?(ЭтоКорректировка, НСтр("ru = 'корректировка'; en = 'adjustment'"), НСтр("ru = 'аннулирование'; en = 'cancellation'"));
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоКорректировка",ЭтоКорректировка);
	СтруктураПараметров.Вставить("ДокументСсылка",ДокументСсылка);
	СтруктураПараметров.Вставить("Форма", Форма);
	Оповещение = Новый ОписаниеОповещения("ОбработатьИзменениеСпецификацииСтандартнойМоделиЗавершение", ЭтотОбъект,СтруктураПараметров); 
	Если ТипИзменения = НСтр("ru = 'аннулирование'; en = 'cancellation'") Тогда	
		ТекстВопроса = НСтр("ru = 'Вы уверены, что требуется '; en = 'Are you sure that you need to '") + ТипИзменения + НСтр( "ru = ' документа ( '; en = ' the document ( '") + ДокументСсылка + ")?";
	Иначе
		ТекстВопроса = НСтр("ru = 'Текущий документ будет аннулирован. Вы уверены, что требуется '; en = 'The current document will be canceled. Are you sure that you need to '") + ТипИзменения + НСтр("ru = ' документа ( '; en = ' the document ( '")  + ДокументСсылка + ")? ";
	КонецЕсли;
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
КонецПроцедуры 
//rarus pechek 12.03.2020 mantis 15466 ---

//rarus pechek 12.03.2020 mantis 15466 +++  
Процедура ОбработатьИзменениеСпецификацииСтандартнойМоделиЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда 
		Если ДополнительныеПараметры.ЭтоКорректировка Тогда
			// Корректируем
			КорректироватьСпецификацииСтандартнойМоделиНаКлиенте(ДополнительныеПараметры.ДокументСсылка, ДополнительныеПараметры);
		Иначе
			// Аннулируем
			//rarus ozhnik 17813 09.06.2021 + 
			Оповещение = Новый ОписаниеОповещения("ПослеВводаПричиныАннулирования",ЭтотОбъект,ДополнительныеПараметры); 
			ПоказатьВводСтроки(Оповещение,, НСТР("ru = 'Причина аннулирования'"), 255);
			//Scan_ВспомогательныеФункцииСервер.АннулироватьСпецификацию(ДополнительныеПараметры.ДокументСсылка);
			//rarus ozhnik 17813 09.06.2021 - 
		КонецЕсли;
		Если ДополнительныеПараметры.Форма <> Неопределено Тогда 
			
			Если ДополнительныеПараметры.Форма.Элементы.Найти("Список") <> Неопределено Тогда	
				//Scan_ВспомогательныеФункцииСервер.АннулироватьСпецификацию(ДополнительныеПараметры.ДокументСсылка); //rarus ozhnik 17813 09.06.2021 + 
				ДополнительныеПараметры.Форма.Элементы.Список.Обновить();
			Иначе
				ДополнительныеПараметры.Форма.Прочитать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры
//rarus pechek 12.03.2020 mantis 15466---  

//rarus pechek 12.03.2020 mantis 15466 +++  
Процедура КорректироватьСпецификацииСтандартнойМоделиНаКлиенте(ДокументСсылка, ДополнительныеПараметры) Экспорт	
	Если Scan_ВспомогательныеФункцииСервер.ПолучитьСтатусСтандартнойСпецификацииМодели(ДокументСсылка) = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Аннулирована") Тогда
		Сообщить("Нельзя корректировать аннулированый документ");
		Возврат;
	КонецЕсли;
	
	Оповестить("ИзменениеСтатуса",,ДополнительныеПараметры.Форма);
	
	ПараметрыФормы = Новый Структура("Основание", ДокументСсылка);
	ОткрытьФорму("Документ.Scan_СпецификацияСтандартнойМодели.Форма.ФормаДокумента", ПараметрыФормы); 	
КонецПроцедуры  
//rarus pechek 12.03.2020 mantis 15466 ---

Процедура ПослеВводаПричиныАннулирования(Строка, ДополнительныеПараметры) Экспорт
    Если НЕ Строка = Неопределено Тогда
       Scan_ВспомогательныеФункцииСервер.АннулироватьСпецификацию(ДополнительныеПараметры.ДокументСсылка, Строка);
	   Если ДополнительныеПараметры.Форма <> Неопределено Тогда    			
			Если ДополнительныеПараметры.Форма.Элементы.Найти("Список") <> Неопределено Тогда	
				//Scan_ВспомогательныеФункцииСервер.АннулироватьСпецификацию(ДополнительныеПараметры.ДокументСсылка); //rarus ozhnik 17813 09.06.2021 + 
				ДополнительныеПараметры.Форма.Элементы.Список.Обновить();
			Иначе
				ДополнительныеПараметры.Форма.Прочитать();
			КонецЕсли;
		КонецЕсли;
    КонецЕсли;
КонецПроцедуры

//rarus vikhle 29.04.2020 mt 15695 +++
Процедура ПроверитьПользователяПортала() Экспорт
	ТекущийПользователь = ПользователиКлиент.АвторизованныйПользователь();
	Если НЕ ТипЗнч(ТекущийПользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		Сообщить(НСтр("ru = 'Не удалось определить текущего пользователя'; en = 'Unable to determine current user'"));
		Возврат;
	КонецЕсли;	
	Если НЕ Scan_ВспомогательныеФункцииСервер.ЭтоПользовательПортала(ТекущийПользователь) Тогда
		Возврат;
	КонецЕсли;	
	
	ПользовательАктивен = Scan_ВспомогательныеФункцииСервер.ПроверитьАктивностьПользователяПортала(ТекущийПользователь);
	Если НЕ ПользовательАктивен Тогда
		//rarus agar 19.03.2021 17373 ++
		КомментарийЗаписи = "Завершение сеанса. Пользователь портала не активен.";
		ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации("Сеанс. Ошибка аутентификации", "Ошибка", КомментарийЗаписи,, Истина);
		//rarus agar 19.03.2021 17373 --
		
		ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;	
КонецПроцедуры	

Процедура РазобратьПараметрЗапускаСПортала() Экспорт
	СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске(); //rarus ozhnik 17677 24.05.2021 + 
	ТекущийПользователь = ПользователиКлиент.АвторизованныйПользователь();
	Если НЕ ТипЗнч(ТекущийПользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		Сообщить(НСтр("ru = 'Не удалось определить текущего пользователя'; en = 'Unable to determine current user'"));
		Возврат;
	КонецЕсли;
	
	Если Scan_ВспомогательныеФункцииСервер.ЭтоПользовательПортала(ТекущийПользователь) Тогда 
		//rarus agar 19.03.2021 17373 ++
		ОтсутствующиеПараметры = Новый Массив;
		//rarus agar 19.03.2021 17373 --
		
		Если СтрНайти(ПараметрЗапуска,"<id>") <> 0 И СтрНайти(ПараметрЗапуска,"</id>") <> 0 Тогда
			ИндексОткрывающегоТега =  СтрНайти(ПараметрЗапуска,"<id>") + 4;
			ИндексЗакрывающегоТега =  СтрНайти(ПараметрЗапуска,"</id>");	
			КодПользователяПортала = Сред(ПараметрЗапуска,ИндексОткрывающегоТега,ИндексЗакрывающегоТега-ИндексОткрывающегоТега);
		Иначе
			//rarus agar 19.03.2021 17373 ++
			//ЗавершитьРаботуСистемы(Ложь);
			//Возврат;
			ОтсутствующиеПараметры.Добавить("id");
			//rarus agar 19.03.2021 17373 --
		КонецЕсли;
		
		Если СтрНайти(ПараметрЗапуска,"<token>") <> 0 И СтрНайти(ПараметрЗапуска,"</token>") <> 0 Тогда 
			ИндексОткрывающегоТега =  СтрНайти(ПараметрЗапуска,"<token>") + 7;
			ИндексЗакрывающегоТега =  СтрНайти(ПараметрЗапуска,"</token>");	
			НомерСессииПортала = Сред(ПараметрЗапуска,ИндексОткрывающегоТега,ИндексЗакрывающегоТега-ИндексОткрывающегоТега);
		Иначе
			//rarus agar 19.03.2021 17373 ++
			//ЗавершитьРаботуСистемы(Ложь);
			//Возврат;
			ОтсутствующиеПараметры.Добавить("token");
			//rarus agar 19.03.2021 17373 --
		КонецЕсли;
		
		Если СтрНайти(ПараметрЗапуска,"<user>") <> 0 И СтрНайти(ПараметрЗапуска,"</user>") <> 0 Тогда 
			ИндексОткрывающегоТега =  СтрНайти(ПараметрЗапуска,"<user>") + 6;
			ИндексЗакрывающегоТега =  СтрНайти(ПараметрЗапуска,"</user>");	
			ПользовательПортала = Сред(ПараметрЗапуска,ИндексОткрывающегоТега,ИндексЗакрывающегоТега-ИндексОткрывающегоТега);
		Иначе
			//rarus agar 19.03.2021 17373 ++
			//ЗавершитьРаботуСистемы(Ложь);
			//Возврат;
			ОтсутствующиеПараметры.Добавить("user");
			//rarus agar 19.03.2021 17373 --
		КонецЕсли;
		
		//rarus agar 19.03.2021 17373 ++
		Если ОтсутствующиеПараметры.Количество() > 0 Тогда
			КомментарийЗаписи = "Ошибка разбора параметров запуска с портала. Отсутствуют параметры: "+ СтрСоединить(ОтсутствующиеПараметры, ",") +".";
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации("Сеанс. Ошибка аутентификации", "Ошибка", КомментарийЗаписи,, Истина);
			
			ЗавершитьРаботуСистемы(Ложь);
			Возврат;
		КонецЕсли;
		//rarus agar 19.03.2021 17373 --
		
		//rarus vikhle 18.05.2020 mt 15695 +++	
		
		//проверка  активности сессии по данным из параметра запуска
		Отказ = Ложь;	
		ИмяМетода = "checkUserTokenIsOnline";
		ИмяСобытияЖурналаРегистрации = "Веб-сервис портала." + ИмяМетода;
		СтруктураПараметров = Scan_ВебСервисы.ПолучитьСтруктуруПараметровМетодаПортала(ИмяМетода);
		СтруктураПараметров.Вставить ("login",ПользовательПортала);
		СтруктураПараметров.Вставить ("token", НомерСессииПортала);
		ОтветВебСервиса = Scan_ВебСервисы.ВызовВебСервисаПортала(ИмяМетода,СтруктураПараметров,Отказ,ИмяСобытияЖурналаРегистрации);
		Если Отказ Тогда
			//rarus agar 19.03.2021 17373 ++
			КомментарийЗаписи = "Завершение сеанса. Ошибка вызова метода портала checkUserTokenIsOnline.";
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации("Сеанс. Ошибка аутентификации", "Ошибка", КомментарийЗаписи,,Истина);
			//rarus agar 19.03.2021 17373 --
			
			ЗавершитьРаботуСистемы(Ложь);
			Возврат;
		КонецЕсли;
		//rarus vikhle 18.05.2020 mt 15695 ---	
		
		Scan_ВспомогательныеФункцииСервер.ЗаписатьПараметрыСессииПользователяПортала(ТекущийПользователь,ПользовательПортала,КодПользователяПортала,НомерСессииПортала);
	КонецЕсли;
	
КонецПроцедуры	
//rarus vikhle 29.04.2020 mt 15695 ---

//rarus vikhle 06.04.2021 mt 17484 +++
Процедура ПроверитьАктивностьВыбраннойКомпании(ВыбраннаяКомпания,ОписаниеОповещения,СтандартнаяОбработка,УчитыватьПризнакДилер = Истина) Экспорт
	
	//rarus vikhle 12.04.2021 mt 17484 +++
	Если ТипЗнч(ВыбраннаяКомпания) <> Тип("СправочникСсылка.Scan_Компании") ИЛИ ВыбраннаяКомпания.Пустая() Тогда
		Возврат;	
	КонецЕсли;
	
	Если НЕ Scan_ВспомогательныеФункцииСервер.ДилерАктивен(ВыбраннаяКомпания,УчитыватьПризнакДилер) Тогда
		Если НЕ Scan_ПраваИНастройки.Scan_Право("ЗапретРаботыСНеактивнымиДилерами") Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьВопрос(ОписаниеОповещения,Нстр("ru = 'Выбранный дилер не активен. Продолжить?'"),РежимДиалогаВопрос.ДаНет);	
		Иначе
			ВыбраннаяКомпания = Неопределено;
			ВывестиСообщениеПол(Нстр("ru = 'Выбранный дилер не активен.'"));
		КонецЕсли;
	КонецЕсли;
	//rarus vikhle 12.04.2021 mt 17484 ---
	
КонецПроцедуры

//rarus vikhle 06.04.2021 mt 17484 ---

// rarus kabany 14.05.2021 17657 +++
Процедура ЗаявкаНаДействиеПечатьПокупкаУПоставщикаИПередачаТК(ПараметрКоманды)
	//rarus tenkam 19.03.2017 mantis 9063 +++
	Если ПараметрКоманды.Количество() <> 0 Тогда
		Если Scan_ВспомогательныеФункцииСервер.ЭтоЗаявкаCПеревозкой(ПараметрКоманды[0]) Тогда
			Если НЕ Scan_ВспомогательныеФункцииСервер.ЕстьЗаявкаПеревозчику(ПараметрКоманды[0]) Тогда
				Сообщить("Не удалось сформировать печатную форму! На основании данной заявки на действие не создана заявка перевозчику.");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 19.03.2017 mantis 9063 ---
	//Вставить содержимое обработчика.
    ПараметрыФормы = Новый Структура("ДанныеДляПечати", ПараметрКоманды);
	ПараметрыФормы.Вставить("ПечатнаяФорма","ПФ_MXL_ПокупкаУПоставщикаИПередачаТК");
    ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаНастроекПечати", ПараметрыФормы, , , , ,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


Процедура ЗаявкаНаДействие_ВыполнитьПечать(ИмяКоманды, ПараметрКоманды) Экспорт 
   ИмяФормы = Неопределено;
   Отказ = Ложь;
   
	Если ИмяКоманды = "Печать_ПокупкаУПоставщикаИПередачаТК" Тогда
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаИПередачаТК";		
		
	ИначеЕсли ИмяКоманды = "Печать_ПокупкаУПоставщикаИПродажаТретьемуЛицу" Тогда			
		ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаИПродажаТретьемуЛицу"
		
	ИначеЕсли ИмяКоманды = "Печать_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК" Тогда			
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК"
		
	ИначеЕсли ИмяКоманды = "Печать_ПокупкаУПоставщикаСПостановкойНаХранение" Тогда			
		ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаСПостановкойНаХранение"
		
	ИначеЕсли ИмяКоманды = "Печать_ПостановкаНаХранение" Тогда			
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		ИмяМакета = "ПФ_MXL_ПостановкаНаХранение"
		
	ИначеЕсли ИмяКоманды = "Печать_СнятиеСХраненияИПередачаТК" Тогда			
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		ИмяМакета = "ПФ_MXL_СнятиеСХраненияИПередачаТК"
		
	ИначеЕсли ИмяКоманды = "Печать_СнятиеСХраненияИПродажаТретьемуЛицу" Тогда			
		ИмяМакета = "ПФ_MXL_СнятиеСХраненияИПродажаТретьемуЛицу"
		
	ИначеЕсли ИмяКоманды = "Печать_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК" Тогда			
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		ИмяМакета = "ПФ_MXL_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК"
		
	ИначеЕсли ИмяКоманды = "Печать_СнятиеСХраненияИПередачаВПроизводство" Тогда			
		ИмяМакета = "ПФ_MXL_СнятиеСХраненияИПередачаВПроизводство"
		
	ИначеЕсли ИмяКоманды = "Печать_ПередачаВПроизводство" Тогда			
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		ИмяМакета = "ПФ_MXL_ПередачаВПроизводство"
		
	ИначеЕсли ИмяКоманды = "Печать_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу" Тогда			
		ИмяМакета = "ПФ_MXL_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу"
		
	ИначеЕсли ИмяКоманды = "Печать_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу" Тогда			
		ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу"
		
	ИначеЕсли ИмяКоманды = "Печать_М15" Тогда			
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		ИмяМакета = "М15";
		ИмяФормы = "Документ.Scan_ЗаявкаНаДействие.Форма.ФормаВыбораДатыМХ1";
		
	ИначеЕсли ИмяКоманды = "Печать_МХ3" Тогда			
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		
	ИначеЕсли ИмяКоманды = "Печать_МХ1" Тогда			
		Отказ = ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды);
		ИмяМакета = "МХ1";
		ИмяФормы = "Документ.Scan_ЗаявкаНаДействие.Форма.ФормаВыбораДатыМХ1";
	КонецЕсли;
	
		  
	Если Отказ Тогда 
		Возврат; 
	КонецЕсли;
	
	Если ИмяКоманды <> "Печать_МХ3" Тогда
		
		ПараметрыФормы = Новый Структура("ДанныеДляПечати", ПараметрКоманды);
		ПараметрыФормы.Вставить("ПечатнаяФорма", ИмяМакета);
		
		Если ИмяФормы =  Неопределено Тогда
			ОткрытьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаНастроекПечати", ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ОткрытьФорму(ИмяФормы, ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
		
	Иначе
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(    "Документ.Scan_ЗаявкаНаДействие",        //Менеджер печати
		"МХ3",            //Идентификатор
		ПараметрКоманды,        //Объекты печати
		ЭтотОбъект); 
	КонецЕсли;
КонецПроцедуры
	
Функция ПроверитьНаличиеЗаявкиПеревозчику(ПараметрКоманды)
	
	Если ПараметрКоманды.Количество() <> 0 Тогда
		Если Scan_ВспомогательныеФункцииСервер.ЭтоЗаявкаCПеревозкой(ПараметрКоманды[0]) Тогда
			Если НЕ Scan_ВспомогательныеФункцииСервер.ЕстьЗаявкаПеревозчику(ПараметрКоманды[0]) Тогда
				Сообщить("Не удалось сформировать печатную форму! На основании данной заявки на действие не создана заявка перевозчику.");
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Ложь;
	
	КонецФункции
// rarus kabany 14.05.2021 17657 ---

// Обновление данных по DDS в неактуальных заявках
Процедура НачатьФоновоеОбновлениеDDS(Знач ЗаявкаСсылка) Экспорт //rarus vikhle 27.10.2021 m 18426 +++ 
	
	ВывестиСообщениеПол(Нстр("ru = 'Начато обновление данных по DDS в неактуальных заявках'"));
	
	ДлительнаяОперация = Scan_ВспомогательныеФункцииСервер.НачатьФоновоеОбновлениеDDSНаСервере(ЗаявкаСсылка);
    ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатФоновогоОбновленияDDS", ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено); // Неопеределено для отображения уведомления о завершении при закрытой форме
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры //rarus vikhle 27.10.2021 m 18426 ---	

Процедура ОбработатьРезультатФоновогоОбновленияDDS(Результат, ДополнительныеПараметры) Экспорт //rarus vikhle 27.10.2021 m 18426 +++
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;	
		
	Если Результат.Статус = "Выполнено" Тогда
		ПоказатьОповещениеПользователя(Нстр("ru = 'Обновление данных по DDS в неактуальных заявках'"),,
										Нстр("ru = 'Завершено обновление данных по DDS в неактуальных заявках'"),
										БиблиотекаКартинок.Информация32);
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ПоказатьОповещениеПользователя(Нстр("ru = 'Обновление данных по DDS в неактуальных заявках'"),,
										Нстр("ru = 'Произошла ошибка во время обновления данных по DDS в неактуальных заявках'"),
										БиблиотекаКартинок.Ошибка32);
										
		ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(Нстр("ru = 'Обновление данных по DDS в неактуальных заявках'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()),
																		"Ошибка",
																		Результат.ПодробноеПредставлениеОшибки)
	ИначеЕсли Результат.Статус = "Отменено" Тогда																	
		ПоказатьОповещениеПользователя(Нстр("ru = 'Обновление данных по DDS в неактуальных заявках'"),,
										Нстр("ru = 'Обновление данных по DDS в неактуальных заявках было отменено'"),
										БиблиотекаКартинок.Информация32);																	
	КонецЕсли;
									
КонецПроцедуры //rarus vikhle 27.10.2021 m 18426 ---
