
Процедура Scan_ПриЗаписиОтправленныеПисьмаПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	////
	//Если Не Отказ Тогда
	//
	//	Для Каждого Запись Из Источник Цикл
	//		//rarus tenkam 23.11.2017 bug 9428 +++
	//		Если ТипЗнч(Запись.ДокументОтправки) = Тип("ДокументСсылка.Scan_ЗаявкаНаСервисныеРаботы") Тогда
	//		//rarus tenkam 23.11.2017 bug 9428 ---
	//			УстановитьНовыйВнутреннийНомер(Запись.ДокументОтправки);
	//			
	//		КонецЕсли;	//rarus tenkam 23.11.2017 bug 9428 +
	//	КонецЦикла;	
	//
	//КонецЕсли;
	
КонецПроцедуры

Процедура Scan_ПриЗаписиОтправленныеПисьма(Источник) Экспорт
	
	Если ТипЗнч(Источник) = Тип("ДокументСсылка.Scan_ЗаявкаНаСервисныеРаботы") Тогда
	
		УстановитьНовыйВнутреннийНомер(Источник);
		
	КонецЕсли;	//rarus tenkam 23.11.2017 bug 9428 +
		
КонецПроцедуры

Процедура УстановитьНовыйВнутреннийНомер(ЗаявкаНаСервис)

	СтруктураНомера = ПолучитьСтруктуруНомера(ЗаявкаНаСервис);		

	Если СтруктураНомера <> Неопределено Тогда
	
		Если СтруктураНомера.ВнутреннийНомерЧислом <> 0 Тогда
		
			ДокументОбъект = ЗаявкаНаСервис.ПолучитьОбъект();
			ДокументОбъект.НомерДокументаВнутренний = СтруктураНомера.НомерДокументаСДефисом + (СтруктураНомера.ВнутреннийНомерЧислом + 1);
			// rarus tenkam 09.02.2017 mantis 9428 +++
			//ДокументОбъект.Записать
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			// rarus tenkam 09.02.2017 mantis 9428 ---
		КонецЕсли;	
	
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтруктуруНомера(ЗаявкаНаСервис)

	НомерДокументаВнутренний = ЗаявкаНаСервис.НомерДокументаВнутренний;

	ПозицияПрефикса = СтрНайти(НомерДокументаВнутренний, "-");
	
	Если ПозицияПрефикса = 0 Тогда
	
		Возврат Неопределено;
	
	КонецЕсли;
	
	СтруктураНомера = Новый Структура;
	СтруктураНомера.Вставить("НомерДокументаСДефисом", Лев(НомерДокументаВнутренний, ПозицияПрефикса));
	СтруктураНомера.Вставить("ВнутреннийНомер", Сред(НомерДокументаВнутренний, ПозицияПрефикса + 1));
	СтруктураНомера.Вставить("ВнутреннийНомерЧислом", 0);
	
	Попытка
		СтруктураНомера.Вставить("ВнутреннийНомерЧислом", Число(СтруктураНомера.ВнутреннийНомер));    	
	Исключение	
	КонецПопытки;	
	
	Возврат СтруктураНомера;
	
КонецФункции

Процедура Scan_УстановкаСтатусаВРаботеЗаявкиНаСервисныеРаботы(СтруктураПараметров = Неопределено) Экспорт //rarus vikhle 23.06.2021 mt 17645 + СтруктураПараметров
	
	// Создать регламентное задание «Установка статуса в работе заявки на сервисные работы». 
	// Алгоритм работы задания: При Дате ПК = Дате (план) документа «Заявка на сервисные работы» 
	// (для заявок со статусом «новая») устанавливать статус «В Работе».
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.Scan_УстановкаСтатусаВРаботеЗаявкиНаСервисныеРаботы);//rarus vikhle 05.07.2021 апк
	Scan_СборСтатистики.Scan_ЗапускРЗ(Метаданные.РегламентныеЗадания.Scan_УстановкаСтатусаВРаботеЗаявкиНаСервисныеРаботы.Наименование); // Rarus tenkam 11.04.2022 mantis 18433 +

	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ЗаявкаНаСервисныеРаботы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.Scan_ЗаявкаНаСервисныеРаботы КАК Scan_ЗаявкаНаСервисныеРаботы
	               |ГДЕ
	               |	Scan_ЗаявкаНаСервисныеРаботы.ДатаНачалаРабот <= &Дата
	               |	И НЕ Scan_ЗаявкаНаСервисныеРаботы.ПометкаУдаления
	               |	И Scan_ЗаявкаНаСервисныеРаботы.Статус = &Статус";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Статус", Справочники.Scan_СтатусыЗаявокНаРаботы.Подтверждена);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.ВРаботе;
			
			Попытка
			
				ДокументОбъект.Записать();
			
			Исключение
			
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// rarus tenkam 16.02.2018 mantis 9428 +++ интеграция
Процедура Scan_ПриЗаписиЗаявкаНаСервисныеРаботыПриЗаписи(Источник, Отказ) Экспорт
	Если НЕ Отказ Тогда
		Если ТипЗнч(Источник) = Тип("ДокументСсылка.Scan_ЗаявкаНаСервисныеРаботы") Тогда
			
			// Если только создан, то отправим данные в 1БД
			// Если режим = проведение и в регистре нет данных по документу 
			Если Источник.Проведен Тогда
					
			КонецЕсли;
			
		КонецЕсли  		
	КонецЕсли;

КонецПроцедуры
// rarus tenkam 16.02.2018 mantis 9428 --- интеграция

