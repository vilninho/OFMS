// Rarus tenkam 28.06.2022 mantis 18726 АПК + (Стандартные области)
// Rarus tenkam 11.04.2022 mantis 18433 +++

#Область ПрограммныйИнтерфейс

// Выполняет добавление записи об использовании элемента с контекстом "Создание нового элемента"/ "Изменение элемента"
//
// Параметры:
//  ТипОбъекта	 - Строка - Справочники/документы/отчеты/обрабоки
//  Объект		 - Строка - Синоним объекта, например, "Заявки (scania)"
//  ЭтоНовый	 - Булево - Признак нового объекта
//  Контекст	 - Строка - Описание действия с элементом
//
Процедура Scan_ПередЗаписью(ТипОбъекта, Объект, ЭтоНовый = Ложь, Контекст = "") Экспорт
	Если Контекст = "" Тогда
		Контекст = ?(ЭтоНовый, "Создание нового элемента", "Изменение элемента");
	КонецЕсли;
	ВыполнитьРегистрациюСтатистики(ТипОбъекта, Объект, Контекст);
	
КонецПроцедуры

// Выполняет добавление записи об использовании элемента с контекстом "Создание нового элемента"/ "Изменение элемента"
//
// Параметры:
//  Объект	 - Строка - Синоним объекта
//  ЭтоНовый - Булево - Признак нового объекта
//  Контекст - Строка - Описание действия с элементом
//
Процедура Scan_ПередЗаписьюСправочника(Объект, ЭтоНовый = Ложь, Контекст = "") Экспорт
	ТипОбъекта = "Справочники";
	Если Контекст = "" Тогда
		Контекст = ?(ЭтоНовый, "Создание нового элемента", "Изменение элемента");
	КонецЕсли;
	ВыполнитьРегистрациюСтатистики(ТипОбъекта, Объект, Контекст);
КонецПроцедуры

// Выполняет добавление записи об использовании элемента с контекстом "Создание нового элемента"/ "Изменение элемента"
//
// Параметры:
//  Объект	 - Строка - Синоним объекта
//  ЭтоНовый - Булево - Признак нового объекта
//  Контекст - Строка - Описание действия с элементом
//
Процедура Scan_ПередЗаписьюДокумента(Объект, ЭтоНовый = Ложь, Контекст = "") Экспорт
	ТипОбъекта = "Документы";
	Если Контекст = "" Тогда
		Контекст = ?(ЭтоНовый, "Создание нового элемента", "Изменение элемента");
	КонецЕсли;
	ВыполнитьРегистрациюСтатистики(ТипОбъекта, Объект, Контекст);
	
КонецПроцедуры

// Выполняет добавление записи об использовании элемента с контекстом "Открытие элемента"
//
// Параметры:
//  ТипОбъекта	 - Строка - Справочники/документы/отчеты/обрабоки
//  Объект		 - Строка - Синоним объекта метаданных
//
Процедура Scan_ПриОткрытии(ТипОбъекта, Объект) Экспорт
	ВыполнитьРегистрациюСтатистики(ТипОбъекта, Объект, "Открытие элемента");	
КонецПроцедуры

// Выполняет добавление записи об использовании элемента с контекстом "Открытие отчета"
//
// Параметры:
//  Объект	 - Строка - Синоним объекта метаданных
//
Процедура Scan_ПриОткрытииОтчета(Объект) Экспорт
	ВыполнитьРегистрациюСтатистики("Отчеты", Объект, "Открытие отчета");	
КонецПроцедуры  

// Выполняет добавление записи об использовании элемента с контекстом "Открытие формы"
//
// Параметры:
//  Объект	 - Строка - Синоним объекта метаданных
//
Процедура Scan_ПриОткрытииФормы(Объект) Экспорт
	ВыполнитьРегистрациюСтатистики("Общие формы", Объект, "Открытие формы");	
КонецПроцедуры 

// Выполняет добавление записи об использовании элемента с контекстом "Вызов обработки"
//
// Параметры:
//  Объект	 - Строка - Синоним объекта метаданных
//
Процедура Scan_ПриОткрытииОбработки(Объект) Экспорт
	ВыполнитьРегистрациюСтатистики("Обработки", Объект, "Вызов обработки");	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет добавление записи об использовании элемента с контекстом "Формирование печатной формы"
Процедура Scan_Печать(Объект) Экспорт
	ВыполнитьРегистрациюСтатистики("Печатные формы", Объект, "Формирование печатной формы");
КонецПроцедуры

// Выполняет добавление записи об использовании элемента с контекстом "Ручной запуск регламентного задания"
Процедура Scan_ЗапускРЗ(Объект) Экспорт
	ПользовательСсылка = Пользователи.АвторизованныйПользователь(); // АПК + вместо ПользоателиКлиентСервер.АвторизованныйПользователь()   	
	Если ПользовательСсылка.Наименование = "Робот" Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьРегистрациюСтатистики("Регламентные задания", Объект, "Ручной запуск регламентного задания"); 	                
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыполнитьРегистрациюСтатистики(ТипОбъекта, Объект, Контекст) Экспорт
	Если НЕ Scan_ПраваИНастройки.Scan_Право("ВключитьСборСтатистикиИспользованияОбъектов") Тогда
		Возврат Ложь;
	КонецЕсли;
	                                                                        	
	ДатаЗаписи = ТекущаяДатаСеанса();
	
	ПользовательСсылка = Пользователи.АвторизованныйПользователь(); // АПК + вместо ПользоателиКлиентСервер.АвторизованныйПользователь()  	
	ПользовательНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользовательСсылка, "Наименование");
	ЛогинНаПортале = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользовательСсылка, "ЛогинНаПортале");
	
	Сотрудник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользовательСсылка, "Сотрудник"); 
	ДолжностьНаименование = "";
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Должность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сотрудник, "Должность");
		Если ЗначениеЗаполнено(Должность) Тогда
			ДолжностьНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Должность, "Наименование");
		КонецЕсли;
	КонецЕсли;
	
	// Определим группу пользователя
	ГруппаПользователя = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ГруппыПользователейСостав.Ссылка КАК Ссылка,
		|	ГруппыПользователейСостав.Ссылка.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
		|ГДЕ
		|	ГруппыПользователейСостав.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", ПользовательСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ГруппаПользователя = ВыборкаДетальныеЗаписи.Наименование;
	КонецЕсли;
	
	// Определим группу компаний
	ГруппаКомпаний = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Scan_КомпанииПользователей.Пользователь КАК Пользователь,
		|	Scan_КомпанииПользователей.Компания КАК Компания,
		|	Scan_КомпанииПользователей.Основной КАК Основной,
		|	Scan_КомпанииПользователей.Компания.ГруппыКомпаний КАК КомпанияГруппыКомпаний,
		|	ЕСТЬNULL(Scan_КомпанииПользователей.Компания.ГруппыКомпаний.Наименование, """") КАК КомпанияГруппыКомпанийНаименование
		|ИЗ
		|	РегистрСведений.Scan_КомпанииПользователей КАК Scan_КомпанииПользователей
		|ГДЕ
		|	Scan_КомпанииПользователей.Пользователь = &Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Основной УБЫВ";
	
	Запрос.УстановитьПараметр("Пользователь", ПользовательСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ГруппаКомпаний = ВыборкаДетальныеЗаписи.КомпанияГруппыКомпанийНаименование;
	КонецЕсли;
	
	// Проверим, была ли до того запись
	Количество = 0;
	ДатаПервогоИспользования = ДатаЗаписи;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_СтатистикаИспользованияОбъектов.Пользователь КАК Пользователь,
		|	Scan_СтатистикаИспользованияОбъектов.ГруппаПользователя КАК ГруппаПользователя,
		|	Scan_СтатистикаИспользованияОбъектов.Должность КАК Должность,
		|	Scan_СтатистикаИспользованияОбъектов.ГруппаКомпаний КАК ГруппаКомпаний,
		|	Scan_СтатистикаИспользованияОбъектов.ЛогинНаПортале КАК ЛогинНаПортале,
		|	Scan_СтатистикаИспользованияОбъектов.ТипОбъекта КАК ТипОбъекта,
		|	Scan_СтатистикаИспользованияОбъектов.Объект КАК Объект,
		|	Scan_СтатистикаИспользованияОбъектов.Контекст КАК Контекст,
		|	Scan_СтатистикаИспользованияОбъектов.Количество КАК Количество,
		|	Scan_СтатистикаИспользованияОбъектов.ДатаПервогоИспользования КАК ДатаПервогоИспользования,
		|	Scan_СтатистикаИспользованияОбъектов.ДатаПоследнегоИспользования КАК ДатаПоследнегоИспользования
		|ИЗ
		|	РегистрСведений.Scan_СтатистикаИспользованияОбъектов КАК Scan_СтатистикаИспользованияОбъектов
		|ГДЕ
		|	Scan_СтатистикаИспользованияОбъектов.Пользователь = &Пользователь
		|	И Scan_СтатистикаИспользованияОбъектов.ГруппаПользователя = &ГруппаПользователя
		|	И Scan_СтатистикаИспользованияОбъектов.Должность = &Должность
		|	И Scan_СтатистикаИспользованияОбъектов.ГруппаКомпаний = &ГруппаКомпаний
		|	И Scan_СтатистикаИспользованияОбъектов.ЛогинНаПортале = &ЛогинНаПортале
		|	И Scan_СтатистикаИспользованияОбъектов.ТипОбъекта = &ТипОбъекта
		|	И Scan_СтатистикаИспользованияОбъектов.Объект = &Объект
		|	И Scan_СтатистикаИспользованияОбъектов.Контекст = &Контекст";
	
	Запрос.УстановитьПараметр("ГруппаКомпаний", ГруппаКомпаний);
	Запрос.УстановитьПараметр("ГруппаПользователя", ГруппаПользователя);
	Запрос.УстановитьПараметр("Должность", ДолжностьНаименование);
	Запрос.УстановитьПараметр("Контекст", Контекст);
	Запрос.УстановитьПараметр("ЛогинНаПортале", ЛогинНаПортале);
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Пользователь", ПользовательНаименование);
	Запрос.УстановитьПараметр("ТипОбъекта", ТипОбъекта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Количество = ВыборкаДетальныеЗаписи.Количество;
		ДатаПервогоИспользования = ВыборкаДетальныеЗаписи.ДатаПервогоИспользования;
	КонецЕсли;
	
	// Добавим/скорректируем запись
	МенеджерЗаписи = РегистрыСведений.Scan_СтатистикаИспользованияОбъектов.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Пользователь = ПользовательНаименование;
	МенеджерЗаписи.ГруппаПользователя = ГруппаПользователя;
	МенеджерЗаписи.Должность = ДолжностьНаименование;
	МенеджерЗаписи.ГруппаКомпаний = ГруппаКомпаний;
	МенеджерЗаписи.ЛогинНаПортале = ЛогинНаПортале;
	МенеджерЗаписи.ТипОбъекта = ТипОбъекта;
	МенеджерЗаписи.Объект = Объект;
	МенеджерЗаписи.Контекст = Контекст;
	
	МенеджерЗаписи.Количество = Количество + 1;
	МенеджерЗаписи.ДатаПервогоИспользования = ДатаПервогоИспользования;
	МенеджерЗаписи.ДатаПоследнегоИспользования = ДатаЗаписи;
	Попытка
		МенеджерЗаписи.Записать();   
	Исключение
		//Комментарий = "Не удалось записать статистику объекта " + Объект;
		
		ТекстСообщения = НСтр("ru='Не удалось записать статистику объекта %1. %2'");
		Комментарий = СтрШаблон(ТекстСообщения, Объект, ОписаниеОшибки());
		ЗаписьЖурналаРегистрации(НСтр("ru='Сбор статистики использования объектов'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,,,Комментарий);
	КонецПопытки;
	
КонецФункции

#КонецОбласти

// Rarus tenkam 11.04.2022 mantis 18433 ---


