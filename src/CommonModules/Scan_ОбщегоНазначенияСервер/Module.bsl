// Выводит сообщение об ошибке заполнения поля.
//
Процедура СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения, ИмяТабличнойЧасти = Неопределено, НомерСтроки = Неопределено, 
		Поле = Неопределено, Отказ = Ложь) Экспорт
		
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстСообщения;

	Если ИмяТабличнойЧасти <> Неопределено Тогда
		Сообщение.Поле = ИмяТабличнойЧасти + "[" + (НомерСтроки - 1) + "]." + Поле;
	ИначеЕсли ЗначениеЗаполнено(Поле) Тогда
		Сообщение.Поле = Поле;
	КонецЕсли;

	Сообщение.УстановитьДанные(ЭтотОбъект);
	Сообщение.Сообщить();

	Отказ = Истина;
	
КонецПроцедуры // СообщитьОбОшибке()

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ РАБОТЫ С ПРАВАМИ

// Процедура выполняет проверку прав пользователя перед записью элемента 
// справочника
//
// Параметры:
//  Объект       - записываемый объект
//  Отказ        - признак отказа записи объекта
//  ЭтаФорма     - 
//  ЗначениеПрав - КЭШ содержащий права текущего пользователя
Процедура ПроверкаПравПередЗаписьюВСправочниках(Объект, Отказ) Экспорт
	//// Проверка доступа документа по текущему пользователю
	//Если Scan_ПраваИНастройки.уатПраво("ПроверкаДоступаКСправочникамИДокументам") Тогда	
	//	Scan_ПраваИНастройки.уатПроверкаПраваДоступаКСправочникам(Объект, Отказ);
	//КонецЕсли;		
	//
	//Если НЕ (Объект.ПометкаУдаления = Объект.Ссылка.ПометкаУдаления) Тогда
	//	Если НЕ Scan_ПраваИНастройки.уатПраво("УдалениеЧерезПометку") Тогда
	//		Сообщить("У Вас нет прав на изменение пометки удаления!", СтатусСообщения.Важное); 
	//		Отказ = Истина;
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

// Процедура выполняет проверку прав пользователя перед записью документа 
// справочника
//
// Параметры:
//  Объект       - записываемый объект
//  Отказ        - признак отказа записи объекта
//  ЭтаФорма     - 
//  ЗначениеПрав - КЭШ содержащий права текущего пользователя
Процедура ПроверкаПравПередЗаписьюВДокументах(Объект, Отказ) Экспорт
	
	//rarus tenkam 30.09.2016 mantis 7183 ++ (закомментировала старое, появлялась ошибка, сделала универсально)
	
	////rarus sergei 25.08.2016 mantis 7122 ++
	////// можно ли изменять уже проведенные документы
	//Если Объект.Проведен и Объект.Сторнирован = ЛОЖЬ и НЕ ПривилегированныйРежим() Тогда
	//	Если ТипЗнч(Объект.Ссылка)= Тип("ДокументСсылка.Scan_ЗаявкаНаДействие") Тогда 
	//		Если НЕ Scan_ПраваИНастройки.Scan_Право("РедактированиеПроведенныхДокументов") Тогда
	//			Сообщить("У Вас нет прав изменять проведенные документы!", СтатусСообщения.Важное);
	//			Отказ = Истина;
	//		КонецЕсли;
	//	ИначеЕсли ТипЗнч(Объект.Ссылка)= Тип("ДокументСсылка.Scan_ЗаявкаПеревозчику") и Объект["ПодтвержденаПеревозчиком"] = Истина и НЕ ПривилегированныйРежим() Тогда
	//		Если НЕ Scan_ПраваИНастройки.Scan_Право("РедактированиеПроведенныхДокументов") Тогда
	//			Сообщить("У Вас нет прав изменять проведенные документы!", СтатусСообщения.Важное);
	//			Отказ = Истина;
	//		КонецЕсли;        
	//	КонецЕсли;
	//КонецЕсли;
	////rarus sergei 25.08.2016 mantis 7122 --
	
	Если ПривилегированныйРежим() Тогда
		Возврат;
	КонецЕсли;
	
	РедактированиеРазрешено = Scan_ПраваИНастройки.Scan_Право("РедактированиеПроведенныхДокументов");
	Если НЕ РедактированиеРазрешено И Объект.Проведен Тогда
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.Scan_ЗаявкаПеревозчику") И Объект["ПодтвержденаПеревозчиком"] = Ложь Тогда
			Отказ = Ложь	
		Иначе
			Отказ = Истина;
						
			//rarus FominskiyAS 19.04.2019  mantis 14191 +++   
			//Сообщить("У Вас нет прав изменять проведенные документы!", СтатусСообщения.Важное);
			Сообщить(Нстр("ru = 'У Вас нет прав изменять проведенные документы!'; en = 'You are not authorized to change the approved documents!'"), СтатусСообщения.Важное);
			//rarus FominskiyAS 19.04.2019  mantis 14191 ---
					
		КонецЕсли;
		
	КонецЕсли;
	//rarus tenkam 30.09.2016 mantis 7183 --
	
	
	//// Проверка доступа документа по текущему пользователю
	//Если Scan_ПраваИНастройки.уатПраво("ПроверкаДоступаКСправочникамИДокументам") Тогда
	//	Scan_ПраваИНастройки.уатПроверкаПраваДоступаКДокументам(Объект, Отказ);
	//КонецЕсли;		
	//
	//Если НЕ (Объект.ПометкаУдаления = Объект.Ссылка.ПометкаУдаления) Тогда
	//	Если НЕ Scan_ПраваИНастройки.Scan_Право("УдалениеЧерезПометку") Тогда
	//		Сообщить("У Вас нет прав на изменение пометки удаления!", СтатусСообщения.Важное); 
	//		Отказ = Истина;
	//	КонецЕсли;
	//КонецЕсли; 
КонецПроцедуры


// rarus tenkam 11.07.2019 mantis 12631 +++
Процедура ЗаписатьСобытиеОшибкаВЖР(ИмяСобытия = "",Данные = Неопределено, Комментарий = "") Экспорт	
	ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Ошибка,,Данные, Комментарий);
КонецПроцедуры	
// rarus tenkam 11.07.2019 mantis 12631 ---


// Функция - Объект модифицирован. НЕ работает с хранилищем значений. Проверяет реквизиты и табличные части
Функция ОбъектМодифицирован(Объект, ПроверятьТабличныеЧасти = Истина, ПроверятьСтандартные = Истина) Экспорт //rarus BProg_Dekin 18.02.2020 mantis 0014456 +-
    
    Ссылка = Объект.Ссылка;
    Метаданное = Ссылка.Метаданные();
    
    Для каждого Реквизит из Метаданное.Реквизиты Цикл
        Если Объект[Реквизит.Имя] <> Ссылка[Реквизит.Имя] Тогда
            Возврат Истина;
        КонецЕсли;
    КонецЦикла;
    
    Если ПроверятьСтандартные Тогда
    Для каждого Реквизит из Метаданное.СтандартныеРеквизиты Цикл
        Если Объект[Реквизит.Имя] <> Ссылка[Реквизит.Имя] Тогда
            Возврат Истина;
        КонецЕсли;
    КонецЦикла;
    КонецЕсли;
    
    
    Если ПроверятьТабличныеЧасти Тогда
        Для каждого ТЧ из Метаданное.ТабличныеЧасти Цикл
            
            Если Объект[ТЧ.Имя].Количество() <> Ссылка[ТЧ.Имя].Количество() Тогда
                Возврат Истина;
            КонецЕсли;
                        
            Для Индекс = 0 по Объект[ТЧ.Имя].Количество()-1 Цикл
                ОбъектСтрокаТЧ = Объект[ТЧ.Имя][Индекс];
                СсылкаСтрокаТЧ = Ссылка[ТЧ.Имя][Индекс];
                Для каждого РеквизитТЧ из ТЧ.Реквизиты Цикл
                    Если ОбъектСтрокаТЧ[РеквизитТЧ.Имя] <> СсылкаСтрокаТЧ[РеквизитТЧ.Имя] Тогда
                        Возврат Истина;
                    КонецЕсли;
                КонецЦикла;
            КонецЦикла;
            
        КонецЦикла;        
    КонецЕсли;
    
    Возврат Ложь;
    
КонецФункции
// rarus tenkam 11.07.2019 mantis 12631 ---

Функция ДобавитьРабочиеДни(ИсходнаяДата, КоличествоДней) Экспорт // rarus tenkam 07.04.2021 mantis 17523 +++
	// rarus tenkam 26.04.2021 mantis 17701 +++
	Если КоличествоДней = 0 Тогда
		ТекКоличествоДней = 1;
	Иначе 
		ТекКоличествоДней = КоличествоДней;
	КонецЕсли;
	// rarus tenkam 26.04.2021 mantis 17701 ---
	
	// rarus tenkam 26.04.2021 mantis 17701 +++
	//ИтогоДата = ИсходнаяДата + КоличествоДней * 60*60*24;
	ИтогоДата = ИсходнаяДата + ТекКоличествоДней * 60*60*24;
	// rarus tenkam 26.04.2021 mantis 17701 ---
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КалендарныеГрафики.ДатаГрафика КАК ДатаГрафика
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|ГДЕ
		|	КалендарныеГрафики.ДатаГрафика > &ДатаГрафика
		|	И КалендарныеГрафики.ДеньВключенВГрафик = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаГрафика";
	
	Запрос.УстановитьПараметр("ДатаГрафика", ИсходнаяДата);
	// rarus tenkam 26.04.2021 mantis 17701 +++
	//Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ", "ВЫБРАТЬ ПЕРВЫЕ " + (КоличествоДней-1));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ", "ВЫБРАТЬ ПЕРВЫЕ " + (ТекКоличествоДней-1));
	// rarus tenkam 26.04.2021 mantis 17701 ---
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТЗРезультат = РезультатЗапроса.Выгрузить();
		ИтогоДата = ТЗРезультат[ТЗРезультат.Количество()-1].ДатаГрафика;
	КонецЕсли;
	Возврат ИтогоДата;
	
КонецФункции

Функция ВычестьРабочиеДни(ИсходнаяДата, КоличествоДней) Экспорт// rarus tenkam 07.04.2021 mantis 17523 +++
	// rarus tenkam 26.04.2021 mantis 17701 +++
	Если КоличествоДней = 0 Тогда
		ТекКоличествоДней = 1;
	Иначе 
		ТекКоличествоДней = КоличествоДней;
	КонецЕсли;
	// rarus tenkam 26.04.2021 mantis 17701 ---
	
	// rarus tenkam 26.04.2021 mantis 17701 +++
	//ИтогоДата = ИсходнаяДата - КоличествоДней * 60*60*24;
	ИтогоДата = ИсходнаяДата - ТекКоличествоДней * 60*60*24;
	// rarus tenkam 26.04.2021 mantis 17701 ---
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КалендарныеГрафики.ДатаГрафика КАК ДатаГрафика
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|ГДЕ
		|	КалендарныеГрафики.ДатаГрафика < &ДатаГрафика
		|	И КалендарныеГрафики.ДеньВключенВГрафик = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаГрафика УБЫВ";
	
	Запрос.УстановитьПараметр("ДатаГрафика", ИсходнаяДата);
	// rarus tenkam 26.04.2021 mantis 17701 +++
	//Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ", "ВЫБРАТЬ ПЕРВЫЕ " + (КоличествоДней-1));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ", "ВЫБРАТЬ ПЕРВЫЕ " + (ТекКоличествоДней-1));
	// rarus tenkam 26.04.2021 mantis 17701 ---
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТЗРезультат = РезультатЗапроса.Выгрузить();
		ИтогоДата = ТЗРезультат[ТЗРезультат.Количество()-1].ДатаГрафика;
	КонецЕсли;
	Возврат ИтогоДата;
КонецФункции

Функция ПолучитьРазницуВРабочихДнях(ИсходнаяДата, КонечнаяДата) Экспорт// rarus tenkam 07.04.2021 mantis 17523 +++
	ИтогоДней = (НачалоДня(ИсходнаяДата) - НачалоДня(КонечнаяДата)) / (60 * 60 * 24);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КалендарныеГрафики.ДатаГрафика КАК ДатаГрафика
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|ГДЕ
		|	КалендарныеГрафики.ДеньВключенВГрафик = ИСТИНА
		|	И КалендарныеГрафики.ДатаГрафика МЕЖДУ &КонечнаяДата И &ИсходнаяДата";
	
	Запрос.УстановитьПараметр("ИсходнаяДата", НачалоДня(ИсходнаяДата));
	Запрос.УстановитьПараметр("КонечнаяДата", НачалоДня(КонечнаяДата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТЗРезультат = РезультатЗапроса.Выгрузить();
		ИтогоДней = ТЗРезультат.Количество();
	КонецЕсли;  	
	
	Возврат ИтогоДней;
	
КонецФункции