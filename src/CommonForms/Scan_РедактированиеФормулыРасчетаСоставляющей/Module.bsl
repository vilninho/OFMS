#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Формула                  = Параметры.Формула;
	НаименованиеСоставляющей = Параметры.НаименованиеСоставляющей;
	Составляющая             = Параметры.Составляющая;
	
	Заголовок = НСтр("ru = 'Редактирование формулы расчета составляющей (%1)'; en = 'Editing component formula (%1)'");
	Если ПустаяСтрока(НаименованиеСоставляющей) Тогда
		Заголовок = СтрЗаменить(Заголовок, "(%1)", "");
	КонецЕсли;
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Заголовок, НаименованиеСоставляющей);
	
	// Ограничиваем выбор недоступных показателей.
	Если Параметры.НедоступныеСоставляющие <> Неопределено Тогда
		НедоступныеСоставляющие = Новый ФиксированныйМассив(Параметры.НедоступныеСоставляющие);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Составляющие, "Ссылка", НедоступныеСоставляющие, ВидСравненияКомпоновкиДанных.НеВСписке);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьТекстВПозициюКурсора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры  

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Показатели" И Источник = ЭтаФорма Тогда
		Элементы.Показатели.ТекущаяСтрока = Параметр;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСоставляющие

&НаКлиенте
Процедура СоставляющиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Составляющие.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьВФормулу(Элементы.Составляющие.ТекущиеДанные.Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставляющиеНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если Элементы.Составляющие.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = Элементы.Составляющие.ТекущиеДанные.Идентификатор;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулу(Команда)
	
	ОчиститьСообщения();
	Результаты = РезультатыРедактирования(Формула, Составляющая, НедоступныеСоставляющие, Ложь);
	Если Результаты <> Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Проверка формулы завершена успешно.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСоставляющуюВФормулу(Команда)
	
	Если Элементы.Составляющие.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьВФормулу(Элементы.Составляющие.ТекущиеДанные.Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСоставляющую(Команда)
	
	Если Элементы.Составляющие.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", Элементы.Составляющие.ТекущиеДанные.Ссылка);
	ОткрытьФорму("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект.ВладелецФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОчиститьСообщения();
	Результаты = РезультатыРедактирования(Формула, Составляющая, НедоступныеСоставляющие);
	Если Результаты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	Закрыть(Результаты);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РезультатыРедактирования(Формула, ВидРасчета, НедоступныеСоставляющие, ДополнятьРезультаты = Истина)
	
	Результаты = Новый Структура;
	Результаты.Вставить("Формула", Формула);
	
	ПараметрыВыполненияФормулы =  Scan_ЦенообразованиеСервер.ПараметрыВыполненияФормулы(Формула, Истина, НедоступныеСоставляющие);
	
	Если ПараметрыВыполненияФормулы = Неопределено Тогда
		Возврат Неопределено
	Иначе
		СоставляющиеФормулы = ПараметрыВыполненияФормулы.СоставляющиеФормулы;
		
		Возврат Результаты;
	КонецЕсли;
	
КонецФункции   

&НаКлиенте
Процедура ДобавитьВФормулу(Идентификатор)
	
	УстановитьТекстВПозициюКурсора(Идентификатор);	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстВПозициюКурсора(Текст = "")
	
	НачальнаяСтрокаВыделения = 0; 
	НачальнаяКолонкаВыделения = 0; 
	КонечнаяСтрокаВыделения = 0; 
	КонечнаяКолонкаВыделения = 0;
	
	// Получим текущую позицию курсора.
	Элементы.Формула.ПолучитьГраницыВыделения(НачальнаяСтрокаВыделения, НачальнаяКолонкаВыделения, КонечнаяСтрокаВыделения, КонечнаяКолонкаВыделения);
	
	Если ПустаяСтрока(Текст) Тогда
		НачальнаяКолонкаВыделения = НачальнаяКолонкаВыделения + СтрДлина(Формула);
	Иначе
		Элементы.Формула.ВыделенныйТекст = Текст;
		Модифицированность = Истина;
		
		// Установим курсор после вставленного текста.
		НачальнаяКолонкаВыделения = НачальнаяКолонкаВыделения + СтрДлина(Текст);
	КонецЕсли;
	
	Элементы.Формула.УстановитьГраницыВыделения(НачальнаяСтрокаВыделения, НачальнаяКолонкаВыделения, НачальнаяСтрокаВыделения, НачальнаяКолонкаВыделения);
	
КонецПроцедуры

#КонецОбласти

