//rarus tenkam 30.09.2016 mantis 7183 ++
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ИЗМЕНЕНИЯ ДАННЫХ ОБЪЕКТА

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ИЗМЕНЕНИЯ ДАННЫХ РЕКВИЗИТОВ ШАПКИ

//Процедура создает и проводит документ с ХО "Поступление на склад"
Процедура СформироватьПоступлениеНаСклад(Изделие, ДатаПрихода) Экспорт
	// rarus tenkam 16.04.2020 mantis 15797 +++
	МестоПроизводства = Изделие.МестоПроизводства;
	Если НЕ ЗначениеЗаполнено(МестоПроизводства) И ЗначениеЗаполнено(Изделие.ЗаказНаЗавод) Тогда
		МестоПроизводства = Изделие.ЗаказнаЗавод.МестоПроизводства;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МестоПроизводства) Тогда
	//Если НЕ ЗначениеЗаполнено(Изделие.МестоПроизводства) Тогда
	// rarus tenkam 16.04.2020 mantis 15797 ---
		Возврат;
	КонецЕсли;
	
	//rarus bonmak 05.08.2021 18048 ++
	Если Изделие.БУ Тогда
		Возврат;
	КонецЕсли;
	//rarus bonmak 05.08.2021 18048 --
	
	//Rarus bonmak 22.12.2021 18540 ++
	ДиапазонОтклонения = Scan_ПраваИНастройки.Scan_Право("ДопустимыйДиапазонДатыFinishDate");
	РазницаВДнях = (НачалоДня(ТекущаяДата()) - НачалоДня(ДатаПрихода))/(60*60*24); 
	Если РазницаВДнях > ДиапазонОтклонения Тогда
		Возврат;
	КонецЕсли;
	//Rarus bonmak 22.12.2021 18540 --
	
	НовыйДокумент = Документы.Scan_ДвижениеИзделий.СоздатьДокумент();
	НовыйДокумент.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПоступлениеНаСклад;
	
	ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	НовыйДокумент.Организация = ТекПользователь.Организация;
	НовыйДокумент.ПодразделениеКомпании = ТекПользователь.ПодразделениеОрганизации;
	НовыйДокумент.Автор = ТекПользователь;
	НовыйДокумент.Менеджер = ТекПользователь;
	НовыйДокумент.Дата = ТекущаяДата();
	
	//rarus vikhle 27.04.2020 mt 15695 +++	
	Scan_ВспомогательныеФункцииСервер.ЗаполнитьКомпаниюИКонтрагента(ТекПользователь,НовыйДокумент.Компания,НовыйДокумент.Контрагент);
	//rarus vikhle 27.04.2020 mt 15695 ---
	
	// rarus tenkam 16.04.2020 mantis 15797 +++
	НовыйДокумент.МестоХранения = МестоПроизводства;	
	//НовыйДокумент.МестоХранения = Изделие.МестоПроизводства;
	// rarus tenkam 16.04.2020 mantis 15797 ---
	НовыйДокумент.ДатаПрихода = ДатаПрихода;
	
	СтрокаТЧ = НовыйДокумент.СоставЗаявки.Добавить();
	СтрокаТЧ.Изделие = Изделие;
	СтрокаТЧ.ДатаПрихода = ДатаПрихода;
	Попытка		//rarus tenkam 011 + (добавила попытку)
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Сообщить("Не удалось сформировать движение продуктов (ХО Поступление на склад): " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

//Процедура создает и проводит документ с ХО "Убытие из учета"
Процедура СформироватьУбытиеИзУчета(Изделие, ДатаУбытия, МестоДоставки = Неопределено, ЗаявкаНаДействиеСсылка = Неопределено, ХозОперация = Неопределено) Экспорт	// rarus tenkam 10.10.2019 mantis 15125 + (ХозОперация)
	
	//rarus tenkam 08.11.2017 mantis 11774 +++
	Если НЕ Scan_ПраваИНастройки.Scan_Право("ФормироватьУбытиеИзУчета") Тогда
		Возврат;
	КонецЕсли;
	
	// rarus tenkam 02.08.2019 mantis 14427 +++
	//Если Справочники.Scan_Продукты.УбытиеУжеЕсть(Изделие, ДатаУбытия) Тогда
	Если УбытиеУжеЕсть(Изделие, ДатаУбытия) Тогда
	// rarus tenkam 02.08.2019 mantis 14427 ---
		Возврат;
	КонецЕсли;
	//rarus tenkam 08.11.2017 mantis 11774 ---
	
	НовыйДокумент = Документы.Scan_ДвижениеИзделий.СоздатьДокумент();
	НовыйДокумент.ХозОперация = Справочники.Scan_ХозяйственныеОперации.УбытиеИзУчета;
	
	ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	НовыйДокумент.Организация = ТекПользователь.Организация;
	НовыйДокумент.ПодразделениеКомпании = ТекПользователь.ПодразделениеОрганизации;
	НовыйДокумент.Автор = ТекПользователь;
	НовыйДокумент.Менеджер = ТекПользователь;
	НовыйДокумент.Дата = ТекущаяДата();
	//rarus vikhle 27.04.2020 mt 15695 +++	
	Scan_ВспомогательныеФункцииСервер.ЗаполнитьКомпаниюИКонтрагента(ТекПользователь,НовыйДокумент.Компания,НовыйДокумент.Контрагент);
	//rarus vikhle 27.04.2020 mt 15695 ---
	
	// rarus tenkam 23.04.2018 mantis 12931 +++
	Если ЗначениеЗаполнено(МестоДоставки) И ЗначениеЗаполнено(ЗаявкаНаДействиеСсылка) Тогда
		
		// rarus tenkam 10.10.2019 mantis 15125 +++
		Если ЗначениеЗаполнено(ХозОперация) Тогда
			ТекХозОперация = ХозОперация;
		Иначе
			ТекХозОперация = ЗаявкаНаДействиеСсылка.ХозОперация;
		КонецЕсли;
		
		//Если ЗаявкаНаДействиеСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК ИЛИ
		//	ЗаявкаНаДействиеСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК ИЛИ 
		//	ЗаявкаНаДействиеСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК Тогда
		Если ТекХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК ИЛИ
			ТекХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК ИЛИ 
			ТекХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК Тогда
		// rarus tenkam 10.10.2019 mantis 15125 ---
				
			ТекущееМестоположение = МестоДоставки;
			
		Иначе
			ТекущееМестоположение = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестоположениеИзделия(Изделие, ДатаУбытия);
			Если ТекущееМестоположение = Неопределено Тогда
				ЗаписьЖурналаРегистрации("Формирование убытия из учета", УровеньЖурналаРегистрации.Ошибка,,,"У изделия " + Изделие + " не удалось получить текущее местонахождение");
				Возврат;
			КонецЕсли;
			
			Если МестоДоставки <> ТекущееМестоположение Тогда
				// Убытие создавать не будем, отправим письмо
				ЗаписьЖурналаРегистрации("Формирование убытия из учета", УровеньЖурналаРегистрации.Ошибка,,,"У изделия " + Изделие + " текущее местонахождение не соотвествует месту продажи");
				
				Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьМеханизмШаблоновДляОтправкиПисем") Тогда
					РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонОНевозможностиСформироватьУбытие", ЗаявкаНаДействиеСсылка); //rarus BProg_Gladkov 02.05.2020 0015962 +-
				КонецЕсли;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
	//Если ЗначениеЗаполнено(МестоДоставки) Тогда
	//	ТекущееМестоположение = МестоДоставки;
	//Иначе
	//	ТекущееМестоположение = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестоположениеИзделия(Изделие, ДатаУбытия);
	//	//rarus tenkam 01.03.2017 TLMS 011 +++
	//	Если ТекущееМестоположение = Неопределено Тогда
	//		Возврат;
	//	КонецЕсли;
	//	//rarus tenkam 01.03.2017 TLMS 011 ---
	//КонецЕсли;
	
	// rarus tenkam 23.04.2018 mantis 12931 ---
	
	НовыйДокумент.МестоХранения = ТекущееМестоположение;
	НовыйДокумент.ДатаПрихода = ДатаУбытия;
		
	СтрокаТЧ = НовыйДокумент.СоставЗаявки.Добавить();
	СтрокаТЧ.Изделие = Изделие;
	СтрокаТЧ.ДатаПрихода = ДатаУбытия;
	
	//rarus tenkam 08.11.2017 mantis 11774 +++
	//НовыйДокумент.Комментарий = "Документ сформирован автоматически после установки даты перевода продукта в архив.";
	НовыйДокумент.Комментарий = "Документ сформирован автоматически после установки даты передачи дилеру.";
	//rarus tenkam 08.11.2017 mantis 11774 ---
	
	Попытка		//rarus tenkam 011 + (добавила попытку)
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		
		ЗаписьЖурналаРегистрации("Формирование убытия из учета", УровеньЖурналаРегистрации.Примечание,,,"Сформирован документ убытия из учета " + НовыйДокумент.Ссылка);	//rarus tenkam 08.11.2017 mantis 11774 +
	Исключение
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить("Не удалось сформировать движение изделий (ХО Убытие из учета): " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Сообщить(НСтр("ru = 'Не удалось сформировать движение продуктов (ХО Убытие из учета):  '; en = 'Failed to generate the movement of goods: '") + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())); 
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---
		ЗаписьЖурналаРегистрации("Формирование убытия из учета", УровеньЖурналаРегистрации.Ошибка,,,"Не удалось сформировать движение изделий (ХО Убытие из учета): " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	//rarus tenkam 08.11.2017 mantis 11774 +
			
		// rarus tenkam 11.01.2019 mantis 13969 +++
		ЗаписьЖурналаРегистрации("Формирование убытия из учета", УровеньЖурналаРегистрации.Ошибка,,,"Место хранения:" + НовыйДокумент.МестоХранения + " Дата убытия:" + НовыйДокумент.ДатаПрихода + " Изделие:" + СтрокаТЧ.Изделие);
		// rarus tenkam 11.01.2019 mantis 13969 ---	
	КонецПопытки;
	
КонецПроцедуры

//Процедура заполняет дату прихода изделий в тч по дате прихода, указанной в шапке документа
Процедура ЗаполнитьДатуПриходаВТЧ(ДокОбъект, ДатаПрихода, НомерСтроки = Неопределено) Экспорт
	Если НомерСтроки = Неопределено Тогда
		Для Каждого СтрТЧ Из ДокОбъект.СоставЗаявки Цикл
			СтрТЧ.ДатаПрихода = ДатаПрихода;
		КонецЦикла;
	Иначе
		ДокОбъект.СоставЗаявки[НомерСтроки - 1].ДатаПрихода = ДатаПрихода;
	КонецЕсли;
КонецПроцедуры

//rarus tenkam 30.09.2016 mantis 7183 --


//rarus FominskiyAS 27.02.2019  mantis 13863 +++

// Устанавливает параметры загрузки.
//
// Параметры:
//  Параметры - Структура - Параметры загрузки данных из файла.
//
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
	
КонецПроцедуры

// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
//
// Параметры:
//   АдресЗагружаемыхДанных    - Строка - Адрес временного хранилища с таблицей значений, в которой
//                                        находятся загруженные данные из файла. Состав колонок:
//     * Идентификатор - Число - Порядковый номер строки;
//     * остальные колонки соответствуют колонкам макета ЗагрузкаИзФайла.
//   АдресТаблицыСопоставления - Строка - Адрес временного хранилища с пустой таблицей значений,
//                                        являющейся копией табличной части документа, 
//                                        которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//   СписокНеоднозначностей - ТаблицаЗначений - Список неоднозначных значений, для которых в ИБ имеется несколько
//                                              подходящих вариантов.
//     * Колонка       - Строка - Имя колонки, в которой была обнаружена неоднозначность;
//     * Идентификатор - Число  - Идентификатор строки, в которой была обнаружена неоднозначность.
//   ПолноеИмяТабличнойЧасти   - Строка - Полное имя табличной части, в которую загружаются данные.
//   ДополнительныеПараметры   - ЛюбойТип - Любые дополнительные сведения.
////
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт
	
	
	Изделия =  ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления);
	ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ДанныеДляСопоставления.ДатаПрихода КАК СТРОКА(10)) КАК ДатаПрихода,
	|	ДанныеДляСопоставления.Изделие КАК Изделие,
	|	ВЫРАЗИТЬ(ДанныеДляСопоставления.НомерИзделия КАК СТРОКА(15)) КАК НомерИзделия,
	|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ДанныеДляСопоставления
	|ИЗ
	|	&ДанныеДляСопоставления КАК ДанныеДляСопоставления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_Изделия.Ссылка КАК Ссылка,
	|	Scan_Изделия.НомерИзделия КАК НомерИзделия,
	|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор,
	|	ДанныеДляСопоставления.ДатаПрихода КАК ДатаПрихода
	|ПОМЕСТИТЬ СопоставленнаяПоНомеруИзделия
	|ИЗ
	|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Scan_Изделия КАК Scan_Изделия
	|		ПО (Scan_Изделия.НомерИзделия = ДанныеДляСопоставления.НомерИзделия)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляСопоставления.Изделие КАК Изделие,
	|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор,
	|	ДанныеДляСопоставления.ДатаПрихода КАК ДатаПрихода
	|ПОМЕСТИТЬ ДанныеДляСопоставленияПоНаименованию
	|ИЗ
	|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленнаяПоНомеруИзделия КАК СопоставленнаяПоНомеруИзделия
	|		ПО ДанныеДляСопоставления.Идентификатор = СопоставленнаяПоНомеруИзделия.Идентификатор
	|ГДЕ
	|	СопоставленнаяПоНомеруИзделия.Идентификатор ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Scan_Изделия.Ссылка) КАК Ссылка,
	|	ДанныеДляСопоставленияПоНаименованию.Идентификатор КАК Идентификатор,
	|	КОЛИЧЕСТВО(ДанныеДляСопоставленияПоНаименованию.Идентификатор) КАК Количество,
	|	ДанныеДляСопоставленияПоНаименованию.ДатаПрихода КАК ДатаПрихода
	|ИЗ
	|	ДанныеДляСопоставленияПоНаименованию КАК ДанныеДляСопоставленияПоНаименованию
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Scan_Изделия КАК Scan_Изделия
	|		ПО (Scan_Изделия.Наименование = (ВЫРАЗИТЬ(ДанныеДляСопоставленияПоНаименованию.Изделие КАК СТРОКА(500))))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляСопоставленияПоНаименованию.Идентификатор,
	|	ДанныеДляСопоставленияПоНаименованию.ДатаПрихода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(СопоставленнаяПоНомеруИзделия.Ссылка),
	|	СопоставленнаяПоНомеруИзделия.Идентификатор,
	|	КОЛИЧЕСТВО(СопоставленнаяПоНомеруИзделия.Идентификатор),
	|	СопоставленнаяПоНомеруИзделия.ДатаПрихода
	|ИЗ
	|	СопоставленнаяПоНомеруИзделия КАК СопоставленнаяПоНомеруИзделия
	|
	|СГРУППИРОВАТЬ ПО
	|	СопоставленнаяПоНомеруИзделия.Идентификатор,
	|	СопоставленнаяПоНомеруИзделия.ДатаПрихода";
	
	Запрос.УстановитьПараметр("ДанныеДляСопоставления", ЗагружаемыеДанные);
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ТаблицаИзделий = РезультатыЗапросов[3].Выгрузить();
	Для каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
		
		Товар = Изделия.Добавить();
		Товар.Идентификатор = СтрокаТаблицы.Идентификатор;
		Товар.ДатаПрихода = Дата(Сред(СтрокаТаблицы.ДатаПрихода,7,4),Сред(СтрокаТаблицы.ДатаПрихода,4,2),Сред(СтрокаТаблицы.ДатаПрихода,1,2));
		
		СтрокаИзделия = ТаблицаИзделий.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
		Если СтрокаИзделия <> Неопределено Тогда 
			Если СтрокаИзделия.Количество = 1 Тогда 
				Товар.Изделие = СтрокаИзделия.Ссылка;
			ИначеЕсли СтрокаИзделия.Количество > 1 Тогда
				ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
				ЗаписьОНеоднозначности.Идентификатор = СтрокаТаблицы.Идентификатор; 
				ЗаписьОНеоднозначности.Колонка = "Изделие";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Изделия, АдресТаблицыСопоставления);
	
КонецПроцедуры


//rarus FominskiyAS 27.02.2019  mantis 13863 ---

// rarus tenkam 02.08.2019 mantis 14427 +++
// Раньше была в модуль менеджера продукта

//Функция проверяет, было ли сформировано убытие изделия из учета на указанную дату
Функция УбытиеУжеЕсть(ИзделиеСсылка, ДатаУбытия) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ДвижениеИзделийСоставЗаявки.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.Scan_ДвижениеИзделий.СоставЗаявки КАК Scan_ДвижениеИзделийСоставЗаявки
	               |ГДЕ
	               |	Scan_ДвижениеИзделийСоставЗаявки.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.УбытиеИзУчета)
	               |	И Scan_ДвижениеИзделийСоставЗаявки.Изделие = &Изделие
	               |	И (Scan_ДвижениеИзделийСоставЗаявки.ДатаПрихода = &ДатаУбытия
	               |	ИЛИ Scan_ДвижениеИзделийСоставЗаявки.ДатаПрихода = &ДатаУбытия)	 // rarus tenkam 07.10.2020 mantis 16518 +
	               |	И Scan_ДвижениеИзделийСоставЗаявки.Ссылка.Проведен = ИСТИНА   //rarus tenkam 08.11.2017 mantis 11774 +
	               |	И Scan_ДвижениеИзделийСоставЗаявки.Ссылка.ПометкаУдаления = ЛОЖЬ";		//rarus tenkam 08.11.2017 mantis 11774 +
	Запрос.УстановитьПараметр("Изделие",ИзделиеСсылка);
	Запрос.УстановитьПараметр("ДатаУбытия", ДатаУбытия);
	Запрос.УстановитьПараметр("ДатаУбытияКонецДня", КонецДня(ДатаУбытия));   // rarus tenkam 07.10.2020 mantis 16518 +
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции
//rarus tenkam 04.10.2016 mantis 7183 --
// rarus tenkam 02.08.2019 mantis 14427 ---