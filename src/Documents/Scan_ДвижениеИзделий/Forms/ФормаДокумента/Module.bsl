//rarus tenkam 28.09.2016 mantis 7183 ++
#Область ОбработчикиОсновныхСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ХозОперации ++
	Scan_ВспомогательныеФункцииСервер.ИнициализироватьМенюВыбораХозОперации(ЭтаФорма);
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ПриСозданииНаСервере(ЭтотОбъект, Параметры, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;   
	
	// rarus tenkam 10.07.2018 mantis 13210 +++
	Если Параметры.Свойство("ЭтоПоступлениеБУ") Тогда
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПоступлениеНаСклад;
		Для Каждого текСтрока Из Параметры.МассивСсылок Цикл
			НоваяСтрока = Объект.СоставЗаявки.Добавить();
			// rarus tenkam 24.09.2019 mantis 14968 +++
			//НоваяСтрока.Изделие = текСтрока.Изделие;
			НоваяСтрока.Изделие = ТекСтрока;
			// rarus tenkam 24.09.2019 mantis 14968 ---			
		КонецЦикла;
	КонецЕсли;                    	
	// rarus tenkam 10.07.2018 mantis 13210 ---
	
	// rarus tenkam 22.05.2020 mantis 15715 +++
	Если Параметры.Свойство("МассивИзделий") Тогда
		Для Каждого текСтрока Из Параметры.МассивИзделий Цикл
			НоваяСтрока = Объект.СоставЗаявки.Добавить();
			НоваяСтрока.Изделие = ТекСтрока;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("ХозОперация") Тогда
		Объект.ХозОперация = Параметры.ХозОперация;
	КонецЕсли;	
	// rarus tenkam 22.05.2020 mantis 15715 ---
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	// ХозОперации --
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// Параметры документа ++
		ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь() ;
		Объект.Организация = ТекущийПользователь.Организация;
		Объект.ПодразделениеКомпании = ТекущийПользователь.ПодразделениеОрганизации;
		Объект.Автор = ТекущийПользователь;
		Объект.Менеджер = ТекущийПользователь;
		Объект.Дата = ТекущаяДата();
		Объект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
		//rarus vikhle 22.04.2020 mt 15695 +++	
		Scan_ВспомогательныеФункцииСервер.ЗаполнитьКомпаниюИКонтрагента(ТекущийПользователь,Объект.Компания,Объект.Контрагент);
		//rarus vikhle 22.04.2020 mt 15695 ---
        // Параметры документа --
	КонецЕсли;
	
	// rarus tenkam 10.04.2019 mantis 14195 +++
	НоваяКоманда1 = ЭтаФорма.Команды.Добавить("ПровестиИЗакрыть2");
	НоваяКоманда1.Действие = "ПровестиИЗакрыть";
	НовыйЭлемент = Элементы.Добавить("ФормаПровестиИЗакрыть2" , Тип("КнопкаФормы"), Элементы.ФормаКоманднаяПанель);
	НовыйЭлемент.Заголовок = "Провести и закрыть";
	НовыйЭлемент.ИмяКоманды = НоваяКоманда1.Имя;
	НовыйЭлемент.КнопкаПоУмолчанию = Истина;
	Элементы.Переместить(НовыйЭлемент,НовыйЭлемент.Родитель,Элементы.ФормаГруппаОсновная);		
	// rarus tenkam 10.04.2019 mantis 14195 ---   
	Scan_СборСтатистики.Scan_ПриОткрытии("Документы", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	
	//rarus tenkam 13.10.2016 mantis 7688 ++
	//ОбновитьНазваниеДокумента();
	ОбновитьЗаголовокФормы();
	//rarus tenkam 13.10.2016 mantis 7688 --
	// rarus tenkam 01.07.2019 mantis 14427 +++
	//ЗаполнитьПродуктыВТЧ();
	// rarus tenkam 01.07.2019 mantis ---
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// rarus tenkam 10.04.2019 mantis 14195 +++
	Если Элементы.Найти("ФормаПровестиИЗакрыть") <> Неопределено Тогда
		Элементы.ФормаПровестиИЗакрыть.Видимость = Ложь;
	КонецЕсли;		
	// rarus tenkam 10.04.2019 mantis 14195 --- 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// rarus tenkam 01.07.2019 mantis +++
	//ЗаполнитьПродуктыВТЧ();
	// rarus tenkam 01.07.2019 mantis ---
	ОбновитьЗаголовокФормы();	//rarus tenkam 13.10.2016 mantis 7688 +
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюДокумента(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 ---   
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	// Параметры документа ++
	Scan_УправлениеДиалогомДокументаСервер.ПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
	// Параметры документа --
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	// Параметры документа ++
	Scan_УправлениеДиалогомДокументаСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);
	// Параметры документа --
КонецПроцедуры

// rarus tenkam 10.04.2019 mantis 14195 +++
&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("РежимЗаписи", ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение"));
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыЗаписи = Новый Структура();
		ПараметрыЗаписи.Вставить("Закрыть", Истина);
		Если Записать(ПараметрыЗаписи) Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры
// rarus tenkam 10.04.2019 mantis 14195 ---


#КонецОбласти

// ХозОперации ++
#Область ХозОперации
// Производит настройку параметров выбора элементов управления диалога в зависимости от значений реквизитов объекта.
//
&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	Scan_УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры // НастроитьПараметрыВыбораЭлементовФормы()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Хоз. операция".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)                                                                                         
	// Вызываем общий обработчик события выбора одного из пунктов меню доступных хоз. операций
	Scan_УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	
	// Обработаем событие в контексте сервера
	НастроитьПараметрыВыбораЭлементовФормы();
	Объект.ДатаПрихода = Дата('00010101');
	ЗаполнитьДатуПрихода();
	//rarus tenkam 13.10.2016 mantis 7688 ++
	//ОбновитьНазваниеДокумента();
	ОбновитьЗаголовокФормы();
	//rarus tenkam 13.10.2016 mantis 7688 --
КонецПроцедуры // ХозОперацияПриИзменении()

//rarus tenkam 13.10.2016 mantis 7688 ++ (оказывается эта процедура не стандартная - переделала
//// Процедура обновляет название документа по хоз. операции
//&НаКлиенте
//Процедура ОбновитьНазваниеДокумента()
//	Если Не Параметры.Ключ.Пустая() Тогда
//		ЭтаФорма.Заголовок = Строка(Объект.Ссылка) +". " + Строка(Объект.ХозОперация); 	
//	Иначе
//		ЭтаФорма.АвтоЗаголовок = Истина; 
//	КонецЕсли;
//КонецПроцедуры

// Процедура обновляет заголовок формы, добавляя в нее наименование ХО
&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Заголовок = Строка(Объект.Ссылка) + ". " + Строка(Объект.ХозОперация);
	Иначе
		Заголовок = "Движение продуктов. " + Строка(Объект.ХозОперация) + " (создание)";
	КонецЕсли;
КонецПроцедуры

//rarus tenkam 13.10.2016 mantus 7688 --
#КонецОбласти
// ХозОперации --

// Параметры документа ++
#Область ПараметрыДокумента
&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
КонецПроцедуры // Подключаемый_ОбработкаРезультатаОповещения()

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;

	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
КонецПроцедуры // ОбработкаРезультатаОповещенияНаСервере()

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы   - Элемент управления, в котором возникло данное событие.
//  ДанныеВыбора         - СписокЗначений - Список возможных значений для выбора, которые будет показан.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);	
КонецПроцедуры // ПараметрыДокументаНачалоВыбора()

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
КонецПроцедуры

// Обработчик события возникающего при нажатии программно добавленной кнопки.
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Подключаемый_ОбработкаКомандыФормы(Команда) Экспорт
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект, ЭтотОбъект.Окно, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли	
КонецПроцедуры // Подключаемый_ОбработкаКомандыФормы()
#КонецОбласти
// Параметры документа --
#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

//////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ

&НаКлиенте
Процедура СоставЗаявкиИзделиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// rarus tenkam 01.08.2019 mantis 14427 +++
	////rarus tenkam 13.10.2016 mantis 7688 (баг) ++
	////Элементы.СоставЗаявки.ТекущиеДанные.Продукт = ПолучитьПродуктПоИзделию(Элементы.СоставЗаявки.ТекущиеДанные.Изделие);
	//Элементы.СоставЗаявки.ТекущиеДанные.Продукт = ПолучитьПродуктПоИзделию(ВыбранноеЗначение);
	////rarus tenkam 13.10.2016 mantis 7688 --
	// rarus tenkam 01.08.2019 mantis 14427 ---
	
	//rarus agar 28.08.2020 15696 ++
	Если ПродуктЯвляетсяНадстройкойИлиУслугой(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		Сообщить(НСтр("ru = 'Продукт является надстройкой или услугой - нельзя добавить в документ.';
		              |en = 'The product is a body or a service. Adding prohibited'"));
		Возврат;
	КонецЕсли;
	//rarus agar 28.08.2020 15696 --
	
	ЗаполнитьДатуПрихода(Элементы.СоставЗаявки.ТекущиеДанные.НомерСтроки);
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут", Ложь);
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора",ПараметрыФормы,Элементы.МестоХранения); 
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриходаПриИзменении(Элемент)
	ДатаПриходаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаПриходаПриИзмененииНаСервере()
	ЗаполнитьДатуПрихода();	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////
//// ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ И ПРОЦЕДУРЫ

// rarus tenkam 01.07.2019 mantis 14427 +++

// Функция возвращает "продукт" указанного изделия
//&НаСервере
//Функция ПолучитьПродуктПоИзделию(Изделие)
//	Возврат РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(Изделие);	
//КонецФункции    
//
//Процедура зполняет колонку "Продуки" по изделию табличной части документа
//&НаКлиенте
//Процедура ЗаполнитьПродуктыВТЧ()
//	Для Каждого СтрокаТЧ Из Объект.СоставЗаявки Цикл
//		СтрокаТЧ.Продукт = ПолучитьПродуктПоИзделию(СтрокаТЧ.Изделие);
//	КонецЦикла;
//КонецПроцедуры

// rarus tenkam 01.07.2019 mantis 14427 ---

//Процедура заполняет дату прихода в табличной части по номеру строки либо для всех строк
&НаСервере
Процедура ЗаполнитьДатуПрихода(НомерСтроки = Неопределено)
	Документы.Scan_ДвижениеИзделий.ЗаполнитьДатуПриходаВТЧ(Объект, Объект.ДатаПрихода, НомерСтроки);
КонецПроцедуры
//rarus tenkam 29.09.2016 mantis 7183 --

//rarus tenkam 14.03.2017 mantis 7623 +++
&НаКлиенте
Процедура ЗаполнитьИзБуфераОбмена(Команда)
	ОткрытьФорму("ОбщаяФорма.Scan_ФормаИмпорта",,ЭтаФорма,,,,Новый ОписаниеОповещения("ЗаполнитьИзБуфераЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзБуфераЗавершение(ЗначениеВозвращаемыхДанных, ДополнительныеПараметры) Экспорт
	Если ЗначениеВозвращаемыхДанных = Неопределено ИЛИ
		ЗначениеВозвращаемыхДанных = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеВозвращаемыхДанных.ОчиститьИзделия Тогда
		Объект.СоставЗаявки.Очистить();
	КонецЕсли;
	Если ЗначениеВозвращаемыхДанных.МассивИзделий.Количество() = 0 Тогда
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить("По данным номерам шасси не найдено ни одно изделие!");
		Сообщить(НСтр("ru = 'По данным номерам шасси не найден ни один продукт!'; en = 'Products not found!'"));
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
		Возврат;
	КонецЕсли;

	Для Каждого ТекИзделие Из ЗначениеВозвращаемыхДанных.МассивИзделий Цикл
		//rarus agar 28.08.2020 15696 ++
		Если ПродуктЯвляетсяНадстройкойИлиУслугой(ТекИзделие) Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'Продукт %1 является надстройкой или услугой - нельзя добавить в документ.';
		                            |en = 'The product %1 is a body or a service. Adding prohibited'"), ТекИзделие));
			Продолжить;
		КонецЕсли;
		//rarus agar 28.08.2020 15696 --
		
		ПараметрыОтбора = Новый Структура("Изделие", ТекИзделие);
		Если Объект.СоставЗаявки.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
			НовоеИзделие = Объект.СоставЗаявки.Добавить();
			НовоеИзделие.Изделие = ТекИзделие;
			// rarus tenkam 01.07.2019 mantis 14427 +++
			//НовоеИзделие.Продукт = ПолучитьПродуктПоИзделию(ТекИзделие);
			// rarus tenkam 01.07.2019 mantis 14427 ---
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеВозвращаемыхДанных.МассивНенайденных.Количество() <> 0 Тогда
		СообщениеОбОшибке = "Не найдены продукты со следующими номерами шасси:" + Символы.ПС;
		Для Каждого ТекНомерШасси Из ЗначениеВозвращаемыхДанных.МассивНенайденных Цикл
			СообщениеОбОшибке = СообщениеОбОшибке + ТекНомерШасси + Символы.ПС;
		КонецЦикла;
		Сообщить(СообщениеОбОшибке);
	КонецЕсли;
	ЭтаФорма.Модифицированность	= Истина;
КонецПроцедуры
//rarus tenkam 14.03.2017 mantis 7623 ---

// rarus tenkam 10.07.2018 mantis 13210 +++
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение И Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПоступлениеНаСклад") Тогда
		Если НужноУстановитьБУ() 
			И НЕ ПараметрыЗаписи.Свойство("ВопросЗадан") Тогда	// rarus tenkam 17.06.2019 mantis 14476 +
			
			// rarus tenkam 10.04.2019 mantis 14195 +++
			//Если Вопрос("В документе имеются проданные изделия. У них будет установлен признак ""Б/У"". Продолжить?",РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
			//	Отказ = Истина;				
			//Иначе
			//	// Установим признаки БУ и очистим даты
			//	УстановитьБУ();				
			//КонецЕсли;
			Если НЕ Scan_ПраваИНастройки.Scan_Право("ИспользоватьЗадачиСНакладными") Тогда //rarus bonmak 07.08.2020 14375 ++ добавил условие
				Отказ = Истина;
				ТекстВопроса = НСтр("ru = 'В документе имеются проданные продукты. У них будет установлен признак ""Б/У"". Продолжить?'");
				Оповещение = Новый ОписаниеОповещения("ПредупреждениеБУЗавершение", ЭтаФорма, ПараметрыЗаписи);
				ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.ОК, НСтр("ru = 'Предупреждение'"));	
		 	// rarus tenkam 10.04.2019 mantis 14195 ---
			КонецЕсли; //rarus bonmak 07.08.2020 14375 --
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// rarus tenkam 10.04.2019 mantis 14195 +++
&НаКлиенте
Процедура ПредупреждениеБУЗавершение(РезультатВопроса, ПараметрыЗаписи) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда 
		// Установим признаки БУ и очистим даты
		//УстановитьБУ();	// rarus tenkam 17.06.2019 mantis 14476 + (закомментировано)
		ПараметрыЗаписи.Вставить("ВопросЗадан", Истина);
		// rarus tenkam 17.06.2019 mantis 14476 +++
		//Если Записать(ПараметрыЗаписи) И ПараметрыЗаписи.Свойство("Закрыть") Тогда
		//	Закрыть();
		Если Записать(ПараметрыЗаписи) Тогда
			УстановитьБУ();
			Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
				Закрыть();
			КонецЕсли;
		// rarus tenkam 17.06.2019 mantis 14476 ---		
		КонецЕсли;						
	КонецЕсли;

КонецПроцедуры
// rarus tenkam 10.04.2019 mantis 14195 ---

&НаСервере
Функция НужноУстановитьБУ()
	
	ЕстьБУ = Ложь;
	Для Каждого текСтрока Из Объект.СоставЗаявки Цикл
		
		// rarus tenkam 12.08.2019 mantis 14427 +++
		//текПродукт = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(текСтрока.Изделие);
		//
		//ДатаПродажиИзделия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текПродукт, "ДатаПродажиИзделия");
		//ДатаПередачиИзделияДилеру = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текПродукт, "ДатаПередачиИзделияДилеру");
		//ПродуктВАрхиве = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текПродукт, "ПродуктВАрхиве");
		
		ДатаПродажиИзделия = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(текСтрока.Изделие.ЗаказНаЗавод,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия),
			Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия, ТекущаяДата());
		
		ДатаПередачиИзделияДилеру = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(текСтрока.Изделие.ЗаказНаЗавод,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаПередачиИзделияДилеру),
			Перечисления.Scan_КлючевыеДаты.ДатаПередачиИзделияДилеру, ТекущаяДата());
		
		ПродуктВАрхиве = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(текСтрока.Изделие,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве),
			Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве, ТекущаяДата());  		
		// rarus tenkam 12.08.2019 mantis 14427 ---
		
		//БУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текСтрока.Изделие, "БУ");
		Если ЗначениеЗаполнено(ДатаПродажиИзделия) И ЗначениеЗаполнено(ДатаПередачиИзделияДилеру) И ЗначениеЗаполнено(ПродуктВАрхиве) Тогда
			ЕстьБУ = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ЕстьБУ;
		
КонецФункции

&НаСервере
Процедура УстановитьБУ()
	Если Scan_ПраваИНастройки.Scan_Право("ИспользоватьЗадачиСНакладными") Тогда //rarus bonmak 18.05.2020 14375 ++
		//после отладки механизма удалить функцию
		Возврат;
	КонецЕсли; //rarus bonmak 18.05.2020 14375 --
	Для Каждого текСтрока Из Объект.СоставЗаявки Цикл
		// rarus tenkam 12.08.2019 mantis 14427 +++
		//текПродукт = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(текСтрока.Изделие);
		//
		//ДатаПродажиИзделия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текПродукт, "ДатаПродажиИзделия");
		//ДатаПередачиИзделияДилеру = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текПродукт, "ДатаПередачиИзделияДилеру");
		//ПродуктВАрхиве = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текПродукт, "ПродуктВАрхиве");
		
		ДатаПродажиИзделия = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(текСтрока.Изделие.ЗаказНаЗавод,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия),
			Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия, ТекущаяДата());
		
		ДатаПередачиИзделияДилеру = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(текСтрока.Изделие.ЗаказНаЗавод,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаПередачиИзделияДилеру),
			Перечисления.Scan_КлючевыеДаты.ДатаПередачиИзделияДилеру, ТекущаяДата());
		
		ПродуктВАрхиве = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(текСтрока.Изделие,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве),
			Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве, ТекущаяДата()); 		
		// rarus tenkam 12.08.2019 mantis 14427 ---
		
		// Если установлены даты и нет флага БУ
		Если ЗначениеЗаполнено(ДатаПродажиИзделия) И ЗначениеЗаполнено(ДатаПередачиИзделияДилеру) И ЗначениеЗаполнено(ПродуктВАрхиве) Тогда
			
			// rarus tenkam 12.08.2019 mantis 14427 +++
		
			//// Обновим продукт
			//текПродуктОбъект = текПродукт.ПолучитьОбъект();
			//текПродуктОбъект.ДатаПродажиИзделия = Дата('00010101');			
			//текПродуктОбъект.ДатаПередачиИзделияДилеру = Дата('00010101');			
			//текПродуктОбъект.ПродуктВАрхиве = Дата('00010101');
			//Попытка 
			//	текПродуктОбъект.Записать();
			
			// rarus tenkam 12.08.2019 mantis 14427 ---   		
	
				// rarus tenkam 31.05.2019 mantis 14224 +++
				Если ЗначениеЗаполнено(текСтрока.Изделие.ЗаказНаЗавод) Тогда
					// Запишем ключевую дату 
					РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(текСтрока.Изделие.ЗаказНаЗавод, 
										Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Дата('00010101'),
										Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия, ТекущаяДата());	
					
					// Запишем ключевую дату
					РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(текСтрока.Изделие.ЗаказНаЗавод, 
										Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Дата('00010101'),
										Перечисления.Scan_КлючевыеДаты.ДатаПередачиИзделияДилеру, ТекущаяДата());
										
				КонецЕсли;
				
				Если ЗначениеЗаполнено(текСтрока.Изделие) Тогда
					// Запишем ключевую дату
					РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(текСтрока.Изделие, 
										Перечисления.Scan_ОбъектыКлючевыхДат.Изделие, Дата('00010101'),
										Перечисления.Scan_КлючевыеДаты.ПродуктВАрхиве, ТекущаяДата());
				КонецЕсли;
				// rarus tenkam 31.05.2019 mantis 14224 ---
			// rarus tenkam 12.08.2019 mantis 14427 +++
		//
		//	Исключение
		//		Сообщить("Не удалось записать продукт " + текПродукт);  
		//	КонецПопытки;
			
			// rarus tenkam 12.08.2019 mantis 14427 ---
			
			БУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текСтрока.Изделие, "БУ");
			Если НЕ БУ Тогда
				// Обновим изделие
				текИзделиеОбъект = текСтрока.Изделие.ПолучитьОбъект();
				текИзделиеОбъект.БУ = Истина;
				Попытка
					текИзделиеОбъект.Записать();
				Исключение
					Сообщить("Не удалось записать продукт " + текСтрока.Изделие);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;  	
КонецПроцедуры

//rarus FominskiyAS 27.02.2019  mantis 13863 +++

// СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

&НаКлиенте
Процедура ЗагрузитьТоварыИзФайла(Команда)
	
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "Scan_ДвижениеИзделий.СоставЗаявки";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка продуктов из файла'");
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("МестоХранения", Объект.МестоХранения);
	ДополнительныеПараметры.Вставить("ДатаПрихода", Объект.ДатаПрихода);
	ПараметрыЗагрузки.ДополнительныеПараметры = ДополнительныеПараметры;
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьТоварыИзФайлаЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

//rarus FominskiyAS 27.02.2019  mantis 13863 ---


// rarus tenkam 10.07.2018 manti 13210 ---

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти


//rarus FominskiyAS 27.02.2019  mantis 13863 +++

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

&НаКлиенте
Процедура ЗагрузитьТоварыИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗагрузитьИзФайлаНаСервере(АдресЗагруженныхДанных);
	// rarus tenkam 01.07.2019 mantis 14427 +++
	//ПересчитатьТабличнуюЧасть();
	// rarus tenkam 01.07.2019 mantis 14427 ---	
КонецПроцедуры

// rarus tenkam 01.07.2019 mantis 14427 +++ 	
//&НаКлиенте
//Процедура ПересчитатьТабличнуюЧасть()
//	Для каждого СтрокаТаблицы Из Объект.СоставЗаявки Цикл
//		СтрокаТаблицы.Продукт = ПолучитьПродуктПоИзделию(СтрокаТаблицы.Изделие);
//	КонецЦикла;
//КонецПроцедуры
// rarus tenkam 01.07.2019 mantis 14427 --

&НаСервере
Процедура ЗагрузитьИзФайлаНаСервере(АдресЗагруженныхДанных)
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	ИзделияДобавлены = Ложь;
	Для каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Изделие) Тогда 
			Продолжить;
		КонецЕсли;
		
		//rarus agar 28.08.2020 15696 ++
		Если ПродуктЯвляетсяНадстройкойИлиУслугой(СтрокаТаблицы.Изделие) Тогда
			Продолжить;
		КонецЕсли;
		//rarus agar 28.08.2020 15696 --
		
		НоваяСтрокаИзделие = Объект.СоставЗаявки.Добавить();
		НоваяСтрокаИзделие.Изделие = СтрокаТаблицы.Изделие;
		НоваяСтрокаИзделие.ДатаПрихода = СтрокаТаблицы.ДатаПрихода;
		ИзделияДобавлены = Истина;
	КонецЦикла;
	
	Если ИзделияДобавлены Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

#КонецОбласти
//rarus FominskiyAS 27.02.2019  mantis 13863 ---

//rarus agar 28.08.2020 15696 ++
&НаСервереБезКонтекста
Функция ПродуктЯвляетсяНадстройкойИлиУслугой(Продукт)
	
	Возврат Справочники.Scan_Изделия.ПродуктЯвляетсяНадстройкойИлиУслугой(Продукт);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТипыПродуктовНадстроекИУслуг()
	
	МассивТиповПродуктов = Новый Массив;
	
	МассивТиповПродуктовНадстроек = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИОборудования();
	Для Каждого ЭлементМассива Из МассивТиповПродуктовНадстроек Цикл
		МассивТиповПродуктов.Добавить(ЭлементМассива);
	КонецЦикла;
	
	МассивТиповПродуктовУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовУслуг();
	Для Каждого ЭлементМассива Из МассивТиповПродуктовУслуг Цикл
		МассивТиповПродуктов.Добавить(ЭлементМассива);
	КонецЦикла;
	
	Возврат МассивТиповПродуктов;
	
КонецФункции

&НаКлиенте
Процедура СоставЗаявкиИзделиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	
	МассивТиповПродуктов = ПолучитьТипыПродуктовНадстроекИУслуг();
	
	СписокТиповПродуктов = Новый СписокЗначений;
	СписокТиповПродуктов.ЗагрузитьЗначения(МассивТиповПродуктов);
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ТипПродукта");
	эОтбор.ВидСравнения     = ВидСравненияКомпоновкиДанных.НеВСписке;
	эОтбор.ПравоеЗначение   = СписокТиповПродуктов;
	эОтбор.Использование    = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	
	ОткрытьФорму("Справочник.Scan_Изделия.ФормаВыбора", ПараметрыФормы, Элементы.СоставЗаявкиИзделие);
	
КонецПроцедуры
//rarus agar 28.08.2020 15696 --


