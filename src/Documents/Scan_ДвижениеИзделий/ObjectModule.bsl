//rarus tenkam 03.10.2016 mantis 7183 ++

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый() Тогда
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	//rarus tenkam 31.10.2017 mantis 11695 +++ теперь есть подписка на событие
	//Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
	//	ДатаПроведения = Дата('00010101');
	//ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
	//	ДатаПроведения = ТекущаяДата();
	//	
	//	//Проверим, вдруг изделие есть на каком-то маршруте или складе
	//КонецЕсли;	
	//
	//МенеджерНовый = ПользователиКлиентСервер.ТекущийПользователь();	
	//Если МенеджерНовый <> Менеджер Тогда
	//	Менеджер = МенеджерНовый;
	//	Организация = МенеджерНовый.Организация;
	//	ПодразделениеКомпании = МенеджерНовый.ПодразделениеОрганизации;
	//КонецЕсли;
	//rarus tenkam 31.10.2017 mantis 11695 ---
	//rarus sergei 09.11.2016 mantis 7163 ++
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ?(ЭтотОбъект.ЭтоНовый(), ИСТИНА, ЛОЖЬ));
	//rarus sergei 09.11.2016 mantis 7163 --
	
	// rarus tenkam 25.04.2018 mantis 13020 +++
	Если НЕ Ссылка.ПометкаУдаления И ПометкаУдаления Тогда 
		ЕстьДвижения = Ложь;
		Для Каждого ТекСтрока Из СоставЗаявки Цикл
			ЕстьДвижения = РегистрыНакопления.Scan_МестонахождениеИзделий.ЕслиДвиженияПослеРегистратора(ТекСтрока.Изделие, Ссылка, ТекСтрока.ДатаПрихода);
			Если ЕстьДвижения Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьДвижения Тогда
			Отказ = Истина;
			Сообщить("У продуктов документа есть перемещения, созданные позже даты прихода");
		КонецЕсли;			
	КонецЕсли;
	// rarus tenkam 25.04.2018 mantis 13020 ---
	
	//rarus vikhle 01.12.2020 mt 16823 +++
	Если Не Отказ И СоставЗаявки.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫРАЗИТЬ(СоставЗаявки.Изделие КАК Справочник.Scan_Изделия) КАК Изделие,
		               |	СоставЗаявки.ДатаПрихода КАК ДатаПрихода
		               |ПОМЕСТИТЬ СоставЗаявки
		               |ИЗ
		               |	&СоставЗаявки КАК СоставЗаявки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СоставЗаявки.ДатаПрихода КАК ДатаПрихода,
		               |	СоставЗаявки.Изделие КАК Изделие
		               |ИЗ
		               |	СоставЗаявки КАК СоставЗаявки
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	СоставЗаявки.Изделие.НомерИзделия";
		Запрос.УстановитьПараметр("СоставЗаявки",СоставЗаявки.Выгрузить());
		ОтсортированнаяТЗ = Запрос.Выполнить().Выгрузить();
		СоставЗаявки.Загрузить(ОтсортированнаяТЗ);
	КонецЕсли;	
	//rarus vikhle 01.12.2020 mt 16823 ---
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//rarus tenkam05.03.2017 mantis 6897 +++
	//Движения.Scan_МестонахождениеИзделий.Записывать = Истина;
	//Движения.Записать();
	//Движения.Scan_МестонахождениеИзделий.Записывать = Истина;
	//Движения.Scan_МестонахождениеИзделий.Очистить();
	//rarus tenkam 21.03.2017 mantis 9109 +++
	//НаборЗаписейМестонахождениеИзделий = РегистрыНакопления.Scan_МестонахождениеИзделий.СоздатьНаборЗаписей();
	//НаборЗаписейМестонахождениеИзделий.Отбор.Регистратор.Значение = Ссылка;
	//НаборЗаписейМестонахождениеИзделий.Очистить();
	//НаборЗаписейМестонахождениеИзделий.ДополнительныеСвойства.Вставить("ОчисткаПередЗаписью", Истина);
	//НаборЗаписейМестонахождениеИзделий.Записать();
	//rarus tenkam 21.03.2017 mantis 9109 ---
	Движения.Scan_МестонахождениеИзделий.Записывать = Истина;
	
	Для Индекс = 0 по СоставЗаявки.Количество()-1 Цикл
		СтрокаИзделия = СоставЗаявки.Получить(Индекс);
		
		//rarus tenkam 21.03.2017 mantis 9109 +++
		ДанныеМестоположения = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьДанныеПоМестонахождениюИзделия(СтрокаИзделия.Изделие, СтрокаИзделия.ДатаПрихода, Ссылка);
		МестоположениеИзделия = ?(ДанныеМестоположения = Неопределено, Неопределено, ДанныеМестоположения.МестоХранения);
		ДатаПриходаИзделия = ?(ДанныеМестоположения = Неопределено, Дата('00010101'), ДанныеМестоположения.ДатаПрихода); 
		//rarus tenkam 21.03.2017 mantis 9109 ---
				
		Если ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПоступлениеНаСклад ИЛИ
			ХозОперация = Справочники.Scan_ХозяйственныеОперации.ВводНачальныхОстатков Тогда
			//rarus tenkam 21.03.2017 mantis 9109 +++
			//МестоположениеИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестоположениеИзделия(СтрокаИзделия.Изделие, ТекущаяДата());
			//rarus tenkam 21.03.2017 mantis 9109 ---
			//rarus bonmak 22.12.2020 16653 ++
			ДатаСписанияИзделия = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(СтрокаИзделия.Изделие,
			Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(Перечисления.Scan_КлючевыеДаты.ДатаСписания),
			Перечисления.Scan_КлючевыеДаты.ДатаСписания, ТекущаяДата());
			Если ДатаСписанияИзделия <> Дата(1,1,1) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " изделие убыло из учета " + Формат(ДатаСписанияИзделия,"ДЛФ=Д") + " в связи со списанием";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "].Изделие";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
			//rarus bonmak 22.12.2020 16653 --
			// Приход
			Движение = Движения.Scan_МестонахождениеИзделий.Добавить();
			Движение.ВидДвижения =  ВидДвиженияНакопления.Приход;
			Движение.Период = СтрокаИзделия.ДатаПрихода;
			Движение.Изделие = СтрокаИзделия.Изделие;
			Движение.МестоХранения = МестоХранения;
			Движение.ДатаПрихода = СтрокаИзделия.ДатаПрихода;
			Движение.Количество = 1;
			Движение.ХозОперация = ХозОперация;
			Движение.Пользователь =  ПользователиКлиентСервер.ТекущийПользователь();
			
			Если МестоположениеИзделия <> Неопределено Тогда
				//rarus tenkam 21.03.2017 mantis 9109 +++
				//ДатаПриходаИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьДатуПриходаИзделия(СтрокаИзделия.Изделие, МестоположениеИзделия);
				//rarus tenkam 21.03.2017 mantis 9109 +++
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " изделие уже оприходовано на " + МестоположениеИзделия + " " + Формат(ДатаПриходаИзделия,"ДЛФ=Д");
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "].Изделие";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;	
			КонецЕсли;
			
		Иначе
			//rarus tenkam 21.03.2017 mantis 9109 +++
			//МестоположениеИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестоположениеИзделия(СтрокаИзделия.Изделие, СтрокаИзделия.ДатаПрихода);
			//rarus tenkam 21.03.2017 mantis 9109 ---
				
			//Это убытие из учета
			Если МестоположениеИзделия <> МестоХранения Тогда
				Сообщение = Новый СообщениеПользователю();
				Если НЕ ЗначениеЗаполнено(МестоположениеИзделия) Тогда
					Сообщение.Текст = "В строке " + (Индекс+1) + " изделие на дату убытия не находится в месте хранения";
				Иначе
					Сообщение.Текст = "В строке " + (Индекс+1) + " изделие на дату убытия находится на " + МестоположениеИзделия;
				КонецЕсли;
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "].Изделие";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
			//rarus tenkam 21.03.2017 mantis 9109 +++
			//МестонахождениеИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестонахождениеИДатуПриходаИзделия(СтрокаИзделия.Изделие, КонецДня(СтрокаИзделия.ДатаПрихода));
			//rarus tenkam 21.03.2017 mantis 9109 +++
				
			// Расход
			Движение = Движения.Scan_МестонахождениеИзделий.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = СтрокаИзделия.ДатаПрихода;
			Движение.Изделие = СтрокаИзделия.Изделие;
			Движение.МестоХранения = МестоХранения;
			//rarus tenkam 21.03.2017 mantis 9109 +++
			//Движение.ДатаПрихода = МестонахождениеИзделия.ДатаПрихода;
			Движение.ДатаПрихода = ДатаПриходаИзделия;
			//rarus tenkam 21.03.2017 mantis 9109 ---
			Движение.Количество = 1;
			Движение.ХозОперация = ХозОперация;
			Движение.Пользователь =  ПользователиКлиентСервер.ТекущийПользователь();
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверка на заполнение табличной части
	Если СоставЗаявки.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Табличная часть пустая!";
		Сообщение.Поле = "СоставЗаявки";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина;
	КонецЕсли;
	
	//Проверка на заполнение даты прихода\убытия
	Если ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПоступлениеНаСклад Тогда
		Если НЕ ЗначениеЗаполнено(ДатаПрихода) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Дата прихода не заполнена!";
			Сообщение.Поле = "ДатаПрихода";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;	
		Иначе
			Если ДатаПрихода > ТекущаяДата() Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Дата прихода больше текущей даты!";
				Сообщение.Поле = "ДатаПрихода";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;			
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ХозОперация = Справочники.Scan_ХозяйственныеОперации.ВводНачальныхОстатков Тогда
		Для Индекс = 0 по СоставЗаявки.Количество()-1 Цикл
			СтрокаИзделия = СоставЗаявки.Получить(Индекс);
			Если НЕ ЗначениеЗаполнено(СтрокаИзделия.ДатаПрихода) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " не заполнена дата прихода!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "].ДатаПрихода";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;	
			Иначе
				Если СтрокаИзделия.ДатаПрихода > ТекущаяДата() Тогда
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = "В строке " + (Индекс+1) + " дата прихода больше текущей даты!";
					Сообщение.Поле = "СоставЗаявки[" + Индекс + "].ДатаПрихода";
					Сообщение.УстановитьДанные(ЭтотОбъект);
					Сообщение.Сообщить();
					Отказ = Истина;	
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если НЕ ЗначениеЗаполнено(ДатаПрихода) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Дата убытия не заполнена!";
			Сообщение.Поле = "ДатаПрихода";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;	
		Иначе
			Если ДатаПрихода > ТекущаяДата() Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Дата убытия больше текущей даты!";
				Сообщение.Поле = "ДатаПрихода";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;			
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Проверка на заполнение места хранения
	Если НЕ ЗначениеЗаполнено(МестоХранения) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Место хранения не заполнено!";
		Сообщение.Поле = "МестоХранения";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		Отказ = Истина;	
	КонецЕсли;
	
	//rarus tenkam 13.10.2016 mantis 7688 ++
	// Проверка на одинаковые изделия в ТЧ
	НоваяТЗ = Новый ТаблицаЗначений;
	НоваяТЗ.Колонки.Добавить("Изделие");
	НоваяТЗ.Колонки.Добавить("Количество");
	Для Каждого СтрокаТЗ Из СоставЗаявки Цикл
		НоваяСтрока = НоваяТЗ.Добавить();
		НоваяСтрока.Изделие = СтрокаТЗ.Изделие;
		НоваяСтрока.Количество = 1;	
	КонецЦикла;
	НоваяТЗ.Свернуть("Изделие","Количество");
	Для Каждого СтрокаТЗ Из НоваяТЗ Цикл;
		Если СтрокаТЗ.Количество <> 1 Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "В табличной части одинаковые изделия " + СтрокаТЗ.Изделие;
			Сообщение.Поле = "СоставЗаявки";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	//rarus tenkam 13.10.2016 mantis 7688 --
	
КонецПроцедуры
//rarus tenkam 03.10.2016 mantis 7183 --

// rarus tenkam 17.06.2019 mantis 14476 +++ 
Процедура ОбработкаУдаленияПроведения(Отказ)
	ЕстьДвижения = Ложь;
	Для Каждого ТекСтрока Из СоставЗаявки Цикл
		ЕстьДвижения = РегистрыНакопления.Scan_МестонахождениеИзделий.ЕслиДвиженияПослеРегистратора(ТекСтрока.Изделие, Ссылка, ТекСтрока.ДатаПрихода);
		Если ЕстьДвижения Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьДвижения Тогда
		Отказ = Истина;
		Сообщить("У продуктов документа есть перемещения, созданные позже даты прихода");
	КонецЕсли;			
КонецПроцедуры
// rarus tenkam 17.06.2019 mantis 14476 ---


