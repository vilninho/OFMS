
// ХозОперации ++
#Область ХозОперации
// Производит настройку параметров выбора элементов управления диалога в зависимости от значений реквизитов объекта.
//
&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	Scan_УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры // НастроитьПараметрыВыбораЭлементовФормы()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Хоз. операция" в контексте сервера.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Вызываем обработчик изменения данных объекта
	Документы.Scan_УстановкаПланаПоОтгрузкам.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();	
КонецПроцедуры // ХозОперацияПриИзмененииНаСервере()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Хоз. операция".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)                                                                                         
	// Вызываем общий обработчик события выбора одного из пунктов меню доступных хоз. операций
	Scan_УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;                     
	
	// Обработаем событие в контексте сервера
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	УправлениеДиалогомНаСервере();   
	
КонецПроцедуры // ХозОперацияПриИзменении()

// Процедура обновляет заголовок формы, добавляя в нее наименование ХО
&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Заголовок = Строка(Объект.Ссылка) + ". " + Строка(Объект.ХозОперация);
	Иначе
		Заголовок = "Установка плана по отгрузкам. " + Строка(Объект.ХозОперация) + " (создание)";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
// ХозОперации --

// Параметры документа ++
#Область ПараметрыДокумента
&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
КонецПроцедуры // Подключаемый_ОбработкаРезультатаОповещения()

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;

	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
КонецПроцедуры // ОбработкаРезультатаОповещенияНаСервере()

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы   - Элемент управления, в котором возникло данное событие.
//  ДанныеВыбора         - СписокЗначений - Список возможных значений для выбора, которые будет показан.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);	
КонецПроцедуры // ПараметрыДокументаНачалоВыбора()

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
КонецПроцедуры

// Обработчик события возникающего при нажатии программно добавленной кнопки.
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Подключаемый_ОбработкаКомандыФормы(Команда) Экспорт
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект, ЭтотОбъект.Окно, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли	
КонецПроцедуры // Подключаемый_ОбработкаКомандыФормы()
#КонецОбласти
// Параметры документа --

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	Если Объект.Проведен Тогда
		Элементы.ГруппаФон.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.КорректировкаПланаПоОтгрузкам") Тогда
		Элементы.ГруппаМесяцГод.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьХозОперацию()
	//ТекстЗапроса = "ВЫБРАТЬ
	//               |	Scan_УстановкаПланаПоОтгрузкам.Ссылка КАК Ссылка
	//               |ИЗ
	//               |	Документ.Scan_УстановкаПланаПоОтгрузкам КАК Scan_УстановкаПланаПоОтгрузкам
	//               |ГДЕ
	//               |	Scan_УстановкаПланаПоОтгрузкам.Проведен
	//               |	И Scan_УстановкаПланаПоОтгрузкам.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.УстановкаПланаПоОтгрузкам)
	//               |	И Scan_УстановкаПланаПоОтгрузкам.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	//Запрос = Новый Запрос(ТекстЗапроса);
	//Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(Объект.Дата));
	//Запрос.УстановитьПараметр("ДатаОкончания",Объект.Дата);
	//РезультатЗапроса = Запрос.Выполнить();
	//Если РезультатЗапроса.Пустой() Тогда
	//	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.УстановкаПланаПоОтгрузкам;
	//Иначе	
	//	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.КорректировкаПланаПоОтгрузкам;
	//КонецЕсли;
КонецПроцедуры
//rarus bonmak 09.08.2021 16834 ++
//&НаСервере
//Функция ПолучитьКоличествоРабочихДней()
//	Возврат Документы.Scan_УстановкаПланаПоОтгрузкам.ПолучитьКоличествоРабочихДней(Объект.ГодПланирования,Объект.МесяцПланирования)
//КонецФункции
//rarus bonmak 09.08.2021 16834 --
//Подсказка с количеством рабочих дней ++
&НаСервере
Процедура ОбновлениеФормыНаКлиентеНаСервере()
	//Если ТекущийЯзык() = Метаданные.Языки.Русский Тогда
	//	Элементы.ПодсказкаГруппаИтого.Заголовок = "Плановое количество captive и independent не может быть меньше " + Строка(ПолучитьКоличествоРабочихДней()) + " дней";
	//Иначе
	//	Элементы.ПодсказкаГруппаИтого.Заголовок = "The planned number of captive and independent can't be less then " + Строка(ПолучитьКоличествоРабочихДней()) + " days";
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеФормыНаКлиенте()
	ОбновлениеФормыНаКлиентеНаСервере();
КонецПроцедуры
//Подсказка с количеством рабочих дней --

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//УстановитьХозОперацию();
	// ХозОперации ++
	Scan_ВспомогательныеФункцииСервер.ИнициализироватьМенюВыбораХозОперации(ЭтаФорма);

	Если Параметры.Ключ.Пустая() Тогда			
		Объект.Дата = ТекущаяДата();
		//УстановитьХозОперацию();
		//// ХозОперации ++
		//Scan_ВспомогательныеФункцииСервер.ИнициализироватьМенюВыбораХозОперации(ЭтаФорма);
		// Параметры документа ++
		// Вызываем общий обработчик события
		
		ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь() ;
		Если Объект.Организация.Пустая() Тогда
			Объект.Организация = ТекущийПользователь.Организация;
		КонецЕсли;
		Если Объект.ПодразделениеКомпании.Пустая() Тогда
			Объект.ПодразделениеКомпании = ТекущийПользователь.ПодразделениеОрганизации;
		КонецЕсли;
		Если Объект.ВалютаДокумента.Пустая() Тогда
			Объект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
		КонецЕсли;
		// Определим структуру параметров обработки текущего события
		ПараметрыДействия = Новый Структура;                     
		
		// Обработаем событие в контексте сервера
		ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
		Объект.Автор = ТекущийПользователь;
		Объект.Менеджер = ТекущийПользователь;
		//rarus vikhle 22.04.2020 mt 15695 +++	
		Scan_ВспомогательныеФункцииСервер.ЗаполнитьКомпаниюИКонтрагента(ТекущийПользователь,Объект.Компания,Объект.Контрагент);
		//rarus vikhle 22.04.2020 mt 15695 ---
		// Параметры документа --
	Иначе
		//Если НачалоДня(ТекущаяДата()) <> НачалоДня(Объект.Дата) Тогда
		//	ТолькоПросмотр = Истина;
		//КонецЕсли;
		Если Объект.Проведен Тогда
			ТолькоПросмотр = Истина;		
		КонецЕсли; 
	КонецЕсли;
	//Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.КорректировкаПланаПоОтгрузкам") Тогда
	//	Элементы.ГодПланирования.Доступность = Ложь;
	//	Элементы.МесяцПланирования.Доступность = Ложь;
	//КонецЕсли;
	
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ПриСозданииНаСервере(ЭтотОбъект, Параметры, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;   
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	Scan_СборСтатистики.Scan_ПриОткрытии("Документы", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

//Ограничение, если плановое количество Captive и Independent меньше количества рабочих дней в заданном месяце ++
#Область ОграниченияПоПлановымПоказателям
&НаСервере
//Процедура НеЗаполненыМесяцГодПланирования(Отказ) //не дает вводить значения captive и  independent, если не заполнены месяц и год
//	Если НЕ ЗначениеЗаполнено(Объект.ГодПланирования) ИЛИ НЕ ЗначениеЗаполнено(Объект.МесяцПланирования) Тогда
//		Объект.ИтогоЗаМесяцcaptive = 0;
//		Объект.ИтогоЗаМесяцindependent = 0;
//		Отказ = Истина;
//	КонецЕсли;
//КонецПроцедуры

&НаСервере
Процедура ИтогоЗаМесяцcaptiveПриИзмененииНаСервере(Отказ)
	Если Объект.ИтогоЗаМесяцcaptive < Документы.Scan_УстановкаПланаПоОтгрузкам.ПолучитьКоличествоРабочихДней(Объект.ГодПланирования,Объект.МесяцПланирования) Тогда
		Объект.ИтогоЗаМесяцcaptive = 0;
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

//&НаКлиенте
//Процедура ИтогоЗаМесяцcaptiveПриИзменении(Элемент)
	//Отказ = Ложь;
	//НеЗаполненыМесяцГодПланирования(Отказ);
	//Если Отказ Тогда
	//	ПоказатьПредупреждение(,"Заполните месяц и год планирования");
	//КонецЕсли;
	
//	Отказ = Ложь;
//	ИтогоЗаМесяцcaptiveПриИзмененииНаСервере(Отказ);
//	Если Отказ Тогда
//		ПоказатьПредупреждение(,"Плановое количество Captive меньше количества рабочих дней в месяце");
//	КонецЕсли;
//КонецПроцедуры

&НаСервере
Процедура ИтогоЗаМесяцindependentПриИзмененииНаСервере(Отказ)
	Если Объект.ИтогоЗаМесяцindependent < Документы.Scan_УстановкаПланаПоОтгрузкам.ПолучитьКоличествоРабочихДней(Объект.ГодПланирования,Объект.МесяцПланирования) Тогда
		Объект.ИтогоЗаМесяцindependent = 0;
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

//&НаКлиенте
//Процедура ИтогоЗаМесяцindependentПриИзменении(Элемент)
	//Отказ = Ложь;
	//НеЗаполненыМесяцГодПланирования(Отказ);
	//Если Отказ Тогда
	//	ПоказатьПредупреждение(,"Заполните месяц и год планирования");
	//КонецЕсли;
	
//	Отказ = Ложь;
//	ИтогоЗаМесяцindependentПриИзмененииНаСервере(Отказ);
//	Если Отказ Тогда
//		ПоказатьПредупреждение(,"Плановое количество Independent меньше количества рабочих дней в месяце");
//	КонецЕсли;
//КонецПроцедуры
#КонецОбласти
//Ограничение, если плановое количество Captive и Independent меньше количества рабочих дней в заданном месяце --


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	//ОбновитьЗаголовокФормы();
	ОбновлениеФормыНаКлиенте();

КонецПроцедуры

&НаКлиенте
Процедура МесяцПланированияПриИзменении(Элемент)
	ОбновлениеФормыНаКлиенте();
	Если ЭтаФорма.Объект.МесяцПланирования > 12 Тогда
		Сообщить(НСтр("ru = 'Введено некорректное значение месяца! Значение не может быть БОЛЬШЕ 12'; en = 'Incorrect month value entered! Value cannot be MORE than 12!'"));
		ЭтаФорма.Объект.МесяцПланирования = 0;
	Конецесли;
КонецПроцедуры


&НаКлиенте
Процедура ГодПланированияПриИзменении(Элемент)
	ОбновлениеФормыНаКлиенте();
	Если ЭтаФорма.Объект.ГодПланирования < 1000 Тогда
		Сообщить(НСтр("ru = 'Введено некорректное значение года!'; en = 'Incorrect year entered!'"));
		ЭтаФорма.Объект.ГодПланирования = 0;
	Конецесли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	// Вызываем общий обработчик события
	Scan_УправлениеДиалогомДокументаСервер.ПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	// Вызываем общий обработчик события
	Scan_УправлениеДиалогомДокументаСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	//ОбновитьЗаголовокФормы();
	УправлениеДиалогомНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюДокумента(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
КонецПроцедуры



