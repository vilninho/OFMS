
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ТекстЗапроса = "ВЫБРАТЬ
	               |	КалендарныеГрафики.ДатаГрафика КАК ДатаРабочегоДня,
	               |	ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.ПустаяСсылка) КАК ВидДилера,
	               |	0 КАК КоличествоПлан,
	               |	0 КАК ПланМесяц,
	               |	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) КАК Пользователь,
	               |	ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПустаяСсылка) КАК ХозОперация
	               |ИЗ
	               |	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	               |ГДЕ
	               |	КалендарныеГрафики.ДеньВключенВГрафик
	               |	И КалендарныеГрафики.Год = &ГодПланирования
	               |	И МЕСЯЦ(КалендарныеГрафики.ДатаГрафика) = &МесяцПланирования
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КалендарныеГрафики.ДатаГрафика ВОЗР";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ГодПланирования",ГодПланирования);
	Запрос.УстановитьПараметр("МесяцПланирования",МесяцПланирования);
	РезультатЗапроса = Запрос.Выполнить();
	
	
	СaptiveПлан = РезультатЗапроса.Выгрузить();
	IndependentПлан = РезультатЗапроса.Выгрузить();
	
	Движения.Scan_ПланПоDeliveriesReport.Записывать = Истина;
	
	СaptiveСред = Цел(ИтогоЗаМесяцcaptive / СaptiveПлан.Количество());
	СaptiveНераспределенныйОстаток = ИтогоЗаМесяцcaptive % СaptiveПлан.Количество();
	Движения.Scan_ПланПоDeliveriesReport.Записывать = Истина;
	
	НераспределенныйОстаток = 0;
	СуммаСaptive = 0;
	СуммаСaptive1 = 0;

		Для Каждого СтрокаСaptiveПлан Из СaptiveПлан Цикл
			СтрокаСaptiveПлан.ВидДилера = ПредопределенноеЗначение("Перечисление.Scan_ВидыДилеров.Собственный");
			//Если плановых показателей меньше, чем дней в месяце
			Если СaptiveСред = 0 Тогда  
				Если НераспределенныйОстаток < СaptiveНераспределенныйОстаток Тогда
					НераспределенныйОстаток = НераспределенныйОстаток + 1;
					// rarus tenkam 09.07.2021 mantis 17571 ++
					СуммаСaptive = СуммаСaptive + 1;	
					СтрокаСaptiveПлан.КоличествоПлан = СуммаСaptive;
					//СтрокаСaptiveПлан.КоличествоПлан = 1;
					// rarus tenkam 09.07.2021 mantis 17571 --
					СтрокаСaptiveПлан.ПланМесяц = ИтогоЗаМесяцcaptive;
					СтрокаСaptiveПлан.Пользователь = Менеджер;
					СтрокаСaptiveПлан.ХозОперация = ХозОперация;
				Иначе
					// rarus tenkam 09.07.2021 mantis 17571 ++
					//СтрокаСaptiveПлан.КоличествоПлан = 0;
					СтрокаСaptiveПлан.КоличествоПлан = СуммаСaptive;
					// rarus tenkam 09.07.2021 mantis 17571 --
					СтрокаСaptiveПлан.ПланМесяц = ИтогоЗаМесяцcaptive;
					СтрокаСaptiveПлан.Пользователь = Менеджер;
					СтрокаСaptiveПлан.ХозОперация = ХозОперация;
				КонецЕсли;
			//Если количество плановых показателей делится на кол-во дней без остатка
			ИначеЕсли СaptiveНераспределенныйОстаток = 0 Тогда
				СуммаСaptive = СуммаСaptive + СaptiveСред;
				СтрокаСaptiveПлан.КоличествоПлан = СуммаСaptive;
				СтрокаСaptiveПлан.ПланМесяц = ИтогоЗаМесяцcaptive;
				СтрокаСaptiveПлан.Пользователь = Менеджер;
				СтрокаСaptiveПлан.ХозОперация = ХозОперация;
			//Если количество плановых показателей не делится без остатка
			ИначеЕсли СaptiveСред <> 0 И СaptiveНераспределенныйОстаток <> 0 Тогда
				СуммаСaptive = СуммаСaptive + СaptiveСред;
				Если НераспределенныйОстаток < СaptiveНераспределенныйОстаток Тогда
					СуммаСaptive = СуммаСaptive + 1;
					НераспределенныйОстаток = НераспределенныйОстаток + 1;
				КонецЕсли;
				СтрокаСaptiveПлан.КоличествоПлан = СуммаСaptive;
				СтрокаСaptiveПлан.ПланМесяц = ИтогоЗаМесяцcaptive;
				СтрокаСaptiveПлан.Пользователь = Менеджер;
				СтрокаСaptiveПлан.ХозОперация = ХозОперация;
			КонецЕсли;
		КонецЦикла;
		
		IndependentСред = Цел(ИтогоЗаМесяцindependent / IndependentПлан.Количество());
		IndependentНераспределенныйОстаток = ИтогоЗаМесяцindependent % IndependentПлан.Количество();
		
		НераспределенныйОстаток = 0;
		СуммаIndependent = 0;
		СуммаIndependent1 = 0;
		
		Для Каждого СтрокаIndependentПлан Из IndependentПлан Цикл
			СтрокаIndependentПлан.ВидДилера = ПредопределенноеЗначение("Перечисление.Scan_ВидыДилеров.Независимый");
			//Если плановых показателей меньше, чем дней в месяце
			Если IndependentСред = 0 Тогда  
				Если НераспределенныйОстаток < IndependentНераспределенныйОстаток Тогда
					НераспределенныйОстаток = НераспределенныйОстаток + 1;
					// rarus tenkam 09.07.2021 mantis 17571 ++
					СуммаIndependent = СуммаIndependent + 1;	
					СтрокаIndependentПлан.КоличествоПлан = СуммаIndependent;
					//СтрокаIndependentПлан.КоличествоПлан = 1;
					// rarus tenkam 09.07.2021 mantis 17571 --
					СтрокаIndependentПлан.КоличествоПлан = 1;
					СтрокаIndependentПлан.ПланМесяц = ИтогоЗаМесяцindependent;
					СтрокаIndependentПлан.Пользователь = Менеджер;
					СтрокаIndependentПлан.ХозОперация = ХозОперация;
				Иначе
					// rarus tenkam 09.07.2021 mantis 17571 ++
					//СтрокаIndependentПлан.КоличествоПлан = 0;
					СтрокаIndependentПлан.КоличествоПлан = СуммаIndependent;
					// rarus tenkam 09.07.2021 mantis 17571 --
					СтрокаIndependentПлан.ПланМесяц = ИтогоЗаМесяцindependent;
					СтрокаIndependentПлан.Пользователь = Менеджер;
					СтрокаIndependentПлан.ХозОперация = ХозОперация;
				КонецЕсли;
				//Если количество плановых показателей делится на кол-во дней без остатка
			ИначеЕсли IndependentНераспределенныйОстаток = 0 Тогда
				СуммаIndependent = СуммаIndependent + IndependentСред;
				СтрокаIndependentПлан.КоличествоПлан = СуммаIndependent;
				СтрокаIndependentПлан.ПланМесяц = ИтогоЗаМесяцindependent;
				СтрокаIndependentПлан.Пользователь = Менеджер;
				СтрокаIndependentПлан.ХозОперация = ХозОперация;
				//Если количество плановых показателей не делится без остатка
			ИначеЕсли IndependentСред <> 0 И IndependentНераспределенныйОстаток <> 0 Тогда
				СуммаIndependent = СуммаIndependent + IndependentСред;
				Если НераспределенныйОстаток < IndependentНераспределенныйОстаток Тогда
					СуммаIndependent = СуммаIndependent + 1;
					НераспределенныйОстаток = НераспределенныйОстаток + 1;
				КонецЕсли;
				СтрокаIndependentПлан.КоличествоПлан = СуммаIndependent;
				СтрокаIndependentПлан.ПланМесяц = ИтогоЗаМесяцindependent;
				СтрокаIndependentПлан.Пользователь = Менеджер;
				СтрокаIndependentПлан.ХозОперация = ХозОперация;
			КонецЕсли;
		КонецЦикла;
	Для Каждого СтрокаСaptiveПлан Из СaptiveПлан Цикл
		Движение = Движения.Scan_ПланПоDeliveriesReport.Добавить();
		Движение.Период = Дата(ГодПланирования, МесяцПланирования,01);
		Движение.МесяцПланирования = МесяцПланирования;
		Движение.ГодПланирования = ГодПланирования;
		ЗаполнитьЗначенияСвойств(Движение,СтрокаСaptiveПлан);
	КонецЦикла;
	
	Значение = ИтогоЗаМесяцindependent;
	Для Каждого СтрокаIndependentПлан Из IndependentПлан Цикл
		Движение = Движения.Scan_ПланПоDeliveriesReport.Добавить();
		Движение.Период = Дата(ГодПланирования, МесяцПланирования,01);
		ЗаполнитьЗначенияСвойств(Движение,СтрокаIndependentПлан);
		Движение.МесяцПланирования = МесяцПланирования;
		Движение.ГодПланирования = ГодПланирования;
	КонецЦикла;    	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//Если ДанныеЗаполнения <> Неопределено Тогда
	//	ДокументОснование = ДанныеЗаполнения.Ссылка;
	//	Организация = ДанныеЗаполнения.Организация;
	//	ПодразделениеКомпании = ДанныеЗаполнения.ПодразделениеКомпании;
	//	ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
	//	//Если ДанныеЗаполнения.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.УстановкаПланаПоОтгрузкам") Тогда
	//	//	ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.КорректировкаПланаПоОтгрузкам");
	//	//КонецЕсли;
	//	ХозОперация = Справочники.Scan_ХозяйственныеОперации.УстановкаПланаПоОтгрузкам;
	//	МесяцПланирования = ДанныеЗаполнения.МесяцПланирования;
	//	ГодПланирования = ДанныеЗаполнения.ГодПланирования; 		
	//КонецЕсли; 
	////ХозОперация = Справочники.Scan_ХозяйственныеОперации.УстановкаПланаПоОтгрузкам;
Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Scan_УстановкаПланаПоОтгрузкам") Тогда
		
		// проверить что у документа основания нет других подчиненных документов  
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Scan_УстановкаПланаПоОтгрузкам.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.Scan_УстановкаПланаПоОтгрузкам КАК Scan_УстановкаПланаПоОтгрузкам
			|ГДЕ
			|	Scan_УстановкаПланаПоОтгрузкам.ДокументОснование = &ДокументОснование";
		
		Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		//
		//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ВызватьИсключение нстр("ru = 'На основании этого документа уже создана корректировка плана!'; en = 'Based on this document, an adjustment plan has already been created!'");
		КонецЕсли; 	
		
		// Заполнение шапки		
		//ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения,,"Дата, Автор, ДатаСоздания, ДатаПроведения,Номер");
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.КорректировкаПланаПоОтгрузкам;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		МесяцПланирования = ДанныеЗаполнения.МесяцПланирования;
		ГодПланирования = ДанныеЗаполнения.ГодПланирования;
	Иначе
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.УстановкаПланаПоОтгрузкам;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Возврат;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		// ограничиваем возможность провести документ с ХО "Установка плана по отгрузкам" +++
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Scan_ПланПоDeliveriesReport.Регистратор.Ссылка КАК РегистраторСсылка
		               |ИЗ
		               |	РегистрСведений.Scan_ПланПоDeliveriesReport КАК Scan_ПланПоDeliveriesReport
		               |ГДЕ
		               |	Scan_ПланПоDeliveriesReport.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.УстановкаПланаПоОтгрузкам)
		               |	И Scan_ПланПоDeliveriesReport.МесяцПланирования = &МесяцПланирования
		               |	И Scan_ПланПоDeliveriesReport.ГодПланирования = &ГодПланирования
		               |	И Scan_ПланПоDeliveriesReport.Регистратор.Ссылка <> &Ссылка
		               |	И Scan_ПланПоDeliveriesReport.Регистратор.Проведен
		               |	И НЕ Scan_ПланПоDeliveriesReport.Регистратор.ПометкаУдаления";
		Запрос.УстановитьПараметр("МесяцПланирования",ЭтотОбъект.МесяцПланирования);
		Запрос.УстановитьПараметр("ГодПланирования",ЭтотОбъект.ГодПланирования);
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);

		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() И ЭтотОбъект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.УстановкаПланаПоОтгрузкам") Тогда
			Сообщить(НСтр("ru = 'В данном месяце уже существует документ с ХО ""Установка плана по отгрузкам""'; en = 'This month there is already a document with such business transaction'"));
			Отказ = Истина;
		КонецЕсли;
		// ограничиваем возможность создать документ с ХО "Установка плана по отгрузкам" ---

		// ограничиваем возможность создать документ с ХО "Корректировка плана по отгрузкам" при смене хоз операции +++
		Если ЭтотОбъект.ХозОперация= ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.КорректировкаПланаПоОтгрузкам") И НЕ ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование) Тогда
			Сообщить(НСтр("ru = 'Введите документ через функцию ""Ввести на основании"" через последний документ';en = 'Create a document using the function "" Enter on the basis of ""'"));
			Отказ = Истина;
		КонецЕсли;
		// ограничиваем возможность создать документ с ХО "Корректировка плана по отгрузкам" при смене хоз операции ---
	КонецЕсли;
	//ограничение проведения при проведении при пустом заначении плановых показателей. Запись разрешена, но выводим предупреждение +++
	Если ИтогоЗаМесяцcaptive = 0 и ИтогоЗаМесяцindependent = 0 Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			Сообщить(НСтр("ru = 'Укажите плановое число отгрузок'; en = 'Enter the planned number of deliveries'"));
			Отказ = Истина;
		ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
			Сообщить(НСтр("ru = 'Укажите плановое число отгрузок'; en = 'Enter the planned number of deliveries'"));
		КонецЕсли;
	КонецЕсли;
	//ограничение проведения при проведении при пустом заначении плановых показателей. Запись разрешена, но выводим предупреждение ---
КонецПроцедуры

