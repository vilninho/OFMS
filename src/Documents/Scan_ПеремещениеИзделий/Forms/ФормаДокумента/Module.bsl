//rarus tenkam 04.10.2016 mantis 7183 ++
#Область ОбработчикиОсновныхСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ХозОперации ++
	Scan_ВспомогательныеФункцииСервер.ИнициализироватьМенюВыбораХозОперации(ЭтаФорма);
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ПриСозданииНаСервере(ЭтотОбъект, Параметры, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	// ХозОперации --

	УправлениеДиалогомНаСервере(); 		//rarus tenkam 16.01.2017 mantis 8172 +
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// Параметры документа ++
		ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь() ;
		Объект.Организация = ТекущийПользователь.Организация;
		Объект.ПодразделениеКомпании = ТекущийПользователь.ПодразделениеОрганизации;
		Объект.Автор = ТекущийПользователь;
		Объект.Менеджер = ТекущийПользователь;
		Объект.Дата = ТекущаяДата();
		Объект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
		//rarus vikhle 22.04.2020 mt 15695 +++	
		Scan_ВспомогательныеФункцииСервер.ЗаполнитьКомпаниюИКонтрагента(ТекущийПользователь,Объект.Компания,Объект.Контрагент);
		//rarus vikhle 22.04.2020 mt 15695 ---
		// Параметры документа --
	КонецЕсли;
	Scan_СборСтатистики.Scan_ПриОткрытии("Документы", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	// rarus tenkam 02.08.2019 mantis 14427 +++
	//ЗаполнитьПродуктыВТЧ();
	// rarus tenkam 02.08.2019 mantis 14427 ---
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

//rarus tenkam 16.01.2017 mantis 8172 ++
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Scan_ВспомогательныеФункцииСервер.ОбновитьСтатусЗаявкиНаДействие(Объект.ДокументОснование);
	КонецЕсли;

КонецПроцедуры
//rarus tenkam 16.01.2017 mantis 8172 --

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	// Параметры документа ++
	Scan_УправлениеДиалогомДокументаСервер.ПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
	// Параметры документа --
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	// Параметры документа ++
	Scan_УправлениеДиалогомДокументаСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);
	// Параметры документа --
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюДокумента(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
КонецПроцедуры

#КонецОбласти

// ХозОперации ++
#Область ХозОперации
// Производит настройку параметров выбора элементов управления диалога в зависимости от значений реквизитов объекта.
//
&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	Scan_УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры // НастроитьПараметрыВыбораЭлементовФормы()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Хоз. операция".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)                                                                                         
	// Вызываем общий обработчик события выбора одного из пунктов меню доступных хоз. операций
	Scan_УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	
	// Обработаем событие в контексте сервера
	НастроитьПараметрыВыбораЭлементовФормы();

КонецПроцедуры // ХозОперацияПриИзменении()
#КонецОбласти
// ХозОперации --

// Параметры документа ++
#Область ПараметрыДокумента
&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
КонецПроцедуры // Подключаемый_ОбработкаРезультатаОповещения()

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;	
КонецПроцедуры // ОбработкаРезультатаОповещенияНаСервере()

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы   - Элемент управления, в котором возникло данное событие.
//  ДанныеВыбора         - СписокЗначений - Список возможных значений для выбора, которые будет показан.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);	
КонецПроцедуры // ПараметрыДокументаНачалоВыбора()

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
КонецПроцедуры

// Обработчик события возникающего при нажатии программно добавленной кнопки.
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Подключаемый_ОбработкаКомандыФормы(Команда) Экспорт
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект, ЭтотОбъект.Окно, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли	
КонецПроцедуры // Подключаемый_ОбработкаКомандыФормы()
#КонецОбласти
// Параметры документа --
#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

//////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ

//rarus agar 28.08.2020 15696 ++
&НаКлиенте
Процедура ИзделияДляПеремещенияИзделиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	
	МассивТиповПродуктов = ПолучитьТипыПродуктовНадстроекИУслуг();
	
	СписокТиповПродуктов = Новый СписокЗначений;
	СписокТиповПродуктов.ЗагрузитьЗначения(МассивТиповПродуктов);
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ТипПродукта");
	эОтбор.ВидСравнения     = ВидСравненияКомпоновкиДанных.НеВСписке;
	эОтбор.ПравоеЗначение   = СписокТиповПродуктов;
	эОтбор.Использование    = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	
	Результат = ОткрытьФорму("Справочник.Scan_Изделия.ФормаВыбора", ПараметрыФормы, Элементы.ИзделияДляПеремещенияИзделие);
	//rarus agar 28.08.2020 15696 --
	
КонецПроцедуры
//rarus agar 28.08.2020 15696 --

&НаКлиенте
Процедура ИзделияДляПеремещенияИзделиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// rarus tenkam 02.08.2019 mantis 14427 +++
	////rarus tenkam 13.10.2016 mantis 7688 (баг) ++
	////Элементы.ИзделияДляПеремещения.ТекущиеДанные.Продукт = ПолучитьПродуктПоИзделию(Элементы.ИзделияДляПеремещения.ТекущиеДанные.Изделие);
	//Элементы.ИзделияДляПеремещения.ТекущиеДанные.Продукт = ПолучитьПродуктПоИзделию(ВыбранноеЗначение);
	////rarus tenkam 13.10.2016 mantis 7688 --
	// rarus tenkam 02.08.2019 mantis 14427 ---	
	
	//rarus agar 28.08.2020 15696 ++
	Если ПродуктЯвляетсяНадстройкойИлиУслугой(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		Сообщить(НСтр("ru = 'Продукт является надстройкой или услугой - нельзя добавить в документ.';
		              |en = 'The product is a body or a service. Adding prohibited'"));
		Возврат;
	КонецЕсли;
	//rarus agar 28.08.2020 15696 --
	
КонецПроцедуры

&НаКлиенте
Процедура МестоОтгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут", Ложь);
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора",ПараметрыФормы,Элементы.МестоОтгрузки);
КонецПроцедуры

&НаКлиенте
Процедура МестоДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут", Ложь);
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора",ПараметрыФормы,Элементы.МестоДоставки);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////
//// ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ

// rarus tenkam 02.08.2019 mantis 14427 +++

//// Функция возвращает продукт указанного изделия
//&НаСервереБезКонтекста
//Функция ПолучитьПродуктПоИзделию(Изделие)
//	Возврат РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(Изделие);	
//КонецФункции
//
//// Процедура заполняет колонку "Продукт" по изделиям табличной части документа
//&НаКлиенте
//Процедура ЗаполнитьПродуктыВТЧ()
//	Для Каждого СтрокаТЧ Из Объект.ИзделияДляПеремещения Цикл
//		СтрокаТЧ.Продукт = ПолучитьПродуктПоИзделию(СтрокаТЧ.Изделие);
//	КонецЦикла;
//КонецПроцедуры

// rarus tenkam 02.08.2019 mantis 14427 ---

// Функция возвращает список изделий на текущую дату находящихся в указанном месте хранения
&НаСервереБезКонтекста
Функция ПолучитьОстаткиПоМестуОтгрузки(МестоХранения)
	
	//rarus agar 28.08.2020 15696 ++
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	//rarus agar 28.08.2020 15696 --
	
	Запрос = Новый Запрос;
	//rarus agar 28.08.2020 15696 ++
	Запрос.УстановитьПараметр("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	//rarus agar 28.08.2020 15696 --
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_МестонахождениеИзделийОстатки.Изделие
	|ИЗ
	|	РегистрНакопления.Scan_МестонахождениеИзделий.Остатки(
	|			,
	|			МестоХранения = &МестоОтгрузки
	|				И ДатаПрихода <= &ТекДата) КАК Scan_МестонахождениеИзделийОстатки
	//rarus agar 28.08.2020 15696 ++
	|ГДЕ НЕ Scan_МестонахождениеИзделийОстатки.Изделие.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)";
	//rarus agar 28.08.2020 15696 --
	
	Запрос.УстановитьПараметр("МестоОтгрузки",МестоХранения);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Результат =  Запрос.Выполнить().Выгрузить();
	Возврат Результат.ВыгрузитьКолонку("Изделие");
КонецФункции

// Процедура заполняет тч документа переданным списком изделий
&НаСервере
Процедура ЗаполнтьТЧОстаткамиНаСервере(СписокИзделий)
	Для Каждого ТекИзделие Из СписокИзделий Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Изделие", ТекИзделие);
		НайденныеСтроки = Объект.ИзделияДляПеремещения.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Объект.ИзделияДляПеремещения.Добавить();
			НоваяСтрока.Изделие = ТекИзделие;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//rarus tenkam 16.01.2017 mantis 8172 ++
&НаСервере
Процедура УправлениеДиалогомНаСервере()
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		//rarus tenkam 23.02.2017 mantis 8492 +++
		//Элементы.ДатаОтгрузки.Видимость = Ложь;
		//Элементы.ДатаДоставки.Видимость = Ложь;
		//Элементы.ИзделияДляПеремещенияДатаПолучения.Видимость = Истина;
		//Элементы.ИзделияДляПеремещенияДатаДоставки.Видимость = Истина;
		//Элементы.ИзделияДляПеремещенияУстановитьФактическуюДатуДоставки.Видимость = Истина;
		//rarus tenkam 23.02.2017 mantis 8492 ---
		
		Элементы.ИзделияДляПеремещенияЗаполнитьОстаткамиПоСкладу.Видимость = Ложь;
		Элементы.ИзделияДляПеремещенияЗаполнитьПоБукингЛисту.Видимость = Ложь;		//rarus tenkam 23.02.2017 mantis 8492 +
		
		
		Элементы.ИзделияДляПеремещенияИзделие.ТолькоПросмотр = Истина;
		Элементы.ИзделияДляПеремещения.ИзменятьСоставСтрок = Ложь;
		
		Если Объект.ДокументОснование.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена Тогда
			Элементы.ГруппаФон.ТолькоПросмотр = Истина;
			Элементы.ИзделияДляПеремещенияУстановитьФактическуюДатуДоставки.Доступность = Ложь;
		Иначе
			Элементы.ГруппаФон.ТолькоПросмотр = Ложь;
			Элементы.ИзделияДляПеремещенияУстановитьФактическуюДатуДоставки.Доступность = Истина;
		КонецЕсли;	
	Иначе
		//rarus tenkam 23.02.2017 mantis 8492 +++
		//Элементы.ДатаОтгрузки.Видимость = Истина;
		//Элементы.ДатаДоставки.Видимость = Истина;
		//Элементы.ИзделияДляПеремещенияДатаПолучения.Видимость = Ложь;
		//Элементы.ИзделияДляПеремещенияДатаДоставки.Видимость = Ложь;
		//Элементы.ИзделияДляПеремещенияУстановитьФактическуюДатуДоставки.Видимость = Ложь;
		//rarus tenkam 23.02.2017 mantis 8492 ---
		
		Элементы.ИзделияДляПеремещенияЗаполнитьОстаткамиПоСкладу.Видимость = Истина;
		Элементы.ИзделияДляПеремещенияЗаполнитьПоБукингЛисту.Видимость = Истина;	//rarus tenkam 23.02.2017 mantis 8492 +
		
		
		Элементы.ИзделияДляПеремещенияИзделие.ТолькоПросмотр = Ложь;
		Элементы.ИзделияДляПеремещения.ИзменятьСоставСтрок = Истина;
	КонецЕсли;
КонецПроцедуры
//rarus tenkam 16.01.2017 mantis 8172 --

//////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьОстаткамиПоСкладу(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.МестоОтгрузки) Тогда
		Сообщить("Место отгрузки не заполнено!");
		Возврат;
	КонецЕсли;
	Остатки = ПолучитьОстаткиПоМестуОтгрузки(Объект.МестоОтгрузки);
	ЗаполнтьТЧОстаткамиНаСервере(Остатки);
	// rarus tenkam 02.08.2019 mantis 14427 +++
	//ЗаполнитьПродуктыВТЧ();
	// rarus tenkam 02.08.2019 mantis 14427 ---
	
КонецПроцедуры
//rarus tenkam 04.10.2016 mantis 7183 --

//rarus tenkam 16.01.2017 mantis 8172 ++
&НаКлиенте
Процедура УстановитьФактическуюДатуДоставки(Команда)
	Обработчик = Новый ОписаниеОповещения("УстановитьФактДату", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;	
	ОткрытьФорму("Документ.Scan_ПеремещениеИзделий.Форма.ФормаВыборФактДаты",,,,,, Обработчик, Режим);
КонецПроцедуры

// Оповещение при установке фактической даты доставки для табличной части
&НаКлиенте
Процедура УстановитьФактДату(ЗначениеВозвращаемыхДанных, Параметры) Экспорт
	Если ЗначениеВозвращаемыхДанных = Неопределено ИЛИ
		ЗначениеВозвращаемыхДанных = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	//rarus tenkam 23.02.2017 mantis 8492 +++
	УстанавливаемаяДата = ЗначениеВозвращаемыхДанных.ВидДаты;
	Для Каждого СтрокаСостава Из Объект.ИзделияДляПеремещения Цикл
		Если ЗначениеВозвращаемыхДанных.НаВсеСтроки ИЛИ
			(ЗначениеВозвращаемыхДанных.НаВсеСтроки = Ложь И НЕ ЗначениеЗаполнено(СтрокаСостава[УстанавливаемаяДата])) Тогда
			СтрокаСостава[УстанавливаемаяДата] = ЗначениеВозвращаемыхДанных.ФактДата;
		КонецЕсли;
	КонецЦикла;
	//Для Каждого СтрокаСостава Из Объект.ИзделияДляПеремещения Цикл
	//	Если ЗначениеВозвращаемыхДанных.НаВсеСтроки ИЛИ
	//		(ЗначениеВозвращаемыхДанных.НаВсеСтроки = Ложь И НЕ ЗначениеЗаполнено(СтрокаСостава.ДатаДоставки)) Тогда
	//		СтрокаСостава.ДатаДоставки = ЗначениеВозвращаемыхДанных.ФактДата;
	//	КонецЕсли;
	//КонецЦикла;
	//rarus tenkam 23.02.2017 mantis 8492 ---
	ЭтаФорма.Модифицированность	= Истина; 
КонецПроцедуры
//rarus tenkam 16.01.2017 mantis 8172 --

//rarus tenkam 23.02.2017 mantis 8492 +++
&НаКлиенте
Процедура ЗаполнитьПоБукингЛисту(Команда)
	Обработчик = Новый ОписаниеОповещения("ВыборБукингЛиста", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;	
	ОткрытьФорму("Документ.Scan_ПеремещениеИзделий.Форма.ФормаВыбораБукингЛиста",,,,,, Обработчик, Режим);
КонецПроцедуры

&НаКлиенте
Процедура ВыборБукингЛиста(ЗначениеВозвращаемыхДанных, Параметры) Экспорт
	Если ЗначениеВозвращаемыхДанных = Неопределено ИЛИ
		ЗначениеВозвращаемыхДанных = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьИзделияПоБукингЛисту(ЗначениеВозвращаемыхДанных.НомерБукингЛиста);
	// rarus tenkam 02.08.2019 mantis 14427 +++
	//ЗаполнитьПродуктыВТЧ();
	// rarus tenkam 02.08.2019 mantis 14427 ---
	ЭтаФорма.Модифицированность	= Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзделияПоБукингЛисту(НомерБукингЛиста)
	
	//rarus agar 28.08.2020 15696 ++
	МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
	//rarus agar 28.08.2020 15696 --
	
	Запрос = Новый Запрос;
	//rarus agar 28.08.2020 15696 ++
	Запрос.УстановитьПараметр("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
	//rarus agar 28.08.2020 15696 --
	// rarus tenkam 02.08.2019 mantis 14427 +++
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_Изделия.Ссылка КАК Изделие,
	|	Scan_Изделия.ЗаказНаЗавод,
	|	ЕСТЬNULL(Scan_Изделия.МестоПроизводства, ЗНАЧЕНИЕ(Справочник.Scan_МестаХранения.ПустаяСсылка)) КАК МестоПроизводства
	//rarus BProg_Gladkov 20.11.2019 0014452 ++ Ключевые даты перенесены в регистр.
	//|	ЕСТЬNULL(Scan_Изделия.ЗаказНаЗавод.CDDПоставщик, ДАТАВРЕМЯ(1, 1, 1)) КАК CDDПоставщик,
	//|	ЕСТЬNULL(Scan_Изделия.ЗаказНаЗавод.ПродуктДатаГотовности, ДАТАВРЕМЯ(1, 1, 1)) КАК ПродуктДатаГотовности
	//rarus BProg_Gladkov 20.11.2019 0014452 -- 
	|ИЗ
	|	Справочник.Scan_Изделия КАК Scan_Изделия
	|ГДЕ
	|	Scan_Изделия.ЗаказНаЗавод.НомерБукингЛиста = &НомерБукингЛиста
	//rarus agar 28.08.2020 15696 ++
	|   И НЕ Scan_Изделия.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)";
	//rarus agar 28.08.2020 15696 --
	
	Запрос.УстановитьПараметр("НомерБукингЛиста", НомерБукингЛиста);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекСтрока = ВыборкаДетальныеЗаписи;
	
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Scan_Продукты.Ссылка КАК Продукт,
	//	|	Scan_Продукты.Изделие,
	//	|	Scan_Продукты.ЗаказНаЗавод,
	//	|	ЕСТЬNULL(Scan_Продукты.Изделие.МестоПроизводства, ЗНАЧЕНИЕ(Справочник.Scan_МестаХранения.ПустаяСсылка)) КАК МестоПроизводства,
	//	|	ЕСТЬNULL(Scan_Продукты.ЗаказНаЗавод.CDDПоставщик, ДАТАВРЕМЯ(1, 1, 1)) КАК CDDПоставщик,
	//	|	ЕСТЬNULL(Scan_Продукты.ЗаказНаЗавод.ПродуктДатаГотовности, ДАТАВРЕМЯ(1, 1, 1)) КАК ПродуктДатаГотовности
	//	|ИЗ
	//	|	Справочник.Scan_Продукты КАК Scan_Продукты
	//	|ГДЕ
	//	|	Scan_Продукты.ЗаказНаЗавод.НомерБукингЛиста = &НомерБукингЛиста";
	//
	//Запрос.УстановитьПараметр("НомерБукингЛиста", НомерБукингЛиста);
	//
	//ТабРезультат = Запрос.Выполнить().Выгрузить();
	//Для Каждого ТекСтрока Из ТабРезультат Цикл
		Если Объект.МестоОтгрузки <> ТекСтрока.МестоПроизводства Тогда
			Объект.МестоОтгрузки = ТекСтрока.МестоПроизводства;
		КонецЕсли;
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Изделие", ТекСтрока.Изделие);
		НайденныеСтроки = Объект.ИзделияДляПеремещения.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Объект.ИзделияДляПеремещения.Добавить();
			НоваяСтрока.Изделие = ТекСтрока.Изделие;
			//rarus BProg_Gladkov 20.11.2019 0014452 ++ Ключевые даты перенесены в регистр.
			КлючевыеДаты = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючевыеДатыОбъекта(ТекСтрока.ЗаказНаЗавод);
			НоваяСтрока.ДатаПолучения = КлючевыеДаты.FinishDate + 1;
			НоваяСтрока.ДатаДоставки  = КлючевыеДаты.CDDПоставщик;
			//rarus BProg_Gladkov 20.11.2019 0014452 -- 
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры
//rarus tenkam 23.02.2017 mantis 8492 ---

//rarus tenkam 14.03.2017 mantis 7623 +++
&НаКлиенте
Процедура ЗаполнитьИзБуфераОбмена(Команда)
	ОткрытьФорму("ОбщаяФорма.Scan_ФормаИмпорта",,ЭтаФорма,,,,Новый ОписаниеОповещения("ЗаполнитьИзБуфераЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзБуфераЗавершение(ЗначениеВозвращаемыхДанных, ДополнительныеПараметры) Экспорт
	Если ЗначениеВозвращаемыхДанных = Неопределено ИЛИ
		ЗначениеВозвращаемыхДанных = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеВозвращаемыхДанных.ОчиститьИзделия Тогда
		Объект.ИзделияДляПеремещения.Очистить();
	КонецЕсли;
	Если ЗначениеВозвращаемыхДанных.МассивИзделий.Количество() = 0 Тогда
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить("По данным номерам шасси не найдено ни одно изделие!");
		Сообщить(НСтр("ru = 'По данным номерам шасси не найден ни один продукт!'; en = 'Products not found!'"));
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
		Возврат;
	КонецЕсли;
	Для Каждого ТекИзделие Из ЗначениеВозвращаемыхДанных.МассивИзделий Цикл
		//rarus agar 28.08.2020 15696 ++
		Если ПродуктЯвляетсяНадстройкойИлиУслугой(ТекИзделие) Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'Продукт %1 является надстройкой или услугой - нельзя добавить в документ.';
		                            |en = 'The product %1 is a body or a service. Adding prohibited'"), ТекИзделие));
			Продолжить;
		КонецЕсли;
		//rarus agar 28.08.2020 15696 --
		
		ПараметрыОтбора = Новый Структура("Изделие", ТекИзделие);
		Если Объект.ИзделияДляПеремещения.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
			НовоеИзделие = Объект.ИзделияДляПеремещения.Добавить();
			НовоеИзделие.Изделие = ТекИзделие;
		КонецЕсли;
	КонецЦикла;
	// rarus tenkam 02.08.2019 mantis 14427 +++
	//ЗаполнитьПродуктыВТЧ();
	// rarus tenkam 02.08.2019 mantis 14427 ---
	Если ЗначениеВозвращаемыхДанных.МассивНенайденных.Количество() <> 0 Тогда
		СообщениеОбОшибке = "Не найдены изделия со следующими номерами шасси:" + Символы.ПС;
		Для Каждого ТекНомерШасси Из ЗначениеВозвращаемыхДанных.МассивНенайденных Цикл
			СообщениеОбОшибке = СообщениеОбОшибке + ТекНомерШасси + Символы.ПС;
		КонецЦикла;
		Сообщить(СообщениеОбОшибке);
	КонецЕсли;

	ЭтаФорма.Модифицированность	= Истина;
КонецПроцедуры
//rarus tenkam 14.03.2017 mantis 7623---

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

//rarus agar 28.08.2020 15696 ++
&НаСервереБезКонтекста
Функция ПродуктЯвляетсяНадстройкойИлиУслугой(Продукт)
	
	Возврат Справочники.Scan_Изделия.ПродуктЯвляетсяНадстройкойИлиУслугой(Продукт);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТипыПродуктовНадстроекИУслуг()
	
	МассивТиповПродуктов = Новый Массив;
	
	МассивТиповПродуктовНадстроек = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИОборудования();
	Для Каждого ЭлементМассива Из МассивТиповПродуктовНадстроек Цикл
		МассивТиповПродуктов.Добавить(ЭлементМассива);
	КонецЦикла;
	
	МассивТиповПродуктовУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовУслуг();
	Для Каждого ЭлементМассива Из МассивТиповПродуктовУслуг Цикл
		МассивТиповПродуктов.Добавить(ЭлементМассива);
	КонецЦикла;
	
	Возврат МассивТиповПродуктов;
	
КонецФункции

//rarus agar 28.08.2020 15696 --
