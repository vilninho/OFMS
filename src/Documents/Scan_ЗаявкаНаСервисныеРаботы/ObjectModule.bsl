
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Scan_ЗаявкаНаДействие") Тогда
	
		ДокументОснование = ДанныеЗаполнения;
	//
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Scan_ЗаявкаПеревозчику") Тогда
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// При подчинении регистратору
	//// регистр Scan_ВыполненныеРаботыНаИзделиях
	//Движения.Scan_ВыполненныеРаботыНаИзделиях.Записывать = Истина;
	//Для Каждого ТекСтрокаСоставЗаявки Из СоставЗаявки Цикл
	//	Движение = Движения.Scan_ВыполненныеРаботыНаИзделиях.Добавить();
	//	Движение.Изделие = ТекСтрокаСоставЗаявки.Изделие;
	//	Движение.Работа = ТекСтрокаСоставЗаявки.Работа;
	//	Движение.Документ = Ссылка;
	//	Движение.СуммаРаботБезНДС = ТекСтрокаСоставЗаявки.СуммаРаботБезНДС;
	//	Движение.СуммаРаботНДС = ТекСтрокаСоставЗаявки.СуммаРаботНДС;
	//	Движение.Исполнитель = Исполнитель;
	//	Движение.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	//	Движение.ПлановаяДатаВыполнения = ПлановаяДатаВыполнения;
	//	Движение.ПлановаяДатаПодтвержденнаяИсполнителем = ПлановаяДатаПодтвержденнаяИсполнителем;
	//	Движение.ПодтвержденИсполнителем = ПодтвержденоИсполнителем;
	//КонецЦикла;
	
	// Независимый регистр
	// регистр Scan_ВыполненныеРаботыНаИзделиях
	НаборЗаписей = РегистрыСведений.Scan_ВыполненныеРаботыНаИзделиях.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Ссылка);
	НаборЗаписей.Очистить();
	Если Не Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Аннулирована Тогда
	
		Для Каждого ТекСтрокаСоставЗаявки Из СоставЗаявки Цикл
			Движение = НаборЗаписей.Добавить();
			Движение.Изделие = ТекСтрокаСоставЗаявки.Изделие;
			Движение.Работа = ТекСтрокаСоставЗаявки.Работа;
			// rarus tenkam 22.03.2018 mantis 9428 +++
			Движение.КодНеисправнойДетали = ТекСтрокаСоставЗаявки.КодНеисправнойДетали;
			Движение.КодДефекта = ТекСтрокаСоставЗаявки.КодДефекта;
			Движение.Комплектующие = ТекСтрокаСоставЗаявки.Комплектующие;
			Движение.Количество = ТекСтрокаСоставЗаявки.Количество;
			Движение.Комментарий = ТекСтрокаСоставЗаявки.Комментарий;
			Движение.ПричинаОбращенияНаСервис = ТекСтрокаСоставЗаявки.ПричинаОбращенияНаСервис;
			Движение.Тахограф = ТекСтрокаСоставЗаявки.Тахограф;
			// rarus tenkam 22.03.2018 mantis 9428 ---    			
			Движение.Документ = Ссылка;
			Движение.СуммаРаботБезНДС = ТекСтрокаСоставЗаявки.СуммаРаботБезНДС;
			Движение.СуммаРаботНДС = ТекСтрокаСоставЗаявки.СуммаРаботНДС;
			Движение.ЗаказНаряд = ТекСтрокаСоставЗаявки.ЗаказНаряд;
			Движение.ДатаЗаказНаряда = ТекСтрокаСоставЗаявки.ДатаЗаказНаряда;
			Движение.ФактическаяДатаВыполнения = ТекСтрокаСоставЗаявки.ДатаЗаказНаряда;
			Движение.Исполнитель = Исполнитель;
			//rarus FominskiyAS 28.02.2019  mantis 13863 +++
			//Движение.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			Движение.Пользователь = ПользователиСлужебный.АвторизованныйПользователь();
			//rarus FominskiyAS 28.02.2019  mantis 13863 ---
			Движение.ПлановаяДатаВыполнения = ПлановаяДатаВыполнения;
			Движение.ПлановаяДатаПодтвержденнаяИсполнителем = ПлановаяДатаПодтвержденнаяИсполнителем;
			Движение.ПодтвержденИсполнителем = ПодтвержденоИсполнителем;
		КонецЦикла;		
	
	КонецЕсли;
	Попытка		//rarus tenkam 12.02.2018 mantis 9428 +
		НаборЗаписей.Записать(Истина);
	//rarus tenkam 12.02.2018 mantis 9428 +++
	Исключение
		Отказ = Истина;
		Сообщить("Не удалось записать данные регистра. " + ОписаниеОшибки());
	КонецПопытки;
	//rarus tenkam 12.02.2018 mantis 9428 ---
	
КонецПроцедуры

Процедура УстановитьСтатус()

	Если Не ЗначениеЗаполнено(Статус) Тогда
	
		Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Новая;
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Исполнитель)
		И ЗначениеЗаполнено(ПлановаяДатаВыполнения)
			И ЕстьОтправленныеПисьма(Ссылка)
				 И Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Новая Тогда
	
		Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Рассмотрена;
	
	КонецЕсли;
	
	Если ПодтвержденоИсполнителем 
		И ЗначениеЗаполнено(ПлановаяДатаПодтвержденнаяИсполнителем)		//rarus tenkam 06.02.2018 mantis 9428 + bug
				 И Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Рассмотрена Тогда
	
		Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Подтверждена;
	
	КонецЕсли;
	
	Если (Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Подтверждена 
			Или Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.ВРаботе)
				И СоставЗаявкиЗаполнен(СоставЗаявки) Тогда
	
		Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Исполнена;
	
	КонецЕсли;
	

КонецПроцедуры

Функция СоставЗаявкиЗаполнен(Знач ТЧ_СоставЗаявки)

	ТЧ_СоставЗаявки = СоставЗаявки.Выгрузить();
	
	Для каждого Строка Из ТЧ_СоставЗаявки Цикл
	
		Если Не ЗначениеЗаполнено(Строка.ДатаЗаказНаряда)
			Или Не ЗначениеЗаполнено(Строка.ЗаказНаряд)
				Или Не ЗначениеЗаполнено(Строка.СуммаРаботБезНДС)
					//Или Не ЗначениеЗаполнено(Строка.СуммаРаботНДС) 
					Тогда
		
			Возврат Ложь;	
		
		КонецЕсли;	
	
	КонецЦикла;
	
	//// rarus tenkam 13.02.2018 mantis 9428 +++
	//ТЧ_КомплектующиеЗаявки = КомплектующиеЗаявки.Выгрузить();
	//
	//Для каждого Строка Из ТЧ_КомплектующиеЗаявки Цикл		
	//	Если Не ЗначениеЗаполнено(Строка.ДатаЗаказНаряда)
	//		Или Не ЗначениеЗаполнено(Строка.ЗаказНаряд)
	//		Или Не ЗначениеЗаполнено(Строка.СуммаРаботБезНДС) 
	//		Тогда
	//		
	//		Возврат Ложь;	
	//		
	//	КонецЕсли;			
	//КонецЦикла;
	//// rarus tenkam 13.02.2018 mantis 9429 ---
	
	Возврат Истина;

КонецФункции // ()

Функция ЕстьОтправленныеПисьма(ЗаявкаНаСервисныеРаботы)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ОтправленныеПисьма.Кому КАК Кому,
	               |	Scan_ОтправленныеПисьма.ДатаОтправки КАК ДатаОтправки,
	               |	Scan_ОтправленныеПисьма.ДокументОтправки КАК ДокументОтправки
	               |ИЗ
	               |	РегистрСведений.Scan_ОтправленныеПисьма КАК Scan_ОтправленныеПисьма
	               |ГДЕ
	               |	Scan_ОтправленныеПисьма.ДокументОтправки = &ДокументОтправки";
	
	Запрос.УстановитьПараметр("ДокументОтправки", ЗаявкаНаСервисныеРаботы);

	Результат = Запрос.Выполнить();
	
	РезультатПустой = Результат.Пустой();
	
	Возврат Не РезультатПустой;
	
КонецФункции // ()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ПодтвержденоИсполнителем 
		И (Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Новая) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Установка флага ""Подтверждено исполнителем"" возможна только в статусе ""Рассмотрена""!";
		Сообщение.Сообщить();
		
		Отказ = Истина;
	
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	
		УстановитьСтатус(); 		
	
	КонецЕсли;
	
	// rarus tenkam 13.02.2018 mantis 9428 +++ bug
	Если Не ЗначениеЗаполнено(НомерДокументаВнутренний) Тогда	
		Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
			УстановитьНовыйНомер();				 
		КонецЕсли;
		НомерДокументаВнутренний = Строка(Номер) + "-" + 1;
	КонецЕсли;
	// rarus tenkam 13.02.2018 mantis 9428 --- bug  
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	
		ПроверитьЗаполненностьРабот(Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполненностьРабот(Отказ)

	Для каждого СтрокаИзделия Из СоставЗаявки Цикл
	
		Если Не ЗначениеЗаполнено(СтрокаИзделия.Работа) Тогда
		
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнена работа в строке № " + СтрокаИзделия.НомерСтроки;
			Сообщение.Сообщить();
		
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Статус = 0;
	НомерДокументаВнутренний = "";		//rarus tenkam 13.02.2018 mantis 9428 + bug
	
КонецПроцедуры
