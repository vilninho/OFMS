
//rarus kolg 20.11.2017 TLMS 9428 ++

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);

КонецПроцедуры

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура УказатьЗаказНарядИДатуВыполнения(Команда)
	
	ОткрытьФорму("Документ.Scan_ЗаявкаНаСервисныеРаботы.Форма.ФормаВводаЗаказНаряда",Новый Структура("РежимИзменения", 3), ЭтаФорма,,,,Новый ОписаниеОповещения("УказатьЗаказНарядИДатуВыполненияЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);			
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьЗаказНарядИДатуВыполненияЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда
	
		Для каждого Строка Из Объект.СоставЗаявки Цикл
			
			Если РезультатЗакрытия.РежимИзменения = 1 И Строка.Флаг Тогда
			
				Строка.ЗаказНаряд 		= РезультатЗакрытия.НомерЗаказНаряда;
				Строка.ДатаЗаказНаряда 	= РезультатЗакрытия.ДатаЗаказНаряда;
			
			ИначеЕсли РезультатЗакрытия.РежимИзменения = 2 И Не ЗначениеЗаполнено(Строка.ДатаЗаказНаряда) Тогда
				
				Строка.ЗаказНаряд 		= РезультатЗакрытия.НомерЗаказНаряда;
				Строка.ДатаЗаказНаряда 	= РезультатЗакрытия.ДатаЗаказНаряда;
				
			ИначеЕсли РезультатЗакрытия.РежимИзменения = 3 Тогда	
				
				Строка.ЗаказНаряд 		= РезультатЗакрытия.НомерЗаказНаряда;
				Строка.ДатаЗаказНаряда 	= РезультатЗакрытия.ДатаЗаказНаряда;
				
			КонецЕсли;
			
		КонецЦикла;	
		
		////rarus tenkam 11.12.2017 mantis 11952 +++
		//Для каждого Строка Из Объект.КомплектующиеЗаявки Цикл
		//	
		//	Если РезультатЗакрытия.РежимИзменения = 1 И Строка.Флаг Тогда
		//	
		//		Строка.ЗаказНаряд 		= РезультатЗакрытия.НомерЗаказНаряда;
		//		Строка.ДатаЗаказНаряда 	= РезультатЗакрытия.ДатаЗаказНаряда;
		//	
		//	ИначеЕсли РезультатЗакрытия.РежимИзменения = 2 И Не ЗначениеЗаполнено(Строка.ДатаЗаказНаряда) Тогда
		//		
		//		Строка.ЗаказНаряд 		= РезультатЗакрытия.НомерЗаказНаряда;
		//		Строка.ДатаЗаказНаряда 	= РезультатЗакрытия.ДатаЗаказНаряда;
		//		
		//	ИначеЕсли РезультатЗакрытия.РежимИзменения = 3 Тогда	
		//		
		//		Строка.ЗаказНаряд 		= РезультатЗакрытия.НомерЗаказНаряда;
		//		Строка.ДатаЗаказНаряда 	= РезультатЗакрытия.ДатаЗаказНаряда;
		//		
		//	КонецЕсли;
		//	
		//КонецЦикла;
		////rarus tenkam 11.12.2017 mantis 11952 ---
		
		СнятьФлажки(Неопределено);
		
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИз1БД(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзБуфераОбмена(Команда)
	//rarus tenkam 11.12.2017 mantis 11952 +++
	ДопПараметры = Новый Структура("ИмяТЧ", "СоставЗаявки");		
	ОткрытьФорму("ОбщаяФорма.Scan_ФормаИмпорта",,ЭтаФорма,,,,Новый ОписаниеОповещения("ЗаполнитьИзБуфераЗавершение", ЭтотОбъект,ДопПараметры), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//ОткрытьФорму("ОбщаяФорма.Scan_ФормаИмпорта",,ЭтаФорма,,,,Новый ОписаниеОповещения("ЗаполнитьИзБуфераЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//rarus tenkam 11.12.2017 mantis 11952 ---	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзБуфераЗавершение(ЗначениеВозвращаемыхДанных, ДополнительныеПараметры) Экспорт
	Если ЗначениеВозвращаемыхДанных = Неопределено ИЛИ
		ЗначениеВозвращаемыхДанных = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	ИмяТЧ = ДополнительныеПараметры.ИмяТЧ;		//rarus tenkam 11.12.2017 mantis 11952 +		
	Если ЗначениеВозвращаемыхДанных.ОчиститьИзделия Тогда
		//rarus tenkam 11.12.2017 mantis 11952 +++
		//Объект.СоставЗаявки.Очистить();
		Объект[ИмяТЧ].Очистить();  		
		//rarus tenkam 11.12.2017 mantis 11952 ---
	КонецЕсли;
	Если ЗначениеВозвращаемыхДанных.МассивИзделий.Количество() = 0 Тогда
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить("По данным номерам шасси не найдено ни одно изделие!");
		Сообщить(НСтр("ru = 'По данным номерам шасси не найден ни один продукт!'; en = 'Products not found!'"));
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
		Возврат;
	КонецЕсли;
	Для Каждого ТекИзделие Из ЗначениеВозвращаемыхДанных.МассивИзделий Цикл
		ПараметрыОтбора = Новый Структура("Изделие", ТекИзделие);
		//rarus tenkam 11.12.2017 mantis 11952 +++
		//Если Объект.СоставЗаявки.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
			//НовоеИзделие = Объект.СоставЗаявки.Добавить();
		Если Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
		    НовоеИзделие = Объект[ИмяТЧ].Добавить();
			//rarus tenkam 11.12.2017 mantis 11952 ---
			НовоеИзделие.Изделие = ТекИзделие;
			//НовоеИзделие.Продукт = ПолучитьПродуктПоИзделию(ТекИзделие);
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеВозвращаемыхДанных.МассивНенайденных.Количество() <> 0 Тогда
		СообщениеОбОшибке = "Не найдены изделия со следующими номерами шасси:" + Символы.ПС;
		Для Каждого ТекНомерШасси Из ЗначениеВозвращаемыхДанных.МассивНенайденных Цикл
			СообщениеОбОшибке = СообщениеОбОшибке + ТекНомерШасси + Символы.ПС;
		КонецЦикла;
		Сообщить(СообщениеОбОшибке);
	КонецЕсли;

	ЭтаФорма.Модифицированность	= Истина;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеДиалогомНаСервере(Отказ);
	
	Если Параметры.Свойство("Продукты") Тогда
		Для Каждого Элемент Из Параметры.Продукты Цикл
			НоваяСтрока	= Объект.СоставЗаявки.Добавить();
			НоваяСтрока.Изделие = Элемент.Изделие;     			
		КонецЦикла;				
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//Scan_ВспомогательныеФункцииСервер.ИнициализироватьМенюВыбораХозОперации(ЭтаФорма);
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ПриСозданииНаСервере(ЭтотОбъект, Параметры, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	// Дальнейшие операции выпольняются только для новых документов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Документы.Scan_ЗаявкаНаСервисныеРаботы.ПервоначальноеЗаполнение(Объект);		
	
	//rarus tenkam 08.12.2017 mantis 11952 +++
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И Параметры.Свойство("МассивСтрок") Тогда
		Для Каждого ТекСтр Из Параметры.МассивСтрок Цикл
			//Если ТекСтр.Комплектующие Тогда
			//	НоваяСтрока = Объект.КомплектующиеЗаявки.Добавить();
			//	НоваяСтрока.КодНеисправнойДетали = ТекСтр.КодНеисправнойДетали;
			//	НоваяСтрока.Изделие = ТекСтр.Изделие;
			//	НоваяСтрока.Комплектующие = Справочники.Scan_КодыНеисправныхДеталей.ПолучитьЕдинственнуюКомплектующую(ТекСтр.КодНеисправнойДетали);	
			//Иначе
				НоваяСтрока = Объект.СоставЗаявки.Добавить();
				НоваяСтрока.КодНеисправнойДетали = ТекСтр.КодНеисправнойДетали;
				// rarus tenkam 23.03.2018 mantis 9428 +++ 
				НоваяСтрока.КодДефекта = ТекСтр.КодДефекта;
				НоваяСтрока.Комплектующие = ТекСтр.Комплектующие;
				НоваяСтрока.Количество = ТекСтр.Количество;
				Объект.МестоПроведенияРабот = ТекСтр.МестоОбнаружения;
				Объект.Исполнитель = ТекСтр.Контрагент;
				// rarus tenkam 23.03.2018 mantis 9428 ---
				НоваяСтрока.Изделие = ТекСтр.Изделие;
				МассивРабот = РегистрыСведений.Scan_СоответствиеКодовНеисправныхДеталейИСервисныхРабот.ПолучитьРаботыПоКоду(ТекСтр.КодНеисправнойДетали);
				Если МассивРабот.Количество() = 1 Тогда
					НоваяСтрока.Работа = МассивРабот[0];
				КонецЕсли;
				
				// rarus tenkam 23.03.2018 mantis 9428 +++
				Если  ЗначениеЗаполнено(НоваяСтрока.Работа) И НоваяСтрока.Работа = Справочники.Scan_ВидыСервисныхРабот.УстановкаТахографа Тогда
					НоваяСтрока.Тахограф = Справочники.Scan_ВидыТахографов.Штрих;
				КонецЕсли;
				НоваяСтрока.ПричинаОбращенияНаСервис = Документы.Scan_ЗаявкаНаСервисныеРаботы.ПолучитьПричинуОбращения(НоваяСтрока.Работа, НоваяСтрока.Тахограф, НоваяСтрока.КодДефекта, НоваяСтрока.КодНеисправнойДетали, , НоваяСтрока.Количество, НоваяСтрока.Комментарий);
				// rarus tenkam 23.03.2018 mantis 9428 ---
				
			//КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	//rarus tenkam 08.12.2017 mantis 11952 ---
	Scan_СборСтатистики.Scan_ПриОткрытии("Документы", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	

КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере(Отказ = Ложь)
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
	
		Элементы.МестоПроведенияРабот.ТолькоПросмотр 	= ЗначениеЗаполнено(Объект.МестоПроведенияРабот);
		Элементы.ДатаНачалаРабот.ТолькоПросмотр 		= ЗначениеЗаполнено(Объект.ДатаНачалаРабот);
	
	КонецЕсли;
	
	КоличествоИзделий = РассчитатьКоличествоИзделий(Объект.СоставЗаявки);
	
	ЭтаФорма.ТолькоПросмотр = Объект.Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Аннулирована;
	
	ИсполнительПриИзмененииНаСервере();
	
	// rarus tenkam 20.03.2018 mantis 9428 +++
	Если Объект.Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Подтверждена ИЛИ
		Объект.Статус = Справочники.Scan_СтатусыЗаявокНаРаботы.Исполнена Тогда
		
		Элементы.Исполнитель.ТолькоПросмотр = Истина;
		Элементы.Дилер.ТолькоПросмотр = Истина;
		Элементы.ПлановаяДатаВыполнения.ТолькоПросмотр = Истина;
		Элементы.ПодтвержденоИсполнителем.ТолькоПросмотр = Истина;
		Элементы.ПлановаяДатаПодтвержденнаяИсполнителем.ТолькоПросмотр = Истина;
		Элементы.МестоПроведенияРабот.ТолькоПросмотр 	= Истина;
		Элементы.ДатаНачалаРабот.ТолькоПросмотр 		= Истина;
		
	КонецЕсли;
	// rarus tenkam 20.03.2018 mantis 9428 ---
КонецПроцедуры

&НаСервереБезКонтекста
Функция РассчитатьКоличествоИзделий(Знач СоставЗаявки)
	
	Таблица = СоставЗаявки.Выгрузить(, "Изделие");
	Таблица.Свернуть("Изделие");
	
	Возврат Таблица.Количество();
	
КонецФункции

&НаКлиенте
Процедура СоставЗаявкиПриИзменении(Элемент)
	
	КоличествоИзделий = РассчитатьКоличествоИзделий(Объект.СоставЗаявки);
	
КонецПроцедуры

// Обработчик события возникающего при нажатии программно добавленной кнопки.
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Подключаемый_ОбработкаКомандыФормы(Команда) Экспорт
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект, ЭтотОбъект.Окно, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
			
КонецПроцедуры // Подключаемый_ОбработкаКомандыФормы()

// ХО ++
&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
		
КонецПроцедуры // Подключаемый_ОбработкаРезультатаОповещения()

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	//УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ОбработкаРезультатаОповещенияНаСервере()
// ХО --


// Производит настройку параметров выбора элементов управления диалога в зависимости от значений реквизитов объекта.
//
&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	Scan_УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры // НастроитьПараметрыВыбораЭлементовФормы()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	
	СообщениеОшибки = "";	
	
	ПроверкаУникальностиСтрок(Отказ, СообщениеОшибки, Объект.СоставЗаявки);
	
	Если Отказ Тогда
	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СообщениеОшибки;
		Сообщение.Сообщить();	
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверкаУникальностиСтрок(Отказ, СообщениеОшибки, Знач СоставЗаявки)

	ТаблицаСтрок = Новый ТаблицаЗначений;
	ТаблицаСтрок.Колонки.Добавить("Изделие");
	ТаблицаСтрок.Колонки.Добавить("Работа");
	ТаблицаСтрок.Колонки.Добавить("Количество");
	ТаблицаСтрок.Колонки.Добавить("Строки");
	
	Для каждого СтрокаСостава Из СоставЗаявки Цикл
	
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("Изделие", СтрокаСостава.Изделие);
		СтруктураПоиска.Вставить("Работа", СтрокаСостава.Работа);
		
		МассивСтрок = ТаблицаСтрок.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество() = 0 Тогда
		
			НоваяСтрока = ТаблицаСтрок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураПоиска);
			НоваяСтрока.Количество = 1;
			НоваяСтрока.Строки = Строка(СтрокаСостава.НомерСтроки);
			
		Иначе
			
			ПерваяСтрока = МассивСтрок.Получить(0);
			ПерваяСтрока.Количество = ПерваяСтрока.Количество + 1;
			ПерваяСтрока.Строки = ПерваяСтрока.Строки + ", " + СтрокаСостава.НомерСтроки;
		
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаСостава Из ТаблицаСтрок Цикл
	
		Если СтрокаСостава.Количество > 1 Тогда
		
			Отказ = Истина;	
			СообщениеОшибки = ?(ЗначениеЗаполнено(СообщениеОшибки)
									, СообщениеОшибки + Символы.ПС + "По изделию " + СтрокаСостава.Изделие + " работа " + СтрокаСостава.Работа + " задублирована в строках: " + СтрокаСостава.Строки 
									, СообщениеОшибки + "По изделию " + СтрокаСостава.Изделие + " работа " + СтрокаСостава.Работа + " задублирована в строках: " + СтрокаСостава.Строки);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события возникающего на сервере при сохранении значений реквизитов и настроек формы.
//
// Параметры:
//  Настройки - Соответствие - Значения сохраняемых реквизитов и настроек формы.
//
&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	// Вызываем общий обработчик события
	Scan_УправлениеДиалогомДокументаСервер.ПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

// Обработчик события возникающего на сервере при восстановлении значений реквизитов из сохраненных настроек формы.
//
// Параметры:
//  Настройки - Соответствие - Значения сохраненных реквизитов и настроек формы.
//
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	// Вызываем общий обработчик события
	Scan_УправлениеДиалогомДокументаСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);

КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьЗаказНаряд(Команда)
	
	Документ = Объект.Ссылка;
	// rarus tenkam 10.04.2019 mantis 14195 +++
	
	//ВыбранныеФайлы = Новый Массив;
	//
	//ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	//ВыборФайла.МножественныйВыбор = Истина;
	//ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла'");
	//ВыборФайла.Фильтр = НСтр("ru = 'Все файлы'") + " (*.*)|*.*";
	//Если ВыборФайла.Выбрать() Тогда
	//	ВыбранныеФайлы = ВыборФайла.ВыбранныеФайлы;
	//КонецЕсли;
	//
	//Если ВыбранныеФайлы.Количество() <> 0 Тогда
	//	ДопПараметры = Новый Структура;
	//	ДопПараметры.Вставить("ИдентификаторФормы", ЭтаФорма.УникальныйИдентификатор);
	//	ДопПараметры.Вставить("НеОткрыватьКарточкуПослеСозданияИзФайла", Истина);
	//	ДопПараметры.Вставить("ВыбранныеФайлы", ВыбранныеФайлы);
	//	ДопПараметры.Вставить("ВладелецФайла", Документ);
	//	
	//	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыРасширениеПредложено", ПрисоединенныеФайлыСлужебныйКлиент, ДопПараметры);
	//	ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);	
	//
	//	ПараметрыФормы = Новый Структура;
	//	ПараметрыФормы.Вставить("ВладелецФайла",  Документ);
	//	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	//	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", ПараметрыФормы, ЭтаФорма, Истина, ЭтаФорма.Окно);
	//КонецЕсли;
	
	РаботаСФайламиКлиент.ДобавитьФайлы(Документ, ЭтаФорма.УникальныйИдентификатор, , );
	
	// rarus tenkam 10.04.2019 mantis 14195 ---

	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаявкаНаСервисныеРаботыАннулирована"
		Или ИмяСобытия = "УстановленНовыйВнутреннийНомер" Тогда
	
		ЭтотОбъект.Прочитать();
       
	КонецЕсли;
	
КонецПроцедуры

//Функция ПолучитьПродуктПоИзделию(Изделие)
//	Возврат РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(Изделие);	
//КонецФункции

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	ДействияФлажки(Истина);	
		
КонецПроцедуры

&НаКлиенте
Функция ДействияФлажки(Флаг)

   Для Каждого СтрокаТЗ Из Объект.СоставЗаявки Цикл
	
		СтрокаТЗ.Флаг = Флаг;
	   
	КонецЦикла;
	
	////rarus tenkam 11.12.2017 mantis 11952 +++
	//Для Каждого СтрокаТЗ Из Объект.КомплектующиеЗаявки Цикл
	//	
	//	СтрокаТЗ.Флаг = Флаг;
	//	
	//КонецЦикла;
	////rarus tenkam 11.12.2017 mantis 11952 ---

КонецФункции

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	ДействияФлажки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура АннулироватьДокумент(Команда)
	
	Документ = Объект.Ссылка;
	
	Если ЗначениеЗаполнено(Документ) Тогда
	
		ПоказатьВопрос(Новый ОписаниеОповещения("ПоказатьВопросЗавершение", ЭтотОбъект, Документ), "Вы уверены что требуется аннулирование документа " + Документ + "?", РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт 

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
	
		Ссылка = АннулироватьДокументСервер(ДополнительныеПараметры);
		
		Оповестить("ЗаявкаНаСервисныеРаботыАннулирована", Ссылка);
	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция АннулироватьДокументСервер(ДополнительныеПараметры)
	
	Возврат Документы.Scan_ЗаявкаНаСервисныеРаботы.АннулироватьДокумент(ДополнительныеПараметры);	

КонецФункции
//rarus kolg 20.11.2017 TLMS 9428 --

//rarus tenkam 11.12.2017 mantis 11952 +++

//&НаКлиенте
//Процедура КомплектующиеЗаявкиКодНеисправнойДеталиПриИзменении(Элемент)
//	
//	ТекКодНеисправнойДетали = Элементы.КомплектующиеЗаявки.ТекущиеДанные.КодНеисправнойДетали;
//	Если ЗначениеЗаполнено(ТекКодНеисправнойДетали) Тогда
//		Комплектующие =	ПолучитьЕдинственнуюКомплектующую(ТекКодНеисправнойДетали);
//		Если ЗначениеЗаполнено(Комплектующие) Тогда
//			Элементы.КомплектующиеЗаявки.ТекущиеДанные.Комплектующие = Комплектующие;
//		КонецЕсли;
//	КонецЕсли;

//КонецПроцедуры

//&НаКлиенте
//Процедура ЗаполнитьИзБуфераОбменаКомплектующие(Команда)
//	ДопПараметры = Новый Структура("ИмяТЧ", "КомплектующиеЗаявки");
//	ОткрытьФорму("ОбщаяФорма.Scan_ФормаИмпорта",,ЭтаФорма,,,,Новый ОписаниеОповещения("ЗаполнитьИзБуфераЗавершение", ЭтотОбъект, ДопПараметры), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРаботыПоКоду(ТекКодНеисправнойДетали)
	Возврат РегистрыСведений.Scan_СоответствиеКодовНеисправныхДеталейИСервисныхРабот.ПолучитьРаботыПоКоду(ТекКодНеисправнойДетали);
КонецФункции

&НаКлиенте
Процедура СоставЗаявкиКодНеисправнойДеталиПриИзменении(Элемент)
	ТекКодНеисправнойДетали = Элементы.СоставЗаявки.ТекущиеДанные.КодНеисправнойДетали;
	Если ЗначениеЗаполнено(ТекКодНеисправнойДетали) Тогда
		МассивРабот = ПолучитьРаботыПоКоду(ТекКодНеисправнойДетали);
		Если МассивРабот.Количество() = 1 Тогда
			Элементы.СоставЗаявки.ТекущиеДанные.Работа = МассивРабот[0];
		КонецЕсли;
	КонецЕсли;
	ТекСтрока = Элементы.СоставЗаявки.ТекущиеДанные;
	ТекСтрока.ПричинаОбращенияНаСервис = СоставЗаявкиПараметрПриИзмененииНаСервере(ТекСтрока.Работа, ТекСтрока.Тахограф, ТекСтрока.КодДефекта, ТекСтрока.КодНеисправнойДетали, ТекСтрока.Комплектующие,ТекСтрока.Количество, ТекСтрока.Комментарий);
КонецПроцедуры
//rarus tenkam 11.12.2017 mantis 11952 ---

// rarus tenkam 16.02.2018 mantis 9428 +++
&НаСервере
Процедура ДилерПриИзмененииНаСервере()
	ТекИсполнитель = Объект.Исполнитель;
	//rarus bonmak 15.04.2020 14456 ++
	//Если ТекИсполнитель <> Объект.Дилер.Контрагент Тогда
	//	Объект.Исполнитель = Объект.Дилер.Контрагент;
	//КонецЕсли;
	ЗначениеВладельца = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Объект.Дилер);
	Если ТекИсполнитель <> ЗначениеВладельца Тогда
		Объект.Исполнитель = ЗначениеВладельца;
	КонецЕсли;
	//rarus bonmak 15.04.2020 14456 --
	ИсполнительПриИзмененииНаСервере()
КонецПроцедуры

&НаКлиенте
Процедура ДилерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Дилер) Тогда
		ДилерПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте                                                                                                
Процедура ИсполнительПриИзменении(Элемент)
	ИсполнительПриИзмененииНаСервере();                    	
КонецПроцедуры

&НаСервере
Процедура ИсполнительПриИзмененииНаСервере()
	НовыйМассив = Новый Массив();
	Если ЗначениеЗаполнено(Объект.Исполнитель) Тогда
		
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Контрагент", "Объект.Исполнитель");
		НовыйМассив.Добавить(НоваяСвязь);
	КонецЕсли;
	Элементы.Дилер.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыйМассив);
КонецПроцедуры
// rarus tenkam 16.02.2018 mantis 9428 ---

// rarus tenkam 20.03.2018 mantis 9428 +++
&НаКлиенте
Процедура ПлановаяДатаПодтвержденнаяИсполнителемПриИзменении(Элемент)
	Объект.ПодтвержденоИсполнителем = ЗначениеЗаполнено(Объект.ПлановаяДатаПодтвержденнаяИсполнителем);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УправлениеДиалогомНаСервере();
КонецПроцедуры

&НаСервере
Функция СоставЗаявкиПараметрПриИзмененииНаСервере(ВидРабот, Тахограф, КодДефекта, КодНеисправнойДетали, Комплетующие, Количество, Комментарий)
	Возврат Документы.Scan_ЗаявкаНаСервисныеРаботы.ПолучитьПричинуОбращения(ВидРабот, Тахограф, КодДефекта, КодНеисправнойДетали, Комплетующие.НомерПоКаталогу, Количество, Комментарий);	
КонецФункции

&НаКлиенте
Процедура СоставЗаявкиПараметрПриИзменении(Элемент)
	ТекСтрока = Элементы.СоставЗаявки.ТекущиеДанные;
	ТекСтрока.ПричинаОбращенияНаСервис = СоставЗаявкиПараметрПриИзмененииНаСервере(ТекСтрока.Работа, ТекСтрока.Тахограф, ТекСтрока.КодДефекта, ТекСтрока.КодНеисправнойДетали, ТекСтрока.Комплектующие,ТекСтрока.Количество, ТекСтрока.Комментарий);
КонецПроцедуры

&НаКлиенте
Процедура СоставЗаявкиПриАктивизацииЯчейки(Элемент)
	Элемент.ТекущийЭлемент.ТолькоПросмотр =
		Элемент.ТекущийЭлемент.Имя = "СоставЗаявкиТахограф"
			И Элемент.ТекущиеДанные.Работа <> ПредопределенноеЗначение("Справочник.Scan_ВидыСервисныхРабот.УстановкаТахографа");

КонецПроцедуры

&НаКлиенте
Процедура СоставЗаявкиРаботаПриИзменении(Элемент)
	Если Элементы.СоставЗаявки.ТекущиеДанные.Работа = ПредопределенноеЗначение("Справочник.Scan_ВидыСервисныхРабот.УстановкаТахографа") Тогда
		Элементы.СоставЗаявки.ТекущиеДанные.Тахограф = ПредопределенноеЗначение("Справочник.Scan_ВидыТахографов.Штрих");
	КонецЕсли;
	СоставЗаявкиПараметрПриИзменении(Элемент);
	
КонецПроцедуры
// rarus tenkam 20.03.2018 mantis 9428 ---

//rarus vikhle 15.04.2021 mt 17484 +++
&НаКлиенте
Процедура ДилерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДилерОбработкаВыбораПродолжение",ЭтотОбъект,ВыбранноеЗначение);
	Scan_ВспомогательныеФункцииКлиент.ПроверитьАктивностьВыбраннойКомпании(ВыбранноеЗначение,ОписаниеОповещения,СтандартнаяОбработка,Ложь);
	
КонецПроцедуры
//rarus vikhle 15.04.2021 mt 17484 ---

//rarus vikhle 15.04.2021 mt 17484 +++
&НаКлиенте
Процедура ДилерОбработкаВыбораПродолжение(Результат, ВыбраннаяКомпания) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Дилер = ВыбраннаяКомпания;
	Иначе
		Объект.Дилер = Неопределено;	
	КонецЕсли;
	
	ДилерПриИзменении(Элементы.Дилер);
	
КонецПроцедуры
//rarus vikhle 15.04.2021 mt 17484 ---


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюДокумента(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
КонецПроцедуры

#КонецОбласти
