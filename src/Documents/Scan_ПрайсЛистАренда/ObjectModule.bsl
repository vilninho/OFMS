#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает признак корректности тч ШкалаПробегаАренды и ШкалаСрокаАренды  
// 
// Возвращаемое значение:
// Булево  - Возвращает Истина, если в табличных частях нет дублей, пустых строк и некорретных диапазонов
//
Функция ТЧШкалКорректны() Экспорт
	
	ТЧШкалКорректны	= Истина;
		
	ЕстьДубли					= ЕстьДублиВТаблицахШкал();
	ЕстьПустыеСтроки			= ЕстьПустыеСтрокиВТаблицахШкал();
	ЕстьНекорректныеДиапазоны	= ЕстьНекорректныеДиапазоны(); 
			
	Если ЕстьДубли
		ИЛИ ЕстьПустыеСтроки
		ИЛИ ЕстьНекорректныеДиапазоны Тогда
		ТЧШкалКорректны = Ложь;
	КонецЕсли;	
	
	Возврат ТЧШкалКорректны;
	
КонецФункции

#КонецОбласти
	
#Область ОбработчикиСобытий
//rarus vikhle 16.11.2021 m 18340 +++
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДатаВступленияВСилу = ТекущаяДатаСеанса();
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДатаВступленияВСилу = ТекущаяДатаСеанса();
	НомерПрайсЛиста		= 0;
	НеАктуален 			= Ложь;
	Модель				= Неопределено;
	Продукт				= Неопределено;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Проверка, что ТЧ ШкалаПробегаАренды и ШкалаСрокаАренды заполнены без ошибок 
	Если НЕ ТЧШкалКорректны() Тогда
		Отказ = Истина;
		ВывестиСообщениеПол(Нстр("ru = 'Некорректно заполнены шкалы пробега и срока'"));
		Возврат;
	КонецЕсли;	
	
	// Проверка, что данные по пробегу и срокам в ТЧ ЦеныНаАренду совпадают с данными в ТЧ ШкалаПробегаАренды и ШкалаСрокаАренды   
	Если ЦеныНаАренду.Количество() > 0 Тогда
		МассивРезультатовКомбинаций = Документы.Scan_ПрайсЛистАренда.КомбинацииШкал(ЭтотОбъект);
		
		РезультатНекорректныхДанных	= МассивРезультатовКомбинаций[7]; 
		ТаблицыКорректны			= РезультатНекорректныхДанных.Пустой();
		Если НЕ ТаблицыКорректны Тогда
			ВывестиСообщениеПол(Нстр("ru = 'Данные табличных частей не совпадают.
									|Необходимо скорректировать табличные части, перезаполнить показатели шкалы или перезаполнить табличную часть ""Цены на аренду"".'"));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НомерПрайсЛиста = 0 Тогда
		Блокировка					= Новый БлокировкаДанных;
		ЭлементБлокировки			= Блокировка.Добавить();
		ЭлементБлокировки.Область	= "Документ.Scan_ПрайсЛистАренда";
		ЭлементБлокировки.Режим		= РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		НомерПрайсЛиста = Документы.Scan_ПрайсЛистАренда.МаксимальныйНомерПрайсЛиста(ХозОперация) + 1;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ХозОперация = Справочники.Scan_ХозяйственныеОперации.StdПрайсЛистНаАренду Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Продукт");	
		МассивНепроверяемыхРеквизитов.Добавить("КонечныйКлиент");
	ИначеЕсли ХозОперация = Справочники.Scan_ХозяйственныеОперации.UOПрайсЛистНаАренду Тогда 	
		МассивНепроверяемыхРеквизитов.Добавить("Модель");	
	КонецЕсли;	
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		 
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Scan_ЦеныНаАренду.Записывать = Истина;
	
	Если НЕ НеАктуален Тогда
		
		Для Каждого СтрокаТЧ Из ЦеныНаАренду Цикл
			
			Движение = Движения.Scan_ЦеныНаАренду.Добавить();
			
			Движение.Период			= ДатаВступленияВСилу;
			Движение.ПробегОт		= СтрокаТЧ.ПробегОт;
			Движение.ПробегДо		= СтрокаТЧ.ПробегДо;
			Движение.СрокОт			= СтрокаТЧ.СрокОт;
			Движение.СрокДо			= СтрокаТЧ.СрокДо;
			Движение.Модель			= Модель;
			Движение.Продукт		= Продукт;
			Движение.КонечныйКлиент = КонечныйКлиент;
			Движение.ЦенаСНДС		= СтрокаТЧ.Цена;
			Движение.Пользователь	= Пользователи.ТекущийПользователь();
			
		КонецЦикла;
		
		ПрайсЛистыКОтмене = Документы.Scan_ПрайсЛистАренда.ПрайсЛистыКОтмене(Ссылка);	
		Для Каждого ПрайсЛист Из ПрайсЛистыКОтмене Цикл
			ПрайсЛистОбъект = ПрайсЛист.ПолучитьОбъект();
			ПрайсЛистОбъект.НеАктуален = Истина;
			Попытка
				ПрайсЛистОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				ВывестиСообщениеПол(Нстр("ru = 'Произошла ошибка при установке признака ""Не актуален"" в документе %1 по причине: %2'"),,,,, 
									ПрайсЛист, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Установка признака ""Не актуален"" в документе ""Прайс-лист аренда""'", ОбщегоНазначения.КодОсновногоЯзыка()),
	       								УровеньЖурналаРегистрации.Ошибка,,,
	       								ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));					
				ВызватьИсключение;						
			КонецПопытки;	
				
		КонецЦикла;	
	
	КонецЕсли; 	
	
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьДублиВТаблицахШкал() 
	
	ЕстьДублиВТЧШкал		= Ложь;
	ШкалаПробегаАрендыТЗ	= ШкалаПробегаАренды.Выгрузить(); 
	ШкалаСрокаАрендыТЗ		= ШкалаСрокаАренды.Выгрузить();
	
	// rarus vikhle 20.12.2021 m 18340 +++
	//СгруппированнаяТЗ = ШкалаПробегаАрендыТЗ.Скопировать();
	//СгруппированнаяТЗ.Свернуть("ПорядокОтображения");
	//Если СгруппированнаяТЗ.Количество() <> ШкалаПробегаАренды.Количество() Тогда   
	//	ЕстьДублиВТЧШкал = Истина;
	//	ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала пробега аренды"" есть строки с совпадающим порядком отображения.'"),, "Объект.ШкалаПробегаАренды");
	//КонецЕсли;
	//
	//СгруппированнаяТЗ = ШкалаСрокаАрендыТЗ.Скопировать();
	//СгруппированнаяТЗ.Свернуть("ПорядокОтображения");
	//Если СгруппированнаяТЗ.Количество() <> ШкалаСрокаАренды.Количество() Тогда   
	//	ЕстьДублиВТЧШкал = Истина;
	//	ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала срока аренды"" есть строки с совпадающим порядком отображения.'"),, "Объект.ШкалаСрокаАренды");
	//КонецЕсли;
	// rarus vikhle 20.12.2021 m 18340 ---
	
	СгруппированнаяТЗ = ШкалаПробегаАрендыТЗ.Скопировать();
	СгруппированнаяТЗ.Свернуть("ПробегОт, ПробегДо");
	Если СгруппированнаяТЗ.Количество() <> ШкалаПробегаАренды.Количество() Тогда   
		ЕстьДублиВТЧШкал = Истина;
		ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала пробега аренды"" есть строки с совпадающим диапазоном пробега.'"),, "Объект.ШкалаПробегаАренды");
	КонецЕсли;	
	
	СгруппированнаяТЗ = ШкалаСрокаАрендыТЗ.Скопировать();
	СгруппированнаяТЗ.Свернуть("СрокОт, СрокДо");
	Если СгруппированнаяТЗ.Количество() <> ШкалаСрокаАренды.Количество() Тогда   
		ЕстьДублиВТЧШкал = Истина;
		ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала срока аренды"" есть строки с совпадающим диапазоном срока аренды.'"),, "Объект.ШкалаСрокаАренды");
	КонецЕсли;	
	
	Возврат ЕстьДублиВТЧШкал;
	
КонецФункции	

Функция ЕстьПустыеСтрокиВТаблицахШкал()
	
	ЕстьПустыеСтрокиВТаблицахШкал = Ложь;
	
	Отбор = Новый Структура("ПробегОт, ПробегДо", 0, 0);
	ПустыеСтроки = ШкалаПробегаАренды.НайтиСтроки(Отбор);
	Если ПустыеСтроки.Количество() > 0 Тогда
		
		ЕстьПустыеСтрокиВТаблицахШкал = Истина; 		
		Если ПустыеСтроки.Количество() = 1 Тогда
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.ШкалаПробегаАренды", ПустыеСтроки[0].НомерСтроки, "ПробегОт");
			ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала пробега аренды"" в строке № %1 не заполнен диапазон пробега.'"),, 
								Поле,,, 
								ПустыеСтроки[0].НомерСтроки);
		Иначе
			МассивНомеровСтрок = Новый Массив;
			Для Каждого ПустаяСтрока Из ПустыеСтроки Цикл
				МассивНомеровСтрок.Добавить(ПустаяСтрока.НомерСтроки);
			КонецЦикла;
			
			ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала пробега аренды"" в строках № %1 не заполнен диапазон пробега.'"),, 
								"Объект.ШкалаПробегаАренды",,, 
								СтрСоединить(МассивНомеровСтрок, ", "));	
		КонецЕсли;
		
	КонецЕсли;	
	
	Отбор = Новый Структура("СрокОт, СрокДо", 0, 0);
	ПустыеСтроки = ШкалаСрокаАренды.НайтиСтроки(Отбор);
	Если ПустыеСтроки.Количество() > 0 Тогда
						
		ЕстьПустыеСтрокиВТаблицахШкал = Истина; 		
		
		Если ПустыеСтроки.Количество() = 1 Тогда
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.ШкалаСрокаАренды", ПустыеСтроки[0].НомерСтроки, "СрокОт");
			ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала срока аренды"" в строке № %1 не заполнен диапазон пробега.'"),, 
								Поле,,, 
								ПустыеСтроки[0].НомерСтроки);
		Иначе
			МассивНомеровСтрок = Новый Массив;
			Для Каждого ПустаяСтрока Из ПустыеСтроки Цикл
				МассивНомеровСтрок.Добавить(ПустаяСтрока.НомерСтроки);
			КонецЦикла;
			
			ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала срока аренды"" в строках № %1 не заполнен диапазон пробега.'"),, 
								"Объект.ШкалаСрокаАренды",,, 
								СтрСоединить(МассивНомеровСтрок, ", "));	
		КонецЕсли;

	КонецЕсли;
	
	Возврат ЕстьПустыеСтрокиВТаблицахШкал;
	
КонецФункции	

Функция ЕстьНекорректныеДиапазоны()
	
	ЕстьНекорректныеДиапазоны = Ложь;
	
	Для Каждого СтрокаТЧ Из ШкалаПробегаАренды Цикл
		
		Если СтрокаТЧ.ПробегОт > СтрокаТЧ.ПробегДо Тогда
			
			ЕстьНекорректныеДиапазоны = Истина;	
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.ШкалаПробегаАренды", СтрокаТЧ.НомерСтроки, "ПробегОт");
			ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала пробега аренды"" в строке № %1 начальный интервал больше конечного.'"),, 
								Поле,,, 
								СтрокаТЧ.НомерСтроки);
					
		КонецЕсли;
		
	КонецЦикла;	
	
	Для Каждого СтрокаТЧ Из ШкалаСрокаАренды Цикл
		
		Если СтрокаТЧ.СрокОт > СтрокаТЧ.СрокДо Тогда
			
			ЕстьНекорректныеДиапазоны = Истина;	
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.ШкалаСрокаАренды", СтрокаТЧ.НомерСтроки, "СрокОт");
			ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала срока аренды"" в строке № %1 начальный интервал больше конечного.'"),, 
								Поле,,, 
								СтрокаТЧ.НомерСтроки);
					
		КонецЕсли;
		
		Если СтрокаТЧ.СрокОт = 0 Тогда
			
			ЕстьНекорректныеДиапазоны = Истина;	
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.ШкалаСрокаАренды", СтрокаТЧ.НомерСтроки, "СрокОт");
			ВывестиСообщениеПол(Нстр("ru = 'В табличной части ""Шкала срока аренды"" в строке № %1 не заполнен начальный интервал.'"),, 
								Поле,,, 
								СтрокаТЧ.НомерСтроки);
					
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЕстьНекорректныеДиапазоны;
	
КонецФункции

#КонецОбласти 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
//rarus vikhle 16.11.2021 m 18340 ---