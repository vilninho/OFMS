
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	МассивМесяцев = ДОкументы.Scan_УстановкаПланаПоOrderIntake.ПолучитьМассивПоказателей();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КалендарныеГрафики.ДатаГрафика КАК ДатаГрафика,
		|	МЕСЯЦ(КалендарныеГрафики.ДатаГрафика) КАК Месяц
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|ГДЕ
		|	КалендарныеГрафики.Год = &Год
		|	И КалендарныеГрафики.ДеньВключенВГрафик = ИСТИНА";
	
	Запрос.УстановитьПараметр("Год", ЭтотОбъект.ГодПланирования);
	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	НаборЗаписей = движения.Scan_ПланПоOrderIntake;
	
	Для ИндексМесяца = 0 по 11 Цикл
		
		ПараметрыОтбора = Новый Структура ("Месяц", ИндексМесяца + 1);
		ТаблицаМесяца = РезультатЗапроса.Скопировать(ПараметрыОтбора, "ДатаГрафика");
		
		СуммаКРаспределению = ЭтотОбъект[МассивМесяцев[ИндексМесяца]];
		КоличествоДнейРаспределения = ТаблицаМесяца.Количество();
		Если КоличествоДнейРаспределения = 0 ТОгда
			отказ = истина;
			ВывестиСообщениеПол(Нстр("ru = 'Нет календарного графика на %1 месяц'; en = 'Тo calendar for a %1 month'"),,,,,ИндексМесяца+1);
			продолжить;
		КонецЕсли;
		Если  СуммаКРаспределению = 0 Тогда
			продолжить;	
		КонецЕсли; 
		КоличествоНаДень = цел(СуммаКРаспределению / КоличествоДнейРаспределения);
		НераспределенныйОстаток = СуммаКРаспределению % КоличествоДнейРаспределения;
		
		// Может оказаться один из вариантов:
		// 1. На все дни не хватает целых показателей - распределить по 1 до тех пор пока хватает 
		// 2. На все дни хватает, делится кратно количеству дней, распределить поровну.
		// 3. На все дни хватает, не делится кратно. Распределить полностью по целому остатку, 
		// остальное по очереди дораспределить на нужные дни, начиная с первого.
		
		СуммаДляЗаписи = 0; // накопитель для записей
		
		Если КоличествоНаДень < 1 Тогда
			// вариант 1
			Для ИндексДня = 0  по СуммаКРаспределению - 1 Цикл
				
				СуммаДляЗаписи = СуммаДляЗаписи + 1; 
				НоваяЗапись = НаборЗаписей.Добавить();	
				НоваяЗапись.ДатаРабочегоДня = ТаблицаМесяца[ИндексДня].ДатаГрафика;
				НоваяЗапись.КоличествоПлан = СуммаДляЗаписи;
				НоваяЗапись.ПланМесяц = СуммаКРаспределению;
				НоваяЗапись.ПланГод = ЭтотОбъект.ИтогоЗаГод;
				НоваяЗапись.Пользователь = ЭтотОбъект.Менеджер;
				НоваяЗапись.ХозОперация = ЭтотОбъект.ХозОперация;
				НоваяЗапись.Период = ЭтотОбъект.Дата;
				НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			КонецЦикла;
		ИначеЕсли НераспределенныйОстаток = 0 Тогда
			// вариант 2
			Для ИндексДня = 0  по КоличествоДнейРаспределения - 1 Цикл
				
				СуммаДляЗаписи = СуммаДляЗаписи + КоличествоНаДень; 
				НоваяЗапись = НаборЗаписей.Добавить();	
				НоваяЗапись.ДатаРабочегоДня = ТаблицаМесяца[ИндексДня].ДатаГрафика;
				НоваяЗапись.КоличествоПлан = СуммаДляЗаписи;
				НоваяЗапись.ПланМесяц = СуммаКРаспределению;
				НоваяЗапись.ПланГод = ЭтотОбъект.ИтогоЗаГод;
				НоваяЗапись.Пользователь = ЭтотОбъект.Менеджер;
				НоваяЗапись.ХозОперация = ЭтотОбъект.ХозОперация;
				НоваяЗапись.Период = ЭтотОбъект.Дата;
				НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			КонецЦикла;
		Иначе
			// вариант 3
			Для ИндексДня = 0  по КоличествоДнейРаспределения - 1 Цикл
				
				СуммаДляЗаписи = СуммаДляЗаписи + КоличествоНаДень; 
				Если ИндексДня <= НераспределенныйОстаток -1 ТОгда 
					СуммаДляЗаписи = СуммаДляЗаписи + 1;
				КонецЕсли;
				НоваяЗапись = НаборЗаписей.Добавить();	
				НоваяЗапись.ДатаРабочегоДня = ТаблицаМесяца[ИндексДня].ДатаГрафика;
				НоваяЗапись.КоличествоПлан = СуммаДляЗаписи;
				НоваяЗапись.ПланМесяц = СуммаКРаспределению;
				НоваяЗапись.ПланГод = ЭтотОбъект.ИтогоЗаГод;
				НоваяЗапись.Пользователь = ЭтотОбъект.Менеджер;
				НоваяЗапись.ХозОперация = ЭтотОбъект.ХозОперация;
				НоваяЗапись.Период = ЭтотОбъект.Дата;
				НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Scan_УстановкаПланаПоOrderIntake") Тогда
		
		// проверить что у документа основания нет других подчиненных документов  
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Scan_УстановкаПланаПоOrderIntake.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.Scan_УстановкаПланаПоOrderIntake КАК Scan_УстановкаПланаПоOrderIntake
			|ГДЕ
			|	Scan_УстановкаПланаПоOrderIntake.ДокументОснование = &ДокументОснование";
		
		Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ВызватьИсключение нстр("ru = 'На основании этого документа уже создана корректировка плана!'; en = 'Based on this document, an adjustment plan has already been created!'");
		КонецЕсли; 	
		
		// Заполнение шапки		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения,,"Дата, Автор, ДатаСоздания, ДатаПроведения,Номер");
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.КорректировкаПланаПоOI;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
	Иначе
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.УстановкаПланаПоOI;
	КонецЕсли;

КонецПроцедуры
