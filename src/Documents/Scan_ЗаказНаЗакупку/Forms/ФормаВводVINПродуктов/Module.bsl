
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("МассивПрицепов") Тогда
		Для Каждого ТекСтрока Из Параметры.МассивПрицепов Цикл
			НоваяСтрока = ТаблицаПродуктов.Добавить();
			НоваяСтрока.Продукт = ТекСтрока.Продукт;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаказНаЗакупку") Тогда
		ЗаказНаЗакупку = Параметры.ЗаказНаЗакупку;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Распределить(Команда)
	
	Если СокрЛП(VINНомера) = "" Тогда
		Сообщить(НСтр("ru = 'Вставьте VIN номера продуктов, которые нужно распределить!'; en = 'Insert VIN, you need to download!'"));
		Возврат;
	КонецЕсли;
	
	МассивНомеров = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(VINНомера, Символы.ПС, Истина, Истина);
	
	Если МассивНомеров.Количество() <> ТаблицаПродуктов.Количество() Тогда
		Сообщить(НСтр("ru = 'Количество указанных VIN не совпадает с количеством продуктов!'; en = 'Wrong quantity of VIN!'"));
		Возврат;	
	КонецЕсли; 	
	
	ВсеОк = РаспределитьНаСервере(МассивНомеров);
	Сообщить(НСтр("ru = 'Завершено распределение VIN!'; en = 'VIN numbers downloaded!'"));
	
	Если ВсеОк Тогда
		// Обновим данные в 1БД - зарегистрируем в очередь
		ОтправитьИзмененныеДанныеВ1БД();			
		// Обновим данные в 1С:ДО
		ОбновитьЗаказНаЗакупкуВДО();		
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТаблицаПродуктов Цикл
		ОповеститьОбИзменении(ТекСтрока.Продукт);
	КонецЦикла;
	ОповеститьОбИзменении(ЗаказНаЗакупку);
	
КонецПроцедуры

&НаСервере
Функция РаспределитьНаСервере(МассивНомеров)
	
	ЕстьОшибки = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_Изделия.Ссылка КАК Ссылка,
	|	Scan_Изделия.VIN2 КАК VIN2,
	|	Scan_Изделия.VIN КАК VIN,
	|	Scan_Изделия.НомерИзделия КАК НомерИзделия,
	|	Scan_Изделия.Код КАК Код,
	|	Scan_Изделия.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Scan_Изделия КАК Scan_Изделия
	|ГДЕ
	|	Scan_Изделия.Ссылка В(&МассивПродуктов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	Запрос.УстановитьПараметр("МассивПродуктов", ТаблицаПродуктов.Выгрузить().ВыгрузитьКолонку("Продукт"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Сч = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НомерVIN = МассивНомеров[Сч];
		НомерПродукта = Прав(НомерVIN,9);
		
		ПродуктОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.VIN2) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'У продукта %1 с кодом <%2> заменен VIN. Старое значение: %3. Новое значение: %4'"),,,,, 
				ВыборкаДетальныеЗаписи.Наименование, ВыборкаДетальныеЗаписи.Код, ВыборкаДетальныеЗаписи.VIN2, НомерVIN);
		КонецЕсли;
		ПродуктОбъект.VIN2 = НомерVIN;
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.VIN) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'У продукта %1 с кодом <%2> заменен № шасси. Старое значение: %3. Новое значение: %4'"),,,,, 
				ВыборкаДетальныеЗаписи.Наименование, ВыборкаДетальныеЗаписи.Код, ВыборкаДетальныеЗаписи.VIN, НомерVIN);
		КонецЕсли;
		ПродуктОбъект.VIN = НомерVIN;
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.НомерИзделия) Тогда
			ВывестиСообщениеПол(НСтр("ru = 'У продукта %1 с кодом <%2> заменен № продукта. Старое значение: %3. Новое значение: %4'"),,,,, 
				ВыборкаДетальныеЗаписи.Наименование, ВыборкаДетальныеЗаписи.Код, ВыборкаДетальныеЗаписи.НомерИзделия, НомерПродукта);
		КонецЕсли;
		ПродуктОбъект.НомерИзделия = НомерПродукта;
		
		СформированноеНаименование = Справочники.Scan_Изделия.СформироватьНаименованиеПоНастройке(ПродуктОбъект);
		Если СформированноеНаименование <> "" Тогда
			ПродуктОбъект.Наименование = СформированноеНаименование;
		КонецЕсли;
		
		ПродуктОбъект.Заблокировать(); 
		Попытка
			ПродуктОбъект.Записать();
			Сч = Сч + 1;
		Исключение
			ЕстьОшибки = Истина;
			ВывестиСообщениеПол(НСтр("ru = 'Ошибка записи продукта с кодом <%1>: %2'"),,,,, ВыборкаДетальныеЗаписи.Код, ОписаниеОшибки()); 		
		КонецПопытки;   	
	КонецЦикла;  
	
	Возврат НЕ ЕстьОшибки;
	
КонецФункции


#Область ОбработчикиСобытийФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьЗаказНаЗакупкуВДО()
	Если ЗаказНаЗакупку.ДОНомерЗаказаНаЗакупку = "" Тогда
		// Раньше не отправляли в 1С:ДО
		Возврат;	
	КонецЕсли;
	
	Отказ = Ложь;
	Ответственный = ПолучитьПользователяОСНаСервере(Пользователи.АвторизованныйПользователь());
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Сообщить(НСтр("ru = 'Ошибка получения данных пользователя! Заказ на закупку не отправлен.'; en = 'Failed to get the data of the author! The purchase order has not been sent.'"));
		Возврат;
	КонецЕсли;
	
	ПродуктыКЗаказу = Новый ТаблицаЗначений;
	ПродуктыКЗаказу.Колонки.Добавить("ИдентификаторПродукта");
	ПродуктыКЗаказу.Колонки.Добавить("Наименование");
	ПродуктыКЗаказу.Колонки.Добавить("ТипПродукта");
	ПродуктыКЗаказу.Колонки.Добавить("ДатаПоставки");
	ПродуктыКЗаказу.Колонки.Добавить("Количество");
	ПродуктыКЗаказу.Колонки.Добавить("Цена");
	ПродуктыКЗаказу.Колонки.Добавить("КодВалюты");
	ПродуктыКЗаказу.Колонки.Добавить("СтавкаНДС");
	ПродуктыКЗаказу.Колонки.Добавить("КомментарийДляПоставщика");
	ПродуктыКЗаказу.Колонки.Добавить("КомментарийВнутренний");
	
	ЕстьОшибки = Ложь;
	
	Для Каждого СтрокаПродуктов Из ЗаказНаЗакупку.ПродуктыКЗаказу Цикл
		Если СтрокаПродуктов.Продукт.Пустая() Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'В строке № %1 не заполнен продукт.'; en = 'Line # %1 is not filled with product.'"),
			         СтрокаПродуктов.НомерСтроки));
			ЕстьОшибки = Истина;
		КонецЕсли;
		Если Не СтрокаПродуктов.Продукт.Пустая() 
			И ПустаяСтрока(СтрокаПродуктов.Продукт.IDExternalSystemProduct) 
			Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'У продукта %1 не заполнен идентификатор продукта.'; en = 'Product %1 has an empty ID External System Product.'"),
			         СтрокаПродуктов.Продукт.Наименование));
			ЕстьОшибки = Истина;
		КонецЕсли;
		Если Не СтрокаПродуктов.Продукт.Пустая() 
			И ПустаяСтрока(СтрокаПродуктов.Продукт.НомерИзделия) 
			Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'У продукта %1 не заполнен номер продукта.'; en = 'Product %1 has an empty product number.'"),
			         СтрокаПродуктов.Продукт.Наименование));
			ЕстьОшибки = Истина;
		КонецЕсли;
		Если Не СтрокаПродуктов.Продукт.Пустая() 
			И СтрокаПродуктов.Продукт.ТипПродукта.Пустая() 
			Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'У продукта %1 не заполнен тип продукта.'; en = 'Product %1 has an empty product type.'"),
			         СтрокаПродуктов.Продукт.Наименование));
			ЕстьОшибки = Истина;
		КонецЕсли;
		Если СтрокаПродуктов.ДатаПоставки = Дата(1,1,1) Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'В строке № %1 не заполнена дата поставки.'; en = 'Line # %1 is not filled with delivery date.'"),
			         СтрокаПродуктов.НомерСтроки));
			ЕстьОшибки = Истина;
		КонецЕсли;
		Если СтрокаПродуктов.Количество = 0 Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'В строке № %1 не заполнено количество.'; en = 'Line # %1 is not filled with quantity.'"),
			         СтрокаПродуктов.НомерСтроки));
			ЕстьОшибки = Истина;
		КонецЕсли;
		Если СтрокаПродуктов.Цена = 0 Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'В строке № %1 не заполнена цена.'; en = 'Line # %1 is not filled with price.'"),
			         СтрокаПродуктов.НомерСтроки));
			ЕстьОшибки = Истина;
		КонецЕсли;
		Если СтрокаПродуктов.Валюта.Пустая() Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'В строке № %1 не заполнена валюта.'; en = 'Line # %1 is not filled with currency.'"),
			         СтрокаПродуктов.НомерСтроки));
			ЕстьОшибки = Истина;
		КонецЕсли;
		Если СтрокаПродуктов.СтавкаНДС.Пустая() Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'В строке № %1 не заполнена ставка НДС.'; en = 'Line # %1 is not filled with VAT rate.'"),
			         СтрокаПродуктов.НомерСтроки));
			ЕстьОшибки = Истина;
		КонецЕсли;
		
		НоваяСтрока = ПродуктыКЗаказу.Добавить();
		НоваяСтрока.ИдентификаторПродукта    = СтрокаПродуктов.Продукт.IDExternalSystemProduct;
		НоваяСтрока.Наименование             = СтрокаПродуктов.Продукт.Наименование;
		НоваяСтрока.ТипПродукта              = СтрокаПродуктов.Продукт.ТипПродукта.Наименование;
		НоваяСтрока.ДатаПоставки             = СтрокаПродуктов.ДатаПоставки;
		НоваяСтрока.Количество               = СтрокаПродуктов.Количество;
		НоваяСтрока.Цена                     = СтрокаПродуктов.Цена;
		НоваяСтрока.КодВалюты                = СтрокаПродуктов.Валюта.Код;
		НоваяСтрока.СтавкаНДС                = СтрокаПродуктов.СтавкаНДС.Ставка;
		НоваяСтрока.КомментарийДляПоставщика = СтрокаПродуктов.КомментарийДляПоставщика;
		НоваяСтрока.КомментарийВнутренний    = СтрокаПродуктов.КомментарийВнутренний;
	КонецЦикла;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВызова = Новый Структура;
	ПараметрыВызова.Вставить("ЗаказНаЗакупку",           ЗаказНаЗакупку);
	ПараметрыВызова.Вставить("ИдентификаторЗаказа",      ЗаказНаЗакупку.IDSystem);
	ПараметрыВызова.Вставить("ДатаЗаказа",               ЗаказНаЗакупку.Дата);
	ПараметрыВызова.Вставить("ТипЗаказа",                ЗаказНаЗакупку.ТипЗаказа);
	ПараметрыВызова.Вставить("НестандартныйЗаказ",       ЗаказНаЗакупку.НестандартныйЗаказ);
	ПараметрыВызова.Вставить("ДополнительнаяИнформация", ЗаказНаЗакупку.ДополнительнаяИнформация);
	ПараметрыВызова.Вставить("Комментарий",              ЗаказНаЗакупку.Комментарий);
	ПараметрыВызова.Вставить("Поставщик",                ЗаказНаЗакупку.Поставщик);
	ПараметрыВызова.Вставить("ИдентификаторПоставщика",  ЗаказНаЗакупку.Поставщик.IDExternalSystem);
	ПараметрыВызова.Вставить("Договор",                  ЗаказНаЗакупку.Договор);
	ПараметрыВызова.Вставить("ИдентификаторДоговора",    ЗаказНаЗакупку.Договор.ДОIDExternalSystem);
	ПараметрыВызова.Вставить("НаименованиеДоговора",     ЗаказНаЗакупку.Договор.ДОНаименованиеДоговора);
	ПараметрыВызова.Вставить("ЦентрЗатрат",              ЗаказНаЗакупку.ЦентрЗатрат.Наименование);
	ПараметрыВызова.Вставить("АдресПоставки",            ЗаказНаЗакупку.АдресПоставки);
	ПараметрыВызова.Вставить("УсловияПоставки",          ЗаказНаЗакупку.УсловияПоставки);
	ПараметрыВызова.Вставить("УсловияОплаты",            ЗаказНаЗакупку.УсловияОплаты);
	ПараметрыВызова.Вставить("Ответственный",            Ответственный);
	ПараметрыВызова.Вставить("ПродуктыКЗаказу",          ПродуктыКЗаказу);

	ОтветСервиса = Scan_ВебСервисы.ВызовВебСервиса1СДО("setPurchaseOrder", ПараметрыВызова, Отказ);
	
	Если Не Отказ Тогда
		Сообщить(НСтр("ru = 'Данные заказа успешно переданы в 1С:ДО.'; en = 'Data has been successfully transferred to 1C:DM.'"));
	Иначе
		Сообщить(НСтр("ru = 'Не удалось передать данные заказа в 1С:ДО.'; en = 'Data transfer to 1C:DM has failed.'"));
		Сообщить(ОтветСервиса);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПользователяОСНаСервере(Пользователь)

	Ответственный = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Пользователь);
	Запрос.Текст = "ВЫБРАТЬ
	|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка = &Ссылка";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить(НСтр("ru = 'Ошибка получения данных автора! Заказ на закупку не отправлен.'; en = 'Failed to get the data of the author! The purchase order has not been sent.'"));
		Возврат Ответственный;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	СвойстваПользователяИБ = Пользователи.СвойстваПользователяИБ(Выборка.ИдентификаторПользователяИБ);
	Если СвойстваПользователяИБ = Неопределено Тогда
		Сообщить(НСтр("ru = 'Ошибка получения данных автора! Заказ на закупку не отправлен.'; en = 'Failed to get the data of the author! The purchase order has not been sent.'"));
		Возврат Ответственный;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	ПользовательСДоменом = СвойстваПользователяИБ.ПользовательОС;
	ПользовательСДоменом = СтрЗаменить(ПользовательСДоменом, "\\", "");
	МассивПользователяСДоменом = СтрРазделить(ПользовательСДоменом, "\", Ложь);
	
	Если МассивПользователяСДоменом.Количество() = 1 Тогда
		Ответственный = МассивПользователяСДоменом[0];
	ИначеЕсли МассивПользователяСДоменом.Количество() = 2 Тогда
		Ответственный = МассивПользователяСДоменом[1];
	КонецЕсли;
	
	Возврат Ответственный;
	
КонецФункции

&НаСервере
Процедура ОтправитьИзмененныеДанныеВ1БД()	
	Для Каждого ТекСтрока Из ТаблицаПродуктов Цикл		
		РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(ТекСтрока.Продукт, Справочники.Scan_ВидыЗапроса.SetProduct, "НомерИзделия", ТекСтрока.Продукт.НомерИзделия); 	
		РегистрыСведений.Scan_Обмен1БДОчередьПоОтправкеРеквизитов.ЗаписьЗначенияРегистраСведения(ТекСтрока.Продукт, Справочники.Scan_ВидыЗапроса.SetAdditionalProperty, "VIN", ТекСтрока.Продукт.VIN);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти