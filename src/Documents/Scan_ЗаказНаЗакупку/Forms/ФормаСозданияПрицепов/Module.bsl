#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Поставщик") Тогда
		Поставщик = Параметры.Поставщик;	
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаказНаЗакупку") Тогда
		ЗаказНаЗакупку = Параметры.ЗаказНаЗакупку;	
	КонецЕсли;
	
	Если Параметры.Свойство("Наименование") Тогда
		Наименование = Параметры.Наименование;	
	КонецЕсли;
	
	Если Параметры.Свойство("МаркаПродукта") Тогда
		МаркаПродукта = Параметры.МаркаПродукта;	
	КонецЕсли;
	
	Если Параметры.Свойство("МассивПрицепов") Тогда
		Для Каждого ТекЭлемент Из Параметры.МассивПрицепов Цикл
			НоваяСтрока = ТаблицаСозданныхПрицепов.Добавить();
			НоваяСтрока.Продукт = ТекЭлемент.Продукт;
			НоваяСтрока.IDExternalSystemProduct = ТекЭлемент.Продукт.IDExternalSystemProduct;
			НоваяСтрока.Цена = ТекЭлемент.Цена;
			НоваяСтрока.СтавкаНДС = ТекЭлемент.СтавкаНДС;
			НоваяСтрока.Валюта = ТекЭлемент.Валюта;
			НоваяСтрока.ЗаказНаЗавод = ТекЭлемент.ЗаказНаЗавод;
			НоваяСтрока.НомераЗаказов = ТекЭлемент.НомераЗаказов;
		КонецЦикла;
	КонецЕсли;
	
	// Проверим, возможно в справочниках есть уже созданные продукты, которые не были применены
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_Изделия.Ссылка КАК Продукт,
		|	Scan_Изделия.IDExternalSystemProduct КАК IDExternalSystemProduct,
		|	Scan_Изделия.ЗаказНаЗавод КАК ЗаказНаЗавод,
		|	Scan_Изделия.ЗаказНаЗавод.Наименование КАК НомераЗаказов
		|ИЗ
		|	Справочник.Scan_Изделия КАК Scan_Изделия
		|ГДЕ
		|	Scan_Изделия.ЗаказНаЗавод.Наименование ПОДОБНО &НомерЗаказаНаЗакупку
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомераЗаказов";
	
	ШаблонНомераЗаказа = Формат(ЗаказНаЗакупку.Дата,"ДФ=""гггг""") + "-" + ЗаказНаЗакупку.Номер + "%"; 
	Запрос.УстановитьПараметр("НомерЗаказаНаЗакупку",  ШаблонНомераЗаказа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПараметрыОтбора = Новый Структура("Продукт", ВыборкаДетальныеЗаписи.Продукт);		
		Если ТаблицаСозданныхПрицепов.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
			НоваяСтрока = ТаблицаСозданныхПрицепов.Добавить();
			НоваяСтрока.Продукт = ВыборкаДетальныеЗаписи.Продукт;
			НоваяСтрока.IDExternalSystemProduct = ВыборкаДетальныеЗаписи.IDExternalSystemProduct;
			НоваяСтрока.ЗаказНаЗавод = ВыборкаДетальныеЗаписи.ЗаказНаЗавод;
			НоваяСтрока.НомераЗаказов = ВыборкаДетальныеЗаписи.НомераЗаказов;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаСозданныхПрицеповВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ТаблицаСозданныхПрицепов.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Продукт) 
		И Элемент.ТекущийЭлемент = Элементы.ТаблицаСозданныхПрицеповПродукт Тогда 
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.Продукт);
		ОткрытьФорму("Справочник.Scan_Изделия.Форма.ФормаЭлементаНовая",ПараметрыОткрытия,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;

	Если ЗначениеЗаполнено(ТекущиеДанные.ЗаказНаЗавод) 
		И Элемент.ТекущийЭлемент = Элементы.ТаблицаСозданныхПрицеповЗаказНаЗавод Тогда 
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Ключ",ТекущиеДанные.ЗаказНаЗавод);
		ОткрытьФорму("Справочник.Scan_ЗаказыНаЗавод.Форма.ФормаЭлементаНовая",ПараметрыОткрытия,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПрицепы(Команда)
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(МодельПродукта) Тогда
		Сообщить(НСтр("ru = 'Поле ""Модель"" не заполнено!'; en = 'Model is not filled!'"));
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МаркаПродукта) Тогда
		Сообщить(НСтр("ru = 'Поле ""Марка"" не заполнено!'; en = 'Mark is not filled!'"));
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипПродукта) Тогда
		Сообщить(НСтр("ru = 'Поле ""Тип продукта"" не заполнено!'; en = 'Product type is not filled'"));
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если Количество > 100 Тогда
		Сообщить(НСтр("ru = 'Нельзя создать больше 100 продуктов.'; en = 'Unable to create more then 100 products!'"));
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьПрицепыНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьПрицепыНаСервере()
	НомерКонечногоЗаказа = ТаблицаСозданныхПрицепов.Количество();
	Для Сч = 1 По Количество Цикл
		// Создадим заказ на завод
		НовыйЗаказНаЗавод = Справочники.Scan_ЗаказыНаЗавод.СоздатьЭлемент();
		НомерКонечногоЗаказа = НомерКонечногоЗаказа + 1;
		НаименованиеЗаказа = Формат(ЗаказНаЗакупку.Дата,"ДФ=""гггг""") + "-" + ЗаказНаЗакупку.Номер + "-" + НомерКонечногоЗаказа; 
	
		НовыйЗаказНаЗавод.Наименование = НаименованиеЗаказа;
		НовыйЗаказНаЗавод.СозданВручную = Истина;
		Попытка
			НовыйЗаказНаЗавод.Записать();			
		Исключение
			ВывестиСообщениеПол(НСтр("ru = 'Ошибка записи заказа <%1>: %2'"),,,,, НовыйЗаказНаЗавод.Наименование, ОписаниеОшибки());
			Продолжить;	
		КонецПопытки;
		
		// Создадим продукт
		НовыйПрицеп = Справочники.Scan_Изделия.СоздатьЭлемент();
		НовыйПрицеп.Наименование = Наименование;
		НовыйПрицеп.МодельПродукта = МодельПродукта;
		НовыйПрицеп.МаркаПродукта = МаркаПродукта;
		НовыйПрицеп.ТипПродукта = ТипПродукта;
		НовыйПрицеп.ГруппаИзделийOFMS = ГруппаИзделийOFMS;
		НовыйПрицеп.ЗаказНаЗавод = НовыйЗаказНаЗавод.Ссылка;
		НовыйПрицеп.СозданВручную = Истина;
		НовыйПрицеп.НомерИзделия = НовыйЗаказНаЗавод.Наименование;
		
		
		СформированноеНаименование = Справочники.Scan_Изделия.СформироватьНаименованиеПоНастройке(НовыйПрицеп);
		Если НовыйПрицеп.Наименование = "" И СформированноеНаименование <> "" Тогда
			НовыйПрицеп.Наименование = СформированноеНаименование;
		КонецЕсли;
		
		Попытка
			НовыйПрицеп.Записать();
			// Добавим в таблицу
			НоваяСтрока = ТаблицаСозданныхПрицепов.Добавить();
			НоваяСтрока.Продукт = НовыйПрицеп.Ссылка;
			НоваяСтрока.Цена = Цена;
			НоваяСтрока.СтавкаНДС = СтавкаНДС;
			НоваяСтрока.Валюта = Валюта;
			НоваяСтрока.ЗаказНаЗавод = НовыйПрицеп.ЗаказНаЗавод;
			НоваяСтрока.НомераЗаказов = НовыйПрицеп.ЗаказНаЗавод.Наименование;
		Исключение
			ВывестиСообщениеПол(НСтр("ru = 'Ошибка записи продукта: %1'"),,,,, ОписаниеОшибки());
		КонецПопытки; 	
		
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура ПередатьВ1БД(Команда)
	Для Каждого ТекСтрока Из ТаблицаСозданныхПрицепов Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.IDExternalSystemProduct) Тогда
			IDПрицепа = ПередатьВ1БДНаСервере(ТекСтрока.Продукт);
			ТекСтрока.IDExternalSystemProduct = IDПрицепа;
		КонецЕсли;
	КонецЦикла;	  		
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)   	
	МассивПрицепов = Новый Массив;
	
	Для Каждого ТекСтрока Из ТаблицаСозданныхПрицепов Цикл
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("Продукт", ТекСтрока.Продукт);
		СтруктураДанных.Вставить("Цена", ТекСтрока.Цена);
		СтруктураДанных.Вставить("СтавкаНДС", ТекСтрока.СтавкаНДС);
		СтруктураДанных.Вставить("Валюта", ТекСтрока.Валюта);
		СтруктураДанных.Вставить("ЗаказНаЗавод", ТекСтрока.ЗаказНаЗавод); 
		СтруктураДанных.Вставить("НомераЗаказов", ТекСтрока.НомераЗаказов); 
		
		МассивПрицепов.Добавить(СтруктураДанных);
	КонецЦикла;
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("МассивПрицепов", МассивПрицепов);
	Закрыть(ПараметрыЗакрытия);
КонецПроцедуры  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПередатьВ1БДНаСервере(ПрицепСсылка)
	
	ПараметрыВызова = Новый Структура;
	
	ПараметрыВызова.Вставить("НомерИзделия",     ПрицепСсылка.ЗаказНаЗавод.Наименование);
	ПараметрыВызова.Вставить("Наименование",     ПрицепСсылка.Наименование);
	ПараметрыВызова.Вставить("МаркаПродукта",    ПрицепСсылка.МаркаПродукта);
	ПараметрыВызова.Вставить("ТипПродукта",      ПрицепСсылка.ТипПродукта);
	ПараметрыВызова.Вставить("ВидПродукта",      ПрицепСсылка.ТипПродукта.ВидПродукта);
	ПараметрыВызова.Вставить("ТипМаркетинговый", ПрицепСсылка.ТипыМаркетинговые);
	
	ОтветСервиса = Scan_ВебСервисыРазборОтветов.ВызватьМетод_CreateProduct(ПараметрыВызова);
	Если ОтветСервиса = Неопределено Тогда
		Сообщить(НСтр("ru = 'Ошибка передачи данных 1БД! Продукт не создан в 1БД.'; en = 'Failed to create product!'"));
	Иначе
		ПрицепОбъект = ПрицепСсылка.ПолучитьОбъект();
		ПрицепОбъект.IDExternalSystemProduct = ОтветСервиса;
		Попытка
			ПрицепОбъект.Заблокировать();
			ПрицепОбъект.Записать();
			Возврат ПрицепОбъект.IDExternalSystemProduct;
		Исключение
			Сообщить(НСтр("ru = 'Ошибка записи продукта! Продукт не записан.'; en = 'Failed to save product!'"));
		КонецПопытки;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервере
Процедура ТипПродуктаПриИзмененииНаСервере()
	ГруппаИзделийOFMS = РегистрыСведений.Scan_СоответствияТиповВидовИГрупп.ПолучитьГруппуИзделийOFMSПоТипу(ТипПродукта);	
КонецПроцедуры

&НаКлиенте
Процедура ТипПродуктаПриИзменении(Элемент)
	ТипПродуктаПриИзмененииНаСервере();
КонецПроцедуры


#КонецОбласти