//rarus tenkam 28.11.2017 mantis 10885 +++

////Формирование условного обозначения для форм списка справочников и документов
////
////Параметры:
////Форма - УправляемаяФорма - ФормаСписка, в которой возникло событие
////Отображает цвет строки соответствующего вида
////
//&НаСервере
//Процедура СформироватьУсловноеОформление()
//	
//	//Обновление условного оформления строк в ТЧ
//	СправочникМенеджер = Справочники.Scan_СтатусыЗаявокНаДействие;
//	Scan_УправлениеДиалогомСервер.СформироватьУсловноеОформление(ЭтаФорма, СправочникМенеджер,"СтатусЗаявки");
//	
//КонецПроцедуры
//rarus tenkam 28.11.2017 mantis 10885 ---

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//формирование условного оформления строк списка
	//СформироватьУсловноеОформление();  	//rarus tenkam 28.11.2017 mantis 10885 +
	
	//rarus tenkam 02.08.2016 mantis 7219 ++
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	//rarus tenkam 02.08.2016 mantis 7219 --
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
КонецПроцедуры

//rarus tenkam 28.11.2017 mantis 10885 +++
//// Обработчик события возникающего на клиенте при изменении строки списка.
////
//// Параметры:
////  Элемент - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
////
//&НаКлиенте
//Процедура СписокПриИзменении(Элемент)
//	
//	//формирование условного оформления строк списка
//	СформироватьУсловноеОформление();

//КонецПроцедуры
//rarus tenkam 28.11.2017 mantis 10885 ---

//rarus tenkam 02.08.2016 mantis 7219 ++

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

//rarus tenkam 02.08.2016 mantis 7219 --

//rarus tenkam 23.11.2016 mantis 7750 ++
&НаКлиенте
Процедура КорректироватьЗаявку(Команда)
	Для Каждого ТекСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		Scan_ВспомогательныеФункцииКлиент.ОбработатьИзменениеЗаявкиНаДействие(Истина, ТекСтрока, ЭтаФорма);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура АннулироватьЗаявку(Команда)
	Для Каждого ТекСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		Scan_ВспомогательныеФункцииКлиент.ОбработатьИзменениеЗаявкиНаДействие(Ложь, ТекСтрока, ЭтаФорма);
	КонецЦикла;
КонецПроцедуры
//rarus tenkam 23.11.2016 mantis 7750 --

//rarus sergei 02.12.2016 mantis 8057 ++
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	 Если ИмяСобытия = "ОбновитьСписокЗаявокНаДействие" Тогда 
            Элементы.Список.Обновить(); 
      КонецЕсли;
КонецПроцедуры
//rarus sergei 02.12.2016 mantis 8057 --

//rarus abrant 26.01.2017 mantis 8304 +++
&НаКлиенте
Процедура ПрикрепитьМХиМ15(Команда)
	//rarus tenkam 03.05.2017 mantis 9440 +++ (переделала)
	
	//	Если Элементы.Список.ВыделенныеСтроки.Количество() = 1 Тогда
	//		Документ = Элементы.Список.ВыделенныеСтроки[0];
	//		ПараметрыДокумента = Новый Структура("Ключ", Документ);
	//		ФормаДокумента = ПолучитьФорму("Документ.Scan_ЗаявкаНаДействие.Форма.ФормаДокумента",ПараметрыДокумента);
	//		ФормаДокумента.Открыть();
	//		ПараметрыФормы = Новый Структура;
	//		ПараметрыФормы.Вставить("ВладелецФайла",  Документ);
	//		ПараметрыФормы.Вставить("ТолькоПросмотр", ФормаДокумента.ТолькоПросмотр);
	//		ОткрытьФорму("ОбщаяФорма.ПрисоединенныеФайлы", ПараметрыФормы, ФормаДокумента, Истина, ФормаДокумента.Окно);
	//	Иначе
	//		Сообщить("Для прикрепления МХ и М-15 необходимо спозиционироваться на одной строке документа!");
	//	КонецЕсли;
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() <> 0 Тогда
		// rarus tenkam 10.04.2019 mantis 14195 +++
		
		//ВыбранныеФайлы = Новый Массив;
		//
		//ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		//ВыборФайла.МножественныйВыбор = Истина;
		//ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла'");
		//ВыборФайла.Фильтр = НСтр("ru = 'Все файлы'") + " (*.*)|*.*";
		//Если ВыборФайла.Выбрать() Тогда
		//	ВыбранныеФайлы = ВыборФайла.ВыбранныеФайлы;
		//КонецЕсли;
		//
		//Если ВыбранныеФайлы.Количество() <> 0 Тогда
		//	ДопПараметры = Новый Структура;
		//	ДопПараметры.Вставить("ИдентификаторФормы", ЭтаФорма.УникальныйИдентификатор);
		//	ДопПараметры.Вставить("НеОткрыватьКарточкуПослеСозданияИзФайла", Истина);
		//	ДопПараметры.Вставить("ВыбранныеФайлы", ВыбранныеФайлы);
		//	
		//	Для Каждого ТекДокумент Из Элементы.Список.ВыделенныеСтроки Цикл
		//		ДопПараметры.Вставить("ВладелецФайла", ТекДокумент);
		//		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыРасширениеПредложено", ПрисоединенныеФайлыСлужебныйКлиент, ДопПараметры);
		//		ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
		//	КонецЦикла;		
		//КонецЕсли;
		
		РаботаСФайламиКлиент.ДобавитьФайлы(Элементы.Список.ВыделенныеСтроки, ЭтаФорма.УникальныйИдентификатор, , );
	
		// rarus tenkam 10.04.2019 mantis 14195 ---

		Элементы.Список.Обновить();
	КонецЕсли;
	//rarus tenkam 03.05.2017 mantis 9440 ---
	
КонецПроцедуры
//rarus abrant 26.01.2017 mantis 8304 ---

//rarus tenkam 28.11.2017 mantis 10885 +++
&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	Справочник.Ссылка,
	|	Справочник.Цвет КАК Цвет
	|ИЗ
	|	Справочник.Scan_СтатусыЗаявокНаДействие КАК Справочник";
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтрокиКлючи = Строки.ПолучитьКлючи();	// rarus tenkam 17.04.2020 011 +
	Пока Выборка.Следующий() Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Scan_ЗаявкаНаДействие.Ссылка КАК СсылкаДокумент
			|ИЗ
			|	Документ.Scan_ЗаявкаНаДействие КАК Scan_ЗаявкаНаДействие
			|ГДЕ
			|	Scan_ЗаявкаНаДействие.СтатусЗаявки = &СтатусЗаявки
			|	И Scan_ЗаявкаНаДействие.Ссылка В(&Строки)";
		
		Запрос.УстановитьПараметр("СтатусЗаявки", Выборка.Ссылка);
		Запрос.УстановитьПараметр("Строки", СтрокиКлючи);	// rarus tenkam 17.04.2020 011 +
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаСписка = Строки[ВыборкаДетальныеЗаписи.СсылкаДокумент];
			Для Каждого КолонкаСписка Из СтрокаСписка.Оформление Цикл
				КолонкаСписка.Значение.УстановитьЗначениеПараметра("ЦветФона", Выборка.Цвет.Получить());
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
КонецПроцедуры
//rarus tenkam 29.11.2017 mantis 10885 ---

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры


#КонецОбласти
