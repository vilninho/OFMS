
//rarus sergei 19.07.2016 mantis 6976 ++  (создание документа)

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//rarus sergei 19.07.2016 mantis 7038 ++

// СОГЛАСОВАНИЕ
&НаКлиенте
Процедура ОбновитьСтатусСогласования()
	Если Объект.ТребуетСогласования Тогда
		Элементы.ГруппаНадписьСогласован.ТекущаяСтраница = Элементы.ГруппаНадписьСогласованНадпись;
		Если Объект.Ссылка.Пустая() Тогда
			Элементы.НадписьСогласован.Заголовок = "Не согласован";
			Элементы.НадписьСогласован.Гиперссылка = Истина;
		Иначе
			СтатусСогласования = Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка);
			Элементы.НадписьСогласован.Заголовок = СтатусСогласования.Статус;
			Элементы.НадписьСогласован.Гиперссылка = Истина;
			//Элементы.ТребуетСогласования.Доступность = (СтатусСогласования.Код = 0);
		КонецЕсли;
		Если Элементы.НадписьСогласован.Заголовок = "Согласован" Тогда
			Элементы.НадписьСогласован.ЦветТекста = WebЦвета.Зеленый;
		Иначе
			Элементы.НадписьСогласован.ЦветТекста = WebЦвета.Красный;
		КонецЕсли;
	Иначе
		Элементы.ГруппаНадписьСогласован.ТекущаяСтраница = Элементы.ГруппаНадписьСогласованПустая;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьОткрытьСогласование()
	
	СтатусСогласования = Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка);
	Если СтатусСогласования.Код = 0 Тогда 
		//если согласования нет вообще, то введем на основании новое
		ПараметрыОткрытия = Новый Структура("Основание", Объект.Ссылка);
		//ОткрытьФорму("БизнесПроцесс.Scan_Согласование.ФормаОбъекта", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		НовыйБП = БизнесПроцессы.Scan_Согласование.СоздатьБизнесПроцесс();
		НовыйБП.Дата = ТекущаяДата();
		НовыйБП.УстановитьНовыйНомер();
		НовыйБП.Заполнить(Объект.Ссылка);
		Попытка
			НовыйБП.Записать();
			НовыйБП.Старт();
			//rarus FominskiyAS 25.04.2019  mantis 14191 +++
			//Сообщить("Для документа было создано согласование """ + НовыйБП.Ссылка + """");
			Сообщить(НСтр("ru = 'Для документа было создано согласование ""'; en = '""Approval"" was created for this document ""'") + НовыйБП.Ссылка + """");
			//rarus FominskiyAS 25.04.2019  mantis 14191 ---
		Исключение
			//rarus FominskiyAS 25.04.2019  mantis 14191 +++
			//Сообщить("Для документа не удалось создать согласование!", СтатусСообщения.Внимание);
			Сообщить(НСтр("ru = 'Для документа не удалось создать согласование!'; en = 'Action failed!'"), СтатусСообщения.Внимание);
			//rarus FominskiyAS 25.04.2019  mantis 14191 ---  
		КонецПопытки;

	Иначе 
		//если согласование есть, то просто откроем его форму
		//ПоказатьЗначение(,СтатусСогласования.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСогласованНажатие(Элемент)
		
	Отказ = Ложь;
	Scan_ОбщегоНазначенияКлиент.ПроверитьЗаписьНовогоОбъектаВФорме(ЭтаФорма, Объект.Ссылка,,, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьОткрытьСогласование();
	СтатусСогласования = Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка);
	ПоказатьЗначение(,СтатусСогласования.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура ТребуетСогласованияПриИзменении(Элемент)
	
	ТребуетСогласования = Объект.ТребуетСогласования;
	
	//запрет изменения флага для проведенного документа
	Если Объект.Проведен И ТребуетСогласования Тогда
		Объект.ТребуетСогласования = Ложь;	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ проведен! Отмените проведение и установите флаг повторно!");
		Модифицированность = Ложь;
	КонецЕсли;
	
	//запрет изменения флага, если запущен бизнес-процесс согласования
	Если НЕ ТребуетСогласования И Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка).Код <> 0 Тогда
		Объект.ТребуетСогласования = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Невозможно отменить согласование, бизнес-процесс уже запущен!");
		Модифицированность = Ложь;
	КонецЕсли;
	
	ОбновитьСтатусСогласования();

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокЗадач(Команда)
	ОткрытьФорму("Задача.ЗадачаИсполнителя.Форма.ФормаСписка",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

//rarus sergei 19.07.2016 mantis 7038 --

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ОБЩЕГО НАЗНАЧЕНИЯ

// ПАРАМЕТРЫ ДОКУМЕНТА

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы   - Элемент управления, в котором возникло данное событие.
//  ДанныеВыбора         - СписокЗначений - Список возможных значений для выбора, которые будет показан.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры // ПараметрыДокументаНачалоВыбора()

// Производит настройку параметров выбора элементов управления диалога в зависимости от значений реквизитов объекта.
//
&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	Scan_УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры // НастроитьПараметрыВыбораЭлементовФормы()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Хоз. операция" в контексте сервера.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Вызываем обработчик изменения данных объекта
	Документы.Scan_ЗаявкаНаДействие.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	
	//rarus tenkam 23.12.2016 mantis 7609 ++ (закомментировала, было сделано по 7609 sergei)
	//Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу ИЛИ
	//	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК ИЛИ
	//	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК ИЛИ
	//	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда //rarus sergei 12.12.2016 mantis 7609 + //согласно комментарию в Mantis № 0028546
	//	Объект.Грузоотправитель = Справочники.Scan_Контрагенты.СканияРусь;
	//КонецЕсли; 
	//rarus tenkam 23.12.2016 mantis 7609 --
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
		
	//rarus abrant 20.06.2017 mantis 9146 +++
	//нужно будет вернуть обратно после проверки!!
	Если Scan_ПраваИНастройки.Scan_Право("ВключитьУчетОказанныхУслуг") Тогда
		Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +
		    Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
			
			Элементы.ГруппаОказанныеУслуги.Видимость = Истина;
		Иначе                                                 
			Элементы.ГруппаОказанныеУслуги.Видимость = Ложь;
		КонецЕсли;	
	КонецЕсли;
	//rarus abrant 20.06.2017 mantis 9146 ---
	
КонецПроцедуры // ХозОперацияПриИзмененииНаСервере()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Хоз. операция".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	                                                                                         
	// Вызываем общий обработчик события выбора одного из пунктов меню доступных хоз. операций
	Scan_УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	
	//// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;                     
	//
	// Обработаем событие в контексте сервера
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	//rarus tenkam 17.10.2016 mantis 7688 ++
	//ОбновитьНазваниеДокумента();
	ОбновитьЗаголовокФормы();
	//rarus tenkam 17.10.2016 mantis 7688 --
	УправлениеДиалогомНаСервере();	//rarus tenkam 11.10.2016 mantis 7670 +
	
	//rarus tenkam 13.10.2017 mantis 11197 +++
	//ОчиститьПоляДокументаПриСменеХО();	//rarus tenkam 27.10.2016 mantis 7750 (баги при смене ХО)
	ОчиститьПоляДокументаПриСменеХОНовая();
	//rarus tenkam 13.10.2017 mantis 11197 ---	
	
	ПродуктыПоЗаявкеПриОкончанииРедактированияНаСервере(); //rarus tenkam 04.04.2017 mantis 8713 +	
	
КонецПроцедуры // ХозОперацияПриИзменении()

//rarus tenkam 12.10.2017 mantis 11197 +++
&НаКлиенте
Процедура ОчиститьПоляДокументаПриСменеХОНовая()
	
	Если НЕ Элементы.ДатаПолучения.Видимость Тогда
		Объект.ДатаПолучения = Дата('00010101000000');
		ВремяПолучения = Дата('00010101000000');
	КонецЕсли;
	
	Если НЕ Элементы.ДатаДоставкиПлановая.Видимость Тогда
		Объект.ДатаДоставкиПлановая = Дата('00010101000000');
		ВремяДоставки = Дата('00010101000000');
	КонецЕсли;                         	
	
	Если НЕ Элементы.ДатаПродажи.Видимость Тогда
		Объект.ДатаПродажи = Дата('00010101000000');
	КонецЕсли;
	
	Если НЕ Элементы.ДатаВыкупа.Видимость Тогда
		Объект.ДатаВыкупа = Дата('00010101000000');
	КонецЕсли;	
	
	Если НЕ Элементы.ДатаПередачиВПроизводство.Видимость Тогда
		Объект.ДатаПередачиВПроизводство = Дата('00010101000000');
		ВремяПередачиВПроизводство = Дата('00010101000000');	
	КонецЕсли;                                       	
	
	Если НЕ Элементы.ДатаИВремяПоручения.Видимость Тогда
		Объект.ДатаИВремяПоручения = Дата('00010101000000');
		ВремяПоручения = Дата('00010101000000');
	КонецЕсли;   	
	
	Если НЕ Элементы.Грузоотправитель.Видимость Тогда
		
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") ИЛИ 		//rarus tenkam 14.08.2017 mantis 9319 +
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") ИЛИ 		//rarus tenkam 26.09.2017 mantis 10742 +
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") Тогда
			
			Объект.Грузоотправитель = ПредопределенноеЗначение("Справочник.Scan_Контрагенты.СканияРусь");
		Иначе
			Объект.Грузоотправитель = Неопределено;	
		КонецЕсли; 
	КонецЕсли;
	
	Если НЕ Элементы.Грузополучатель.Видимость Тогда
		Объект.Грузополучатель = Неопределено;
	КонецЕсли;
	
	Если НЕ Элементы.Хранитель.Видимость Тогда
		Объект.Хранитель  = Неопределено;	
	КонецЕсли;
	
	Если НЕ Элементы.Подрядчик.Видимость Тогда
		Объект.Подрядчик = Неопределено;
	КонецЕсли;
	
	Если НЕ Элементы.ГруппаСпособДоставки.Видимость Тогда
		Объект.СпособДоставки = ПредопределенноеЗначение("Перечисление.Scan_СпособыДоставкиПродуктов.ПустаяСсылка"); 		
	КонецЕсли;
	
	Если НЕ Элементы.Договор.Видимость Тогда
		Объект.Договор = ПредопределенноеЗначение("Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка");
	КонецЕсли;
	
	Если НЕ Элементы.ДоговорСПоставщиком.Видимость Тогда
		Объект.ДоговорСПоставщиком = ПредопределенноеЗначение("Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка");
	КонецЕсли;
	
	Если НЕ Элементы.МестоДоставки.Видимость Тогда
		Объект.МестоДоставки = ПредопределенноеЗначение("Справочник.Scan_МестаХранения.ПустаяСсылка");
	КонецЕсли;
	
	Если НЕ Элементы.МестоПолучения.Видимость Тогда
		Объект.МестоПолучения = ПредопределенноеЗначение("Справочник.Scan_МестаХранения.ПустаяСсылка");
	КонецЕсли;
	
	Если НЕ Элементы.ГруппаКонтактныеЛица.Видимость Тогда	
		Объект.КонтактныеЛица.Очистить();
	КонецЕсли;  
	
	Если НЕ Элементы.ГруппаОказанныеУслуги.Видимость Тогда
		Объект.ОказанныеУслуги.Очистить();	
	КонецЕсли;
	
	//rarus tenkam 27.11.2017 mantis 11353 +++
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если (Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") ИЛИ 		
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") ИЛИ 		
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение") ИЛИ 		
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") ИЛИ 		
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК")) И 
			НЕ ЗначениеЗаполнено(Объект.СпособДоставки) Тогда
			
			Объект.СпособДоставки = ПолучитьСпособДоставкиИзНастройки(); 		
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 27.11.2017 mantis 11353 ---
		
КонецПроцедуры
//rarus tenkam 12.10.2017 mantis 11197 ---

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
КонецПроцедуры

// Обработчик события возникающего при нажатии программно добавленной кнопки.
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Подключаемый_ОбработкаКомандыФормы(Команда) Экспорт
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект, ЭтотОбъект.Окно, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	//// Обработаем событие в контексте сервера
	//ОбработкаКомандыФормыНаСервере(Команда.Имя, ПараметрыДействия);
	//
	//// Вызываем обработчик результата выполнения
	//ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры // Подключаемый_ОбработкаКомандыФормы()

// ХО ++
&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
		
КонецПроцедуры // Подключаемый_ОбработкаРезультатаОповещения()

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	//УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ОбработкаРезультатаОповещенияНаСервере()
// ХО --

////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Scan_СборСтатистики.Scan_ПриОткрытии("Документы", РеквизитФормыВЗначение("Объект").Метаданные().Синоним);	
	//rarus sergei 01.09.2016 mantis 7167 ++
	Если Объект.Сторнирован = Истина Тогда
		НастроитьОтображениеСторнированногоДокумента();	
	КонецЕсли; 
	Если Параметры.Свойство("Доступность") ИЛИ
		Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена Тогда	//rarus tenkam 06.10.2016 mantis 7183 +
		Элементы.ГруппаФон.ТолькоПросмотр = Истина;
	КонецЕсли; 
	//rarus sergei 01.09.2016 mantis 7167 --
	
	//rarus sergei 07.10.2016 mantis 7609 ++	
	Если Параметры.Свойство("Изделия") Тогда //rarus bonmak 29.07.2019 14427 переименовал переменные
		Для каждого элемент Из Параметры.Изделия Цикл //rarus bonmak 29.07.2019 14427 переименовал переменные
			НоваяСтрока=Объект.ПродуктыПоЗаявке.Добавить();
			НоваяСтрока.Изделие = Элемент; //rarus bonmak 29.07.2019 14427 переименовал переменные
			НоваяСтрока.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.Новая; 
			НоваяСтрока.ТипТоплива = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
		КонецЦикла;
		ПродуктыПоЗаявкеПриОкончанииРедактированияНаСервере();		//rarus tenkam 04.04.2017 mantis 8713 +
	КонецЕсли; 
	//rarus sergei 07.10.2016 mantis 7609 --
	Если НЕ Параметры.ЗначениеКопирования.Пустая() Тогда
		Если Параметры.ЗначениеКопирования.Корректировка = Истина Тогда
			Отказ=Истина; 
			СтандартнаяОбработка = Ложь;
			Сообщить("Нельзя создать корректировочный документ копированием");
			//rarus sergei 06.10.2016 mantis 7162 ++ баг с копированием	
		Иначе 
			Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Новая;
			Объект.ПровереноАП = Ложь;
			Для каждого строка Из Объект.ПродуктыПоЗаявке Цикл
				строка.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.Новая;
				Строка.ТипТоплива = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
			КонецЦикла; 
			//rarus sergei 06.10.2016 mantis 7162 --
		КонецЕсли;	
	КонецЕсли;
	//rarus sergei 07.10.2016 mantis 7167 ++ баг слетал статус при перепроведении и перезаписи документа	
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка ИЛИ
		//rarus tenkam 08.02.2017 mantis 8331 +++
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение ИЛИ  
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство ИЛИ  
		//rarus tenkam 08.02.2017 mantis 8331 ---
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК ИЛИ
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК	ИЛИ
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК	ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК ИЛИ
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
		Если Объект.ПровереноАП = Истина И Объект.Проведен = Истина Тогда
			Для каждого строка Из Объект.ПродуктыПоЗаявке Цикл
				// rarus tenkam 12.08.2019 mantis 14427 +++
				//строка.СтатусИзделия = Scan_ВспомогательныеФункцииСервер.ЧтениеСтатусаИзделияИзРегистраСведений(строка.Продукт.Изделие,Объект.Ссылка); 	
				строка.СтатусИзделия = Scan_ВспомогательныеФункцииСервер.ЧтениеСтатусаИзделияИзРегистраСведений(строка.Изделие, Объект.Ссылка); 	
				// rarus tenkam 12.08.2019 mantis 144427 ---	
				Строка.ТипТоплива = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
			КонецЦикла; 				
		Иначе
			Для каждого строка Из Объект.ПродуктыПоЗаявке Цикл
				строка.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.Новая; 	
				Строка.ТипТоплива 	 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	//rarus sergei 07.10.2016 mantis 7167 --
	
	//rarus tenkam 07.02.2017 mantis 7750 +++
	Если Параметры.Свойство("ИсключитьИзделия") Тогда
		Для Каждого ТекИзделие Из Параметры.ИсключитьИзделия Цикл
			ПараметрыОтбора = Новый Структура("Изделие", ТекИзделие);
			СтрокиКУдалению = Объект.ПродуктыПоЗаявке.НайтиСтроки(ПараметрыОтбора);
			Если СтрокиКУдалению.Количество() <> 0 Тогда
				УдаляемаяСтрока = СтрокиКУдалению[0];
				Объект.ПродуктыПоЗаявке.Удалить(УдаляемаяСтрока);
			КонецЕсли;
		КонецЦикла;      
	КонецЕсли;
	//rarus tenkam 07.02.2017 mantis 7750 ---
	
	Если ЗначениеЗаполнено(Объект.ДатаИВремяПоручения) Тогда
		ВремяПоручения = '00010101'+(Объект.ДатаИВремяПоручения - НачалоДня(Объект.ДатаИВремяПоручения));
		ВремяПродажи = ВремяПоручения;	//rarus tenkam 15.08.2017 mantis 9319 +
	КонецЕсли;
	//rarus sergei 07.10.2016 mantis 7609 ++
	Если ЗначениеЗаполнено(Объект.ДатаДоставкиПлановая) Тогда
		ВремяДоставки = '00010101'+(Объект.ДатаДоставкиПлановая - НачалоДня(Объект.ДатаДоставкиПлановая));
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДатаПолучения) Тогда
		ВремяПолучения = '00010101'+(Объект.ДатаПолучения - НачалоДня(Объект.ДатаПолучения));
	КонецЕсли;
	//rarus sergei 07.10.2016 mantis 7609 --
	
	//rarus tenkam 24.01.2017 mantis 8172 +++
	Если ЗначениеЗаполнено(Объект.ДатаПередачиВПроизводство) Тогда
		ВремяПередачиВПроизводство = '00010101'+(Объект.ДатаПередачиВПроизводство - НачалоДня(Объект.ДатаПередачиВПроизводство));
	КонецЕсли;
	//rarus tenkam 24.01.2017 mantis 8172 ---
	
	//rarus tenkam 20.07.2016 mantis 7162 ++
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	//rarus tenkam 20.07.2016 mantis 7162 --
	
	Если Объект.СтатусЗаявки=Справочники.Scan_СтатусыЗаявокНаДействие.ПустаяСсылка() Тогда
		Объект.СтатусЗаявки=Справочники.Scan_СтатусыЗаявокНаДействие.Новая;	
	КонецЕсли;
	Scan_ВспомогательныеФункцииСервер.ИнициализироватьМенюВыбораХозОперации(ЭтаФорма);
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ПриСозданииНаСервере(ЭтотОбъект, Параметры, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();	//rarus tenkam 11.10.2016 mantis 7670 +	
	
	//rarus abrant 19.06.2017 mantis 9146 +++
	//нужно будет вернуть обратно после проверки!!
	Элементы.ГруппаОказанныеУслуги.Видимость = Ложь;
	Если Scan_ПраваИНастройки.Scan_Право("ВключитьУчетОказанныхУслуг") Тогда
		Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
			
			Элементы.ГруппаОказанныеУслуги.Видимость = Истина;
			//rarus tenkam 11.08.2017 mantis 10589 +++
			Если НЕ ЗначениеЗаполнено(Объект.ПакетУслуг) Тогда
				Объект.ПакетУслуг = Справочники.Scan_ПакетыУслугДоставки.НайтиПоРеквизиту("ИспользуетсяПоУмолчанию",Истина);
			КонецЕсли;
			//rarus tenkam 11.08.2017 mantis 10589 ---
		Иначе                                                 
			Элементы.ГруппаОказанныеУслуги.Видимость = Ложь;
		КонецЕсли;
		Если Элементы.ГруппаОказанныеУслуги.Видимость = Истина Тогда
			Если Объект.СтатусЗаявки <> Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена И
				Объект.СтатусЗаявки <> Справочники.Scan_СтатусыЗаявокНаДействие.ДоставкаЗавершена И
				Объект.СтатусЗаявки <> Справочники.Scan_СтатусыЗаявокНаДействие.Аннулирована И
				Объект.ПровереноАП = Истина И
				ЗначениеЗаполнено(Объект.ДатаПолучения) И
				ЗначениеЗаполнено(Объект.МестоДоставки.АдресСкладаЛогистический) И
				ЗначениеЗаполнено(Объект.МестоПолучения.АдресСкладаЛогистический) И
				ЗначениеЗаполнено(Объект.СпособДоставки) И
				Объект.ПродуктыПоЗаявке.Выгрузить().Количество()>0 Тогда
				
				АПВсеОК = Истина;
				ВыполнитьПерерасчетОказанныхУслугНаСервере(АПВсеОК);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//rarus abrant 19.06.2017 mantis 9146 ---
	
	// rarus tenkam 12.08.2019 mantis 14427 +++ таких случаев больше не будет
	//// rarus tenkam 18.04.2018 mantis 12979 +++ 	
	//Для Каждого ТекСтрока Из Объект.ПродуктыПоЗаявке Цикл
	//	Если ЗначениеЗаполнено(ТекСтрока.Продукт) И Не ЗначениеЗаполнено(ТекСтрока.Изделие) Тогда
	//		ТекСтрока.Изделие = ТекСтрока.Продукт.Изделие;
	//		ЭтаФорма.Модифицированность = Истина;
	//	КонецЕсли;			
	//КонецЦикла; 	
	//// rarus tenkam 18.04.2018 mantis 12979 ---
	// rarus tenkam 12.08.2019 mantis 14427 ---
	
	//rarus sergei 16.09.2016 mantis 7167 ++
	// Дальнейшие операции выпольняются только для новых документов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		//rarus sergei 07.10.2016 mantis 7167 ++
		//Для каждого строка Из Объект.ПродуктыПоЗаявке Цикл
		//	строка.СтатусИзделия = Scan_ВспомогательныеФункцииСервер.ЧтениеСтатусаИзделияИзРегистраСведений(строка.Продукт.Изделие,Объект.Ссылка);
		//КонецЦикла; 
		//rarus sergei 07.10.2016 mantis 7167 --
		Возврат;
	КонецЕсли;
	//rarus sergei 16.09.2016 mantis 7167 --
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь() ;
	Объект.Организация = ТекущийПользователь.Организация;
	Объект.ПодразделениеКомпании = ТекущийПользователь.ПодразделениеОрганизации;
	Объект.Автор = ТекущийПользователь;
	Объект.Менеджер = ТекущийПользователь;
	Объект.Дата = ТекущаяДата();
	Объект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");		//rarus tenkam 06.10.2016 mantis 7122 +
	//rarus vikhle 20.04.2020 mt 15695 +++	
	Scan_ВспомогательныеФункцииСервер.ЗаполнитьКомпаниюИКонтрагента(ТекущийПользователь,Объект.Компания,Объект.Контрагент);
	//rarus vikhle 20.04.2020 mt 15695 ---
	
	//rarus tenkam 30.11.2016 mantis 7750 ++
	Если ЗначениеЗаполнено(Объект.ДокументОснование) И Объект.Корректировка Тогда
		Элементы.ГруппаФон.ТолькоПросмотр = Ложь;
		Если Параметры.Свойство("ТребуетСогласования") Тогда
			Объект.ТребуетСогласования = Параметры.ТребуетСогласования;
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 30.11.2016 mantis 7750 --
		
	Если Не ЗначениеЗаполнено(Объект.Сторнирован) Тогда
		Объект.Сторнирован = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Корректировка) Тогда
		Объект.Корректировка = Ложь;
	КонецЕсли;

	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();

	//rarus tenkam 30.11.2016 mantis 7750 ++ отказались от согласования
	//// Визирование
	//Если Объект.Ссылка.Пустая() Тогда
	//	СтруктураОбъектовНастроек = Новый Структура;
	//	СтруктураОбъектовНастроек.Вставить("Организация", Объект.Организация);
	//	СтруктураОбъектовНастроек.Вставить("Подразделение", Объект.ПодразделениеКомпании);
	//	Объект.ТребуетСогласования = Scan_ПраваИНастройки.Scan_ПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек,
	//		ПланыВидовХарактеристик.Scan_ПраваИНастройки.ЗаявкаНаДействиеСогласованиеПоУмолчанию);
	//	Модифицированность = Ложь;
	//КонецЕсли;
	//Элементы.ТребуетСогласования.Доступность = Scan_ПраваИНастройки.Scan_ПолучитьПраваИНастройкиПользователя(ПользователиКлиентСервер.ТекущийПользователь(),
	//	ПланыВидовХарактеристик.Scan_ПраваИНастройки.РазрешитьИзменятьПараметрыСогласования);
	//rarus tenkam 30.11.2016 mantis 7750 --
	
	// Заполнение при вводе из карточки ТС
	Если Объект.Ссылка.Пустая() И Параметры.Свойство("ТС") Тогда
		НовоеТС = Объект.ТС.Добавить();
		НовоеТС.ТС = Параметры.ТС;
		НовоеТС.ДатаВвода = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	//Элементы.ПродуктыПоЗаявкеКарточкаЗаказа.Видимость = Ложь;
	ПриОткрытииНаСервере();		//ком. tenkam: (зачем второй раз?)
	ОбновитьСтатусСогласования();
	//rarus tenkam 17.10.2016 mantis 7688 ++	
	//ОбновитьНазваниеДокумента();
	ОбновитьЗаголовокФормы();
	//rarus tenkam 17.10.2016 mantis 7688 --
	ОбновитьОтображениеДанных();  //rarus sergei 15.09.2016 mantis 7167 + баг с отображением статуса
	
	//rarus tenkam 24.11.2017 mantis 11353 +++
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") ИЛИ 		
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") ИЛИ 		
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение") ИЛИ 		
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") ИЛИ 		
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") Тогда
		
			Объект.СпособДоставки = ПолучитьСпособДоставкиИзНастройки(); 		
		КонецЕсли;				
	КонецЕсли;
	//rarus tenkam 24.11.2017 mantis 11353 ---
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры   

&НаСервере
Процедура ПриОткрытииНаСервере()
	// Вызываем общий обработчик события настройки параметров выбора (смена ХО)
	Scan_УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаСоздания = ТекущаяДата();
		//tenkam ПЕРЕДЕЛАТЬ!
		//rarus tenkam 30.09.2016 mantis 7167 ++
		////rarus sergei 29.06.2016 mantis 7167 ++
		//Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//	Если Scan_ПраваИНастройки.Scan_Право("ВыводитьДиалогПриПроведении") Тогда
		//		Режим = РежимДиалогаВопрос.ДаНет;
		//		Ответ = Вопрос(НСтр("ru = 'Проведенный документ станет недоступен для редактирования. Вы уверены, что хотите провести документ?'"), Режим, 0);
		//		Если Ответ = КодВозвратаДиалога.Нет Тогда
		//			Отказ = Истина;
		//		КонецЕсли;
		//		
		//	КонецЕсли;
		//КонецЕсли;
		////rarus sergei 29.06.2016 mantis 7167 --
	//rarus tenkam 30.09.2016 mantis 7167 --
	КонецЕсли;
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//rarus tenkam 10.10.2016 mantis 7183 -- (закомментировала)
		////rarus tenkam 30.09.2016 mantis 7167 ++
		//Если Scan_ПраваИНастройки.Scan_Право("ВыводитьДиалогПриПроведении") Тогда
		//	Режим = РежимДиалогаВопрос.ДаНет;
		//	Ответ = Вопрос(НСтр("ru = 'Проведенный документ станет недоступен для редактирования. Вы уверены, что хотите провести документ?'"), Режим, 0);
		//	Если Ответ = КодВозвратаДиалога.Нет Тогда
		//		Отказ = Истина;
		//	КонецЕсли;
		//КонецЕсли;
		////rarus tenkam 30.09.2016 mantis 7167 --
		//rarus tenkam 10.10.2016 mantis 7183 --
		//Объект.ДатаПроведения = ТекущаяДата();			//rarus tenkam 31.10.2017 mantis 11695 +
		//rarus tenkam 18.08.2017 mantis 10932 +++
		Если Объект.СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Новая") И НЕ Объект.ПровереноАП Тогда
			Объект.ПровереноАП = Истина;
		КонецЕсли;
		//rarus tenkam 18.08.2017 mantis 10932 ---
		
	//ИначеЕсли ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда		//rarus tenkam 31.10.2017 mantis 11695 + 
	//	Объект.ДатаПроведения = Дата('00010101'); 												//rarus tenkam 31.10.2017 mantis 11695 +
	КонецЕсли;	
	//rarus tenkam 31.10.2017 mantis 11695 +++
	//Если ЭтаФорма.Модифицированность Тогда
	//	ЗаполнитьМенеджераНаСервере();	
	//КонецЕсли;
	//rarus tenkam 31.10.2017 mantis 11695 ---
	//rarus sergei 07.11.2016 mantis 7170 ++
	Если (Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") ИЛИ Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК")) И Объект.ПровереноАП = Истина Тогда   //rarus sergei 21.11.2016 mantis 7170 + добавил доп. требование
		Если НЕ ПроверитьНаличиеПрикрепленныхФайлов() Тогда
			Объект.ПровереноАП = Ложь;
			Отказ = Истина;		
		КонецЕсли;	
	КонецЕсли; 	
    //rarus sergei 07.11.2016 mantis 7170 --
			
	//rarus abrant 13.07.2017 mantis 9146 +++
	//нужно будет вернуть обратно после проверки!!
	Если Scan_ПраваИНастройки.Scan_Право("ВключитьУчетОказанныхУслуг") Тогда
		Если ПроверитьНеобходимостьПерерасчета(Объект.ХозОперация,Объект.СтатусЗаявки) Тогда
			Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение И
				Объект.ПровереноАП Тогда
				АПВсеОК = Истина;
				ВыполнитьПерерасчетОказанныхУслуг(АПВсеОК);
				Если Scan_ПраваИНастройки.Scan_Право("ВыполнятьПроверкуЗаполненияОказанныхУслуг") И НЕ АПВсеОК Тогда
					//Объект.ПровереноАП = НЕ Объект.ПровереноАП;
					Отказ = Истина;
				КонецЕсли;			
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//rarus abrant 13.07.2017 mantis 9146 ---
	
КонецПроцедуры

//rarus abrant 19.07.2017 mantis 9146 +++
&НаСервереБезКонтекста
Функция ПроверитьНеобходимостьПерерасчета(ХозОперация,СтатусЗаявки)
	Если ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка ИЛИ
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство ИЛИ
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение ИЛИ
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК ИЛИ
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК ИЛИ
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК	ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК ИЛИ
		ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
		Если СтатусЗаявки <> Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена И
			СтатусЗаявки <> Справочники.Scan_СтатусыЗаявокНаДействие.ДоставкаЗавершена И
			СтатусЗаявки <> Справочники.Scan_СтатусыЗаявокНаДействие.Аннулирована Тогда
			Возврат Истина;
		Иначе 
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//rarus abrant 19.07.2017 mantis 9146 ---

//rarus sergei 03.10.2016 mantis 7162 ++
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(ТекущийОбъект.ДатаИВремяПоручения) Тогда
		ТекущийОбъект.ДатаИВремяПоручения = НачалоДня(ЭтаФорма.Объект.ДатаИВремяПоручения) + (ЭтаФорма.ВремяПоручения - НачалоДня(ЭтаФорма.ВремяПоручения));
	КонецЕсли;
	//rarus sergei 07.10.2016 mantis 7609 ++
	Если ЗначениеЗаполнено(ТекущийОбъект.ДатаДоставкиПлановая) Тогда
		ТекущийОбъект.ДатаДоставкиПлановая = НачалоДня(ЭтаФорма.Объект.ДатаДоставкиПлановая) + (ЭтаФорма.ВремяДоставки - НачалоДня(ЭтаФорма.ВремяДоставки));
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекущийОбъект.ДатаПолучения) Тогда
		ТекущийОбъект.ДатаПолучения = НачалоДня(ЭтаФорма.Объект.ДатаПолучения) + (ЭтаФорма.ВремяПолучения - НачалоДня(ЭтаФорма.ВремяПолучения));
	КонецЕсли;
	 //rarus sergei 13.10.2016 mantis 7688 ++
	//Если ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК Тогда
	//	ТекущийОбъект.ДатаВыкупа = ТекущийОбъект.ДатаДоставкиПлановая; 
	//ИначеЕсли ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу Тогда
	//	ТекущийОбъект.ДатаВыкупа = ТекущийОбъект.ДатаПродажи;
	//	ТекущийОбъект.ДатаИВремяПоручения = ТекущийОбъект.ДатаВыкупа;
	//ИначеЕсли ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу Тогда
	//	ТекущийОбъект.ДатаВыкупа = ТекущийОбъект.ДатаПолучения;
	//	ТекущийОбъект.ДатаПродажи = ТекущийОбъект.ДатаПолучения;
	//	ТекущийОбъект.ДатаИВремяПоручения = ТекущийОбъект.ДатаПолучения;
	//ИначеЕсли ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК Тогда
	//	ТекущийОбъект.ДатаИВремяПоручения = ТекущийОбъект.ДатаПолучения;
	//КонецЕсли;
	//rarus sergei 13.10.2016 mantis 7688 --
	//rarus sergei 07.10.2016 mantis 7609 --
	
	//rarus tenkam 24.01.2017 mantis 8172 +++
	Если ЗначениеЗаполнено(ТекущийОбъект.ДатаПередачиВПроизводство) Тогда
		ТекущийОбъект.ДатаПередачиВПроизводство = НачалоДня(ЭтаФорма.Объект.ДатаПередачиВПроизводство) + (ЭтаФорма.ВремяПередачиВПроизводство - НачалоДня(ЭтаФорма.ВремяПередачиВПроизводство));
	КонецЕсли;
	//rarus tenkam 24.01.2017 mantis 8172 ---

	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюДокумента(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 ---

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Объект.ТребуетСогласования Тогда
		СтатусСогласования = Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка);
		Если НЕ Элементы.ТребуетСогласования.Доступность Тогда
			Если СтатусСогласования.Код = 0 Тогда 
				//если согласования нет вообще, то введем на основании новое
				Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик.Scan_ПраваИНастройки.ЗаявкаНаДействиеШаблонСогласования");
				Scan_ОбщегоНазначения_проф.СоздатьБизнесПроцессСогласования(Объект.Ссылка,Настройка);
			Иначе 
				ПоказатьЗначение(Новый ОписаниеОповещения("ПослеЗаписиЗавершение", ЭтотОбъект, Новый Структура("СтатусСогласования", СтатусСогласования)), СтатусСогласования.Ссылка);
                Возврат;
			КонецЕсли;
		ИначеЕсли Элементы.ТребуетСогласования.Доступность И СтатусСогласования.Код = 0 Тогда
			СоздатьОткрытьСогласование();
		КонецЕсли;
	КонецЕсли;
	ОбновитьЗаголовокФормы();	//rarus tenkam 17.10.2016 mantis 7688 +
	УправлениеДиалогомНаСервере();	//rarus tenkam 23.11.2016 mantis 7750 +
	

	//rarus tenkam 01.12.2016 mantis 7750 ++
	//rarus tenkam 20.01.2017 mantis 8172 ++
	Если Объект.ХозОперация <> ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу") И
		Объект.ХозОперация <> ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу") И
		Объект.ХозОперация <> ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") И		//rarus tenkam 16.08.2017 mantis 9319 +
		(НЕ Scan_ВспомогательныеФункцииСервер.ЭтоЗаявкаCПеревозкой(Объект.Ссылка)) Тогда
		Если Объект.СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе") И Scan_ВспомогательныеФункцииСервер.НетПеремещений(Объект.Ссылка) Тогда
	//Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу") ИЛИ
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ЗаявкаПокупкаУПоставщикаСПостановкойНаХранение") ИЛИ
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаВПроизводство") Тогда
	//	Если Объект.СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Исполнена") И Scan_ВспомогательныеФункцииСервер.НетПеремещений(Объект.Ссылка) Тогда
	//rarus tenkam 20.01.2017 mantis 8172 --
			СообщениеОбОшибке = "";
			ПеремещениеОтказ = Ложь;
			ПеремещениеСсылка = Scan_ВспомогательныеФункцииСервер.СформироватьПеремещениеИзделийПоЗаявкеНаДействие(Объект.Ссылка, СообщениеОбОшибке, ПеремещениеОтказ);
			Если ПеремещениеОтказ Тогда
				Сообщить(СообщениеОбОшибке);
			Иначе
				//rarus FominskiyAS 25.04.2019  mantis 14191 +++
				//Сообщить("Сформировано " + ПеремещениеСсылка + ".");
				Сообщить(НСтр("ru = 'Сформировано '; en = 'Formed '") + ПеремещениеСсылка + ".");
				//rarus FominskiyAS 25.04.2019  mantis 14191 ---  
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 01.12.2016 mantis 7750 --
	
	
		
КонецПроцедуры

//rarus sergei 07.10.2016 mantis 7609 ++
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	//rarus sergei 07.10.2016 mantis 7167 ++ баг слетал статус при перепроведении и перезаписи документа
	Если ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка ИЛИ
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение ИЛИ  
		ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство ИЛИ  
		//rarus tenkam 08.02.2017 mantis 8331 ---
		ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК ИЛИ
		ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК	ИЛИ
		ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК	ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +
		ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК ИЛИ
		ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
		Если ТекущийОбъект.ПровереноАП = Истина И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			Для каждого строка Из Объект.ПродуктыПоЗаявке Цикл
				// rarus tenkam 12.08.2019 mantis 14427 +++
				//строка.СтатусИзделия = Scan_ВспомогательныеФункцииСервер.ЧтениеСтатусаИзделияИзРегистраСведений(строка.Продукт.Изделие,ТекущийОбъект.Ссылка); 	
				строка.СтатусИзделия = Scan_ВспомогательныеФункцииСервер.ЧтениеСтатусаИзделияИзРегистраСведений(строка.Изделие, ТекущийОбъект.Ссылка);
				// rarus tenkam 12.08.2019 mantis 14427 ---
				Строка.ТипТоплива = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
			КонецЦикла; 				
		Иначе
			Для каждого строка Из Объект.ПродуктыПоЗаявке Цикл
				строка.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.Новая; 	
				Строка.ТипТоплива = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	//rarus BProg_Dekin 11.11.2019 0014452 ++ "ЕстьАдресДоставки" Удален
	////rarus sergei 07.10.2016 mantis 7167 -- 
	//Документы.Scan_ЗаявкаНаДействие.УстановитьПризнакЕстьАдресДоставки(Объект.Ссылка);	//rarus tenkam 18.12.2016 mantis 7185 +
	////rarus tenkam 10.05.2017 mantis 9444 +++
	//rarus BProg_Dekin 11.11.2019 0014452 --
	
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("ПоменятьСтатус") Тогда
	//rarus anch 16.05.2017 mantis 9444 +++	
		//Если (ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПередачаВПроизводство ИЛИ	
		//	(ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаВПроизводство  ИЛИ
		//	(ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу ИЛИ
		//	(ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаСПостановкойНаХранение ИЛИ
		//	(ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПостановкаНаХранение ИЛИ
		//	(ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу ИЛИ
		//	(ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу ИЛИ
		//	(ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу Тогда
		Если (ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПередачаВПроизводство ИЛИ	
			ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаВПроизводство  ИЛИ
			ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу ИЛИ
			ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаСПостановкойНаХранение ИЛИ
			ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПостановкаНаХранение ИЛИ
			ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу ИЛИ
			ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу ИЛИ
			ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь ИЛИ	//rarus tenkam 15.08.2017 mantis 9319 +			
			ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу) Тогда
	//rarus anch 16.05.2017 mantis 9444 ---
		Scan_ВспомогательныеФункцииСервер.УстановитьСтатусЗаявкиНаДействие(Объект.Ссылка, ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе"));	
		КонецЕсли;
	//rarus anch 16.05.2017 mantis 9444 +++
	КонецЕсли;
	//rarus anch 16.05.2017 mantis 9444 ---
	//rarus tenkam 10.05.2017 mantis 9444 ---
	//rarus bonmak 03.11.2020 14375 ++
	ПрямаяПродажа = Ложь;
	Если ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь Тогда
		Если ТекущийОбъект.Ссылка.ПродуктыПоЗаявке.Количество() > 0 Тогда 
			ПрямаяПродажа = Scan_ВспомогательныеФункцииСервер.ПолучитьВидПродажи(ТекущийОбъект.Ссылка.ПродуктыПоЗаявке[0].Изделие);
		КонецЕсли;
	КонецЕсли;
	//rarus bonmak 03.11.2020 14375 --

	//rarus tenkam 27.10.2017 mantis 11368 +++
	Если ТекущийОбъект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Новая И
		ТекущийОбъект.ПровереноАП И ТекущийОбъект.Проведен И
		ТекущийОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь И
		Scan_ВспомогательныеФункцииСервер.ЕстьДатаПродажиПоВсемИзделиямЗаявки(ТекущийОбъект.Ссылка, ПрямаяПродажа) Тогда //rarus bonmak 03.11.2020 14375 добавил второй параметр прямая продажа
		Scan_ВспомогательныеФункцииСервер.УстановитьСтатусЗаявкиНаДействие(Объект.Ссылка, Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена);
	КонецЕсли;
	//rarus tenkam 27.10.2017 mantis 11368 ---
	
	//rarus tenkam 12.12.2017 mantis 11858 +++
	//rarus BProg_Gladkov 05.05.2020 0015962 ++ ОтправитьПФ
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("ОтправитьАннулированнуюЗаявкуНаДействие")		
		И РегистрыСведений.Scan_ОтправленныеПисьма.ЕстьОтправленноеПисьмо(ТекущийОбъект.Ссылка)
		И Scan_ПраваИНастройки.Scan_Право("АвтоматическаяОтправкаПФАннулированнойЗаявкиНаДействие") 
		И ТекущийОбъект.Сторнирован 
	Тогда 
		РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПФ(ТекущийОбъект.Ссылка);
	КонецЕсли;
	//rarus BProg_Gladkov 05.05.2020 0015962 -- 
	//rarus tenkam 12.12.2017 mantis 11858 ---	
	
КонецПроцедуры
//rarus sergei 07.10.2016 mantis 7609 --

&НаКлиенте
Процедура ПослеЗаписиЗавершение(ДополнительныеПараметры) Экспорт
    
    СтатусСогласования = ДополнительныеПараметры.СтатусСогласования;
	
	//если согласование есть, то просто откроем его форму

КонецПроцедуры

// Обработчик события возникающего на сервере при сохранении значений реквизитов и настроек формы.
//
// Параметры:
//  Настройки - Соответствие - Значения сохраняемых реквизитов и настроек формы.
//
&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	// Вызываем общий обработчик события
	Scan_УправлениеДиалогомДокументаСервер.ПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

// Обработчик события возникающего на сервере при восстановлении значений реквизитов из сохраненных настроек формы.
//
// Параметры:
//  Настройки - Соответствие - Значения сохраненных реквизитов и настроек формы.
//
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	// Вызываем общий обработчик события
	Scan_УправлениеДиалогомДокументаСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);

КонецПроцедуры

//rarus tenkam 22.11.2016 TLMS 010 дампы (в клиент-серверной базе - плохо)
////rarus tenkam 13.10.2016 mantis 7688 ++
//&НаКлиенте
//Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
//	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
//		СтандартнаяОбработка = Ложь;
//		Закрыть(Истина);
//	КонецЕсли;
//КонецПроцедуры     
////rarus tenkam 13.10.2016 mantis 7688 --
//rarus tenkam 22.11.2016 TLMS 010 --

////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ

&НаКлиенте
Процедура ДоговорНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Грузополучатель) Тогда			
		СтандартнаяОбработка = Ложь;
		//rarus sergei 15.09.2016 mantis 7160 ++
		Если  ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
        	ЗначениеОтбора = Новый Структура("Владелец", Объект.Грузополучатель);
		Иначе
			Владелец = ПолучитьКонтрагентаПоДилеру(Объект.Грузополучатель);
			ЗначениеОтбора = Новый Структура("Владелец", Владелец);
		КонецЕсли; 
		//rarus sergei 15.09.2016 mantis 7160 --
		//rarus tenkam 16.02.2017 mantis 7177 +++
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") ИЛИ 	//rarus tenkam 14.08.2017 mantis 9319 +
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") ИЛИ 	//rarus tenkam 26.09.2017 mantis 10742 +
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") Тогда
			
			// rarus tenkam 30.12.2020 mantis 16934 +++
			//ЗначениеОтбора.Вставить("ВидДоговора", ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.Соглашение"));	
		    МассивВидов = Новый Массив;
			МассивВидов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.Соглашение"));
			МассивВидов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.ДопСоглашениеКСОП"));
			
			Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") Тогда
				МассивВидов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.СПокупателем"));
			КонецЕсли;
			//rarus kabany 08.04.2021 17611 +++
			Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу")
				//rarus kabany 14.04.2021 17630 +++
				Или Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") 
				Или Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") Тогда				
				//rarus kabany 14.04.2021 17630 ---
				МассивВидов.Добавить(ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.СПокупателем"));
			КонецЕсли;
			//rarus kabany 08.04.2021 17611 ---
			ЗначениеОтбора.Вставить("ВидыДоговора", МассивВидов);
			// rarus tenkam 30.12.2020 mantis 16934 ---
		КонецЕсли;		
		//rarus tenkam 16.02.2017 mantis 7177 ---
		
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		Результат = ОткрытьФорму("Справочник.Scan_ДоговорыВзаиморасчетов.ФормаВыбора",ПараметрыФормы,Элементы.Договор); 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	ДоговорПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДоговорПриИзмененииНаСервере() 
	Если ЗначениеЗаполнено(Объект.Договор) Тогда
		//rarus pechek 02.04.2020 15672+++
		//Для каждого строка Из Объект.Договор.КонтактныеЛицаПоДоговору Цикл
		//	МассивНайденныхСтрок = Объект.КонтактныеЛица.НайтиСтроки(Новый Структура("КонтактноеЛицо",строка.КонтактноеЛицо));
		//	Если МассивНайденныхСтрок.Количество()= 0 Тогда
		//		ЗаполнитьКонтактнуюинформацию(строка.КонтактноеЛицо);
		//	КонецЕсли;	
		//КонецЦикла; 
		//rarus pechek 02.04.2020 15672 ---
		Если (НЕ ЗначениеЗаполнено(Объект.Грузополучатель)) ИЛИ 
			(ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") И Объект.Грузополучатель <> Объект.Договор.Владелец) Тогда 
			//(ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.Грузополучатель.Контрагент <> Объект.Договор.Владелец) Тогда	//rarus tenkam 24.10.2017 mantis 11439 +
			Объект.Грузополучатель = Объект.Договор.Владелец;
			//rarus bonmak 15.04.2020 14456 ++
			//rarus bonmak 03.06.2020 16165 ++
			Если Объект.Договор.Владелец <> Объект.МестоДоставки.Контрагент Тогда
			//Если НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.МестоДоставки.СтанцияДилера, Объект.Договор.Владелец) Тогда 
			//rarus bonmak 03.06.2020 16165 --
			//rarus bonmak 15.04.2020 14456 --
				Объект.МестоДоставки = Справочники.Scan_МестаХранения.ПустаяСсылка();
			КонецЕсли;			
			Если Объект.КонтактныеЛица.Количество()>0 
			//rarus bonmak 15.04.2020 14456 ++
			//rarus bonmak 03.06.2020 16165 ++
			И Объект.Договор.Владелец <> Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец Тогда
			//И НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец, Объект.Договор.Владелец) Тогда 
			//rarus bonmak 03.06.2020 16165 --
			//rarus bonmak 15.04.2020 14456 --
				
				Объект.КонтактныеЛица.Очистить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоговорСоздание(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыСоздания = Новый Структура;
	//rarus sergei 15.09.2016 mantis 7160 ++

	Если  ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
		ПараметрыСоздания.Вставить("Владелец", Объект.Грузополучатель);
	Иначе
		Владелец = ПолучитьКонтрагентаПоДилеру(Объект.Грузополучатель);
		ПараметрыСоздания.Вставить("Владелец",  Владелец);
	КонецЕсли; 
	//rarus sergei 15.09.2016 mantis 7160 --

	ПараметрыСоздания.Вставить("Наименование",Элемент.ТекстРедактирования);  
	ОткрытьФорму("Справочник.Scan_ДоговорыВзаиморасчетов.ФормаОбъекта", ПараметрыСоздания, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	ГрузополучательПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГрузополучательПриИзмененииНаСервере()
	//rarus sergei 15.09.2016 mantis 7160 ++

	Если ЗначениеЗаполнено(Объект.Грузополучатель) Тогда
		//rarus bonmak 15.04.2020 14456 ++
		//rarus bonmak 03.06.2020 16165 ++
		//rarus kabany 15.04.2021 17617 +++ // добавил условие по хоз операциям
		Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК
			ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК
			ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
			Иначе
			Если (ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") И Объект.Грузополучатель <> Объект.МестоДоставки.Контрагент) Тогда 
				//Если (ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") и НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.МестоДоставки.СтанцияДилера, Объект.Грузополучатель)) Тогда 
				//rarus bonmak 03.06.2020 16165 --	
				//rarus bonmak 15.04.2020 14456 --
				//(ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.Грузополучатель.Контрагент <> Объект.МестоДоставки.Контрагент) Тогда
				Объект.МестоДоставки = Справочники.Scan_МестаХранения.ПустаяСсылка();	
			КонецЕсли;
		КонецЕсли;
		//rarus kabany 15.04.2021 17617 ---
		Если (ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") И Объект.Грузополучатель <> Объект.Договор.Владелец) Тогда 
			//(ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.Грузополучатель.Контрагент <> Объект.Договор.Владелец) Тогда	//rarus tenkam 24.10.2017 mantis 11439 +
			Объект.Договор = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();	
		КонецЕсли;
		Если Объект.КонтактныеЛица.Количество()>0 Тогда
			Если (ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") 
				//rarus bonmak 15.04.2020 14456 ++
				//rarus bonmak 03.06.2020 16165 ++
				И Объект.Грузополучатель <> Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец) Тогда 
				//И НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец, Объект.Грузополучатель)) Тогда 
				//rarus bonmak 03.06.2020 16165 --
				//rarus bonmak 15.04.2020 14456 --
				 
				//(ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.Грузополучатель.Контрагент <>Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец) Тогда	//rarus tenkam 24.10.2017 mantis 11439 +
				Объект.КонтактныеЛица.Очистить();	
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	//rarus sergei 15.09.2016 mantis 7160 --

КонецПроцедуры

&НаКлиенте
Процедура МестоДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут", ЛОЖЬ);
	Если объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаВПроизводство") Тогда
		Если ЗначениеЗаполнено(Объект.Подрядчик) Тогда
			//rarus sergei 15.09.2016 mantis 7160 ++
			Если  ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ЗначениеОтбора.Вставить("Контрагент",Объект.Подрядчик);
			Иначе
				Контрагент = ПолучитьКонтрагентаПоДилеру(Объект.Подрядчик);
				ЗначениеОтбора.Вставить("Контрагент",  Контрагент);
			КонецЕсли; 
			//rarus sergei 15.09.2016 mantis 7160 --
		КонецЕсли;
		//rarus tenkam 25.01.2017 mantis 8172 ++
	ИначеЕсли Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу") ИЛИ 
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу") Тогда 	//rarus tenkam 27.01.2017 mantis 8396 +
		Если ЗначениеЗаполнено(Объект.Хранитель) Тогда
			Если  ТипЗнч(Объект.Хранитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ЗначениеОтбора.Вставить("Контрагент",Объект.Хранитель);
			Иначе
				Контрагент = ПолучитьКонтрагентаПоДилеру(Объект.Хранитель);
				ЗначениеОтбора.Вставить("Контрагент",  Контрагент);
			КонецЕсли; 
		КонецЕсли;
	//rarus tenkam 25.01.2017 mantis 8172 --
	Иначе
		Если ЗначениеЗаполнено(Объект.Грузополучатель) Тогда
			//rarus sergei 15.09.2016 mantis 7160 ++
			Если  ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ЗначениеОтбора.Вставить("Контрагент",Объект.Грузополучатель);
			Иначе
				Контрагент = ПолучитьКонтрагентаПоДилеру(Объект.Грузополучатель);
				ЗначениеОтбора.Вставить("Контрагент",  Контрагент);
			КонецЕсли; 
			//rarus sergei 15.09.2016 mantis 7160 --
		КонецЕсли;
		
	КонецЕсли; 
	//rarus tenkam 22.03.2017 mantis 9116 +++
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") Тогда 
		ЗначениеОтбора.Вставить("ТипСклада", ПредопределенноеЗначение("Перечисление.Scan_ТипыСклада.АдресДоставки"));
	//rarus tenkam 08.02.2017 mantis 8331 +++
	ИначеЕсли Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение") ИЛИ
		 Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПостановкаНаХранение") Тогда 	//rarus tenkam 28.07.2017 mantis 10597 +
		ЗначениеОтбора.Вставить("ТипСклада", ПредопределенноеЗначение("Перечисление.Scan_ТипыСклада.Хранение"));
	ИначеЕсли Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") ИЛИ
		 Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПередачаВПроизводство") Тогда 	//rarus tenkam 28.07.2017 mantis 10597 + 
		ЗначениеОтбора.Вставить("ТипСклада", ПредопределенноеЗначение("Перечисление.Scan_ТипыСклада.Производство"));
	//rarus tenkam 08.02.2017 mantis 8331 ---
	КонецЕсли;
	//rarus tenkam 22.03.2017 mantis 9116 ---
	
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора",ПараметрыФормы,Элементы.МестоДоставки); 
	
КонецПроцедуры

&НаКлиенте
Процедура МестоДоставкиПриИзменении(Элемент)
	МестоДоставкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура МестоДоставкиПриИзмененииНаСервере()
	//rarus sergei 07.10.2016 mantis 7609 ++	
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение  
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство  
		//rarus tenkam 08.02.2017 mantis 8331 ---
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК		//rarus tenkam 26.09.2017 mantis 10742 +
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
		Если ЗначениеЗаполнено(Объект.МестоДоставки) и ЗначениеЗаполнено(Объект.МестоПолучения) И Объект.МестоДоставки = Объект.МестоПолучения Тогда
			Сообщить("Место доставки и место получения не должны совпадать");
			Объект.МестоДоставки = Справочники.Scan_МестаХранения.ПустаяСсылка();	
		КонецЕсли;
			 	
	КонецЕсли;
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение  
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство  
		//rarus tenkam 08.02.2017 mantis 8331 ---
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК		//rarus tenkam 26.09.2017 mantis 10742 +
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК Тогда
		ЗаполнитьДатуПолучения();
	ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
		ЗаполнитьДатуДоставки();
	КонецЕсли;
	//rarus sergei 07.10.2016 mantis 7609 --

	//rarus sergei 15.09.2016 mantis 7160 ++
	Если НЕ Объект.МестоДоставки.Пустая() Тогда
		Если (НЕ ЗначениеЗаполнено(Объект.Грузополучатель)) ИЛИ 
			(ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") 
			//rarus bonmak 15.04.2020 14456 ++
			//rarus bonmak 03.06.2020 16165 ++
			И Объект.Грузополучатель <> Объект.МестоДоставки.Контрагент) Тогда
			//И НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.МестоДоставки.СтанцияДилера, Объект.Грузополучатель)) Тогда 
			//rarus bonmak 03.06.2020 16165 --
			//rarus bonmak 15.04.2020 14456 -- 
			//(ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.Грузополучатель.Контрагент <> Объект.МестоДоставки.Контрагент) Тогда	//rarus tenkam 24.10.2017 mantis 11439 +
			Если Элементы.Грузополучатель.Видимость Тогда	//rarus tenkam 27.01.2017 mantis 8296 +
				//rarus bonmak 15.04.2020 14456 ++
				//rarus bonmak 03.06.2020 16165 ++
				//rarus kabany 15.04.2021 17617 +++ // добавил условие по хоз операциям
				Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК
					ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК
					ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
					Иначе
					Объект.Грузополучатель = Объект.МестоДоставки.Контрагент;
				КонецЕсли;
				//rarus kabany 15.04.2021 17617 ---
				//Объект.Грузополучатель = Справочники.Scan_Контрагенты.ПустаяСсылка();
				//rarus bonmak 03.06.2020 16165 --
				//rarus bonmak 15.04.2020 14456 --
			КонецЕсли;
			//rarus bonmak 15.04.2020 14456 ++
			//rarus bonmak 03.06.2020 16165 ++
			Если Объект.МестоДоставки.Контрагент <> Объект.Договор.Владелец Тогда
			//Если НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.МестоДоставки.СтанцияДилера, Объект.Договор.Владелец) Тогда 
			//rarus bonmak 03.06.2020 16165 --	
			//rarus bonmak 15.04.2020 14456 --
				Объект.Договор = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
			КонецЕсли;			
			Если Объект.КонтактныеЛица.Количество() > 0 
				//rarus bonmak 15.04.2020 14456 ++
				//rarus bonmak 03.06.2020 16165 ++
				И Объект.МестоДоставки.Контрагент <> Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец Тогда
				//И Объект.МестоДоставки.СтанцияДилера <> Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец Тогда 
				//rarus bonmak 03.06.2020 16165 --
				//rarus bonmak 15.04.2020 14456 --
				Объект.КонтактныеЛица.Очистить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//Если ((ЗначениеЗаполнено(Объект.Грузополучатель) И ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") И Объект.Грузополучатель <> Объект.МестоДоставки.Контрагент) ИЛИ (ЗначениеЗаполнено(Объект.Грузополучатель) И ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.Грузополучатель.Контрагент <> Объект.МестоДоставки.Контрагент) ИЛИ НЕ ЗначениеЗаполнено(Объект.Грузополучатель)) И Объект.МестоДоставки.Пустая() Тогда
	//	Объект.Грузополучатель = Объект.МестоДоставки.Контрагент;
	//	Если ЗначениеЗаполнено(Объект.Договор) Тогда
	//		Объект.Договор = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
	//	КонецЕсли;
	//	Если Объект.КонтактныеЛица.Количество()>0 Тогда
	//		Объект.КонтактныеЛица.Очистить();	
	//	КонецЕсли; 
	//КонецЕсли;
	//rarus sergei 15.09.2016 mantis 7160 --
	
	//rarus pechek 02.04.2020 mantis 15672 +++
	Если ЗначениеЗаполнено(Объект.МестоДоставки) Тогда
		Объект.КонтактныеЛица.Очистить();
		ТекстЗапроса = "ВЫБРАТЬ
		               |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо КАК КонтактноеЛицо
		               |ИЗ
		               |	РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
		               |ГДЕ
		               |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.МестоХранения = &МестоХранения
		               |	И Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
		               |	И Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо.Недействителен = ЛОЖЬ		// rarus tenkam 18.08.2020 mantis 16386 +
		               |	И Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо.ПометкаУдаления = ЛОЖЬ";	// rarus tenkam 18.08.2020 mantis 16386 +
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("МестоХранения",Объект.МестоДоставки);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			ЗаполнитьКонтактнуюинформацию(Выборка.КонтактноеЛицо);
		КонецЦикла;
	КонецЕсли;
	//rarus pechek 02.04.2020 mantis 15672 --
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеЛицаКонтактноеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//rarus sergei 19.10.2016 mantis 7162 ++ замечания в комментарии к постановке в Mantis	
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу") Тогда	//rarus tenkam 02.11.2016 mantis 7609 +
		Если ЗначениеЗаполнено(Объект.Хранитель) Тогда
			СтандартнаяОбработка = Ложь;
			
			
			Если ТипЗнч(Объект.Хранитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ЗначениеОтбора = Новый Структура("Владелец", Объект.Хранитель);
			Иначе
				Владелец = ПолучитьКонтрагентаПоДилеру(Объект.Хранитель);
				ЗначениеОтбора = Новый Структура("Владелец", Владелец);
			КонецЕсли;
			
			
			ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
			Результат = ОткрытьФорму("Справочник.Scan_КонтактныеЛица.ФормаВыбора",ПараметрыФормы,Элементы.КонтактныеЛицаКонтактноеЛицо); 
		КонецЕсли;	
		
	//rarus sergei 19.10.2016 mantis 7162 --	
	Иначе 
		Если ЗначениеЗаполнено(Объект.Грузополучатель) Тогда
			СтандартнаяОбработка = Ложь;
			
			//rarus sergei 15.09.2016 mantis 7160 ++
			Если ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ЗначениеОтбора = Новый Структура("Владелец", Объект.Грузополучатель);
			Иначе
				Владелец = ПолучитьКонтрагентаПоДилеру(Объект.Грузополучатель);
				ЗначениеОтбора = Новый Структура("Владелец", Владелец);
			КонецЕсли;
			//rarus sergei 15.09.2016 mantis 7160 --
			
			ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
			Результат = ОткрытьФорму("Справочник.Scan_КонтактныеЛица.ФормаВыбора",ПараметрыФормы,Элементы.КонтактныеЛицаКонтактноеЛицо); 
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеЛицаКонтактноеЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	МассивСтрок=Объект.КонтактныеЛица.НайтиСтроки(Новый Структура("КонтактноеЛицо",ВыбранноеЗначение));
	Если МассивСтрок.Количество()> 0 и МассивСтрок[0].НомерСтроки <>  ТекущийЭлемент.ТекущаяСтрока+1 Тогда
		СтандартнаяОбработка=Ложь;              
		Возврат; 
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ИндексТекущейСтроки = Объект.КонтактныеЛица.Индекс(Элементы.КонтактныеЛица.ТекущиеДанные);
	Объект.КонтактныеЛица.Удалить(ИндексТекущейСтроки);  
	ЗаполнитьКонтактнуюинформацию(ВыбранноеЗначение);

КонецПроцедуры

//rarus sergei 03.10.2016 mantis 7162 ++
&НаКлиенте
Процедура ПодрядчикПриИзменении(Элемент)
	ПодрядчикПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПодрядчикПриИзмененииНаСервере()
	//rarus tenkam 03.11.2016 mantis 7609 ++ (переделала)
	Если ЗначениеЗаполнено(Объект.Подрядчик) Тогда
		//rarus sergei 03.11.2016 mantis 7777 ++
		Если ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") И ЗначениеЗаполнено(Объект.ДоговорСПоставщиком) И Объект.ДоговорСПоставщиком.Владелец <> Объект.Подрядчик Тогда
			
			Объект.ДоговорСПоставщиком = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();	
		//ИначеЕсли ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Дилеры") И ЗначениеЗаполнено(Объект.ДоговорСПоставщиком) И Объект.ДоговорСПоставщиком.Владелец <> Объект.Подрядчик.Контрагент Тогда	//rarus tenkam 24.10.2017 mantis 11439 +
		//	Объект.ДоговорСПоставщиком = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();	//rarus tenkam 24.10.2017 mantis 11439 +
		КонецЕсли; 
		//Если (ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") И Объект.Подрядчик <> Объект.ДоговорСПоставщиком.Владелец) ИЛИ 
		//	(ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.Подрядчик.Контрагент <> Объект.ДоговорСПоставщиком.Владелец) ИЛИ 
		//	Объект.ДоговорСПоставщиком.ВидДоговора <> ПредопределенноеЗначение("Перечисление.Scan_ВидыДоговоров.СПоставщиком") Тогда
		//	
		//	Объект.ДоговорСПоставщиком = ПолучитьДоговорСПоставщиком();
		//КонецЕсли;
		//rarus sergei 03.11.2016 mantis 7777 --
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК")  Тогда  //ИЛИ Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") //rarus sergei 08.11.2016 mantis 7609 + исправил 
			
			Объект.Грузоотправитель = Объект.Подрядчик;	
		КонецЕсли;	
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(Объект.Подрядчик) Тогда
	//	Если (ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") И Объект.Подрядчик <> Объект.ДоговорСПоставщиком.Владелец) ИЛИ (ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.Подрядчик.Контрагент <> Объект.ДоговорСПоставщиком.Владелец ) Или Объект.ДоговорСПоставщиком.ВидДоговора <> Перечисления.Scan_ВидыДоговоров.СПоставщиком Тогда
	//		ДоговорСПоставщиком = ПолучитьДоговорСПоставщиком();
	//		Если ДоговорСПоставщиком = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
	//			Объект.ДоговорСПоставщиком = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
	//		Иначе
	//			Объект.ДоговорСПоставщиком = ДоговорСПоставщиком;
	//		КонецЕсли;
	//	КонецЕсли;
	//	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
	//		Объект.Грузоотправитель = Объект.Подрядчик;	
	//		ЗаполнитьМестоПолучения();
	//	ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК 
	//		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК 
	//		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК 
	//		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу Тогда
	//		Объект.Грузоотправитель = Объект.Подрядчик;
	//	КонецЕсли;	
	//КОнецЕсли;
	// rarus tenkam 03.11.2016 mantis 7609 -- 
КонецПроцедуры

&НаКлиенте
Процедура ДоговорСПоставщикомПриИзменении(Элемент)
	ДоговорСПоставщикомПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДоговорСПоставщикомПриИзмененииНаСервере()
	//rarus sergei 03.11.2016 mantis 7777 ++
	//Если ЗначениеЗаполнено(Объект.ДоговорСПоставщиком) И Объект.ДоговорСПоставщиком.ВидДоговора <> Перечисления.Scan_ВидыДоговоров.СПоставщиком Тогда
	//	Объект.ДоговорСПоставщиком = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
	//	Сообщить("Выберите договор с видом ""С поставщиком""");
	//КонецЕсли;
	//rarus sergei 03.11.2016 mantis 7777 --
	Если ЗначениеЗаполнено(Объект.ДоговорСПоставщиком) И НЕ ЗначениеЗаполнено(Объект.Подрядчик) Тогда
		Объект.Подрядчик = Объект.ДоговорСПоставщиком.Владелец;	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДоговорСПоставщикомНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//rarus sergei 03.11.2016 mantis 7777 ++
	//ЗначениеОтбора = Новый Структура("ВидДоговора", ПолучитьВидДоговора("СПоставщиком"));
	//rarus sergei 03.11.2016 mantis 7777 --
	ЗначениеОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Объект.Подрядчик) Тогда
		Если  ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ЗначениеОтбора.Вставить("Владелец", Объект.Подрядчик);	
		Иначе
			Владелец = ПолучитьКонтрагентаПоДилеру(Объект.Подрядчик);
			ЗначениеОтбора.Вставить("Владелец", Владелец);
		КонецЕсли;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);	
	Результат = ОткрытьФорму("Справочник.Scan_ДоговорыВзаиморасчетов.ФормаВыбора",ПараметрыФормы,Элементы.ДоговорСПоставщиком);

КонецПроцедуры
//rarus sergei 03.10.2016 mantis 7162 --

//rarus sergei 07.10.2016 mantis 7609 ++
&НаКлиенте
Процедура МестоПолученияПриИзменении(Элемент)
	МестоПолученияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура МестоПолученияПриИзмененииНаСервере()
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение  
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство  
		//rarus tenkam 08.02.2017 mantis 8331 ---
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК		//rarus tenkam 26.09.2017 mantis 10742 +
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
		Если ЗначениеЗаполнено(Объект.МестоДоставки) и ЗначениеЗаполнено(Объект.МестоПолучения) И Объект.МестоДоставки = Объект.МестоПолучения Тогда
			Сообщить("Место получение и место доставки не должны совпадать");
			Объект.МестоПолучения = Справочники.Scan_МестаХранения.ПустаяСсылка();	
		КонецЕсли;
	КонецЕсли;
	
	//rarus tenkam 12.07.2017 mantis 10113 +++
	////rarus sergei 21.11.2016 mantis 7609 ++
	//Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка") ИЛИ 
	//	//rarus tenkam 08.02.2017 mantis 8331 +++
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение") ИЛИ 
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") ИЛИ 
	//	//rarus tenkam 08.02.2017 mantis 8331 ---
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") Тогда
	//	Если ЗначениеЗаполнено(Объект.Грузоотправитель) и ЗначениеЗаполнено(Объект.МестоПолучения) Тогда
	//		Если (ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Контрагенты") И 
	//			Объект.Грузоотправитель <> Объект.МестоПолучения.Контрагент) ИЛИ 
	//			(ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Дилеры") И 
	//			Объект.Грузоотправитель.Контрагент <> Объект.МестоПолучения.Контрагент) Тогда
	//			Объект.Грузоотправитель = Справочники.Scan_Дилеры.ПустаяСсылка();		
	//		КонецЕсли; 	 	
	//	КонецЕсли; 
	//КонецЕсли;	
	////rarus sergei 21.11.2016 mantis 7609 --
	//rarus tenkam 12.07.2017 mantis 10113 ---
	
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство
		//rarus tenkam 08.02.2017 mantis 8331 ---
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК		//rarus tenkam 26.09.2017 mantis 10742 +
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК Тогда
		ЗаполнитьДатуПолучения();
	ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
		ЗаполнитьДатуДоставки();		
	КонецЕсли;	
	
	//rarus tenkam 14.08.2017 mantis 9319 +++
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь ИЛИ
		Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь Тогда		//rarus tenkam 26.09.2017 mantis 10742 +
		Если ЗначениеЗаполнено(Объект.МестоПолучения) Тогда
			Объект.Грузоотправитель = Объект.МестоПолучения.Контрагент; //rarus bonmak 15.04.2020 14456  //rarus bonmak 03.06.2020 16165 
		Иначе
			Объект.Грузоотправитель = Справочники.Scan_Контрагенты.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 14.08.2017 mantis 9319 ---
КонецПроцедуры

&НаКлиенте
Процедура ДатаПолученияПриИзменении(Элемент)
	ДатаПолученияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаПолученияПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ДатаПолучения) Тогда
		Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК ТОгда
			
			Объект.ДатаВыкупа = Объект.ДатаПолучения;
			Объект.ДатаИВремяПоручения = Объект.ДатаПолучения;
			ВремяПоручения = ВремяПолучения;		
			
		ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК ТОгда
			
			Объект.ДатаИВремяПоручения = Объект.ДатаПолучения;
			
		ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК ТОгда
			
			Объект.ДатаПродажи = Объект.ДатаПолучения;
			Объект.ДатаИВремяПоручения = Объект.ДатаПолучения;
		ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК ТОгда
			объект.ДатаПродажи = Объект.ДатаПолучения;
			Объект.ДатаВыкупа = Объект.ДатаПолучения;
			Объект.ДатаИВремяПоручения = Объект.ДатаПолучения;
	
		КонецЕсли;
		Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК 
				ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК 
				ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
				Объект.ДатаВыкупа = Объект.ДатаПолучения;
				ЗаполнитьДатуДоставки();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВремяПолученияПриИзменении(Элемент)
	ВремяПолученияПриИзмененииНаСервере();	
КонецПроцедуры

&НаСервере 
Процедура ВремяПолученияПриИзмененииНаСервере()
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство
		//rarus tenkam 08.02.2017 mantis 8331 ---
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК		//rarus tenkam 26.09.2017 mantis 10742 +
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК 
		ИЛИ  Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
		Если ЗначениеЗаполнено(ВремяПолучения) Тогда
			ВремяПоручения = ВремяПолучения;	
		КонецЕсли; 
	КонецЕсли;
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
		ЗаполнитьДатуДоставки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаДоставкиПлановаяПриИзменении(Элемент)
	ДатаДоставкиПлановаяПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаДоставкиПлановаяПриИзмененииНаСервере()
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство
		//rarus tenkam 08.02.2017 mantis 8331 ---
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК		//rarus tenkam 26.09.2017 mantis 10742 +
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК ТОгда
		ЗаполнитьДатуПолучения();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СпособДоставкиПриИзменении(Элемент)
	СпособДоставкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СпособДоставкиПриИзмененииНаСервере()
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство
		//rarus tenkam 08.02.2017 mantis 8331 ---
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК		//rarus tenkam 26.09.2017 mantis 10742 + 		
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК Тогда 
		ЗаполнитьДатуПолучения();	
	ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК 
		ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
		ЗаполнитьДатуДоставки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыкупаПриИзменении(Элемент)
	ДатаВыкупаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаВыкупаПриИзмененииНаСервере()
	Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК Тогда
		Если ЗначениеЗаполнено(Объект.ДатаВыкупа) Тогда		
			Объект.ДатаПолучения = Объект.ДатаВыкупа;	
			Объект.ДатаИВремяПоручения = Объект.ДатаВыкупа;
			ЗаполнитьДатуДоставки();
		КонецЕсли;
	ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу Тогда
		Объект.ДатаПродажи = Объект.ДатаВыкупа;
		Объект.ДатаИВремяПоручения = Объект.ДатаВыкупа;
	ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу ИЛИ Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаСПостановкойНаХранение Тогда
		Объект.ДатаИВремяПоручения = Объект.ДатаВыкупа;
	ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
		Объект.ДатаПолучения = Объект.ДатаВыкупа;
		Объект.ДатаПродажи = Объект.ДатаВыкупа;
		Объект.ДатаИВремяПоручения = Объект.ДатаВыкупа;
		ЗаполнитьДатуДоставки();
	ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК Тогда
		Объект.ДатаПолучения = Объект.ДатаВыкупа;
		Объект.ДатаИВремяПоручения = Объект.ДатаВыкупа;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ДатаПродажиПриИзменении(Элемент)
	ДатаПродажиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаПродажиПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ДатаПродажи) ТОгда
		Если Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу Тогда
			
			Объект.ДатаВыкупа = Объект.ДатаПродажи;
			Объект.ДатаИВремяПоручения = Объект.ДатаПродажи;
		ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу ИЛИ
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь Тогда //rarus tenkam 15.08.2017 mantis 9319 +
			
			Объект.ДатаИВремяПоручения = Объект.ДатаПродажи;
			
		ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК ИЛИ 
			Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК Тогда //rarus tenkam 26.09.2017 mantis 10742 +
			
			Объект.ДатаИВремяПоручения = Объект.ДатаПродажи;
			Объект.ДатаПолучения = ОБъект.ДатаПродажи;
			ЗаполнитьДатуДоставки();
		ИначеЕсли Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК Тогда
			Объект.ДатаПолучения = Объект.ДатаПродажи;
			Объект.ДатаИВремяПоручения = Объект.ДатаПродажи;
			Объект.ДатаВыкупа = Объект.ДатаПродажи;
			ЗаполнитьДатуДоставки();
		КонецЕсли;	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительПриИзменении(Элемент)
	
	//rarus sergei 09.11.2016 mantis 7609 ++ изменил в связи с замечаниями	
	//rarus tenkam 09.11.2016 mantis 7750 ++
	//ГрузоотправительПриИзмененииНаСервере();
	//Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") Тогда
	//	Если ЗначениеЗаполнено(Объект.Грузоотправитель) Тогда
	//		
	//		Объект.Подрядчик = Объект.Грузоотправитель;
	//		Если ЗначениеЗаполнено(Объект.МестоПолучения) Тогда
	//			Если (ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Контрагенты") И 
	//				Объект.Грузоотправитель <> Объект.МестоПолучения.Контрагент) ИЛИ 
	//				(ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Дилеры") И 
	//				Объект.Грузоотправитель.Контрагент <> Объект.МестоПолучения.Владелец) Тогда
	//				
	//				Объект.МестоПолучения = ПредопределенноеЗначение("Справочник.Scan_МестаХранения.ПустаяСсылка");	
	//			КонецЕсли;	
	//		Иначе
	//			Если ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
	//				ЗаполнитьМестоПолучения();
	//			КонецЕсли;
	//		КонецЕсли;
	//	КонецЕсли; 		
	//ИначеЕсли Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") ИЛИ 
	//	//Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") ИЛИ 		//rarus tenkam 03.11.2016 mantis 7609 (доп. требование)
	//			//Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу") ИЛИ	//rarus tenkam 03.11.2016 mantis 7609 (доп. требование)
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") Тогда 

	//	Если ЗначениеЗаполнено(Объект.Грузоотправитель) Тогда
	//		Объект.Подрядчик = Объект.Грузоотправитель;
	//	КонецЕсли;	
	//КонецЕсли; 
	//rarus tenkam 27.10.2016 mantis 7750 --
	
	
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка") ИЛИ
		//rarus tenkam 08.02.2017 mantis 8331 +++
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") ИЛИ
		//rarus tenkam 08.02.2017 mantis 8331 ---
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +
	   	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") Тогда
		Если ЗначениеЗаполнено(Объект.Грузоотправитель) И ЗначениеЗаполнено(Объект.МестоПолучения) Тогда
			//rarus tenkam 12.07.2017 mantis 10113 +++
			//ПроверитьГрузоотправителяИМестоПолучения();	
			//rarus tenkam 12.07.2017 mantis 10113 ---
		ИначеЕсли ЗначениеЗаполнено(Объект.Грузоотправитель) И НЕ ЗначениеЗаполнено(Объект.МестоПолучения) Тогда
			ЗаполнитьМестоПолучения();
		КонецЕсли; 	
		
	КонецЕсли;
	//rarus sergei 09.11.2016 mantis 7609 --
КонецПроцедуры

//rarus sergei 07.11.2016 mantis 7170 ++
&НаКлиенте
Процедура ПровереноАППриИзменении(Элемент)
	Если (Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") ИЛИ Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК")) и Объект.ПровереноАП = Истина Тогда  //rarus sergei 21.11.2016 mantis 7170 + добавил доп. требование
		Если Объект.ПродуктыПоЗаявке.Количество() = 0 Тогда
			Сообщить("Нельзя установить признак ""Проверено адм. продаж"", так как в табличной части ""Продукты по заявке"" не выбран ни один продукт");
			Объект.ПровереноАП = Ложь;
			Возврат;
		КонецЕсли;
		Если НЕ ПроверитьНаличиеПрикрепленныхФайлов() Тогда
			Объект.ПровереноАП = Ложь;
			Возврат;		
		КонецЕсли;	
	КонецЕсли;
	
	//rarus abrant 13.07.2017 mantis 9146 +++
	//нужно будет вернуть обратно после проверки!!
	Если Scan_ПраваИНастройки.Scan_Право("ВключитьУчетОказанныхУслуг") И
		ПроверитьНеобходимостьПерерасчета(Объект.ХозОперация,Объект.СтатусЗаявки) Тогда
		Если Объект.ПровереноАП Тогда
			АПВсеОК = Истина;
			ВыполнитьПерерасчетОказанныхУслуг(АПВсеОК);
			//Если Scan_ПраваИНастройки.Scan_Право("ВыполнятьПроверкуЗаполненияОказанныхУслуг") И НЕ АПВсеОК Тогда
			//	//Объект.ПровереноАП = НЕ Объект.ПровереноАП;
			//	Отказ = Истина;
			//КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	//rarus abrant 13.07.2017 mantis 9146 ---
	
КонецПроцедуры
//rarus sergei 07.11.2016 mantis 7170 --

////rarus abrant 20.06.2017 mantis 9146 +++
//&НаСервере
//Процедура ПровереноАППриИзмененииНаСервере()
//	
//	Если Элементы.ГруппаОказанныеУслуги.Видимость = Истина Тогда
//		 Если Объект.СтатусЗаявки <> Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена И
//			  Объект.СтатусЗаявки <> Справочники.Scan_СтатусыЗаявокНаДействие.ДоставкаЗавершена И
//			  ЗначениеЗаполнено(Объект.ДатаПолучения) И
//			  ЗначениеЗаполнено(Объект.МестоДоставки.АдресСкладаЛогистический) И
//			  ЗначениеЗаполнено(Объект.МестоПолучения.АдресСкладаЛогистический) И
//			  ЗначениеЗаполнено(Объект.СпособДоставки) И
//			  Объект.ПродуктыПоЗаявке.Выгрузить().Количество()>0 Тогда
//			  
//			  АПВсеОК = Истина;
//			  ВыполнитьПерерасчетОказанныхУслуг(АПВсеОК);
//			  
//		  КонецЕсли;
//	  КонецЕсли;
//	  
//КонецПроцедуры
////rarus abrant 20.06.2017 mantis 9146 ---

&НаКлиенте
Процедура МестоПолученияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут", ЛОЖЬ);
	//rarus tenkam 12.07.2017 mantis 10113 (п.1) +++
	////rarus sergei 21.11.2016 mantis 7609 ++ доп. требования
	//Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка") ИЛИ
	//	//rarus tenkam 08.02.2017 mantis 8331 +++
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение") ИЛИ
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") ИЛИ
	//	//rarus tenkam 08.02.2017 mantis 8331 ---
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") Тогда
	//	Если ЗначениеЗаполнено(Объект.Грузоотправитель) Тогда
	//		Если  ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
	//			ЗначениеОтбора.Вставить("Контрагент",Объект.Грузоотправитель);
	//		ИначеЕсли ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Дилеры") Тогда
	//			Контрагент = ПолучитьКонтрагентаПоДилеру(Объект.Грузоотправитель);
	//			ЗначениеОтбора.Вставить("Контрагент",  Контрагент);
	//		КонецЕсли; 
	//	КонецЕсли;
	//КонецЕсли;
	////rarus sergei 21.11.2016 mantis 7609 --
	//rarus tenkam 12.07.2017 mantis 10113 (п.1) ---
	//rarus tenkam 14.08.2017 mantis 9319 +++
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") Тогда		//rarus tenkam 26.09.2017 mantis 10742 +
		//ЗначениеОтбора.Вставить("Контрагент", ПредопределенноеЗначение("Справочник.Scan_Контрагенты.СканияРусь"));	//rarus tenkam 24.11.2017 mantis 11353 +
		ЗначениеОтбора.Вставить("ТипСклада", ПредопределенноеЗначение("Перечисление.Scan_ТипыСклада.АдресДоставки"));
		
		//rarus tenkam 24.11.2017 mantis 11353 +++
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") Тогда
			ЗначениеОтбора.Вставить("Контрагент", ПредопределенноеЗначение("Справочник.Scan_Контрагенты.СканияРусь"));	
		КонецЕсли;
		//rarus tenkam 24.11.2017 mantis 11353 ---
		
	// rarus tenkam 13.02.2018 mantis 12775 +++	
	ИначеЕсли Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаВПроизводство") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу") ИЛИ
	    Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") Тогда 
			ЗначениеОтбора.Вставить("ТипСклада", ПредопределенноеЗначение("Перечисление.Scan_ТипыСклада.Хранение"));	
	КонецЕсли;
	// rarus tenkam 13.02.2018 mantis 12775 ---
	
	//rarus tenkam 14.08.2017 mantis 9319 ---
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора",ПараметрыФормы,Элементы.МестоПолучения);
КонецПроцедуры

&НаКлиенте
Процедура ДатаИВремяПорученияПриИзменении(Элемент)
	//rarus tenkam 27.10.2016 TLMS 011 ++
	//ДатаИВремяПорученияПриИзмененииНаСервере();
	
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу") Тогда
		Если ЗначениеЗаполнено(Объект.ДатаИВремяПоручения) Тогда
			Объект.ДатаПродажи = Объект.ДатаИВремяПоручения;
		КонецЕсли;
	ИначеЕсли Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаСПостановкойНаХранение") ИЛИ 
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу") Тогда
		Если ЗначениеЗаполнено(Объект.ДатаИВремяПоручения) Тогда
			Объект.ДатаВыкупа = Объект.ДатаИВремяПоручения;
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 27.10.2016 TLMS 011 --
КонецПроцедуры


&НаКлиенте
Процедура ДатаПередачиВПроизводствоПриИзменении(Элемент)
	//rarus tenkam 27.10.2016 TLMS 011 ++
	//ДатаПередачиВПроизводствоПриИзмененииНаСервере();
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаВПроизводство") ИЛИ 
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПередачаВПроизводство") Тогда
		Если ЗначениеЗаполнено(Объект.ДатаПередачиВПроизводство) Тогда
			Объект.ДатаИВремяПоручения = Объект.ДатаПередачиВПроизводство;	
		КонецЕсли; 	
	КонецЕсли;
	//rarus tenkam 27.10.2016 TLMS 011 --
КонецПроцедуры

&НаКлиенте
Процедура ВремяПорученияПриИзменении(Элемент)
	//rarus tenkam 27.10.2016 TLMS 011 ++
	//ВремяПорученияПриИзмененииНаСервере();
	Если ЭтоХозОперацияПередачи(Объект.ХозОперация, Истина) Тогда
		Если ЗначениеЗаполнено(ВремяПоручения) Тогда
			ВремяПолучения = ВремяПоручения;	
		КонецЕсли; 
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") ИЛИ 
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") ИЛИ 
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") Тогда
			ЗаполнитьДатуДоставки();
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 27.10.2016 TLMS 011 --
КонецПроцедуры

//rarus tenkam 15.08.2017 mantis 9319 +++
&НаКлиенте
Процедура ВремяПродажиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ВремяПродажи) ТОгда
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") Тогда 
			
			ВремяПоручения = ВремяПродажи;
			
		ИначеЕсли Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") Тогда
			
			ВремяПоручения = ВремяПродажи;
			ВремяПолучения = ВремяПродажи;
			ЗаполнитьДатуДоставки();	
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
//rarus tenkam 15.08.2017 mantis 9319 ---

&НаКлиенте
Процедура ВремяДоставкиПриИзменении(Элемент)
	//rarus tenkam 27.10.2016 TLMS 011 ++
	//ВремяДоставкиПриИзмененииНаСервере();
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка") ИЛИ
		//rarus tenkam 08.02.2017 mantis 8331 +++
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") ИЛИ
		//rarus tenkam 08.02.2017 mantis 8331 ---
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК") Тогда
		ЗаполнитьДатуПолучения();
	КонецЕсли;
	//rarus tenkam 27.10.2016 TLMS 011 --
	Объект.ДатаДоставкиПлановая = НачалоДня(Объект.ДатаДоставкиПлановая) + (ВремяДоставки - НачалоДня(ВремяДоставки));	//rarus tenkam 28.12.2016 TLMS 011 +
	
КонецПроцедуры

//rarus sergei 07.10.2016 mantis 7609 --

//rarus tenkam 24.01.2017 mantis 8172 +++
&НаКлиенте
Процедура ВремяПередачиВПроизводствоПриИзменении(Элемент)
	Объект.ДатаПередачиВПроизводство = НачалоДня(Объект.ДатаПередачиВПроизводство) + (ВремяПередачиВПроизводство - НачалоДня(ВремяПередачиВПроизводство));	//rarus tenkam 24.01.2017 mantis 8172 +
	//rarus tenkam 31.01.2017 mantis 8400 +++
	Объект.ДатаИВремяПоручения = Объект.ДатаПередачиВПроизводство;	
	ВремяПоручения = ВремяПередачиВПроизводство;
	//rarus tenkam 31.01.2017 mantis 8400 ---	
КонецПроцедуры
//rarus tenkam 24.01.2017 mantis 8172 ---

//rarus sergei 19.10.2016 mantis 7162 ++
&НаКлиенте
Процедура ХранительПриИзменении(Элемент)
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу") Тогда	//rarus tenkam 02.11.2016 mantis 7609 +
		Если ЗначениеЗаполнено(Объект.Хранитель) Тогда
			ХранительПриИзмененииНаСервере();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ХранительПриИзмененииНаСервере()
	Если  ТипЗнч(Объект.Хранитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
		Если Объект.КонтактныеЛица.Количество()>0 Тогда	
			//rarus bonmak 15.04.2020 14456 ++
			//rarus bonmak 03.06.2020 16165 --
			Если Объект.Хранитель <> Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец Тогда
			//Если НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец, Объект.Хранитель) Тогда 
			//rarus bonmak 03.06.2020 16165 --	
			//rarus bonmak 15.04.2020 14456 --
				Объект.КонтактныеЛица.Очистить();	
			КонецЕсли;
		КонецЕсли;
		ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Объект.Хранитель);
	Иначе
		Если Объект.КонтактныеЛица.Количество()>0 Тогда
			Если Объект.Хранитель.Контрагент <> Объект.КонтактныеЛица[0].КонтактноеЛицо.Владелец Тогда
				Объект.КонтактныеЛица.Очистить();	
			КонецЕсли;
		КонецЕсли;
		ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Объект.Хранитель.Контрагент);
	КонецЕсли;
	//rarus pechek 02.04.2020 15672 +++
	//Если ЗначениеЗаполнено(ДоговорХранения) Тогда
	//	Для каждого строка Из ДоговорХранения.КонтактныеЛицаПоДоговору Цикл
	//		МассивНайденныхСтрок = Объект.КонтактныеЛица.НайтиСтроки(Новый Структура("КонтактноеЛицо",строка.КонтактноеЛицо));
	//		Если МассивНайденныхСтрок.Количество()= 0 Тогда
	//			ЗаполнитьКонтактнуюинформацию(строка.КонтактноеЛицо);
	//		КонецЕсли;	
	//	КонецЦикла;
	//КОнецЕсли;
	//rarus pechek 02.04.2020 15672 ---
	
КонецПроцедуры
//rarus sergei 19.10.2016 mantis 7162 --

//rarus tenkam 16.02.2017 mantis 7177 +++
&НаКлиенте
Процедура ПродуктыПоЗаявкеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПродуктыПоЗаявкеПриОкончанииРедактированияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПродуктыПоЗаявкеПриОкончанииРедактированияНаСервере()
	//rarus tenkam 31.03.2017 mantis 8713 +++ 
	//Если Объект.ПродуктыПоЗаявке.Количество() <> 0 И
	//	НЕ ЗначениеЗаполнено(Объект.Грузополучатель) И
	//	(Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу") ИЛИ
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу") ИЛИ
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
	//	Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК"))Тогда	
	Если Объект.ПродуктыПоЗаявке.Количество() <> 0 И
		(Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") ИЛИ	//rarus tenkam 15.08.2017 mantis 9319 +
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") ИЛИ	//rarus tenkam 26.09.2017 mantis 10742 +
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК"))Тогда	
		Если НЕ ЗначениеЗаполнено(Объект.Грузополучатель) Тогда
		//rarus tenkam 31.03.2017 mantis 8713 ---
			// Заполним грузополучателя
			//rarus tenkam 31.03.2017 mantis 8713 +++
			//ТекЗаказчик = ПолучитьЗаказчикаПоТЧ(Объект.ПродуктыПоЗаявке.Выгрузить(,"Продукт"));
			// rarus tenkam 12.08.2019 mantis 14427 +++
			//ТекЗаказчик = ПолучитьЗначениеРеквизитаПоТЧ(Объект.ПродуктыПоЗаявке.Выгрузить(,"Продукт"),"Заказчик");			
			ТекЗаказчик = ПолучитьЗначениеРеквизитаПоТЧ(Объект.ПродуктыПоЗаявке.Выгрузить(,"Изделие"),"Заказчик");
			// rarus tenkam 12.08.2019 mantis 14427 ---
			//rarus tenkam 31.03.2017 mantis 8713 ---
			Если ТекЗаказчик <> Неопределено Тогда
				Объект.Грузополучатель = ТекЗаказчик;
			КонецЕсли;
			//Если ТекЗаказчик <> Неопределено И ТекЗаказчик <> Объект.Грузополучатель Тогда
			//	Объект.Грузополучатель = ТекЗаказчик;
			//Иначе 
			//	Объект.Грузополучатель = Неопределено;
			//КонецЕсли;
		//rarus tenkam 31.03.2017 mantis 8713 +++ 
		КонецЕсли;
	    Если НЕ ЗначениеЗаполнено(Объект.Договор) Тогда
			// Заполним СОП
			// rarus tenkam 12.08.2019 mantis 14427 +++
			//ТекСОП = ПолучитьЗначениеРеквизитаПоТЧ(Объект.ПродуктыПоЗаявке.Выгрузить(,"Продукт"),"СОП");
			ТекСОП = ПолучитьЗначениеРеквизитаПоТЧ(Объект.ПродуктыПоЗаявке.Выгрузить(,"Изделие"),"СОП");
			// rarus tenkam 12.08.2019 mantis 14427 ---
			Если ТекСОП <> Неопределено Тогда
				Объект.Договор = ТекСОП;
			КонецЕсли;
 
		КонецЕсли;
		//rarus tenkam 31.03.2017 mantis 8713 ---
	КонецЕсли;	
	
	// rarus tenkam 17.09.2021 mantis 18115 +++
	Если Объект.ПродуктыПоЗаявке.Количество() <> 0 И
		(Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПередачаВПроизводство") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаВПроизводство")) Тогда
		ДоговорЗаказНаЗакупку = ПолучитьДоговорИзЗаказаНаЗакупку();
		
		Если ЗначениеЗаполнено(ДоговорЗаказНаЗакупку) Тогда
			Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство") Тогда
				Объект.Договор = ДоговорЗаказНаЗакупку;
			Иначе
				Объект.ДоговорСПоставщиком = ДоговорЗаказНаЗакупку;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// rarus tenkam 17.09.2021 mantis 18115 ---
	
КонецПроцедуры

Функция ПолучитьДоговорИзЗаказаНаЗакупку() // rarus tenkam 17.09.2021 mantis 18115 +++
	Для Каждого ТекСтрока Из Объект.ПродуктыПоЗаявке Цикл
		ЗаказНаЗаводПродукта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрока.Изделие, "ЗаказНаЗавод");
		НайденнаяСтрока = ЗаказНаЗаводПродукта.ЗаказыНаЗакупку.Найти(Истина,"Основной");
		Если НайденнаяСтрока <> Неопределено И ТипЗнч(НайденнаяСтрока.ЗаказНаЗакупку) = Тип("ДокументСсылка.Scan_ЗаказНаЗакупку") Тогда
			Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НайденнаяСтрока.ЗаказНаЗакупку, "Договор");
		Иначе
			Если ЗаказНаЗаводПродукта.ЗаказыНаЗакупку.Количество() <> 0 Тогда
				Для Каждого ТекСтрокаЗаказовНаЗакупку Из ЗаказНаЗаводПродукта.ЗаказыНаЗакупку Цикл
					Если ТипЗнч(ТекСтрокаЗаказовНаЗакупку.ЗаказНаЗакупку) = Тип("ДокументСсылка.Scan_ЗаказНаЗакупку") Тогда
						Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрокаЗаказовНаЗакупку.ЗаказНаЗакупку, "Договор");	
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	Возврат ПредопределенноеЗначение("Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка");
КонецФункции // rarus tenkam 17.09.2021 mantis 18115 --- 

//rarus tenkam 31.03.2017 mantis 8713 +++
//&НаСервере
//Функция ПолучитьЗаказчикаПоТЧ(ТЧПродукты)
//	ТабРезультат = Новый ТаблицаЗначений;
//	ТабРезультат.Колонки.Добавить("Продукт");
//	ТабРезультат.Колонки.Добавить("Заказчик");
//	
//	Для Каждого ТекСтрока Из ТЧПродукты Цикл
//		НоваяСтрока = ТабРезультат.Добавить();
//		НоваяСтрока.Продукт = ТекСтрока.Продукт;
//		НоваяСтрока.Заказчик = ТекСтрока.Продукт.Заказчик;
//	КонецЦикла;
//	
//	ТабРезультат.Свернуть("Заказчик");
//	Если ТабРезультат.Количество() = 1 Тогда
//		Возврат ТабРезультат[0].Заказчик;
//	Иначе
//		Возврат Неопределено;
//	КонецЕсли;
//КонецФункции

&НаСервере
Функция ПолучитьЗначениеРеквизитаПоТЧ(ТЧПродукты, ИмяРеквизита) 	
	ТабРезультат = Новый ТаблицаЗначений;
	// rarus tenkam 12.08.2019 mantis 14427 +++
	//ТабРезультат.Колонки.Добавить("Продукт");			
	ТабРезультат.Колонки.Добавить("Изделие");
	// rarus tenkam 12.08.2019 mantis 14427 ---
	ТабРезультат.Колонки.Добавить(ИмяРеквизита);
	
	Для Каждого ТекСтрока Из ТЧПродукты Цикл
		НоваяСтрока = ТабРезультат.Добавить();
		// rarus tenkam 12.08.2019 mantis 14427 +++
		//НоваяСтрока.Продукт = ТекСтрока.Продукт;
		//НоваяСтрока[ИмяРеквизита] = ТекСтрока.Продукт[ИмяРеквизита];
		НоваяСтрока.Изделие = ТекСтрока.Изделие;
		
		// rarus tenkam 21.08.2019 mantis 14793 +++
		//Если ИмяРеквизита = "Заказчик" И ЗначениеЗаполнено(ТекСтрока.Изделие.ЗаказНаЗавод) Тогда
		//	НоваяСтрока[ИмяРеквизита] = ТекСтрока.Изделие.ЗаказНаЗавод[ИмяРеквизита];
		Если ИмяРеквизита = "Заказчик" Тогда
			Если ЗначениеЗаполнено(ТекСтрока.Изделие.ЗаказНаЗавод) Тогда
				НоваяСтрока[ИмяРеквизита] = ТекСтрока.Изделие.ЗаказНаЗавод[ИмяРеквизита];
			ИначеЕсли ЗначениеЗаполнено(ТекСтрока.Изделие.СОП) Тогда
				НоваяСтрока[ИмяРеквизита] = ТекСтрока.Изделие.СОП.Владелец;
			Иначе
				НоваяСтрока[ИмяРеквизита] = ПредопределенноеЗначение("Справочник.Scan_Контрагенты.ПустаяСсылка");
			КонецЕсли;				
		// rarus tenkam 21.08.2019 mantis 14793 ---
		Иначе
			НоваяСтрока[ИмяРеквизита] = ТекСтрока.Изделие[ИмяРеквизита];
		КонецЕсли;
		// rarus tenkam 12.08.2019 mantis 14427 ---
	КонецЦикла;
	
	ТабРезультат.Свернуть(ИмяРеквизита);
	Если ТабРезультат.Количество() = 1 Тогда
		Возврат ТабРезультат[0][ИмяРеквизита];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//rarus tenkam 31.03.2017 mantis 8713 ---

//rarus tenkam 16.02.2017 mantis 7177 ---

////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ РЕКВИЗИТОВ ТЧ

// rarus tenkam 12.08.2019 mantis 14427 +++

//&НаКлиенте
//Процедура ПродуктыПоЗаявкеПродуктНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	//СтандартнаяОбработка = Ложь;
//	//Если ЭтоКорректировка() Тогда
//	//	Результат = ОткрытьФорму("Справочник.Scan_Продукты.ФормаВыбора",Новый Структура("Корректировка", Истина),Элементы.ПродуктыПоЗаявкеПродукт); 
//	//Иначе 
//	//	Результат = ОткрытьФорму("Справочник.Scan_Продукты.ФормаВыбора",Новый Структура("НеКорректировка", Истина),Элементы.ПродуктыПоЗаявкеПродукт); 
//	//КонецЕсли;
//	СтандартнаяОбработка = Ложь;
//	Результат = ОткрытьФорму("Справочник.Scan_Продукты.ФормаВыбора",Новый Структура("ВидСравненияНеРавно", Истина),Элементы.ПродуктыПоЗаявкеПродукт); 
//	
//	//СписокПродуктов.Очистить();
//	//ЗаполнитьСписокПродуктов();
//	//ФормаВыбора = ПолучитьФорму("Справочник.Scan_Продукты.ФормаВыбора");
//	//ЭлементОтбораСсылка = ФормаВыбора.Отбор.Ссылка;
//	//Если ЭлементОтбораСсылка <> Неопределено Тогда
//	//    ЭлементОтбораСсылка.ВидСравнения  = ВидСравнения.ВСписке;
//	//    ЭлементОтбораСсылка.Значение      = СписокПродуктов;
//	//    ЭлементОтбораСсылка.Использование = Истина;
//	//КонецЕсли;
//	//ФормаВыбора.ЭлементыФормы.Список.НастройкаОтбора.Ссылка.Доступность = Ложь;
//	//ФормаВыбора.Открыть();
//	//СтандартнаяОбработка = Ложь;                          
//КонецПроцедуры
//
//&НаКлиенте
//Процедура ПродуктыПоЗаявкеПродуктОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//	
//	МассивСтрок=Объект.ПродуктыПоЗаявке.НайтиСтроки(Новый Структура("Продукт",ВыбранноеЗначение));
//	Если МассивСтрок.Количество()> 0 и МассивСтрок[0].НомерСтроки <>  ТекущийЭлемент.ТекущаяСтрока+1 Тогда
//		СтандартнаяОбработка=Ложь;              
//		Сообщить("Объект ("+ВыбранноеЗначение+") уже подобран в табличную часть в строке "+МассивСтрок[0].НомерСтроки+". Нельзя добавить два одинаковых продукта в заявку");
//		Возврат;                                
//	КонецЕсли;
//	//КарточкаЗаказа = ПолучитьКарточкуЗаказаПоПродукту(ВыбранноеЗначение);
//	//Элементы.ПродуктыПоЗаявке.ТекущиеДанные.КарточкаЗаказа =  КарточкаЗаказа;
//	Изделие = ПолучитьИзделиеПоПродукту(ВыбранноеЗначение);
//	Элементы.ПродуктыПоЗаявке.ТекущиеДанные.Изделие = Изделие; 
//	 //rarus sergei 29.06.2016 mantis 7167 ++
//	СтатусНовая = ПолучитьСтатусНовая();
//	Элементы.ПродуктыПоЗаявке.ТекущиеДанные.СтатусИзделия = СтатусНовая;
//	//rarus sergei 29.06.2016 mantis 7167 --
//
//КонецПроцедуры

// rarus tenkam 12.08.2019 mantis 14427 ---

////////////////////////////////////////////////////////////////////////////////
//// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ

//rarus tenkam 11.10.2016 mantis 7670 ++
&НаСервере
Процедура УправлениеДиалогомНаСервере(Отказ = Ложь)
	Если Объект.Проведен Тогда		//rarus tenkam 24.01.2017 mantis 8172 +
		//rarus tenkam 01.12.2016 mantis 7750 ++ (статусы теперь устанавливаются автоматически)
		//СписокХО = Новый Массив;
		//СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка"));
		//СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК"));
		//СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК"));
		//СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК"));
		//СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК"));
		//
		//Если СписокХО.Найти(Объект.ХозОперация) = Неопределено Тогда
		//	Элементы.СтатусЗаявки.ТолькоПросмотр = Ложь;
		//Иначе
		//	Элементы.СтатусЗаявки.ТолькоПросмотр = Истина;
		//КонецЕсли;
		//rarus tenkam 01.12.2016 mantis 7750 --
		
		//rarus tenkam 23.11.2016 mantis 7750 ++
		
		// rarus tenkam 09.11.2018 mantis 13482 +++
		//Элементы.ГруппаФон.ТолькоПросмотр = (Объект.ПровереноАП);		
		ТолькоПросмотрПолей = Объект.ПровереноАП;
		ТолькоПросмотрПриИсполнении = (Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена);
		
		Элементы.ГруппаСлужебныеПоля.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.ГруппаСпособДоставки.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.ГруппаОтгрузкаИДоставка.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.ГруппаПодрядчикИДоговорСПодрядчиком.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.ГруппаХранитель2ИДаты.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.ГруппаСогласование.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.ГруппаКонтактныеЛица.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.СписокПродуктовПоЗаявке.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.Подвал.ТолькоПросмотр = ТолькоПросмотрПолей;
		
		// Элементы.ГруппаОсновныеПоля.ТолькоПросмотр = ТолькоПросмотрПолей;		
		Элементы.СтатусЗаявки.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.ВыездСотрудникаОЛ.ТолькоПросмотр = ТолькоПросмотрПриИсполнении;
		Элементы.ПровереноАП.ТолькоПросмотр = ТолькоПросмотрПолей;
		Элементы.Корректировка.ТолькоПросмотр = ТолькоПросмотрПолей; 		
		// rarus tenkam 09.11.2018 mantis 13482 ---
		
		//rarus tenkam 16.03.2017 mantis 7623 +++
		Элементы.ПродуктыПоЗаявкеЗаполнитьИзБуфераОбмена.Доступность = (НЕ Объект.ПровереноАП);
		//rarus tenkam 16.03.2017 mants 7623 ---
		Элементы.ВыборХозОперации.Доступность = (НЕ Объект.ПровереноАП);
		//rarus tenkam 23.11.2016 mantis 7750 --
		
		Элементы.КонтактныеЛицаДобавитьКонтакты.Доступность = (НЕ Объект.ПровереноАП);	//rarus tenkam 17.10.2017 mantis 11366 +

		//rarus tenkam 30.12.2016 mantis 8223 ++
		//СформироватьУсловноеОформление(); //rarus vikhle 27.08.2021 mt 18191
		//rarus tenkam 30.12.2016 mantis 8223 --
	КонецЕсли;
	
	//rarus vikhle 27.08.2021 mt 18191 +++
	Если  Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка 
		ИЛИ	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение  
		ИЛИ	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство   
		ИЛИ	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК
		ИЛИ	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК
		ИЛИ	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК
		ИЛИ	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК
		ИЛИ	Объект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
		Элементы.ПродуктыПоЗаявкеТипТоплива.Видимость = Истина;		
	Иначе
		Элементы.ПродуктыПоЗаявкеТипТоплива.Видимость = Ложь;	
	КонецЕсли;
	
	СформироватьУсловноеОформление(Объект.Проведен);
	//rarus vikhle 27.08.2021 mt 18191 ---
	
КонецПроцедуры

//rarus tenkam 30.12.2016 mantis 8223 ++
&НаСервере
Процедура СформироватьУсловноеОформление(УстановитьОформлениеСтатуса = Истина) //rarus vikhle 27.08.2021 mt 18191
	
	//Обновление условного оформления статуса заявки
	Если УстановитьОформлениеСтатуса Тогда //rarus vikhle 27.08.2021 mt 18191 
		Scan_УправлениеДиалогомСервер.СформироватьУсловноеОформлениеЭлемента(ЭтаФорма, "СтатусЗаявки", Объект.СтатусЗаявки);
	КонецЕсли;	
	
	//rarus vikhle 26.08.2021 mt 18191 +++
	// Тип топлива LNG
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПродуктыПоЗаявкеТипТоплива.Имя);

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ПродуктыПоЗаявке.ТипТоплива");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "LNG";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.КоролевскиГолубой); //rarus vikhle 03.09.2021 mt 18191
	
	// Тип топлива CNG
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПродуктыПоЗаявкеТипТоплива.Имя);

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ПродуктыПоЗаявке.ТипТоплива");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "CNG";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.НейтральноВесеннеЗеленый); //rarus vikhle 03.09.2021 mt 18191
	//rarus vikhle 26.08.2021 mt 18191 ---
	
КонецПроцедуры
	//rarus tenkam 30.12.2016 mantis 8223 --

&НаСервереБезКонтекста
Функция ЭтоХозОперацияПередачи(ТекХозОперация, ИДоставка = Ложь)
	СписокХО = Новый Массив;
	Если ИДоставка Тогда
		СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.Доставка"));
		//rarus tenkam 08.02.2017 mantis 8331 +++
		СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение"));
		СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство"));
		//rarus tenkam 08.02.2017 mantis 8331 ---
	КонецЕсли;
	СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК"));
	СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК"));
	СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК"));		//rarus tenkam 26.09.2017 mantis 10742 +
	СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК"));
	СписокХО.Добавить(ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК"));
	Если СписокХО.Найти(ТекХозОперация) = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции
//rarus tenkam 11.10.2016 mantis 7670 --

//rarus sergei 15.09.2016 mantis 7160 ++
&НаСервере
Функция ПолучитьКонтрагентаПоДилеру(Дилер)	
	//rarus bonmak 15.04.2020 14456 ++
	//rarus bonmak 03.06.2020 16165 ++
	Владелец = Дилер.Контрагент;
	//Владелец = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Дилер);
	//rarus bonmak 03.06.2020 16165 --
	//rarus bonmak 15.04.2020 14456 --

	Возврат Владелец;
Конецфункции
//rarus sergei 15.09.2016 mantis 7160 --

//rarus sergei 01.09.2016 mantis 7167 ++
&НаСервере
Процедура НастроитьОтображениеСторнированногоДокумента()
	Элементы.ГруппаФон.ТолькоПросмотр = Истина;
	Элементы.ФормаСоздатьНаОсновании.Доступность = Ложь;
	//Элементы.ФормаКоманднаяПанель.Доступность = Ложь;
КонецПроцедуры
//rarus sergei 01.09.2016 mantis 7167 --

Процедура ЗаполнитьМенеджераНаСервере()	
	
	МенеджерИзмен = ПользователиКлиентСервер.ТекущийПользователь();	
	Объект.Менеджер = МенеджерИзмен;
	Объект.Организация = МенеджерИзмен.Организация;
	Объект.ПодразделениеКомпании = МенеджерИзмен.ПодразделениеОрганизации;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтактнуюинформацию(парам)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Ссылка КАК КонтактноеЛицо,
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Вид КАК ВидКонтактнойИнформации,
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Представление КАК Представление
	               |ИЗ
	               |	Справочник.Scan_КонтактныеЛица.КонтактнаяИнформация КАК Scan_КонтактныеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Ссылка.Ссылка = &Ссылка
	               |	И (Scan_КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |			ИЛИ Scan_КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))";
				  
	Запрос.УстановитьПараметр("Ссылка",парам);
	ТЗ=Запрос.Выполнить().Выгрузить();
	Для каждого строкаТЗ Из ТЗ Цикл 
		
		НоваяСтрока=Объект.КонтактныеЛица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,строкаТЗ);
	    
	КонецЦикла; 
	 //rarus sergei 15.09.2016 mantis 7160 ++

	Если НЕ ЗначениеЗаполнено(Объект.Грузополучатель) Тогда  
		Объект.Грузополучатель = Парам.Владелец; //rarus bonmak 15.04.2020 14456 //rarus bonmak 03.06.2020 16165 
		Если Парам.Владелец <> Объект.Договор.Владелец Тогда
			Объект.Договор = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
		КонецЕсли;			
		
		//rarus bonmak 15.04.2020 14456 ++
		//rarus bonmak 03.06.2020 16165 ++
		Если Парам.Владелец <> Объект.МестоДоставки.Контрагент Тогда
		//Если Объект.МестоДоставки.СтанцияДилера <> Парам.Владелец Тогда 
		//rarus bonmak 03.06.2020 16165 --
		//rarus bonmak 15.04.2020 14456 --
			Объект.МестоДоставки = Справочники.Scan_МестаХранения.ПустаяСсылка();	
		КонецЕсли;
	КонецЕсли;
	//rarus sergei 15.09.2016 mantis 7160 --
КонецПроцедуры

//rarus tenkam 17.10.2016 mantis 7688 ++ (оказывается эта процедура не стандартная - переделала
//// Процедура обновляет название документа по хоз. операции
//&НаКлиенте
//Процедура ОбновитьНазваниеДокумента()
//	Если Не Параметры.Ключ.Пустая() Тогда
//		ЭтаФорма.Заголовок = Строка(Объект.Ссылка) +". " + Строка(Объект.ХозОперация); 	
//	Иначе
//		ЭтаФорма.АвтоЗаголовок = Истина; 
//	КонецЕсли;
//КонецПроцедуры

// Процедура обновляет заголовок формы, добавляя в нее наименование ХО
&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Заголовок = Строка(Объект.Ссылка) + ". " + Строка(Объект.ХозОперация);
	Иначе
		Заголовок = "Заявка на действие. " + Строка(Объект.ХозОперация) + " (создание)";
	КонецЕсли;
КонецПроцедуры
//rarus tenkam 17.10.2016 mantus 7688 --

//rarus sergei 29.06.2016 mantis 7167 ++
&НаСервере
Функция ПолучитьСтатусНовая()
	Статус = Перечисления.Scan_СтатусыИзделий.Новая;
	Возврат Статус;
КонецФункции
 //rarus sergei 29.06.2016 mantis 7167 --
 
// rarus tenkam 12.08.2019 mantis 14427 +++
// &НаСервере
//Функция ПолучитьИзделиеПоПродукту(ВыбранныйПродукт)
//	Возврат ВыбранныйПродукт.Изделие;
//КонецФункции
// rarus tenkam 12.08.2019 mantis 14427 ---

//rarus sergei 28.06.2016 mantis 6976 --

// rarus tenkam 04.08.2020 mantis 16401 +++ 
////rarus sergei 03.10.2016 mantis 7162 ++
//&НаСервере
//Функция ПолучитьВидДоговора(ВидДоговора)
//	Если ВидДоговора = "СПоставщиком" Тогда
//		Вид = Перечисления.Scan_ВидыДоговоров.СПоставщиком;
//		Возврат Вид;	
//	КонецЕсли; 	
//КонецФункции 

//&НаСервере
//Функция ПолучитьДоговорСПоставщиком()
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	Scan_ДоговорыВзаиморасчетов.Ссылка
//	               |ИЗ
//	               |	Справочник.Scan_ДоговорыВзаиморасчетов КАК Scan_ДоговорыВзаиморасчетов
//	               |ГДЕ
//	               |	Scan_ДоговорыВзаиморасчетов.Владелец = &Владелец
//	               |	И Scan_ДоговорыВзаиморасчетов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДоговоров.СПоставщиком)";
//	Если ТипЗнч(Объект.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
//		Запрос.УстановитьПараметр("Владелец",Объект.Подрядчик);
//	Иначе
//	    Запрос.УстановитьПараметр("Владелец",Объект.Подрядчик.Контрагент);
//	КонецЕсли;
//	Результат = Запрос.Выполнить();
//	Если Результат.Пустой() Тогда
//		Возврат Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
//	Иначе
//		ТЗ = Результат.Выгрузить();
//		Договор = ТЗ[0].Ссылка;
//		Возврат Договор;
//	КонецЕсли; 
//КонецФункции
////rarus sergei 03.10.2016 mantis 7162 --
// rarus tenkam 04.08.2020 mantis 16401 ---

//rarus sergei 07.10.2016 mantis 7609 ++
&НаСервере
Процедура ЗаполнитьМестоПолучения()
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	Scan_МестаХранения.Ссылка
	              |ИЗ
	              |	Справочник.Scan_МестаХранения КАК Scan_МестаХранения
	              |ГДЕ
	              |	Scan_МестаХранения.Контрагент = &СсылкаКонтрагент";	
	//rarus sergei 09.11.2016 mantis 7609 ++			  
	Если ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
	 	Запрос.УстановитьПараметр("СсылкаКонтрагент", Объект.Грузоотправитель);
	Иначе	
	   	Запрос.УстановитьПараметр("СсылкаКонтрагент", Объект.Грузоотправитель.Контрагент);
	КонецЕсли;
	//rarus sergei 09.11.2016 mantis 7609 ++
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество()=1 Тогда
		Объект.МестоПолучения = Результат[0].Ссылка;
		ЗаполнитьДатуДоставки();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуДоставки()
	Если ЗначениеЗаполнено(Объект.ДатаПолучения) И ЗначениеЗаполнено(Объект.МестоДоставки) И ЗначениеЗаполнено(Объект.МестоПолучения) И ЗначениеЗаполнено(ОБъект.СпособДоставки) Тогда
		ТранзитноеВремя = Справочники.Scan_МестаХранения.ПолучитьСрокДоставки(Объект.МестоПолучения.АдресСкладаЛогистический,Объект.МестоДоставки.АдресСкладаЛогистический,ОБъект.СпособДоставки); 
		Если ТранзитноеВремя = 0 Тогда
			Сообщить("Обратите внимание, по выбранному маршруту транзитное время не задано");
		КонецЕсли; 
		Объект.ДатаПолучения = НачалоДня(ЭтаФорма.Объект.ДатаПолучения) + (ЭтаФорма.ВремяПолучения - НачалоДня(ЭтаФорма.ВремяПолучения));
		ОБъект.ДатаДоставкиПлановая = ОБъект.ДатаПолучения + 24*60*60*ТранзитноеВремя;
		ВремяДоставки = '00010101'+(Объект.ДатаДоставкиПлановая - НачалоДня(Объект.ДатаДоставкиПлановая)); 
		Сообщить("Дата и время доставки были пересчитаны!"); 	//rarus tenkam 28.10.2016 mantis 7750 +
		
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуПолучения()
	Если ЗначениеЗаполнено(ОБъект.ДатаДоставкиПлановая) И ЗначениеЗаполнено(Объект.МестоДоставки) И ЗначениеЗаполнено(Объект.МестоПолучения) И ЗначениеЗаполнено(ОБъект.СпособДоставки) Тогда
		ТранзитноеВремя = Справочники.Scan_МестаХранения.ПолучитьСрокДоставки(Объект.МестоПолучения.АдресСкладаЛогистический,Объект.МестоДоставки.АдресСкладаЛогистический,ОБъект.СпособДоставки);
		Если ТранзитноеВремя = 0 Тогда
			Сообщить("Обратите внимание, по выбранному маршруту транзитное время не задано");
		КонецЕсли; 
		Объект.ДатаДоставкиПлановая = НачалоДня(ЭтаФорма.Объект.ДатаДоставкиПлановая) + (ЭтаФорма.ВремяДоставки - НачалоДня(ЭтаФорма.ВремяДоставки));
		ОБъект.ДатаПолучения = Объект.ДатаДоставкиПлановая - 24*60*60*ТранзитноеВремя;
		ВремяПолучения = '00010101'+(Объект.ДатаПолучения - НачалоДня(Объект.ДатаПолучения)); 
		Объект.ДатаИВремяПоручения = Объект.ДатаДоставкиПлановая - 24*60*60*ТранзитноеВремя;
		ВремяПоручения = '00010101'+(Объект.ДатаПолучения - НачалоДня(Объект.ДатаПолучения));
		Сообщить("Дата и время получения были пересчитаны!"); 	//rarus tenkam 28.10.2016 mantis 7750 +
	КонецЕсли;
КОнецПроцедуры
//rarus sergei 07.10.2016 mantis 7609 --

//rarus tenkam 27.10.2016 mantis 7750 ++ (баги при смене ХО)
&НаКлиенте
Процедура ОчиститьПоляДокументаПриСменеХО()
		
	Объект.ДатаПолучения = Дата('00010101000000');
	ВремяПолучения = Дата('00010101000000');
	
	Объект.ДатаДоставкиПлановая = Дата('00010101000000');
	ВремяДоставки = Дата('00010101000000');
	
	Объект.ДатаПродажи = Дата('00010101000000');
	
	Объект.ДатаВыкупа = Дата('00010101000000');
	
	Объект.ДатаПередачиВПроизводство = Дата('00010101000000');
	ВремяПередачиВПроизводство = Дата('00010101000000');	//rarus tenkam 24.01.2017 mantis 8172 +
	
	Объект.ДатаИВремяПоручения = Дата('00010101000000');
	ВремяПоручения = Дата('00010101000000');
	
	//rarus tenkam 23.12.2016 mantis 7609 ++ (закомментировала, исправила)
	////rarus sergei 13.12.2016 mantis 7750 ++
	//Объект.Грузоотправитель = НЕОПРЕДЕЛЕНО;
	//Объект.Грузополучатель = Неопределено;
	//Объект.Договор = Неопределено;
	//Объект.ДоговорСПоставщиком = Неопределено;
	//Объект.КонтактныеЛица.Очистить();
	//Объект.МестоДоставки = Неопределено;
	//Объект.МестоПолучения = Неопределено;
	//Объект.Подрядчик = Неопределено;
	//Объект.ПровереноАП = ЛОжь;
	//Объект.СпособДоставки = Неопределено;
	//Объект.Хранитель  = Неопределено;
	////rarus sergei 13.12.2016 mantis 7750 --
	
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") ИЛИ
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") ИЛИ 		//rarus tenkam 14.08.2017 mantis 9319 +
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК") ИЛИ 		//rarus tenkam 26.09.2017 mantis 10742 +
		Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") Тогда
		
		Объект.Грузоотправитель = ПредопределенноеЗначение("Справочник.Scan_Контрагенты.СканияРусь");
	Иначе
		Объект.Грузоотправитель = Неопределено;	
	КонецЕсли; 
	
	Объект.Грузополучатель = Неопределено;
	Объект.Хранитель  = Неопределено;	
	Объект.Подрядчик = Неопределено;
	
	//Объект.ПровереноАП = Ложь; 	//rarus tenkam 08.02.2017 mantis 8304 +
	Объект.СпособДоставки = ПредопределенноеЗначение("Перечисление.Scan_СпособыДоставкиПродуктов.ПустаяСсылка");
		
	Объект.Договор = ПредопределенноеЗначение("Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка");
	Объект.ДоговорСПоставщиком = ПредопределенноеЗначение("Справочник.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка");
	
	Объект.МестоДоставки = ПредопределенноеЗначение("Справочник.Scan_МестаХранения.ПустаяСсылка");
	Объект.МестоПолучения = ПредопределенноеЗначение("Справочник.Scan_МестаХранения.ПустаяСсылка");
		
	Объект.КонтактныеЛица.Очистить();
	//rarus tenkam 23.12.2016 mantis 7609 --
	
КонецПроцедуры
//rarus tenkam 27.10.2016 mantis 7750 --

//rarus sergei 09.11.2016 mantis 7609 ++
&НаСервере
Процедура ПроверитьГрузоотправителяИМестоПолучения()
	Если (ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Контрагенты") И 
		//rarus bonmak 15.04.2020 14456 ++
		//rarus bonmak 03.06.2020 16165 ++
		Объект.Грузоотправитель <> Объект.МестоПолучения.Контрагент) Тогда
		//НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.МестоПолучения.СтанцияДилера, Объект.Грузоотправитель)) Тогда 
		//rarus bonmak 03.06.2020 16165 --
		//rarus bonmak 15.04.2020 14456 -- 
				//(ТипЗнч(Объект.Грузоотправитель)= Тип("СправочникСсылка.Scan_Дилеры") И 	//rarus tenkam 24.10.2017 mantis 11439 +
				//Объект.Грузоотправитель.Контрагент <> Объект.МестоПолучения.Контрагент) Тогда 	//rarus tenkam 24.10.2017 mantis 11439 +		
		Объект.МестоПолучения = Справочники.Scan_МестаХранения.ПустаяСсылка();	
	КонецЕсли	
КонецПроцедуры
//rarus sergei 09.11.2016 mantis 7609 --


//rarus sergei 07.11.2016 mantis 7170 ++
&НаСервере
Функция ПроверитьНаличиеПрикрепленныхФайлов()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НаличиеПрисоединенныхФайлов.ЕстьФайлы
	               |ИЗ
	               |	РегистрСведений.НаличиеФайлов КАК НаличиеПрисоединенныхФайлов
	               |ГДЕ
	               |	НаличиеПрисоединенныхФайлов.ОбъектСФайлами.Ссылка = &ИзделиеСсылка";
	Для каждого строкаТЧ Из Объект.ПродуктыПоЗаявке Цикл
		// rarus tenkam 12.08.2019 mantis 14427 +++
		//ИзделиеСсылка = СтрокаТЧ.Продукт.Изделие;
		ИзделиеСсылка = СтрокаТЧ.Изделие;
		// rarus tenkam 12.08.2019 mantis 14427 ---
		Запрос.УстановитьПараметр("ИзделиеСсылка",ИзделиеСсылка);	
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Сообщить("Внимание! У продукта "+ ИзделиеСсылка.НомерИзделия + " нет прикрепленной копии ПТС. Признак «проверено администратором продаж» не может быть установлен");
			Возврат Ложь; 		
		КонецЕсли; 
		
	КонецЦикла;
	Возврат Истина;
КонецФункции
//rarus sergei 07.11.2016 mantis 7170 --

//rarus tenkam 20.07.2016 mantis 7162 ++
#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
//rarus tenkam 20.07.2016 mantis 7162 --

//rarus abrant 27.01.2017 mantis 8304+++
&НаКлиенте
Процедура ПрикрепитьМХИМ15(Команда)
	Документ = Объект.Ссылка;
	// rarus tenkam 10.04.2019 mantis 14195 +++
	
	////rarus tenkam 03.05.2017 mantis 9440 +++
	//ВыбранныеФайлы = Новый Массив;
	//
	//ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	//ВыборФайла.МножественныйВыбор = Истина;
	//ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла'");
	//ВыборФайла.Фильтр = НСтр("ru = 'Все файлы'") + " (*.*)|*.*";
	//Если ВыборФайла.Выбрать() Тогда
	//	ВыбранныеФайлы = ВыборФайла.ВыбранныеФайлы;
	//КонецЕсли;
	//
	//Если ВыбранныеФайлы.Количество() <> 0 Тогда
	//	ДопПараметры = Новый Структура;
	//	ДопПараметры.Вставить("ИдентификаторФормы", ЭтаФорма.УникальныйИдентификатор);
	//	ДопПараметры.Вставить("НеОткрыватьКарточкуПослеСозданияИзФайла", Истина);
	//	ДопПараметры.Вставить("ВыбранныеФайлы", ВыбранныеФайлы);
	//	ДопПараметры.Вставить("ВладелецФайла", Документ);
	//	
	//	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыРасширениеПредложено", ПрисоединенныеФайлыСлужебныйКлиент, ДопПараметры);
	//	ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);	
	////rarus tenkam 03.05.2017 mantis 9440 ---
	//
	//	ПараметрыФормы = Новый Структура;
	//	ПараметрыФормы.Вставить("ВладелецФайла",  Документ);
	//	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	//	// rarus tenkam 14.03.2019 mantis 14220 +++ 
	//	//ОткрытьФорму("ОбщаяФорма.ПрисоединенныеФайлы", ПараметрыФормы, ЭтаФорма, Истина, ЭтаФорма.Окно);
	//	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", ПараметрыФормы, ЭтаФорма, Истина, ЭтаФорма.Окно);
	//	// rarus tenkam 14.03.2019 mantis 14220 ---
	////rarus tenkam 03.05.2017 mantis 9440 +++	
	//КонецЕсли;	
	////rarus tenkam 03.05.2017 mantis 9440 ---
	
	РаботаСФайламиКлиент.ДобавитьФайлы(Документ, ЭтаФорма.УникальныйИдентификатор, , );
	
	// rarus tenkam 10.04.2019 mantis 14195 ---
	
КонецПроцедуры
//rarus abrant 27.01.2017 mantis 8304---

//rarus tenkam 14.03.2017 mantis 7623 +++
&НаКлиенте
Процедура ЗаполнитьИзБуфераОбмена(Команда)
	ОткрытьФорму("ОбщаяФорма.Scan_ФормаИмпорта",,ЭтаФорма,,,,Новый ОписаниеОповещения("ЗаполнитьИзБуфераЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзБуфераЗавершение(ЗначениеВозвращаемыхДанных, ДополнительныеПараметры) Экспорт
	Если ЗначениеВозвращаемыхДанных = Неопределено ИЛИ
		ЗначениеВозвращаемыхДанных = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеВозвращаемыхДанных.ОчиститьИзделия Тогда
		Объект.ПродуктыПоЗаявке.Очистить();
	КонецЕсли;
	Если ЗначениеВозвращаемыхДанных.МассивИзделий.Количество() = 0 Тогда
		//rarus FominskiyAS 19.04.2019  mantis 14191 +++
		//Сообщить("По данным номерам шасси не найдено ни одно изделие!");
		Сообщить(НСтр("ru = 'По данным номерам шасси не найден ни один продукт!'; en = 'Products not found!'"));
		//rarus FominskiyAS 19.04.2019  mantis 14191 ---  
		Возврат;
	КонецЕсли;
	Для Каждого ТекИзделие Из ЗначениеВозвращаемыхДанных.МассивИзделий Цикл
		//rarus agar 28.08.2020 15696 ++
		Если ПродуктЯвляетсяНадстройкойИлиУслугой(ТекИзделие) Тогда
			Сообщить(СтрШаблон(НСтр("ru = 'Продукт %1 является надстройкой или услугой - нельзя добавить в документ.';
		                            |en = 'The product %1 is a body or a service. Adding prohibited'"), ТекИзделие));
			Продолжить;
		КонецЕсли;
		//rarus agar 28.08.2020 15696 --
		
		ПараметрыОтбора = Новый Структура("Изделие", ТекИзделие);
		Если Объект.ПродуктыПоЗаявке.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
			НовоеИзделие = Объект.ПродуктыПоЗаявке.Добавить();
			НовоеИзделие.Изделие = ТекИзделие;
			//НовоеИзделие.Продукт = ПолучитьПродуктПоИзделию(ТекИзделие);	// rarus tenkam 12.08.2019 mantis 14427 + 14430 + удалить
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеВозвращаемыхДанных.МассивНенайденных.Количество() <> 0 Тогда
		СообщениеОбОшибке = "Не найдены изделия со следующими номерами шасси:" + Символы.ПС;
		Для Каждого ТекНомерШасси Из ЗначениеВозвращаемыхДанных.МассивНенайденных Цикл
			СообщениеОбОшибке = СообщениеОбОшибке + ТекНомерШасси + Символы.ПС;
		КонецЦикла;
		Сообщить(СообщениеОбОшибке);
	КонецЕсли;

	ЭтаФорма.Модифицированность	= Истина;
КонецПроцедуры

// rarus tenkam 12.08.2019 mantis 14427 +++
//Функция ПолучитьПродуктПоИзделию(Изделие)
//	Возврат РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(Изделие);	
//КонецФункции
// rarus tenkam 12.08.2019 mantis 14427 ---

//rarus tenkam 14.03.2017 mantis 7623---

//rarus abrant 20.06.2017 mantis 9146 +++
&НаКлиенте
Процедура ВыполнитьПерерасчетОказанныхУслуг(АПВсеОК)
	
	ВсеОК = Истина;
	Если НЕ ЗначениеЗаполнено(Объект.ДатаПолучения) Тогда
		 Сообщить("Пожалуйста, укажите Дату получения.");
		 ВсеОК = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.МестоДоставки) И НЕ ЗначениеЗаполнено(Объект.МестоПолучения) Тогда
		 Сообщить("Пожалуйста, укажите Место доставки и Место получения");
		 ВсеОК = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.СпособДоставки) Тогда
		 Сообщить("Пожалуйста, укажите Способ доставки.");
		 ВсеОК = Ложь;
	КонецЕсли;
	Если ВсеОК Тогда
		 ВыполнитьПерерасчетОказанныхУслугНаСервере(АПВсеОК);
	Иначе
		 АПВсеОК = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПерерасчетОказанныхУслугНаСервере(АПВсеОК)
	ВсеОК = Истина;
	Если Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена ИЛИ
		Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.ДоставкаЗавершена Тогда
		Сообщить("Заполнение табличной части 'Оказанные услуги' нельзя производить для Заявок на действие со статусом 'Исполнена' и 'Доставка завершена'.");
		ВсеОК = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.МестоДоставки) И ЗначениеЗаполнено(Объект.МестоПолучения) И 
		(НЕ ЗначениеЗаполнено(Объект.МестоДоставки.АдресСкладаЛогистический) ИЛИ
		НЕ ЗначениеЗаполнено(Объект.МестоПолучения.АдресСкладаЛогистический)) Тогда
		Сообщить("Пожалуйста, укажите Адрес склада (логистический) для Места получения и места доставки.");
		ВсеОК = Ложь;
	КонецЕсли;
	Если Объект.ПродуктыПоЗаявке.Выгрузить().Количество()=0 Тогда
		Сообщить("Для заполнения табличной части 'Оказанные услуги' требуется хотя бы один продукт в табличной части 'Список продуктов'.");
		ВсеОК = Ложь;
	КонецЕсли;
	Если ВсеОК Тогда
		//rarus tenkam 09.08.2017 mantis 10589 +++
		////rarus abrant 19.07.2017 mantis 9146 +++
		//НужноПересчитывать = Ложь;
		//Если Объект.Ссылка <> Документы.Scan_ЗаявкаНаДействие.ПустаяСсылка() Тогда
		//	Запрос = Новый Запрос;
		//	Запрос.Текст = 
		//	"ВЫБРАТЬ
		//	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Изделие,
		//	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка
		//	|ПОМЕСТИТЬ Изделия
		//	|ИЗ
		//	|	Документ.Scan_ЗаявкаНаДействие.ПродуктыПоЗаявке КАК Scan_ЗаявкаНаДействиеПродуктыПоЗаявке
		//	|ГДЕ
		//	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка = &Ссылка
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	Scan_ЗаявкаНаДействиеОказанныеУслуги.Изделие,
		//	|	Scan_ЗаявкаНаДействиеОказанныеУслуги.Стоимость
		//	|ПОМЕСТИТЬ Стоимости
		//	|ИЗ
		//	|	Документ.Scan_ЗаявкаНаДействие.ОказанныеУслуги КАК Scan_ЗаявкаНаДействиеОказанныеУслуги
		//	|ГДЕ
		//	|	Scan_ЗаявкаНаДействиеОказанныеУслуги.Ссылка = &Ссылка
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	Изделия.Изделие,
		//	|	Стоимости.Стоимость,
		//	|	Изделия.Ссылка
		//	|ПОМЕСТИТЬ СтоимостиУслуг
		//	|ИЗ
		//	|	Изделия КАК Изделия
		//	|		ЛЕВОЕ СОЕДИНЕНИЕ Стоимости КАК Стоимости
		//	|		ПО Изделия.Изделие = Стоимости.Изделие
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.Стоимость,
		//	|	СтоимостиУслуг.Изделие,
		//	|	СтоимостиУслуг.Стоимость КАК Стоимость1
		//	|ИЗ
		//	|	СтоимостиУслуг КАК СтоимостиУслуг
		//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_МатрицаТарифовДляДилеровПоДоставкеИзделий.СрезПоследних(&ДатаПолучения, ) КАК Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних
		//	|		ПО СтоимостиУслуг.Изделие.ТипПродуктаЛогистический = Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.ЛогистическийТип
		//	|			И СтоимостиУслуг.Изделие.МодельПродукта.КолеснаяФормула = Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.КолеснаяФормула
		//	|			И СтоимостиУслуг.Ссылка.СпособДоставки = Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.СпособДоставки
		//	|			И СтоимостиУслуг.Ссылка.МестоДоставки.АдресСкладаЛогистический = Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.АдресДоставки
		//	|			И СтоимостиУслуг.Ссылка.МестоПолучения.АдресСкладаЛогистический = Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.АдресПолучения";
		//	
		//	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		//	Запрос.УстановитьПараметр("ДатаПолучения", Объект.ДатаПолучения);
		//	РезультатЗапроса = Запрос.Выполнить();
		//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//		Если ВыборкаДетальныеЗаписи.Стоимость <> ВыборкаДетальныеЗаписи.Стоимость1 Тогда
		//			НужноПересчитывать = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла;
		//Иначе
		//	НужноПересчитывать = Истина;
		//КонецЕсли;		
		//
		//Если НужноПересчитывать Тогда
		//	//rarus abrant 19.07.2017 mantis 9146 ---
		//	Объект.ОказанныеУслуги.Очистить();
		//	АдресДоставки 	= Объект.МестоДоставки.АдресСкладаЛогистический;
		//	АдресПолучения 	= Объект.МестоПолучения.АдресСкладаЛогистический;
		//	ДатаПолучения 	= Объект.ДатаПолучения;
		//	СпособДоставки 	= Объект.СпособДоставки;
		//	
		//	ТаблицаПродуктов = Объект.ПродуктыПоЗаявке.Выгрузить();
		//	н=0;
		//	Для каждого Продукт из ТаблицаПродуктов Цикл
		//		
		//		ВсеОК = Истина;
		//		ЛогистическийТип 	= Продукт.Продукт.Изделие.ТипПродуктаЛогистический;
		//		КолеснаяФормула 	= Продукт.Продукт.Изделие.МодельПродукта.КолеснаяФормула;
		//		
		//		Если НЕ ЗначениеЗаполнено(ЛогистическийТип) Тогда
		//			Сообщить("Для получения стоимости оказанных услуг необходимо указать Логистический тип для продукта '" +Продукт.Продукт+"'.");
		//			ВсеОК = Ложь;
		//		КонецЕсли;
		//		
		//		Если НЕ ЗначениеЗаполнено(КолеснаяФормула) Тогда
		//			Сообщить("Для получения стоимости оказанных услуг необходимо указать Колесную формулу для модели '" +Продукт.Продукт.Изделие.МодельПродукта+"'.");
		//			ВсеОК = Ложь;
		//		КонецЕсли;
		//		
		//		Если ВсеОК Тогда
		//			Запрос = Новый Запрос;
		//			Запрос.Текст = 
		//			"ВЫБРАТЬ
		//			|	Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.Стоимость
		//			|ИЗ
		//			|	РегистрСведений.Scan_МатрицаТарифовДляДилеровПоДоставкеИзделий.СрезПоследних(&ДатаПолучения, ) КАК Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних
		//			|ГДЕ
		//			|	Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.ЛогистическийТип = &ЛогистическийТип
		//			|	И Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.СпособДоставки = &СпособДоставки
		//			|	И Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.КолеснаяФормула = &КолеснаяФормула
		//			|	И Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.АдресПолучения = &АдресПолучения
		//			|	И Scan_МатрицаТарифовДляДилеровПоДоставкеИзделийСрезПоследних.АдресДоставки = &АдресДоставки";
		//			
		//			Запрос.УстановитьПараметр("АдресДоставки", АдресДоставки);
		//			Запрос.УстановитьПараметр("АдресПолучения", АдресПолучения);
		//			Запрос.УстановитьПараметр("ДатаПолучения", ДатаПолучения);
		//			Запрос.УстановитьПараметр("КолеснаяФормула", КолеснаяФормула);
		//			Запрос.УстановитьПараметр("ЛогистическийТип", ЛогистическийТип);
		//			Запрос.УстановитьПараметр("СпособДоставки", СпособДоставки);
		//			
		//			РезультатЗапроса = Запрос.Выполнить();
		//			
		//			Стоимость = РезультатЗапроса.Выгрузить();
		//			
		//			Если Стоимость.Количество() = 0 Тогда
		//				Сообщить("Не найден ни один тариф для дилеров по доставке изделий для '" + Продукт.Продукт.Изделие + "'.");
		//				АПВсеОК = Ложь;
		//			Иначе
		//				НоваяЗапись = Объект.ОказанныеУслуги.Добавить();
		//				НоваяЗапись.Изделие = Продукт.Изделие;
		//				НоваяЗапись.Стоимость = Стоимость[0].Стоимость;
		//				н=н+1;
		//			КонецЕсли;
		//		Иначе
		//			АПВсеОК = Ложь;	
		//		КонецЕсли;
		//		
		//	КонецЦикла;
		//	//rarus abrant 19.07.2017 mantis 9146 +++
		//	Если н>0 Тогда
		//		Сообщить("Оказанные услуги были пересчитаны.");
		//		ЭтаФорма.Модифицированность = Истина;
		//	КонецЕсли;
		//КонецЕсли;
		////rarus abrant 19.07.2017 mantis 9146 ---
		НужноОбновлять = Ложь;
		Если Объект.ПродуктыПоЗаявке.Количество() <> Объект.ОказанныеУслуги.Количество() Тогда
			НужноОбновлять = Истина;
		КонецЕсли;
		ТЗПродуктовИзделий = Объект.ПродуктыПоЗаявке.Выгрузить();
		ТЗПродуктовИзделий.Колонки.Добавить("СтараяСтоимость"); 
		ТЗПродуктовИзделий.Колонки.Добавить("НоваяСтоимость");
		Для Каждого ТекСтрока Из ТЗПродуктовИзделий Цикл
			ТекСтрока.НоваяСтоимость = Обработки.Scan_КалькуляторТарифовНаДоставку.ПолучитьСтоимостьТарифаПоПакету(Объект.ПакетУслуг,Объект.ДатаДоставкиПлановая,
			Объект.МестоПолучения.АдресСкладаЛогистический, Объект.МестоДоставки.АдресСкладаЛогистический, Объект.СпособДоставки,
			// rarus tenkam 12.08.2019 mantis 14427 +++
			//ТекСтрока.Продукт.ТипЛогистический, ТекСтрока.Продукт.МодельПродукта.КолеснаяФормула);
			ТекСтрока.Изделие.ТипПродуктаЛогистический, ТекСтрока.Изделие.МодельПродукта.КолеснаяФормула);
			// rarus tenkam 12.08.2019 mantis 14427 ---
			НайденныеСтроки = Объект.ОказанныеУслуги.НайтиСтроки(Новый Структура("Изделие",ТекСтрока.Изделие));
			Если НайденныеСтроки.Количество() <> 0 Тогда
				СтрокаУслуг = НайденныеСтроки[0];
				ТекСтрока.СтараяСтоимость = СтрокаУслуг.Стоимость;
			Иначе
				ТекСтрока.СтараяСтоимость = 0;
				НужноОбновлять = Истина;
			КонецЕсли;			
		КонецЦикла;
		Если НЕ НужноОбновлять Тогда
			Для Каждого ТекСтрока Из ТЗПродуктовИзделий Цикл
				Если ТекСтрока.СтараяСтоимость <> ТекСтрока.НоваяСтоимость Тогда
					НужноОбновлять = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если НужноОбновлять Тогда
			Объект.ОказанныеУслуги.Очистить();
			Для Каждого ТекСтрока Из ТЗПродуктовИзделий Цикл
				НоваяСтрока = Объект.ОказанныеУслуги.Добавить();
				НоваяСтрока.Изделие = ТекСтрока.Изделие;
				// rarus tenkam 24.01.2019 mantis 13736 +++
				//НоваяСтрока.Стоимость = ТекСтрока.НоваяСтоимость;
				НоваяСтрока.Стоимость = Окр(ТекСтрока.НоваяСтоимость,-2);
				// rarus tenkam 24.01.2019 mantis 13736 ---
			КонецЦикла;
		КонецЕсли;	
		//rarus tenkam 09.08.2017 mantis 10589 ---
	Иначе
		АПВсеОК = Ложь;
	КонецЕсли;
КонецПроцедуры
//rarus abrant 20.06.2017 mantis 9146 ---

//rarus tenkam 09.08.2017 mantis 10589 +++
&НаКлиенте
Процедура ПакетУслугПриИзменении(Элемент)
	Если Scan_ПраваИНастройки.Scan_Право("ВключитьУчетОказанныхУслуг") И
		ПроверитьНеобходимостьПерерасчета(Объект.ХозОперация,Объект.СтатусЗаявки) Тогда
		Если Объект.ПровереноАП Тогда
			АПВсеОК = Истина;
			ВыполнитьПерерасчетОказанныхУслуг(АПВсеОК);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//rarus tenkam 09.08.2017 mantis 10589 ---

//rarus tenkam 17.10.2017 mantis 11366 +++

&НаКлиенте
Процедура ДобавитьКонтакты(Команда)
	
	ПараметрыФормы = Новый Структура;
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу") ИЛИ
			Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу") Тогда	//rarus tenkam 02.11.2016 mantis 7609 +
		Если ЗначениеЗаполнено(Объект.Хранитель) Тогда
			
			Если ТипЗнч(Объект.Хранитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ЗначениеОтбора = Новый Структура("Владелец", Объект.Хранитель);
			Иначе
				Владелец = ПолучитьКонтрагентаПоДилеру(Объект.Хранитель);
				ЗначениеОтбора = Новый Структура("Владелец", Владелец);
			КонецЕсли; 			
			
			ПараметрыФормы.Вставить("Отбор", ЗначениеОтбора);
		КонецЕсли;	
		
	Иначе
		Если ЗначениеЗаполнено(Объект.Грузополучатель) Тогда
			Если ТипЗнч(Объект.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ЗначениеОтбора = Новый Структура("Владелец", Объект.Грузополучатель);
			Иначе
				Владелец = ПолучитьКонтрагентаПоДилеру(Объект.Грузополучатель);
				ЗначениеОтбора = Новый Структура("Владелец", Владелец);
			КонецЕсли;
			
			ПараметрыФормы.Вставить("Отбор", ЗначениеОтбора);
		КонецЕсли; 
	КонецЕсли;

	Обработчик = Новый ОписаниеОповещения("ПослеВыбораКонтактныхЛиц", ЭтотОбъект, ПараметрыФормы);
	Результат = ОткрытьФорму("Справочник.Scan_КонтактныеЛица.Форма.ФормаВыбораНескольких", ПараметрыФормы, Элементы.КонтактныеЛицаКонтактноеЛицо,,,,Обработчик); 
	
	ЭтаФорма.Модифицированность	= Истина; //rarus pechek 04.03.2020 mantis 15652
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКонтактныхЛиц(ЗначенияВыбранныхПараметров, Параметры) Экспорт	  
	Если ЗначенияВыбранныхПараметров = Неопределено ИЛИ
		ЗначенияВыбранныхПараметров = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	// Добавим
	Для Каждого ТекКЛ Из ЗначенияВыбранныхПараметров Цикл
		МассивСтрок = Объект.КонтактныеЛица.НайтиСтроки(Новый Структура("КонтактноеЛицо", ТекКЛ));
		Если МассивСтрок.Количество() > 0 Тогда
			// Такое КЛ уже есть              
			Продолжить; 
		КонецЕсли; 
		
		ЗаполнитьКонтактнуюинформацию(ТекКЛ);		
	КонецЦикла; 	
КонецПроцедуры   
//rarus tenkam 17.10.2017 mantis 11366 ---

//rarus tenkam 22.11.2017 mantis 12373 +++
&НаКлиенте
Процедура ЗаписатьРучная(Команда)
	ПредупредитьПередЗаписью(РежимЗаписиДокумента.Запись, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	ПредупредитьПередЗаписью(РежимЗаписиДокумента.Проведение, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	ПредупредитьПередЗаписью(РежимЗаписиДокумента.Проведение, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПредупредитьПередЗаписью(РежимЗаписи, ЗакрытьФорму = Ложь)
	
	ДопПараметры = Новый Структура("РежимЗаписи", РежимЗаписи);
	ДопПараметры.Вставить("ЗакрытьФорму", ЗакрытьФорму);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстПредупреждения = ПолучитьТекстПредупрежденияПередЗаписью();
		
		// rarus tenkam 08.06.2018 mantis 13023 +++
		ТекстСоответствиеСкладов = ПолучитьТекстПредупрежденияСоответствияСкладаПередЗаписью();
		// rarus tenkam 08.06.2018 mantis 13023 ---
	
		Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
			// rarus tenkam 08.06.2018 mantis 13023 +++
			Если ЗначениеЗаполнено(ТекстСоответствиеСкладов) Тогда
				ДопПараметры.Вставить("ТекстСоответствиеСкладов", ТекстСоответствиеСкладов);
			КонецЕсли;			
			// rarus tenkam 08.06.2018 mantis 13023 ---
			
			Оповещение = Новый ОписаниеОповещения("ПредупредитьЗавершение", ЭтотОбъект, ДопПараметры);
			ПоказатьВопрос(Оповещение, ТекстПредупреждения,РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Предупреждение");
		Иначе  
			// rarus tenkam 08.06.2018 mantis 13023 +++
			Если ЗначениеЗаполнено(ТекстСоответствиеСкладов) Тогда
				
				Оповещение = Новый ОписаниеОповещения("ПредупредитьЗавершение2", ЭтотОбъект, ДопПараметры);
				ПоказатьВопрос(Оповещение, ТекстСоответствиеСкладов,РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Предупреждение");
			Иначе	
				// rarus tenkam 08.06.2018 mantis 13023 ---	
				Попытка // rarus tenkam 05.12.2018 mantis 13823 +
					ВсеОк = ЭтотОбъект.Записать(ДопПараметры); 	//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"    
				// rarus tenkam 05.12.2018 mantis 13823 +++
				Исключение
					Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") Тогда
						Модифицированность = Ложь;
						ВсеОк = Истина;
						ОбновитьОтображениеДанных(); //rarus bonmak 14.01.2021 16941 
						Прочитать();  //rarus bonmak 14.01.2021 16941
					Иначе
						Сообщить(ОписаниеОшибки());
						ВсеОк = Ложь;
					КонецЕсли;
				КонецПопытки;
				// rarus tenkam 05.12.2018 mantis 13823 ---
				Если ВсеОк И ЗакрытьФорму Тогда 	//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"
					Закрыть();
				КонецЕсли;	
			КонецЕсли;		// rarus tenkam 08.06.2018 mantis 13023 +
		КонецЕсли;  
	Иначе   
		Попытка
			ВсеОк = ЭтотОбъект.Записать(ДопПараметры);	//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"
			//rarus bonmak 14.01.2021 16941 ++		
			//Если ВсеОк И ЗакрытьФорму Тогда		//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"   
			//	Закрыть();
			//КонецЕсли; 
			//rarus bonmak 14.01.2021 16941 --
		Исключение
			//rarus bonmak 14.01.2021 16941 ++
			//Сообщить(ОписаниеОшибки());	//15.01.2019 +
			Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") Тогда
				Модифицированность = Ложь;
				ВсеОк = Истина;
				ОбновитьОтображениеДанных(); 
				Прочитать();
			Иначе
				Сообщить(ОписаниеОшибки());
				ВсеОк = Ложь;
			КонецЕсли;
			//rarus bonmak 14.01.2021 16941 --
		КонецПопытки;
		//rarus bonmak 14.01.2021 16941 ++
		//перенес из попытки
		Если ВсеОк И ЗакрытьФорму Тогда		//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"   
			Закрыть();
		КонецЕсли;
		//rarus bonmak 14.01.2021 16941 --
	КонецЕсли;	
	
КонецПроцедуры
	
&НаСервере
Функция ПолучитьТекстПредупрежденияПередЗаписью()
	ТекстСписокПродуктов = "";
	
	ТабПродуктов = Объект.ПродуктыПоЗаявке.Выгрузить();
	Если ТабПродуктов.Количество() <> 0 Тогда
		// rarus tenkam 11.08.2019 mantis 14427 +++ 	
		//СписокПродуктов = ТабПродуктов.ВыгрузитьКолонку("Продукт");
		СписокПродуктов = ТабПродуктов.ВыгрузитьКолонку("Изделие");
		// rarus tenkam 11.08.2019 mantis 14427 ---
	Иначе
		Возврат "";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка КАК Ссылка,
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.Номер КАК Номер,
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Изделие.НомерИзделия КАК ИзделиеНомерИзделия,
	// rarus tenkam 11.08.2019 mantis 14427 +++
	//|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Продукт КАК Продукт
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.Дата КАК Дата,
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация КАК ХозОперация,
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки КАК СтатусЗаявки,
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Изделие КАК Изделие
	// rarus tenkam 11.08.2019 mantis 14427 ---
	|ИЗ
	|	Документ.Scan_ЗаявкаНаДействие.ПродуктыПоЗаявке КАК Scan_ЗаявкаНаДействиеПродуктыПоЗаявке
	|ГДЕ
	|	(Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.Новая)
	|			ИЛИ Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе)
	|			ИЛИ Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.Подтверждена))
	|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ПометкаУдаления = ЛОЖЬ
	// rarus tenkam 11.08.2019 mantis 14427 +++
	//|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Продукт В(&СписокПродуктов)
	|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Изделие В(&СписокПродуктов)
	// rarus tenkam 11.08.2019 mantis 14427 +++
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИзделиеНомерИзделия,
	|	Номер";
	Запрос.УстановитьПараметр("СписокПродуктов", СписокПродуктов);
	РезультатЗапроса = Запрос.Выполнить();        	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТекущийПродукт = Неопределено;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// rarus tenkam 11.08.2019 mantis 14427 +++
		//Если ТекущийПродукт <> ВыборкаДетальныеЗаписи.Продукт Тогда
		Если ТекущийПродукт <> ВыборкаДетальныеЗаписи.Изделие Тогда
		// rarus tenkam 11.08.2019 mantis 14427 ---
			ТекстСписокПродуктов = ТекстСписокПродуктов + Символы.ПС;
			// rarus tenkam 11.08.2019 mantis 14427 +++
			//ТекущийПродукт = ВыборкаДетальныеЗаписи.Продукт;
			ТекущийПродукт = ВыборкаДетальныеЗаписи.Изделие;
			// rarus tenkam 11.08.2019 mantis 14427 ---  		
		КонецЕсли;
		// rarus tenkam 11.08.2019 mantis 14427 +++
		//ТекЗаявка = ВыборкаДетальныеЗаписи.Ссылка; 
		//НаименованиеЗаявки = "Заявка на действие " + ТекЗаявка.Номер + " от " + Формат(ТекЗаявка.Дата,"ДЛФ=Д");
		//ТекстСписокПродуктов = ТекстСписокПродуктов + ВыборкаДетальныеЗаписи.ИзделиеНомерИзделия + "    " + НаименованиеЗаявки + "   <" + ТекЗаявка.ХозОперация + "> со статусом '" + ТекЗаявка.СтатусЗаявки + "'" + Символы.ПС;
		НаименованиеЗаявки = "Заявка на действие " + ВыборкаДетальныеЗаписи.Номер + " от " + Формат(ВыборкаДетальныеЗаписи.Дата,"ДЛФ=Д");
		ТекстСписокПродуктов = ТекстСписокПродуктов + ВыборкаДетальныеЗаписи.ИзделиеНомерИзделия + "    " + НаименованиеЗаявки + "   <" + ВыборкаДетальныеЗаписи.ХозОперация + "> со статусом '" + ВыборкаДетальныеЗаписи.СтатусЗаявки + "'" + Символы.ПС;
		// rarus tenkam 11.08.2019 mantis 14427 ---
			
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстСписокПродуктов) Тогда
		ТекстПредупреждения = "В составе документа указаны изделия, для которых есть заявки со статусами ""Новая"", ""В работе"", ""Подтверждена"":" + Символы.ПС +ТекстСписокПродуктов + Символы.ПС +"Продолжить?";
		Возврат ТекстПредупреждения;
	Иначе
		Возврат "";
	КонецЕсли;	
КонецФункции

&НаКлиенте
Процедура ПредупредитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		// rarus tenkam 08.06.2018 mantis 13023 +++
		Если ДополнительныеПараметры.Свойство("ТекстСоответствиеСкладов") Тогда
			Оповещение = Новый ОписаниеОповещения("ПредупредитьЗавершение2", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(Оповещение, ДополнительныеПараметры.ТекстСоответствиеСкладов,РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Предупреждение");	
		Иначе
			// rarus tenkam 08.06.2018 mantis 13023 ---	
			
			Попытка		// rarus tenkam 07.11.2018 mantis 13672 +++
				ВсеОк = ЭтотОбъект.Записать(ДополнительныеПараметры);		//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"
				// rarus tenkam 07.11.2018 mantis 13672 +++ 				
			Исключение
				//rarus bonmak 14.01.2021 16941 ++
				//добавил условие и отработку Истина
				Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") Тогда
					Модифицированность = Ложь;
					ВсеОк = Истина;
					ОбновитьОтображениеДанных(); 
					Прочитать();
				Иначе	
					ВсеОк = Ложь;
					// rarus tenkam 11.07.2019 mantis 12631 +++
					////temp
					//Сообщить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось записать документ!'; en = 'Document was not written!'"));
					Scan_ОбщегоНазначенияСервер.ЗаписатьСобытиеОшибкаВЖР("Ошибка записи заявки на действие",Объект.Ссылка,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					// rarus tenkam 11.07.2019 mantis 12631 ---
				КонецЕсли;
				//rarus bonmak 14.01.2021 16941 --
			КонецПопытки;
		    // rarus tenkam 07.11.2018 mantis 13672 ---
			
			Если ВсеОк И ДополнительныеПараметры.ЗакрытьФорму Тогда 		//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"
				Закрыть();
			КонецЕсли;
		КонецЕсли;	// rarus tenkam 08.06.2018 mantis 13023 +
	КонецЕсли;
КонецПроцедуры    
//rarus tenkam 22.11.2017 mantis 12373 ---

// rarus tenkam 07.06.2018 mantis 13023 +++
&НаСервере
Функция ПолучитьТекстПредупрежденияСоответствияСкладаПередЗаписью()
	ТекстСписокПродуктов = "";
	
	ТабПродуктов = Объект.ПродуктыПоЗаявке.Выгрузить();
	Если ТабПродуктов.Количество() <> 0 Тогда
		// rarus tenkam 11.08.2019 mantis 14427 +++
		//СписокПродуктов = ТабПродуктов.ВыгрузитьКолонку("Продукт");
		СписокПродуктов = ТабПродуктов.ВыгрузитьКолонку("Изделие");
		// rarus tenkam 11.08.2019 mantis 14427 ---		
	Иначе
		Возврат "";
	КонецЕсли;
	//rarus bonmak 16822 21.12.2020 ++
	Если Объект.ДатаДоставкиПлановая = Дата (1,1,1) Тогда
		Возврат "";
	КонецЕсли;
	//rarus bonmak 16822 21.12.2020 --
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	// rarus tenkam 11.08.2019 mantis 14427 +++
	//|	Scan_Продукты.Ссылка КАК Продукт,
	//|	Scan_Продукты.Изделие КАК Изделие,
	//|	Scan_Продукты.Изделие.НомерИзделия КАК ИзделиеНомерИзделия
	//|ПОМЕСТИТЬ СписокПродуктов
	//|ИЗ
	//|	Справочник.Scan_Продукты КАК Scan_Продукты
	//|ГДЕ
	//|	Scan_Продукты.Ссылка В(&СписокПродуктов)
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Продукт
	//|;
	|	Scan_Изделия.Ссылка КАК Изделие,
	|	Scan_Изделия.Ссылка.НомерИзделия КАК ИзделиеНомерИзделия
	|ПОМЕСТИТЬ СписокПродуктов
	|ИЗ
	|	Справочник.Scan_Изделия КАК Scan_Изделия
	|ГДЕ
	|	Scan_Изделия.Ссылка В(&СписокПродуктов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Изделие
	|;
	// rarus tenkam 11.08.2019 mantis 14427 ---
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка КАК Ссылка,
	// rarus tenkam 11.08.2019 mantis 14427 +++
	//|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Продукт КАК Продукт
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Изделие КАК Изделие
	// rarus tenkam 11.08.2019 mantis 14427 ---
	|ПОМЕСТИТЬ ЗаявкиПродажи
	|ИЗ
	|	Документ.Scan_ЗаявкаНаДействие.ПродуктыПоЗаявке КАК Scan_ЗаявкаНаДействиеПродуктыПоЗаявке
	|ГДЕ
	|	Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.СтатусЗаявки <> ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.Аннулирована)
	|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И (Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПродажаТретьемуЛицу)
	|			ИЛИ Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК)
	|			ИЛИ Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь)
	|			ИЛИ Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК)
	|			ИЛИ Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияИПродажаТретьемуЛицу)
	|			ИЛИ Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ХозОперация = ЗНАЧЕНИЕ(Справочник.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК))
	|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.МестоПолучения <> &МестоДоставки
	|	И Scan_ЗаявкаНаДействиеПродуктыПоЗаявке.Ссылка.ДатаПродажи >= &ДатаДоставки
	|
	|ИНДЕКСИРОВАТЬ ПО
	// rarus tenkam 11.08.2019 mantis 14427 +++
	//|	Продукт
	|	Изделие
	// rarus tenkam 11.08.2019 mantis 14427 ---
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	// rarus tenkam 11.08.2019 mantis 14427 +++
	//|	СписокПродуктов.Продукт КАК Продукт,
	|	СписокПродуктов.Изделие КАК Изделие,
	|	ЕСТЬNULL(ЗаявкиПродажи.Ссылка.МестоПолучения, ЗНАЧЕНИЕ(Справочник.Scan_МестаХранения.ПустаяСсылка)) КАК МестоПолучения,
	// rarus tenkam 11.08.2019 mantis 14427 ---
	|	СписокПродуктов.ИзделиеНомерИзделия КАК НомерИзделия,
	|	ЕСТЬNULL(ЗаявкиПродажи.Ссылка, ЗНАЧЕНИЕ(Документ.Scan_ЗаявкаНаДействие.ПустаяСсылка)) КАК ЗаявкаПродажи
	|ИЗ
	|	СписокПродуктов КАК СписокПродуктов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкиПродажи КАК ЗаявкиПродажи
	// rarus tenkam 11.08.2019 mantis 14427 +++
	//|		ПО СписокПродуктов.Продукт = ЗаявкиПродажи.Продукт";
	|		ПО СписокПродуктов.Изделие = ЗаявкиПродажи.Изделие";
	// rarus tenkam 11.08.2019 mantis 14427 ---
	Запрос.УстановитьПараметр("СписокПродуктов", СписокПродуктов);
	Запрос.УстановитьПараметр("МестоДоставки", Объект.МестоДоставки);
	Запрос.УстановитьПараметр("ДатаДоставки", Объект.ДатаДоставкиПлановая);
	РезультатЗапроса = Запрос.Выполнить();        	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЗаявкаПродажи) Тогда
			// rarus tenkam 11.08.2019 mantis 14427 +++
			//ТекстСписокПродуктов = ТекстСписокПродуктов + "Для шасси " + ВыборкаДетальныеЗаписи.НомерИзделия + " создана заявка на продажу с места хранения " + ВыборкаДетальныеЗаписи.ЗаявкаПродажи.МестоПолучения + "." + Символы.ПС;
			ТекстСписокПродуктов = ТекстСписокПродуктов + "Для шасси " + ВыборкаДетальныеЗаписи.НомерИзделия + " создана заявка на продажу с места хранения " + ВыборкаДетальныеЗаписи.МестоПолучения + "." + Символы.ПС;
			// rarus tenkam 11.08.2019 mantis 14427 ---		
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстСписокПродуктов) Тогда
		ТекстПредупреждения = "Проверьте корректность заполнения заявки. " + Символы.ПС + ТекстСписокПродуктов + "Провести документ?";
		Возврат ТекстПредупреждения;
	Иначе
		Возврат "";
	КонецЕсли;	
КонецФункции

&НаКлиенте
Процедура ПредупредитьЗавершение2(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Попытка 	// rarus tenkam 11.07.2019 mantis 12631 +
			ВсеОк = ЭтотОбъект.Записать(ДополнительныеПараметры);		//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"
			
			// rarus tenkam 11.07.2019 mantis 12631 +++
		Исключение
			//rarus bonmak 14.01.2021 16941 ++
			//добавил условие и отработку Истина
			Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусь") Тогда
				Модифицированность = Ложь;
				ВсеОк = Истина;
				ОбновитьОтображениеДанных();
				Прочитать();
			Иначе
				ВсеОк = Ложь;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось записать документ!'; en = 'Document was not written!'"));
				Scan_ОбщегоНазначенияСервер.ЗаписатьСобытиеОшибкаВЖР("Ошибка записи заявки на действие",Объект.Ссылка,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецЕсли;
			//rarus bonmak 14.01.2021 16941 --
		КонецПопытки;
		// rarus tenkam 11.07.2019 mantis 12631 ---
		
		Если ВсеОк И ДополнительныеПараметры.ЗакрытьФорму Тогда 		//rarus tenkam 07.12.2017 mantis 12540 добавила "ВсеОк"
			Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры    

// rarus tenkam 07.06.2018 mantis 13023 ---

//11774 +++ для тестирования
&НаКлиенте
Процедура ПродуктыПоЗаявкеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элементы.ГруппаФон.ТолькоПросмотр Тогда
		Если Поле = Элементы.ПродуктыПоЗаявкеИзделие Тогда
			// rarus tenkam 10.04.2019 mantis 14195 +++
			//ОткрытьЗначение(Элементы.ПродуктыПоЗаявке.ТекущиеДанные.Продукт);       
			// rarus tenkam 12.08.2019 mantis 14427 +++
			//ПоказатьЗначение(,Элементы.ПродуктыПоЗаявке.ТекущиеДанные.Продукт);
			ПоказатьЗначение(,Элементы.ПродуктыПоЗаявке.ТекущиеДанные.Изделие);
			// rarus tenkam 12.08.2019 mantis 14427 ---
			// rarus tenkam 10.04.2019 mantis 14195 --- 			
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры
//11774 ---

//rarus tenkam 24.11.2017 mantis 11353 +++
&НаСервереБезКонтекста
Функция ПолучитьСпособДоставкиИзНастройки()
	Возврат Scan_ПраваИНастройки.Scan_Право("СпособДоставкиПоУмолчанию");	
КонецФункции
//rarus tenkam 24.11.2017 mantis 11353 ---

// rarus tenkam 08.05.2018 mantis 13063 +++
&НаКлиенте
Процедура АннулироватьЗаявку(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Или ЭтаФорма.Модифицированность Тогда
		Сообщить("Для аннулирования заявки необходимо записать документ");	
	Иначе
		Scan_ВспомогательныеФункцииКлиент.ОбработатьИзменениеЗаявкиНаДействие(Ложь, Объект.Ссылка, ЭтаФорма);
	КонецЕсли; 
КонецПроцедуры        
// rarus tenkam 08.05.2018 mantis 13063 ---


&НаКлиенте
Процедура КорректироватьЗаявку(Команда) //rarus bonmak 14635 15.07.2019 ++
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Или ЭтаФорма.Модифицированность Тогда
		Сообщить("Для корректировки заявки необходимо записать документ");	
	Иначе
		Scan_ВспомогательныеФункцииКлиент.ОбработатьИзменениеЗаявкиНаДействие(Истина, Объект.Ссылка, ЭтаФорма);
	КонецЕсли;
КонецПроцедуры //rarus bonmak 14635 15.07.2019 --

// rarus tenkam 11.07.2018 mantis 13023 +++
&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И Модифицированность Тогда
		СтандартнаяОбработка = Ложь;
		ТекстПредупреждения = "Документ не был записан. Данные не будут сохранены.";
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, );
		ПоказатьВопрос(Оповещение, ТекстПредупреждения,РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Предупреждение");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры   
// rarus tenkam 11.07.2018 mantis 13023 ---

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

// rarus tenkam 12.08.2019 mantis 14427 +++
&НаКлиенте
Процедура ПродуктыПоЗаявкеИзделиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//rarus agar 28.08.2020 15696 ++
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	
	МассивТиповПродуктов = ПолучитьТипыПродуктовНадстроекИУслуг();
	
	СписокТиповПродуктов = Новый СписокЗначений;
	СписокТиповПродуктов.ЗагрузитьЗначения(МассивТиповПродуктов);
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ТипПродукта");
	эОтбор.ВидСравнения     = ВидСравненияКомпоновкиДанных.НеВСписке;
	эОтбор.ПравоеЗначение   = СписокТиповПродуктов;
	эОтбор.Использование    = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	
	//Результат = ОткрытьФорму("Справочник.Scan_Изделия.ФормаВыбора",,Элементы.ПродуктыПоЗаявкеИзделие); 
	Результат = ОткрытьФорму("Справочник.Scan_Изделия.ФормаВыбора", ПараметрыФормы, Элементы.ПродуктыПоЗаявкеИзделие);
	//rarus agar 28.08.2020 15696 --
	
КонецПроцедуры

&НаКлиенте
Процедура ПродуктыПоЗаявкеИзделиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	//rarus agar 28.08.2020 15696 ++
	Если ПродуктЯвляетсяНадстройкойИлиУслугой(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		Сообщить(НСтр("ru = 'Продукт является надстройкой или услугой - нельзя добавить в документ.';
		              |en = 'The product is a body or a service. Adding prohibited'"));
		Возврат;
	КонецЕсли;
	//rarus agar 28.08.2020 15696 --
	
	МассивСтрок = Объект.ПродуктыПоЗаявке.НайтиСтроки(Новый Структура("Изделие",ВыбранноеЗначение));
	Если МассивСтрок.Количество() > 0 и МассивСтрок[0].НомерСтроки <> ТекущийЭлемент.ТекущаяСтрока + 1 Тогда
		СтандартнаяОбработка = Ложь;              
		Сообщить("Объект ("+ВыбранноеЗначение+") уже подобран в табличную часть в строке "+МассивСтрок[0].НомерСтроки+". Нельзя добавить два одинаковых продукта в заявку");
		Возврат;                                
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ПродуктыПоЗаявке.ТекущиеДанные; //rarus vikhle 26.08.2021 mt 18191 
	СтатусНовая = ПолучитьСтатусНовая();
	ТекущиеДанные.СтатусИзделия = СтатусНовая;
	
КонецПроцедуры

// rarus tenkam 12.08.2019 mantis 14427 ---

//rarus agar 28.08.2020 15696 ++
&НаСервереБезКонтекста
Функция ПродуктЯвляетсяНадстройкойИлиУслугой(Продукт)
	
	Возврат Справочники.Scan_Изделия.ПродуктЯвляетсяНадстройкойИлиУслугой(Продукт);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТипыПродуктовНадстроекИУслуг()
	
	МассивТиповПродуктов = Новый Массив;
	
	МассивТиповПродуктовНадстроек = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИОборудования();
	Для Каждого ЭлементМассива Из МассивТиповПродуктовНадстроек Цикл
		МассивТиповПродуктов.Добавить(ЭлементМассива);
	КонецЦикла;
	
	МассивТиповПродуктовУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовУслуг();
	Для Каждого ЭлементМассива Из МассивТиповПродуктовУслуг Цикл
		МассивТиповПродуктов.Добавить(ЭлементМассива);
	КонецЦикла;
	
	Возврат МассивТиповПродуктов;
	
КонецФункции
//rarus agar 28.08.2020 15696 --

&НаКлиенте
Процедура ПродуктыПоЗаявкеИзделиеПриИзменении(Элемент) //rarus vikhle 26.08.2021 mt 18191 +++
	
	ТекущиеДанные = Элементы.ПродуктыПоЗаявке.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда 
		Если Не ТекущиеДанные.Изделие.Пустая() Тогда
			ТекущиеДанные.ТипТоплива = Scan_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
		Иначе
			ТекущиеДанные.ТипТоплива = "";	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры //rarus vikhle 26.08.2021 mt 18191 ---

#КонецОбласти
