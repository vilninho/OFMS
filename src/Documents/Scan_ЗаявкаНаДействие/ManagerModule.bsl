////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ИЗМЕНЕНИЯ ДАННЫХ ОБЪЕКТА

// Возвращает предопределенную структуру действий
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Функция ПолучитьПараметрыДействия(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	Если ПараметрыДействия=Неопределено Тогда
		ПараметрыДействия = Новый Структура;
	КонецЕсли;
	
	// Производим добавление параметров расширяемых контекст обработки событий объекта
	ПараметрыДействия.Вставить("ОбъектЗаполнен", Объект.ПродуктыПоЗаявке.Количество() > 0);
	
	Возврат ПараметрыДействия;
	
КонецФункции // ПолучитьПараметрыДействия()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ИЗМЕНЕНИЯ ДАННЫХ РЕКВИЗИТОВ ШАПКИ

// Обработчик события возникающего при изменении данных реквизита "Хоз. операция".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ХозОперацияПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	// Вызываем общий обработчик события
	
КонецПроцедуры // ХозОперацияПриИзменении()


// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты=Новый Массив();
	ОбязательныеРеквизиты.Добавить("Организация");
	ОбязательныеРеквизиты.Добавить("ПодразделениеКомпании");
	ОбязательныеРеквизиты.Добавить("Автор");
	ОбязательныеРеквизиты.Добавить("ВалютаДокумента");
	ОбязательныеРеквизиты.Добавить("ХозОперация");
	//rarus tenkam 09.02.2017 tlms 011 (не ясно, что это за ХО) +++
	//Если Объект.ХозОперация=Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСПередачейТК Тогда
	//	ОбязательныеРеквизиты.Добавить("ДатаПродажи");
	//ИначеЕсли Объект.ХозОперация=Справочники.Scan_ХозяйственныеОперации.ЗаявкаНаВыкупПродажуТретьимЛицамИПередачуТК или Объект.ХозОперация=Справочники.Scan_ХозяйственныеОперации.ЗаявкаНаВыкупИПередачуТК или Объект.ХозОперация=Справочники.Scan_ХозяйственныеОперации.ЗаявкаНаВыкупИПостановкуНаХранение или Объект.ХозОперация=Справочники.Scan_ХозяйственныеОперации.ЗаявкаНаВыкупИПродажуТретьимЛицам Тогда 
	//	ОбязательныеРеквизиты.Добавить("ДатаВыкупа");
	//	ОбязательныеРеквизиты.Добавить("Подрядчик");
	//ИначеЕсли Объект.ХозОперация=Справочники.Scan_ХозяйственныеОперации.ПередачаВПроизводство или Объект.ХозОперация=Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаВПроизводство Тогда
	//	ОбязательныеРеквизиты.Добавить("ДатаПередачиВПроизводство");
	//	ОбязательныеРеквизиты.Добавить("Подрядчик");
	//КонецЕсли;
	//rarus tenkam 09.02.2017 tlms 011 (не ясно, что это за ХО) ---	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

//rarus tenkam 21.07.2016 mantis 7162 ++
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//// Счет на оплату
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "СчетЗаказ";
	//КомандаПечати.Представление = НСтр("ru = 'Счет на оплату'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Не Пользователи.РолиДоступны("_ДемоПечатьНепроведенныхДокументов");
	
	//// Демо-пример ограничения доступности команд печати.
	//Если Пользователи.РолиДоступны("_ДемоПечатьСчетаНаОплатуНаПринтер") Тогда
	//	// Счет на оплату (на принтер).
	//	КомандаПечати = КомандыПечати.Добавить();
	//	КомандаПечати.Идентификатор = "СчетЗаказ";
	//	КомандаПечати.Представление = НСтр("ru = 'Счет на оплату (на принтер)'");
	//	КомандаПечати.Картинка = БиблиотекаКартинок.ПечатьСразу;
	//	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//	КомандаПечати.СразуНаПринтер = Истина;
	//КонецЕсли;
	//
	//// Комплект документов
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "СчетЗаказ,СчетЗаказ2,СчетЗаказ2,Обработка._ДемоПечатнаяФорма.ГарантийноеПисьмо,СчетЗаказ,СчетЗаказ,СчетЗаказ2";
	//КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.ФиксированныйКомплект = Истина;
	//КомандаПечати.ПереопределитьПользовательскиеНастройкиКоличества = Истина;
	//КомандаПечати.Порядок = 75;
	//
	//// Комплект документов (на принтер).
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "СчетЗаказ,СчетЗаказ2,СчетЗаказ2,Обработка._ДемоПечатнаяФорма.ГарантийноеПисьмо,СчетЗаказ,СчетЗаказ,СчетЗаказ2";
	//КомандаПечати.Представление = НСтр("ru = 'Комплект документов (на принтер)'");
	//КомандаПечати.Картинка = БиблиотекаКартинок.ПечатьСразу;
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.ФиксированныйКомплект = Истина;
	//КомандаПечати.ПереопределитьПользовательскиеНастройкиКоличества = Истина;
	//КомандаПечати.СразуНаПринтер = Истина;
	//КомандаПечати.Порядок = 75;
	//
	//// Настраиваемый комплект документов.
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "СчетЗаказ,СчетЗаказ2,СчетЗаказ2,Обработка._ДемоПечатнаяФорма.ГарантийноеПисьмо,СчетЗаказ,СчетЗаказ,СчетЗаказ2";
	//КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	//КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
	//КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	//КомандаПечати.Порядок = 75;
	//
	//// Счет на оплату в документ Adobe PDF.
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "СчетЗаказ";
	//КомандаПечати.Представление = НСтр("ru = 'Счет на оплату в документ Adobe PDF'");
	//КомандаПечати.Картинка = БиблиотекаКартинок.ФорматPDF;
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.ФорматСохранения = ТипФайлаТабличногоДокумента.PDF;
	//
	//// Счет на оплату в Microsoft Word.
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "СчетНаОплату(MSWord)";
	//КомандаПечати.Представление = НСтр("ru = 'Счет на оплату в Microsoft Word'");
	//КомандаПечати.Картинка = БиблиотекаКартинок.ФорматWord2007;
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.Обработчик = "_ДемоСтандартныеПодсистемыКлиент.ПечатьСчетовНаОплатуПокупателю";
	//КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
	//
	//// Счет на оплату в OpenOffice.org Writer.
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "СчетНаОплату(ODT)";
	//КомандаПечати.Представление = НСтр("ru = 'Счет на оплату в OpenOffice.org Writer'");
	//КомандаПечати.Картинка = БиблиотекаКартинок.ФорматOpenOfficeWriter;
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.Обработчик = "_ДемоСтандартныеПодсистемыКлиент.ПечатьСчетовНаОплатуПокупателю";
	//КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
	
	//// Квитанция на оплату с QR кодом.
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_Тест";
	//КомандаПечати.Представление = НСтр("ru = 'Заявка на действие (тест)'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
	//КомандаПечати.Порядок = 85;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//rarus sergei 29.09.2016 mantis 7162 ++	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПокупкаУПоставщикаИПередачаТК") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПокупкаУПоставщикаИПередачаТК",
		"Покупка у поставщика и передача ТК",
		ПечатьПФ_MXL_ПокупкаУПоставщикаИПередачаТК(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПокупкаУПоставщикаИПродажаТретьемуЛицу") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПокупкаУПоставщикаИПродажаТретьемуЛицу",
		"Покупка у поставщика и продажа 3-му лицу",
		ПечатьПФ_MXL_ПокупкаУПоставщикаИПродажаТретьемуЛицу(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК",
		"Покупка у поставщика, продажа 3-му лицу и передача ТК",
		ПечатьПФ_MXL_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПокупкаУПоставщикаСПостановкойНаХранение") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПокупкаУПоставщикаСПостановкойНаХранение",
		"Покупка у поставщика с постановкой на хранение",
		ПечатьПФ_MXL_ПокупкаУПоставщикаСПостановкойНаХранение(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПостановкаНаХранение") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПостановкаНаХранение",
		"Постановка на хранение",
		ПечатьПФ_MXL_ПостановкаНаХранение(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СнятиеСХраненияИПередачаТК") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_СнятиеСХраненияИПередачаТК",
		"Снятие с хранения и передача ТК",
		ПечатьПФ_MXL_СнятиеСХраненияИПередачаТК(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СнятиеСХраненияИПродажаТретьемуЛицу") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_СнятиеСХраненияИПродажаТретьемуЛицу",
		"Снятие с хранения и продажа 3-му лицу",
		ПечатьПФ_MXL_СнятиеСХраненияИПродажаТретьемуЛицу(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК",
		"Снятие с хранения, продажа 3-му лицу и передача ТК",
		ПечатьПФ_MXL_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СнятиеСХраненияИПередачаВПроизводство") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_СнятиеСХраненияИПередачаВПроизводство",
		"Снятие с хранения и передача в производство",
		ПечатьПФ_MXL_СнятиеСХраненияИПередачаВПроизводство(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПередачаВПроизводство") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПередачаВПроизводство",
		"Передача в производство",
		ПечатьПФ_MXL_ПередачаВПроизводство(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу",
		"Снятие с хранения и передача на хранение 3-му лицу",
		ПечатьПФ_MXL_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу",
		"Покупка у поставщика и передача на хранение 3-му лицу",
		ПечатьПФ_MXL_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М15") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"М15",
		"М-15",
		ПечатьМ15(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
		//rarus sergei 29.09.2016 mantis 7162 --
		//rarus sergei 06.12.2016 mantis 7164 ++
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МХ3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"МХ3",
		"МХ-3",
		ПечатьМХ3(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МХ1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"МХ1",
		"МХ-1",
		ПечатьМХ1(МассивОбъектов, ОбъектыПечати,, ПараметрыПечати));														
		//rarus sergei 06.12.2016 mantis 7164 --														
	КонецЕсли;
	
	
	
КонецПроцедуры

Функция ПолучитьДанныеПечати(Знач МассивДокументов, Знач МассивИменМакетов) Экспорт
	
	//ДанныеПоВсемОбъектам = Новый Соответствие;
	//
	//Для Каждого ОбъектСсылка Из МассивДокументов Цикл
	//	ДанныеОбъектаПоМакетам = Новый Соответствие;
	//	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
	//		ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ПолучитьДанныеОбъекта(ОбъектСсылка));
	//	КонецЦикла;
	//	ДанныеПоВсемОбъектам.Вставить(ОбъектСсылка, ДанныеОбъектаПоМакетам);
	//КонецЦикла;
	//
	//ОписаниеОбластей = Новый Соответствие;
	//ДвоичныеДанныеМакетов = Новый Соответствие;
	//ТипыМакетов = Новый Соответствие;
	//
	//Для Каждого ИмяМакета Из МассивИменМакетов Цикл
	//	Если ИмяМакета = "СчетНаОплату(MSWord)" Тогда
	//		ДвоичныеДанныеМакетов.Вставить(ИмяМакета, 
	//			УправлениеПечатью.МакетПечатнойФормы("Документ._ДемоСчетНаОплатуПокупателю.ПФ_DOC_СчетНаОплату"));
	//		ТипыМакетов.Вставить(ИмяМакета, "DOC");
	//	ИначеЕсли ИмяМакета = "СчетНаОплату(ODT)" Тогда
	//		ДвоичныеДанныеМакетов.Вставить(ИмяМакета, УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет._ДемоПФ_ODT_СчетНаОплату"));
	//		ТипыМакетов.Вставить(ИмяМакета, "ODT");
	//	КонецЕсли;
	//	ОписаниеОбластей.Вставить(ИмяМакета, ПолучитьОписаниеОбластейМакетаОфисногоДокумента());
	//КонецЦикла;
	//
	//Возврат Новый Структура("Данные, Макеты",
	//	ДанныеПоВсемОбъектам,
	//	Новый Структура("ОписаниеОбластей, ТипыМакетов, ДвоичныеДанныеМакетов",
	//		ОписаниеОбластей,
	//		ТипыМакетов,
	//		ДвоичныеДанныеМакетов));
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для вызова из дополнительной печатной формы.

// Процедура печати документа.
//
Функция ПечатьПФ_MXL_Тест(МассивОбъектов, ОбъектыПечати, ИмяМакета = "ПФ_MXL_Тест") Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_Тест";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_Тест");
	
	
	//Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ОбъектыПечати);
	//Если ИмяОбласти <> "Строка" Тогда
	//	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	//Иначе
	//	Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
	//		ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
	//		ТабличныйДокумент.Вывести(ОбластьМакета);
	//	КонецЦикла;
	//КонецЕсли;
	//КонецЦикла;
	
	//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	
		
	Возврат ТабличныйДокумент;
	
КонецФункции

// Для демонстрации обращения к внешней печатной форме.
Функция ПечатьГарантийногоПисьма(МассивОбъектов, ОбъектыПечати) Экспорт
	
	//ТекстЗапроса = 
	//"ВЫБРАТЬ
	//|	_ДемоСчетНаОплатуПокупателю.Ссылка КАК Ссылка,
	//|	_ДемоСчетНаОплатуПокупателю.Номер КАК Номер,
	//|	_ДемоСчетНаОплатуПокупателю.Дата КАК Дата,
	//|	_ДемоСчетНаОплатуПокупателю.Организация КАК Организация,
	//|	_ДемоСчетНаОплатуПокупателю.Контрагент КАК Контрагент,
	//|	_ДемоСчетНаОплатуПокупателю.СуммаОплаты КАК СуммаОплаты,
	//|	ДОБАВИТЬКДАТЕ(_ДемоСчетНаОплатуПокупателю.Дата, ДЕНЬ, 5) КАК СрокОплаты
	//|ИЗ
	//|	Документ._ДемоСчетНаОплатуПокупателю КАК _ДемоСчетНаОплатуПокупателю
	//|ГДЕ
	//|	_ДемоСчетНаОплатуПокупателю.Ссылка В(&МассивОбъектов)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	_ДемоСчетНаОплатуПокупателю.МоментВремени";
	//
	//Запрос = Новый Запрос(ТекстЗапроса);
	//Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//ТабличныйДокумент = Новый ТабличныйДокумент;
	//ТабличныйДокумент.КлючПараметровПечати = "СчетНаОплату_ГарантийноеПисьмо";
	//
	//Макет = УправлениеПечатью.МакетПечатнойФормы("Документ._ДемоСчетНаОплатуПокупателю.ПФ_MXL_ГарантийноеПисьмо");
	//
	//Пока Выборка.Следующий() Цикл
	//	Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
	//		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;
	//	
	//	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	//	
	//	ОбластьМакета = Макет.ПолучитьОбласть("ТекстПисьма");
	//	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Выборка);
	//	ОбластьМакета.Параметры.СрокОплаты = Формат(Выборка.СрокОплаты, "ДЛФ=DD");
	//	ОбластьМакета.Параметры.ПредставлениеЗаявки = СформироватьЗаголовокДокумента(Выборка, "");
	//	ТабличныйДокумент.Вывести(ОбластьМакета);
	//	
	//	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	//	
	//КонецЦикла;
	//
	//Возврат ТабличныйДокумент;
	
КонецФункции

// Для демонстрации печати QR-кода.
//
Функция ПечатьКвитанции(МассивОбъектов) Экспорт
	
	//УстановитьПривилегированныйРежим(Истина);
	//ТабличныйДокумент = Новый ТабличныйДокумент;
	//
	//ДанныеДокументов = ДанныеДокументов(МассивОбъектов);
	//
	//МакетПП = УправлениеПечатью.МакетПечатнойФормы("Документ._ДемоСчетНаОплатуПокупателю.ПФ_MXL_Квитанция");
	
	//ПервыйДокумент = Истина;
	//Для Каждого РеквизитыПлатежа Из ДанныеДокументов Цикл
	//	
	//	Если Не ПервыйДокумент Тогда
	//		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;
	//	ПервыйДокумент = Ложь;
	//	ОбластьПечатается = МакетПП.ПолучитьОбласть("Печатается");
	//	ЗаполнитьЗначенияСвойств(ОбластьПечатается.Параметры, РеквизитыПлатежа);
	//	ФИОПлательщика = РеквизитыПлатежа.ФамилияПлательщика + " " 
	//					+ РеквизитыПлатежа.ИмяПлательщика + " " 
	//					+ РеквизитыПлатежа.ОтчествоПлательщика;
	//	ОбластьПечатается.Параметры.ФИОПлательщика = ФИОПлательщика;
	//	Сумма = Окр(РеквизитыПлатежа.СуммаЧислом);
	//	ОбластьПечатается.Параметры.Сумма = Сумма;
	//	СуммаКопейки = (РеквизитыПлатежа.СуммаЧислом - Сумма) * 100;
	//	ОбластьПечатается.Параметры.СуммаКопейки = СуммаКопейки;
	//	
	//	QRСтрока = УправлениеПечатью.ФорматнаяСтрокаУФЭБС(РеквизитыПлатежа);
	//	
	//	Если ПустаяСтрока(QRСтрока) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//		ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRСтрока, 1, 120);
	//	
	//	Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
	//		
	//		Шаблон = Нстр("ru = 'Не удалось сформировать QR-код для документа %1.
	//				 |Технические подробности см. в журнале регистрации.'");
	//		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон,
	//						 РеквизитыПлатежа.Ссылка);
	//						 
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	//		
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	//	
	//	ОбластьПечатается.Рисунки.QRКод.Картинка = КартинкаQRКода;
	//	
	//	ТабличныйДокумент.Вывести(ОбластьПечатается);
	//	
	//КонецЦикла;
	//
	//Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти
#КонецЕсли
//rarus tenkam 21.07.2016 mantis 7162 --


//rarus sergei 29.09.2016 mantis 7162 ++
Функция ПечатьПФ_MXL_ПокупкаУПоставщикаИПередачаТК(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаИПередачаТК",ПараметрыПечати) Экспорт
	
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_ПокупкаУПоставщикаИПередачаТК";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_ПокупкаУПоставщикаИПередачаТК");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
		Если ПараметрыПечати.Свойство("ТаблицаПеревозчиков") Тогда
			ТаблицаПеревозчиков = ПараметрыПечати.ТаблицаПеревозчиков;
		Иначе 
			ТаблицаПеревозчиков = Неопределено;
		КонецЕсли;
	КонецЕсли;
	Если ТаблицаПеревозчиков = Неопределено Тогда
		ПечататьПоПеревозчикам = Ложь;
	Иначе
		ПечататьПоПеревозчикам = Истина;
	КонецЕсли;
	ПервыйДокумент = Истина;
	Если ПечататьПоПеревозчикам = Ложь Тогда
		Для Каждого Документ Из МассивОбъектов Цикл
			
			Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			
			ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
			ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");    
			ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
			ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
			ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
			ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
			//rarus tenkam 13.01.2017 комм.: Это и аналогичлый код были закомментированы Сергеем по mantis 8005 в версии хранилища № 702
			////rarus sergei 25.11.2016 mantis 8005 ++
			//Если Документ.Сторнирован = Ложь Тогда
			//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
			//КонецЕсли;
			//Если Документ.Корректировка = Ложь Тогда
			//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			//ИначеЕсли Документ.Корректировка = Истина Тогда    
			//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			//КонецЕсли; 
			////rarus sergei 25.11.2016 mantis 8005 --
			
			// rarus agar 13.12.2022 19668 ++
			ВыводитьЛоготип = Ложь;
			ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
			Если ВыводитьЛоготип Тогда
				ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
				ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
				Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
					ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
					Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
						ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
					КонецЕсли;
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьЛоготип);
			КонецЕсли;
			
			СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
			ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
			ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
			ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
			ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
			ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
			ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
			// rarus agar 13.12.2022 19668 --
			
			ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
			СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
			ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
			ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
			ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
			//rarus sergei 25.10.2016 mantis 7162 ++
			Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);
			Иначе
				//ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus bonmak 15.04.2020 14456
			КонецЕсли;
			//rarus sergei 25.10.2016 mantis 7162 --
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
			ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
			
			НомерСтраницы = 1;
			ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
			ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
			ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			Если Документ.Сторнирован = Истина Тогда
				ТабличныйДокумент.Вывести(ОбластьАннулировано);			
			КонецЕсли; 
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			Если Документ.Корректировка = Истина Тогда    
				ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				ТабличныйДокумент.Вывести(ОбластьКорректировка);
			КонецЕсли;
			// rarus agar 13.12.2022 19668 ++
			ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
			// rarus agar 13.12.2022 19668 --
			ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
			
			
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
			// заполняем ТЧ
			//rarus abrant 25.04.2017 Mantis 9439 +++
			//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
			//rarus abrant 27.04.2017 Mantis 9439 +++
			ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
			//rarus abrant 27.04.2017 Mantis 9439 ---

			НомерСтроки = 1;
			Для каждого Строка из ВыборкаТабличнойЧасти Цикл
				Строка.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
			//rarus abrant 25.04.2017 Mantis 9439 ---

			Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
				Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
					НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
			ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
			//rarus sergei 25.10.2016 mantis 7162 ++
			Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель); 
			Иначе
				//ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.КОнтрагент); //rarus bonmak 15.04.2020 14456	
			КонецЕсли;
			//rarus sergei 25.10.2016 mantis 7162 --
			ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
			//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
			
			
			//  Заполняем информацию по доп условиям
			
			Если ПоказыватьДопУсловия = Истина Тогда
				ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
				ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
				ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
				номерстроки = 1;
				Для каждого строка Из ДопУсловия Цикл
					ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
					номерстроки = номерстроки+1;
				КонецЦикла; 
			КонецЕсли;
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 25.10.2016 mantis 7162 +
			ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
		КонецЦикла;
	Иначе
		МассивСтрокПоКоторымПечатаем = ТаблицаПеревозчиков.Найтистроки(Новый Структура("Флаг",Истина));	
		Если МассивСтрокПоКоторымПечатаем.Количество() = 0 Тогда
			ПервыйПеревозчик = Истина;
			СчетчикПеревозчиков = 1;
			Для каждого строка Из ТаблицаПеревозчиков Цикл
				Документ = МассивОбъектов[0];
				Если НЕ ПервыйПеревозчик Тогда // новый документ должен быть на отдельной странице
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйПеревозчик = Ложь;	
				ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
				ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
				ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
				ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
				//rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Сторнирован = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
				//КонецЕсли;
				//Если Документ.Корректировка = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				//ИначеЕсли Документ.Корректировка = Истина Тогда    
				//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				//	
				//КонецЕсли; 
				//rarus sergei 25.11.2016 mantis 8005 --
				
				// rarus agar 13.12.2022 19668 ++
				ВыводитьЛоготип = Ложь;
				ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
				Если ВыводитьЛоготип Тогда
					ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
					ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
					Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
						ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
						Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
							ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
						КонецЕсли;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьЛоготип);
				КонецЕсли;
				
				СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
				ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
				ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
				ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
				ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
				ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
				ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
				// rarus agar 13.12.2022 19668 --
				
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
				СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
				ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
				ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
				ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД");
				//rarus sergei 25.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);
				Иначе
					//ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus bonmak 15.04.2020 14456
				КонецЕсли;
				//rarus sergei 25.10.2016 mantis 7162 --
				
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка",СчетчикПеревозчиков);
				ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
				НомерСтраницы = 1;
				ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
				ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
				ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
				ТабличныйДокумент.Вывести(ОбластьШапка);
				Если Документ.Сторнирован = Истина Тогда
					ТабличныйДокумент.Вывести(ОбластьАннулировано);			
				КонецЕсли; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Если Документ.Корректировка = Истина Тогда    
					ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
					ТабличныйДокумент.Вывести(ОбластьКорректировка);
				КонецЕсли;
				// rarus agar 13.12.2022 19668 ++
				ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
				// rarus agar 13.12.2022 19668 --
				ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
				// заполняем ТЧ
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ВыборкаТабличнойЧасти = Строка.ЗаявкаПеревозчику.СоставЗаявки;
				//ТаблицаИзделий = Строка.ЗаявкаПеревозчику.СоставЗаявки;
				//rarus abrant 02.05.2017 Mantis 9439 +++
				ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Строка.ЗаявкаПеревозчику.СоставЗаявки);
				ТаблицаИзделий = СортироватьТЧПоНомеруИзделия(Строка.ЗаявкаПеревозчику.СоставЗаявки);
				//ВыборкаТабличнойЧасти = Строка.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//ТаблицаИзделий = Строка.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//rarus abrant 02.05.2017 Mantis 9439 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---
				
				//rarus tenkam 15.09.2017 mantis 11096 +++
				//Для каждого строкаТЧИзделий Из ВыборкаТабличнойЧасти Цикл
				//	
				//	Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
				//		ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);	
				//	КонецЕсли; 	
				//		
				//КонецЦикла; 
				
				Сч = 0;
				Пока Сч < ВыборкаТабличнойЧасти.Количество() Цикл
					строкаТЧИзделий = ВыборкаТабличнойЧасти.Получить(Сч);
					Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
						ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла; 
				//rarus tenkam 15.09.2017 mantis 11096 ---
				Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
					ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
					Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
						НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
					КонецЕсли;
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
				ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
				//rarus sergei 25.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель); 
				Иначе
					//ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.КОнтрагент);	//rarus bonmak 15.04.2020 14456
				КонецЕсли;
				//rarus sergei 25.10.2016 mantis 7162 --
				ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
				ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = Scan_Печать.ПолучитьНаименованиеСправочника(Строка.Перевозчик);  //rarus sergei 25.10.2016 mantis 7162 +
				//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
				// заполняем ТЧ Контактные лица
				ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
				ДоговорСПеревозчиком = Строка.ДоговорСПеревозчиком;
				Запрос = Новый Запрос;
				//rarus pechek 02.04.2020 mantis 15672 +++
				//Запрос.Текст = "ВЫБРАТЬ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
				//|ИЗ
				//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
				//|ГДЕ
				//|Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговор";
				//Запрос.УстановитьПараметр("СсылкаДоговор",ДоговорСПеревозчиком);
				
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
				//rarus pechek 02.04.2020 mantis 15672 ---
				
				Результат = Запрос.Выполнить();
				Если НЕ Результат.Пустой() Тогда
					ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТЗУникальныеКонтактныеЛица = Результат.Выгрузить();
					МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗУникальныеКонтактныеЛица);
					ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
					Для каждого элемент Из МассивУникальныхКЛ Цикл
						СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
						СтрокаКИ = Строка(элемент);
						СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
						СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
						ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
						СтрокаКИ = "";
					КонецЦикла; 
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
				Иначе
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
				КонецЕсли;	
				
				
				//  Заполняем информацию по доп условиям
				
				Если ПоказыватьДопУсловия = Истина Тогда
					ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
					ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
					ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
					номерстроки = 1;
					Для каждого строка Из ДопУсловия Цикл
						ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
						номерстроки = номерстроки+1;
					КонецЦикла; 
				КонецЕсли;
				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
				ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 25.10.2016 mantis 7162 +
				ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				СчетчикПеревозчиков = СчетчикПеревозчиков+1;
			КонецЦикла; 	
		Иначе
			ПервыйПеревозчик = Истина;
			СчетчикПеревозчиков = 1;
			Для каждого элемент Из МассивСтрокПоКоторымПечатаем Цикл
				
				Документ = МассивОбъектов[0];
				Если НЕ ПервыйПеревозчик Тогда // новый документ должен быть на отдельной странице
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйПеревозчик = Ложь;	
				ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
				ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
				ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
				ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
				//rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Сторнирован = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
				//КонецЕсли;
				//Если Документ.Корректировка = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				//ИначеЕсли Документ.Корректировка = Истина Тогда    
				//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				//	
				//КонецЕсли; 
				//rarus sergei 25.11.2016 mantis 8005 --
				
				// rarus agar 13.12.2022 19668 ++
				ВыводитьЛоготип = Ложь;
				ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
				Если ВыводитьЛоготип Тогда
					ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
					ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
					Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
						ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
						Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
							ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
						КонецЕсли;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьЛоготип);
				КонецЕсли;
				
				СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
				ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
				ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
				ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
				ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
				ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
				ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
				// rarus agar 13.12.2022 19668 --
				
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
				СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
				ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
				ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
				ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
				//rarus sergei 25.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);
				Иначе
					//ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus bonmak 15.04.2020 14456
				КонецЕсли;
				//rarus sergei 25.10.2016 mantis 7162 --
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка",СчетчикПеревозчиков);
				ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
				НомерСтраницы = 1;
				ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
				ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
				ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
				ТабличныйДокумент.Вывести(ОбластьШапка);
				Если Документ.Сторнирован = Истина Тогда
					ТабличныйДокумент.Вывести(ОбластьАннулировано);			
				КонецЕсли; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Если Документ.Корректировка = Истина Тогда    
					ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
					ТабличныйДокумент.Вывести(ОбластьКорректировка);
				КонецЕсли;
				// rarus agar 13.12.2022 19668 ++
				ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
				// rarus agar 13.12.2022 19668 --
				ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
				// заполняем ТЧ
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ВыборкаТабличнойЧасти = элемент.ЗаявкаПеревозчику.СоставЗаявки;
				//ТаблицаИзделий = элемент.ЗаявкаПеревозчику.СоставЗаявки;
				//rarus abrant 02.05.2017 Mantis 9439 +++
				ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(элемент.ЗаявкаПеревозчику.СоставЗаявки);
				ТаблицаИзделий = СортироватьТЧПоНомеруИзделия(элемент.ЗаявкаПеревозчику.СоставЗаявки);
				//ВыборкаТабличнойЧасти = элемент.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//ТаблицаИзделий = элемент.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//rarus abrant 02.05.2017 Mantis 9439 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---
				
				//rarus tenkam 15.09.2017 mantis 11096 +++
				//Для каждого строкаТЧИзделий Из ВыборкаТабличнойЧасти Цикл
				//	
				//	Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
				//		ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);	
				//	КонецЕсли; 	
				//		
				//КонецЦикла; 
				
				Сч = 0;
				Пока Сч < ВыборкаТабличнойЧасти.Количество() Цикл
					строкаТЧИзделий = ВыборкаТабличнойЧасти.Получить(Сч);
					Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
						ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла; 
				//rarus tenkam 15.09.2017 mantis 11096 ---
				Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
					ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
					Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
						НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
					КонецЕсли;
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
				ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
				//rarus sergei 25.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель); 
				Иначе
					//ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.КОнтрагент);	//rarus bonmak 15.04.2020 14456
				КонецЕсли;
				//rarus sergei 25.10.2016 mantis 7162 --
				ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
				ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = Scan_Печать.ПолучитьНаименованиеСправочника(элемент.Перевозчик); //rarus sergei 25.10.2016 mantis 7162 +
				//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
				// заполняем ТЧ Контактные лица
				ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
				ДоговорСПеревозчиком = элемент.ДоговорСПеревозчиком;
				Запрос = Новый Запрос;
				//rarus pechek 02.04.2020 mantis 15672 +++
				//Запрос.Текст = "ВЫБРАТЬ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
				//|ИЗ
				//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
				//|ГДЕ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговор";
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
				//rarus pechek 02.04.2020 mantis 15672 ---

				Результат = Запрос.Выполнить();
				Если НЕ Результат.Пустой() Тогда
					ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТЗУникальныеКонтактныеЛица = Результат.Выгрузить();
					МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗУникальныеКонтактныеЛица);
					ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
					Для каждого элемент Из МассивУникальныхКЛ Цикл
						СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
						СтрокаКИ = Строка(элемент);
						СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
						СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
						ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
						СтрокаКИ = "";
					КонецЦикла; 
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
				Иначе
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
				КонецЕсли;	
				
				
				//  Заполняем информацию по доп условиям
				
				Если ПоказыватьДопУсловия = Истина Тогда
					ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
					ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
					ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
					номерстроки = 1;
					Для каждого строка Из ДопУсловия Цикл
						ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
						номерстроки = номерстроки+1;
					КонецЦикла; 
				КонецЕсли;
				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
				ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 25.10.2016 mantis 7162 +
				ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				СчетчикПеревозчиков = СчетчикПеревозчиков+1;
				
				
				
				
			КонецЦикла; 
			
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПФ_MXL_ПокупкаУПоставщикаИПродажаТретьемуЛицу(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаИПродажаТретьемуЛицу",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_ПокупкаУПоставщикаИПродажаТретьемуЛицу";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_ПокупкаУПоставщикаИПродажаТретьемуЛицу");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
		ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
		ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
		ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
		//rarus sergei 25.11.2016 mantis 8005 ++
		//Если Документ.Сторнирован = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
		//КонецЕсли;
		//Если Документ.Корректировка = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		//ИначеЕсли Документ.Корректировка = Истина Тогда    
		//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
		//	
		//КонецЕсли; 
		//rarus sergei 25.11.2016 mantis 8005 --
		
		// rarus agar 13.12.2022 19668 ++
		ВыводитьЛоготип = Ложь;
		ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
		Если ВыводитьЛоготип Тогда
			ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
			ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
			Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЛоготип);
		КонецЕсли;
		
		СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
		ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
		ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
		ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
		ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
		ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
		ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
		// rarus agar 13.12.2022 19668 --
		
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
		ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
		ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
		ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
		//rarus sergei 25.10.2016 mantis 7162 ++
		Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);
		Иначе
			//ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus bonmak 15.04.2020 14456
		КонецЕсли;
		//rarus sergei 25.10.2016 mantis 7162 --
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
		ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
		
		НомерСтраницы = 1;
		ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
		ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
		ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=В"); 
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Если Документ.Сторнирован = Истина Тогда
			ТабличныйДокумент.Вывести(ОбластьАннулировано);			
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		Если Документ.Корректировка = Истина Тогда    
			ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			ТабличныйДокумент.Вывести(ОбластьКорректировка);
		КонецЕсли;
		// rarus agar 13.12.2022 19668 ++
		ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		// rarus agar 13.12.2022 19668 --
		ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		// заполняем ТЧ
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---

		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 25.04.2017 Mantis 9439 ---

		Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
		// заполняем ТЧ Контактные лица
		ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
		ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
		//rarus sergei 25.10.2016 mantis 7162 ++
		Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель); 
		Иначе
			//ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.КОнтрагент);	//rarus bonmak 15.04.2020 14456
		КонецЕсли;
		//rarus sergei 25.10.2016 mantis 7162 --
		Запрос = Новый Запрос;
		
		//rarus pechek 02.04.2020 mantis 15672 +++
		//Запрос.Текст = "ВЫБРАТЬ
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо,
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.ВидКонтактнойИнформации,
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.Представление
		//|ИЗ
		//|	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
		//|		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
		//|			И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка.Договор = Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка.Ссылка
		//|ГДЕ
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка";
		
		Запрос.Текст = 	 "ВЫБРАТЬ
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо,
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.Представление КАК Представление
		               	 |ИЗ
		               	 |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
		               	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
		               	 |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
		               	 |			И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка.МестоДоставки = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.МестоХранения
		               	 |ГДЕ
		               	 |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
		               	 |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка";
		//rarus pechek 02.04.2020 mantis 15672 ---
		Запрос.УстановитьПараметр("Ссылка",Документ);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТЗКонтактныеЛица = Результат.Выгрузить();
			МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗКонтактныеЛица);
			Для каждого элемент Из МассивУникальныхКЛ Цикл
				СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
				СтрокаКИ = Строка(элемент);
				СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
				СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
				ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
				СтрокаКИ = "";
			КонецЦикла; 
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
		Иначе
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
		КонецЕсли; 
		
		
		
		
		
		//  Заполняем информацию по доп условиям
		Если ПоказыватьДопУсловия = Истина Тогда
			ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
			ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
			ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
			номерстроки = 1;
			Для каждого строка Из ДопУсловия Цикл
				ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
				номерстроки = номерстроки+1;
			КонецЦикла; 
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
		ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЦикла;
	
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ПечатьПФ_MXL_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
		Если ПараметрыПечати.Свойство("ТаблицаПеревозчиков") Тогда
			ТаблицаПеревозчиков = ПараметрыПечати.ТаблицаПеревозчиков;
		Иначе 
			ТаблицаПеревозчиков = Неопределено;
		КонецЕсли;
	КонецЕсли;
	Если ТаблицаПеревозчиков = Неопределено Тогда
		ПечататьПоПеревозчикам = Ложь;
	Иначе
		ПечататьПоПеревозчикам = Истина;
	КонецЕсли;
	ПервыйДокумент = Истина;
	Если ПечататьПоПеревозчикам = Ложь Тогда
		Для Каждого Документ Из МассивОбъектов Цикл
			
			Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			
			ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
			ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
			ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
			ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
			ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
			//rarus sergei 25.11.2016 mantis 8005 ++
			//Если Документ.Корректировка = Ложь Тогда
			//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			//ИначеЕсли Документ.Корректировка = Истина Тогда    
			//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			
			//КонецЕсли; 
			//rarus sergei 25.11.2016 mantis 8005 --
			
			// rarus agar 13.12.2022 19668 ++
			ВыводитьЛоготип = Ложь;
			ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
			Если ВыводитьЛоготип Тогда
				ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
				ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
				Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
					ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
					Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
						ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
					КонецЕсли;
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьЛоготип);
			КонецЕсли;
			
			СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
			ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
			ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
			ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
			ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
			ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
			ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
			// rarus agar 13.12.2022 19668 --
			
			ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
			СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
			ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
			ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
			ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
			//rarus sergei 25.10.2016 mantis 7162 ++
			Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);
			Иначе
				//ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus bonmak 15.04.2020 14456
			КонецЕсли;
			//rarus sergei 25.10.2016 mantis 7162 --
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
			ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
			
			НомерСтраницы = 1;
			ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
			ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
			ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			Если Документ.Сторнирован = Истина Тогда
				ТабличныйДокумент.Вывести(ОбластьАннулировано);			
			КонецЕсли; 
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			Если Документ.Корректировка = Истина Тогда    
				ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				ТабличныйДокумент.Вывести(ОбластьКорректировка);
			КонецЕсли;
			// rarus agar 13.12.2022 19668 ++
			ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
			// rarus agar 13.12.2022 19668 --
			ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
			
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
			// заполняем ТЧ
			//rarus abrant 25.04.2017 Mantis 9439 +++
			//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
			//rarus abrant 27.04.2017 Mantis 9439 +++
			ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
			//rarus abrant 27.04.2017 Mantis 9439 ---

			НомерСтроки = 1;
			Для каждого Строка из ВыборкаТабличнойЧасти Цикл
				Строка.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
			//rarus abrant 25.04.2017 Mantis 9439 ---

			Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
				Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
					НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
			ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
			//rarus sergei 25.10.2016 mantis 7162 ++
			Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель); 
			Иначе
				//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.КОнтрагент);	
			КонецЕсли;
			//rarus sergei 25.10.2016 mantis 7162 --
			ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
			//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
			
			
			//  Заполняем информацию по доп условиям
			
			Если ПоказыватьДопУсловия = Истина Тогда
				ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
				ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
				ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
				номерстроки = 1;
				Для каждого строка Из ДопУсловия Цикл
					ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
					номерстроки = номерстроки+1;
				КонецЦикла; 
			КонецЕсли;
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 25.10.2016 mantis 7162 +
			ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			//rarus tenkam 13.01.2017 mantis 8005 ++ (это видимо устарешвшее)
			////rarus sergei 25.11.2016 mantis 8005 ++
			//Если Документ.Сторнирован = Истина Тогда
			//	Фон=Макет.Рисунки.Рис1.Картинка;
			//	ТабличныйДокумент.ФоноваяКартинка=Фон;
			//КонецЕсли; 
			//rarus sergei 25.11.2016 mantis 8005 --
			//rarus tenkam 13.01.2017 mantis 8005 --
			
		КонецЦикла;
	Иначе
		МассивСтрокПоКоторымПечатаем = ТаблицаПеревозчиков.Найтистроки(Новый Структура("Флаг",Истина));	
		Если МассивСтрокПоКоторымПечатаем.Количество() = 0 Тогда
			ПервыйПеревозчик = Истина;
			СчетчикПеревозчиков = 1;
			Для каждого строка Из ТаблицаПеревозчиков Цикл
				Документ = МассивОбъектов[0];
				Если НЕ ПервыйПеревозчик Тогда // новый документ должен быть на отдельной странице
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйПеревозчик = Ложь;	
				ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
				ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
				ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
				ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
				//rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Корректировка = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				//ИначеЕсли Документ.Корректировка = Истина Тогда    
				//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				//	
				//КонецЕсли; 
				//rarus sergei 25.11.2016 mantis 8005 --
				
				// rarus agar 13.12.2022 19668 ++
				ВыводитьЛоготип = Ложь;
				ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
				Если ВыводитьЛоготип Тогда
					ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
					ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
					Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
						ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
						Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
							ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
						КонецЕсли;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьЛоготип);
				КонецЕсли;
				
				СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
				ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
				ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
				ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
				ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
				ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
				ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
				// rarus agar 13.12.2022 19668 --
				
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
				СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
				ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
				ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
				ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
				//rarus sergei 25.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент);
				КонецЕсли;
				//rarus sergei 25.10.2016 mantis 7162 --
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка",СчетчикПеревозчиков);
				ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
				НомерСтраницы = 1;
				ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
				ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
				ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
				ТабличныйДокумент.Вывести(ОбластьШапка);
				Если Документ.Сторнирован = Истина Тогда
					ТабличныйДокумент.Вывести(ОбластьАннулировано);			
				КонецЕсли; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Если Документ.Корректировка = Истина Тогда    
					ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
					ТабличныйДокумент.Вывести(ОбластьКорректировка);
				КонецЕсли;
				// rarus agar 13.12.2022 19668 ++
				ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
				// rarus agar 13.12.2022 19668 --
				ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
				// заполняем ТЧ
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ВыборкаТабличнойЧасти = Строка.ЗаявкаПеревозчику.СоставЗаявки;
				//ТаблицаИзделий = Строка.ЗаявкаПеревозчику.СоставЗаявки;
				
				//rarus abrant 02.05.2017 Mantis 9439 +++
				ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Строка.ЗаявкаПеревозчику.СоставЗаявки);
				ТаблицаИзделий = СортироватьТЧПоНомеруИзделия(Строка.ЗаявкаПеревозчику.СоставЗаявки);
				//ВыборкаТабличнойЧасти = Строка.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//ТаблицаИзделий = Строка.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//rarus abrant 02.05.2017 Mantis 9439 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---
				
				//rarus tenkam 15.09.2017 mantis 11096 +++
				//Для каждого строкаТЧИзделий Из ВыборкаТабличнойЧасти Цикл
				//	
				//	Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
				//		ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);	
				//	КонецЕсли; 	
				//		
				//КонецЦикла; 
				
				Сч = 0;
				Пока Сч < ВыборкаТабличнойЧасти.Количество() Цикл
					строкаТЧИзделий = ВыборкаТабличнойЧасти.Получить(Сч);
					Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
						ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла; 
				//rarus tenkam 15.09.2017 mantis 11096 ---
				
				Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
					ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
					Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
						НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
					КонецЕсли;
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
				ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
				//rarus sergei 25.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель); 
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.КОнтрагент);	
				КонецЕсли;
				//rarus sergei 25.10.2016 mantis 7162 --
				ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
				ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = Scan_Печать.ПолучитьНаименованиеСправочника(Строка.Перевозчик);  //rarus sergei 25.10.2016 mantis 7162 +
				//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
				// заполняем ТЧ Контактные лица
				ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
				ДоговорСПеревозчиком = Строка.ДоговорСПеревозчиком;
				Запрос = Новый Запрос;
				//rarus pechek 02.04.2020 mantis 15672 +++
				//Запрос.Текст = "ВЫБРАТЬ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
				//|ИЗ
				//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
				//|ГДЕ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговор";
				//Запрос.УстановитьПараметр("СсылкаДоговор",ДоговорСПеревозчиком);
				
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
				//rarus pechek 02.04.2020 mantis 15672 ---

				Результат = Запрос.Выполнить();
				Если НЕ Результат.Пустой() Тогда
					ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТЗУникальныеКонтактныеЛица = Результат.Выгрузить();
					МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗУникальныеКонтактныеЛица);
					ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
					Для каждого элемент Из МассивУникальныхКЛ Цикл
						СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
						СтрокаКИ = Строка(элемент);
						СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
						СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
						ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
						СтрокаКИ = "";
					КонецЦикла; 
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
				Иначе
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
				КонецЕсли;	
				//  Заполняем информацию по доп условиям
				Если ПоказыватьДопУсловия = Истина Тогда
					ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
					ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
					ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
					номерстроки = 1;
					Для каждого строка Из ДопУсловия Цикл
						ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
						номерстроки = номерстроки+1;
					КонецЦикла; 
				КонецЕсли;
				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
				ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 25.10.2016 mantis 7162 +
				ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				//rarus tenkam 13.01.2017 mantis 8005 ++ (это видимо устарешвшее)
				////rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Сторнирован = Истина Тогда
				//	Фон=Макет.Рисунки.Рис1.Картинка;
				//	ТабличныйДокумент.ФоноваяКартинка=Фон;
				//КонецЕсли; 
				////rarus sergei 25.11.2016 mantis 8005 --
				//rarus tenkam 13.01.2017 mantis 8005 --
				СчетчикПеревозчиков = СчетчикПеревозчиков+1;
			КонецЦикла; 	
		Иначе
			ПервыйПеревозчик = Истина;
			СчетчикПеревозчиков = 1;
			Для каждого элемент Из МассивСтрокПоКоторымПечатаем Цикл
				
				Документ = МассивОбъектов[0];
				Если НЕ ПервыйПеревозчик Тогда // новый документ должен быть на отдельной странице
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйПеревозчик = Ложь;	
				ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
				ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
				ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
				ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
				//rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Корректировка = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				//ИначеЕсли Документ.Корректировка = Истина Тогда    
				//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				//	
				//КонецЕсли; 
				//rarus sergei 25.11.2016 mantis 8005 --
				
				// rarus agar 13.12.2022 19668 ++
				ВыводитьЛоготип = Ложь;
				ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
				Если ВыводитьЛоготип Тогда
					ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
					ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
					Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
						ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
						Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
							ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
						КонецЕсли;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьЛоготип);
				КонецЕсли;
				
				СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
				ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
				ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
				ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
				ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
				ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
				ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
				// rarus agar 13.12.2022 19668 --
				
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
				СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
				ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
				ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
				ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
				//rarus sergei 25.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент);
				КонецЕсли;
				//rarus sergei 25.10.2016 mantis 7162 --
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка",СчетчикПеревозчиков);
				ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
				НомерСтраницы = 1;
				ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
				ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
				ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
				ТабличныйДокумент.Вывести(ОбластьШапка);
				Если Документ.Сторнирован = Истина Тогда
					ТабличныйДокумент.Вывести(ОбластьАннулировано);			
				КонецЕсли; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Если Документ.Корректировка = Истина Тогда    
					ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
					ТабличныйДокумент.Вывести(ОбластьКорректировка);
				КонецЕсли;
				// rarus agar 13.12.2022 19668 ++
				ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
				// rarus agar 13.12.2022 19668 --
				ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
				// заполняем ТЧ
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ВыборкаТабличнойЧасти = элемент.ЗаявкаПеревозчику.СоставЗаявки;
				//ТаблицаИзделий = элемент.ЗаявкаПеревозчику.СоставЗаявки;
				
				//rarus abrant 02.05.2017 Mantis 9439 +++
				ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(элемент.ЗаявкаПеревозчику.СоставЗаявки);
				ТаблицаИзделий = СортироватьТЧПоНомеруИзделия(элемент.ЗаявкаПеревозчику.СоставЗаявки);
				//ВыборкаТабличнойЧасти = элемент.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//ТаблицаИзделий = элемент.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//rarus abrant 02.05.2017 Mantis 9439 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---
				
				//rarus tenkam 15.09.2017 mantis 11096 +++
				//Для каждого строкаТЧИзделий Из ВыборкаТабличнойЧасти Цикл
				//	
				//	Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
				//		ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);	
				//	КонецЕсли; 	
				//		
				//КонецЦикла; 
				
				Сч = 0;
				Пока Сч < ВыборкаТабличнойЧасти.Количество() Цикл
					строкаТЧИзделий = ВыборкаТабличнойЧасти.Получить(Сч);
					Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
						ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла; 
				//rarus tenkam 15.09.2017 mantis 11096 ---
				
				Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
					ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
					Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
						НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
					КонецЕсли;
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
				ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
				//rarus sergei 25.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель); 
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.КОнтрагент);	
				КонецЕсли;
				//rarus sergei 25.10.2016 mantis 7162 --
				ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
				ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = Scan_Печать.ПолучитьНаименованиеСправочника(элемент.Перевозчик); //rarus sergei 25.10.2016 mantis 7162 +
				
				// заполняем ТЧ Контактные лица
				ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
				ДоговорСПеревозчиком = элемент.ДоговорСПеревозчиком;
				Запрос = Новый Запрос;
				//rarus pechek 02.04.2020 mantis 15672 +++
				//Запрос.Текст = "ВЫБРАТЬ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
				//|ИЗ
				//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
				//|ГДЕ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.ДоступностьВПФ = ИСТИНА
				//|	И Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговор";
				//Запрос.УстановитьПараметр("СсылкаДоговор",ДоговорСПеревозчиком);
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
				//rarus pechek 02.04.2020 mantis 15672 ---

				Результат = Запрос.Выполнить();
				Если НЕ Результат.Пустой() Тогда
					ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТЗУникальныеКонтактныеЛица = Результат.Выгрузить();
					МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗУникальныеКонтактныеЛица);
					ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
					Для каждого элемент Из МассивУникальныхКЛ Цикл
						СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
						СтрокаКИ = Строка(элемент);
						СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
						СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
						ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
						СтрокаКИ = "";
					КонецЦикла; 
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
				Иначе
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
				КонецЕсли;	
				//  Заполняем информацию по доп условиям
				Если ПоказыватьДопУсловия = Истина Тогда
					ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
					ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
					ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
					номерстроки = 1;
					Для каждого строка Из ДопУсловия Цикл
						ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
						номерстроки = номерстроки+1;
					КонецЦикла; 
				КонецЕсли;
				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
				ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 25.10.2016 mantis 7162 +
				ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				//rarus tenkam 13.01.2017 mantis 8005 ++ (это видимо устарешвшее)
				////rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Сторнирован = Истина Тогда
				//	Фон=Макет.Рисунки.Рис1.Картинка;
				//	ТабличныйДокумент.ФоноваяКартинка=Фон;
				//КонецЕсли; 
				////rarus sergei 25.11.2016 mantis 8005 --
				//rarus tenkam 13.01.2017 mantis 8005 --
				СчетчикПеревозчиков = СчетчикПеревозчиков+1;
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПФ_MXL_ПокупкаУПоставщикаСПостановкойНаХранение(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаСПостановкойНаХранение",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_ПокупкаУПоставщикаСПостановкойНаХранение";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_ПокупкаУПоставщикаСПостановкойНаХранение");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
		//бластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
		ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
		ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
		//rarus sergei 25.11.2016 mantis 8005 ++
		//Если Документ.Сторнирован = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
		//КонецЕсли;
		//Если Документ.Корректировка = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		//ИначеЕсли Документ.Корректировка = Истина Тогда    
		//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
		//	
		//КонецЕсли; 
		//rarus sergei 25.11.2016 mantis 8005 --
		
		// rarus agar 13.12.2022 19668 ++
		ВыводитьЛоготип = Ложь;
		ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
		Если ВыводитьЛоготип Тогда
			ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
			ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
			Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЛоготип);
		КонецЕсли;
		
		СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
		ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
		ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
		ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
		ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
		ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
		ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
		// rarus agar 13.12.2022 19668 --
		
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
		ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
		ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
		ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
		Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик); //rarus sergei 25.10.2016 mantis 7162 +
			ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
		Иначе
			//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 25.10.2016 mantis 7162 +
			//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
		КонецЕсли;
		Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
		
		НомерСтраницы = 1;
		ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
		ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
		ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=В"); 
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Если Документ.Сторнирован = Истина Тогда
			ТабличныйДокумент.Вывести(ОбластьАннулировано);			
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		Если Документ.Корректировка = Истина Тогда    
			ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			ТабличныйДокумент.Вывести(ОбластьКорректировка);
		КонецЕсли;
		// rarus agar 13.12.2022 19668 ++
		ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		// rarus agar 13.12.2022 19668 --
		ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		
		// заполняем ТЧ
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
		
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---
		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 25.04.2017 Mantis 9439 ---
		
		Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,);
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
		
		
		
		//  Заполняем информацию по доп условиям
		Если ПоказыватьДопУсловия = Истина Тогда
			ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
			ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
			ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
			номерстроки = 1;
			Для каждого строка Из ДопУсловия Цикл
				ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
				номерстроки = номерстроки+1;
			КонецЦикла; 
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
		ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ПечатьПФ_MXL_ПостановкаНаХранение(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_ПостановкаНаХранение",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_ПостановкаНаХранение";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_ПостановкаНаХранение");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
		ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
		ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
		ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
		//rarus sergei 25.11.2016 mantis 8005 ++
		//Если Документ.Сторнирован = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
		//КонецЕсли;
		//Если Документ.Корректировка = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		//ИначеЕсли Документ.Корректировка = Истина Тогда    
		//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
		//	
		//КонецЕсли; 
		//rarus sergei 25.11.2016 mantis 8005 --
		
		// rarus agar 13.12.2022 19668 ++
		ВыводитьЛоготип = Ложь;
		ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
		Если ВыводитьЛоготип Тогда
			ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
			ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
			Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЛоготип);
		КонецЕсли;
		
		СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
		ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
		ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
		ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
		ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
		ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
		ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
		// rarus agar 13.12.2022 19668 --
		
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
		ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ТекДоговор = ?(Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПостановкаНаХранение,  Документ.ДоговорСПоставщиком, Документ.Договор);
		ОбластьШапка.Параметры.НомерДоговора = ТекДоговор.НомерДоговора;
		ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(ТекДоговор.ДатаНачала, "ДЛФ=ДД"); 
		//ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
		//ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
		//rarus tenkam 08.02.2017 mantis 8331 ---
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ТекКонтрагентДоговора = ?(Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПостановкаНаХранение, Документ.Подрядчик, Документ.Грузополучатель);
		Если  ТипЗнч(ТекКонтрагентДоговора)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(ТекКонтрагентДоговора);  
			ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(ТекКонтрагентДоговора);
		Иначе
			//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(ТекКонтрагентДоговора.Контрагент);  
			//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(ТекКонтрагентДоговора.Контрагент);
		КонецЕсли;
		//Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
		//	ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);  //rarus sergei 25.10.2016 mantis 7162 +
		//	ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
		//Иначе
		//	ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент);  //rarus sergei 25.10.2016 mantis 7162 +
		//	ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
		//КонецЕсли;
		//rarus tenkam 08.02.2017 mantis 8331 ---
		Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
		
		НомерСтраницы = 1;
		ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта;
		//rarus abrant 11.04.2017 itilium 0000027661 +++
		Если Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение Тогда
			ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаДоставкиПлановая, "ДЛФ=ДД");
		Иначе
			ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
		КонецЕсли;
		//rarus abrant 11.04.2017 itilium 0000027661 ---
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Если Документ.Сторнирован = Истина Тогда
			ТабличныйДокумент.Вывести(ОбластьАннулировано);			
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		Если Документ.Корректировка = Истина Тогда    
			ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			ТабличныйДокумент.Вывести(ОбластьКорректировка);
		КонецЕсли;
		// rarus agar 13.12.2022 19668 ++
		ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		// rarus agar 13.12.2022 19668 --
		ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
		
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		// заполняем ТЧ
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---

		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 25.04.2017 Mantis 9439 ---

		Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
		//  Заполняем информацию по доп условиям
		Если ПоказыватьДопУсловия = Истина Тогда
			ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
			ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
			ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
			номерстроки = 1;
			Для каждого строка Из ДопУсловия Цикл
				ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
				номерстроки = номерстроки+1;
			КонецЦикла; 
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
		ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ПечатьПФ_MXL_СнятиеСХраненияИПередачаТК(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_СнятиеСХраненияИПередачаТК",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_СнятиеСХраненияИПередачаТК";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_СнятиеСХраненияИПередачаТК");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
		Если ПараметрыПечати.Свойство("ТаблицаПеревозчиков") Тогда
			ТаблицаПеревозчиков = ПараметрыПечати.ТаблицаПеревозчиков;
		Иначе 
			ТаблицаПеревозчиков = Неопределено;
		КонецЕсли;
	КонецЕсли;
	Если ТаблицаПеревозчиков = Неопределено Тогда
		ПечататьПоПеревозчикам = Ложь;
	Иначе
		ПечататьПоПеревозчикам = Истина;
	КонецЕсли;
	ПервыйДокумент = Истина;
	Если ПечататьПоПеревозчикам = Ложь Тогда
		Для Каждого Документ Из МассивОбъектов Цикл
			
			Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			
			ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
			ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
			ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
			ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
			ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
			//rarus sergei 25.11.2016 mantis 8005 ++
			//Если Документ.Сторнирован = Ложь Тогда
			//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
			//КонецЕсли;
			//Если Документ.Корректировка = Ложь Тогда
			//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			//ИначеЕсли Документ.Корректировка = Истина Тогда    
			//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			
			//КонецЕсли; 
			//rarus sergei 25.11.2016 mantis 8005 --
			
			// rarus agar 13.12.2022 19668 ++
			ВыводитьЛоготип = Ложь;
			ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
			Если ВыводитьЛоготип Тогда
				ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
				ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
				Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
					ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
					Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
						ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
					КонецЕсли;
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьЛоготип);
			КонецЕсли;
			
			СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
			ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
			ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
			ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
			ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
			ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
			ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
			// rarus agar 13.12.2022 19668 --
			
			ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
			СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
			ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
			ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
			ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
			Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик); //rarus sergei 26.10.2016 mantis 7162 +
				ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
			Иначе
				//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 26.10.2016 mantis 7162 +
				//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
			КонецЕсли;
			Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
				ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
				ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
			КонецЕсли;
			
			ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
			
			НомерСтраницы = 1;
			ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
			ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
			ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			Если Документ.Сторнирован = Истина Тогда
				ТабличныйДокумент.Вывести(ОбластьАннулировано);			
			КонецЕсли; 
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			Если Документ.Корректировка = Истина Тогда    
				ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				ТабличныйДокумент.Вывести(ОбластьКорректировка);
			КонецЕсли;
			// rarus agar 13.12.2022 19668 ++
			ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
			// rarus agar 13.12.2022 19668 --
			ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
			
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
			// заполняем ТЧ
			//rarus abrant 25.04.2017 Mantis 9439 +++
			//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
			//rarus abrant 27.04.2017 Mantis 9439 +++
			ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
			//rarus abrant 27.04.2017 Mantis 9439 ---

			НомерСтроки = 1;
			Для каждого Строка из ВыборкаТабличнойЧасти Цикл
				Строка.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
			//rarus abrant 25.04.2017 Mantis 9439 ---

			Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
				Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
					НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
			ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
			//rarus sergei 26.10.2016 mantis 7162 ++
			Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель);
			Иначе
				//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.Контрагент);
			КонецЕсли;
			//rarus sergei 26.10.2016 mantis 7162 --
			
			ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
			
			
			//  Заполняем информацию по доп условиям
			
			Если ПоказыватьДопУсловия = Истина Тогда
				ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
				ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
				ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
				номерстроки = 1;
				Для каждого строка Из ДопУсловия Цикл
					ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
					номерстроки = номерстроки+1;
				КонецЦикла; 
			КонецЕсли;
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
			ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
			
		КонецЦикла;
	Иначе
		МассивСтрокПоКоторымПечатаем = ТаблицаПеревозчиков.Найтистроки(Новый Структура("Флаг",Истина));	
		Если МассивСтрокПоКоторымПечатаем.Количество() = 0 Тогда
			ПервыйПеревозчик = Истина;
			СчетчикПеревозчиков = 1;
			Для каждого строка Из ТаблицаПеревозчиков Цикл
				Документ = МассивОбъектов[0];
				Если НЕ ПервыйПеревозчик Тогда // новый документ должен быть на отдельной странице
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйПеревозчик = Ложь;	
				ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
				ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
				ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
				ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
				//rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Сторнирован = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
				//КонецЕсли;
				//Если Документ.Корректировка = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				//ИначеЕсли Документ.Корректировка = Истина Тогда    
				//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				//	
				//КонецЕсли; 
				//rarus sergei 25.11.2016 mantis 8005 --
				
				// rarus agar 13.12.2022 19668 ++
				ВыводитьЛоготип = Ложь;
				ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
				Если ВыводитьЛоготип Тогда
					ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
					ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
					Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
						ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
						Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
							ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
						КонецЕсли;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьЛоготип);
				КонецЕсли;
				
				СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
				ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
				ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
				ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
				ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
				ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
				ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
				// rarus agar 13.12.2022 19668 --
				
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
				СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
				ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
				ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
				ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка",СчетчикПеревозчиков);
				Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик); //rarus sergei 26.10.2016 mantis 7162 +
					ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 26.10.2016 mantis 7162 +
					//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
				КонецЕсли;
				Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
					ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
					ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
				КонецЕсли;
				
				ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
				НомерСтраницы = 1;
				ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
				ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
				ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
				ТабличныйДокумент.Вывести(ОбластьШапка);
				Если Документ.Сторнирован = Истина Тогда
					ТабличныйДокумент.Вывести(ОбластьАннулировано);			
				КонецЕсли; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Если Документ.Корректировка = Истина Тогда    
					ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
					ТабличныйДокумент.Вывести(ОбластьКорректировка);
				КонецЕсли;
				// rarus agar 13.12.2022 19668 ++
				ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
				// rarus agar 13.12.2022 19668 --
				ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
				// заполняем ТЧ
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ВыборкаТабличнойЧасти = Строка.ЗаявкаПеревозчику.СоставЗаявки;
				//ТаблицаИзделий = Строка.ЗаявкаПеревозчику.СоставЗаявки;
				//rarus abrant 02.05.2017 Mantis 9439 +++
				ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Строка.ЗаявкаПеревозчику.СоставЗаявки);
				ТаблицаИзделий = СортироватьТЧПоНомеруИзделия(Строка.ЗаявкаПеревозчику.СоставЗаявки);
				//ВыборкаТабличнойЧасти = Строка.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//ТаблицаИзделий = Строка.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//rarus abrant 02.05.2017 Mantis 9439 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---
				
				//rarus tenkam 15.09.2017 mantis 11096 +++
				//Для каждого строкаТЧИзделий Из ВыборкаТабличнойЧасти Цикл
				//	
				//	Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
				//		ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);	
				//	КонецЕсли; 	
				//		
				//КонецЦикла; 
				
				Сч = 0;
				Пока Сч < ВыборкаТабличнойЧасти.Количество() Цикл
					строкаТЧИзделий = ВыборкаТабличнойЧасти.Получить(Сч);
					Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
						ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла; 
				//rarus tenkam 15.09.2017 mantis 11096 ---
				
				Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
					ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
					Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
						НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
					КонецЕсли;
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
				ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
				//rarus sergei 26.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.Контрагент);
				КонецЕсли;
				//rarus sergei 26.10.2016 mantis 7162 --
				
				ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
				ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = Scan_Печать.ПолучитьНаименованиеСправочника(Строка.Перевозчик); //rarus sergei 26.10.2016 mantis 7162 +
				//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
				// заполняем ТЧ Контактные лица
				ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
				ДоговорСПеревозчиком = Строка.ДоговорСПеревозчиком;
				Запрос = Новый Запрос;
				//rarus pechek 02.04.2020 mantis 15672 +++
				//Запрос.Текст = "ВЫБРАТЬ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
				//|ИЗ
				//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
				//|ГДЕ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговор";
				//Запрос.УстановитьПараметр("СсылкаДоговор",ДоговорСПеревозчиком);
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
				//rarus pechek 02.04.2020 mantis 15672 ---
				Результат = Запрос.Выполнить();
				Если НЕ Результат.Пустой() Тогда
					ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТЗУникальныеКонтактныеЛица = Результат.Выгрузить();
					МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗУникальныеКонтактныеЛица);
					ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
					Для каждого элемент Из МассивУникальныхКЛ Цикл
						СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
						СтрокаКИ = Строка(элемент);
						СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
						СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
						ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
						СтрокаКИ = "";
					КонецЦикла; 
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
				Иначе
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
				КонецЕсли;	
				
				
				//  Заполняем информацию по доп условиям
				
				Если ПоказыватьДопУсловия = Истина Тогда
					ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
					ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
					ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
					номерстроки = 1;
					Для каждого строка Из ДопУсловия Цикл
						ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
						номерстроки = номерстроки+1;
					КонецЦикла; 
				КонецЕсли;
				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
				ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
				ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
				
				СчетчикПеревозчиков = СчетчикПеревозчиков+1;
			КонецЦикла; 	
		Иначе
			ПервыйПеревозчик = Истина;
			СчетчикПеревозчиков = 1;
			Для каждого элемент Из МассивСтрокПоКоторымПечатаем Цикл
				
				Документ = МассивОбъектов[0];
				Если НЕ ПервыйПеревозчик Тогда // новый документ должен быть на отдельной странице
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйПеревозчик = Ложь;	
				ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
				ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
				ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
				ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
				//rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Сторнирован = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
				//КонецЕсли;
				//Если Документ.Корректировка = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				//ИначеЕсли Документ.Корректировка = Истина Тогда    
				//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				//	
				//КонецЕсли; 
				//rarus sergei 25.11.2016 mantis 8005 --
				
				// rarus agar 13.12.2022 19668 ++
				ВыводитьЛоготип = Ложь;
				ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
				Если ВыводитьЛоготип Тогда
					ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
					ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
					Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
						ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
						Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
							ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
						КонецЕсли;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьЛоготип);
				КонецЕсли;
				
				СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
				ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
				ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
				ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
				ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
				ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
				ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
				// rarus agar 13.12.2022 19668 --
				
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
				СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
				ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
				ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
				ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
				
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка",СчетчикПеревозчиков);
				Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);  //rarus sergei 26.10.2016 mantis 7162 +
					ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 26.10.2016 mantis 7162 +
					//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
				КонецЕсли;
				Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
					ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
					ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
				КонецЕсли;
				
				ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
				НомерСтраницы = 1;
				ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
				ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
				ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
				ТабличныйДокумент.Вывести(ОбластьШапка);
				Если Документ.Сторнирован = Истина Тогда
					ТабличныйДокумент.Вывести(ОбластьАннулировано);			
				КонецЕсли; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Если Документ.Корректировка = Истина Тогда    
					ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
					ТабличныйДокумент.Вывести(ОбластьКорректировка);
				КонецЕсли;
				// rarus agar 13.12.2022 19668 ++
				ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
				// rarus agar 13.12.2022 19668 --
				ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
				// заполняем ТЧ
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ВыборкаТабличнойЧасти = элемент.ЗаявкаПеревозчику.СоставЗаявки;
				//ТаблицаИзделий = элемент.ЗаявкаПеревозчику.СоставЗаявки;
				//rarus abrant 02.05.2017 Mantis 9439 +++
				ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(элемент.ЗаявкаПеревозчику.СоставЗаявки);
				ТаблицаИзделий = СортироватьТЧПоНомеруИзделия(элемент.ЗаявкаПеревозчику.СоставЗаявки);
				//ВыборкаТабличнойЧасти = элемент.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//ТаблицаИзделий = элемент.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//rarus abrant 02.05.2017 Mantis 9439 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---
			
				//rarus tenkam 15.09.2017 mantis 11096 +++
				//Для каждого строкаТЧИзделий Из ВыборкаТабличнойЧасти Цикл
				//	
				//	Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
				//		ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);	
				//	КонецЕсли; 	
				//		
				//КонецЦикла; 
				
				Сч = 0;
				Пока Сч < ВыборкаТабличнойЧасти.Количество() Цикл
					строкаТЧИзделий = ВыборкаТабличнойЧасти.Получить(Сч);
					Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
						ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла; 
				//rarus tenkam 15.09.2017 mantis 11096 ---
				
				Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
					ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
					Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
						НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
					КонецЕсли;
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
				ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
				//rarus sergei 26.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.Контрагент);
				КонецЕсли;
				//rarus sergei 26.10.2016 mantis 7162 --
				
				ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
				ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = элемент.Перевозчик;
				//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
				// заполняем ТЧ Контактные лица
				ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
				ДоговорСПеревозчиком = элемент.ДоговорСПеревозчиком;
				Запрос = Новый Запрос;
				//rarus pechek 02.04.2020 mantis 15672 +++
				//Запрос.Текст = "ВЫБРАТЬ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
				//|ИЗ
				//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
				//|ГДЕ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговор";
				//Запрос.УстановитьПараметр("СсылкаДоговор",ДоговорСПеревозчиком);
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
				//rarus pechek 02.04.2020 mantis 15672 ---
				Результат = Запрос.Выполнить();
				Если НЕ Результат.Пустой() Тогда
					ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТЗУникальныеКонтактныеЛица = Результат.Выгрузить();
					МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗУникальныеКонтактныеЛица);
					ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
					Для каждого элемент Из МассивУникальныхКЛ Цикл
						СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
						СтрокаКИ = Строка(элемент);
						СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
						СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
						ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
						СтрокаКИ = "";
					КонецЦикла; 
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
				Иначе
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
				КонецЕсли;	
				
				
				//  Заполняем информацию по доп условиям
				
				Если ПоказыватьДопУсловия = Истина Тогда
					ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
					ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
					ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
					номерстроки = 1;
					Для каждого строка Из ДопУсловия Цикл
						ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
						номерстроки = номерстроки+1;
					КонецЦикла; 
				КонецЕсли;
				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
				ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
				ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
				СчетчикПеревозчиков = СчетчикПеревозчиков+1;
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ПечатьПФ_MXL_СнятиеСХраненияИПродажаТретьемуЛицу(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_СнятиеСХраненияИПродажаТретьемуЛицу",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_СнятиеСХраненияИПродажаТретьемуЛицу";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_СнятиеСХраненияИПродажаТретьемуЛицу");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
		ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
		ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
		ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
		//rarus sergei 25.11.2016 mantis 8005 ++
		//Если Документ.Сторнирован = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
		//КонецЕсли;
		//Если Документ.Корректировка = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		//ИначеЕсли Документ.Корректировка = Истина Тогда    
		//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
		//	
		//КонецЕсли; 
		//rarus sergei 25.11.2016 mantis 8005 --
		
		// rarus agar 13.12.2022 19668 ++
		ВыводитьЛоготип = Ложь;
		ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
		Если ВыводитьЛоготип Тогда
			ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
			ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
			Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЛоготип);
		КонецЕсли;
		
		СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
		ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
		ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
		ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
		ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
		ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
		ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
		// rarus agar 13.12.2022 19668 --
		
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
		ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
		ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
		ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
		Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик); //rarus sergei 26.10.2016 mantis 7162 +
			ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
		Иначе
			//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 26.10.2016 mantis 7162 +
			//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
		КонецЕсли;
		Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
		
		НомерСтраницы = 1;
		ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
		ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
		ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=В"); 
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Если Документ.Сторнирован = Истина Тогда
			ТабличныйДокумент.Вывести(ОбластьАннулировано);			
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		Если Документ.Корректировка = Истина Тогда    
			ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			ТабличныйДокумент.Вывести(ОбластьКорректировка);
		КонецЕсли;
		// rarus agar 13.12.2022 19668 ++
		ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		// rarus agar 13.12.2022 19668 --
		ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		// заполняем ТЧ
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---

		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 25.04.2017 Mantis 9439 ---

		Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,);
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
		// заполняем ТЧ Контактные лица
		ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
		ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
		//rarus sergei 26.10.2016 mantis 7162 ++
		Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель);
		Иначе
			//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.Контрагент);
		КонецЕсли;
		//rarus sergei 26.10.2016 mantis 7162 --
		Запрос = Новый Запрос;
		//rarus pechek 02.04.2020 mantis 15672 +++
		//Запрос.Текст = "ВЫБРАТЬ
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо,
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.ВидКонтактнойИнформации,
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.Представление
		//|ИЗ
		//|	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
		//|		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
		//|			И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка.Договор = Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка.Ссылка
		//|ГДЕ
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка";
		Запрос.Текст = 	 "ВЫБРАТЬ
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо,
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.Представление КАК Представление
		               	 |ИЗ
		               	 |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
		               	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
		               	 |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
		               	 |			И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка.МестоДоставки = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.МестоХранения
		               	 |ГДЕ
		               	 |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
		               	 |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка";
		//rarus pechek 02.04.2020 mantis 15672 ---
		Запрос.УстановитьПараметр("Ссылка",Документ);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТЗКонтактныеЛица = Результат.Выгрузить();
			МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗКонтактныеЛица);
			Для каждого элемент Из МассивУникальныхКЛ Цикл
				СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
				СтрокаКИ = Строка(элемент);
				СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
				СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
				ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
				СтрокаКИ = "";
			КонецЦикла; 
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
		Иначе
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
		КонецЕсли;	
		//  Заполняем информацию по доп условиям
		Если ПоказыватьДопУсловия = Истина Тогда
			ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
			ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
			ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
			номерстроки = 1;
			Для каждого строка Из ДопУсловия Цикл
				ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
				номерстроки = номерстроки+1;
			КонецЦикла; 
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
		ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПФ_MXL_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
		Если ПараметрыПечати.Свойство("ТаблицаПеревозчиков") Тогда
			ТаблицаПеревозчиков = ПараметрыПечати.ТаблицаПеревозчиков;
		Иначе 
			ТаблицаПеревозчиков = Неопределено;
		КонецЕсли;
	КонецЕсли;
	Если ТаблицаПеревозчиков = Неопределено Тогда
		ПечататьПоПеревозчикам = Ложь;
	Иначе
		ПечататьПоПеревозчикам = Истина;
	КонецЕсли;
	ПервыйДокумент = Истина;
	Если ПечататьПоПеревозчикам = Ложь Тогда
		Для Каждого Документ Из МассивОбъектов Цикл
			
			Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			
			ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
			ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
			ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
			ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
			ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
			//rarus sergei 25.11.2016 mantis 8005 ++
			//Если Документ.Сторнирован = Ложь Тогда
			//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
			//КонецЕсли;
			//Если Документ.Корректировка = Ложь Тогда
			//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			//ИначеЕсли Документ.Корректировка = Истина Тогда    
			//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			
			//КонецЕсли; 
			//rarus sergei 25.11.2016 mantis 8005 --
			
			// rarus agar 13.12.2022 19668 ++
			ВыводитьЛоготип = Ложь;
			ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
			Если ВыводитьЛоготип Тогда
				ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
				ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
				Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
					ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
					Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
						ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
					КонецЕсли;
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьЛоготип);
			КонецЕсли;
			
			СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
			ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
			ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
			ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
			ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
			ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
			ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
			// rarus agar 13.12.2022 19668 --
			
			ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
			СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
			ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
			ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
			ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
			
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
			Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик); //rarus sergei 26.10.2016 mantis 7162 +
				ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
			Иначе
				//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 26.10.2016 mantis 7162 +
				//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
			КонецЕсли;
			Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
				ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
				ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
			КонецЕсли;
			
			ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
			
			НомерСтраницы = 1;
			ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
			ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
			ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
			ТабличныйДокумент.Вывести(ОбластьШапка);  
			Если Документ.Сторнирован = Истина Тогда
				ТабличныйДокумент.Вывести(ОбластьАннулировано);			
			КонецЕсли; 
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			Если Документ.Корректировка = Истина Тогда    
				ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				ТабличныйДокумент.Вывести(ОбластьКорректировка);
			КонецЕсли;
			// rarus agar 13.12.2022 19668 ++
			ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
			// rarus agar 13.12.2022 19668 --
			ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
			
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
			// заполняем ТЧ
			//rarus abrant 25.04.2017 Mantis 9439 +++
			//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
			//rarus abrant 27.04.2017 Mantis 9439 +++
			ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
			//rarus abrant 27.04.2017 Mantis 9439 ---

			НомерСтроки = 1;
			Для каждого Строка из ВыборкаТабличнойЧасти Цикл
				Строка.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
			//rarus abrant 25.04.2017 Mantis 9439 ---

			Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
				Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
					НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
			ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
			//rarus sergei 26.10.2016 mantis 7162 ++
			Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель);
			Иначе
				//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.Контрагент);
			КонецЕсли;
			//rarus sergei 26.10.2016 mantis 7162 --
			ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
			//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
			
			
			//  Заполняем информацию по доп условиям
			
			Если ПоказыватьДопУсловия = Истина Тогда
				ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
				ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
				ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
				номерстроки = 1;
				Для каждого строка Из ДопУсловия Цикл
					ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
					номерстроки = номерстроки+1;
				КонецЦикла; 
			КонецЕсли;
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 26.10.2016 mantis 7162 +
			ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
		КонецЦикла;
	Иначе
		МассивСтрокПоКоторымПечатаем = ТаблицаПеревозчиков.Найтистроки(Новый Структура("Флаг",Истина));	
		Если МассивСтрокПоКоторымПечатаем.Количество() = 0 Тогда
			ПервыйПеревозчик = Истина;
			СчетчикПеревозчиков = 1;
			Для каждого строка Из ТаблицаПеревозчиков Цикл
				Документ = МассивОбъектов[0];
				Если НЕ ПервыйПеревозчик Тогда // новый документ должен быть на отдельной странице
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйПеревозчик = Ложь;	
				ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
				ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
				ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
				ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
				//rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Сторнирован = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
				//КонецЕсли;
				//Если Документ.Корректировка = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				//ИначеЕсли Документ.Корректировка = Истина Тогда    
				//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				//	
				//КонецЕсли; 
				//rarus sergei 25.11.2016 mantis 8005 --
				
				// rarus agar 13.12.2022 19668 ++
				ВыводитьЛоготип = Ложь;
				ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
				Если ВыводитьЛоготип Тогда
					ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
					ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
					Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
						ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
						Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
							ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
						КонецЕсли;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьЛоготип);
				КонецЕсли;
				
				СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
				ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
				ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
				ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
				ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
				ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
				ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
				// rarus agar 13.12.2022 19668 --
				
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
				СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
				ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
				ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
				ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка",СчетчикПеревозчиков);
				Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);  //rarus sergei 26.10.2016 mantis 7162 +
					ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент);  //rarus sergei 26.10.2016 mantis 7162 +
					//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
				КонецЕсли;
				Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
					ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
					ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
				КонецЕсли;
				
				ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
				НомерСтраницы = 1;
				ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
				ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
				ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
				ТабличныйДокумент.Вывести(ОбластьШапка);
				Если Документ.Сторнирован = Истина Тогда
					ТабличныйДокумент.Вывести(ОбластьАннулировано);			
				КонецЕсли; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Если Документ.Корректировка = Истина Тогда    
					ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
					ТабличныйДокумент.Вывести(ОбластьКорректировка);
				КонецЕсли;
				// rarus agar 13.12.2022 19668 ++
				ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
				// rarus agar 13.12.2022 19668 --
				ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
				// заполняем ТЧ
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ВыборкаТабличнойЧасти = Строка.ЗаявкаПеревозчику.СоставЗаявки;
				//ТаблицаИзделий = Строка.ЗаявкаПеревозчику.СоставЗаявки;
				//rarus abrant 02.05.2017 Mantis 9439 +++
				ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Строка.ЗаявкаПеревозчику.СоставЗаявки);
				ТаблицаИзделий = СортироватьТЧПоНомеруИзделия(Строка.ЗаявкаПеревозчику.СоставЗаявки);
				//ВыборкаТабличнойЧасти = Строка.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//ТаблицаИзделий = Строка.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//rarus abrant 02.05.2017 Mantis 9439 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---
			
				//rarus tenkam 15.09.2017 mantis 11096 +++
				//Для каждого строкаТЧИзделий Из ВыборкаТабличнойЧасти Цикл
				//	
				//	Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
				//		ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);	
				//	КонецЕсли; 	
				//		
				//КонецЦикла; 
				
				Сч = 0;
				Пока Сч < ВыборкаТабличнойЧасти.Количество() Цикл
					строкаТЧИзделий = ВыборкаТабличнойЧасти.Получить(Сч);
					Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
						ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла; 
				//rarus tenkam 15.09.2017 mantis 11096 ---
					
				Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
					ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
					Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
						НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
					КонецЕсли;
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
				ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
				//rarus sergei 26.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.Контрагент);
				КонецЕсли;
				//rarus sergei 26.10.2016 mantis 7162 --
				ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
				ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = Scan_Печать.ПолучитьНаименованиеСправочника(Строка.Перевозчик);  //rarus sergei 26.10.2016 mantis 7162 +
				//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
				// заполняем ТЧ Контактные лица
				ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
				ДоговорСПеревозчиком = Строка.ДоговорСПеревозчиком;
				Запрос = Новый Запрос;
				//rarus pechek 02.04.2020 mantis 15672 +++
				//Запрос.Текст = "ВЫБРАТЬ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
				//|ИЗ
				//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
				//|ГДЕ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговор";
				//Запрос.УстановитьПараметр("СсылкаДоговор",ДоговорСПеревозчиком);
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
				//rarus pechek 02.04.2020 mantis 15672 ---
				Результат = Запрос.Выполнить();
				Если НЕ Результат.Пустой() Тогда
					ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТЗУникальныеКонтактныеЛица = Результат.Выгрузить();
					МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗУникальныеКонтактныеЛица);
					ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
					Для каждого элемент Из МассивУникальныхКЛ Цикл
						СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
						СтрокаКИ = Строка(элемент);
						СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
						СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
						ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
						СтрокаКИ = "";
					КонецЦикла; 
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
				Иначе
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
				КонецЕсли;	
				
				
				//  Заполняем информацию по доп условиям
				
				Если ПоказыватьДопУсловия = Истина Тогда
					ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
					ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
					ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
					номерстроки = 1;
					Для каждого строка Из ДопУсловия Цикл
						ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
						номерстроки = номерстроки+1;
					КонецЦикла; 
				КонецЕсли;
				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
				ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 26.10.2016 mantis 7162 +
				ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
				СчетчикПеревозчиков = СчетчикПеревозчиков+1;
			КонецЦикла; 	
		Иначе
			ПервыйПеревозчик = Истина;
			СчетчикПеревозчиков = 1;
			Для каждого элемент Из МассивСтрокПоКоторымПечатаем Цикл
				
				Документ = МассивОбъектов[0];
				Если НЕ ПервыйПеревозчик Тогда // новый документ должен быть на отдельной странице
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйПеревозчик = Ложь;	
				ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
				ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
				ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
				ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
				//rarus sergei 25.11.2016 mantis 8005 ++
				//Если Документ.Сторнирован = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
				//КонецЕсли;
				//Если Документ.Корректировка = Ложь Тогда
				//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				//ИначеЕсли Документ.Корректировка = Истина Тогда    
				//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
				//	
				//КонецЕсли; 
				//rarus sergei 25.11.2016 mantis 8005 --
				
				// rarus agar 13.12.2022 19668 ++
				ВыводитьЛоготип = Ложь;
				ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
				Если ВыводитьЛоготип Тогда
					ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
					ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
					Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
						ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
						Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
							ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
						КонецЕсли;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьЛоготип);
				КонецЕсли;
				
				СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
				ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
				ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
				ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
				ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
				ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
				ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
				// rarus agar 13.12.2022 19668 --
				
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
				СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
				ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
				ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
				ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка",СчетчикПеревозчиков);
				Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);  //rarus sergei 26.10.2016 mantis 7162 +
					ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 26.10.2016 mantis 7162 +
					//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
				КонецЕсли;
				Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
					ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
					ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
				КонецЕсли;
				
				ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
				НомерСтраницы = 1;
				ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
				ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
				ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения,"ДЛФ=В");			
				ТабличныйДокумент.Вывести(ОбластьШапка);
				Если Документ.Сторнирован = Истина Тогда
					ТабличныйДокумент.Вывести(ОбластьАннулировано);			
				КонецЕсли; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Если Документ.Корректировка = Истина Тогда    
					ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
					ТабличныйДокумент.Вывести(ОбластьКорректировка);
				КонецЕсли;
				// rarus agar 13.12.2022 19668 ++
				ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
				// rarus agar 13.12.2022 19668 --
				ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
				// заполняем ТЧ
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ВыборкаТабличнойЧасти = элемент.ЗаявкаПеревозчику.СоставЗаявки;
				//ТаблицаИзделий = элемент.ЗаявкаПеревозчику.СоставЗаявки;
				
				//rarus abrant 02.05.2017 Mantis 9439 +++
				ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(элемент.ЗаявкаПеревозчику.СоставЗаявки);
				ТаблицаИзделий = СортироватьТЧПоНомеруИзделия(элемент.ЗаявкаПеревозчику.СоставЗаявки);
				//ВыборкаТабличнойЧасти = элемент.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//ТаблицаИзделий = элемент.ЗаявкаПеревозчику.СоставЗаявки.Выгрузить();
				//rarus abrant 02.05.2017 Mantis 9439 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---

				//rarus tenkam 15.09.2017 mantis 11096 +++
				//Для каждого строкаТЧИзделий Из ВыборкаТабличнойЧасти Цикл
				//	
				//	Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
				//		ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);	
				//	КонецЕсли; 	
				//		
				//КонецЦикла; 
				
				Сч = 0;
				Пока Сч < ВыборкаТабличнойЧасти.Количество() Цикл
					строкаТЧИзделий = ВыборкаТабличнойЧасти.Получить(Сч);
					Если строкаТЧИзделий.ЗаявкаНаДействие <> Документ Тогда
						ВыборкаТабличнойЧасти.Удалить(строкаТЧИзделий);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла; 
				//rarus tenkam 15.09.2017 mantis 11096 ---
				
				Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
					ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
					НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
					Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
						НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
					КонецЕсли;
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
				ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
				//rarus sergei 26.10.2016 mantis 7162 ++
				Если  ТипЗнч(Документ.Грузополучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
					ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель);
				Иначе
					//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Грузополучатель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Грузополучатель.Контрагент);
				КонецЕсли;
				//rarus sergei 26.10.2016 mantis 7162 --
				
				ОбластьШапкаТЧКонтакты.Параметры.АдресДоставки = Документ.МестоДоставки.АдресСкладаФактический;
				//rarus tenkam 29.03.2017 mantis 7623 +++
				//ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = Scan_Печать.ПолучитьНаименованиеСправочника(Строка.Перевозчик);  //rarus sergei 26.10.2016 mantis 7162 +
				ОбластьШапкаТЧКонтакты.Параметры.Перевозчик = Scan_Печать.ПолучитьНаименованиеСправочника(элемент.Перевозчик);				//rarus tenkam 29.03.2017 mantis 7623 ---
				//rarus tenkam 29.03.2017 mantis 7623 ---
				//ЗаявкаПеревозчику = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ПолучитьЗаявкуПеревозчику(Документ);			
				// заполняем ТЧ Контактные лица
				ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
				ДоговорСПеревозчиком = элемент.ДоговорСПеревозчиком;
				Запрос = Новый Запрос;
				//rarus pechek 02.04.2020 mantis 15672 +++
				//Запрос.Текст = "ВЫБРАТЬ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
				//|ИЗ
				//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
				//|ГДЕ
				//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.ДоступностьВПФ = ИСТИНА
				//|	И Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговор";
				//Запрос.УстановитьПараметр("СсылкаДоговор",ДоговорСПеревозчиком);
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
				//rarus pechek 02.04.2020 mantis 15672 ---
				Результат = Запрос.Выполнить();
				Если НЕ Результат.Пустой() Тогда
					ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТЗУникальныеКонтактныеЛица = Результат.Выгрузить();
					МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗУникальныеКонтактныеЛица);
					ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
					Для каждого элемент Из МассивУникальныхКЛ Цикл
						СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
						СтрокаКИ = Строка(элемент);
						СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
						СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
						ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
						СтрокаКИ = "";
					КонецЦикла; 
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
				Иначе
					ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
					ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
				КонецЕсли;	
				
				
				//  Заполняем информацию по доп условиям
				
				Если ПоказыватьДопУсловия = Истина Тогда
					ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
					ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
					ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
					номерстроки = 1;
					Для каждого строка Из ДопУсловия Цикл
						ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
						НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
						номерстроки = номерстроки+1;
					КонецЦикла; 
				КонецЕсли;
				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
				ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 26.10.2016 mantis 7162 +
				ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
				
				СчетчикПеревозчиков = СчетчикПеревозчиков+1;
				
				
				
				
			КонецЦикла; 
			
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПФ_MXL_СнятиеСХраненияИПередачаВПроизводство(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_СнятиеСХраненияИПередачаВПроизводство",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_СнятиеСХраненияИПередачаВПроизводство";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_СнятиеСХраненияИПередачаВПроизводство");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
		//бластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
		ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
		ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
		//rarus sergei 25.11.2016 mantis 8005 ++
		//Если Документ.Сторнирован = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
		//КонецЕсли;
		//Если Документ.Корректировка = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		//ИначеЕсли Документ.Корректировка = Истина Тогда    
		//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
		//	
		//КонецЕсли; 
		//rarus sergei 25.11.2016 mantis 8005 --
		
		// rarus agar 13.12.2022 19668 ++
		ВыводитьЛоготип = Ложь;
		ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
		Если ВыводитьЛоготип Тогда
			ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
			ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
			Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЛоготип);
		КонецЕсли;
		
		СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
		ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
		ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
		ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
		ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
		ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
		ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
		// rarus agar 13.12.2022 19668 --
		
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
		ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
		ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
		ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
		Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик); //rarus sergei 26.10.2016 mantis 7162 +
			ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
			ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(Документ.Подрядчик);
		Иначе
			//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 26.10.2016 mantis 7162 +
			//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
			//rarus bonmak 15.04.2020 14456 ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(Документ.Подрядчик.Контрагент);	
		КонецЕсли;
		Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		Если ДоговорПодряда <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораПроизводство = ДоговорПодряда.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораПроизводство = Формат(ДоговорПодряда.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
		
		НомерСтраницы = 1;
		ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
		ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Если Документ.Сторнирован = Истина Тогда
			ТабличныйДокумент.Вывести(ОбластьАннулировано);			
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		Если Документ.Корректировка = Истина Тогда    
			ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			ТабличныйДокумент.Вывести(ОбластьКорректировка);
		КонецЕсли;
		// rarus agar 13.12.2022 19668 ++
		ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		// rarus agar 13.12.2022 19668 --
		ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		// заполняем ТЧ
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---

		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 25.04.2017 Mantis 9439 ---

		Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,);
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
		//  Заполняем информацию по доп условиям
		Если ПоказыватьДопУсловия = Истина Тогда
			ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
			ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
			ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
			номерстроки = 1;
			Для каждого строка Из ДопУсловия Цикл
				ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
				номерстроки = номерстроки+1;
			КонецЦикла; 
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
		ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ПечатьПФ_MXL_ПередачаВПроизводство(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_ПередачаВПроизводство",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_ПередачаВПроизводство";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_ПередачаВПроизводство");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
		//бластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
		ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
		ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
		//rarus sergei 25.11.2016 mantis 8005 ++
		//Если Документ.Сторнирован = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
		//КонецЕсли;
		//Если Документ.Корректировка = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		//ИначеЕсли Документ.Корректировка = Истина Тогда    
		//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
		//	
		//КонецЕсли; 
		//rarus sergei 25.11.2016 mantis 8005 --
		
		// rarus agar 13.12.2022 19668 ++
		ВыводитьЛоготип = Ложь;
		ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
		Если ВыводитьЛоготип Тогда
			ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
			ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
			Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЛоготип);
		КонецЕсли;
		
		СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
		ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
		ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
		ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
		ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
		ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
		ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
		// rarus agar 13.12.2022 19668 --
		
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
		ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
		
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ТекДоговор = ?(Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПередачаВПроизводство,  Документ.ДоговорСПоставщиком, Документ.Договор);
		ОбластьШапка.Параметры.НомерДоговора = ТекДоговор.НомерДоговора;
		ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(ТекДоговор.ДатаНачала, "ДЛФ=ДД"); 
		//ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
		//ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
		//rarus tenkam 08.02.2017 mantis 8331 ---

		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
		//rarus tenkam 08.02.2017 mantis 8331 +++
		ТекКонтрагентДоговора = ?(Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПередачаВПроизводство, Документ.Подрядчик, Документ.Грузополучатель);
		Если  ТипЗнч(ТекКонтрагентДоговора)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(ТекКонтрагентДоговора);  
			ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(ТекКонтрагентДоговора);
		Иначе
			//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(ТекКонтрагентДоговора.Контрагент);  
			//rarus bonmak 15.04.2020 14456 ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(ТекКонтрагентДоговора.Контрагент);
		КонецЕсли;
		//Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
		//	ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик); //rarus sergei 25.10.2016 mantis 7162 +
		//	ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(Документ.Подрядчик);
		//Иначе
		//	ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 25.10.2016 mantis 7162 +
		//	ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(Документ.Подрядчик.Контрагент);
		//КонецЕсли;
		//rarus tenkam 08.02.2017 mantis 8331 ---
		Если ДоговорПодряда <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораПодряда = ДоговорПодряда.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораПодряда = Формат(ДоговорПодряда.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
		
		НомерСтраницы = 1;
		ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
		ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Если Документ.Сторнирован = Истина Тогда
			ТабличныйДокумент.Вывести(ОбластьАннулировано);			
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		Если Документ.Корректировка = Истина Тогда    
			ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			ТабличныйДокумент.Вывести(ОбластьКорректировка);
		КонецЕсли;
		// rarus agar 13.12.2022 19668 ++
		ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		// rarus agar 13.12.2022 19668 --
		ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		// заполняем ТЧ
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---

		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 25.04.2017 Mantis 9439 ---

		Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,);
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
		//  Заполняем информацию по доп условиям
		Если ПоказыватьДопУсловия = Истина Тогда
			ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
			ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
			ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
			номерстроки = 1;
			Для каждого строка Из ДопУсловия Цикл
				ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
				номерстроки = номерстроки+1;
			КонецЦикла; 
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
		ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПФ_MXL_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
		ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
		ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
		ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
		//rarus sergei 25.11.2016 mantis 8005 ++
		//Если Документ.Сторнирован = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
		//КонецЕсли;
		//Если Документ.Корректировка = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		//ИначеЕсли Документ.Корректировка = Истина Тогда    
		//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
		//	
		//КонецЕсли; 
		//rarus sergei 25.11.2016 mantis 8005 --
		
		// rarus agar 13.12.2022 19668 ++
		ВыводитьЛоготип = Ложь;
		ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
		Если ВыводитьЛоготип Тогда
			ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
			ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
			Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЛоготип);
		КонецЕсли;
		
		СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
		ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
		ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
		ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
		ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
		ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
		ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
		// rarus agar 13.12.2022 19668 --
		
		ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
		ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
		ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
		ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
		Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик);
			ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик); //rarus sergei 25.10.2016 mantis 7162 +
		Иначе
			//rarus bonmak 15.04.2020 14456 ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Подрядчик.Контрагент);
			//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент); //rarus sergei 25.10.2016 mantis 7162 +
		КонецЕсли;
		Если ДоговорХранения <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения1 = ДоговорХранения.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения1 = Формат(ДоговорХранения.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		Если  ТипЗнч(Документ.Хранитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ДоговорХранения2 = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Хранитель);
			ОбластьШапкаТЧКонтакты.Параметры.Хранитель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Хранитель);    //rarus sergei 25.10.2016 mantis 7162 +
		Иначе
			//rarus bonmak 15.04.2020 14456 ДоговорХранения2 = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Хранитель.Контрагент);
			//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Хранитель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Хранитель.Контрагент);    //rarus sergei 25.10.2016 mantis 7162 +
		КонецЕсли;
		Если ДоговорХранения2 <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения2 = ДоговорХранения2.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения2 = Формат(ДоговорХранения2.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
		
		НомерСтраницы = 1;
		ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
		ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
		ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=В");
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Если Документ.Сторнирован = Истина Тогда
			ТабличныйДокумент.Вывести(ОбластьАннулировано);			
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		Если Документ.Корректировка = Истина Тогда    
			ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			ТабличныйДокумент.Вывести(ОбластьКорректировка);
		КонецЕсли;
		// rarus agar 13.12.2022 19668 ++
		ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		// rarus agar 13.12.2022 19668 --
		ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		// заполняем ТЧ
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---

		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 25.04.2017 Mantis 9439 ---

		Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,);
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы); 
		// заполняем ТЧ Контактные лица
		
		ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
		
		Запрос = Новый Запрос;
		//rarus pechek 02.04.2020 mantis 15672 +++
		//Запрос.Текст = "ВЫБРАТЬ
		//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
		//|ИЗ
		//|	Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
		//|ГДЕ
		//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка = &СсылкаДоговорХранителя2
		//|	И Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.ДоступностьВПФ = ИСТИНА";
		//Запрос.УстановитьПараметр("СсылкаДоговорХранителя2",ДоговорХранения2);
				Запрос.Текст =    "ВЫБРАТЬ
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
				                  |ИЗ
				                  |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
				                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
				                  |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
				                  |ГДЕ
				                  |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
				                  |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка
				                  |
				                  |СГРУППИРОВАТЬ ПО
				                  |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
				Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка); 
		//rarus pechek 02.04.2020 mantis 15672 ---
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ВыборкаКЛ = Результат.Выбрать();
			МассивУникальныхКЛ =Новый Массив;
			Пока ВыборкаКЛ.Следующий() Цикл
				МассивУникальныхКЛ.Добавить(ВыборкаКЛ.КонтактноеЛицо);
			КонецЦикла; 
			ТЗКонтактныеЛица = ЗаполнитьКонтактнуюинформацию(МассивУникальныхКЛ);
			Для каждого элемент Из МассивУникальныхКЛ Цикл
				СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
				СтрокаКИ = Строка(элемент);
				СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
				СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
				ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
				СтрокаКИ = "";
			КонецЦикла; 
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
		Иначе
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
		КонецЕсли;	
		//  Заполняем информацию по доп условиям
		Если ПоказыватьДопУсловия = Истина Тогда
			ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
			ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
			ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
			номерстроки = 1;
			Для каждого строка Из ДопУсловия Цикл
				ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
				номерстроки = номерстроки+1;
			КонецЦикла; 
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
		ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПФ_MXL_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу(МассивОбъектов,ОбъектыПечати,ИмяМакета = "ПФ_MXL_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу",ПараметрыПечати) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Scan_ЗаявкаНаДействие.ПФ_MXL_ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу");
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПоказыватьДопУсловия = ПараметрыПечати.ПоказыватьДопУсловия;
		Если ПараметрыПечати.Свойство("ДопУсловия") Тогда
			ДопУсловия = ПараметрыПечати.ДопУсловия;
		КонецЕсли;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		ОбластьШапкаТаблицы = Scan_Печать.ПривестиМакетПечатнойФормы(Макет,Документ,,ПараметрыПечати);
		ОбластьСтрокаЛиния = Макет.ПолучитьОбласть("СтрокаЛиния");
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНаименованиеУслуги = Макет.ПолучитьОбласть("НаименованиеУслуги");
		ОбластьАннулировано = Макет.ПолучитьОбласть("Аннулировано");
		ОбластьКорректировка = Макет.ПолучитьОбласть("Корректировка");
		//rarus sergei 25.11.2016 mantis 8005 ++
		//Если Документ.Сторнирован = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(Макет.Область("Аннулировано"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);			
		//КонецЕсли;
		//Если Документ.Корректировка = Ложь Тогда
		//	ОбластьШапка.УдалитьОбласть(ОбластьШапка.Область("Корректировка"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		//ИначеЕсли Документ.Корректировка = Истина Тогда    
		//	ОбластьШапка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
		//	
		//КонецЕсли; 
		//rarus sergei 25.11.2016 mantis 8005 --
		
		// rarus agar 13.12.2022 19668 ++
		ВыводитьЛоготип = Ложь;
		ПараметрыПечати.Свойство("ВыводитьЛоготип", ВыводитьЛоготип);
		Если ВыводитьЛоготип Тогда
			ОбластьЛоготип = Макет.ПолучитьОбласть("ОбластьЛоготип");
			ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ.Организация, "ФайлЛоготип");
			Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					ОбластьЛоготип.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЛоготип);
		КонецЕсли;
		
		СтруктураДанныхБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Организация, "Банк,РасчетныйСчет,КорреспондентскийСчет,БИК");
		ОбластьШапка.Параметры.Банк = СтруктураДанныхБанка.Банк;
		ОбластьШапка.Параметры.РасчетныйСчет = СтруктураДанныхБанка.РасчетныйСчет;
		ОбластьШапка.Параметры.КорреспондентскийСчет = СтруктураДанныхБанка.КорреспондентскийСчет;
		ОбластьШапка.Параметры.БИК = СтруктураДанныхБанка.БИК;
		ОбластьШапка.Параметры.ВебСайт = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
		ОбластьШапка.Параметры.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Документ.Организация, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
		// rarus agar 13.12.2022 19668 --
		
		ОбластьШапкаТЧКонтакты = Макет.ПолучитьОбласть("ШапкаТЧКонтакты");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров=Новый Структура("Наименование,АдресФактический,ТелефонРабочий,Факс","","","тел.: ","Факс: ");
		ОбластьШапка.Параметры.ОрганизацияПредставление = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация,СтруктураПараметров);
		ОбластьШапка.Параметры.НомерДоговора = Документ.ДоговорСПоставщиком.НомерДоговора;
		ОбластьШапка.Параметры.ДатаНачалаДоговора = Формат(Документ.ДоговорСПоставщиком.ДатаНачала, "ДЛФ=ДД"); 
		//rarus sergei 25.10.2016 mantis 7162 ++
		Если ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик);
		Иначе
			//rarus bonmak 15.04.2020 14456 ОбластьШапка.Параметры.КонтрагентДоговора = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Подрядчик.Контрагент);
		КонецЕсли;
		//rarus sergei 25.10.2016 mantis 7162 --
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Scan_Печать.ПолучитьПредставлениеДокумента(Документ,"Заявка");
		Если  ТипЗнч(Документ.Хранитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ОбластьШапкаТЧКонтакты.Параметры.Хранитель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Хранитель); //rarus sergei 25.10.2016 mantis 7162 +
			ДоговорХранения2 = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Хранитель);
		Иначе
			//rarus bonmak 15.04.2020 14456 ОбластьШапкаТЧКонтакты.Параметры.Хранитель = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Хранитель.Контрагент);  //rarus sergei 25.10.2016 mantis 7162 +
			//rarus bonmak 15.04.2020 14456 ДоговорХранения2 = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(Документ.Хранитель.Контрагент);
		КонецЕсли;
		Если ДоговорХранения2 <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			ОбластьНаименованиеУслуги.Параметры.НомерДоговораХранения = ДоговорХранения2.НомерДоговора;
			ОбластьНаименованиеУслуги.Параметры.ДатаДоговораХранения = Формат(ДоговорХранения2.ДатаНачала, "ДЛФ=ДД");
		КонецЕсли;
		ГруппаПродукта = Scan_Печать.ПолучитьПредставлениеГруппыПродукта(Документ);
		
		НомерСтраницы = 1;
		ОбластьШапкаТаблицы.Параметры.ГруппаПродукта = ГруппаПродукта; 
		ОбластьПодвалТаблицы.Параметры.ДатаПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=ДД");
		ОбластьПодвалТаблицы.Параметры.ВремяПоручения = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=В");
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Если Документ.Сторнирован = Истина Тогда
			ТабличныйДокумент.Вывести(ОбластьАннулировано);			
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		Если Документ.Корректировка = Истина Тогда    
			ОбластьКорректировка.Параметры.ДокументОснование = Scan_Печать.ПолучитьПредставлениеДокумента(Документ.ДокументОснование,"заявки");
			ТабличныйДокумент.Вывести(ОбластьКорректировка);
		КонецЕсли;
		// rarus agar 13.12.2022 19668 ++
		ОбластьНаименованиеУслуги.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		// rarus agar 13.12.2022 19668 --
		ТабличныйДокумент.Вывести(ОбластьНаименованиеУслуги);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);                                   
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		// заполняем ТЧ
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаТабличнойЧасти = Документ.ПродуктыПоЗаявке;
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---

		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 25.04.2017 Mantis 9439 ---

		Для Каждого СтрокаТЧ Из ВыборкаТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Scan_Печать.ЗаполнитьПредставлениеДанныхТоварнойСтроки(Макет,СтрокаТЧ,Документ));
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьПодвалТаблицы, НомерСтраницы, , Документ,,);
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				НомерСтраницыПредыдущий   = НомерСтраницы;                                                         
			КонецЕсли;
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
		
		// заполняем ТЧ Контактные лица
		
		ОбластьСтрокаКИ = Макет.ПолучитьОбласть("СтрокаКИ");
		
		Запрос = Новый Запрос;
		//rarus pechek 02.04.2020 mantis 15672 +++
		//Запрос.Текст = "ВЫБРАТЬ
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо,
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.ВидКонтактнойИнформации,
		//|	Scan_ЗаявкаНаДействиеКонтактныеЛица.Представление
		//|ИЗ
		//|	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ДоговорыВзаиморасчетов.КонтактныеЛицаПоДоговору КАК Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору
		//|		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.КонтактноеЛицо
		//|			И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка.Договор = Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.Ссылка.Ссылка
		//|ГДЕ
		//|	Scan_ДоговорыВзаиморасчетовКонтактныеЛицаПоДоговору.ДоступностьВПФ = ИСТИНА
		//|	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка";
		Запрос.Текст = 	 "ВЫБРАТЬ
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо,
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		               	 |	Scan_ЗаявкаНаДействиеКонтактныеЛица.Представление КАК Представление
		               	 |ИЗ
		               	 |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
		               	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
		               	 |		ПО Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо
		               	 |			И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка.МестоДоставки = Scan_ВзаимосвязьКонтактныхЛицИМестХранения.МестоХранения
		               	 |ГДЕ
		               	 |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ
		               	 |	И Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка = &Ссылка";
		//rarus pechek 02.04.2020 mantis 15672 ---
		Запрос.УстановитьПараметр("Ссылка",Документ);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			ОбластьШапкаТЧКонтакты.Параметры.КонтактныеЛица = "Контактные лица:";
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТЗКонтактныеЛица = Результат.Выгрузить();
			МассивУникальныхКЛ = ПолучитьМассивУникальныхКЛ(ТЗКонтактныеЛица);
			Для каждого элемент Из МассивУникальныхКЛ Цикл
				СтрокаКИ = ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация; 
				СтрокаКИ = Строка(элемент);
				СтрокаВидИПредставление = ЗаполнитьКИ(элемент,ТЗКонтактныеЛица);
				СтрокаКИ = Строка(элемент)+ Символы.ПС + СтрокаВидИПредставление; 
				ОбластьСтрокаКИ.Параметры.КонтактнаяИнформация =СтрокаКИ; 
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрокаКИ, ОбластьШапкаТЧКонтакты, , НомерСтраницы, , Документ,,ОбластьСтрокаЛиния);
				СтрокаКИ = "";
			КонецЦикла; 
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);	
		Иначе
			ТабличныйДокумент.Вывести(ОбластьШапкаТЧКонтакты);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЛиния);
		КонецЕсли;
		//rarus sergei 19.10.2016 mantis 7162 --
		//  Заполняем информацию по доп условиям
		Если ПоказыватьДопУсловия = Истина Тогда
			ОбластьШапкаДопУсловий = Макет.ПолучитьОбласть("ШапкаДопУсловий");
			ТабличныйДокумент.Вывести(ОбластьШапкаДопУсловий);
			ОбластьстрокаДопУсловие = Макет.ПолучитьОбласть("строкаДопУсловие"); 
			номерстроки = 1;
			Для каждого строка Из ДопУсловия Цикл
				ОбластьстрокаДопУсловие.Параметры.Условие = строка(номерстроки)+". "+строка.ДопУсловие;
				НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьстрокаДопУсловие, ОбластьШапкаДопУсловий, , НомерСтраницы, , Документ);
				номерстроки = номерстроки+1;
			КонецЦикла; 
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Организация = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация); //rarus sergei 02.11.2016 mantis 7162 +
		ОбластьПодвал.Параметры.Автор = "/"+Документ.Автор+"/";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьМ15(МассивОбъектов,ОбъектыПечати,ИмяМакета = "М15",ПараметрыПечати = Неопределено) Экспорт  //rarus sergei 05.12.2016 mantis 7169 +
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если МассивОбъектов.Количество() = 1 Тогда
		ТабличныйДокумент.ИспользуемоеИмяФайла = Scan_Печать.ПолучитьПредставлениеДокумента(МассивОбъектов[0],"Заявка на действие");
	КонецЕсли;
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		//rarus tenkam 01.11.2017 mantis 9974 +++
		Если ПараметрыПечати.Свойство("ДатаСоставления") Тогда
			ДатаСоставления = ПараметрыПечати.ДатаСоставления;
		Иначе
			ДатаСоставления = Документ.ДатаПередачиВПроизводство;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ДатаСоставления) Тогда
			ДатаСоставления = Документ.ДатаДоставкиПлановая;
		КонецЕсли;
		//rarus tenkam 01.11.2017 mantis 9974 ---
		
		// rarus tenkam 22.09.2021 mantis 18115 +++
		Если ПараметрыПечати.Свойство("Договор") Тогда
			ДоговорПодряда = ПараметрыПечати.Договор;
		Иначе
			ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();
		КонецЕсли;
		// rarus tenkam 22.09.2021 mantis 18115 ---
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		//ФорматВыводаСуммы 	   = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		//ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = ПолучитьМакет("М15");
		ОбластьЗаголовок       = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы    = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока          = Макет.ПолучитьОбласть("Строка");
		ОбластьРазделителя 	   = Макет.ПолучитьОбласть("Разделитель");
		ОбластьПодвал          = Макет.ПолучитьОбласть("Подвал");
		
		//вывод заголовка документа
		ОбластьЗаголовок.Параметры.Заполнить(Документ);
		ОбластьЗаголовок.Параметры.НомерДокумента = Scan_Печать.ПолучитьНомерДляПечати(Документ);
		//Если ЗначениеЗаполнено(Документ.ПодразделениеКомпании) И ЗначениеЗаполнено(Документ.ПодразделениеКомпании.КПП) Тогда
		//	СтрокаПредставления = Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация);
		//	ОбластьЗаголовок.Параметры.ПредставлениеОрганизации	= СтрЗаменить(СтрокаПредставления, Документ.Организация.КПП, Документ.ПодразделениеКомпании.КПП);
		//Иначе	
		ОбластьЗаголовок.Параметры.ПредставлениеОрганизации	= Scan_Печать.ПолучитьПредставлениеСправочника(Документ.Организация);
		//КонецЕсли;
 
		ОбластьЗаголовок.Параметры.ОКПООрганизации = Документ.Организация.ОКПО;				//rarus tenkam 20.04.2017 mantis 9275+
		
		//ОбластьЗаголовок.Параметры.КонтрагентНаименование		= Документ.Подрядчик;		//rarus tenkam 01.10.2017 mantis 9974 +
		//ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО = Документ.Организация.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ДатаСоставления = Формат(ДатаСоставления, "ДЛФ=Д");	//rarus tenkam 01.11.2017 mantis 9974 +
		ОбластьЗаголовок.Параметры.ПодразделениеНаименование = Scan_Печать.ПолучитьНаименованиеСправочника(Документ.Организация);
		//Если ЗначениеЗаполнено(Документ.ДокументОснование) Тогда 
		
		//rarus tenkam 09.02.2017 mantis 8331 +++
		Если Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство Тогда
		  	ТекКонтрагент = Документ.Грузополучатель;
		Иначе
			ТекКонтрагент = Документ.Подрядчик;
		КонецЕсли;
		
		// rarus tenkam 22.09.2021 mantis 18115 +++
		Если ЗначениеЗаполнено(ДоговорПодряда) Тогда
			ТЗИзделий = ПолучитьИзделияПоДатеСоставленияИДоговоруПодряда(Документ, ДатаСоставления, ДоговорПодряда);
		Иначе
			ТЗИзделий = ПолучитьИзделияПоДатеСоставления(Документ, ДатаСоставления);
		КонецЕсли; 
		// rarus tenkam 22.09.2021 mantis 18115 ---
		
		Если НЕ ЗначениеЗаполнено(ДоговорПодряда) Тогда // rarus tenkam 22.09.2021 mantis 18115 +
			Если  ТипЗнч(ТекКонтрагент)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
				ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(ТекКонтрагент);
			Иначе
				//rarus bonmak 15.04.2020 14456 ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(ТекКонтрагент.Контрагент);
			КонецЕсли;
		КонецЕсли; // rarus tenkam 22.09.2021 mantis 18115 +
		//Если  ТипЗнч(Документ.Подрядчик)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
		//	ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(Документ.Подрядчик);
		//Иначе
		//	ДоговорПодряда = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорПодряда(Документ.Подрядчик.Контрагент);
		//КонецЕсли;
		//rarus tenkam 09.02.2017 mantis 8331 ---
		
		Если ДоговорПодряда <> Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка() Тогда
			// rarus tenkam 22.09.2021 mantis 18115 +++
			//ОбластьЗаголовок.Параметры.Основание = ДоговорПодряда;
			ОбластьЗаголовок.Параметры.Основание = "№ " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорПодряда,"НомерДоговора") + " от " + Формат(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорПодряда,"ДатаНачала"), "ДЛФ=Д");
			// rarus tenkam 22.09.2021 mantis 18115 ---
			
		КонецЕсли;
		
		//rarus tenkam 01.10.2017 mantis 9974 +++
		ОбластьЗаголовок.Параметры.КонтрагентНаименование = ТекКонтрагент;	
		//rarus tenkam 01.10.2017 mantis 9974 ---
		
		//КонецЕсли;
		// свойства
		ОбластьЗаголовок.Параметры.Получатель = Документ.Подрядчик; 
		
		//rarus tenkam 01.11.2017 mantis 9974 +++
		// rarus tenkam 08.10.2019 mantis 15111 +++
		//МассивИзделий = ПолучитьИзделияПоДатеСоставления(Документ, ДатаСоставления);	  		
		// rarus tenkam 22.09.2021 mantis 18115 +++
		//ТЗИзделий = ПолучитьИзделияПоДатеСоставления(Документ, ДатаСоставления);
		// rarus tenkam 22.09.2021 mantis 18115 ---
		
		МассивИзделий = ТЗИзделий.ВыгрузитьКолонку("Изделие");
		// rarus tenkam 08.10.2019 mantis 15111 ---
		КоличествоИзделий = МассивИзделий.Количество();
		Если КоличествоИзделий <> 0 Тогда
			ОбластьЗаголовок.Параметры.Перевозчик = ПолучитьПеревозчика(Документ, МассивИзделий[0]); 
		КонецЕсли;
		//rarus tenkam 01.11.2017 mantis 9974 ---
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// выводим заголовок таблицы
		ОбластьШапкаТаблицы.Параметры.Валюта = Документ.ВалютаДокумента;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		            		
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//ВыборкаСтрок = Документ.ПродуктыПоЗаявке;
		//rarus abrant 02.05.2017 Mantis 9439 +++
		ВыборкаСтрок = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 02.05.2017 Mantis 9439 ---
		//rarus abrant 25.04.2017 Mantis 9439 ---		
		
		КоличествоПорядковыхНомеровЗаписей = ?(КоличествоИзделий = 0, ВыборкаСтрок.Количество(), КоличествоИзделий);	//rarus tenkam 01.11.2017 mantis 9974 +
		
		//rarus tenkam 20.04.2017 mantis 9275 +++
		//Подсчитаем сумму всего
		СуммаВсего = 0;
		Для каждого СтрокаТЧ Из ВыборкаСтрок Цикл
			//rarus tenkam 01.11.2017 mantis 9974 +++
			Если КоличествоИзделий <> 0 И МассивИзделий.Найти(СтрокаТЧ.Изделие) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			//rarus tenkam 01.11.2017 mantis 9974 ---
			//rarus bonmak 13.08.2021 18063 ++
			НайденнаяСтрокаИзделия = ТЗИзделий.Найти(СтрокаТЧ.Изделие, "Изделие");
			Если НайденнаяСтрокаИзделия = Неопределено Тогда	
				Продолжить;
			КонецЕсли;
			ТекСебестоимость = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(НайденнаяСтрокаИзделия.Изделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.СебестоимостьЛогистическая, НайденнаяСтрокаИзделия.ДатаДоставки);
			ТекСебестоимость = ?(ТекСебестоимость = Неопределено, 0, ТекСебестоимость);
						
			СуммаВсего = СуммаВсего + ТекСебестоимость;
			//rarus bonmak 13.08.2021 18063 --
			//rarus bonmak 13.08.2021 18063 ++
			//Закомментировал
			//Если ЗначениеЗаполнено(СтрокаТЧ.Изделие) Тогда
			//	СуммаВсего = СуммаВсего + СтрокаТЧ.Изделие.СебестоимостьЛогистическая;
			//КонецЕсли;
			//rarus bonmak 13.08.2021 18063 --
		КонецЦикла;
		//(раскомментировала)
		ОбластьПодвал.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаВсего, Документ.ВалютаДокумента);
		//ОбластьПодвал.Параметры.ИтогНДС = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ВыборкаСтрок.Итог("СуммаНДС"), Документ.ВалютаДокумента);
		//rarus tenkam 20.04.2017 mantis 9275 ---
		
		//подвал выводим во временный
		//rarus tenkam 01.11.2017 mantis 9974 +++
		//ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = НРег(ЧислоПрописью(ВыборкаСтрок.Количество(), ,",,,,,,,,0"));	//rarus tenkam 20.04.2017 mantis 9275 + (нРег)
		ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = НРег(ЧислоПрописью(КоличествоПорядковыхНомеровЗаписей, ,",,,,,,,,0"));
		//rarus tenkam 01.11.2017 mantis 9974 ---
		
		//ОбластьПодвал.Параметры.Заполнить(УправлениеПечатьюПлатформа.ДанныеОтветственногоЛица(Документ,"Руководитель"));
		//ОбластьПодвал.Параметры.Заполнить(УправлениеПечатьюПлатформа.ДанныеОтветственногоЛица(Документ,"ГлавныйБухгалтер"));
		//ОбластьПодвал.Параметры.Заполнить(УправлениеПечатьюПлатформа.ДанныеОтветственногоЛица(Документ,"Отпустил"));
		//Получил = УправлениеПечатьюПлатформа.ДанныеОтветственногоЛица(Документ,"ПолучилКонтрагент");
		//Получил.Вставить("ПолучилПредставление", Получил.ПолучилКонтрагентПредставление);
		//ОбластьПодвал.Параметры.Заполнить(Получил);
		ТабДокументПодвал = Новый ТабличныйДокумент;
		ТабДокументПодвал.Вывести(ОбластьПодвал);
		
		//сразу два, т.к. выводим на второй странице только
		НомерСтраницы = 2;
		НомерСтраницыПред = НомерСтраницы;
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы; 
		
		//rarus tenkam 20.04.2017 mantis 9275 +++
		СуммаВсего = 0;
		//rarus tenkam 20.04.2017 mantis 9275 ---
		
		// Выводим многострочную часть документа
		Для каждого СтрокаТЧ Из ВыборкаСтрок Цикл
			
			//rarus tenkam 01.11.2017 mantis 9974 +++
			Если КоличествоИзделий <> 0 И МассивИзделий.Найти(СтрокаТЧ.Изделие) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			//rarus tenkam 01.11.2017 mantis 9974 ---
			//rarus bonmak 13.08.2021 18063 ++
			НайденнаяСтрокаИзделия = ТЗИзделий.Найти(СтрокаТЧ.Изделие, "Изделие");
			Если НайденнаяСтрокаИзделия = Неопределено Тогда	
				Продолжить;
			КонецЕсли;
			//rarus bonmak 13.08.2021 18063 --
			//СтавкаНДС = СтрокаТЧ.ПрочийАктив.Номенклатура.СтавкаНДС.Ставка;
			ОбластьСтрока.Параметры.Заполнить(СтрокаТЧ);
			//rarus bonmak 13.08.2021 18063 ++
			ТекСебестоимость = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(НайденнаяСтрокаИзделия.Изделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.СебестоимостьЛогистическая, НайденнаяСтрокаИзделия.ДатаДоставки);
			ТекСебестоимость = ?(ТекСебестоимость = Неопределено, 0, ТекСебестоимость);			
			//rarus bonmak 13.08.2021 18063 --
			//rarus bonmak 13.08.2021 18063 ++
			//было фТоварНаименованиеНовое = Scan_Печать.ПолучитьНаименованиеСправочника(СтрокаТЧ.Изделие) + " " + СтрокаТЧ.Изделие.МаркаПродукта + " " + СтрокаТЧ.Изделие.МодельПродукта; //rarus bonmak 18.03.2021 17332  
			фТоварНаименованиеНовое = "";
			
			//Формируем строку наименования
			
			//Получаем номер продукта
			фНомерПродукта = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(НайденнаяСтрокаИзделия.Изделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.НомерИзделия, НайденнаяСтрокаИзделия.ДатаДоставки);
			фНомерПродукта = ?(фНомерПродукта = Неопределено, "", фНомерПродукта);			
			
			// rarus tenkam 18.08.2021 mantis 18063 +++ 
			// Если не нашли № продукта,то берем из реквизита, т.к. история по № продукта в регистре пишется не с начала работы
			Если ПустаяСтрока(фНомерПродукта) Тогда
				фНомерПродукта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НайденнаяСтрокаИзделия.Изделие,"НомерИзделия");
			КонецЕсли;
			// rarus tenkam 18.08.2021 mantis 18063 ---
			
			//Получаем логистический тип продукта
			фТипПродуктаЛогистика = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(НайденнаяСтрокаИзделия.Изделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.ТипПродуктаЛогистический, НайденнаяСтрокаИзделия.ДатаДоставки);
			фТипПродуктаЛогистика = ?(фТипПродуктаЛогистика = Неопределено, "", " " + фТипПродуктаЛогистика);
			Если ПустаяСтрока(фНомерПродукта) ИЛИ ПустаяСтрока(фТипПродуктаЛогистика) Тогда
				  фТоварНаименованиеНовое = Scan_Печать.ПолучитьНаименованиеСправочника(СтрокаТЧ.Изделие);
			Иначе
				  фТоварНаименованиеНовое = "" + фНомерПродукта + фТипПродуктаЛогистика; 
			КонецЕсли;
			
			//Получаем марку продукта
			фМаркаПродукта = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(НайденнаяСтрокаИзделия.Изделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.МаркаПродукта, НайденнаяСтрокаИзделия.ДатаДоставки);
			фМаркаПродукта = ?(фМаркаПродукта = Неопределено, "", " " + фМаркаПродукта);			
			//Получаем модель продукта
			фМодельПродукта = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(НайденнаяСтрокаИзделия.Изделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.МодельПродукта, НайденнаяСтрокаИзделия.ДатаДоставки);
			фМодельПродукта = ?(фМодельПродукта = Неопределено, "", " " + фМодельПродукта);			
			
			фТоварНаименованиеНовое = фТоварНаименованиеНовое + фМаркаПродукта + фМодельПродукта;
			//rarus bonmak 13.08.2021 18063 --
			ОбластьСтрока.Параметры.ТоварНаименование            = фТоварНаименованиеНовое;//rarus bonmak 18.03.2021 17332 Scan_Печать.ПолучитьНаименованиеСправочника(СтрокаТЧ.Изделие); //rarus bonmak 28.08.2019 14430 было СтрокаТЧ.Продукт
			
			//rarus tenkam 20.04.2017 mantis 9275 +++
			Если ЗначениеЗаполнено(СтрокаТЧ.Изделие) Тогда
				//rarus bonmak 13.08.2021 18063 ++
				//было ЛогистическаяСебестоимость = СтрокаТЧ.Изделие.СебестоимостьЛогистическая;
				ЛогистическаяСебестоимость = ТекСебестоимость;
				//rarus bonmak 13.08.2021 18063 --
				ОбластьСтрока.Параметры.Цена 						 = ЛогистическаяСебестоимость;
				ОбластьСтрока.Параметры.СуммаБезНДС 				 = ЛогистическаяСебестоимость;
				СуммаВсего = СуммаВсего + ЛогистическаяСебестоимость;
			КонецЕсли;
			//rarus tenkam 20.04.2017 mantis 9275 ---
			//ОбластьСтрока.Параметры.СуммаСНДС 					 = Формат(СтрокаТЧ.Сумма,ФорматВыводаСуммы);
			//ОбластьСтрока.Параметры.СуммаНДС					 = Формат(СтрокаТЧ.СуммаНДС,ФорматВыводаСуммы);
			
			//доп. области
			мсвДопОбластиПодвала = Неопределено;
			Если ВыборкаСтрок.Индекс(СтрокаТЧ) = ВыборкаСтрок.Количество()-1 Тогда
				мсвДопОбластиПодвала = Новый Массив;
				мсвДопОбластиПодвала.Добавить(ТабДокументПодвал);
			КонецЕсли;
			
			//выводим строку, делая проверку попадания на лист
			НомерСтраницы = Scan_Печать.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока, ОбластьШапкаТаблицы, ОбластьРазделителя, 
			НомерСтраницы, , Документ, мсвДопОбластиПодвала);																				
			//инициализация итогов по странице
			Если НомерСтраницы <> НомерСтраницыПред Тогда
				НомерСтраницыПред = НомерСтраницы;
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы; 
			КонецЕсли;                                                      
		КонецЦикла;
		
		// выводим подвал
		ТабличныйДокумент.Вывести(ТабДокументПодвал); 
		
		// Зададим параметры макета
		ТабличныйДокумент.ПолеСверху = 0;
		ТабличныйДокумент.ПолеСлева  = 0;
		ТабличныйДокумент.ПолеСнизу  = 0;
		ТабличныйДокумент.ПолеСправа = 0;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

//rarus sergei 06.12.2016 mantis 7164 ++
Функция ПечатьМХ3(МассивОбъектов,ОбъектыПечати,ИмяМакета = "МХ3",ПараметрыПечати = Неопределено) Экспорт
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	
	//rarus tenkam 20.02.2017 mantis 7164 +++
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		// Зададим параметры макета
		ТабличныйДокумент.ПолеСверху = 0; ТабличныйДокумент.ПолеСлева  = 0;
		ТабличныйДокумент.ПолеСнизу  = 0; ТабличныйДокумент.ПолеСправа = 0;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		Макет = ПолучитьМакет("МХ3");
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка		= Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока		= Макет.ПолучитьОбласть("Строка");
		ОбластьИтого		= Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал	    = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПредставления = Новый Структура("Наименование,АдресЮридический,ТелефонРабочий,Факс","","", "тел.: ", "факс: ");

		Если ТипЗнч(Документ.Подрядчик) = Тип("СправочникСсылка.Scan_Контрагенты") Тогда
	        КонтрагентХранитель = Документ.Подрядчик;
		Иначе
			//rarus bonmak 15.04.2020 14456 КонтрагентХранитель = Документ.Подрядчик.Контрагент;
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.ОрганизацияХранитель = Scan_Печать.ПолучитьПредставлениеСправочника(КонтрагентХранитель, СтруктураПредставления);
		//rarus abrant 11.04.2017 7164 +++
		//ОбластьЗаголовок.Параметры.СтруктурноеПодразделение = Документ.МестоПолучения.СтанцияДилера;
		//rarus abrant 11.04.2017 7164 ---
		ОбластьЗаголовок.Параметры.СтруктурноеПодразделение = Документ.МестоПолучения.КраткоеНаименование;//rarus vikhle 26.01.2021 mt 17138
		ТекОрганизация = ПользователиКлиентСервер.ТекущийПользователь().Организация;
		ОбластьЗаголовок.Параметры.Организация = Scan_Печать.ПолучитьПредставлениеСправочника(ТекОрганизация, СтруктураПредставления);
		
		ОбластьЗаголовок.Параметры.ОКПОХранителя = КонтрагентХранитель.ОКПО;
		ОбластьЗаголовок.Параметры.ОКПООрганизации = ТекОрганизация.ОКПО;
		
		ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(КонтрагентХранитель);
		ОбластьЗаголовок.Параметры.НомерДоговора = ДоговорХранения.НомерДоговора;
		ОбластьЗаголовок.Параметры.ДатаДоговора = ДоговорХранения.ДатаНачала;
		
		ОбластьЗаголовок.Параметры.НомерДокумента = Документ.Номер + "-" + Формат(Документ.ДатаИВремяПоручения, "ДФ = ддММгг");
		ОбластьЗаголовок.Параметры.ДатаДокумента = Формат(Документ.ДатаИВремяПоручения, "ДЛФ=Д");
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		ТабличныйДокумент.Вывести(ОбластьШапка);  
		
		НомерСтроки = 1;
		СтоимостьВсего = 0;
		
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---
		
		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 26.04.2017 Mantis 9439 +++
		НомерСтроки = 1;
		//rarus abrant 26.04.2017 Mantis 9439 ---
		//Для Каждого СтрокаПродуктов Из Документ.ПродуктыПоЗаявке Цикл
		Для Каждого СтрокаПродуктов Из ВыборкаТабличнойЧасти Цикл
			//rarus abrant 25.04.2017 Mantis 9439 ---
			ОбластьСтрока.Параметры.НомерСтроки  = НомерСтроки;
			ТекущееИзделие = СтрокаПродуктов.Изделие;
			
			ТекстНомера = ?(ТекущееИзделие.ТипПродукта.ВидПродукта.ГруппаПродукта = Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства," № шасси ", " № двигателя ");
			Если ЗначениеЗаполнено(ТекущееИзделие.МодельПТС) Тогда
				ОбластьСтрока.Параметры.Номенклатура = Строка(ТекущееИзделие.ТипПродуктаЛогистический) + " " 
				+ Строка(ТекущееИзделие.МодельПТС) + " на шасси " 
				+ Строка(ТекущееИзделие.МаркаПродукта) + " " 
				+ Строка(ТекущееИзделие.МодельПродукта) + ТекстНомера 
				+ Строка(ТекущееИзделие.НомерИзделия); 
			Иначе 
				ОбластьСтрока.Параметры.Номенклатура = Строка(ТекущееИзделие.ТипПродуктаЛогистический) + " " 
				+ Строка(ТекущееИзделие.МаркаПродукта) + " " 
				+ Строка(ТекущееИзделие.МодельПродукта) + ТекстНомера 
				+ Строка(ТекущееИзделие.НомерИзделия);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Характеристика 	 = ТекущееИзделие.НомерИзделия;
			
			// rarus tenkam 08.10.2019 mantis 15111 +++
			// Получим дату доставки в место получения
			ДатаДоставкиФакт = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьДатуПрихода(ТекущееИзделие, Документ.МестоПолучения, Документ.ДатаИВремяПоручения);
						
			ТекСебестоимость = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(ТекущееИзделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.СебестоимостьЛогистическая, ДатаДоставкиФакт);
			ТекСебестоимость = ?(ТекСебестоимость = Неопределено, 0, ТекСебестоимость);
			
			ОбластьСтрока.Параметры.Цена =  ТекСебестоимость;
			ОбластьСтрока.Параметры.Стоимость = ТекСебестоимость;
			
			СтоимостьВсего = СтоимостьВсего + ТекСебестоимость;
			
			////rarus tenkam 10.03.2017 mantis 6897 +++
			////ОбластьСтрока.Параметры.Цена =  СтрокаПродуктов.Продукт.СебестоимостьЛогистическая;
			////ОбластьСтрока.Параметры.Стоимость =  СтрокаПродуктов.Продукт.СебестоимостьЛогистическая;
			////
			////СтоимостьВсего = СтоимостьВсего + СтрокаПродуктов.Продукт.СебестоимостьЛогистическая;
			//
			//ОбластьСтрока.Параметры.Цена =  ТекущееИзделие.СебестоимостьЛогистическая;
			//ОбластьСтрока.Параметры.Стоимость =  ТекущееИзделие.СебестоимостьЛогистическая;
			//
			//СтоимостьВсего = СтоимостьВсего + ТекущееИзделие.СебестоимостьЛогистическая;
			////rarus tenkam 10.03.2017 mantis 6897 ---
			// rarus tenkam 08.10.2019 mantis 15111 ---
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		ОбластьИтого.Параметры.КоличествоВсего = НомерСтроки - 1;
		ОбластьИтого.Параметры.СтоимостьВсего = СтоимостьВсего;	
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	//rarus tenkam 20.02.2017 mantis 7164 ---
КонецФункции

Функция ПечатьМХ1(МассивОбъектов,ОбъектыПечати,ИмяМакета = "МХ1",ПараметрыПечати = Неопределено) Экспорт 
	
	Scan_СборСтатистики.Scan_Печать(ИмяМакета); // Rarus tenkam 11.04.2022 mantis 18433 +
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
				
		Если ПараметрыПечати.Свойство("ДатаСоставления") Тогда
			ДатаСоставления = ПараметрыПечати.ДатаСоставления;
		Иначе
			ДатаСоставления = Документ.ДатаИВремяПоручения;
		КонецЕсли;

		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		// Зададим параметры макета
		ТабличныйДокумент.ПолеСверху = 0; ТабличныйДокумент.ПолеСлева  = 0;
		ТабличныйДокумент.ПолеСнизу  = 0; ТабличныйДокумент.ПолеСправа = 0;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		Макет = ПолучитьМакет("МХ1");
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка		= Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока		= Макет.ПолучитьОбласть("Строка");
		ОбластьИтого		= Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал	    = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПредставления = Новый Структура("Наименование,АдресЮридический,АдресЭп,ТелефонРабочий,Факс","","","эл.почта: ", "тел.: ", "факс: ");

		Если Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу ИЛИ
			Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу Тогда
		  	ТекХранитель = Документ.Хранитель;
		ИначеЕсли Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПостановкаНаХранение ИЛИ
			Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаСПостановкойНаХранение Тогда
		    ТекХранитель = Документ.Подрядчик;
		ИначеЕсли Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение Тогда
			ТекХранитель = Документ.Грузополучатель;
		КонецЕсли;
		Если ТипЗнч(ТекХранитель) = Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			КонтрагентХранитель = ТекХранитель;
		Иначе 
			//rarus bonmak 15.04.2020 14456 КонтрагентХранитель = ТекХранитель.Контрагент;
		КонецЕсли;
		//rarus abrant 21.06.2017 mantis 10115 +++
		Если Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаНаХранениеТретьемуЛицу ИЛИ
			Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаНаХранениеТретьемуЛицу ИЛИ
			Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПостановкаНаХранение ИЛИ
			Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаСПостановкойНаХранение ИЛИ 
			//rarus tenkam 07.07.2017 mantis 10115 +++
			Документ.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение Тогда
			Если КонтрагентХранитель.Кузовостроитель Тогда
				ОбластьЗаголовок.Параметры.СканияСервис = КонтрагентХранитель.Наименование;
			Иначе
				// rarus tenkam 09.08.2017 mantis 10115 +++
				//ОбластьЗаголовок.Параметры.СканияСервис = Документ.МестоДоставки.СтанцияДилера;
				ОбластьЗаголовок.Параметры.СканияСервис = Документ.МестоДоставки.АдресСкладаФактический;
				// rarus tenkam 09.08.2017 mantis 10115 ---
			КонецЕсли;
			//	ОбластьЗаголовок.Параметры.СканияСервис = КонтрагентХранитель;
			//Иначе
			//	ОбластьЗаголовок.Параметры.СканияСервис = "СканияСервис";
			//rarus tenkam 07.07.2017 mantis 10115 ---
		КонецЕсли;
		//rarus abrant 21.06.2017 mantis 10115 ---
		ОбластьЗаголовок.Параметры.ОрганизацияХранитель = Scan_Печать.ПолучитьПредставлениеСправочника(КонтрагентХранитель, СтруктураПредставления);
		//rarus abrant 11.04.2017 7164 +++
		//ОбластьЗаголовок.Параметры.СтруктурноеПодразделение = Документ.МестоДоставки.СтанцияДилера;
		//rarus abrant 11.04.2017 7164 ---
		ОбластьЗаголовок.Параметры.СтруктурноеПодразделение = Документ.МестоДоставки.КраткоеНаименование;//rarus vikhle 26.01.2021 mt 17138
		
		ТекОрганизация = ПользователиКлиентСервер.ТекущийПользователь().Организация;
		ОбластьЗаголовок.Параметры.Организация = Scan_Печать.ПолучитьПредставлениеСправочника(ТекОрганизация, СтруктураПредставления);
		
		ОбластьЗаголовок.Параметры.ОКПОХранителя = КонтрагентХранитель.ОКПО;
		ОбластьЗаголовок.Параметры.ОКПООрганизации = ТекОрганизация.ОКПО;
		
		ДоговорХранения = Справочники.Scan_ДоговорыВзаиморасчетов.ПолучитьДоговорХранения(КонтрагентХранитель);
		ОбластьЗаголовок.Параметры.НомерДоговора = ДоговорХранения.НомерДоговора;
		ОбластьЗаголовок.Параметры.ДатаДоговора = ДоговорХранения.ДатаНачала;
		
		ОбластьЗаголовок.Параметры.НомерДокумента = Документ.Номер + "-" + Формат(ДатаСоставления, "ДФ = ддММгг");
		ОбластьЗаголовок.Параметры.ДатаДокумента = Формат(ДатаСоставления, "ДЛФ=Д");
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		ТабличныйДокумент.Вывести(ОбластьШапка);  
		
		НомерСтроки = 1;
		СтоимостьВсего = 0; 
		
		// rarus tenkam 08.10.2019 mantis 15111 +++
		ТЗИзделий = ПолучитьИзделияПоДатеСоставления(Документ, ДатаСоставления);
		//МассивИзделий = ПолучитьИзделияПоДатеСоставления(Документ, ДатаСоставления);
		// rarus tenkam 08.10.2019 mantis 15111 ---
		
		//rarus abrant 25.04.2017 Mantis 9439 +++
		//rarus abrant 27.04.2017 Mantis 9439 +++
		ВыборкаТабличнойЧасти = СортироватьТЧПоНомеруИзделия(Документ.ПродуктыПоЗаявке);
		//rarus abrant 27.04.2017 Mantis 9439 ---
		
		НомерСтроки = 1;
		Для каждого Строка из ВыборкаТабличнойЧасти Цикл
			Строка.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		//rarus abrant 26.04.2017 Mantis 9439 +++
		НомерСтроки = 1;
		//rarus abrant 26.04.2017 Mantis 9439 ---
		//Для Каждого СтрокаПродуктов Из Документ.ПродуктыПоЗаявке Цикл
		Для Каждого СтрокаПродуктов Из ВыборкаТабличнойЧасти Цикл
			//rarus abrant 25.04.2017 Mantis 9439 ---
			ОбластьСтрока.Параметры.НомерСтроки  = НомерСтроки;
			ТекущееИзделие = СтрокаПродуктов.Изделие;
			// rarus tenkam 08.10.2019 mantis 15111 +++
			//Если МассивИзделий.Найти(ТекущееИзделие) = Неопределено Тогда
			НайденнаяСтрокаИзделия = ТЗИзделий.Найти(ТекущееИзделие, "Изделие");
			Если НайденнаяСтрокаИзделия = Неопределено Тогда
			// rarus tenkam 08.10.2019 mantis 15111 ---
				Продолжить;
			КонецЕсли;
			ТекстНомера = ?(ТекущееИзделие.ТипПродукта.ВидПродукта.ГруппаПродукта = Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства," № шасси ", " № двигателя ");
			Если ЗначениеЗаполнено(ТекущееИзделие.МодельПТС) Тогда
				ОбластьСтрока.Параметры.Номенклатура = Строка(ТекущееИзделие.ТипПродуктаЛогистический) + " " 
				+ Строка(ТекущееИзделие.МодельПТС) + " на шасси " 
				+ Строка(ТекущееИзделие.МаркаПродукта) + " " 
				+ Строка(ТекущееИзделие.МодельПродукта) + ТекстНомера 
				+ Строка(ТекущееИзделие.НомерИзделия); 
			Иначе 
				ОбластьСтрока.Параметры.Номенклатура = Строка(ТекущееИзделие.ТипПродуктаЛогистический) + " " 
				+ Строка(ТекущееИзделие.МаркаПродукта) + " " 
				+ Строка(ТекущееИзделие.МодельПродукта) + ТекстНомера 
				+ Строка(ТекущееИзделие.НомерИзделия);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Характеристика 	 = ТекущееИзделие.НомерИзделия;
			//rarus tenkam 10.03.2017 mantis 6897 +++
			//ОбластьСтрока.Параметры.Цена =  СтрокаПродуктов.Продукт.СебестоимостьЛогистическая;
			//ОбластьСтрока.Параметры.Стоимость =  СтрокаПродуктов.Продукт.СебестоимостьЛогистическая;
			//
			//СтоимостьВсего = СтоимостьВсего + СтрокаПродуктов.Продукт.СебестоимостьЛогистическая;
			
			// rarus tenkam 08.10.2019 mantis 15111 +++
			
			//ОбластьСтрока.Параметры.Цена =  ТекущееИзделие.СебестоимостьЛогистическая;
			//ОбластьСтрока.Параметры.Стоимость =  ТекущееИзделие.СебестоимостьЛогистическая;
			//
			//СтоимостьВсего = СтоимостьВсего + ТекущееИзделие.СебестоимостьЛогистическая;
			////rarus tenkam 10.03.2017 mantis 6897 ---
					
			ТекСебестоимость = Справочники.Scan_Изделия.ЧтениеЗначенияРегистраСведения(НайденнаяСтрокаИзделия.Изделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.СебестоимостьЛогистическая, НайденнаяСтрокаИзделия.ДатаДоставки);
			//Rarus bonmak 16507 07.12.2021 ++
			Если ТекСебестоимость = Неопределено Тогда
				СтруктураОтбора   = Новый Структура("Изделие, ВидЗначения", НайденнаяСтрокаИзделия.Изделие, Перечисления.Scan_ДополнительнаяИнформацияПоИзделиям.СебестоимостьЛогистическая);
				СтруктураСведений = РегистрыСведений.Scan_ХарактеристикиИзделия.ПолучитьПервое(,СтруктураОтбора);
				ТекСебестоимость  = СтруктураСведений.Значение;
			КонецЕсли;
			//Rarus bonmak 16507 07.12.2021 --
			
			ТекСебестоимость = ?(ТекСебестоимость = Неопределено, 0, ТекСебестоимость);
			
			ОбластьСтрока.Параметры.Цена =  ТекСебестоимость;
			ОбластьСтрока.Параметры.Стоимость =  ТекСебестоимость;
			
			СтоимостьВсего = СтоимостьВсего + ТекСебестоимость;
			// rarus tenkam 08.10.2019 mantis 15111 ---
						
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		ОбластьИтого.Параметры.КоличествоВсего = НомерСтроки - 1;
		ОбластьИтого.Параметры.СтоимостьВсего = СтоимостьВсего;	
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
КонецФункции
//rarus sergei 06.12.2016 mantis 7164 --

//rarus sergei 29.09.2016 mantis 7162 ++
Функция ПолучитьМассивУникальныхКЛ(ТЗ) Экспорт
	МассивКЛ = ТЗ.ВыгрузитьКолонку("КонтактноеЛицо");
	МассивУникальныхКЛ = Новый Массив;
	МассивУникальныхКЛ.Добавить(МассивКЛ[0]);
	Для каждого элемент Из МассивКЛ Цикл
		Индекс = МассивУникальныхКЛ.Найти(элемент);	
		Если Индекс = Неопределено Тогда
			МассивУникальныхКЛ.Добавить(Элемент);	
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат МассивУникальныхКЛ;
КонецФункции

Функция ЗаполнитьКИ(КЛ, ТЗ) Экспорт
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("КонтактноеЛицо",КЛ);
	МассивКонтактнойИнформации = ТЗ.НайтиСтроки(ПараметрыОтбора);
	СтрокаКИ = "";
	Для каждого элемент Из МассивКонтактнойИнформации Цикл
		СтрокаКИ =СтрокаКИ + элемент.ВидКонтактнойИнформации.Наименование+"   "+элемент.Представление+символы.ПС;	
		
		
	КонецЦикла; 
	Возврат СтрокаКИ;
КонецФункции

Функция ЗаполнитьКонтактнуюинформацию(МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_КонтактныеЛицаКонтактнаяИнформация.Ссылка КАК КонтактноеЛицо,
	|	Scan_КонтактныеЛицаКонтактнаяИнформация.Вид КАК ВидКонтактнойИнформации,
	|	Scan_КонтактныеЛицаКонтактнаяИнформация.Представление КАК Представление
	|ИЗ
	|	Справочник.Scan_КонтактныеЛица.КонтактнаяИнформация КАК Scan_КонтактныеЛицаКонтактнаяИнформация
	|ГДЕ
	|	Scan_КонтактныеЛицаКонтактнаяИнформация.Ссылка.Ссылка В (&МассивСсылок)
	|	И (Scan_КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|			ИЛИ Scan_КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))";
	
	Запрос.УстановитьПараметр("МассивСсылок",МассивСсылок);
	ТЗ=Запрос.Выполнить().Выгрузить();
	Возврат ТЗ;
КонецФункции
//rarus sergei 29.09.2016 mantis 7162 --

//rarus BProg_Dekin 11.11.2019 0014452 ++ "ЕстьАдресДоставки" удален.
//rarus tenkam 17.01.2017 mantis 7185 ++
//Процедура УстановитьПризнакЕстьАдресДоставки(ЗаявкаНаДействиеСсылка) Экспорт
//	Если (ЗаявкаНаДействиеСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка ИЛИ
//		//rarus tenkam 08.02.2017 mantis 8331 +++
//		ЗаявкаНаДействиеСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение ИЛИ  
//		ЗаявкаНаДействиеСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство) И   
//		//rarus tenkam 08.02.2017 mantis 8331 ---
//		ЗаявкаНаДействиеСсылка.ПровереноАП И НЕ ЗаявкаНаДействиеСсылка.ПометкаУдаления Тогда
//		Для Каждого ТекПродукт Из ЗаявкаНаДействиеСсылка.ПродуктыПоЗаявке Цикл
//			// rarus tenkam 13.08.2019 mantis 14427 +++
//			//ТекЗаказ = ТекПродукт.Продукт.ЗаказНаЗавод; 
//			ТекЗаказ = ТекПродукт.Изделие.ЗаказНаЗавод; 
//			// rarus tenkam 13.08.2019 mantis 14427 ---
//			Если ЗначениеЗаполнено(ТекЗаказ) Тогда
//				Если НЕ ТекЗаказ.ЕстьАдресДоставки Тогда
//					ТекЗаказОбъект = ТекЗаказ.ПолучитьОбъект();
//					ТекЗаказОбъект.ЕстьАдресДоставки = Истина;
//					ТекЗаказОбъект.Записать();
//				КонецЕсли;
//			КонецЕсли;
//		КонецЦикла;
//	КонецЕсли;
//КонецПроцедуры
//rarus tenkam 17.01.2017 mantis 7185 --
//rarus BProg_Dekin 11.11.2019 0014452 --

//rarus tenkam 21.02.2017 mantis 7164 +++
Функция ПолучитьИзделияПоДатеСоставления(ДокументСсылка, ДатаСоставления)
	Запрос = Новый Запрос;
	Если ДокументСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение ИЛИ 
		ДокументСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство Тогда	//rarus tenkam 01.11.2017 mantis 9974 +
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт КАК ДатаДоставки,
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.Изделие
		|ИЗ
		|	Документ.Scan_ЗаявкаПеревозчику.СоставЗаявки КАК Scan_ЗаявкаПеревозчикуСоставЗаявки
		|ГДЕ
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка В
		|			(ВЫБРАТЬ
		|				Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка КАК ЗаявкаПеревозчику
		|			ИЗ
		|				Документ.Scan_ЗаявкаПеревозчику.ДокументыОснования КАК Scan_ЗаявкаПеревозчикуДокументыОснования
		|			ГДЕ
		|				Scan_ЗаявкаПеревозчикуДокументыОснования.Документ = &ЗаявкаСсылка)
		|	И Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт <> &ПустаяДата
		|	И НАЧАЛОПЕРИОДА(Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт, ДЕНЬ) = &ДатаСоставления
		|	И Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка.Сторнирован = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт,
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.Изделие
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДоставки";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки КАК ДатаДоставки,
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.Изделие
		|ИЗ
		|	Документ.Scan_ПеремещениеИзделий.ИзделияДляПеремещения КАК Scan_ПеремещениеИзделийИзделияДляПеремещения
		|ГДЕ
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка.ДокументОснование = &ЗаявкаСсылка
		|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки <> &ПустаяДата
		|	И НАЧАЛОПЕРИОДА(Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки, ДЕНЬ) = &ДатаСоставления
		|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки,
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.Изделие
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДоставки";
	КонецЕсли;
	Запрос.УстановитьПараметр("ЗаявкаСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ПустаяДата", Дата('00010101'));
	Запрос.УстановитьПараметр("ДатаСоставления", ДатаСоставления);
	
	ТабРезультат = Запрос.Выполнить().Выгрузить();
	
	// rarus tenkam 08.10.2019 mantis 15111 +++
	//Возврат ТабРезультат.ВыгрузитьКолонку("Изделие");
	Возврат ТабРезультат;
	// rarus tenkam 08.10.2019 mantis 15111 ---
КонецФункции
//rarus tenkam 21.02.2017 mantis 7164 ---

//Процедура ОтправитьПФЗаявки(ДокументСсылка, СообщениеОтправки = "", ВсеОк = Ложь) Экспорт //rarus BProg_Gladkov 02.05.2020 0015962 +- Перемещена в Scan_ОтправкаПисемПоЭлектроннойПочте
//Функция ПолучитьИмяПФПоХО(ХозОперация) Экспорт 											//rarus BProg_Gladkov 02.05.2020 0015962 +- Перемещена в Scan_ОтправкаПисемПоЭлектроннойПочте
//Функция ПечатьПоХО(ХозОперация, МассивДокументов, ДокументСсылка) Экспорт 				//rarus BProg_Gladkov 02.05.2020 0015962 +- Удален дубликат функции.

//23.08 +++
Функция ПолучитьТаблицуПеревозчиков(ДокументСсылка) Экспорт //rarus tenkam 26.04.2017 mantis 9444 +-
	ТаблицаПеревозчиков = Новый ТаблицаЗначений;
	ТаблицаПеревозчиков.Колонки.Добавить("Перевозчик");
	ТаблицаПеревозчиков.Колонки.Добавить("Флаг");
	ТаблицаПеревозчиков.Колонки.Добавить("ЗаявкаНаДействие");
	ТаблицаПеревозчиков.Колонки.Добавить("ЗаявкаПеревозчику");
	ТаблицаПеревозчиков.Колонки.Добавить("ДоговорСПеревозчиком");
	
	ВыборкаКорректировок = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.ВыбратьПоРегистратору(ДокументСсылка);
	Если ВыборкаКорректировок.Следующий() Тогда
		Если ВыборкаКорректировок.Перевозчик <> Справочники.Scan_Контрагенты.ПустаяСсылка() Тогда
			НоваяСтрока = ТаблицаПеревозчиков.Добавить();
			НоваяСтрока.Перевозчик = ВыборкаКорректировок.Перевозчик;
			НоваяСтрока.Флаг = Истина;
			НоваяСтрока.ЗаявкаНаДействие = ДокументСсылка;
			НоваяСтрока.ЗаявкаПеревозчику = ВыборкаКорректировок.ЗаявкаПеревозчику;
			НоваяСтрока.ДоговорСПеревозчиком = ВыборкаКорректировок.ЗаявкаПеревозчику.ДоговорСПеревозчиком;
		КонецЕсли;
	// rarus tenkam 19.11.2018 mantis 13749 +++
	Иначе
		Если ДокументСсылка.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Аннулирована Тогда
			// получим данные перевозчика
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Документ КАК ЗаявкаНаДействие,
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка КАК ЗаявкаПеревозчику,
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка.Перевозчик КАК Перевозчик,
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка.ДоговорСПеревозчиком КАК ДоговорСПеревозчиком
			|ИЗ
			|	Документ.Scan_ЗаявкаПеревозчику.ДокументыОснования КАК Scan_ЗаявкаПеревозчикуДокументыОснования
			|// rarus tenkam 05.12.2018 mantis 13824 +++
			|ГДЕ
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Документ = &ДокументСсылка
			|// rarus tenkam 05.12.2018 mantis 13824 ---
			|
			|СГРУППИРОВАТЬ ПО
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Документ,
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка,
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка.Перевозчик,
			|	Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка.ДоговорСПеревозчиком";
			Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);		// rarus tenkam 05.12.2018 mantis 13824 +
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				НоваяСтрока = ТаблицаПеревозчиков.Добавить();
				НоваяСтрока.Перевозчик = ВыборкаДетальныеЗаписи.Перевозчик;
				НоваяСтрока.Флаг = Истина;
				НоваяСтрока.ЗаявкаНаДействие = ВыборкаДетальныеЗаписи.ЗаявкаНаДействие;
				НоваяСтрока.ЗаявкаПеревозчику = ВыборкаДетальныеЗаписи.ЗаявкаПеревозчику;
				НоваяСтрока.ДоговорСПеревозчиком = ВыборкаДетальныеЗаписи.ДоговорСПеревозчиком;
			КонецЦикла;
		КонецЕсли;
	// rarus tenkam	19.11.2018 mantis 13749 ---
	КонецЕсли;
	Возврат ТаблицаПеревозчиков;
КонецФункции

//rarus abrant 25.04.2017 Mantis 9439 +++
Функция СортироватьТЧПоНомеруИзделия (ТабличнаяЧасть)
	ВыборкаТабличнойЧасти = ТабличнаяЧасть.выгрузить();	
	ВыборкаТабличнойЧасти.Колонки.Добавить("НомерИзделия", Новый ОписаниеТипов("Строка"));
	Для итератор = 0 По ВыборкаТабличнойЧасти.Количество() - 1 Цикл
		ВыборкаТабличнойЧасти[итератор].НомерИзделия = ТабличнаяЧасть[итератор].Изделие.НомерИзделия;			
	КонецЦикла;		
	ВыборкаТабличнойЧасти.Сортировать("НомерИзделия");
	Возврат ВыборкаТабличнойЧасти;
КонецФункции
//rarus abrant 25.04.2017 Mantis 9439 ---

//rarus tenkam 01.11.2017 mantis 9974 +++
Функция ПолучитьПеревозчика(ЗаявкаНаДействие, Изделие) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_КорректировкаИнформацииПоЗаявкам.Перевозчик КАК Перевозчик
		|ИЗ
		|	РегистрСведений.Scan_КорректировкаИнформацииПоЗаявкам КАК Scan_КорректировкаИнформацииПоЗаявкам
		|ГДЕ
		|	Scan_КорректировкаИнформацииПоЗаявкам.Изделие = &Изделие
		|	И Scan_КорректировкаИнформацииПоЗаявкам.ЗаявкаНаДействие = &ЗаявкаНаДействие";
	
	Запрос.УстановитьПараметр("ЗаявкаНаДействие", ЗаявкаНаДействие);
	Запрос.УстановитьПараметр("Изделие", Изделие);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Перевозчик;
	КонецЕсли;
	Возврат Справочники.Scan_Контрагенты.ПустаяСсылка();
КонецФункции
//rarus tenkam 01.11.2017 mantis 9974 ---

Функция ПолучитьИзделияПоДатеСоставленияИДоговоруПодряда(ДокументСсылка, ДатаСоставления, ДоговорПодряда) // rarus tenkam 21.09.2021 mantis 18115 +++
	Запрос = Новый Запрос;
	Если ДокументСсылка.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт КАК ДатаДоставки,
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.Изделие КАК Изделие
		|ПОМЕСТИТЬ ПродуктыНаДатуСоставления
		|ИЗ
		|	Документ.Scan_ЗаявкаПеревозчику.СоставЗаявки КАК Scan_ЗаявкаПеревозчикуСоставЗаявки
		|ГДЕ
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка В
		|			(ВЫБРАТЬ
		|				Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка КАК ЗаявкаПеревозчику
		|			ИЗ
		|				Документ.Scan_ЗаявкаПеревозчику.ДокументыОснования КАК Scan_ЗаявкаПеревозчикуДокументыОснования
		|			ГДЕ
		|				Scan_ЗаявкаПеревозчикуДокументыОснования.Документ = &ЗаявкаСсылка)
		|	И Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт <> ДАТАВРЕМЯ(1, 1, 1)
		|	И НАЧАЛОПЕРИОДА(Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт, ДЕНЬ) = &ДатаСоставления
		|	И Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И Scan_ЗаявкаПеревозчикуСоставЗаявки.Ссылка.Сторнирован = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.ДатаДоставкиФакт,
		|	Scan_ЗаявкаПеревозчикуСоставЗаявки.Изделие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродуктыНаДатуСоставления.ДатаДоставки КАК ДатаДоставки,
		|	ПродуктыНаДатуСоставления.Изделие КАК Изделие,
		|	ЕСТЬNULL(Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку, ЗНАЧЕНИЕ(Документ.Scan_ЗаказНаЗакупку.ПустаяСсылка)) КАК ЗаказНаЗакупку
		|ПОМЕСТИТЬ ПродуктыСЗаказамиНаЗакупку
		|ИЗ
		|	ПродуктыНаДатуСоставления КАК ПродуктыНаДатуСоставления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
		|		ПО ПродуктыНаДатуСоставления.Изделие.ЗаказНаЗавод = Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродуктыСЗаказамиНаЗакупку.ДатаДоставки КАК ДатаДоставки,
		|	ПродуктыСЗаказамиНаЗакупку.Изделие КАК Изделие
		|ИЗ
		|	ПродуктыСЗаказамиНаЗакупку КАК ПродуктыСЗаказамиНаЗакупку
		|ГДЕ
		|	ПродуктыСЗаказамиНаЗакупку.ЗаказНаЗакупку.Договор = &ДоговорПодряда
		|
		// Rarus tenkam 01.12.2021 mantis 18621 +++
		|СГРУППИРОВАТЬ ПО
		|	ПродуктыСЗаказамиНаЗакупку.Изделие,
		|	ПродуктыСЗаказамиНаЗакупку.ДатаДоставки
		// Rarus tenkam 01.12.2021 mantis 18621 ---
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДоставки";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки КАК ДатаДоставки,
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.Изделие КАК Изделие
		|ПОМЕСТИТЬ ПродуктыНаДатуСоставления
		|ИЗ
		|	Документ.Scan_ПеремещениеИзделий.ИзделияДляПеремещения КАК Scan_ПеремещениеИзделийИзделияДляПеремещения
		|ГДЕ
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка.ДокументОснование = &ЗаявкаСсылка
		|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки <> ДАТАВРЕМЯ(1, 1, 1)
		|	И НАЧАЛОПЕРИОДА(Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки, ДЕНЬ) = &ДатаСоставления
		|	И Scan_ПеремещениеИзделийИзделияДляПеремещения.Ссылка.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.ДатаДоставки,
		|	Scan_ПеремещениеИзделийИзделияДляПеремещения.Изделие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродуктыНаДатуСоставления.ДатаДоставки КАК ДатаДоставки,
		|	ПродуктыНаДатуСоставления.Изделие КАК Изделие,
		|	ЕСТЬNULL(Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку, ЗНАЧЕНИЕ(Документ.Scan_ЗаказНаЗакупку.ПустаяСсылка)) КАК ЗаказНаЗакупку
		|ПОМЕСТИТЬ ПродуктыСЗаказамиНаЗакупку
		|ИЗ
		|	ПродуктыНаДатуСоставления КАК ПродуктыНаДатуСоставления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
		|		ПО ПродуктыНаДатуСоставления.Изделие.ЗаказНаЗавод = Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродуктыСЗаказамиНаЗакупку.ДатаДоставки КАК ДатаДоставки,
		|	ПродуктыСЗаказамиНаЗакупку.Изделие КАК Изделие
		|ИЗ
		|	ПродуктыСЗаказамиНаЗакупку КАК ПродуктыСЗаказамиНаЗакупку
		|ГДЕ
		|	ПродуктыСЗаказамиНаЗакупку.ЗаказНаЗакупку.Договор = &ДоговорПодряда
		|
		// Rarus tenkam 01.12.2021 mantis 18621 +++
		|СГРУППИРОВАТЬ ПО
		|	ПродуктыСЗаказамиНаЗакупку.Изделие,
		|	ПродуктыСЗаказамиНаЗакупку.ДатаДоставки
		// Rarus tenkam 01.12.2021 mantis 18621 ---
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДоставки";
	
	КонецЕсли;
	Запрос.УстановитьПараметр("ЗаявкаСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаСоставления", ДатаСоставления);
	Запрос.УстановитьПараметр("ДоговорПодряда", ДоговорПодряда);
	
	ТабРезультат = Запрос.Выполнить().Выгрузить();
	
	Возврат ТабРезультат;
КонецФункции
