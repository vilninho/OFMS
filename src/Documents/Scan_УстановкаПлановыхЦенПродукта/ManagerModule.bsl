//rarus vikhle 15.10.2021 АПК
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
// rarus tenkam 05.08.2020 mantis 16181 +++
#Область РаботаСДокументомУстановкиЦен

Функция ПолучитьДокументыУстановкиЦенПоМассивуПродуктов(МассивПродуктов = Неопределено, ЗаявкаСсылка = Неопределено, УчитыватьОтмененные = Ложь) Экспорт //rarus vikhle 12.10.2021 m 18292 + ЗаявкаСсылка + УчитыватьОтмененные
	СоответствиеПродуктДокумент = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_УстановкаПлановыхЦенПродукта.Ссылка КАК Документ,
		|	Scan_УстановкаПлановыхЦенПродукта.Продукт КАК Продукт
		|ИЗ
		|	Документ.Scan_УстановкаПлановыхЦенПродукта КАК Scan_УстановкаПлановыхЦенПродукта
		|ГДЕ
		|	Scan_УстановкаПлановыхЦенПродукта.Продукт В(&МассивПродуктов)
		//rarus vikhle 12.10.2021 m 18292 +++
		|	И (&УчитыватьОтмененные = Истина ИЛИ Scan_УстановкаПлановыхЦенПродукта.ДокументОтменен = ЛОЖЬ)
		|	И (&Заявка = НЕОПРЕДЕЛЕНО ИЛИ Scan_УстановкаПлановыхЦенПродукта.СоглашениеОПоставке = &Заявка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Scan_УстановкаПлановыхЦенПродукта.МоментВремени";
		//rarus vikhle 12.10.2021 m 18292 ---
	
	Запрос.УстановитьПараметр("МассивПродуктов", МассивПродуктов);
	Запрос.УстановитьПараметр("Заявка", ЗаявкаСсылка); //rarus vikhle 12.10.2021 m 18292 
	Запрос.УстановитьПараметр("УчитыватьОтмененные", УчитыватьОтмененные); //rarus vikhle 12.10.2021 m 18292
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СоответствиеПродуктДокумент.Вставить(ВыборкаДетальныеЗаписи.Продукт, ВыборкаДетальныеЗаписи.Документ); 
	КонецЦикла;
	
	Возврат СоответствиеПродуктДокумент;	
КонецФункции

Функция ПолучитьДокументУстановкиЦенПоПродукту(ПродуктСсылка, ЗаявкаСсылка = Неопределено, УчитыватьОтмененные = Ложь) Экспорт //rarus vikhle 12.10.2021 m 18292 + ЗаявкаСсылка И УчитыватьОтмененные
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Scan_УстановкаПлановыхЦенПродукта.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Scan_УстановкаПлановыхЦенПродукта КАК Scan_УстановкаПлановыхЦенПродукта
		|ГДЕ
		|	Scan_УстановкаПлановыхЦенПродукта.Продукт = &Продукт
		//rarus vikhle 12.10.2021 m 18292 +++
		|	И (&УчитыватьОтмененные = Истина ИЛИ Scan_УстановкаПлановыхЦенПродукта.ДокументОтменен = ЛОЖЬ)
		|	И (&Заявка = НЕОПРЕДЕЛЕНО ИЛИ Scan_УстановкаПлановыхЦенПродукта.СоглашениеОПоставке = &Заявка)
		//rarus vikhle 12.10.2021 m 18292 ---
		|
		|УПОРЯДОЧИТЬ ПО
		|	Scan_УстановкаПлановыхЦенПродукта.МоментВремени УБЫВ";
	
	Запрос.УстановитьПараметр("Продукт", ПродуктСсылка);
	Запрос.УстановитьПараметр("Заявка",  ЗаявкаСсылка);//rarus vikhle 12.10.2021 m 18292
	Запрос.УстановитьПараметр("УчитыватьОтмененные", УчитыватьОтмененные); //rarus vikhle 12.10.2021 m 18292
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;

	Возврат ПредопределенноеЗначение("Документ.Scan_УстановкаПлановыхЦенПродукта.ПустаяСсылка");	
КонецФункции

Функция ОткрепитьДокументОтПродукта(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Scan_Изделия.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_Изделия КАК Scan_Изделия
		|ГДЕ
		|	Scan_Изделия.ДокументУстановкиПлановыхЦенПродукта = &ДокументСсылка";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ПродуктОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ПродуктОбъект.ДокументУстановкиПлановыхЦенПродукта = Документы.Scan_УстановкаПлановыхЦенПродукта.ПустаяСсылка();
		
		Попытка
			ПродуктОбъект.Записать();
		Исключение
			ВывестиСообщениеПол(НСтр("ru = 'Ошибка при откреплении документа установки цен от продукта %1: %2'"),,,,, ПродуктОбъект, ОписаниеОшибки());
			ЗаписьЖурналаРегистрации("Установка плановых цен продукта",,, ПродуктОбъект,"Не удалось открепить документ у изделия",);
		Возврат Ложь;	
		КонецПопытки; 		
	КонецЕсли;

	Возврат Истина;
КонецФункции

Функция ЗакрепитьДокументУстановкиЦенПродукта(ДокументСсылка, ПродуктСсылка = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПродуктСсылка) Тогда
		ПродуктСсылка = ДокументСсылка.Продукт;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПродуктСсылка) Тогда
		Возврат Ложь;
	КонецЕсли;            
	
	СтарыйДокумент = ПродуктСсылка.ДокументУстановкиПлановыхЦенПродукта;
	Если ЗначениеЗаполнено(СтарыйДокумент) Тогда
		Если СтарыйДокумент = ДокументСсылка Тогда
			Возврат Истина;
		Иначе
			// У продукта закреплен другой документ - старый должен быть отменен
			ОтменитьДокументУстановкиЦен(СтарыйДокумент);
		КонецЕсли;
	КонецЕсли;
			
	ПродуктОбъект = ПродуктСсылка.ПолучитьОбъект();
	ПродуктОбъект.ДокументУстановкиПлановыхЦенПродукта = ДокументСсылка;
	
	Попытка
		ПродуктОбъект.Записать();
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка при закреплении документа установки цен %1 к продукту %2: %3'"),,,,, ДокументСсылка, ПродуктОбъект, ОписаниеОшибки());
		ЗаписьЖурналаРегистрации("Установка плановых цен продукта",,, ДокументСсылка,"Не удалось закрепить документ в изделии",);
		Возврат Ложь;	
	КонецПопытки; 		
	
	Возврат Истина;
КонецФункции

Функция ОтменитьДокументУстановкиЦен(ДокументСсылка) Экспорт
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ДокументОбъект.ДокументОтменен = Истина;
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка при отмене документа %1: %2'"),,,,, ДокументОбъект, ОписаниеОшибки());
		ЗаписьЖурналаРегистрации("Установка плановых цен продукта",,, ДокументСсылка,"Не удалось отменить документ",);
		Возврат Ложь;	
	КонецПопытки; 	
КонецФункции

Функция СкопироватьДокумент(ИсходныйДокумент, Заявка) Экспорт // rarus vikhle 25.11.2021 m 18591 +++ 
	
	Если ИсходныйДокумент.СоглашениеОПоставке = Заявка Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ДокОбъект						= ИсходныйДокумент.Скопировать();
	ДокОбъект.Дата					= ТекущаяДатаСеанса();
	ДокОбъект.СоглашениеОПоставке	= Заявка;
	ДокОбъект.Организация			= ТекущийПользователь.Организация;
	ДокОбъект.ПодразделениеКомпании	= ТекущийПользователь.ПодразделениеОрганизации;
	ДокОбъект.Автор 				= ТекущийПользователь;
	ДокОбъект.Менеджер 				= ТекущийПользователь;
		
	Попытка
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Возврат ДокОбъект.Ссылка;
	Исключение	
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка при создании документа установки плановых цен продукта %1: %2'"),,,,, 
							ИсходныйДокумент.Продукт, 
							ОписаниеОшибки());
		ЗаписьЖурналаРегистрации(Нстр("ru = 'Установка плановых цен продукта'", ОбщегоНазначения.КодОсновногоЯзыка()),,, 
								ИсходныйДокумент.Продукт,
								Нстр("ru = 'Не удалось создать / скорректировать документ для продукта'"));
		Возврат Неопределено;					
	КонецПопытки;
			
КонецФункции // rarus vikhle 25.11.2021 m 18591	---

#КонецОбласти

#Область СозданиеКорректировкаДокументаУстановкиЦен

Функция ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(ПродуктСсылка = Неопределено, ДокументУстановкиЦен = Неопределено) Экспорт
	
	ТаблицаСоставляющих = Новый ТаблицаЗначений;
	ТаблицаСоставляющих.Колонки.Добавить("СоставляющаяЦены", Новый ОписаниеТипов("СправочникСсылка.Scan_СоставляющиеРасчетаЦеныПродуктов"));
	ТаблицаСоставляющих.Колонки.Добавить("ЦенаСНДС", Новый ОписаниеТипов("Число"));
	ТаблицаСоставляющих.Колонки.Добавить("ЦенаБезНДС", Новый ОписаниеТипов("Число"));
	ТаблицаСоставляющих.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("СправочникСсылка.Scan_СтавкиНДС"));
	ТаблицаСоставляющих.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));	
	ТаблицаСоставляющих.Колонки.Добавить("Источник");
	ТаблицаСоставляющих.Колонки.Добавить("Комментарий", Новый ОписаниеТипов("Строка"));	// rarus tenkam 16.04.2021 mantis 17648 +	
	                                             	
	// Если документ уже есть, то заполним составляющие текущими значениями
	Если НЕ ЗначениеЗаполнено(ДокументУстановкиЦен) Тогда
		Если ЗначениеЗаполнено(ПродуктСсылка) Тогда
			ДокументУстановкиЦен = ПолучитьДокументУстановкиЦенПоПродукту(ПродуктСсылка);
		ИначеЕсли ДокументУстановкиЦен = Неопределено Тогда
			ДокументУстановкиЦен = ПредопределенноеЗначение("Документ.Scan_УстановкаПлановыхЦенПродукта.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка КАК СоставляющаяЦены
	|ПОМЕСТИТЬ СоставляющиеВводимыеВручную
	|ИЗ
	|	Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов КАК Scan_СоставляющиеРасчетаЦеныПродуктов
	|ГДЕ
	|	(Scan_СоставляющиеРасчетаЦеныПродуктов.ВариантФормированияРасчета = &ВариантФормированияРасчетаВручную
	|			ИЛИ Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка = ЗНАЧЕНИЕ(Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаДилера)
	|			ИЛИ Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка = ЗНАЧЕНИЕ(Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаКлиента))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки.СоставляющаяЦены КАК СоставляющаяЦены,
	|	Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки.ЦенаСНДС КАК ЦенаСНДС,
	|	Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки.ЦенаБезНДС КАК ЦенаБезНДС,
	|	Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки.СтавкаНДС КАК СтавкаНДС,
	|	Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки.Пользователь КАК Пользователь,
	|	Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки.Комментарий КАК Комментарий, 	// rarus tenkam 16.04.2021 mantis 17648 +
	|	Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки.Источник КАК Источник
	|ПОМЕСТИТЬ ТабДокументУстановкиЦен
	|ИЗ
	|	Документ.Scan_УстановкаПлановыхЦенПродукта.СкидкиНаценки КАК Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки
	|ГДЕ
	|	Scan_УстановкаПлановыхЦенПродуктаСкидкиНаценки.Ссылка = &ДокументУстановкиЦен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставляющиеВводимыеВручную.СоставляющаяЦены КАК СоставляющаяЦены,
	|	ЕСТЬNULL(ТабДокументУстановкиЦен.ЦенаСНДС, 0) КАК ЦенаСНДС,
	|	ЕСТЬNULL(ТабДокументУстановкиЦен.ЦенаБезНДС, 0) КАК ЦенаБезНДС,
	|	ЕСТЬNULL(ТабДокументУстановкиЦен.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС)) КАК СтавкаНДС,
	|	ЕСТЬNULL(ТабДокументУстановкиЦен.Пользователь, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК Пользователь,
	|	ЕСТЬNULL(ТабДокументУстановкиЦен.Комментарий, """") КАК Комментарий,
	|	ЕСТЬNULL(ТабДокументУстановкиЦен.Источник, ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)) КАК Источник
	|ИЗ
	|	СоставляющиеВводимыеВручную КАК СоставляющиеВводимыеВручную
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабДокументУстановкиЦен КАК ТабДокументУстановкиЦен
	|		ПО СоставляющиеВводимыеВручную.СоставляющаяЦены = ТабДокументУстановкиЦен.СоставляющаяЦены";
	
	Запрос.УстановитьПараметр("ВариантФормированияРасчетаВручную", ПредопределенноеЗначение("Перечисление.Scan_ВариантыФормированияРасчетаСоставляющихЦены.ВводитсяВручную"));
	Запрос.УстановитьПараметр("ДокументУстановкиЦен", ДокументУстановкиЦен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ТаблицаСоставляющих.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);	
	КонецЦикла;
	
	Возврат ТаблицаСоставляющих;
	
КонецФункции

Функция СоздатьСкорректироватьДокументУстановкиЦен(ПродуктСсылка, ТаблицаРучныхСоставляющих, СоглашениеОПоставке = Неопределено, СпециальныеУсловия = Неопределено, Автор = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Автор) Тогда
		Автор = ПользователиКлиентСервер.АвторизованныйПользователь();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СоглашениеОПоставке) Тогда
		СоглашениеОПоставке = ПолучитьПоследнееСоглашениеОПоставке(ПродуктСсылка);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СпециальныеУсловия) Тогда
		СпециальныеУсловия = ПолучитьСУпоПродуктуИСоглашению(ПродуктСсылка, СоглашениеОПоставке);
	КонецЕсли;
	
	ТаблицаСоставляющих = РассчитатьПолнуюТаблицуСоставляющих(ТаблицаРучныхСоставляющих);
	
	ДокументУстановкиЦен = ПолучитьДокументУстановкиЦенПоПродукту(ПродуктСсылка);
	Если ЗначениеЗаполнено(ДокументУстановкиЦен) Тогда
		ДокументОбъект = ДокументУстановкиЦен.ПолучитьОбъект();
		ДокументОбъект.СкидкиНаценки.Очистить();
	Иначе
		ДокументОбъект = Документы.Scan_УстановкаПлановыхЦенПродукта.СоздатьДокумент();
		
		ДокументОбъект.Организация = Автор.Организация;
		ДокументОбъект.ПодразделениеКомпании = Автор.ПодразделениеОрганизации;
		ДокументОбъект.Автор = Автор;
		ДокументОбъект.Менеджер = Автор;
		ДокументОбъект.Дата = ТекущаяДата();
		ДокументОбъект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
		ДокументОбъект.ХозОперация = Справочники.Scan_ХозяйственныеОперации.УстановкаПлановыхЦенПродуктов;
		Scan_ВспомогательныеФункцииСервер.ЗаполнитьКомпаниюИКонтрагента(Автор,ДокументОбъект.Компания,ДокументОбъект.Контрагент);
	КонецЕсли;
	
	ДокументОбъект.Продукт = ПродуктСсылка;
	ДокументОбъект.СоглашениеОПоставке = СоглашениеОПоставке;
	ДокументОбъект.СпециальныеУсловия = СпециальныеУсловия;
	
	Для Каждого ТекСоставляющая Из ТаблицаСоставляющих Цикл
		Если ЗначениеЗаполнено(ТекСоставляющая.ЦенаСНДС) Тогда
			
			НоваяСтрока = ДокументОбъект.СкидкиНаценки.Добавить();
			НоваяСтрока.СоставляющаяЦены = ТекСоставляющая.СоставляющаяЦены;
			НоваяСтрока.ЦенаСНДС = ТекСоставляющая.ЦенаСНДС;
			НоваяСтрока.ЦенаБезНДС = ТекСоставляющая.ЦенаБезНДС;
			НоваяСтрока.СтавкаНДС = ТекСоставляющая.СтавкаНДС;
			НоваяСтрока.Пользователь = ТекСоставляющая.Пользователь;
			НоваяСтрока.Комментарий = ТекСоставляющая.Комментарий;	// rarus tenkam 16.04.2021 mantis 17648 +
			НоваяСтрока.Источник = ТекСоставляющая.Источник;
		КонецЕсли;
	КонецЦикла;
	
	НайденнаяСтрока = ТаблицаСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаDealerNetСоСкидкой"), "СоставляющаяЦены");
	Если НайденнаяСтрока <> Неопределено Тогда
		ДокументОбъект.ЦенаDealerNetСоСкидкой = НайденнаяСтрока.ЦенаСНДС;
	КонецЕсли;
	
	НайденнаяСтрока = ТаблицаСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаRetailPriceСоСкидкой"), "СоставляющаяЦены");
	Если НайденнаяСтрока <> Неопределено Тогда
		ДокументОбъект.ЦенаRetailPriceСоСкидкой = НайденнаяСтрока.ЦенаСНДС;
	КонецЕсли;   
	
	Попытка 
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ВывестиСообщениеПол(НСтр("ru = 'Ошибка при создании документа установки плановых цен продукта %1: %2'"),,,,, ПродуктСсылка, ОписаниеОшибки());
		ЗаписьЖурналаРегистрации("Установка плановых цен продукта",,, ПродуктСсылка,"Не удалось создать / скорректировать документ для продукта",);
		Возврат Неопределено;	
	КонецПопытки;
	
	Возврат ДокументОбъект.Ссылка;	
КонецФункции

Функция ОтменитьДокументУстановкиЦенПоПродукту(ПродуктСсылка) Экспорт
	ДокументУстановкиЦен = ПолучитьДокументУстановкиЦенПоПродукту(ПродуктСсылка);
	Если ЗначениеЗаполнено(ДокументУстановкиЦен) Тогда
		ОтменитьДокументУстановкиЦен(ДокументУстановкиЦен);
	КонецЕсли;
КонецФункции

Функция ОбновитьЗаявкуВДокументе(ПродуктСсылка = Неопределено, ДокументУстановкиЦен = Неопределено, СоглашениеОПоставке = Неопределено) Экспорт	// rarus tenkam 18.03.2021 mantis 17440 +++
	Если НЕ ЗначениеЗаполнено(ПродуктСсылка) И НЕ ЗначениеЗаполнено(ДокументУстановкиЦен) Тогда
		Возврат ПредопределенноеЗначение("Документ.Scan_УстановкаПлановыхЦенПродукта.ПустаяСсылка");
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДокументУстановкиЦен) Тогда
		ДокументУстановкиЦен = ПолучитьДокументУстановкиЦенПоПродукту(ПродуктСсылка);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПродуктСсылка) Тогда
		ПродуктСсылка = ДокументУстановкиЦен.Продукт;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СоглашениеОПоставке) Тогда
		СоглашениеОПоставке = ПродуктСсылка.СоглашениеОПоставке;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументУстановкиЦен) Тогда
		ДокументОбъект = ДокументУстановкиЦен.ПолучитьОбъект();
		
		Если СоглашениеОПоставке = ДокументОбъект.СоглашениеОПоставке Тогда
			Возврат ДокументОбъект.Ссылка;
		КонецЕсли;
		
		ДокументОбъект.СоглашениеОПоставке = СоглашениеОПоставке;
		
		Попытка 
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Возврат ДокументОбъект.Ссылка;	
			
		Исключение
			ВывестиСообщениеПол(НСтр("ru = 'Ошибка при корректировке документа установки плановых цен продукта %1: %2'"),,,,, ПродуктСсылка, ОписаниеОшибки());
			ЗаписьЖурналаРегистрации("Установка плановых цен продукта",,, ПродуктСсылка,"Не удалось скорректировать документ для продукта",);
			Возврат Неопределено;	
		КонецПопытки;  		
	Иначе
		Возврат ПредопределенноеЗначение("Документ.Scan_УстановкаПлановыхЦенПродукта.ПустаяСсылка");
	КонецЕсли;
	
	Возврат ПредопределенноеЗначение("Документ.Scan_УстановкаПлановыхЦенПродукта.ПустаяСсылка");
КонецФункции
#КонецОбласти

#Область ВспомогательныеФункцииПроцедуры

Функция РассчитатьПолнуюТаблицуСоставляющих(ТаблицаРучныхСоставляющих) Экспорт
	
	ТаблицаСоставляющих = Новый ТаблицаЗначений;
	ТаблицаСоставляющих.Колонки.Добавить("СоставляющаяЦены",           Новый ОписаниеТипов("СправочникСсылка.Scan_СоставляющиеРасчетаЦеныПродуктов"));
	ТаблицаСоставляющих.Колонки.Добавить("Идентификатор",              Новый ОписаниеТипов("Строка"));
	ТаблицаСоставляющих.Колонки.Добавить("ВариантФормированияРасчета", Новый ОписаниеТипов("ПеречислениеСсылка.Scan_ВариантыФормированияРасчетаСоставляющихЦены"));
	ТаблицаСоставляющих.Колонки.Добавить("ФормулаРасчета",             Новый ОписаниеТипов("Строка"));
	ТаблицаСоставляющих.Колонки.Добавить("Значение",                   Новый ОписаниеТипов("Число"));	// "Значение" необходимо для использования существующей функции Scan_ЦенообразованиеСервер.РассчитатьСоставляющуюПоФормуле
	ТаблицаСоставляющих.Колонки.Добавить("ЦенаСНДС",                   Новый ОписаниеТипов("Число"));
	ТаблицаСоставляющих.Колонки.Добавить("ЦенаБезНДС",				   Новый ОписаниеТипов("Число"));
	ТаблицаСоставляющих.Колонки.Добавить("Порядок",                    Новый ОписаниеТипов("Число"));
	ТаблицаСоставляющих.Колонки.Добавить("СтавкаНДС", 				   Новый ОписаниеТипов("СправочникСсылка.Scan_СтавкиНДС"));
	ТаблицаСоставляющих.Колонки.Добавить("Пользователь", 			   Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	ТаблицаСоставляющих.Колонки.Добавить("Источник");
	ТаблицаСоставляющих.Колонки.Добавить("Комментарий", 			   Новый ОписаниеТипов("Строка"));	// rarus tenkam 16.04.2021 mantis 17648 +
	
	// Получим все составляющие Скидок, наценок + составляющие базовых цен
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка КАК СоставляющаяЦены,
		|	Scan_СоставляющиеРасчетаЦеныПродуктов.ВариантФормированияРасчета КАК ВариантФормированияРасчета,
		|	Scan_СоставляющиеРасчетаЦеныПродуктов.ФормулаРасчета КАК ФормулаРасчета,
		|	Scan_СоставляющиеРасчетаЦеныПродуктов.Идентификатор КАК Идентификатор,
		|	Scan_СоставляющиеРасчетаЦеныПродуктов.НомерСтрокиКалькуляции КАК Порядок
		|ИЗ
		|	Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов КАК Scan_СоставляющиеРасчетаЦеныПродуктов
		|ГДЕ
		|	(Scan_СоставляющиеРасчетаЦеныПродуктов.Родитель = ЗНАЧЕНИЕ(Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СкидкиНаценки)
		|			ИЛИ Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка = ЗНАЧЕНИЕ(Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаДилера)
		|			ИЛИ Scan_СоставляющиеРасчетаЦеныПродуктов.Ссылка = ЗНАЧЕНИЕ(Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаКлиента))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиКалькуляции";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЗначениеСтавки = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС").Ставка;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ТаблицаСоставляющих.Добавить();
		// Заполним данные из справочника составляющих
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		
		// Если есть значение, введенное пользователем
		НайденноеЗначение = ТаблицаРучныхСоставляющих.Найти(ВыборкаДетальныеЗаписи.СоставляющаяЦены,"СоставляющаяЦены");
		Если НайденноеЗначение <> Неопределено И ЗначениеЗаполнено(НайденноеЗначение.ЦенаСНДС) Тогда
						
			// Заполним значения, введенные пользователем
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденноеЗначение);
			
			// Проверим, вдруг не введен пользователь, возьмем текущего
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Пользователь) Тогда
				НоваяСтрока.Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
			КонецЕсли;
			
			// Проверим, вдруг не введена ставка НДС, возмем основную
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтавкаНДС) Тогда
				НоваяСтрока.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
			КонецЕсли;
			
			// Проверим, вдруг введена только цена с НДС, рассчитаем цену без НДС
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.ЦенаБезНДС) Тогда
				// Если это % драйва, то цена с НДС = цены без НДС = % драйва
				Если НоваяСтрока.СоставляющаяЦены = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ПроцентДрайва") Тогда
					НоваяСтрока.ЦенаБезНДС = НоваяСтрока.ЦенаСНДС;
					НоваяСтрока.Значение = НоваяСтрока.ЦенаСНДС;
					Продолжить;
				КонецЕсли;
				
				// Получим ставку НДС, если она отличается от основной
				Если НоваяСтрока.СтавкаНДС <> ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС") Тогда
					ЗначениеСтавки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.СтавкаНДС,"Ставка");
				КонецЕсли;
				
				// Посчитаем Цену без НДС
				НоваяСтрока.ЦенаБезНДС = 100*НоваяСтрока.ЦенаСНДС/(100 + ЗначениеСтавки);
			КонецЕсли;
			
		// Если нет значений, введенных пользователем, значит, эта составляющая рассчитывается по формуле
		ИначеЕсли ЗначениеЗаполнено(НоваяСтрока.ФормулаРасчета) Тогда
		    
			НоваяСтрока.ЦенаСНДС = Scan_ЦенообразованиеСервер.РассчитатьСоставляющуюПоФормуле(ТаблицаСоставляющих, НоваяСтрока.СоставляющаяЦены, НоваяСтрока.ФормулаРасчета);
			
			//rarus vikhle 05.10.2020 mt 16181 +++
			Если НоваяСтрока.СоставляющаяЦены = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаDealerNetСоСкидкой") Тогда
				//rarus vikhle 05.03.2021 mt 17388 +++ округление до рубля
				НоваяСтрока.ЦенаСНДС = Окр(НоваяСтрока.ЦенаСНДС);
				//округление до 50 рублей в большую сторону
				//НоваяСтрока.ЦенаСНДС = ?(НоваяСтрока.ЦенаСНДС % 50 = 0,
				//						Цел(НоваяСтрока.ЦенаСНДС/50)*50,
				//						Цел(НоваяСтрока.ЦенаСНДС/50)*50+50); 	
				//rarus vikhle 05.03.2021 mt 17388 ---
			КонецЕсли;	
			//rarus vikhle 05.10.2020 mt 16181
			
			НоваяСтрока.ЦенаБезНДС = 100*НоваяСтрока.ЦенаСНДС/(100 + ЗначениеСтавки);
			НоваяСтрока.СтавкаНДС = Справочники.Scan_СтавкиНДС.НайтиПоРеквизиту("Ставка", ЗначениеСтавки);
			
		// Для корректного расчета - Если нет СУ, то заполним значение СУ = базовой цене дилера
		ИначеЕсли НоваяСтрока.СоставляющаяЦены = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet") Тогда
			
			СтрокаБазоваяЦенаДилера = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаДилера"),"СоставляющаяЦены");
			Если СтрокаБазоваяЦенаДилера <> Неопределено Тогда
				НоваяСтрока.ЦенаБезНДС = СтрокаБазоваяЦенаДилера.ЦенаБезНДС;
				НоваяСтрока.ЦенаСНДС = СтрокаБазоваяЦенаДилера.ЦенаСНДС;
				НоваяСтрока.СтавкаНДС = СтрокаБазоваяЦенаДилера.СтавкаНДС;
			КонецЕсли;		
			
		// Для корректного расчета - Если нет СУ, то заполним значение СУ = базовой цене клиента
		ИначеЕсли НоваяСтрока.СоставляющаяЦены = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУRetailPrice") Тогда
			
			СтрокаБазоваяЦенаКлиента = ТаблицаРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаКлиента"),"СоставляющаяЦены");
			Если СтрокаБазоваяЦенаКлиента <> Неопределено Тогда
				НоваяСтрока.ЦенаБезНДС = СтрокаБазоваяЦенаКлиента.ЦенаБезНДС;
				НоваяСтрока.ЦенаСНДС = СтрокаБазоваяЦенаКлиента.ЦенаСНДС;
				НоваяСтрока.СтавкаНДС = СтрокаБазоваяЦенаКлиента.СтавкаНДС;
			КонецЕсли;		
		// rarus tenkam 01.04.2021 mantis 17419 +++	
		// Для корректного расчета - Если нет валютной оговорки, то заполним значение цены по вал. оговорке = СУ
		ИначеЕсли НоваяСтрока.СоставляющаяЦены = ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаПоВалютнойОговорке") Тогда
			
			СтрокаСУДилер = ТаблицаСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
			Если СтрокаСУДилер <> Неопределено Тогда
				НоваяСтрока.ЦенаБезНДС = СтрокаСУДилер.ЦенаБезНДС;
				НоваяСтрока.ЦенаСНДС = СтрокаСУДилер.ЦенаСНДС;
				НоваяСтрока.СтавкаНДС = СтрокаСУДилер.СтавкаНДС;
			КонецЕсли;		
		// rarus tenkam 01.04.2021 mantis 17419 ---	
		КонецЕсли;
		НоваяСтрока.Значение = НоваяСтрока.ЦенаСНДС;	
	КонецЦикла;

	Возврат ТаблицаСоставляющих;
КонецФункции

Функция ПолучитьПоследнееСоглашениеОПоставке(ПродуктСсылка) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
		|ГДЕ
		|	НЕ Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка.Статус В (&МассивСтатусов)
		|	И Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И Scan_СоглашенияОПоставкеСписокПродуктов.Продукт = &ПродуктСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка.Код УБЫВ";
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.Отказ"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.НеактуальноЕстьДС"));
	
	Запрос.УстановитьПараметр("МассивСтатусов", МассивСтатусов);
	Запрос.УстановитьПараметр("ПродуктСсылка", ПродуктСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	
	Возврат ПредопределенноеЗначение("Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка");
	
КонецФункции

Функция ПолучитьСУпоПродуктуИСоглашению(ПродуктСсылка, СоглашениеОПоставкеСсылка) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка КАК Ссылка,
		|	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт КАК Продукт,
		|	Scan_СоглашенияОПоставкеСписокПродуктов.СпециальныеУсловия КАК СпециальныеУсловия 
		|ИЗ
		|	Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
		|ГДЕ
		|	Scan_СоглашенияОПоставкеСписокПродуктов.Продукт = &ПродуктСсылка
		|	И Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка = &СоглашениеОПоставкеСсылка";
	
	Запрос.УстановитьПараметр("ПродуктСсылка", ПродуктСсылка);
	Запрос.УстановитьПараметр("СоглашениеОПоставкеСсылка", СоглашениеОПоставкеСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.СпециальныеУсловия;
	КонецЕсли;
	
	Возврат ПредопределенноеЗначение("Справочник.Scan_СпециальныеУсловия.ПустаяСсылка");
	
КонецФункции

#КонецОбласти

Процедура ПримерСозданияКорректировкиДокументаУстановкиЦен(ПродуктСсылка) Экспорт
	
	// Получим таблицу со всеми составляющими, которые могут быть установлены/изменены пользователем 	
	ТабРучныхСоставляющих = Документы.Scan_УстановкаПлановыхЦенПродукта.ПолучитьТаблицуРучныхСоставляющихСкидкиНаценки(ПродуктСсылка);
	
	// Т.к. пример, для заполнения Источника - возьмем любую ссылку
	ВыборкаСоглашение = Справочники.Scan_СоглашенияОПоставке.Выбрать();
	ВыборкаСоглашение.Следующий();
	ИсточникСоглашениеОПоставке = ВыборкаСоглашение.Ссылка;
	
	ВыборкаЗаявкаНаОтгрузку = Документы.Scan_ЗаявкаНаОтгрузку.Выбрать();
	ВыборкаЗаявкаНаОтгрузку.Следующий();
	ИсточникЗаявкаНаОтгрузку = ВыборкаЗаявкаНаОтгрузку.Ссылка;
	
	// Установка Базовой цены
	СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЦенаДилера"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС = 6800000;
	СтрокаСоставляющей.ЦенаБезНДС = 5440000;	// Цена без НДС не обязательна, но желательна
	СтрокаСоставляющей.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
	СтрокаСоставляющей.Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	СтрокаСоставляющей.Источник = ИсточникСоглашениеОПоставке; 
	
	// Установка СУ
	СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.СУDealerNet"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС = 6600000;
	СтрокаСоставляющей.ЦенаБезНДС = 5280000;
	СтрокаСоставляющей.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
	СтрокаСоставляющей.Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	СтрокаСоставляющей.Источник = ИсточникСоглашениеОПоставке;
	
	// Установка % драйва
	СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ПроцентДрайва"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС = 1.5;
	СтрокаСоставляющей.ЦенаБезНДС = 1.5;	
	СтрокаСоставляющей.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
	СтрокаСоставляющей.Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	СтрокаСоставляющей.Источник = ИсточникСоглашениеОПоставке;

	// Установка лог. затрат
	СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.ЛогистическиеЗатраты"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС = 10000;
	СтрокаСоставляющей.ЦенаБезНДС = 8000;
	СтрокаСоставляющей.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
	СтрокаСоставляющей.Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	СтрокаСоставляющей.Источник = ИсточникЗаявкаНаОтгрузку;
	
	// Установка компенсации
	СтрокаСоставляющей = ТабРучныхСоставляющих.Найти(ПредопределенноеЗначение("Справочник.Scan_СоставляющиеРасчетаЦеныПродуктов.Компенсация"),"СоставляющаяЦены");
	СтрокаСоставляющей.ЦенаСНДС = 50000;
	СтрокаСоставляющей.ЦенаБезНДС = 40000;
	СтрокаСоставляющей.СтавкаНДС = ПредопределенноеЗначение("Справочник.Scan_СтавкиНДС.ОсновнаяСтавкаНДС");
	СтрокаСоставляющей.Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	СтрокаСоставляющей.Источник = ИсточникЗаявкаНаОтгрузку;

	// ... аналогично для цены клиента ...
	
	// Создадим документ (Соглашение о поставке и СУ в аргументы желательно передать, но не обязательно)
	ДокументУстановкиЦен = Документы.Scan_УстановкаПлановыхЦенПродукта.СоздатьСкорректироватьДокументУстановкиЦен(ПродуктСсылка, ТабРучныхСоставляющих);
	//ДокументУстановкиЦен = Документы.Scan_УстановкаПлановыхЦенПродукта.СоздатьСкорректироватьДокументУстановкиЦен(ПродуктСсылка, ТабРучныхСоставляющих, НоваяВерсияСоглашенияОПоставке, СУпродуктаИзТЧсоглашения);
	
КонецПроцедуры
// rarus tenkam 05.08.2020 mantis 16181 ---

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли