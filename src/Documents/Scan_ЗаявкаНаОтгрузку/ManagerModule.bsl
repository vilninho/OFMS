
Функция ПолучитьСписокЭлементовДляНастройки() Экспорт
	
	ТаблицаЭлементов = Новый ТаблицаЗначений;
	КС = Новый КвалификаторыСтроки(100);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив,, КС);
	
	ТаблицаЭлементов.Колонки.Добавить("ИмяЭлемента",ОписаниеТиповС);
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("ФормаКоманднаяПанель");
	МассивЭлементов.Добавить("ГруппаСлужебныеПоля");
	МассивЭлементов.Добавить("Статус");
	МассивЭлементов.Добавить("СтатусОтменить");
	МассивЭлементов.Добавить("СтатусОтправитьДистрибьютору");
	МассивЭлементов.Добавить("СтатусПересмотр");
	МассивЭлементов.Добавить("СтатусНаСогласование");
	МассивЭлементов.Добавить("СтатусОдобрена");
	МассивЭлементов.Добавить("СтатусОтказ");
	МассивЭлементов.Добавить("Дилер");
	МассивЭлементов.Добавить("Контрагент");
	МассивЭлементов.Добавить("ДатаОтгрузки");
	МассивЭлементов.Добавить("НачалоОтгрузки");
	МассивЭлементов.Добавить("ОкончаниеОтгрузки");
	МассивЭлементов.Добавить("Порядок");
	МассивЭлементов.Добавить("СоглашениеОПоставке");
	//rarus agar 21.01.2021 16981 ++
	МассивЭлементов.Добавить("СкладОтгрузки");
	//МассивЭлементов.Добавить("ТребуетсяПерегон");
	//МассивЭлементов.Добавить("МестоДоставки");
	//rarus agar 21.01.2021 16981 --
	МассивЭлементов.Добавить("ТребуетсяХранение");
	МассивЭлементов.Добавить("ГруппаСоглашение");
	МассивЭлементов.Добавить("КонтактныеЛица");
	МассивЭлементов.Добавить("Продукты");
	МассивЭлементов.Добавить("ПерейтиВМонитор");
	МассивЭлементов.Добавить("ДобавитьСообщение");
	МассивЭлементов.Добавить("СообщенияПользователей");
	МассивЭлементов.Добавить("ПродуктыПеренестиНепроданные");
	МассивЭлементов.Добавить("ПродуктыУдалитьНепроданные");
	МассивЭлементов.Добавить("ПродуктыОчистить");
	МассивЭлементов.Добавить("Комментарий");
	//rarus vikhle 22.01.2021 mt 16981 +++
	МассивЭлементов.Добавить("ПродуктыСкладПродажи");
	МассивЭлементов.Добавить("ПродуктыМестоПередачи");
	//rarus vikhle 22.01.2021 mt 16981 ---
	
	Для Каждого ИмяЭлемента Из МассивЭлементов Цикл
		СтрокаЭлемента = ТаблицаЭлементов.Добавить();
		СтрокаЭлемента.ИмяЭлемента = ИмяЭлемента;
	КонецЦикла;
	
	Возврат ТаблицаЭлементов;
	
КонецФункции

Процедура УстановитьИсполнениеПоПродукту(Продукт, ДатаПродажи, ВидКлючевойДаты) Экспорт //rarus vikhle 22.03.2021 mt 17324 добавил ВидКлючевойДаты
	
	ЗаявкаНаОтгрузку             = Неопределено;
	КоличествоПроданныхПродуктов = 0;
	ТипДилера					 = Неопределено; //rarus vikhle 10.03.2021 mt 17324
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Продукт", Продукт);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка КАК ЗаявкаНаОтгрузку,
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт КАК Продукт
	|ИЗ
	|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	|ГДЕ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка
	|			ИЗ
	|				Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	|			ГДЕ
	|				Scan_ЗаявкаНаОтгрузкуПродукты.Продукт = &Продукт
	|				И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.ПометкаУдаления
	|				И (Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Одобрена)
	|					ИЛИ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.ЧастичноИсполнена))
	|			УПОРЯДОЧИТЬ ПО
	|				Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Дата УБЫВ)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаявкаНаОтгрузку = Выборка.ЗаявкаНаОтгрузку;
		ТипДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаявкаНаОтгрузку,"Дилер.ВидДилера");//rarus vikhle 10.03.2021 mt 17324	
		//rarus vikhle 22.03.2021 mt 17324 +++
		Если ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный 
			И (ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия ИЛИ ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру) Тогда
			Возврат;
		ИначеЕсли (ТипДилера = Перечисления.Scan_ВидыДилеров.Независимый ИЛИ ТипДилера.Пустая())
			И (ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиКлиенту ИЛИ ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУКлиенту) Тогда
			Возврат;	
		//rarus vikhle 23.03.2021 mt 17497 +++	
		ИначеЕсли ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный 
			И ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиКлиенту 
			И Продукт.БУ Тогда
			Возврат;
		ИначеЕсли ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный 
			И ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУКлиенту 
			И НЕ Продукт.БУ Тогда 	
			Возврат;
		ИначеЕсли (ТипДилера = Перечисления.Scan_ВидыДилеров.Независимый ИЛИ ТипДилера.Пустая())  
			И ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия 
			И Продукт.БУ Тогда 	
			Возврат;
		ИначеЕсли (ТипДилера = Перечисления.Scan_ВидыДилеров.Независимый ИЛИ ТипДилера.Пустая())  
			И ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру 
			И НЕ Продукт.БУ Тогда 	
			Возврат;	
		//rarus vikhle 23.03.2021 mt 17497 ---	
		КонецЕсли;	
		//rarus vikhle 22.03.2021 mt 17324 ---
	КонецЕсли;
			
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Продукт = Продукт Тогда
			ДатаПродажиПродукта = ДатаПродажи;
		Иначе
			Если Выборка.Продукт.БУ 
				И НЕ ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда //rarus vikhle 10.03.2021 mt 17324 
				ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Выборка.Продукт,
				Перечисления.Scan_ОбъектыКлючевыхДат.Изделие, Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру, ТекущаяДата());
			//rarus vikhle 10.03.2021 mt 17324 +++	
			ИначеЕсли Выборка.Продукт.БУ И ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
				//Для собственных дилеров для БУ ориентируемся на ДатуПродажиБУКлиенту
				ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Выборка.Продукт,
				Перечисления.Scan_ОбъектыКлючевыхДат.Изделие, Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУКлиенту, ТекущаяДата()); 	
			ИначеЕсли НЕ Выборка.Продукт.БУ И ТипДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
				//Для собственных дилеров для новых ориентируемся на ДатуПродажиКлиенту
				ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Выборка.Продукт);
				
				ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод,
				Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Перечисления.Scan_КлючевыеДаты.ДатаПродажиКлиенту, ТекущаяДата()); 	 
			//rarus vikhle 10.03.2021 mt 17324 ---	
			Иначе
				ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Выборка.Продукт);
				
				ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод,
				Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия, ТекущаяДата());
			КонецЕсли;
		КонецЕсли;
		
		Если  ЗначениеЗаполнено(ДатаПродажиПродукта) 
			И ТипЗнч(ДатаПродажиПродукта) = Тип("Дата")
			И ДатаПродажиПродукта <> Дата(1,1,1) 
			Тогда
			КоличествоПроданныхПродуктов = КоличествоПроданныхПродуктов + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоПроданныхПродуктов > 0 Тогда
		ЗаявкаНаОтгрузкуОбъект = ЗаявкаНаОтгрузку.ПолучитьОбъект();
		
		Если ЗаявкаНаОтгрузкуОбъект.Продукты.Количество() = КоличествоПроданныхПродуктов Тогда
			ЗаявкаНаОтгрузкуОбъект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Исполнена");
		Иначе
			ЗаявкаНаОтгрузкуОбъект.Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.ЧастичноИсполнена");
		КонецЕсли;
		
		Попытка
			ЗаявкаНаОтгрузкуОбъект.Записать();
		Исключение КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьНепроданныеПродукты(ЗаявкаНаОтгрузку) Экспорт
	
	ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаявкаНаОтгрузку, "Дилер.ВидДилера");//rarus vikhle 11.08.2021 mt 18134
	НепроданныеПродукты = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаявкаНаОтгрузку", ЗаявкаНаОтгрузку);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт КАК Продукт,
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт.Аренда КАК Аренда,
	//Rarus bonmak 16.05.2022 19158 ++
	//|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт.ДемоИТест КАК ДемоИТест,
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт.Демо КАК Демо,
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт.Тест КАК Тест,
	//Rarus bonmak 16.05.2022 19158 --
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт.БУ КАК БУ
	|ИЗ
	|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	|ГДЕ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка = &ЗаявкаНаОтгрузку";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Продукт.БУ Тогда
			//rarus vikhle 11.08.2021 mt 18134 +++
			Если ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
				ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Выборка.Продукт,
				Перечисления.Scan_ОбъектыКлючевыхДат.Изделие, Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУКлиенту, ТекущаяДатаСеанса());	
			Иначе //rarus vikhle 11.08.2021 mt 18134 ---
				ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Выборка.Продукт,
				Перечисления.Scan_ОбъектыКлючевыхДат.Изделие, Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру, ТекущаяДатаСеанса());	
			КонецЕсли;	
		Иначе
			ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Выборка.Продукт);
			//rarus vikhle 11.08.2021 mt 18134 +++
			Если ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
				ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод,
				Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Перечисления.Scan_КлючевыеДаты.ДатаПродажиКлиенту, ТекущаяДатаСеанса());	
			Иначе //rarus vikhle 11.08.2021 mt 18134 ---	
				ДатаПродажиПродукта = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод,
				Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия, ТекущаяДатаСеанса());	
			КонецЕсли;	
		КонецЕсли;
		
		Если  ТипЗнч(ДатаПродажиПродукта) = Тип("Дата")
			И ДатаПродажиПродукта = Дата(1,1,1) 
			Тогда
			НепроданныеПродукты.Добавить(Выборка.Продукт);
		КонецЕсли;
	КонецЦикла;
	
	Возврат НепроданныеПродукты;
	
КонецФункции

// rarus vikhle 27.05.2021 mt 17653 +++
//  	
// Параметры:
//  ЗаявкаНаОтгрузкуСсылка	 - 	 - 
//  МассивПродуктов			 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ПолучитьСкладыДоИзменений(ЗаявкаНаОтгрузкуСсылка,МассивПродуктов) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_Изделия.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ПродуктыЗаявки
	               |ИЗ
	               |	Справочник.Scan_Изделия КАК Scan_Изделия
	               |ГДЕ
	               |	Scan_Изделия.Ссылка В(&ПродуктыЗаявкиНаОтгрузку)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(Scan_ХарактеристикиИзделия.Период) КАК ПериодСкладПродажи,
	               |	МАКСИМУМ(Scan_ХарактеристикиИзделия1.Период) КАК ПериодМестоПередачи,
	               |	ПродуктыЗаявки.Ссылка КАК Продукт
	               |ПОМЕСТИТЬ ВТ_Периодов
	               |ИЗ
	               |	ПродуктыЗаявки КАК ПродуктыЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиИзделия КАК Scan_ХарактеристикиИзделия
	               |		ПО ПродуктыЗаявки.Ссылка = Scan_ХарактеристикиИзделия.Изделие
	               |			И (НЕ Scan_ХарактеристикиИзделия.Источник = &ЗаявкаНаОтгрузку)
	               |			И (Scan_ХарактеристикиИзделия.ВидЗначения = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоИзделиям.СкладПродажи))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиИзделия КАК Scan_ХарактеристикиИзделия1
	               |		ПО ПродуктыЗаявки.Ссылка = Scan_ХарактеристикиИзделия1.Изделие
	               |			И (НЕ Scan_ХарактеристикиИзделия1.Источник = &ЗаявкаНаОтгрузку)
	               |			И (Scan_ХарактеристикиИзделия1.ВидЗначения = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоИзделиям.МестоПередачи))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПродуктыЗаявки.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_ХарактеристикиИзделия.Значение КАК СкладПродажи,
	               |	Scan_ХарактеристикиИзделия1.Значение КАК МестоПередачи,
	               |	ВТ_Периодов.Продукт КАК Продукт
	               |ИЗ
	               |	ВТ_Периодов КАК ВТ_Периодов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиИзделия КАК Scan_ХарактеристикиИзделия
	               |		ПО ВТ_Периодов.ПериодСкладПродажи = Scan_ХарактеристикиИзделия.Период
	               |			И (Scan_ХарактеристикиИзделия.ВидЗначения = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоИзделиям.СкладПродажи))
	               |			И ВТ_Периодов.Продукт = Scan_ХарактеристикиИзделия.Изделие
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиИзделия КАК Scan_ХарактеристикиИзделия1
	               |		ПО ВТ_Периодов.ПериодМестоПередачи = Scan_ХарактеристикиИзделия1.Период
	               |			И (Scan_ХарактеристикиИзделия1.ВидЗначения = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоИзделиям.МестоПередачи))
	               |			И ВТ_Периодов.Продукт = Scan_ХарактеристикиИзделия1.Изделие"; 
	Запрос.УстановитьПараметр("ЗаявкаНаОтгрузку", ЗаявкаНаОтгрузкуСсылка);
	Запрос.УстановитьПараметр("ПродуктыЗаявкиНаОтгрузку", МассивПродуктов);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
	
КонецФункции
//rarus vikhle 27.05.2021 mt 17653 ---

// Обновляет реквизит "СоглашениеОПоставке" (Заявка) в заявках на отгрузку, в которые входят переданные продукты
Процедура ОбновитьЗаявкуВЗаявкахНаОтгрузкуПродуктов(МассивПродуктов, Заявка) Экспорт //rarus vikhle 01.09.2021 mt 18228 +++ 
	
	МассивЗаявокНаОтгрузку = ПолучитьЗаявкиНаОгрузкуПродукта(МассивПродуктов);
	Для Каждого ЗаявкаНаОтгрузку Из МассивЗаявокНаОтгрузку Цикл
		Если НЕ ЗаявкаНаОтгрузку.СоглашениеОПоставке = Заявка Тогда  
			ОбъектЗаявкаНаОтгрузку = ЗаявкаНаОтгрузку.ПолучитьОбъект();
			//ОбъектЗаявкаНаОтгрузку.Заблокировать(); //rarus vikhle 03.09.2021 АПК //rarus vikhle 01.10.2021 m 18362
			ОбъектЗаявкаНаОтгрузку.СоглашениеОПоставке = Заявка;
			Попытка
				 ОбъектЗаявкаНаОтгрузку.Записать();
				 ВывестиСообщениеПол(Нстр("ru = 'В заявке на отгрузку %1 обновлен реквизит ""Заявка"".'"),,,,,ОбъектЗаявкаНаОтгрузку.Ссылка);
			Исключение 
			   	ЗаписьЖурналаРегистрации(Нстр("ru = 'Запись заявки на отгрузку'", ОбщегоНазначения.КодОсновногоЯзыка()), //rarus vikhle 03.09.2021 АПК +2й параметр Нстр
										УровеньЖурналаРегистрации.Ошибка,,
										ОбъектЗаявкаНаОтгрузку.Ссылка,
										Нстр("ru = 'Произошла ошибка при записи заявки на отгрузку. '") + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;							
	КонецЦикла;	
	
КонецПроцедуры //rarus vikhle 01.09.2021 mt 18228 ---

// Возвращает массив заявок на отгрузку, в которые входят переданные продукты
Функция ПолучитьЗаявкиНаОгрузкуПродукта(Продукт, Дилер = Неопределено) Экспорт //rarus vikhle 01.09.2021 mt 18228 +++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка КАК ЗаявкаНаОтгрузку
	               |ИЗ
	               |	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	               |ГДЕ
	               |	НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус В (&СтатусыОтмены)
	               |	И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.ПометкаУдаления
	               |	И Scan_ЗаявкаНаОтгрузкуПродукты.Продукт В (&ТекущийПродукт)";
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыЗаявокНаОтгрузку.Отказ);
	МассивСтатусов.Добавить(Справочники.Scan_СтатусыЗаявокНаОтгрузку.Отменена);	
	Запрос.УстановитьПараметр("СтатусыОтмены", МассивСтатусов);
	Запрос.УстановитьПараметр("ТекущийПродукт",Продукт);
	
	Если НЕ Дилер = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Дилер = &Дилер";
		Запрос.УстановитьПараметр("Дилер",Дилер);
	КонецЕсли;	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	МассивЗаявок = РезультатЗапроса.ВыгрузитьКолонку("ЗаявкаНаОтгрузку");
	
	Возврат МассивЗаявок;	
	
КонецФункции //rarus vikhle 01.09.2021 mt 18228 ---	
