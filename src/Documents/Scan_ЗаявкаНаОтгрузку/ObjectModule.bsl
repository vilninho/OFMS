
Перем УдаленныеПродукты; // rarus agar 20.05.2021 17803 +-
Перем СтарыйСтатус; //rarus vikhle 27.05.2021 17653

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Scan_СоглашенияОПоставке") Тогда
		Если ДанныеЗаполнения.ПометкаУдаления Тогда
			//ВызватьИсключение "Ввод документа ""Заявка на отгрузку"" на основании помеченного на удаление ""Соглашения о поставке"" запрещен!";
			ВызватьИсключение "Ввод документа ""Заявка на отгрузку"" на основании помеченной на удаление ""Заявки"" запрещен!"; //rarus vikhle 22.12.2020 mt 16723
		КонецЕсли;
		Если ДанныеЗаполнения.ТипСоглашенияОПоставке <> ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП") Тогда
			//ВызватьИсключение "Ввод документа ""Заявка на отгрузку"" разрешен только для ""Соглашения о поставке"" с типом ""Заявка на СОП""!";
			ВызватьИсключение "Ввод документа ""Заявка на отгрузку"" разрешен только для ""Заявки"" с типом ""Заявка на СОП""!";//rarus vikhle 22.12.2020 mt 16723
		КонецЕсли;
		Если  ДанныеЗаполнения.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Оформлен") 
			И ДанныеЗаполнения.Статус <> ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_ИсполненЧастично") 
			Тогда
			//ВызватьИсключение "Ввод документа ""Заявка на отгрузку"" разрешен только для ""Соглашения о поставке"" в статусе ""СОП Оформлен""!";
			//ВызватьИсключение "Ввод документа ""Заявка на отгрузку"" разрешен только для ""Заявки"" в статусе ""СОП Оформлен""!";//rarus vikhle 22.12.2020 mt 16723
			ВызватьИсключение "Ввод документа ""Заявка на отгрузку"" разрешен только для ""Заявки"" в статусе ""СОП Оформлен"" или ""СОП исполнен частично""!"; //rarus agar 20.01.2021 17006
		КонецЕсли;
		
		//rarus agar 28.08.2020 15696 ++
		МассивТиповПродуктовНадстроекИУслуг = Справочники.Scan_ТипыПродуктов.ПолучитьТипыПродуктовНадстроекИУслуг();
		//rarus agar 28.08.2020 15696 --
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СоглашениеОПоставке", ДанныеЗаполнения);
		//rarus agar 28.08.2020 15696 ++
		Запрос.УстановитьПараметр("МассивТиповПродуктовНадстроекИУслуг", МассивТиповПродуктовНадстроекИУслуг);
		//rarus agar 28.08.2020 15696 --
		Запрос.Текст = "ВЫБРАТЬ
		|	Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие КАК Продукт
		|ИЗ
		|	РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
		|ГДЕ
		|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = &СоглашениеОПоставке
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие КАК Продукт
		|ИЗ
		|	РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
		|ГДЕ
		|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = &СоглашениеОПоставке
		|	И НЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие В
		|				(ВЫБРАТЬ
		|					Scan_ЗаявкаНаОтгрузкуПродукты.Продукт
		|				ИЗ
		|					Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
		|				ГДЕ
		|					Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.СоглашениеОПоставке = &СоглашениеОПоставке
		|					И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.ПометкаУдаления
		|					И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отказ)
		|					И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена))
		//rarus agar 28.08.2020 15696 ++
		|	И НЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие.ТипПродукта В (&МассивТиповПродуктовНадстроекИУслуг)
		//rarus agar 28.08.2020 15696 --
		|
		|УПОРЯДОЧИТЬ ПО
		|	Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие.НомерИзделия";
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		ВсеПродуктыСоглашения       = РезультатыЗапроса[0].Выгрузить();
		СвободныеПродуктыСоглашения = РезультатыЗапроса[1].Выгрузить();
		
		Если ВсеПродуктыСоглашения.Количество() = 0 Тогда
			ВызватьИсключение "Ввод документа ""Заявка на отгрузку"" разрешен только для ""Соглашения о поставке"" с заполненным списком продуктов!";
		КонецЕсли;
		
		Если СвободныеПродуктыСоглашения.Количество() = 0 Тогда
			ВызватьИсключение "Все продукты ""Соглашения о поставке"" уже выбраны в документах ""Заявка на отгрузку""!";
		КонецЕсли;
		
		//Продукты.Загрузить(СвободныеПродуктыСоглашения);//rarus vikhle 16.09.2020 mt 16526
		
		Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.ПроектЗаявкиНаОтгрузку");
		
		СоглашениеОПоставке = ДанныеЗаполнения;
		Дилер               = ДанныеЗаполнения.Дилер;
		
		//rarus vikhle 16.09.2020 mt 16526 +++
		//Если ЗначениеЗаполнено(ДанныеЗаполнения.СкладОтгрузки) Тогда
		//	СкладОтгрузки   = ДанныеЗаполнения.СкладОтгрузки;
		//Иначе
		//	Запрос = Новый Запрос;
		//	Запрос.УстановитьПараметр("Дилер", Дилер);
		//	Запрос.Текст = "ВЫБРАТЬ
		//	|	Scan_Компании.ПриоритетныйСклад КАК ПриоритетныйСклад
		//	|ИЗ
		//	|	Справочник.Scan_Компании КАК Scan_Компании
		//	|ГДЕ
		//	|	Scan_Компании.Ссылка = &Дилер";
		//	
		//	РезультатЗапроса = Запрос.Выполнить();
		//	
		//	Выборка = РезультатЗапроса.Выбрать();
		//	Если Выборка.Следующий() Тогда
		//		СкладОтгрузки = Выборка.ПриоритетныйСклад;
		//	КонецЕсли;
		//КонецЕсли;
		//rarus vikhle 16.09.2020 mt 16526 ---
		
		//rarus vikhle 08.10.2021 mt 18076 +++
		// Заполнение при разделении заявки на СОП
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Scan_ЗаявкаНаОтгрузку") Тогда 	
		
		Дата					= ТекущаяДатаСеанса();
		Дилер					= ДанныеЗаполнения.Дилер;
		НачалоОтгрузки			= ДанныеЗаполнения.НачалоОтгрузки;
		ДатаОтгрузки			= ДанныеЗаполнения.ДатаОтгрузки;
		ДатаОтгрузкиВыходной	= ДанныеЗаполнения.ДатаОтгрузкиВыходной;
		ОкончаниеОтгрузки 		= ДанныеЗаполнения.ОкончаниеОтгрузки;
		СкладОтгрузки 			= ДанныеЗаполнения.СкладОтгрузки;
		ТребуетсяХранение 		= ДанныеЗаполнения.ТребуетсяХранение;
		Порядок 				= ДанныеЗаполнения.Порядок;
		
		Для Каждого СтрокаТЧ Из ДанныеЗаполнения.КонтактныеЛица Цикл
			ЗаполнитьЗначенияСвойств(КонтактныеЛица.Добавить(), СтрокаТЧ);
		КонецЦикла;	
		//rarus vikhle 08.10.2021 mt 18076 ---
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//rarus agar 21.01.2021 16981 ++
	//Если ТребуетсяПерегон Тогда
	//	ПроверяемыеРеквизиты.Добавить("МестоДоставки");
	//КонецЕсли;
	//rarus agar 21.01.2021 16981 --
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СоглашениеОПоставке", СоглашениеОПоставке);
	Запрос.УстановитьПараметр("ЗаявкаНаОтгрузку",    Ссылка);
	Запрос.УстановитьПараметр("ПродуктыЗаявки",      Продукты.ВыгрузитьКолонку("Продукт"));
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт КАК Продукт,
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка КАК ЗаявкаНаОтгрузку
	|ИЗ
	|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	|ГДЕ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка <> &ЗаявкаНаОтгрузку
	//rarus vikhle 01.09.2021 mt 18228 +++
	//|	И Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.СоглашениеОПоставке = &СоглашениеОПоставке
	//rarus vikhle 01.09.2021 mt 18228 ---
	|	И Scan_ЗаявкаНаОтгрузкуПродукты.Продукт В(&ПродуктыЗаявки)
	|	И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отказ)
	|	И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Продукт ""%1"" уже выбран в заявке ""%2"". Нельзя выбирать один продукт в двух различных заявках на отгрузку.';
		                                |en = 'The product ""1%"" is already picked up in the shipment request ""2%"". You cannot add the same product into two different shipment requests.'"), 
		                                Выборка.Продукт, Выборка.ЗаявкаНаОтгрузку);
		
		Сообщить(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.ПроектЗаявкиНаОтгрузку");
	
	Продукты.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СоглашениеОПоставке", СоглашениеОПоставке);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие КАК Продукт
	|ИЗ
	|	РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	|ГДЕ
	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = &СоглашениеОПоставке
	|	И НЕ Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие В
	|				(ВЫБРАТЬ
	|					Scan_ЗаявкаНаОтгрузкуПродукты.Продукт
	|				ИЗ
	|					Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	|				ГДЕ
	|					Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.СоглашениеОПоставке = &СоглашениеОПоставке
	|					И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.ПометкаУдаления
	|					И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отказ)
	|					И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие.НомерИзделия";
	
	Продукты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ВидКлючевойДаты = ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.БроньДилера");
	
	ЗаявкаОдобрена          = Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Одобрена");
	//ЗаявкаЧастичноИсполнена = Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.ЧастичноИсполнена"); //rarus bonmak 29.03.2021 17400
	//ЗаявкаИсполнена         = Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Исполнена"); //rarus bonmak 29.03.2021 17400
	//rarus agar 24.11.2020 16526 ++
	ЗаявкаОтменена          = Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена");
	ЗаявкаОтказ             = Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отказ");
	//rarus agar 24.11.2020 16526 --
	ЗаявкаПересмотр         = Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Пересмотр"); // rarus kabany 22.06.2021 17821 +

	Если ЗаявкаОдобрена Тогда
		//rarus bonmak 29.03.2021 17400 ++
		НоваяКлючеваяДата = ДатаОтгрузки; 
		//ТекущаяДата = ТекущаяДата();
		//НоваяКлючеваяДата = Дата(Год(ТекущаяДата), Месяц(ТекущаяДата), День(ТекущаяДата));
		//rarus bonmak 29.03.2021 17400 --
		
		Для Каждого СтрокаПродукта Из Продукты Цикл
			//rarus bonmak 29.03.2021 17400 ++
			//ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(СтрокаПродукта.Продукт);
			ПродуктСсылка = СтрокаПродукта.Продукт; 
			//rarus bonmak 29.03.2021 17400 --
			СтараяКлючеваяДата = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ПродуктСсылка, "БроньДилера"); //rarus bonmak 29.03.2021 17400
			//rarus agar 19.05.2021 17666 ++
			//Если СтараяКлючеваяДата = Дата(1,1,1) Тогда
			Если  ЗначениеЗаполнено(НоваяКлючеваяДата)
				И НоваяКлючеваяДата <> СтараяКлючеваяДата
				Тогда
				//rarus agar 19.05.2021 17666 --
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(ПродуктСсылка, ВидКлючевойДаты, НоваяКлючеваяДата); //rarus bonmak 29.03.2021 17400
			КонецЕсли;
			//rarus agar 21.01.2021 16981 ++
			//rarus agar 09.11.2020 16526 ++
			//Если ЗначениеЗаполнено(ЗаказНаЗавод) Тогда
			//	ЗаказНаЗаводОбъект = ЗаказНаЗавод.ПолучитьОбъект();
			//	Если ЗаказНаЗаводОбъект.СкладОтгрузки <> СкладОтгрузки Тогда
			//		ЗаказНаЗаводОбъект.СкладОтгрузки = СкладОтгрузки;
			//		Попытка
			//			ЗаказНаЗаводОбъект.Записать();
			//		Исключение 
			//			ТекстОшибки = "Произошла ошибка при записи заказа на завод: " + ОписаниеОшибки(); 
			//			Сообщить(ТекстОшибки);
			//			ЗаписьЖурналаРегистрации("Запись заказа на завод",
			//									УровеньЖурналаРегистрации.Ошибка,,ЗаказНаЗавод,
			//									ТекстОшибки);
			//		КонецПопытки;
			//	КонецЕсли;
			//КонецЕсли;
			//rarus agar 09.11.2020 16526 --
			//rarus agar 21.01.2021 16981 --
				
		КонецЦикла;
		// rarus agar 20.05.2021 17803 ++
		ПустаяДата = Дата(1,1,1);
		Для Каждого УдаленныйПродукт Из УдаленныеПродукты Цикл
			СтараяКлючеваяДата = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(УдаленныйПродукт, "БроньДилера");
			Если СтараяКлючеваяДата <> Дата(1,1,1) Тогда
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(УдаленныйПродукт, ВидКлючевойДаты, ПустаяДата);
			КонецЕсли;
		КонецЦикла;
		// rarus agar 20.05.2021 17803 --
		
		//rarus agar 26.01.2021 16981 ++
		//rarus vikhle 26.01.2021 mt 16981 +++
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//               |	Scan_Изделия.Ссылка КАК Продукт,
		//               |	Scan_Изделия.ЗапрашиваемоеМестоПередачи КАК ЗапрашиваемоеМестоПередачи
		//               |ИЗ
		//               |	Справочник.Scan_Изделия КАК Scan_Изделия
		//               |ГДЕ
		//               |	Scan_Изделия.Ссылка В (&ПродуктыЗаявки)
		//               |	И НЕ Scan_Изделия.ЗапрашиваемоеМестоПередачи = &ЗапрашиваемоеМестоПередачи";
		//Запрос.УстановитьПараметр("ПродуктыЗаявки",Продукты.ВыгрузитьКолонку("Продукт"));
		//Запрос.УстановитьПараметр("ЗапрашиваемоеМестоПередачи",СкладОтгрузки);
		//РезультатЗапроса = Запрос.Выполнить();
		//Выборка = РезультатЗапроса.Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	ПродуктОбъект = Выборка.Продукт.ПолучитьОбъект();
		//	ПродуктОбъект.ЗапрашиваемоеМестоПередачи = СкладОтгрузки;
		//	Попытка
		//		ПродуктОбъект.Записать();
		//	Исключение 
		//		ТекстОшибки = "Произошла ошибка при записи продукта: " + ОписаниеОшибки(); 
		//		Сообщить(ТекстОшибки);
		//		ЗаписьЖурналаРегистрации("Запись продукта",
		//		                         УровеньЖурналаРегистрации.Ошибка,,ПродуктОбъект.Ссылка,
		//		                         ТекстОшибки);
		//	КонецПопытки;
		//КонецЦикла;	
		//rarus vikhle 26.01.2021 mt 16981 ---
		//rarus agar 26.01.2021 16981 --
	//rarus bonmak 29.03.2021 17400 ++	
	//ИначеЕсли Не ЗаявкаЧастичноИсполнена И Не ЗаявкаИсполнена Тогда
	ИначеЕсли ЗаявкаОтменена ИЛИ ЗаявкаОтказ Тогда
	//rarus bonmak 29.03.2021 17400 --
	    //rarus vikhle 27.05.2021 m 17653 +++
		Если СтарыйСтатус = Статус Тогда
			Возврат;
		КонецЕсли;
		 //rarus vikhle 27.05.2021 m 17653 ---
		НоваяКлючеваяДата = Дата(1,1,1);
		ТаблицаСкладов = Документы.Scan_ЗаявкаНаОтгрузку.ПолучитьСкладыДоИзменений(Ссылка,ОбщегоНазначения.ВыгрузитьКолонку(Продукты,"Продукт"));//rarus vikhle 27.05.2021 mt 17653
		
		Для Каждого СтрокаПродукта Из Продукты Цикл
			//rarus bonmak 29.03.2021 17400 ++
			//ЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(СтрокаПродукта.Продукт);
			ПродуктСсылка = СтрокаПродукта.Продукт;
			//rarus bonmak 29.03.2021 17400 --
			СтараяКлючеваяДата = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ПродуктСсылка, "БроньДилера"); //rarus bonmak 29.03.2021 17400
			//rarus bonmak 10.08.2021 18130 ++
			//было перетерто ранее Если СтараяКлючеваяДата = Дата(1,1,1) Тогда
			Если СтараяКлючеваяДата <> Дата(1,1,1) Тогда
			//rarus bonmak 10.08.2021 18130 --	
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(ПродуктСсылка, ВидКлючевойДаты, НоваяКлючеваяДата); //rarus bonmak 29.03.2021 17400
			КонецЕсли;
			
			//rarus agar 21.01.2021 16981 ++
			//rarus agar 24.11.2020 16526 ++
			//Если  (ЗаявкаОтменена Или ЗаявкаОтказ)
			//	И ЗначениеЗаполнено(ЗаказНаЗавод)
			//	Тогда
			//	СкладОтгрузкиСоглашения = Неопределено;
			//	
			//	СтрокаПродуктаСоглашения = СоглашениеОПоставке.СписокПродуктов.Найти(СтрокаПродукта.Продукт, "Продукт");
			//	Если СтрокаПродуктаСоглашения <> Неопределено Тогда
			//		СкладОтгрузкиСоглашения = СтрокаПродуктаСоглашения.СкладОтгрузки;
			//	КонецЕсли;
			//	
			//	Если Не ЗначениеЗаполнено(СкладОтгрузкиСоглашения) Тогда
			//		Продолжить;
			//	КонецЕсли;
			//	
			//	ЗаказНаЗаводОбъект = ЗаказНаЗавод.ПолучитьОбъект();
			//	Если ЗаказНаЗаводОбъект.СкладОтгрузки <> СкладОтгрузкиСоглашения Тогда
			//		ЗаказНаЗаводОбъект.СкладОтгрузки = СкладОтгрузкиСоглашения;
			//		Попытка
			//			ЗаказНаЗаводОбъект.Записать();
			//		Исключение 
			//			ТекстОшибки = "Произошла ошибка при записи заказа на завод: " + ОписаниеОшибки(); 
			//			Сообщить(ТекстОшибки);
			//			ЗаписьЖурналаРегистрации("Запись заказа на завод",
			//			                         УровеньЖурналаРегистрации.Ошибка,,ЗаказНаЗавод,
			//			                         ТекстОшибки);
			//		КонецПопытки;
			//	КонецЕсли;
			//КонецЕсли;
			//rarus agar 24.11.2020 16526 --
			//rarus agar 21.01.2021 16981 --
			
			//rarus agar 26.01.2021 16981 ++
			//rarus vikhle 26.01.2021 mt 16981 +++
			//Если ЗаявкаОтказ ИЛИ ЗаявкаОтменена Тогда
			//	СтрокаЗаявкиНаСоп = СоглашениеОПоставке.СписокПродуктов.Найти(СтрокаПродукта.Продукт);
			//	Если СтрокаЗаявкиНаСоп <> Неопределено И СтрокаПродукта.Продукт.ЗапрашиваемоеМестоПередачи <> СтрокаЗаявкиНаСоп.СкладОтгрузки Тогда
			//		ПродуктОбъект = СтрокаПродукта.Продукт.ПолучитьОбъект();
			//		ПродуктОбъект.ЗапрашиваемоеМестоПередачи = СтрокаЗаявкиНаСоп.СкладОтгрузки;
			//		Попытка
			//			ПродуктОбъект.Записать();
			//		Исключение 
			//			ТекстОшибки = "Произошла ошибка при записи продукта: " + ОписаниеОшибки(); 
			//			Сообщить(ТекстОшибки);
			//			ЗаписьЖурналаРегистрации("Запись продукта",
			//			                         УровеньЖурналаРегистрации.Ошибка,,ПродуктОбъект.Ссылка,
			//			                         ТекстОшибки);
			//		КонецПопытки;
			//	КонецЕсли;	
			//КонецЕсли;	
			//rarus vikhle 26.01.2021 mt 16981 ---
			//rarus agar 26.01.2021 16981 --
			
			//rarus vikhle 27.05.2021 m 17653 +++
			ПродуктОбъект = СтрокаПродукта.Продукт.ПолучитьОбъект();
			ПродуктОбъект.Заблокировать();//rarus vikhle 06.08.2021 АПК
			// Для записи источника и статуса в регистре история продуктов.
			ПродуктОбъект.ДополнительныеСвойства.Вставить("Источник",Ссылка);
			ПродуктОбъект.ДополнительныеСвойства.Вставить("Статус",Статус);
			
			СтрокаТаблицыСкладов = ТаблицаСкладов.Найти(ПродуктОбъект.Ссылка);
			Если СтрокаТаблицыСкладов <> Неопределено Тогда
				Если СтрокаПродукта.Продукт.СкладПродажи <> СтрокаТаблицыСкладов.СкладПродажи Тогда
					ПродуктОбъект.СкладПродажи = СтрокаТаблицыСкладов.СкладПродажи; 	
				КонецЕсли;	
				Если СтрокаПродукта.Продукт.МестоПередачи <> СтрокаТаблицыСкладов.МестоПередачи Тогда
					ПродуктОбъект.МестоПередачи = СтрокаТаблицыСкладов.МестоПередачи; 	
				КонецЕсли;
			КонецЕсли;	
			
			СтрокаЗаявкиНаСоп = СоглашениеОПоставке.СписокПродуктов.Найти(СтрокаПродукта.Продукт);
			Если СтрокаЗаявкиНаСоп <> Неопределено Тогда
				Если СтрокаПродукта.Продукт.ЗапрашиваемоеМестоПередачи <> СтрокаЗаявкиНаСоп.СкладОтгрузки Тогда
					ПродуктОбъект.ЗапрашиваемоеМестоПередачи = СтрокаЗаявкиНаСоп.СкладОтгрузки;
				КонецЕсли;
			КонецЕсли;
			
			Если ПродуктОбъект.Модифицированность() Тогда
				Попытка
					ПродуктОбъект.Записать();
				Исключение 
					ТекстОшибки = "Произошла ошибка при записи продукта: " + ОписаниеОшибки(); 
					Сообщить(ТекстОшибки);
					ЗаписьЖурналаРегистрации(Нстр("ru = 'Запись продукта'",ОбщегоНазначения.КодОсновногоЯзыка()), //rarus vikhle 12.07.2021 АПК локализация 1го параметра
					                         УровеньЖурналаРегистрации.Ошибка,,СтрокаПродукта.Продукт,
					                         ТекстОшибки);
				КонецПопытки;
			КонецЕсли;
			//rarus vikhle 27.05.2021 m 17653 ---
		КонецЦикла;
		//rarus vikhle 27.05.2021 m 17653 +++
		Если ДополнительныеСвойства.Свойство("НужноУведомитьОбОтмене") И ДополнительныеСвойства.НужноУведомитьОбОтмене Тогда
			РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонПисьмаОбОтменеЗаявкиНаОтгрузку",Ссылка);
		КонецЕсли;	
		//rarus vikhle 27.05.2021 m 17653 ---
		
		// rarus kabany 22.06.2021 17821 +++
		Если ЗаявкаОтказ Тогда
			РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонПисьмаОСменеСтатусаЗаявкиНаОтгрузку",Ссылка);
		КонецЕсли;
	// rarus kabany 23.06.2021 17821 +++	
	//ИначеЕсли ЗаявкаПересмотр Тогда	
	//	
	//	Если СтарыйСтатус = Статус Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	РезультатОтправкиПисьма = Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава("ШаблонПисьмаОСменеСтатусаЗаявкиНаОтгрузку",Ссылка);
		// rarus kabany 23.06.2021 17821 ---
		
		// rarus kabany 22.06.2021 17821 ---
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ДатаОтгрузки <> Ссылка.ДатаОтгрузки Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаОтгрузки",     ДатаОтгрузки);
		Запрос.УстановитьПараметр("ЗаявкаНаОтгрузку", Ссылка);
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	МАКСИМУМ(Scan_ЗаявкаНаОтгрузку.Порядок) + 1 КАК Порядок
		|ИЗ
		|	Документ.Scan_ЗаявкаНаОтгрузку КАК Scan_ЗаявкаНаОтгрузку
		|ГДЕ
		|	Scan_ЗаявкаНаОтгрузку.ДатаОтгрузки = &ДатаОтгрузки
		|	И Scan_ЗаявкаНаОтгрузку.Ссылка <> &ЗаявкаНаОтгрузку
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок УБЫВ";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			Порядок = Выборка.Порядок;
		КонецЕсли;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.Отменена");
	КонецЕсли;
	
	// rarus agar 20.05.2021 17803 ++
	ПродуктыЗаявкиНаОтгрузку = ОбщегоНазначения.ВыгрузитьКолонку(Продукты, "Продукт", Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПродуктыЗаявкиНаОтгрузку", ПродуктыЗаявкиНаОтгрузку);
	Запрос.УстановитьПараметр("ЗаявкаНаОтгрузкуСсылка",   Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Продукт КАК Продукт
	|ИЗ
	|	Документ.Scan_ЗаявкаНаОтгрузку.Продукты КАК Scan_ЗаявкаНаОтгрузкуПродукты
	|ГДЕ
	|	Scan_ЗаявкаНаОтгрузкуПродукты.Ссылка = &ЗаявкаНаОтгрузкуСсылка
	|	И НЕ Scan_ЗаявкаНаОтгрузкуПродукты.Продукт В (&ПродуктыЗаявкиНаОтгрузку)";
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	УдаленныеПродукты = ОбщегоНазначения.ВыгрузитьКолонку(РезультатЗапроса, "Продукт", Истина);
	// rarus agar 20.05.2021 17803 --
	СтарыйСтатус = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка,"Статус");//rarus vikhle 27.05.2021 m 17653
	
КонецПроцедуры



