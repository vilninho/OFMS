#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Перем ИзмРекв;

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	МенеджерНовый = ПользователиКлиентСервер.ТекущийПользователь();
	Если МенеджерНовый <> Менеджер Тогда
		Менеджер = МенеджерНовый;
		Организация = МенеджерНовый.Организация;
		ПодразделениеКомпании = МенеджерНовый.ПодразделениеОрганизации;
	КонецЕсли;
	
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ?(ЭтотОбъект.ЭтоНовый(), ИСТИНА, ЛОЖЬ));
	
	ИзмРекв = Новый Массив;
	//Если новый - запишем заполненные реквизиты
	Если ЭтотОбъект.ЭтоНовый() тогда
		Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
			Если ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("Булево") и ЭтотОбъект[Рекв.Имя] = Ложь Тогда
				Продолжить;
			ИначеЕсли Не ЗначениеЗаполнено(ЭтотОбъект[Рекв.Имя]) Тогда
				Продолжить;
			ИначеЕсли ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("ХранилищеЗначения") Тогда
				Продолжить;
			КонецЕсли;
			ИзмРекв.Добавить(Рекв.Имя);
		КонецЦикла;
	Иначе  //если не новый - то измененные
		Если Не ЭтотОбъект.ДополнительныеСвойства.Свойство("НеЗаписыватьВРегистр") Тогда 
			Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
				Если  (ЭтотОбъект[Рекв.Имя] <> ссылка[Рекв.Имя])
					И ТипЗнч(ЭтотОбъект[Рекв.Имя]) <> Тип("ХранилищеЗначения")
					Тогда
					ИзмРекв.Добавить(Рекв.Имя);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	//для старых объектов, у которых нет данных в регистре - запишем заполненные
	Если ИзмРекв.Количество() = 0 И НетИсторииВРегистре(Ссылка) Тогда
		Для каждого Рекв из ЭтотОбъект.Метаданные().Реквизиты Цикл
			Если ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("Булево") и ЭтотОбъект[Рекв.Имя] = Ложь Тогда
				Продолжить;
			ИначеЕсли Не ЗначениеЗаполнено(ЭтотОбъект[Рекв.Имя]) Тогда
				Продолжить;
			ИначеЕсли ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("ХранилищеЗначения") Тогда
				Продолжить;
			КонецЕсли;
			ИзмРекв.Добавить(Рекв.Имя);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Scan_СпецификацияСтандартнойМодели") Тогда
		// На основании док-та спецификации создается только корректировка
		
		ИспользуетсяВРазделеКалькуляции = ДанныеЗаполнения.ИспользуетсяВРазделеКалькуляции; 
		НомерСпецификации = ДанныеЗаполнения.НомерСпецификации;
		ДействуетСPP = ДанныеЗаполнения.ДействуетСPP;
		ДействуетСДаты = ДанныеЗаполнения.ДействуетСДаты;
		ОписаниеСпецификации  = ДанныеЗаполнения.ОписаниеСпецификации;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		SOrder = ДанныеЗаполнения.SOrder;
		FFU = ДанныеЗаполнения.FFU;
		ПоставщикНадстроек = ДанныеЗаполнения.ПоставщикНадстроек;
		ПоставщикОборудования = ДанныеЗаполнения.ПоставщикОборудования;

		ДатаСоздания = ТекущаяДата();
		Статус = Справочники.Scan_СтатусыЗаявокНаДействие.Новая;
		Корректировка = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) //rarus bonmak 26.03.2020 15466 ++
	
	// rarus agar 26.04.2021 17394 ++
	УдаляемыйРеквизит = ПроверяемыеРеквизиты.Найти("ИспользуетсяВРазделеКалькуляции");
	Если Не ИспользуетсяВКалькуляции 
		И   УдаляемыйРеквизит <> Неопределено 
		Тогда
		ПроверяемыеРеквизиты.Удалить(УдаляемыйРеквизит);
	КонецЕсли;
	// rarus agar 26.04.2021 17394 --
	
	// Проверим заполненность реквизитов
	ТекРеквизит = ПроверяемыеРеквизиты.Найти("ИспользуетсяВРазделеКалькуляции");
	Если Не ЗначениеЗаполнено(ИспользуетсяВРазделеКалькуляции) 
		И   ТекРеквизит <> Неопределено // rarus agar 26.04.2021 17394 +-
		Тогда
		
		// Если он не заполнен, сообщим об этом пользователю
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Поле ""Раздел калькуляции"" не заполнено';
				|en = 'Field ""Costing section"" is empty'");
		Сообщение.Поле = "ИспользуетсяВРазделеКалькуляции";
		Сообщение.УстановитьДанные(ЭтотОбъект);	
		Сообщение.Сообщить();	
		ПроверяемыеРеквизиты.Удалить(ТекРеквизит);
		Отказ = Истина;
	КонецЕсли;
	
	ТекРеквизит = ПроверяемыеРеквизиты.Найти("НомерСпецификации");
	Если Не ЗначениеЗаполнено(НомерСпецификации) Тогда
		
		// Если он не заполнен, сообщим об этом пользователю
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Поле ""№"" не заполнено';
				|en = 'Field ""№"" is empty'");
		Сообщение.Поле = "НомерСпецификации";
		Сообщение.УстановитьДанные(ЭтотОбъект);	
		Сообщение.Сообщить();	
		ПроверяемыеРеквизиты.Удалить(ТекРеквизит);
		Отказ = Истина;
	КонецЕсли;
	
	ТекРеквизит = ПроверяемыеРеквизиты.Найти("ДействуетСДаты");
	Если Не ЗначениеЗаполнено(ДействуетСДаты) Тогда
		
		// Если он не заполнен, сообщим об этом пользователю
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Поле ""Действует с даты"" не заполнено';
				|en = 'Field ""Valid from date"" is empty'");
		Сообщение.Поле = "ДействуетСДаты";
		Сообщение.УстановитьДанные(ЭтотОбъект);	
		Сообщение.Сообщить();	
		ПроверяемыеРеквизиты.Удалить(ТекРеквизит);
		Отказ = Истина;
	КонецЕсли;
	
	ТекРеквизит = ПроверяемыеРеквизиты.Найти("ОписаниеСпецификации");
	Если Не ЗначениеЗаполнено(ОписаниеСпецификации) Тогда
		
		// Если он не заполнен, сообщим об этом пользователю
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Поле ""Описание"" не заполнено';
				|en = 'Field ""Description"" is empty'");
		Сообщение.Поле = "ОписаниеСпецификации";
		Сообщение.УстановитьДанные(ЭтотОбъект);	
		Сообщение.Сообщить();	
		ПроверяемыеРеквизиты.Удалить(ТекРеквизит);
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДействуетСPP) Тогда 
		Отказ = Отказ Или РегистрыСведений.Scan_ИнформацияПоPartPeriod.ПроверитьПартПериод(ДействуетСPP);
		Если Отказ Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//rarus agar 14.05.2020  15466 Доп1 ++
	Если  ЗначениеЗаполнено(ДействуетСДаты)
		И ЗначениеЗаполнено(ДействуетСPP)
		И Не Scan_ЦенообразованиеСервер.ДатаСоответствуетPartPeriod(ДействуетСДаты, ДействуетСPP) 
		Тогда
		Сообщить(НСтр("ru = 'Указанный Part Period не соответствует дате начала действия'; en = 'The Part Period does not match the From Date'"));
		Отказ = Истина;
	КонецЕсли;
	//rarus agar 14.05.2020  15466 Доп1 --
	
	//rarus agar 13.05.2020 15466 Доп1 ++
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СпецификацияСсылка", Ссылка);
	Запрос.УстановитьПараметр("НомерСпецификации",  СокрЛП(НомерСпецификации));
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Scan_СпецификацияСтандартнойМодели.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Scan_СпецификацияСтандартнойМодели КАК Scan_СпецификацияСтандартнойМодели
	|ГДЕ
	|	Scan_СпецификацияСтандартнойМодели.Ссылка <> &СпецификацияСсылка
	|	И Scan_СпецификацияСтандартнойМодели.НомерСпецификации = &НомерСпецификации
	|	И Scan_СпецификацияСтандартнойМодели.Статус = ЗНАЧЕНИЕ(Справочник.Scan_СтатусыЗаявокНаДействие.ВРаботе)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Спецификация стандартной модели с таким номером и статусом В работе уже существует';
				               |en = 'STD with the same number is already exists'");
		Сообщение.Поле = "НомерСпецификации";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	//rarus agar 13.05.2020 15466 Доп1 --
	
	// rarus agar 26.04.2021 17394 ++
	Если  ИспользуетсяВКалькуляции 
		И Спецификация.Количество() = 0
		Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не заполнена спецификация (базовые опции)';
				               |en = 'Basic options table is empty'");
		Сообщение.Поле = "Спецификация";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	// rarus agar 26.04.2021 17394 --
	
КонецПроцедуры //rarus bonmak 26.03.2020 15466 --

Процедура ПриЗаписи(Отказ)
	
	Если Не Отказ Тогда
		АвторизованныйПользователь = ПользователиСлужебный.АвторизованныйПользователь();
		Для Каждого Реквизит Из ИзмРекв Цикл
			НоваяЗапись = РегистрыСведений.Scan_ХарактеристикиSTD.СоздатьМенеджерЗаписи();
			НоваяЗапись.Период = ТекущаяДата();
			НоваяЗапись.Спецификация = Ссылка;
			НоваяЗапись.ВидЗначения  = Перечисления.Scan_ДополнительнаяИнформацияПоSTD[Реквизит];
			НоваяЗапись.Значение     = Ссылка[Реквизит];
			НоваяЗапись.Пользователь = АвторизованныйПользователь;
			НоваяЗапись.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//rarus agar 13.05.2020 15466 Доп1 ++
Процедура ПриКопировании(ОбъектКопирования)
	
	Статус = Справочники.Scan_СтатусыЗаявокНаДействие.Новая;
	
КонецПроцедуры
//rarus agar 13.05.2020 15466 Доп1 --

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НетИсторииВРегистре(Спецификация) 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ХарактеристикиSTD.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.Scan_ХарактеристикиSTD КАК Scan_ХарактеристикиSTD
	|ГДЕ
	|	Scan_ХарактеристикиSTD.Спецификация = &Спецификация";
	
	Возврат Запрос.Выполнить().Выбрать().Количество() = 0;
	
КонецФункции

#КонецОбласти

#КонецЕсли
