&НаСервере
Перем МассивДоставленныхПродуктов;		// rarus tenkam 01.08.2018 mantis 13375 + 
Перем МассивПродуктовСИзмененнойПлановойДатой;		// rarus tenkam 16.08.2018 mantis 13381 +
Перем ИзменениеПодтвержденнойЗаявки;		// rarus tenkam 16.08.2018 mantis 13381 +

//rarus tenkam 25.10.2016 TLMS 011 (Распределила код хотя бы по блокам)
//Видимо документ создавался под кейсом 7122 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//tenkam: !согласование было добавлено под другим кейсом (не 7122)

//rarus sergei 17.08.2016 mantis 7122 ++
&НаКлиенте
Процедура НадписьСогласованНажатие(Элемент)
		
	Отказ = Ложь;
	Scan_ОбщегоНазначенияКлиент.ПроверитьЗаписьНовогоОбъектаВФорме(ЭтаФорма, Объект.Ссылка,,, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьОткрытьСогласование();
	СтатусСогласования = Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка);
	ПоказатьЗначение(,СтатусСогласования.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусСогласования()
	Если Объект.ТребуетСогласования Тогда
		Элементы.ГруппаНадписьСогласован.ТекущаяСтраница = Элементы.ГруппаНадписьСогласованНадпись;
		Если Объект.Ссылка.Пустая() Тогда
			Элементы.НадписьСогласован.Заголовок = "Не согласован";
			Элементы.НадписьСогласован.Гиперссылка = Истина;
		Иначе
			СтатусСогласования = Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка);
			Элементы.НадписьСогласован.Заголовок = СтатусСогласования.Статус;
			Элементы.НадписьСогласован.Гиперссылка = Истина;
			//Элементы.ТребуетСогласования.Доступность = (СтатусСогласования.Код = 0);
		КонецЕсли;
		Если Элементы.НадписьСогласован.Заголовок = "Согласован" Тогда
			Элементы.НадписьСогласован.ЦветТекста = WebЦвета.Зеленый;
		Иначе
			Элементы.НадписьСогласован.ЦветТекста = WebЦвета.Красный;
		КонецЕсли;
	Иначе
		Элементы.ГруппаНадписьСогласован.ТекущаяСтраница = Элементы.ГруппаНадписьСогласованПустая;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьОткрытьСогласование()
	
	СтатусСогласования = Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка);
	Если СтатусСогласования.Код = 0 Тогда 
		//если согласования нет вообще, то введем на основании новое
		ПараметрыОткрытия = Новый Структура("Основание", Объект.Ссылка);
		//ОткрытьФорму("БизнесПроцесс.Scan_Согласование.ФормаОбъекта", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		НовыйБП = БизнесПроцессы.Scan_Согласование.СоздатьБизнесПроцесс();
		НовыйБП.Дата = ТекущаяДата();
		НовыйБП.УстановитьНовыйНомер();
		НовыйБП.Заполнить(Объект.Ссылка);
		Попытка
			НовыйБП.Записать();
			НовыйБП.Старт();
			//rarus FominskiyAS 25.04.2019  mantis 14191 +++
			//Сообщить("Для документа было создано согласование """ + НовыйБП.Ссылка + """");
			Сообщить(НСтр("ru = 'Для документа было создано согласование ""'; en = '""Approval"" was created for this document ""'") + НовыйБП.Ссылка + """");
			//rarus FominskiyAS 25.04.2019  mantis 14191 ---
		Исключение
			//rarus FominskiyAS 25.04.2019  mantis 14191 +++
			//Сообщить("Для документа не удалось создать согласование!", СтатусСообщения.Внимание);
			Сообщить(НСтр("ru = 'Для документа не удалось создать согласование!'; en = 'Action failed!'"), СтатусСообщения.Внимание);
			//rarus FominskiyAS 25.04.2019  mantis 14191 ---  
		КонецПопытки;

	Иначе 
		//если согласование есть, то просто откроем его форму
		//ПоказатьЗначение(,СтатусСогласования.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТребуетСогласованияПриИзменении(Элемент)
		
	ТребуетСогласования = Объект.ТребуетСогласования;
	
	//запрет изменения флага для проведенного документа
	Если Объект.Проведен И ТребуетСогласования Тогда
		Объект.ТребуетСогласования = Ложь;	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ проведен! Отмените проведение и установите флаг повторно!");
		Модифицированность = Ложь;
	КонецЕсли;
	
	//запрет изменения флага, если запущен бизнес-процесс согласования
	Если НЕ ТребуетСогласования И Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка).Код <> 0 Тогда
		Объект.ТребуетСогласования = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Невозможно отменить согласование, бизнес-процесс уже запущен!");
		Модифицированность = Ложь;
	КонецЕсли;
	
	ОбновитьСтатусСогласования();

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокЗадач(Команда)
	ОткрытьФорму("Задача.ЗадачаИсполнителя.Форма.ФормаСписка",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

// Обработчик события возникающего при нажатии программно добавленной кнопки.
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Подключаемый_ОбработкаКомандыФормы(Команда) Экспорт
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект, ЭтотОбъект.Окно, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	//// Обработаем событие в контексте сервера
	//ОбработкаКомандыФормыНаСервере(Команда.Имя, ПараметрыДействия);
	//
	//// Вызываем обработчик результата выполнения
	//ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры // Подключаемый_ОбработкаКомандыФормы()

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
		
КонецПроцедуры // Подключаемый_ОбработкаРезультатаОповещения()

Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
		
	// Обновляем отображение элементов формы
	//УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ОбработкаРезультатаОповещенияНаСервере()

// Обработчик события возникающего на клиенте при открытии параметров документа.
//
// Параметры:
//  Элемент              - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
КонецПроцедуры

// Обработчик события возникающего на сервере при сохранении значений реквизитов и настроек формы.
//
// Параметры:
//  Настройки - Соответствие - Значения сохраняемых реквизитов и настроек формы.
//
&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
		
	// Вызываем общий обработчик события
	Scan_УправлениеДиалогомДокументаСервер.ПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
	

КонецПроцедуры

// Обработчик события возникающего на сервере при восстановлении значений реквизитов из сохраненных настроек формы.
//
// Параметры:
//  Настройки - Соответствие - Значения сохраненных реквизитов и настроек формы.
//
&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	// Вызываем общий обработчик события
	Scan_УправлениеДиалогомДокументаСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);

КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Открываем форму расширенного редактирования параметров документа
	Scan_УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);

КонецПроцедуры

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	// TODO: Пересмотреть нестандартное внедрение в пользу стандартного.
	////rarus sergei 28.09.2016 mantis 7160 ++
 //СтруктураВозврДанные = ОткрытьФормуМодально("Документ.Scan_ЗаявкаПеревозчику.Форма.ФормаНастроекПечати",,,);
 //rarus sergei 28.09.2016 mantis 7160 --
 //УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);	// rarus tenkam 25.06.2021 OFMS устранение ошибок Sonar Qube (АПК) 
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

// rarus tenkam 25.06.2021 OFMS устранение ошибок Sonar Qube (АПК) ++
//// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
//&НаСервере
//Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
// 
// ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
// 
//КонецПроцедуры
// rarus tenkam 25.06.2021 OFMS устранение ошибок Sonar Qube (АПК) --

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	
	// rarus tenkam 11.10.2016 mantis 7183 ++  (перенесла в конец процедуры)
	////rarus sergei 01.09.2016 mantis 7167 ++
	//ВремяПолучения = '00010101'+(Объект.ДатаПолучения - НачалоДня(Объект.ДатаПолучения));
	//ВремяДоставки  = '00010101'+(Объект.ДатаДоставки - НачалоДня(Объект.ДатаДоставки));
	//ВремяУходаФакт = '00010101' + (Объект.ДатаУходаФакт - НачалоДня(Объект.ДатаУходаФакт));		//rarus tenkam 05.10.2016 mantis 7183 + 
	// rarus tenkam 11.10.2016 mantis 7183 --
	Если ЗначениеЗаполнено(Параметры.Основание) Тогда
		Если ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.Scan_ЗаявкаНаДействие") Тогда	//rarus tenkam 06.02.2017 mantis 7750 +
			Если  Параметры.Основание.ХозОперация <> Справочники.Scan_ХозяйственныеОперации.Доставка И
				//rarus tenkam 08.02.2017 mantis 8331 +++
				Параметры.Основание.ХозОперация <> Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение И  
				Параметры.Основание.ХозОперация <> Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство И   
				//rarus tenkam 08.02.2017 mantis 8331 ---
				Параметры.Основание.ХозОперация <> Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК И
				Параметры.Основание.ХозОперация <> Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК И
				Параметры.Основание.ХозОперация <> Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК И	//rarus tenkam 26.09.2017 mantis 10742 +
				Параметры.Основание.ХозОперация <> Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК	И
				Параметры.Основание.ХозОперация <> Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
				Сообщить("Нельзя создать заявку перевозчику на основании документа заявка на действие с хозяйственной операцией; "+Параметры.Основание.ХозОперация);
				Отказ = Истина;
			КонецЕсли; 
			//rarus tenkam 06.02.2017 mantis 7750 +++
		ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.Scan_ЗаявкаПеревозчику") И
			(Параметры.Свойство("ДобавитьИзделия") ИЛИ Параметры.Свойство("ИсключитьИзделия")) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Scan_КорректировкаИнформацииПоЗаявкам.Изделие,
			|	Scan_КорректировкаИнформацииПоЗаявкам.ЗаявкаНаДействие
			|ИЗ
			|	РегистрСведений.Scan_КорректировкаИнформацииПоЗаявкам КАК Scan_КорректировкаИнформацииПоЗаявкам
			|ГДЕ
			|	Scan_КорректировкаИнформацииПоЗаявкам.GuidСтроки В (&ВыбранныеСтроки)";
			
			МассивGUIDов = ?(Параметры.Свойство("ДобавитьИзделия"), Параметры.ДобавитьИзделия, Параметры.ИсключитьИзделия);
			Запрос.УстановитьПараметр("ВыбранныеСтроки",МассивGUIDов);
			ТабРезультат = Запрос.Выполнить().Выгрузить();
			
			Если Параметры.Свойство("ДобавитьИзделия") Тогда
				
				Для Каждого ТекСтрока Из ТабРезультат Цикл
					СтрокаТЧ = Объект.СоставЗаявки.Добавить();
					СтрокаТЧ.ЗаявкаНаДействие = ТекСтрока.ЗаявкаНаДействие;
					СтрокаТЧ.Изделие = ТекСтрока.Изделие;
					Дилер = Справочники.Scan_Изделия.ПолучитьДилера(ТекСтрока.Изделие);
					СтрокаТЧ.Дилер = Дилер;
					
					// rarus tenkam 10.04.2018 mantis 12907 +++
					СтрокаТЧ.ДатаДоставкиПлан = ТекСтрока.ЗаявкаНаДействие.ДатаДоставкиПлановая;		
					// rarus tenkam 10.04.2018 mantis 12907 ---
					
					ПараметрыОтбора = Новый Структура("Документ", ТекСтрока.ЗаявкаНаДействие);
					ЗаявкаНаДействиеОснование = Объект.ДокументыОснования.НайтиСтроки(ПараметрыОтбора);
					Если ЗаявкаНаДействиеОснование.Количество() = 0 Тогда
						СтрокаДокументыОснования = Объект.ДокументыОснования.Добавить();
						СтрокаДокументыОснования.Документ = ТекСтрока.ЗаявкаНаДействие;
					КонецЕсли;
				КонецЦикла; 
			ИначеЕсли Параметры.Свойство("ИсключитьИзделия") Тогда
				
				Для Каждого ТекСтрока Из ТабРезультат Цикл
					ПараметрыОтбора = Новый Структура("Изделие", ТекСтрока.Изделие);
					СтрокиКУдалению = Объект.СоставЗаявки.НайтиСтроки(ПараметрыОтбора);
					Если СтрокиКУдалению.Количество() <> 0 Тогда
						УдаляемаяСтрока = СтрокиКУдалению[0];
						Объект.СоставЗаявки.Удалить(УдаляемаяСтрока);
					КонецЕсли;
				КонецЦикла;      
				//Заново зададим документы-основания
				НовыеДокументыОснования = Новый Массив;
				Для Каждого ТекСтрока Из Объект.СоставЗаявки Цикл
					ДобавляемыйДокумент = НовыеДокументыОснования.Найти(ТекСтрока.ЗаявкаНаДействие);
					Если ДобавляемыйДокумент = Неопределено Тогда
						НовыеДокументыОснования.Добавить(ТекСтрока.ЗаявкаНаДействие); 
					КонецЕсли; 
				КонецЦикла;
				
				Объект.ДокументыОснования.Очистить();
				Для Каждого ТекДокумент Из НовыеДокументыОснования Цикл
					НоваяСтрока = Объект.ДокументыОснования.Добавить();
					НоваяСтрока.Документ = ТекДокумент;				
				КонецЦикла; 
				НоваяСтрока = Объект.ДокументыОснования.Добавить();
				НоваяСтрока.Документ = Объект.ДокументОснованиеКорректировки;
				
			КонецЕсли;
			//rarus tenkam 06.02.2017 mantis 7750 ---
		КонецЕсли; 
	КонецЕсли;
	//tenkam TLMS 011 ++
	//Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	НастроитьОтображениеСторнированногоДокумента();	
	//КонецЕсли;
	УправлениеДиалогомНаСервере();
	//tenkam TLMS 011 --
	
	//rarus sergei 01.09.2016 mantis 7167 --
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если НЕ Параметры.ЗначениеКопирования.Пустая() Тогда
		Если Параметры.ЗначениеКопирования.Корректировка = Истина Тогда
			Отказ=Истина; 
			СтандартнаяОбработка = Ложь;
			Сообщить("Нельзя создать корректировочный документ копированием");
		КонецЕсли;
		Если Параметры.ЗначениеКопирования.Сторнирован = Истина Тогда
			Отказ=Истина; 
			СтандартнаяОбработка = Ложь;
			Сообщить("Нельзя создать сторнированный документ копированием");
		КонецЕсли;	
	
	КонецЕсли;
	
	//Если НЕ Параметры.ЗначениеКопирования.Пустая() Тогда
	//	Если Параметры.ЗначениеКопирования.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ЗаявкаПеревозчикуКорректировка Тогда
	//		Отказ=Истина; 
	//		СтандартнаяОбработка = Ложь;
	//		Сообщить("Нельзя создать документ с операцией ""Корректировка"" копированием");
	//		
	//	КонецЕсли;	
	//КонецЕсли;
	//rarus sergei 01.09.2016 mantis 7167 ++
	Если Параметры.Свойство("МассивВыбранныхСтрок") Тогда
		Отказ = НЕ Документы.Scan_ЗаявкаПеревозчику.ПроверитьВыбранныеСсылки(Параметры.МассивВыбранныхСтрок);	
		Если Отказ Тогда
			Возврат;			
		КонецЕсли;
		ЗаполнитьИнформациюПоДоставке(Параметры.МассивВыбранныхСтрок[0]);
		ЗаполнитьСоставЗаявки(Параметры.МассивВыбранныхСтрок);
		СписокЗаявокНаДействие = ПолучитьСписокЗаявокНаДействие(Параметры.МассивВыбранныхСтрок);
		ЗаполнитьКИПолучателяИзЗаявки(СписокЗаявокНаДействие);
		Для каждого Документ Из СписокЗаявокНаДействие Цикл
		    НоваяСтрока = Объект.ДокументыОснования.Добавить();
			НоваяСтрока.Документ = Документ;
		КонецЦикла; 
		//rarus tenkam 11.10.2016 mantis 7183 ++
		//Если СписокЗаявокНаДействие.Количество() = 1 Тогда	//rarus tenkam 13.12.2016 mantis 7750 + (закомментировала условие, убрала [0])
			ЗаполнитьШапкуПоЗаявкеНаДействие(СписокЗаявокНаДействие);	
		//КонецЕсли;
		//rarus tenkam 11.10.2016 mantis 7183 --
	КонецЕсли;
	//rarus sergei 01.09.2016 mantis 7167 --
	
	
	Scan_ВспомогательныеФункцииСервер.ИнициализироватьМенюВыбораХозОперации(ЭтаФорма);
	// Вызываем общий обработчик события
	Если НЕ Scan_УправлениеДиалогомДокументаСервер.ПриСозданииНаСервере(ЭтотОбъект, Параметры, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого строкаТЧ Из Объект.СоставЗаявки Цикл
		строкаТЧ.СтатусИзделия = Scan_ВспомогательныеФункцииСервер.ЧтениеСтатусаИзделияИзРегистраСведений(строкаТЧ.Изделие,СтрокаТЧ.ЗаявкаНаДействие);
		строкаТЧ.НомерИДатаЗаявкиНаДействие = "№ "+строка(строкаТЧ.ЗаявкаНаДействие.Номер)+ " от "+строка(строкаТЧ.ЗаявкаНаДействие.Дата);
		СтрокаТЧ.ТипТоплива = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
	КонецЦикла;	
	
	//rarus pechek 02.04.2020 mantis 15672 +++
	Если ЗначениеЗаполнено(Объект.МестоОтгрузки) Тогда
		Объект.КонтактыОтправителя.Очистить();
		ТекстЗапроса = "ВЫБРАТЬ
		               |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо КАК КонтактноеЛицо
		               |ИЗ
		               |	РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
		               |ГДЕ
		               |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.МестоХранения = &МестоХранения
		               |	И Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ";
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("МестоХранения",Объект.МестоОтгрузки);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			ЗаполнитьКонтактнуюинформацию(Выборка.КонтактноеЛицо);
		КонецЦикла;
	КонецЕсли;
	//rarus pechek 02.04.2020 mantis 15672 --

	//rarus tenkam 11.10.2016 mantis 7183 ++
	//Если НЕ ЗначениеЗаполнено(Объект.Маршрут) И ЗначениеЗаполнено(Объект.МестоОтгрузки) И ЗначениеЗаполнено(Объект.МестоДоставки) Тогда
	//	Элементы.ДобавитьМаршрут.Доступность = Истина;
	//Иначе
	//	Элементы.ДобавитьМаршрут.Доступность = Ложь;
	//КонецЕсли;
	УправлениеДиалогомНаСервере();	//rarus tenkam TLMS 011
	
	ВремяПолучения = '00010101'+(Объект.ДатаПолучения - НачалоДня(Объект.ДатаПолучения));
	ВремяДоставки  = '00010101'+(Объект.ДатаДоставки - НачалоДня(Объект.ДатаДоставки));
	ВремяУходаФакт = '00010101' + (Объект.ДатаУходаФакт - НачалоДня(Объект.ДатаУходаФакт));		//rarus tenkam 05.10.2016 mantis 7183 + 
	//rarus tenkam 11.10.2016 mantis 7183 --
	
	//rarus tenkam 25.04.2017 mantis 9438 +++
	Если (Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.ВРаботе ИЛИ
		Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Подтверждена) И
		Объект.ОказанныеУслуги.Количество() <> 0 Тогда
		ОбновитьТарифыНаСервере();
		//rarus abrant 31.05.2017 mantis 9864 +++
		Объект.СуммаОказанныхУслуг = Объект.ОказанныеУслуги.Итог("Всего");
		//rarus abrant 31.05.2017 mantis 9864 ---
	КонецЕсли;		
	//rarus tenkam 25.04.2017 mantis 9438 ---
	
	Scan_СборСтатистики.Scan_ПриОткрытии("Документы", РеквизитФормыВЗначение("Объект").Метаданные().Синоним); // Rarus tenkam 11.04.2022 mantis 18433 +	

	// Дальнейшие операции выпольняются только для новых документов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Возврат;
	КонецЕсли;
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь() ;
	// rarus agar 22.12.2022 19668 ++
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = ТекущийПользователь.Организация;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ПодразделениеКомпании) Тогда
		Объект.ПодразделениеКомпании = ТекущийПользователь.ПодразделениеОрганизации;
	КонецЕсли;
	// rarus agar 22.12.2022 19668 --
	Объект.Автор = ТекущийПользователь;
	Объект.Менеджер = ТекущийПользователь;
	Объект.Дата = ТекущаяДата();
	Объект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");		//rarus tenkam 06.10.2016 mantis 7122 +
	//rarus vikhle 22.04.2020 mt 15695 +++	
	Scan_ВспомогательныеФункцииСервер.ЗаполнитьКомпаниюИКонтрагента(ТекущийПользователь,Объект.Компания,Объект.Контрагент);
	//rarus vikhle 22.04.2020 mt 15695 ---
	
	Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Новая; //rarus sergei 30.09.2016 mantis 7122 + Добавили реквизит СтатусЗаявки перевозчику
	//rarus sergei 01.09.2016 mantis 7167 ++
	Если Не ЗначениеЗаполнено(Объект.Сторнирован) Тогда
		Объект.Сторнирован = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Корректировка) Тогда
		Объект.Корректировка = Ложь;
	КонецЕсли;
	//rarus sergei 01.09.2016 mantis 7167 ++

	УстановитьАдрес();
	//rarus tenkam 01.12.2016 mantis 7750 ++ удалила согласование
	//// Согласование
	//Если Объект.Ссылка.Пустая() Тогда
	//	СтруктураОбъектовНастроек = Новый Структура;
	//	СтруктураОбъектовНастроек.Вставить("Организация", Объект.Организация);
	//	СтруктураОбъектовНастроек.Вставить("Подразделение", Объект.ПодразделениеКомпании);
	//	Объект.ТребуетСогласования = Scan_ПраваИНастройки.Scan_ПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек,
	//		ПланыВидовХарактеристик.Scan_ПраваИНастройки.ЗаявкаПеревозчикуСогласованиеПоУмолчанию);
	//	Модифицированность = Ложь;
	//КонецЕсли;
	//Элементы.ТребуетСогласования.Доступность = Scan_ПраваИНастройки.Scan_ПолучитьПраваИНастройкиПользователя(ПользователиКлиентСервер.ТекущийПользователь(),
	//	ПланыВидовХарактеристик.Scan_ПраваИНастройки.РазрешитьИзменятьПараметрыСогласования);
	//Если Объект.ДокументыОснования.Количество() = 0 Тогда
	//	ЗаполнитьДокументыОснования();
	//КонецЕсли; 
	//rarus tenkam 01.12.2016 mantis 7750 --

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Scan_ВспомогательныеФункцииКлиент.ПроверитьПользователяПортала();//rarus vikhle 07.05.2020 mt 15695
	ОбновитьОтображениеДанных();  //rarus sergei 15.09.2016 mantis 7167 + баг с отображением статуса	
	УстановитьАдрес();
	ОбновитьСтатусСогласования();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

//rarus tenkam 08.12.2016 mantis 7822 ++
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	УправлениеДиалогомНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры
//rarus tenkam 08.12.2016 mantis 7822 --

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаСоздания = ТекущаяДата();
		//rarus tenkam 10.10.2016 mantis 7183 (закомментаровала)
		////rarus sergei 29.06.2016 mantis 7167 ++
		//Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//	Если Scan_ПраваИНастройки.Scan_Право("ВыводитьДиалогПриПроведении") Тогда
		//		Режим = РежимДиалогаВопрос.ДаНет;
		//		Ответ = Вопрос(НСтр("ru = 'Проведенный документ станет недоступен для редактирования. Вы уверены, что хотите провести документ?'"), Режим, 0);
		//		Если Ответ = КодВозвратаДиалога.Нет Тогда
		//			Отказ = Истина;
		//		КонецЕсли;
		//		
		//	КонецЕсли;
		//КонецЕсли;
		////rarus sergei 29.06.2016 mantis 7167 --
		//rarus tenkam 10.10.2016 mantis 7183 --
	КонецЕсли;
	//rarus tenkam 31.10.2017 mantis 11695 +++
	//Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	//	Объект.ДатаПроведения = ТекущаяДата();
	//ИначеЕсли ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
	//	Объект.ДатаПроведения = Дата('00010101');
	//КонецЕсли;	
	//Если ЭтаФорма.Модифицированность Тогда
	//	ЗаполнитьМенеджераНаСервере();	
	//КонецЕсли;
	//rarus tenkam 31.10.2017 mantis 11695 ---
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Объект.ТребуетСогласования Тогда
		СтатусСогласования = Scan_ОбщегоНазначения_проф.СтатусСогласования(Объект.Ссылка);
		Если НЕ Элементы.ТребуетСогласования.Доступность Тогда
			Если СтатусСогласования.Код = 0 Тогда 
				//если согласования нет вообще, то введем на основании новое
				Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик.Scan_ПраваИНастройки.ЗаявкаНаДействиеШаблонСогласования");
				Scan_ОбщегоНазначения_проф.СоздатьБизнесПроцессСогласования(Объект.Ссылка,Настройка);
			Иначе 
				ПоказатьЗначение(Новый ОписаниеОповещения("ПослеЗаписиЗавершение", ЭтотОбъект, Новый Структура("СтатусСогласования", СтатусСогласования)), СтатусСогласования.Ссылка);
                Возврат;
			КонецЕсли;
		ИначеЕсли Элементы.ТребуетСогласования.Доступность И СтатусСогласования.Код = 0 Тогда
			СоздатьОткрытьСогласование();
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 10.10.2016 mantis 7183 ++
	//Если Объект.СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Исполнена") Тогда
	//	Элементы.УстановитьФактическуюДатуДоставки.Доступность = Ложь;
	//	Элементы.ГруппаФон.ТолькоПросмотр = Истина;
	//КонецЕсли;
	УправлениеДиалогомНаСервере();	//tenkam TLMS 011
	//rarus tenkam 10.10.2016 mantis 7183 --

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиЗавершение(ДополнительныеПараметры) Экспорт
    
    СтатусСогласования = ДополнительныеПараметры.СтатусСогласования;
	
	//если согласование есть, то просто откроем его форму
    

КонецПроцедуры

//rarus sergei 01.09.2016 mantis 7167 ++
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ДатаПолучения = НачалоДня(ЭтаФорма.Объект.ДатаПолучения) + (ЭтаФорма.ВремяПолучения - НачалоДня(ЭтаФорма.ВремяПолучения));
	ТекущийОбъект.ДатаДоставки = НачалоДня(ЭтаФорма.Объект.ДатаДоставки) + (ЭтаФорма.ВремяДоставки - НачалоДня(ЭтаФорма.ВремяДоставки));
	ТекущийОбъект.ДатаУходаФакт = НачалоДня(ЭтаФорма.Объект.ДатаУходаФакт) + (ЭтаФорма.ВремяУходаФакт - НачалоДня(ЭтаФорма.ВремяУходаФакт));	//rarus tenkam 05.10.2016 mantis 7183 + (добавила по аналогии, но зачем это здесь?)
		
	//rarus sergei 30.09.2016 mantis 7122++
	Если ТекущийОбъект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Новая Тогда
		ТекущийОбъект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.ВРаботе;  // Добавили реквизит СтатусЗаявки перевозчику	
	Конецесли;
	//rarus sergei 30.09.2016 mantis 7122--
	//rarus sergei 15.09.2016 mantis 7167 +	
	Если ТекущийОбъект.ДатаПолучения>=ТекущийОбъект.ДатаДоставки Тогда
		Сообщить("Нельзя записать документ, если дата получения больше или равна дате доставки");
		Отказ = Истина;
	    Возврат;
	КонецЕсли;
	//rarus sergei 15.09.2016 mantis 7167 -	
	//Для каждого строка Из ТекущийОбъект.СоставЗаявки Цикл
	//	Если строка.СтатусИзделия =  Перечисления.Scan_СтатусыИзделий.Новая Тогда
	//		строка.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.СогласованиеДоставки;
	//		//Справочники.Scan_Изделия.УстановитьСтатусИзделия(строка.Изделие, Перечисления.Scan_СтатусыИзделий.СогласованиеДоставки);	
	//	КонецЕсли;
	//КонецЦикла;
	//rarus tenkam 10.10.2016 mantis 7183 ++
	Если НЕ Отказ Тогда
		ТекИсполнена = Истина;
		Для Каждого СтрокаИзделий Из ТекущийОбъект.СоставЗаявки Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаИзделий.ДатаДоставкиФакт) Тогда
				ТекИсполнена = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//rarus tenkam 07.12.2017 mantis 12541 +++ bug
		//ТекущийОбъект.Исполнена = ТекИсполнена;	
		ТекущийОбъект.Исполнена = ?(ТекущийОбъект.Проведен, ТекИсполнена, Ложь);
		//rarus tenkam 07.12.2017 mantis 12541 --- bug
		
		Если ТекущийОбъект.Исполнена Тогда
			ТекущийОбъект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена;
		ИначеЕсли ТекущийОбъект.ПодтвержденаПеревозчиком Тогда
			ТекущийОбъект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Подтверждена; 
		ИначеЕсли ТекущийОбъект.Сторнирован Тогда
			ТекущийОбъект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Аннулирована;
		Иначе
			ТекущийОбъект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.ВРаботе;	
		КонецЕсли;
		
	КонецЕсли;
	//rarus tenkam 10.10.2016 mantis 7183 --
	
	//rarus tenkam 08.11.2017 mantis 11774 +++
	Если НЕ Отказ Тогда
		Если ТекущийОбъект.СоставЗаявки.Количество() = ТекущийОбъект.Ссылка.СоставЗаявки.Количество() Тогда	
			
			МассивДоставленныхПродуктов = Новый Массив;
			МассивПродуктовСИзмененнойПлановойДатой = Новый Массив;		// rarus tenkam 16.08.2018 mantis 13381 +
			
			Для Сч = 0 По ТекущийОбъект.СоставЗаявки.Количество()-1 Цикл
				ТекСтрока = ТекущийОбъект.СоставЗаявки.Получить(Сч);
				СтараяСтрока = ТекущийОбъект.Ссылка.СоставЗаявки.Получить(Сч);
				
				Если ЗначениеЗаполнено(ТекСтрока.ДатаДоставкиФакт) И
					НЕ ЗначениеЗаполнено(СтараяСтрока.ДатаДоставкиФакт) Тогда
					
					// rarus tenkam 12.08.2019 mantis 14427 +++
					//ТекПродукт = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(ТекСтрока.Изделие);
					//СтруктураДанных = Новый Структура("Продукт", ТекПродукт);
					СтруктураДанных = Новый Структура("Изделие", ТекСтрока.Изделие); 					
					// rarus tenkam 12.08.2019 mantis 14427 +++
					СтруктураДанных.Вставить("ДатаДоставкиФакт", ТекСтрока.ДатаДоставкиФакт);
					СтруктураДанных.Вставить("ЗаявкаНаДействие", ТекСтрока.ЗаявкаНаДействие);
					МассивДоставленныхПродуктов.Добавить(СтруктураДанных);
				КонецЕсли;
				
				// rarus tenkam 16.08.2018 mantis 13381 +++
				Если ТекСтрока.ДатаДоставкиПлан <> СтараяСтрока.ДатаДоставкиПлан Тогда						
					МассивПродуктовСИзмененнойПлановойДатой.Добавить(ТекСтрока.Изделие);
				КонецЕсли;
				// rarus tenkam 16.08.2018 mantis 13381 --- 
				
			КонецЦикла;    			
		КонецЕсли;
		Если ТекущийОбъект.ПодтвержденаПеревозчиком И ТекущийОбъект.Ссылка.ПодтвержденаПеревозчиком Тогда
			ИзменениеПодтвержденнойЗаявки = Истина;
		КонецЕсли;
	КонецЕсли;
	//rarus tenkam 08.11.2017 mantis 11774 --- 	
	
	// Rarus tenkam 11.04.2022 mantis 18433 +++
	Если Объект.Ссылка.Пустая() Тогда
		Scan_СборСтатистики.Scan_ПередЗаписьюДокумента(РеквизитФормыВЗначение("Объект").Метаданные().Синоним, Истина, "Создание нового элемента");
	КонецЕсли;
	// Rarus tenkam 11.04.2022 mantis 18433 --- 
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Для каждого строка Из Объект.СоставЗаявки Цикл
			Scan_ВспомогательныеФункцииСервер.НастроитьСтатусДокументаЗаявкаНаДействие(строка.ЗаявкаНаДействие);
	   	КонецЦикла; 
	КонецЕсли;
	//rarus sergei 07.10.2016 mantis 7167 ++ баг слетал статус при перепроведении и перезаписи документа
	Для каждого строка Из Объект.СоставЗаявки Цикл
		строка.НомерИДатаЗаявкиНаДействие = "№ "+строка(строка.ЗаявкаНаДействие.Номер)+ " от "+строка(строка.ЗаявкаНаДействие.Дата);
		строка.СтатусИзделия = Scan_ВспомогательныеФункцииСервер.ЧтениеСтатусаИзделияИзРегистраСведений(строка.Изделие,строка.ЗаявкаНаДействие); 	
		строка.ТипТоплива =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Изделие, "ТипТопливаДвигателя.Код"); //rarus vikhle 26.08.2021 mt 18191
	КонецЦикла;
	//rarus sergei 07.10.2016 mantis 7167 --
	
	//rarus tenkam 01.08.2018 mantis 13375 +++
	Если ЗначениеЗаполнено(МассивДоставленныхПродуктов) Тогда
		Для Каждого ТекПродукт Из МассивДоставленныхПродуктов Цикл
			ПараметрыФоновогоЗадания = Новый Массив;
			// rarus tenkam 12.08.2019 mantis 14427 +++
			//ПараметрыФоновогоЗадания.Добавить(ТекПродукт.Продукт);
			ПараметрыФоновогоЗадания.Добавить(ТекПродукт.Изделие);
			// rarus tenkam 12.08.2019 mantis 14427 ---
			ПараметрыФоновогоЗадания.Добавить(ТекПродукт.ДатаДоставкиФакт);
			ПараметрыФоновогоЗадания.Добавить(ТекПродукт.ЗаявкаНаДействие);
			ФоновыеЗадания.Выполнить("Scan_ВспомогательныеФункцииСервер.УстановитьДатуПередачиДилеру", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, "Установка даты передачи дилеру");	
		КонецЦикла;
	КонецЕсли;
	//rarus tenkam 01.08.2018 mantis 13375 --- 	
	
	// rarus tenkam 16.08.2018 mantis 13381 +++
	Если ЗначениеЗаполнено(МассивПродуктовСИзмененнойПлановойДатой) И ЗначениеЗаполнено(ИзменениеПодтвержденнойЗаявки) Тогда
		// rarus tenkam 08.11.2018 mantis 13686 +++
		
		ПараметрыФоновогоЗадания = Новый Массив;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ДокументСсылка", Объект.Ссылка);
		СтруктураПараметров.Вставить("МассивПродуктовСИзмененнойПлановойДатой", МассивПродуктовСИзмененнойПлановойДатой);
		
		ПараметрыФоновогоЗадания.Добавить(СтруктураПараметров);
		ФоновыеЗадания.Выполнить("Scan_ВебСервисы.ОтправитьОтменуИРегистрациюПлановыхДанныхВ1БД", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, "Отправка отмены и регистрации плановых данных в 1БД");
	
		//// Отправим отмену старых ЕТА
		//ПараметрыФоновогоЗадания = Новый Массив;
		//ПараметрыФоновогоЗадания.Добавить(Объект.Ссылка);
		//ПараметрыФоновогоЗадания.Добавить(МассивПродуктовСИзмененнойПлановойДатой);
		//ФоновыеЗадания.Выполнить("Scan_ВебСервисы.ОтправитьОтменуПлановыхДанныех1БД", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, "Отправка отмены плановых данных в 1БД");
		//
		//// Отправим новые данные по ЕТА
		//ПараметрыФЗ = Новый Массив;
		//ПараметрыФЗ.Добавить(Объект.Ссылка);
		//ФоновыеЗадания.Выполнить("Scan_ВебСервисы.ОтправитьПлановыеДанныев1БД", ПараметрыФЗ, Новый УникальныйИдентификатор, "Отправка плановых данных в 1БД");	
		
		// rarus tenkam 08.11.2018 mantis 13686 ---
		
		// Отправим письмо об изменении плановой даты доставки		
		//rarus BProg_Gladkov 05.05.2020 0015962 ++ ОтправитьПисьмоПоШаблонуИзПрава
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить("ШаблонОбИзмененииПлановойДатыДоставки");
		ПараметрыФоновогоЗадания.Добавить(Объект.Ссылка);
		ПараметрыФоновогоЗадания.Добавить(Новый Структура("НесколькоПараметров", МассивПродуктовСИзмененнойПлановойДатой));
		ФоновыеЗадания.Выполнить("Scan_ОтправкаПисемПоЭлектроннойПочте.ОтправитьПисьмоПоШаблонуИзПрава", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, "Отправка письма об изменении плановой даты доставки");	
		//rarus BProg_Gladkov 05.05.2020 0015962 -- 
	КонецЕсли;	
	// rarus tenkam 16.08.2018 mantis 13381 ---
	
КонецПроцедуры
//rarus sergei 01.09.2016 mantis 7167 --

////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ

//tenkam: наверное это было <sergei 7122> ++
&НаКлиенте
Процедура ДоговорСПеревозчикомОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Флаг = ПроверитьДатуДоговора(ВыбранноеЗначение);
	Если Флаг Тогда
		СтандартнаяОбработка = Ложь;
	//rarus FominskiyAS 24.04.2019  mantis 14191 +++
    //Сообщить("Внимание! Дата окончания договора меньше или равна дате доставки");
	//rarus bonmak 29.08.2019 14817 ++
	//Сообщить(НСтр("ru = 'Внимание! Дата окончания договора меньше или равна дате доставки'; en = 'Attention! End date of the contract is less or equal to the delivery date'"));
	Сообщить(НСтр("ru = 'Внимание! Дата окончания договора меньше даты получения'; en = 'Attention! End date of the contract is less to the delivery date'"));
	//rarus bonmak 29.08.2019 14817 --
	//rarus FominskiyAS 24.04.2019  mantis 14191 ---  	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МестоОтгрузкиПриИзменении(Элемент)
	МестоОтгрузкиПриИзмененииНаСервере();
	УстановитьАдрес();
	УстановитьМаршрут();		//rarus tenkam 05.10.2016 mantis 7183 +
КонецПроцедуры

&НаСервере 
Процедура МестоОтгрузкиПриИзмененииНаСервере()
		
	Если НЕ Объект.МестоОтгрузки.Пустая() Тогда
		Если (НЕ ЗначениеЗаполнено(Объект.КомпанияОтправитель)) ИЛИ 
			(ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Контрагенты") 
			//rarus bonmak 15.04.2020 14456 ++
			//rarus bonmak 03.06.2020 16165 ++
			И Объект.КомпанияОтправитель <> Объект.МестоОтгрузки.Контрагент) Тогда
			//И НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.МестоОтгрузки.СтанцияДилера, Объект.КомпанияОтправитель)) Тогда 
			//rarus bonmak 03.06.2020 16165 --
			//rarus bonmak 15.04.2020 14456 -- 
			//(ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.КомпанияОтправитель.Контрагент <> Объект.МестоОтгрузки.Контрагент)Тогда	//rarus tenkam 24.10.2017 mantis 11439 +
			Объект.КомпанияОтправитель = Объект.МестоОтгрузки.Контрагент; //Справочники.Scan_Контрагенты.ПустаяСсылка(); //rarus bonmak 15.04.2020 14456 //rarus bonmak 03.06.2020 16165
			Если объект.КонтактыОтправителя.Количество()>0 
				//rarus bonmak 15.04.2020 14456 ++
				//rarus bonmak 03.06.2020 16165 ++
				И Объект.МестоОтгрузки.Контрагент <> объект.КонтактыОтправителя[0].КонтактноеЛицо.Владелец Тогда
				//И Объект.МестоОтгрузки.СтанцияДилера <> объект.КонтактыОтправителя[0].КонтактноеЛицо.Владелец Тогда 
				//rarus bonmak 03.06.2020 16165 --
				//rarus bonmak 15.04.2020 14456 --
				
				объект.КонтактыОтправителя.Очистить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//rarus pechek 02.04.2020 mantis 15672 +++
	Если ЗначениеЗаполнено(Объект.МестоОтгрузки) Тогда
		Объект.КонтактыОтправителя.Очистить();
		ТекстЗапроса = "ВЫБРАТЬ
		               |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.КонтактноеЛицо КАК КонтактноеЛицо
		               |ИЗ
		               |	РегистрСведений.Scan_ВзаимосвязьКонтактныхЛицИМестХранения КАК Scan_ВзаимосвязьКонтактныхЛицИМестХранения
		               |ГДЕ
		               |	Scan_ВзаимосвязьКонтактныхЛицИМестХранения.МестоХранения = &МестоХранения
		               |	И Scan_ВзаимосвязьКонтактныхЛицИМестХранения.ДоступностьВПФ";
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("МестоХранения",Объект.МестоОтгрузки);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			ЗаполнитьКонтактнуюинформацию(Выборка.КонтактноеЛицо);
		КонецЦикла;
	КонецЕсли;
	//rarus pechek 02.04.2020 mantis 15672 ---
КонецПроцедуры

&НаКлиенте
Процедура КомпанияОтправительПриИзменении(Элемент)
		КомпанияОтправительПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомпанияОтправительПриИзмененииНаСервере()
	//rarus sergei 15.09.2016 mantis 7160 ++
	Если ЗначениеЗаполнено(Объект.КомпанияОтправитель) Тогда
		Если (ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Контрагенты") 
			//rarus bonmak 15.04.2020 14456 ++
			//rarus bonmak 03.06.2020 16165 ++
			И Объект.КомпанияОтправитель <> Объект.МестоОтгрузки.Контрагент) Тогда
			//И НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.МестоОтгрузки.СтанцияДилера, Объект.КомпанияОтправитель)) Тогда 
			//rarus bonmak 03.06.2020 16165 --
			//rarus bonmak 15.04.2020 14456 -- 
			//(ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.КомпанияОтправитель.Контрагент <> Объект.МестоОтгрузки.Контрагент) Тогда	//rarus tenkam 24.10.2017 mantis 11439 +
			Объект.МестоОтгрузки = Справочники.Scan_МестаХранения.ПустаяСсылка();	
			УстановитьАдрес();
		КонецЕсли;
		Если Объект.КонтактыОтправителя.Количество()>0 Тогда
			Если (ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Контрагенты")
				//rarus bonmak 15.04.2020 14456 ++
				//rarus bonmak 03.06.2020 16165 ++
			И Объект.КомпанияОтправитель <> Объект.КонтактыОтправителя[0].КонтактноеЛицо.Владелец) Тогда
			//И НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.КонтактыОтправителя[0].КонтактноеЛицо.Владелец, Объект.КомпанияОтправитель)) Тогда 
			//rarus bonmak 03.06.2020 16165 --
			//rarus bonmak 15.04.2020 14456 --
				 
				//(ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Дилеры") И Объект.КомпанияОтправитель.Контрагент <> Объект.КонтактыОтправителя[0].КонтактноеЛицо.Владелец) Тогда 	//rarus tenkam 24.10.2017 mantis 11439 +
				Объект.КонтактыОтправителя.Очистить();	
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	//rarus sergei 15.09.2016 mantis 7160 --
КонецПроцедуры

&НаКлиенте
Процедура МестоОтгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут", ЛОЖЬ);
	Если ЗначениеЗаполнено(Объект.КомпанияОтправитель) Тогда
		//rarus sergei 15.09.2016 mantis 7160 ++
		Если  ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ЗначениеОтбора.Вставить("Контрагент",Объект.КомпанияОтправитель);
		Иначе
			Контрагент = ПолучитьВладельцаДоговора(Объект.КомпанияОтправитель);
			ЗначениеОтбора.Вставить("Контрагент",  Контрагент);
		КонецЕсли; 
		//rarus sergei 15.09.2016 mantis 7160 --
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора",ПараметрыФормы,Элементы.МестоОтгрузки); 

КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикПриИзменении(Элемент)
	ПеревозчикПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПеревозчикПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ДоговорСПеревозчиком) и Объект.Перевозчик <> Объект.ДоговорСПеревозчиком.Владелец Тогда 
		
		Объект.ДоговорСПеревозчиком = Справочники.Scan_ДоговорыВзаиморасчетов.ПустаяСсылка();				
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ДоговорСПеревозчикомПриИзменении(Элемент)
	ДоговорСПеревозчикомПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДоговорСПеревозчикомПриИзмененииНаСервере()
		
	Если ЗначениеЗаполнено(Объект.ДоговорСПеревозчиком) И Объект.ДоговорСПеревозчиком.Владелец <> Объект.Перевозчик Тогда
		Объект.Перевозчик = Объект.ДоговорСПеревозчиком.Владелец;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоговорСПеревозчикомНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Перевозчик) Тогда			
		СтандартнаяОбработка = Ложь;
		ЗначениеОтбора = Новый Структура("Владелец", Объект.Перевозчик);
		ЗначениеОтбора.Вставить("ВидДоговора",ПолучитьВидДоговораПеревозка()); //rarus sergei 06.10.2016 mantis 7609 +
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	    ПараметрыФормы.Вставить("Грузополучатель", Объект.Перевозчик);			
		Результат = ОткрытьФорму("Справочник.Scan_ДоговорыВзаиморасчетов.ФормаВыбора",ПараметрыФормы,Элементы.ДоговорСПеревозчиком); 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоговорСПеревозчикомСоздание(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("Владелец", Объект.Перевозчик);
	ПараметрыСоздания.Вставить("ВидДоговора",ПолучитьВидДоговораПеревозка());
	ПараметрыСоздания.Вставить("ВалютаВзаиморасчетов",Объект.ВалютаДокумента);	
	ПараметрыСоздания.Вставить("Наименование",Элемент.ТекстРедактирования);  
	ОткрытьФорму("Справочник.Scan_ДоговорыВзаиморасчетов.ФормаОбъекта", ПараметрыСоздания, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура КонтактыОтправителяКонтактноеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.КомпанияОтправитель) Тогда
		
		СтандартнаяОбработка = Ложь;
		//rarus sergei 15.09.2016 mantis 7160 ++
		Если ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ЗначениеОтбора = Новый Структура("Владелец", Объект.КомпанияОтправитель);
		Иначе
			Владелец = ПолучитьВладельцаДоговора(Объект.КомпанияОтправитель);
			ЗначениеОтбора = Новый Структура("Владелец", Владелец);
		КонецЕсли;
		//rarus sergei 15.09.2016 mantis 7160 --
		
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		Результат = ОткрытьФорму("Справочник.Scan_КонтактныеЛица.ФормаВыбора",ПараметрыФормы,Элементы.КонтактыОтправителяКонтактноеЛицо); 
		
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура КонтактыОтправителяКонтактноеЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	МассивСтрок=Объект.КонтактыОтправителя.НайтиСтроки(Новый Структура("КонтактноеЛицо",ВыбранноеЗначение));
	Если МассивСтрок.Количество()> 0 и МассивСтрок[0].НомерСтроки <>  ТекущийЭлемент.ТекущаяСтрока+1 Тогда
		СтандартнаяОбработка=Ложь;              
		Возврат; 
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ИндексТекущейСтроки = Объект.КонтактыОтправителя.Индекс(Элементы.КонтактыОтправителя.ТекущиеДанные);
	Объект.КонтактыОтправителя.Удалить(ИндексТекущейСтроки);  
	ЗаполнитьКонтактнуюинформацию(ВыбранноеЗначение);

КонецПроцедуры

&НаКлиенте
Процедура МестоДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут", ЛОЖЬ);
	Если ЗначениеЗаполнено(Объект.КомпанияПолучатель) Тогда
		//rarus sergei 15.09.2016 mantis 7160 ++
		Если  ТипЗнч(Объект.КомпанияПолучатель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ЗначениеОтбора.Вставить("Контрагент",Объект.КомпанияПолучатель);
		Иначе
			Контрагент = ПолучитьВладельцаДоговора(Объект.КомпанияПолучатель);
			ЗначениеОтбора.Вставить("Контрагент",  Контрагент);
		КонецЕсли; 
		//rarus sergei 15.09.2016 mantis 7160 --
		
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора",ПараметрыФормы,Элементы.МестоДоставки); 

КонецПроцедуры

&НаКлиенте
Процедура МестоДоставкиПриИзменении(Элемент)
	МестоДоставкиПриИзмененииНаСервере();
	УстановитьАдрес();

КонецПроцедуры

&НаСервере 
Процедура МестоДоставкиПриИзмененииНаСервере()
	Если (НЕ ЗначениеЗаполнено(Объект.КомпанияПолучатель) 
		//rarus bonmak 15.04.2020 14456 ++
		//rarus bonmak 03.06.2020 16165 ++
		ИЛИ Объект.КомпанияПолучатель <> Объект.МестоДоставки.Контрагент)
		//ИЛИ НЕ РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ЕстьСвязьКомпанияКонтрагент(Объект.МестоДоставки.СтанцияДилера, Объект.КомпанияПолучатель)) 
		//rarus bonmak 03.06.2020 16165 --
		//rarus bonmak 15.04.2020 14456 --
		И НЕ Объект.МестоДоставки.Пустая() Тогда
		Объект.КомпанияПолучатель = Объект.МестоДоставки.Контрагент; //rarus bonmak 15.04.2020 14456 Справочники.Scan_Контрагенты.ПустаяСсылка(); //rarus bonmak 03.06.2020 16165 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомпанияПолучательПриИзменении(Элемент)
	ОчиститьМестоДоставки();
	КомпанияПолучательПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура КомпанияПолучательПриИзмененииНаСервере()

	Если Объект.КонтактыПолучателя.Количество()>0 И Объект.КомпанияПолучатель <> Объект.КонтактыПолучателя[0].КонтактноеЛицо.Владелец Тогда 
		Объект.КонтактыПолучателя.Очистить();				
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактыПолучателяКонтактноеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.КомпанияПолучатель) Тогда
		СтандартнаяОбработка = Ложь;
		
		//rarus agar 13.04.2021 17622 ++
		//ЗначениеОтбора = Новый Структура("Владелец", Объект.КомпанияПолучатель);
		//ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		
		ПараметрыФормы         = Новый Структура;
		ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ФиксированныеНастройки.Отбор,
																"Владелец",
																ВидСравненияКомпоновкиДанных.Равно,
																Объект.КомпанияПолучатель, "Владелец", Истина);
		
		ПараметрыФормы.Вставить("ФиксированныеНастройки",ФиксированныеНастройки);
		Результат = ОткрытьФорму("Справочник.Scan_КонтактныеЛица.ФормаВыбора",ПараметрыФормы,Элементы.КонтактыПолучателяКонтактноеЛицо);
		//rarus agar 13.04.2021 17622 ++
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КонтактыПолучателяКонтактноеЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	МассивСтрок=Объект.КонтактыПолучателя.НайтиСтроки(Новый Структура("КонтактноеЛицо",ВыбранноеЗначение));
	Если МассивСтрок.Количество()> 0 и МассивСтрок[0].НомерСтроки <>  ТекущийЭлемент.ТекущаяСтрока+1 Тогда
		СтандартнаяОбработка=Ложь;              
		Возврат; 
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ИндексТекущейСтроки = Объект.КонтактыПолучателя.Индекс(Элементы.КонтактыПолучателя.ТекущиеДанные);
	Объект.КонтактыПолучателя.Удалить(ИндексТекущейСтроки);  
	ЗаполнитьКонтактнуюинформациюПолучателя(ВыбранноеЗначение);

КонецПроцедуры

//7122 --

//rarus tenkam 05.10.2016 mantis 7183 ++
&НаКлиенте
Процедура МаршрутНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Маршрут", Истина);
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаВыбора",ПараметрыФормы,Элементы.Маршрут);
КонецПроцедуры

&НаКлиенте
Процедура ДатаУходаФактПриИзменении(Элемент)
	//rarus tenkam 03.11.2016 mantis 7183 ++
	//ДатаУходаФактПриИзмененииНаСервере();
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаУходаФакт) Тогда //Обнулим время
		ВремяУходаФакт = '00010101' + (Объект.ДатаУходаФакт - НачалоДня(Объект.ДатаУходаФакт));	
	КонецЕсли;
	УстановитьДатуУходаФактВТЧ();
	//rarus tenkam 03.11.2016 mantis 7183 -- 
КонецПроцедуры

//rarus tenkam 03.11.2016 mantis 7183 ++
//&НаСервере
//Процедура ДатаУходаФактПриИзмененииНаСервере()
//	//rarus tenkam 14.10.2016 mantis 7688 ++
//	//Если ЗначениеЗаполнено(Объект.ДатаУходаФакт) Тогда
//	//	ВремяУходаФакт = Scan_ПраваИНастройки.Scan_Право("ВремяФактическогоУходаИзделий");
//	//	Объект.ДатаУходаФакт = НачалоДня(Объект.ДатаУходаФакт) + (ВремяУходаФакт - НачалоДня(ВремяУходаФакт));
//	//Иначе
//	Если НЕ ЗначениеЗаполнено(Объект.ДатаУходаФакт) Тогда
//	//rarus tenkam 14.10.2016 mantis 7688 --
//		ВремяУходаФакт = '00010101' + (Объект.ДатаУходаФакт - НачалоДня(Объект.ДатаУходаФакт));	
//	КонецЕсли;

//	Для Каждого СтрокаИзделия Из Объект.СоставЗаявки Цикл
//		СтрокаИзделия.ДатаУходаФакт = Объект.ДатаУходаФакт;
//	КонецЦикла;	
//КонецПроцедуры
//rarus tenkam 03.11.2016 mantis 7183 --

&НаКлиенте
Процедура ВремяУходаФактПриИзменении(Элемент)
	Объект.ДатаУходаФакт = НачалоДня(Объект.ДатаУходаФакт) + (ВремяУходаФакт - НачалоДня(ВремяУходаФакт));
	//rarus tenkam 03.11.2016 mantis 7183 ++
	//ДатаУходаФактПриИзмененииНаСервере();		//rarus tenkam 19.10.2016 mantis 7183 +
	УстановитьДатуУходаФактВТЧ();
	//rarus tenkam 03.11.2016 mantis 7183 -- 
КонецПроцедуры

//rarus tenkam 05.10.2016 mantis 7183 --

////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ

//// СОСТАВ ЗАЯВКИ

//rarus tenkam 05.10.2016 mantis 7183 ++
&НаКлиенте
Процедура СоставЗаявкиДатаДоставкиФактПриИзменении(Элемент)
	ТекСтрока = Элементы.СоставЗаявки.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.ДатаУходаФакт) И ЗначениеЗаполнено(ТекСтрока.ДатаДоставкиФакт) Тогда
		Если ТекСтрока.ДатаУходаФакт >= ТекСтрока.ДатаДоставкиФакт Тогда // rarus bonmak 06.04.2021 17606 добавил в условие равно
			Сообщить("Дата ухода (факт) не может быть равна или больше чем дата доставки (факт)!");
			ТекСтрока.ДатаДоставкиФакт = Дата('00010101');
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставЗаявкиДатаУходаФактПриИзменении(Элемент)
	ТекСтрока = Элементы.СоставЗаявки.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.ДатаУходаФакт) И ЗначениеЗаполнено(ТекСтрока.ДатаДоставкиФакт) Тогда
		Если ТекСтрока.ДатаУходаФакт >= ТекСтрока.ДатаДоставкиФакт Тогда // rarus bonmak 06.04.2021 17606 добавил в условие равно
			Сообщить("Дата ухода (факт) не может быть равна или больше чем дата доставки (факт)!");
			ТекСтрока.ДатаУходаФакт = Дата('00010101');
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//rarus tenkam 05.10.2016 mantis 7183 --

////////////////////////////////////////////////////////////////////////////////
//// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ

//tenkam: наверное это было <sergei 7122> ++
&НаСервере
Функция ПроверитьДатуДоговора(Договор)
	ПросроченныйДоговор = Ложь;
	Если Договор.Бессрочный Тогда
		Возврат ПросроченныйДоговор;
	ИначеЕсли КонецДня(Договор.ДатаОкончания) < Объект.ДатаПолучения Тогда //rarus bonmak 29.08.2019 14817 было ЭтотОбъект.ДатаДоставки, установил конец дня
		ПросроченныйДоговор = Истина;	
	КонецЕсли; 
	Возврат ПросроченныйДоговор;
КонецФункции

&НаСервере                                                 	
Процедура УстановитьАдрес()
	Если ЗначениеЗаполнено(Объект.МестоОтгрузки) Тогда
		АдресОтгрузки = Объект.МестоОтгрузки.АдресСкладаФактический;
	КонецЕсли; 
	Если ЗначениеЗаполнено(Объект.МестоДоставки) Тогда
		АдресДоставки = Объект.МестоДоставки.АдресСкладаФактический;
	КонецЕсли; 	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМенеджераНаСервере()	
	
	МенеджерИзмен = ПользователиКлиентСервер.ТекущийПользователь();	
	Объект.Менеджер = МенеджерИзмен;
	Объект.Организация = МенеджерИзмен.Организация;
	Объект.ПодразделениеКомпании = МенеджерИзмен.ПодразделениеОрганизации;

КонецПроцедуры

&НаСервере
Функция ПолучитьВладельцаДоговора(Дилер)
	//rarus bonmak 15.04.2020 14456 ++
	//rarus bonmak 03.06.2020 16165 ++
	Владелец = Дилер.Контрагент;
	//Владелец = РегистрыСведений.Scan_ВзаимосвязьКомпанийСКонтрагентами.ПолучитьДилераПоКомпании(Дилер);
	//rarus bonmak 03.06.2020 16165 --
	//rarus bonmak 15.04.2020 14456 --
	Возврат Владелец;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьКонтактнуюинформацию(парам)		 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Ссылка КАК КонтактноеЛицо,
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Вид КАК ВидКонтактнойИнформации,
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Представление КАК Представление
	               |ИЗ
	               |	Справочник.Scan_КонтактныеЛица.КонтактнаяИнформация КАК Scan_КонтактныеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Ссылка.Ссылка = &Ссылка
	               |	И (Scan_КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |			ИЛИ Scan_КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))";
				  
	Запрос.УстановитьПараметр("Ссылка",парам);
	ТЗ=Запрос.Выполнить().Выгрузить();
	Для каждого строкаТЗ Из ТЗ Цикл 
		
		НоваяСтрока=Объект.КонтактыОтправителя.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,строкаТЗ);
	    
	КонецЦикла; 
	 //rarus sergei 15.09.2016 mantis 7160 ++

	Если НЕ ЗначениеЗаполнено(Объект.КомпанияОтправитель) Тогда 
		 Объект.КомпанияОтправитель = Парам.Владелец; //rarus bonmak 15.04.2020 14456 //rarus bonmak 03.06.2020 16165 
		//rarus bonmak 15.04.2020 14456 ++
		//rarus bonmak 03.06.2020 16165 ++
		Если Парам.Владелец <> Объект.МестоОтгрузки.Контрагент Тогда
		//Если Парам.Владелец <> Объект.МестоОтгрузки.СтанцияДилера Тогда 
		//rarus bonmak 03.06.2020 16165 --	
		//rarus bonmak 15.04.2020 14456 --
			Объект.МестоОтгрузки = Справочники.Scan_МестаХранения.ПустаяСсылка();	
			УстановитьАдрес();
		КонецЕсли;
	КонецЕсли;
	//rarus sergei 15.09.2016 mantis 7160 --

КонецПроцедуры

&НаСервере
Процедура ОчиститьМестоДоставки()
	Объект.МестоДоставки = Справочники.Scan_МестаХранения.ПустаяСсылка();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтактнуюинформациюПолучателя(парам)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Ссылка КАК КонтактноеЛицо,
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Вид КАК ВидКонтактнойИнформации,
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Представление КАК Представление
	               |ИЗ
	               |	Справочник.Scan_КонтактныеЛица.КонтактнаяИнформация КАК Scan_КонтактныеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	Scan_КонтактныеЛицаКонтактнаяИнформация.Ссылка.Ссылка = &Ссылка
	               |	И (Scan_КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |			ИЛИ Scan_КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))";
				  
	Запрос.УстановитьПараметр("Ссылка",парам);
	ТЗ=Запрос.Выполнить().Выгрузить();
	Для каждого строкаТЗ Из ТЗ Цикл 
		
		НоваяСтрока=Объект.КонтактыПолучателя.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,строкаТЗ);
	    
	КонецЦикла; 
	Если НЕ ЗначениеЗаполнено(Объект.КомпанияПолучатель) Тогда 
		Объект.КомпанияПолучатель = Парам.Владелец;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОчиститьДатуПолучения()
	Объект.ДатаПолучения = '00010101000000';
	ВремяПолучения = '00010101'+(Объект.ДатаПолучения - НачалоДня(Объект.ДатаПолучения));
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Поле  = "ДатаПолучения";
	Сообщение.Текст = "Дата получения не может быть больше или равной дате доставки";
	Сообщение.УстановитьДанные(Объект);
	Сообщение.Сообщить();
	Отказ = Истина;

КонецПроцедуры
//7122 --

//rarus sergei 01.09.2016 mantis 7167 ++
#Область tenkam_TLMS_011
//&НаСервере
//Процедура НастроитьОтображениеСторнированногоДокумента()
//	//rarus tenkam 05.10.2016 mantis 7183 ++
//	//Если Объект.Проведен = Истина ИЛИ Объект.Сторнирован = Истина Тогда
//	Если Объект.Сторнирован ИЛИ Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена Тогда
//		Элементы.УстановитьФактическуюДатуДоставки.Доступность = Ложь;
//		//rarus tenkam 05.10.2016 mantis 7183 --
//	Элементы.ГруппаФон.ТолькоПросмотр = Истина;
//		
//	//Элементы.ФормаКоманднаяПанель.Доступность = Ложь;
//	КонецЕсли;
//КонецПроцедуры
//tenkam TLMS 011 --
#КонецОбласти

&НаСервере
Функция ПолучитьСписокЗаявокНаДействие(ВыбранныеСтроки)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_КорректировкаИнформацииПоЗаявкам.ЗаявкаНаДействие
	               |ИЗ
	               |	РегистрСведений.Scan_КорректировкаИнформацииПоЗаявкам КАК Scan_КорректировкаИнформацииПоЗаявкам
	               |ГДЕ
	               |	Scan_КорректировкаИнформацииПоЗаявкам.GuidСтроки В (&ВыбранныеСтроки)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_КорректировкаИнформацииПоЗаявкам.ЗаявкаНаДействие";
	Запрос.УстановитьПараметр("ВыбранныеСтроки",ВыбранныеСтроки);
	ТЗ = Запрос.Выполнить().Выгрузить();
	СписокДокументов = ТЗ.ВыгрузитьКолонку("ЗаявкаНаДействие");
	Возврат СписокДокументов;
КонецФункции

&НаСервере
Процедура ЗаполнитьСоставЗаявки(ВыбранныеСтроки)
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	Scan_КорректировкаИнформацииПоЗаявкам.Изделие,
	              |	Scan_КорректировкаИнформацииПоЗаявкам.ЗаявкаНаДействие
	              |ИЗ
	              |	РегистрСведений.Scan_КорректировкаИнформацииПоЗаявкам КАК Scan_КорректировкаИнформацииПоЗаявкам
	              |ГДЕ
	              |	Scan_КорректировкаИнформацииПоЗаявкам.GuidСтроки В (&ВыбранныеСтроки)";
	Запрос.УстановитьПараметр("ВыбранныеСтроки",ВыбранныеСтроки);  
	ТЗ = Запрос.Выполнить().Выгрузить();
	Для каждого строка Из ТЗ Цикл
		НоваяСтрока = Объект.СоставЗаявки.Добавить();
		НоваяСтрока.ЗаявкаНаДействие = строка.ЗаявкаНаДействие;
		НоваяСтрока.Изделие = строка.Изделие;
	    Дилер = Справочники.Scan_Изделия.ПолучитьДилера(строка.Изделие);
		НоваяСтрока.Дилер = Дилер;
		
		// rarus tenkam 10.04.2018 mantis 12907 +++
		НоваяСтрока.ДатаДоставкиПлан = строка.ЗаявкаНаДействие.ДатаДоставкиПлановая;		
		// rarus tenkam 10.04.2018 mantis 12907 ---
	КонецЦикла; 	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюПоДоставке(ВыбраннаяСтрока)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_КорректировкаИнформацииПоЗаявкам.Грузополучатель,
	               |	Scan_КорректировкаИнформацииПоЗаявкам.МестоДоставки,
	               |	Scan_КорректировкаИнформацииПоЗаявкам.СпособДоставки,
	               |	Scan_КорректировкаИнформацииПоЗаявкам.ПриемВВыходныеДни,
	               |	Scan_КорректировкаИнформацииПоЗаявкам.ДатаДоставкиПлан
	               |ИЗ
	               |	РегистрСведений.Scan_КорректировкаИнформацииПоЗаявкам КАК Scan_КорректировкаИнформацииПоЗаявкам
	               |ГДЕ
	               |	Scan_КорректировкаИнформацииПоЗаявкам.GuidСтроки = &ВыбраннаяСтрока";
	Запрос.УстановитьПараметр("ВыбраннаяСтрока",ВыбраннаяСтрока);
	ТЗ = Запрос.Выполнить().Выгрузить();
	Объект.КомпанияПолучатель = ТЗ[0].Грузополучатель;
	Объект.МестоДоставки = ТЗ[0].МестоДоставки;
	Объект.СпособДоставкиИзделий = ТЗ[0].СпособДоставки;
	//Объект.ВозможностьПриемаВВыходныеДни = ТЗ[0].ПриемВВыходныеДни;  //rarus sergei 30.09.2016 mantis 7122+ убираем реквизит документа  ВозможностьПриемаВВыходныеДни
	Объект.ДатаДоставки = ТЗ[0].ДатаДоставкиПлан;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКИПолучателяИзЗаявки(МассивДокументов)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо
	               |ИЗ
	               |	Документ.Scan_ЗаявкаНаДействие.КонтактныеЛица КАК Scan_ЗаявкаНаДействиеКонтактныеЛица
	               |ГДЕ
	               |	Scan_ЗаявкаНаДействиеКонтактныеЛица.Ссылка В (&СписокДокументов)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Scan_ЗаявкаНаДействиеКонтактныеЛица.КонтактноеЛицо";
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	Иначе
		ТЗ =Результат.Выгрузить();
	    Для каждого строка Из ТЗ Цикл
			ЗаполнитьКонтактнуюинформациюПолучателя(строка.КонтактноеЛицо);
			
		
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДопУсловияДоставки()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ДополнительныеУсловияДоставки.Ссылка
	               |ИЗ
	               |	Справочник.Scan_ДополнительныеУсловияДоставки КАК Scan_ДополнительныеУсловияДоставки
	               |ГДЕ
	               |	Scan_ДополнительныеУсловияДоставки.ИспользоватьПоУмолчаниюВПФ = ИСТИНА
	               |	И Scan_ДополнительныеУсловияДоставки.ИспользованиеВДокументах.Документ = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДокументов.ЗаявкаПеревозчику)";
	Результат = Запрос.Выполнить().Выгрузить();
	Для каждого Условие Из Результат Цикл
		НоваяСтрока = Объект.ДопУсловия.Добавить();
		НоваяСтрока.ДопУсловие = Условие.Ссылка;	
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыОснования()
	Для каждого строка Из Объект.СоставЗаявки Цикл
		НоваяСтрока = Объект.ДокументыОснования.Добавить();
		НоваяСтрока.Документ = строка.ЗаявкаНаДействие;
	КонецЦикла; 	
КонецПроцедуры
//rarus sergei 01.09.2016 mantis 7167 --

//rarus sergei 06.10.2016 mantis 7609 ++
&НаСервере
Функция ПолучитьВидДоговораПеревозка()
	Возврат Перечисления.Scan_ВидыДоговоров.Перевозки;	
КонецФункции
//rarus sergei 06.10.2016 mantis 7609 --

//rarus tenkam 05.10.2016 mantis 7183 ++

// Оповещение при установке фактической даты доставки для табличной части
&НаКлиенте
Процедура УстановитьФактДату(ЗначениеВозвращаемыхДанных, Параметры) Экспорт
	Если ЗначениеВозвращаемыхДанных = Неопределено ИЛИ
		ЗначениеВозвращаемыхДанных = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
		Для Каждого СтрокаСостава Из Объект.СоставЗаявки Цикл
			Если ЗначениеВозвращаемыхДанных.НаВсеСтроки ИЛИ
				(ЗначениеВозвращаемыхДанных.НаВсеСтроки = Ложь И НЕ ЗначениеЗаполнено(СтрокаСостава.ДатаДоставкиФакт)) Тогда
				Если ЗначениеЗаполнено(СтрокаСостава.ДатаУходаФакт) 
					И СтрокаСостава.ДатаУходаФакт >= ЗначениеВозвращаемыхДанных.ФактДата Тогда // rarus bonmak 06.04.2021 17606 добавил условие и отработку истина
					Сообщить("Дата ухода (факт) не может быть равна или больше чем дата доставки (факт)!");
				Иначе
					СтрокаСостава.ДатаДоставкиФакт = ЗначениеВозвращаемыхДанных.ФактДата;
				КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЭтаФорма.Модифицированность	= Истина; 
КонецПроцедуры

// Процедура устанавливает маршрут между местом отгрузки и местом доставки
&НаКлиенте
Процедура УстановитьМаршрут()
	Объект.Маршрут = ПолучитьМаршрут(Объект.МестоОтгрузки, Объект.МестоДоставки);
	//tenkam TLMS 011 ++
	//Если НЕ ЗначениеЗаполнено(Объект.Маршрут) Тогда
	//	Элементы.ДобавитьМаршрут.Доступность = Истина;
	//Иначе
	//	Элементы.ДобавитьМаршрут.Доступность = Ложь;
	//КонецЕсли;
	УправлениеДиалогомНаСервере();
	//tenkam TLMS 011 --
КонецПроцедуры

// Функция возвращает ссылку на маршрут между двумя местами хранения
&НаСервереБезКонтекста
Функция ПолучитьМаршрут(ИсходныйПункт, КонечныйПункт)
	Возврат Справочники.Scan_МестаХранения.ПолучитьМаршрут(ИсходныйПункт, КонечныйПункт);
КонецФункции

// Оповещение после добавления маршрута
&НаКлиенте
Процедура ПослеСозданияМаршрута(ЗначениеВозвращаемыхДанных, Параметры) Экспорт
	УстановитьМаршрут();
	ЭтаФорма.Модифицированность	= Истина; 
КонецПроцедуры

// Процедура заполняет данные по отгрузке из документа-основания заявки на действие
&НаСервере
Процедура ЗаполнитьШапкуПоЗаявкеНаДействие(ЗаявкаНаДействиеМассив)
	//rarus tenkam 13.12.2016 mantis 7750 ++	
	МестоОтгрузкиСовпадает = Истина;
	КомпанияОтправительСовпадает = Истина;
	ДатаПолученияСовпадает = Истина;
	
	ТекМестоОтгрузки = ЗаявкаНаДействиеМассив[0].МестоПолучения;
	ТекКомпанияОтправитель = ЗаявкаНаДействиеМассив[0].Грузоотправитель; 
	ТекДатаПолучения = ЗаявкаНаДействиеМассив[0].ДатаПолучения; 
	
	Для Сч = 1 По ЗаявкаНаДействиеМассив.Количество() -1 Цикл
		Если МестоОтгрузкиСовпадает И ЗаявкаНаДействиеМассив[Сч].МестоПолучения <> ТекМестоОтгрузки Тогда
			МестоОтгрузкиСовпадает = Ложь;
		КонецЕсли;
		Если КомпанияОтправительСовпадает И ЗаявкаНаДействиеМассив[Сч].Грузоотправитель <> ТекКомпанияОтправитель Тогда
			КомпанияОтправительСовпадает = Ложь;
		КонецЕсли;
		Если ДатаПолученияСовпадает И ЗаявкаНаДействиеМассив[Сч].ДатаПолучения <> ТекДатаПолучения Тогда
			ДатаПолученияСовпадает = Ложь;
		КонецЕсли;     		
	КонецЦикла;
	Если МестоОтгрузкиСовпадает Тогда
		Объект.МестоОтгрузки = ТекМестоОтгрузки;
	КонецЕсли;
	Если КомпанияОтправительСовпадает Тогда
		Объект.КомпанияОтправитель = ТекКомпанияОтправитель;
	КонецЕсли;
	Если ДатаПолученияСовпадает Тогда
		Объект.ДатаПолучения = ТекДатаПолучения;
	КонецЕсли;
	
	//Объект.МестоОтгрузки = ЗаявкаНаДействиеСсылка.МестоПолучения;
	//Объект.КомпанияОтправитель = ЗаявкаНаДействиеСсылка.Грузоотправитель;
	//Объект.ДатаПолучения = ЗаявкаНаДействиеСсылка.ДатаПолучения;
	//rarus tenkam 13.12.2016 mantis 7750 --
	Объект.Маршрут = Справочники.Scan_МестаХранения.ПолучитьМаршрут(Объект.МестоОтгрузки, Объект.МестоДоставки);
КонецПроцедуры

//rarus tenkam 05.10.2016 mantis 7183 --
//tenkam 25.10.2016 TLMS 011 ++
&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	//rarus tenkam 15.11.2016 mantis 7822 ++
	Если Объект.СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Подтверждена") Тогда 
		//Шапка
		Элементы.ОсновныеДанные.ТолькоПросмотр = Истина;
		//Отгрузка
		Элементы.ОсновныеДанныеОтгрузки.ТолькоПросмотр = Истина;
		Элементы.ГруппаДатаИВремяПолучения.ТолькоПросмотр = Истина;
		Элементы.ГруппаКонтактыОтправителя.ТолькоПросмотр = Истина;
		//Доставка
		Элементы.Доставка.ТолькоПросмотр = Истина;
		//Подвал
		Элементы.ГруппаПодвал.ТолькоПросмотр = Истина;

		Элементы.ОказанныеУслугиЗаполнитьПоТарифам.Доступность = Истина;	 //rarus tenkam 17.02.2017 mantis 7177 +	//rarus tenkam 25.04.2017 mantis 9438 + (поменяла на Истина

		//rarus tenkam 15.11.2016 mantis 7822 --
	ИначеЕсли  Объект.СтатусЗаявки = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Исполнена") Тогда
		Элементы.ОсновныеДанные.ТолькоПросмотр = Истина;
		Элементы.ГруппаОтгрузкаИДоставка.ТолькоПросмотр = Истина;
		Элементы.ГруппаПодвал.ТолькоПросмотр = Истина;
		Элементы.ОказанныеУслугиЗаполнитьПоТарифам.Доступность = Ложь;	 //rarus tenkam 17.02.2017 mantis 7177 +

		//rarus tenkam 27.10.2016 mantis 7750 ++
		Если Scan_ПраваИНастройки.Scan_Право("РазрешитьРедактированиеДатыДоставкиФакт") Тогда
			Элементы.УстановитьФактическуюДатуДоставки.Доступность = Истина;
			Элементы.СоставЗаявкиДатаДоставкиФакт.ТолькоПросмотр = Ложь;
			Элементы.ФормаЗагрузитьДанныеОтТК.Доступность = Истина;
		Иначе
		//rarus tenkam 27.10.2016 mantis 7750 --
			Элементы.УстановитьФактическуюДатуДоставки.Доступность = Ложь;
			Элементы.СоставЗаявкиДатаДоставкиФакт.ТолькоПросмотр = Истина;
			Элементы.СоставЗаявкиДатаУходаФакт.ТолькоПросмотр = Истина;
			Элементы.ФормаЗагрузитьДанныеОтТК.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Маршрут) И ЗначениеЗаполнено(Объект.МестоОтгрузки) И ЗначениеЗаполнено(Объект.МестоДоставки) Тогда
		Элементы.ДобавитьМаршрут.Доступность = Истина;
	Иначе
		Элементы.ДобавитьМаршрут.Доступность = Ложь;
	КонецЕсли;	
	
	Если Объект.Сторнирован Тогда
		Элементы.ГруппаФон.ТолькоПросмотр = Истина;
		Элементы.ДобавитьМаршрут.Доступность = Ложь;
		Элементы.УстановитьФактическуюДатуДоставки.Доступность = Ложь;
	КонецЕсли;   
	
	// rarus tenkam 10.04.2018 mantis 12907 +++
	Элементы.СоставЗаявкиДатаДоставкиПлан.ТолькоПросмотр = (Объект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена);  	
	// rarus tenkam 10.04.2018 mantis 12907 ---	
	
	СформироватьУсловноеОформление();	//rarus tenkam 30.12.2016 mantis 8223 +	
КонецПроцедуры
//tenkam 25.10.2016 TLMS 011 --

//rarus tenkam 05.10.2016 mantis 7183 ++

//rarus tenkam 30.12.2016 mantis 8223 ++
&НаСервере
Процедура СформироватьУсловноеОформление()
	
	//Обновление условного оформления статуса заявки
	Scan_УправлениеДиалогомСервер.СформироватьУсловноеОформлениеЭлемента(ЭтаФорма, "СтатусЗаявки", Объект.СтатусЗаявки);
	
	//rarus vikhle 26.08.2021 mt 18191 +++
	// Тип топлива LNG
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СоставЗаявкиТипТоплива.Имя);

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.СоставЗаявки.ТипТоплива");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "LNG";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.КоролевскиГолубой); //rarus vikhle 03.09.2021 mt 18191
	
	// Тип топлива CNG
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СоставЗаявкиТипТоплива.Имя);

	ОтборЭлемента                = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.СоставЗаявки.ТипТоплива");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "CNG";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.НейтральноВесеннеЗеленый); //rarus vikhle 03.09.2021 mt 18191
	//rarus vikhle 26.08.2021 mt 18191 ---
	
КонецПроцедуры
	//rarus tenkam 30.12.2016 mantis 8223 --

// Процедура выдает вопрос о том, нужно ли установить дату в тч
&НаКлиенте
Процедура УстановитьДатуУходаФактВТЧ()
	Оповещение = Новый ОписаниеОповещения("УстановитьДатуУходаФактВТЧЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, "Установить дату ухода (факт) в табличной части?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

//Оповещение после ответа на вопрос об установке даты в тч
&НаКлиенте
Процедура УстановитьДатуУходаФактВТЧЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Для Каждого СтрокаИзделия Из Объект.СоставЗаявки Цикл
			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаДоставкиФакт)  
				И СтрокаИзделия.ДатаДоставкиФакт <= Объект.ДатаУходаФакт Тогда // rarus bonmak 06.04.2021 17606 добавил условие и отработку истина 
				Сообщить("Дата ухода (факт) не может быть равна или больше чем дата доставки (факт)!");
			Иначе	
				СтрокаИзделия.ДатаУходаФакт = Объект.ДатаУходаФакт;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//rarus tenkam 05.10.2016 mantis 7183 --

////////////////////////////////////////////////////////////////////////////////
//// КОМАНДЫ ФОРМЫ

//rarus tenkam 05.10.2016 mantis 7183 ++
&НаКлиенте
Процедура ДобавитьМаршрут(Команда)
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("СоздатьМаршрут", Истина);
	ПараметрыСоздания.Вставить("ИсходныйПункт", Объект.МестоОтгрузки);
	ПараметрыСоздания.Вставить("КонечныйПункт", Объект.МестоДоставки);  
	Обработчик = Новый ОписаниеОповещения("ПослеСозданияМаршрута", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОткрытьФорму("Справочник.Scan_МестаХранения.ФормаОбъекта", ПараметрыСоздания, Элементы.Маршрут,,,,Обработчик,Режим);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФактическуюДатуДоставки(Команда)
	Обработчик = Новый ОписаниеОповещения("УстановитьФактДату", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;	
	ОткрытьФорму("Документ.Scan_ЗаявкаПеревозчику.Форма.ФормаВыборФактДаты",,,,,, Обработчик, Режим);
КонецПроцедуры
//rarus tenkam 05.10.2016 mantis 7183 --

//tenkam: 011 -- (до этого момента все рассортировала по блокам)

//rarus sergei 12.10.2016 mantis 7165 ++
///ФОРМИРОВАНИЕ ВЫГРУЗКИ ЗАЯВКИ ПЕРЕВОЗЧИКУ

&НаКлиенте
Процедура ВыгрузитьЗаявкуТК(Команда)
	// rarus tenkam 18.04.2019 mantis 14195 +++
	
	Оповещение = Новый ОписаниеОповещения("ПослеПодключенияРасширения", ЭтотОбъект);
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(Оповещение);
	
	//ИмяФайла = Строка(Объект.Перевозчик)+" заявка № "+ Строка(Объект.Номер) +" от "+Строка(Формат(Объект.Дата,"ДЛФ=D"));
	//ПутьКФайлу = ПолучитьПутьКФайлуВыгрузки(ИмяФайла);
	//Если ПутьКФайлу = "" Тогда
	//	Сообщить("Путь сохранения не выбран!");
	//	Возврат;	
	//КонецЕсли;	
	//ТабДокумент = ПолучитьТабДокументТранспортнойКомпании();
	//СохранитьДанныеВExcel(ТабДокумент, ПутьКФайлу);
		
	// rarus tenkam 18.04.2019 mantis 14195 ---

КонецПроцедуры
// rarus tenkam 18.04.2019 mantis 14195 ---


&НаСервере
Функция ПолучитьТабДокументТранспортнойКомпании()

	ТаблицаСохранение = Новый ТабличныйДокумент;
	Макет = Документы.Scan_ЗаявкаПеревозчику.ПолучитьМакет("ЗаявкаТК");
	Scan_СборСтатистики.Scan_Печать("ЗаявкаТК"); // Rarus tenkam 11.04.2022 mantis 18433 +
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("ОбластьСтрока");

	ТаблицаСохранение.Вывести(ОбластьШапка);
	Для Каждого Стр Из Объект.СоставЗаявки Цикл
		ОбластьСтрока.Параметры.НомерСтроки = стр.НомерСтроки; //rarus sergei 17.10.2016 mantis 7165 +
		ОбластьСтрока.Параметры.НомерЗаявки = Объект.Номер;
		ОбластьСтрока.Параметры.НомерШасси = Стр.Изделие.НомерИзделия;
		ТаблицаСохранение.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	Возврат ТаблицаСохранение;

КонецФункции

&НаКлиенте
Процедура СохранитьДанныеВExcel(ТаблицаСохранение, ПутьКФайлу)
	ТаблицаСохранение.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
	//rarus FominskiyAS 21.04.2019  mantis 14191 +++
	//Сообщить("Данные выгружены в файл " + ПутьКФайлу);
	Сообщить(НСтр("ru = 'Данные выгружены в файл '; en = 'Data uploaded into the file '") + ПутьКФайлу);
	//rarus FominskiyAS 21.04.2019  mantis 14191 ---  	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА ДАННЫХ ОТ ТК

&НаКлиенте
Процедура ЗагрузитьДанныеОтТК(Команда)
	//rarus sergei 17.10.2016 mantis 7166 ++
	Если Объект.ПодтвержденаПеревозчиком = Ложь Тогда
	    Сообщить("Нельзя загрузить файл от транспортной компании для документа, неподтвержденного перевозчиком");
		Возврат;
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(Объект.ДатаУходаФакт) Тогда
	    Сообщить("Не удалось загрузить файл. У документа не установлена ""дата ухода (факт)""");
		Возврат;	
	КонецЕсли; 
	//rarus sergei 17.10.2016 mantis 7166 --
	Если Объект.Сторнирован Тогда
		Сообщить("Нельзя загрузить данные от транспортной компании для сторнированной заявки");
		Возврат;
	КонецЕсли;
	//rarus tenkam 25.10.2016 mantis 7750 ++
	//Если Объект.Исполнена = Истина Тогда
	//    Сообщить("Нельзя загрузить данные от транспортной компании для исполненой заявки");
	//	Возврат;
	//КонецЕсли;
	//rarus tenkam 25.10.2016 mantis 7750 --
	Обработчик = Новый ОписаниеОповещения("ЗагрузитьВыбранныйФайл", ЭтотОбъект);
	ОткрытьФорму("Документ.Scan_ЗаявкаПеревозчику.Форма.ФормаЗагрузкиДанныхОтТК",, ЭтотОбъект,,,,Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВыбранныйФайл(ЗначенияВыбранныхПараметров, Параметры) Экспорт	  
	Если ЗначенияВыбранныхПараметров = Неопределено ИЛИ
		ЗначенияВыбранныхПараметров = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	//rarus FominskiyAS 19.04.2019  mantis 14191 +++
	//Сообщить("Начата загрузка файла"+" "+ТекущаяДата());
	Сообщить(Нстр("ru = 'Начата загрузка файла'; en = 'Downloading'")+" "+ТекущаяДата());
	//rarus FominskiyAS 19.04.2019  mantis 14191 ---
	
	ДвоичныеДанные=Новый ДвоичныеДанные(ЗначенияВыбранныхПараметров.ПутьКФайлу);
    Адрес= ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
	ПрочитатьТабличныйДокумент(Адрес);	
	
	//rarus FominskiyAS 19.04.2019  mantis 14191 +++
	//Сообщить("Загрузка файла завершена"+" "+ТекущаяДата());
	Сообщить(Нстр("ru = 'Загрузка файла завершена'; en = 'Completed'")+" "+ТекущаяДата());
	//rarus FominskiyAS 19.04.2019  mantis 14191 ---

КонецПроцедуры

&НаСервере
Процедура ПрочитатьТабличныйДокумент(Адрес)  
	ФайлПриемник = ПолучитьИмяВременногоФайла("xls");
	ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	ДанныеХранилища.Записать(ФайлПриемник);
	ТабДокумент = Новый ТабличныйДокумент;
	Попытка
		ТабДокумент.Прочитать(ФайлПриемник, СпособЧтенияЗначенийТабличногоДокумента.Значение); 
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	Попытка
		УдалитьФайлы(ФайлПриемник);
	Исключение
	КонецПопытки;
	КолвоСтрокДокумента = ТабДокумент.ВысотаТаблицы; 
	НомерНачальнойСтроки = 7;
	Если ТабДокумент.Область("R"+СтрЗаменить(7, Символы.НПП, "") + "C2").Текст = "" ИЛИ СтрЗаменить(ТабДокумент.Область("R"+СтрЗаменить(7, Символы.НПП, "") + "C2").Текст,Символы.НПП,"") <> Объект.Номер Тогда
		Сообщить("Ошибка. Номер заявки не совпадает с загружаемым номером из файла");
		Возврат;                                          
	Иначе
		//rarus sergei 17.10.2016 mantis 7166 ++
		Для нСтрока=НомерНачальнойСтроки ПО КолвоСтрокДокумента Цикл
			//rarus sergei 19.10.2016 mantis 7166 ++ добавил проверку, что дата доставки факт. меньше либо равна текущей дате
			Если ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C4").Текст) И ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C5").Текст) И ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C6").Текст) И ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C7").Текст) Тогда
				
				ДатаДоставкиФакт = СоединитьДатуИВремя(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C6").Значение,ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C7").Значение);
				ДатаПолученияФакт = СоединитьДатуИВремя(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C4").Значение,ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C5").Значение);
				
				Если ДатаДоставкиФакт > ТекущаяДата() Тогда
					Сообщить("Не удалось загрузить файл от транспортной компании, так как в строке "+ ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C1").Текст +" дата доставки больше, чем текущая дата!");
					Возврат;				
				КонецЕсли;                                                                        
				Если ДатаДоставкиФакт <= ДатаПолученияФакт Тогда
					Сообщить("Не удалось загрузить файл от транспортной компании, так как дата доставки должна быть больше даты получения!");
					Возврат;
				КонецЕсли; 
			КонецЕсли;
			//rarus sergei 19.10.2016 mantis 7166 --
		КонецЦикла;
		//rarus sergei 17.10.2016 mantis 7166 --
		Для нСтрока=НомерНачальнойСтроки ПО КолвоСтрокДокумента Цикл
			//rarus sergei 11.11.2016 mantis 7166 ++
			НомерШасси =СтрЗаменить(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C3").Текст,Символы.НПП,"");
			Если НЕ ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C4").Текст) Тогда 
				Сообщить("Внимание! В загружаемом файле для продукта № "+НомерШасси +" не заполнена дата фактического получения. Строка не будет загружена");
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C5").Текст) Тогда
				Сообщить("Внимание! В загружаемом файле для продукта № "+НомерШасси +" не заполнено время фактического получения. Строка не будет загружена");
				Продолжить;	
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C6").Текст) Тогда
				Сообщить("Внимание! В загружаемом файле для продукта № "+НомерШасси +" не заполнена дата фактической доставки. Строка не будет загружена");
				Продолжить;	
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C7").Текст) Тогда
				Сообщить("Внимание! В загружаемом файле для продукта № "+НомерШасси +" не заполнено время фактической доставки. Строка не будет загружена");
				Продолжить;	
			КонецЕсли;
			//rarus sergei 11.11.2016 mantis 7166 --
			ДатаДоставкиФакт = СоединитьДатуИВремя(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C6").Значение,ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C7").Значение);
			ДатаПолученияФакт = СоединитьДатуИВремя(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C4").Значение,ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C5").Значение);
			
			Изделие = ПолучитьИзделиеПоШасси(НомерШасси);
			Если Изделие = Справочники.Scan_Изделия.ПустаяСсылка() Тогда
				Сообщить("Шасси с № "+НомерШасси+" не найдено в справочнике ""Продукты""");
				Продолжить;	
			КонецЕсли; 
			ВыборкаСоставЗаявки = Объект.СоставЗаявки;
			МассивНайденныхСтрок = ВыборкаСоставЗаявки.НайтиСтроки(Новый Структура("Изделие",Изделие));
			Если НЕ ЗначениеЗаполнено(МассивНайденныхСтрок) Тогда
				Сообщить("В данной заявке шасси с № "+НомерШасси +" нет");
				Продолжить;
			КонецЕсли; 
			
			Если ДатаПолученияФакт <> МассивНайденныхСтрок[0].ДатаУходаФакт Тогда
				//ДатаПолученияФакт = НачалоДня(ДатаПолученияФакт)+12*60*60;
				МассивНайденныхСтрок[0].ДатаУходаФакт = ДатаПолученияФакт;
			КонецЕсли;
			Если ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C6").Текст) и ЗначениеЗаполнено(ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C7").Текст) Тогда
				
				Если ЗначениеЗаполнено(ДатаДоставкиФакт) И ДатаДоставкиФакт <> МассивНайденныхСтрок[0].ДатаДоставкиФакт Тогда
					//ДатаДоставкиФакт = НачалоДня(ДатаДоставкиФакт)+12*60*60;
					МассивНайденныхСтрок[0].ДатаДоставкиФакт = ДатаДоставкиФакт;
				КонецЕсли;
			КонецЕсли;
			КомментарийТК = ТабДокумент.Область("R"+СтрЗаменить(нСтрока, Символы.НПП, "") + "C8").Текст; 
			Если КомментарийТК <> "" Тогда	
				МассивНайденныхСтрок[0].КомментарииТК = КомментарийТК;	
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СоединитьДатуИВремя(Дата, Время) Экспорт
 
  ДатаСтрока  = Формат(Дата, "ДФ=""ггггММдд""");
  ВремяСтрока = Формат(Время, "ДФ=""ЧЧммсс""");
  Результат  = Дата(ДатаСтрока + ВремяСтрока);
 
  Возврат Результат;
 
КонецФункции

&НаСервере
Функция ПолучитьИзделиеПоШасси(НомерШасси)
	//Попытка
	//СсылкаНомерШасси = Формат(Число(НомерШасси), "ЧГ=");
	//Исключение
	//КонецПопытки;
	СсылкаНаИзделие=Справочники.Scan_Изделия.НайтиПоРеквизиту("НомерИзделия",НомерШасси);
	Возврат СсылкаНаИзделие;	
КонецФункции
//rarus sergei 12.10.2016 mantis 7165 --

//rarus tenkam 23.12.2016 mantis 8216 ++
&НаКлиенте
Процедура ПодтвержденаПеревозчиком(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить("Документ не записан!");
		Возврат;
	КонецЕсли;
	Если ЭтотОбъект.Модифицированность Тогда
		Сообщить("Документ был изменен. Для установки подтверждения его надо записать!");
		Возврат;
	КонецЕсли;
	ПодтвержденаПеревозчикомНаСервере(Объект.Ссылка);
	ЭтаФорма.Прочитать();
КонецПроцедуры

&НаСервере
Процедура ПодтвержденаПеревозчикомНаСервере(ЗаявкаСсылка)
	СообщениеОбОшибке = "";
	ВсеОк = Документы.Scan_ЗаявкаПеревозчику.УстановитьПодтверждениеПеревозчиком(ЗаявкаСсылка, СообщениеОбОшибке);
	Если НЕ ВсеОк И ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
		Сообщить(СообщениеОбОшибке);
	Иначе
		Сообщить("У документа " + ЗаявкаСсылка.Номер + " от " + ТекущаяДата() + " установлен признак подтверждена.");
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура СнятьПодтверждение(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить("Документ не записан!");
		Возврат;
	КонецЕсли;

	Если ЭтотОбъект.Модифицированность Тогда
		Сообщить("Документ был изменен. Для снятия подтверждения его надо записать!");
		Возврат;
	КонецЕсли;
	СнятьПодтверждениеНаСервере(Объект.Ссылка);
	ЭтаФорма.Прочитать();
КонецПроцедуры

&НаСервере
Процедура СнятьПодтверждениеНаСервере(ЗаявкаСсылка)
	СообщениеОбОшибке = "";
	ВсеОк = Документы.Scan_ЗаявкаПеревозчику.СнятьПодтверждениеПеревозчиком(ЗаявкаСсылка, СообщениеОбОшибке);
	Если НЕ ВсеОк Тогда
		Сообщить(СообщениеОбОшибке);
	Иначе
		Сообщить("У документа " + ЗаявкаСсылка.Номер + " от " + ТекущаяДата() + " снят признак подтверждена.");
	КонецЕсли;	
КонецПроцедуры
//rarus tenkam 23.12.2016 mantis 8216 --

//rarus tenkam 17.02.2017 mantis 7177 +++
&НаСервере
Процедура ЗаполнитьПоТарифамНаСервере()
	Объект.ОказанныеУслуги.Очистить();
	Объект.ОказанныеУслуги.Загрузить(Объект.СоставЗаявки.Выгрузить());
	Для Каждого ТекСтрока Из Объект.ОказанныеУслуги Цикл
		ТекСтрока.Услуга = Справочники.Scan_НоменклатураУслуг.Доставка;
		ТекСтрока.Количество = 1;
		ДанныеТарифа = ПолучитьДанныеТарифов(ТекСтрока.Изделие);
		Если ДанныеТарифа <> Неопределено Тогда 
			ТекСтрока.Цена = ДанныеТарифа.Сумма;
			ТекСтрока.ИзмененаВручную = Ложь;	// rarus tenkam 11.02.2019 mantis 14048 +
			ТекСтрока.СтавкаНДС = ДанныеТарифа.СтавкаНДС;
			//rarus tenkam 20.04.2017 mantis 7177 bug +++
			//РассчитатьСуммы(ТекСтрока);
			ТекСтрока.СуммаНДС = ДанныеТарифа.СуммаНДС;
			ТекСтрока.Сумма = ТекСтрока.Цена;
			ТекСтрока.Всего = ДанныеТарифа.СуммаСНДС
			//rarus tenkam 20.04.2017 mantis 7177 ---
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеТарифов(ИзделиеСсылка)
	ГруппаИзделия = ИзделиеСсылка.ТипПродукта.ВидПродукта.ГруппаПродукта;
	Если ГруппаИзделия = Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства Тогда
		ЛогТип = ИзделиеСсылка.ТипПродуктаЛогистический;
		КолФормула = ИзделиеСсылка.МодельПродукта.КолеснаяФормула;
	Иначе 
		ЛогТип = Справочники.Scan_ТипыПродуктовЛогистика.ПустаяСсылка();
		КолФормула = Справочники.Scan_КолесныеФормулыИзделий.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.СтавкаНДС КАК СтавкаНДС,
	|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Сумма КАК Сумма,
	|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.СуммаНДС КАК СуммаНДС,
	|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.СуммаСНДС КАК СуммаСНДС,
	|	Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.Scan_МатрицаТарифовПоДоставкеИзделий.СрезПоследних(
	|			&НаДату,
	|			Контрагент = &Контрагент
	|				И ДоговорКонтрагента = &Договор
	|				И НоменклатураУслуги = &Услуга
	|				И СпособДоставки = &СпособДоставки
	|				И ГруппаПродукта = &ГруппаПродукта
	|				И ЛогистическийТип = &ЛогистическийТип
	|				И КолеснаяФормула = &КолеснаяФормула
	|				И АдресДоставки = &АдресДоставки
	|				И АдресПолучения = &АдресПолучения) КАК Scan_МатрицаТарифовПоДоставкеИзделийСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО		// rarus tenkam 20.03.2019 mantis 14242 +
	|	Период УБЫВ";	// rarus tenkam 20.03.2019 mantis 14242 +
	
	Запрос.УстановитьПараметр("АдресДоставки", Объект.МестоДоставки.АдресСкладаЛогистический);
	Запрос.УстановитьПараметр("АдресПолучения", Объект.МестоОтгрузки.АдресСкладаЛогистический);
	Запрос.УстановитьПараметр("Договор", Объект.ДоговорСПеревозчиком);
	Запрос.УстановитьПараметр("Контрагент", Объект.Перевозчик);
	Запрос.УстановитьПараметр("НаДату", Объект.ДатаПолучения);
	Запрос.УстановитьПараметр("СпособДоставки", Объект.СпособДоставкиИзделий);
	Запрос.УстановитьПараметр("ГруппаПродукта", ГруппаИзделия);
	Запрос.УстановитьПараметр("ЛогистическийТип", ЛогТип);
	Запрос.УстановитьПараметр("КолеснаяФормула", КолФормула);
	Запрос.УстановитьПараметр("Услуга", Справочники.Scan_НоменклатураУслуг.Доставка);
	
	ТабРезультат = Запрос.Выполнить().Выгрузить();
	Если ТабРезультат.Количество() <> 0 Тогда
		Возврат ТабРезультат[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура РассчитатьСуммы(ТекСтрока = Неопределено, ИзмененаЦена = Ложь)	// rarus tenkam 11.02.2019 mantis 14048 + (второй параметр)
	
	//ТекущаяСтрока.Всего = ТекущаяСтрока.Сумма + (ТекущаяСтрока.Сумма / 100 * ТекущаяСтрока.СтавкаНДС.Ставка);
	//ТекущаяСтрока.СуммаНДС = ТекущаяСтрока.Всего - ТекущаяСтрока.Сумма;
	
	Если ТекСтрока = Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Объект.ОказанныеУслуги Цикл
			// rarus tenkam 11.02.2019 mantis 14048 +++
			Если ИзмененаЦена И ТекущаяСтрока.Цена <> ТекущаяСтрока.Сумма Тогда
				// Цена изменена вручную
				ТекущаяСтрока.ИзмененаВручную = Истина;
			КонецЕсли;
			// rarus tenkam 11.02.2019 mantis 14048 ---
			
			ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока.Количество;
			//rarus tenkam 20.04.2017 mantis 7177 bug +++
			//Если ЗначениеЗаполнено(ТекущаяСтрока.СтавкаНДС) Тогда
			//	ТекущаяСтрока.СуммаНДС = ТекущаяСтрока.Сумма * ТекущаяСтрока.СтавкаНДС.Ставка / 100;
			//Иначе
			//	ТекущаяСтрока.СуммаНДС = 0;
			//КонецЕсли;
			//ТекущаяСтрока.Всего = ТекущаяСтрока.Сумма + ТекущаяСтрока.СуммаНДС;
			ТекЗначениеСтавки = ?(ЗначениеЗаполнено(ТекущаяСтрока.СтавкаНДС), ТекущаяСтрока.СтавкаНДС.Ставка, 0);
			ТекущаяСтрока.Всего = ТекущаяСтрока.Сумма + (ТекущаяСтрока.Сумма / 100 * ТекЗначениеСтавки);
			ТекущаяСтрока.СуммаНДС = ТекущаяСтрока.Всего - ТекущаяСтрока.Сумма;
			//rarus tenkam 20.04.2017 mantis 7177 ---
		КонецЦикла;
	Иначе
		// rarus tenkam 11.02.2019 mantis 14048 +++
		Если ИзмененаЦена И ТекСтрока.Цена <> ТекСтрока.Сумма Тогда
			// Цена изменена вручную
			ТекСтрока.ИзмененаВручную = Истина;
		КонецЕсли;
		// rarus tenkam 11.02.2019 mantis 14048 ---
			
		ТекСтрока.Сумма = ТекСтрока.Цена * ТекСтрока.Количество;
		//rarus tenkam 20.04.2017 mantis 7177 bug +++
		//Если ЗначениеЗаполнено(ТекСтрока.СтавкаНДС) Тогда
		//	ТекСтрока.СуммаНДС = ТекСтрока.Сумма * ТекСтрока.СтавкаНДС.Ставка / 100;
		//Иначе
		//	ТекСтрока.СуммаНДС = 0;
		//КонецЕсли;
		//ТекСтрока.Всего = ТекСтрока.Сумма + ТекСтрока.СуммаНДС;
		ТекЗначениеСтавки = ?(ЗначениеЗаполнено(ТекСтрока.СтавкаНДС), ТекСтрока.СтавкаНДС.Ставка, 0);
		ТекСтрока.Всего = ТекСтрока.Сумма + (ТекСтрока.Сумма / 100 * ТекЗначениеСтавки);
		ТекСтрока.СуммаНДС = ТекСтрока.Всего - ТекСтрока.Сумма;
		//rarus tenkam 20.04.2017 mantis 7177 ---
	КонецЕсли;
	Объект.СуммаОказанныхУслуг = Объект.ОказанныеУслуги.Итог("Всего");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоТарифам(Команда)
	//Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	Сообщить("Необходимо записать документ!");
	//КонецЕсли;
	ЗаполнитьПоТарифамНаСервере();
	Модифицированность = Истина;	//rarus tenkam 03.03.2017 TLMS 011 +
	//rarus abrant 31.05.2017 mantis 9864 +++
	Объект.СуммаОказанныхУслуг = Объект.ОказанныеУслуги.Итог("Всего");
	//rarus abrant 31.05.2017 mantis 9864 ---
КонецПроцедуры

&НаКлиенте
Процедура ОказанныеУслугиЦенаПриИзменении(Элемент)
	РассчитатьСуммы(,Истина);	// rarus tenkam 11.02.2019 mantis 14048 + (второй параметр)
КонецПроцедуры

&НаКлиенте
Процедура ОказанныеУслугиСтавкаНДСПриИзменении(Элемент)
	РассчитатьСуммы();
КонецПроцедуры
//rarus tenkam 17.02.2017 mantis 7177 ---

//rarus tenkam 25.04.2017 mantis 9438 +++
&НаСервере
Процедура ОбновитьТарифыНаСервере()
	БылПересчет = Ложь;
	Для Каждого ТекСтрока Из Объект.ОказанныеУслуги Цикл
		// rarus tenkam 13.02.2019 mantis 14048 +++
		Если ТекСтрока.ИзмененаВручную Тогда
			Продолжить;
		КонецЕсли;		
		// rarus tenkam 13.02.2019 mantis 14048 ---
		ДанныеТарифа = ПолучитьДанныеТарифов(ТекСтрока.Изделие);
		Если ДанныеТарифа <> Неопределено Тогда 
			Если ДанныеТарифа.Сумма <> ТекСтрока.Цена Тогда
				ТекСтрока.Цена = ДанныеТарифа.Сумма;
				ТекСтрока.СтавкаНДС = ДанныеТарифа.СтавкаНДС;
				ТекСтрока.СуммаНДС = ДанныеТарифа.СуммаНДС;
				ТекСтрока.Сумма = ТекСтрока.Цена;
				ТекСтрока.Всего = ДанныеТарифа.СуммаСНДС;
				БылПересчет = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Если БылПересчет Тогда
		Модифицированность = Истина;
		Сообщить("Стоимость услуг была пересчитана в соответствии с актуальными тарифами.");
	КонецЕсли;
КонецПроцедуры  
//rarus tenkam 25.04.2017 mantis 9438 ---

//rarus tenkam 13.10.2017 mantis 11366 +++
&НаКлиенте
Процедура ДобавитьКЛПолучателя(Команда)
	Если ЗначениеЗаполнено(Объект.КомпанияПолучатель) Тогда
		
		ЗначениеОтбора = Новый Структура("Владелец", Объект.КомпанияПолучатель);
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		ПараметрыФормы.Вставить("ИмяТаблицы", "КонтактыПолучателя");
		
		ДобавитьНесколькоКЛ(ПараметрыФормы);
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКЛОтправителя(Команда)
	Если ЗначениеЗаполнено(Объект.КомпанияОтправитель) Тогда
		
		Если ТипЗнч(Объект.КомпанияОтправитель)= Тип("СправочникСсылка.Scan_Контрагенты") Тогда
			ЗначениеОтбора = Новый Структура("Владелец", Объект.КомпанияОтправитель);
		Иначе
			Владелец = ПолучитьВладельцаДоговора(Объект.КомпанияОтправитель);
			ЗначениеОтбора = Новый Структура("Владелец", Владелец);
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		ПараметрыФормы.Вставить("ИмяТаблицы", "КонтактыОтправителя");
		ДобавитьНесколькоКЛ(ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНесколькоКЛ(ПараметрыОтбора)
	
	Обработчик = Новый ОписаниеОповещения("ПослеВыбораКонтактныхЛиц", ЭтотОбъект, ПараметрыОтбора);
	Результат = ОткрытьФорму("Справочник.Scan_КонтактныеЛица.Форма.ФормаВыбораНескольких", ПараметрыОтбора,,,,,Обработчик); 
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКонтактныхЛиц(ЗначенияВыбранныхПараметров, Параметры) Экспорт	  
	Если ЗначенияВыбранныхПараметров = Неопределено ИЛИ
		ЗначенияВыбранныхПараметров = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	// Добавим
	Для Каждого ТекКЛ Из ЗначенияВыбранныхПараметров Цикл
		Если Параметры.ИмяТаблицы = "КонтактыОтправителя" Тогда
			МассивСтрок = Объект.КонтактыОтправителя.НайтиСтроки(Новый Структура("КонтактноеЛицо", ТекКЛ));
			Если МассивСтрок.Количество() > 0 Тогда
				// Такое КЛ уже есть              
				Продолжить; 
			КонецЕсли; 
			
			ЗаполнитьКонтактнуюинформацию(ТекКЛ);
		ИначеЕсли Параметры.ИмяТаблицы = "КонтактыПолучателя" Тогда
			МассивСтрок = Объект.КонтактыПолучателя.НайтиСтроки(Новый Структура("КонтактноеЛицо", ТекКЛ));
			Если МассивСтрок.Количество() > 0 Тогда
				// Такое КЛ уже есть              
				Продолжить; 
			КонецЕсли; 
			
			ЗаполнитьКонтактнуюинформациюПолучателя(ТекКЛ);
		КонецЕсли;
		
	КонецЦикла; 	
КонецПроцедуры   
//rarus tenkam 13.10.2017 mantis 11366 ---

// rarus tenkam 13.07.2018 mantis 13195 +++
&НаКлиенте
Процедура ДатаДоставкиПриИзменении(Элемент)	
	Для Каждого СтрокаТЧ Из Объект.СоставЗаявки Цикл
		СтрокаТЧ.ДатаДоставкиПлан = НачалоДня(Объект.ДатаДоставки) + (ВремяДоставки - НачалоДня(ВремяДоставки));
	КонецЦикла;
КонецПроцедуры

//&НаКлиенте
//Функция ПолучитьПутьКФайлуВыгрузки(ПолноеИмяФайла)
//	
//	// Вызываем диалог выбора файла для сохранения XLS-таблицы
//	Режим = РежимДиалогаВыбораФайла.Сохранение;
//	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
//	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
//	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
//	Текст = "ru = ""Таблица XLS""; en = ""XLS table""";
//	Фильтр = НСтр(Текст)+"(*.xls)|*.xls";
//	ДиалогОткрытияФайла.Фильтр = Фильтр;
//	ДиалогОткрытияФайла.Заголовок = "Выберите путь для сохранения";
//	ДиалогОткрытияФайла.ПолноеИмяФайла = ПолноеИмяФайла;
//	
//	Если ДиалогОткрытияФайла.Выбрать() Тогда
//		Возврат ДиалогОткрытияФайла.ПолноеИмяФайла;
//	Иначе
//		Возврат "";
//	КонецЕсли;	
//КонецФункции   

&НаКлиенте
Процедура ПослеПодключенияРасширения(Результат, ДополнительныеПараметры) Экспорт
	ИмяФайла = Строка(Объект.Перевозчик)+" заявка № "+ Строка(Объект.Номер) +" от "+Строка(Формат(Объект.Дата,"ДЛФ=D"));
		
	ПодключитьРасширениеРаботыСФайлами();
	// Вызываем диалог выбора файла для сохранения XLS-таблицы
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	Текст = "ru = ""Таблица XLS""; en = ""XLS table""";
	Фильтр = НСтр(Текст)+"(*.xls)|*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Выберите путь для сохранения";
	ДиалогОткрытияФайла.ПолноеИмяФайла = ИмяФайла;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ИмяФайла", ИмяФайла);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииДиалогаВыбораФайла", ЭтотОбъект, ДопПараметры);
	ДиалогОткрытияФайла.Показать(ОписаниеОповещения);	   		
	
КонецПроцедуры  

&НаКлиенте
Процедура ПриЗавершенииДиалогаВыбораФайла(ВыбранныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИмяФайла = ДополнительныеПараметры.ИмяФайла; 
	
	ПолноеИмяФайла = ВыбранныйФайл[0];
	ПутьКФайлу = ПолноеИмяФайла;
	
	Если ПутьКФайлу = "" Тогда
		//rarus FominskiyAS 08.07.2019  mantis 14191 +++
		//Сообщить("Путь сохранения не выбран!");
		Сообщить(НСтр("ru = 'Путь сохранения не выбран!'; en = 'Way of saving does not selected!'"));
		//rarus FominskiyAS 08.07.2019  mantis 14191 ---  
		Возврат;	
	КонецЕсли;	
	ТабДокумент = ПолучитьТабДокументТранспортнойКомпании();
	СохранитьДанныеВExcel(ТабДокумент, ПутьКФайлу);
	
КонецПроцедуры
// rarus tenkam 13.07.2018 mantis 13195 ---

