//Перем МассивДоставленныхПродуктов;		//rarus tenkam 08.11.2017 mantis 11774 +  //rarus tenkam 01.08.2018 mantis 13375 +++
Перем МассивПродуктовСИзмененнойПлановойДатой;		// rarus tenkam 16.08.2018 mantis 13381 +


//rarus sergei 09.09.2016 mantis 7167 ++
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Scan_ЗаявкаПеревозчику") Тогда
		// rarus agar 22.12.2022 19668 ++
		Организация = ДанныеЗаполнения.Организация;
		ПодразделениеКомпании = ДанныеЗаполнения.ПодразделениеКомпании;
		// rarus agar 22.12.2022 19668 --
		//rarus tenkam 06.02.2017 mantis 7750 +++
		ХозОперация = ДанныеЗаполнения.ХозОперация;
		СпособДоставкиИзделий = ДанныеЗаполнения.СпособДоставкиИзделий;
		Перевозчик = ДанныеЗаполнения.Перевозчик;
		ДоговорСПеревозчиком = ДанныеЗаполнения.ДоговорСПеревозчиком;
		КомпанияОтправитель = ДанныеЗаполнения.КомпанияОтправитель;
		КомпанияПолучатель = ДанныеЗаполнения.КомпанияПолучатель;
		Маршрут = ДанныеЗаполнения.Маршрут;
		МестоДоставки = ДанныеЗаполнения.МестоДоставки;
		МестоОтгрузки = ДанныеЗаполнения.МестоОтгрузки;
		ДатаДоставки = ДанныеЗаполнения.ДатаДоставки;
		ДатаПолучения = ДанныеЗаполнения.ДатаПолучения;
		ДатаУходаФакт = ДанныеЗаполнения.ДатаУходаФакт;
		
		ДатаСоздания = ТекущаяДата();
		Корректировка = Истина;
		ПодтвержденаПеревозчиком = Ложь;
		СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.ВРаботе;
		ДокументОснованиеКорректировки = ДанныеЗаполнения.Ссылка;
		
		Сторнирован = Ложь;
		Комментарий = ДанныеЗаполнения.Комментарий;
		
		Для Каждого ТекСтрокаДокОснования Из ДанныеЗаполнения.ДокументыОснования Цикл
			НоваяСтрока = ДокументыОснования.Добавить();
			НоваяСтрока.Документ = ТекСтрокаДокОснования.Документ;
		КонецЦикла;
		НоваяСтрока = ДокументыОснования.Добавить();
		НоваяСтрока.Документ = ДанныеЗаполнения.Ссылка;
		
		Для Каждого ТекСтрокаКонтактыОтправителя Из ДанныеЗаполнения.КонтактыОтправителя Цикл
			НоваяСтрока = КонтактыОтправителя.Добавить();
			НоваяСтрока.ВидКонтактнойИнформации = ТекСтрокаКонтактыОтправителя.ВидКонтактнойИнформации;
			НоваяСтрока.КонтактноеЛицо = ТекСтрокаКонтактыОтправителя.КонтактноеЛицо;
			НоваяСтрока.Представление = ТекСтрокаКонтактыОтправителя.Представление;
		КонецЦикла;
		
		Для Каждого ТекСтрокаКонтактыПолучателя Из ДанныеЗаполнения.КонтактыПолучателя Цикл
			НоваяСтрока = КонтактыПолучателя.Добавить();
			НоваяСтрока.ВидКонтактнойИнформации = ТекСтрокаКонтактыПолучателя.ВидКонтактнойИнформации;
			НоваяСтрока.КонтактноеЛицо = ТекСтрокаКонтактыПолучателя.КонтактноеЛицо;
			НоваяСтрока.Представление = ТекСтрокаКонтактыПолучателя.Представление;
		КонецЦикла;
		
		Для Каждого ТекСтрокаСоставЗаявки Из ДанныеЗаполнения.СоставЗаявки Цикл
			НоваяСтрока = СоставЗаявки.Добавить();
			НоваяСтрока.ДатаДоставкиФакт = ТекСтрокаСоставЗаявки.ДатаДоставкиФакт;
			НоваяСтрока.ДатаУходаФакт = ТекСтрокаСоставЗаявки.ДатаУходаФакт;
			НоваяСтрока.Дилер = ТекСтрокаСоставЗаявки.Дилер;
			НоваяСтрока.ЗаявкаНаДействие = ТекСтрокаСоставЗаявки.ЗаявкаНаДействие;
			НоваяСтрока.Изделие = ТекСтрокаСоставЗаявки.Изделие;
			НоваяСтрока.КомментарииТК = ТекСтрокаСоставЗаявки.КомментарииТК;
			// rarus tenkam 10.04.2018 mantis 12907 +++
			НоваяСтрока.ДатаДоставкиПлан = ТекСтрокаСоставЗаявки.ДатаДоставкиПлан;				
			// rarus tenkam 10.04.2018 mantis 12907 ---
			
		КонецЦикла;
		
		Если ДополнительныеСвойства.Свойство("ДобавитьИзделия") Тогда
		КонецЕсли;
		//rarus tenkam 06.02.2017 mantis 7750 ---
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Scan_ЗаявкаНаДействие") Тогда
		
		//rarus tenkam 30.03.2017 mantis 9171 +++
		Если НЕ ДанныеЗаполнения.Проведен Тогда
			ВызватьИсключение "Запрещен ввод документа на основании непроведенной заявки на действие!";
		КонецЕсли;
		//rarus tenkam 30.03.2017 mantis 9171 ---
		
		//rarus tenkam 10.10.2016 mantis 7183 ++
		Если НЕ ДанныеЗаполнения.ПровереноАП Тогда
			ВызватьИсключение "Запрещен ввод документа на основании неподтвержденной заявки на действие!";
		КонецЕсли;
		//rarus tenkam 10.10.2016 mantis 7183 --
		
		// rarus agar 22.12.2022 19668 ++
		Организация = ДанныеЗаполнения.Организация;
		ПодразделениеКомпании = ДанныеЗаполнения.ПодразделениеКомпании;
		// rarus agar 22.12.2022 19668 --

		Если ДанныеЗаполнения.ХозОперация = Справочники.Scan_ХозяйственныеОперации.Доставка ИЛИ
			//rarus tenkam 08.02.2017 mantis 8331 +++
			ДанныеЗаполнения.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПостановкаНаХранение ИЛИ  
			ДанныеЗаполнения.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ДоставкаИПередачаВПроизводство ИЛИ   
			//rarus tenkam 08.02.2017 mantis 8331 ---
			ДанныеЗаполнения.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаИПередачаТК ИЛИ
			ДанныеЗаполнения.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПокупкаУПоставщикаПродажаТретьемуЛицуИПередачаТК ИЛИ
			ДанныеЗаполнения.ХозОперация = Справочники.Scan_ХозяйственныеОперации.ПродажаТретьемуЛицуСоСкладаСканияРусьИПередачаТК ИЛИ		//rarus tenkam 26.09.2017 mantis 10742 +	
			ДанныеЗаполнения.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияИПередачаТК	ИЛИ
			ДанныеЗаполнения.ХозОперация = Справочники.Scan_ХозяйственныеОперации.СнятиеСХраненияПродажаТретьемуЛицуИПередачаТК Тогда
			КомпанияПолучатель = ДанныеЗаполнения.Грузополучатель;
			ДатаДоставки = ДанныеЗаполнения.ДатаДоставкиПлановая;
			СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Новая; //rarus sergei 30.09.2016 mantis 7122 + Добавили ревкизит Документа Заявка Перевозчику
			//ДатаПроведения = ДанныеЗаполнения.ДатаПроведения;
			ДатаСоздания = ТекущаяДата();
			Комментарий = ДанныеЗаполнения.Комментарий;
			МестоДоставки = ДанныеЗаполнения.МестоДоставки;
			//ВозможностьПриемаВВыходныеДни = ДанныеЗаполнения.ПриемВВыходныеИПраздничные; //rarus sergei 29.09.2016 mantis 7122 + пожелания/замечания к постановке
			СпособДоставкиИзделий = ДанныеЗаполнения.СпособДоставки;
			//rarus tenkam 06.03.2017 mantis 6897 +++ баг
			//ТребуетСогласования = ДанныеЗаполнения.ТребуетСогласования;
			ТребуетСогласования = Ложь;
			//rarus tenkam 06.03.2017 mantis 6897 ---
			//rarus tenkam 10.10.2016 mantis 7183 ++ (не все поля заполнялись - исправила)
			МестоОтгрузки = ДанныеЗаполнения.МестоПолучения;
			КомпанияОтправитель = ДанныеЗаполнения.Грузоотправитель;
			ДатаПолучения = ДанныеЗаполнения.ДатаПолучения;
			Маршрут = Справочники.Scan_МестаХранения.ПолучитьМаршрут(МестоОтгрузки, МестоДоставки);
			//rarus tenkam 10.10.2016 mantis 7183 --
			
			Для Каждого ТекСтрокаКонтактныеЛица Из ДанныеЗаполнения.КонтактныеЛица Цикл
				НоваяСтрока = КонтактыПолучателя.Добавить();
				НоваяСтрока.ВидКонтактнойИнформации = ТекСтрокаКонтактныеЛица.ВидКонтактнойИнформации;
				НоваяСтрока.КонтактноеЛицо = ТекСтрокаКонтактныеЛица.КонтактноеЛицо;
				НоваяСтрока.Представление = ТекСтрокаКонтактныеЛица.Представление;
			КонецЦикла;
			Для Каждого ТекСтрокаПродуктыПоЗаявке Из ДанныеЗаполнения.ПродуктыПоЗаявке Цикл
				НоваяСтрока = СоставЗаявки.Добавить();
				// rarus tenkam 13.08.2019 mantis 14427 +++
				//НоваяСтрока.Изделие = ТекСтрокаПродуктыПоЗаявке.Продукт.Изделие;
				НоваяСтрока.Изделие = ТекСтрокаПродуктыПоЗаявке.Изделие;
				// rarus tenkam 13.08.2019 mantis 14427 ---
				//НоваяСтрока.СтатусИзделия = ТекСтрокаПродуктыПоЗаявке.СтатусИзделия;
				НоваяСтрока.ЗаявкаНаДействие = ДанныеЗаполнения;
				// rarus tenkam 13.08.2019 mantis 14427 +++
				//НоваяСтрока.Дилер = ТекСтрокаПродуктыПоЗаявке.Продукт.Заказчик;
				НоваяСтрока.Дилер = ?(ЗначениеЗаполнено(ТекСтрокаПродуктыПоЗаявке.Изделие.ЗаказНаЗавод), ТекСтрокаПродуктыПоЗаявке.Изделие.ЗаказНаЗавод.Заказчик, Справочники.Scan_Контрагенты.ПустаяСсылка());
				// rarus tenkam 13.08.2019 mantis 14427 ---
				
				// rarus tenkam 10.04.2018 mantis 12907 +++
				НоваяСтрока.ДатаДоставкиПлан = ДатаДоставки;				
				// rarus tenkam 10.04.2018 mantis 12907 ---
			КонецЦикла;
			Строка = ДокументыОснования.Добавить();
			Строка.Документ = ДанныеЗаполнения;
		Иначе
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	////// ПРОВЕРКИ
	
	//rarus tenkam 18.02.2017 mantis 7177 +++
	Если ПодтвержденаПеревозчиком Тогда
		Если ОказанныеУслуги.Количество() = 0 Тогда
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Табличная часть ""Оказанные услуги"" не заполнена!";
			Сообщение.Поле = "ОказанныеУслуги";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		Иначе
			Для Индекс = 0 по ОказанныеУслуги.Количество()-1 Цикл
				СтрокаИзделия = ОказанныеУслуги.Получить(Индекс);
				Если НЕ ЗначениеЗаполнено(СтрокаИзделия.Цена) Тогда
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = "В строке " + (Индекс+1) + " таблицы ""Оказанные услуги"" не заполнена цена!";
					Сообщение.Поле = "ОказанныеУслуги[" + Индекс + "].Цена";
					Сообщение.УстановитьДанные(ЭтотОбъект);
					Сообщение.Сообщить();
					Отказ = Истина;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;		
	КонецЕсли;
	//rarus tenkam 18.02.2017 mantis 7177 ---

	//rarus tenkam 03.11.2016 mantis 7183 ++
	//rarus tenkam 21.03.2017 mantis 9109 +++
	//НаборЗаписейМестонахождениеИзделий = РегистрыНакопления.Scan_МестонахождениеИзделий.СоздатьНаборЗаписей();
	//НаборЗаписейМестонахождениеИзделий.Отбор.Регистратор.Значение = Ссылка;
	//НаборЗаписейМестонахождениеИзделий.Очистить();
	//НаборЗаписейМестонахождениеИзделий.ДополнительныеСвойства.Вставить("ОчисткаПередЗаписью", Истина);	//rarus tenkam 05.03.2017 mantis 6897 +
	//НаборЗаписейМестонахождениеИзделий.Записать();
	//rarus tenkam 21.03.2017 mantis 9109 ---
	Движения.Scan_МестонахождениеИзделий.Записывать = Истина;
	Если ПодтвержденаПеревозчиком И ЗначениеЗаполнено(ДатаУходаФакт) Тогда
		Для Индекс = 0 по СоставЗаявки.Количество()-1 Цикл
			СтрокаИзделия = СоставЗаявки.Получить(Индекс);
			//rarus tenkam 21.03.2017 mantis 9109 +++
			//МестонахождениеИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестонахождениеИДатуПриходаИзделия(СтрокаИзделия.Изделие, СтрокаИзделия.ДатаУходаФакт);
			ДанныеМестоположения = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьДанныеПоМестонахождениюИзделия(СтрокаИзделия.Изделие, СтрокаИзделия.ДатаУходаФакт, Ссылка);
			МестоположениеИзделия = ?(ДанныеМестоположения = Неопределено, Неопределено, ДанныеМестоположения.МестоХранения);
			ДатаПриходаИзделия = ?(ДанныеМестоположения = Неопределено, Дата('00010101'), ДанныеМестоположения.ДатаПрихода); 
			РегистраторМестоположения = ?(ДанныеМестоположения = Неопределено, Неопределено, ДанныеМестоположения.Регистратор); 	//rarus tenkam 07.11.2017 mantis 11665 +
			//Если ЗначениеЗаполнено(МестонахождениеИзделия) И МестонахождениеИзделия.МестоХранения <> МестоОтгрузки Тогда
			//rarus tenkam 21.03.2017 mantis 9109 ---
			Если ЗначениеЗаполнено(МестоположениеИзделия) И МестоположениеИзделия <> МестоОтгрузки Тогда
			
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " нельзя установить дату ухода! " + "На дату " + СтрокаИзделия.ДатаУходаФакт + " изделие находится в " + МестоположениеИзделия + ?(ЗначениеЗаполнено(РегистраторМестоположения)," (см. документ: " + РегистраторМестоположения + ")", ""); //rarus tenkam 07.11.2017 mantis 11665 +
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;	
			//rarus tenkam 21.03.2017 mantis 9109 +++
			ИначеЕсли НЕ ЗначениеЗаполнено(МестоположениеИзделия) Тогда
			//ИначеЕсли НЕ ЗначениеЗаполнено(МестонахождениеИзделия) Тогда
			//rarus tenkam 21.03.2017 mantis 9109  ---
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " нельзя установить дату ухода! " + "На дату " + СтрокаИзделия.ДатаУходаФакт + " изделие не находится в месте отгрузки!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;	
			КонецЕсли;
		КонецЦикла;
	//rarus tenkam 23.12.2016 mantis 8215 ++
	ИначеЕсли НЕ ПодтвержденаПеревозчиком Тогда
		Для Индекс = 0 по СоставЗаявки.Количество()-1 Цикл
			СтрокаИзделия = СоставЗаявки.Получить(Индекс);
			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаУходаФакт) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " нельзя установить дату ухода! Заявка должна быть подтверждена перевозчиком!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;	
			КонецЕсли;

			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаДоставкиФакт) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " нельзя установить дату доставки! Заявка должна быть подтверждена перевозчиком!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;	
			КонецЕсли;
		КонецЦикла;
	//rarus tenkam 23.12.2016 mantis 8215 --
	КонецЕсли;
	//rarus tenkam 03.11.2016 mantis 7183 --
	
	////// ДВИЖЕНИЯ
	
	Если ЭтотОбъект.Сторнирован = Ложь Тогда
		//Проверка согласования документа
		Если ТребуетСогласования И (НЕ Scan_ОбщегоНазначения_проф.ДокументСогласован(Ссылка)) Тогда
			Scan_ОбщегоНазначенияТиповые.СообщитьОбОшибкеПользователю("Документ """ + Ссылка + """ необходимо согласовать!", Отказ);
			Возврат;
		КонецЕсли;
		//Проверка: нельзя создать две заявки перевозчику для одно изделия в одно и тоже время
		Если ЭтотОбъект.Проведен = Ложь Тогда
			Отказ = ПроверитьИзделияПоЗаявкам();
		КонецЕсли; 	
		
		Если НЕ Отказ Тогда
			//ДатаПроведения = ТекущаяДата(); 	//rarus tenkam 31.10.2017 mantis 11695 +
				
			// регистр Scan_ЗаявкиНаДействия Приход
			Движения.Scan_ЗаявкиНаДействия.Записывать = Истина;
			Для Каждого ТекСтрока Из СоставЗаявки Цикл
				Движение = Движения.Scan_ЗаявкиНаДействия.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Регистратор = Ссылка;
				Движение.Период = Дата;
				Движение.Изделие = ТекСтрока.Изделие;
				Движение.ЗаявкаНаДействие = ТекСтрока.ЗаявкаНаДействие;
				Движение.ЗаявкаПеревозчику = Ссылка;
				Движение.ЗаказаноПоставщику = 1;
				Движение.ХозяйственныеОперации = ХозОперация;
				Движение.Пользователь = Менеджер;
			КонецЦикла;
			
			// регистр Scan_КорректировкаИнформацииПоЗаявкам
			Для Каждого ТекСтрока Из СоставЗаявки Цикл
				НаборЗаписей = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.СоздатьНаборЗаписей(); 
				НаборЗаписей.Отбор.Регистратор.Установить(ТекСтрока.ЗаявкаНаДействие); 
				НаборЗаписей.Прочитать(); 
				Для Каждого Запись Из НаборЗаписей Цикл 
					Если Запись.Изделие = ТекСтрока.Изделие Тогда
						Запись.Период = Дата;
						Запись.ЗаявкаПеревозчику = Ссылка;
						//rarus tenkam 06.10.2016 mantis 7183 ++
						Если Исполнена Тогда
							Запись.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.Исполнена;
						ИначеЕсли ПодтвержденаПеревозчиком Тогда
						//Если ПодтвержденаПеревозчиком=Истина Тогда
						//rarus tenkam 06.10.2016 mantis 7183 --
							Запись.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.ДоставкаПодтверждена;	
						Иначе
							Запись.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.СогласованиеДоставки;
						КонецЕсли;
						Запись.ДатаПолученияПлан = ДатаПолучения;
						Запись.ДатаДоставкиПлан = ДатаДоставки;
						Запись.Перевозчик = Перевозчик;
						Запись.Грузополучатель = КомпанияПолучатель;
						Запись.МестоДоставки = МестоДоставки;
						Запись.СпособДоставки = СпособДоставкиИзделий;
						//Запись.ПриемВВыходныеДни = ВозможностьПриемаВВыходныеДни; //rarus sergei 29.09.2016 mantis 7122 + пожелания/замечания к постановке
						Запись.GuidСтроки = Новый УникальныйИдентификатор(); //rarus sergei 19.09.2016 mantis 7167+
						//Запись.КонечныйКлиент =
						
						Запись.Операция = ХозОперация;
						
					КонецЕсли; 	
				КонецЦикла; 
				НаборЗаписей.Записать();
				
			КонецЦикла;
			
			//rarus tenkam 05.10.2016 mantis 7183 ++
			Если ПодтвержденаПеревозчиком И ЗначениеЗаполнено(ДатаУходаФакт) Тогда
				Движения.Scan_МестонахождениеИзделий.Записывать = Истина;
				
				Для Каждого ТекСтрока Из СоставЗаявки Цикл
					//rarus tenkam 03.11.2016 mantis 7183 ++
					Если ЗначениеЗаполнено(ТекСтрока.ДатаУходаФакт) Тогда
						//rarus tenkam 21.03.2017 mantis 9109 +++
						////МестонахождениеИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестонахождениеИДатуПриходаИзделия(ТекСтрока.Изделие, ДатаУходаФакт);
						//МестонахождениеИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестонахождениеИДатуПриходаИзделия(ТекСтрока.Изделие, ТекСтрока.ДатаУходаФакт);
						////rarus tenkam 03.11.2016 mantis 7183 --
						ДанныеМестоположения = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьДанныеПоМестонахождениюИзделия(ТекСтрока.Изделие, ТекСтрока.ДатаУходаФакт, Ссылка);
						МестоположениеИзделия = ?(ДанныеМестоположения = Неопределено, Неопределено, ДанныеМестоположения.МестоХранения);
						ДатаПриходаИзделия = ?(ДанныеМестоположения = Неопределено, Дата('00010101'), ДанныеМестоположения.ДатаПрихода); 
						//rarus tenkam 21.03.2017 mantis 9109 ---
						
						//rarus tenkam 21.03.2017 mantis 9109 +++
						Если НЕ ЗначениеЗаполнено(МестоположениеИзделия) Тогда
						//Если НЕ ЗначениеЗаполнено(МестонахождениеИзделия) Тогда
						//rarus tenkam 21.03.2017 mantis 9109 ---
							Отказ = Истина;
							Возврат;
						КонецЕсли;
						
						// регистр Scan_МестонахождениеИзделий Расход
						Движение = Движения.Scan_МестонахождениеИзделий.Добавить();
						Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
						//Движение.Период = ДатаУходаФакт;		//rarus tenkam 03.11.2016 mantis 7183 +
						Движение.Период = ТекСтрока.ДатаУходаФакт;
						Движение.Изделие = ТекСтрока.Изделие;
						Движение.МестоХранения = МестоОтгрузки;
						//rarus tenkam 21.03.2017 mantis 9109 +++
						//Движение.ДатаПрихода = МестонахождениеИзделия.ДатаПрихода;
						Движение.ДатаПрихода = ДатаПриходаИзделия;
						//rarus tenkam 21.03.2017 mantis 9109 ---
						Движение.Количество = 1;
						Движение.ХозОперация = ХозОперация;
						Движение.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
						
						// регистр Scan_МестонахождениеИзделий Приход
						Движение = Движения.Scan_МестонахождениеИзделий.Добавить();
						Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
						//Движение.Период = ДатаУходаФакт;		//rarus tenkam 03.11.2016 mantis 7183 +
						Движение.Период = ТекСтрока.ДатаУходаФакт;
						Движение.Изделие = ТекСтрока.Изделие;
						Движение.МестоХранения = Маршрут;
						//Движение.ДатаПрихода = ДатаУходаФакт;  	//rarus tenkam 03.11.2016 mantis 7183 +
						Движение.ДатаПрихода = ТекСтрока.ДатаУходаФакт;
						Движение.Количество = 1;
						Движение.ХозОперация = ХозОперация;
						Движение.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
					КонецЕсли;	
				КонецЦикла;	
			КонецЕсли;
			
			Движения.Scan_МестонахождениеИзделий.Записывать = Истина;
			Если ПодтвержденаПеревозчиком Тогда		//rarus tenkam 23.12.2016 mantis 8215 +
				Для Каждого ТекСтрока Из СоставЗаявки Цикл
					Если ЗначениеЗаполнено(ТекСтрока.ДатаДоставкиФакт) И ЗначениеЗаполнено(ТекСтрока.ДатаУходаФакт) Тогда	//rarus tenkam 23.12.2016 mantis 8215 + (проверка ухода)	
						//rarus tenkam 21.03.2017 mantis 9109 +++
						//МестонахождениеИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестонахождениеИДатуПриходаИзделия(ТекСтрока.Изделие, ТекСтрока.ДатаУходаФакт);
						//Если НЕ ЗначениеЗаполнено(МестонахождениеИзделия) Тогда
						ДанныеМестоположения = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьДанныеПоМестонахождениюИзделия(ТекСтрока.Изделие, ТекСтрока.ДатаУходаФакт, Ссылка);
						Если НЕ ЗначениеЗаполнено(ДанныеМестоположения) Тогда
						//rarus tenkam 21.03.2017 mantis 9109 ---
								Отказ = Истина;
							Возврат;
						КонецЕсли;
						
						// регистр Scan_МестонахождениеИзделий Расход
						Движение = Движения.Scan_МестонахождениеИзделий.Добавить();
						Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
						//Движение.Период = ДатаУходаФакт;	//tenkam  19.10.2016 mantis 7183 + (в период теперь записываем дату доставки)
						Движение.Период = ТекСтрока.ДатаДоставкиФакт;
						Движение.Изделие = ТекСтрока.Изделие;
						Движение.МестоХранения = Маршрут;
						//Движение.ДатаПрихода = ДатаУходаФакт;		//rarus tenkam 03.11.2016 mantis 7183 +
						Движение.ДатаПрихода = ТекСтрока.ДатаУходаФакт;
						Движение.Количество = 1;
						Движение.ХозОперация = ХозОперация;
						Движение.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
						
						// регистр Scan_МестонахождениеИзделий Приход
						Движение = Движения.Scan_МестонахождениеИзделий.Добавить();
						Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
						Движение.Период = ТекСтрока.ДатаДоставкиФакт;
						Движение.Изделие = ТекСтрока.Изделие;
						Движение.МестоХранения = МестоДоставки;
						Движение.ДатаПрихода = ТекСтрока.ДатаДоставкиФакт;
						Движение.Количество = 1;
						Движение.ХозОперация = ХозОперация;
						Движение.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			//rarus tenkam 05.10.2016 mantis 7183 --
			
			//rarus tenkam 18.02.2017 mantis 7177 +++
			Если СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена Тогда
			
				// регистр Scan_РеестрОказанныхУслуг
				Движения.Scan_РеестрОказанныхУслуг.Записывать = Истина;
				Для Каждого ТекСтрокаОказанныеУслуги Из ОказанныеУслуги Цикл
					Движение = Движения.Scan_РеестрОказанныхУслуг.Добавить();
					Движение.Изделие = ТекСтрокаОказанныеУслуги.Изделие;
					Движение.Контрагент = Перевозчик;
					Движение.ДоговорКонтрагента = ДоговорСПеревозчиком;
					Движение.НоменклатураУслуги = Справочники.Scan_НоменклатураУслуг.Доставка;
					//Движение.ТипПродукта = ТекСтрокаОказанныеУслуги.Изделие.ТипПродукта;
					Движение.СтавкаНДС = ТекСтрокаОказанныеУслуги.СтавкаНДС;
					Движение.СпособДоставки = СпособДоставкиИзделий;
					Движение.АдресПолучения = МестоОтгрузки.АдресСкладаЛогистический;
					Движение.АдресДоставки = МестоДоставки.АдресСкладаЛогистический;
					//rarus tenkam 27.03.2017 mantis 7623 +++
					НайденнаяСтрока = СоставЗаявки.Найти(ТекСтрокаОказанныеУслуги.Изделие,"Изделие");
					Если ЗначениеЗаполнено(НайденнаяСтрока) Тогда
						Движение.ДатаДоставкиФакт = НайденнаяСтрока.ДатаДоставкиФакт;
					КонецЕсли;
					//rarus tenkam 27.03.2017 mantis 7623 ---
					Движение.ИзмененаВручную = ТекСтрокаОказанныеУслуги.ИзмененаВручную;	// rarus tenkam 11.02.2019 mantis 14048 +
					Движение.Сумма = ТекСтрокаОказанныеУслуги.Сумма;
					Движение.СуммаНДС = ТекСтрокаОказанныеУслуги.СуммаНДС;
					Движение.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
					
					ГруппаИзделия =  ТекСтрокаОказанныеУслуги.Изделие.ТипПродукта.ВидПродукта.ГруппаПродукта;
					Если ГруппаИзделия = Справочники.Scan_ГруппыПродуктов.ТранспортныеСредства Тогда
						ЛогТип = ТекСтрокаОказанныеУслуги.Изделие.ТипПродуктаЛогистический;
						КолФормула = ТекСтрокаОказанныеУслуги.Изделие.МодельПродукта.КолеснаяФормула;
					Иначе 
						ЛогТип = Справочники.Scan_ТипыПродуктовЛогистика.ПустаяСсылка();
						КолФормула = Справочники.Scan_КолесныеФормулыИзделий.ПустаяСсылка();
					КонецЕсли;
					//rarus anch 14.03.2017 mantis 7177 +++
					//Движение.ГруппаПродкта = ГруппаИзделия;
					Движение.ГруппаПродукта = ГруппаИзделия;
					//rarus anch 14.03.2017 mantis 7177 ---
					Движение.ЛогистическийТип = ЛогТип;
					Движение.КолеснаяФормула = КолФормула;
				КонецЦикла;
			Иначе
				НаборЗаписей = РегистрыСведений.Scan_РеестрОказанныхУслуг.СоздатьНаборЗаписей(); 
				НаборЗаписей.Отбор.Регистратор.Установить(Ссылка); 
				НаборЗаписей.Записать();		
			КонецЕсли;
			//rarus tenkam 18.02.2017 mantis 7177 ---

		КонецЕсли;                                                            
	Иначе
		//rarus tenkam 18.02.2017 mantis 7177 +++
		// регистр Scan_РеестрОказанныхУслуг
		НаборЗаписей = РегистрыСведений.Scan_РеестрОказанныхУслуг.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Регистратор.Установить(Ссылка); 
		НаборЗаписей.Записать();	
		//rarus tenkam 18.02.2017 mantis 7177 ---
					
		// регистр Scan_ЗаявкиНаДействия Расход
		НаборЗаписей=РегистрыНакопления.Scan_ЗаявкиНаДействия.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Регистратор.Установить(Ссылка); 
		НаборЗаписей.Записать();		
		
		//rarus tenkam 07.02.2017 mantis 7750 +++
		// регистр Scan_КорректировкаИнформацииПоЗаявкам
		//Получим все записи, в которых была указана сторнируемая заявка перевозчику
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_КорректировкаИнформацииПоЗаявкам.Регистратор
		|ИЗ
		|	РегистрСведений.Scan_КорректировкаИнформацииПоЗаявкам КАК Scan_КорректировкаИнформацииПоЗаявкам
		|ГДЕ
		|	Scan_КорректировкаИнформацииПоЗаявкам.ЗаявкаПеревозчику = &ЗаявкаПеревозчику";
		Запрос.УстановитьПараметр("ЗаявкаПеревозчику", Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор); 
			НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл 
				Запись.Период = ТекущаяДата();
				Запись.ЗаявкаПеревозчику = Документы.Scan_ЗаявкаПеревозчику.ПустаяСсылка();
				Запись.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.Новая;
				Запись.ДатаПолученияПлан = Дата('00010101');
				Запись.ДатаДоставкиПлан = ВыборкаДетальныеЗаписи.Регистратор.ДатаДоставкиПлановая;
				Запись.Перевозчик = Справочники.Scan_Контрагенты.ПустаяСсылка();
				Запись.Грузополучатель = ВыборкаДетальныеЗаписи.Регистратор.Грузополучатель;
				Запись.МестоДоставки = ВыборкаДетальныеЗаписи.Регистратор.МестоДоставки;
				Запись.СпособДоставки = ВыборкаДетальныеЗаписи.Регистратор.СпособДоставки;
				Запись.ПриемВВыходныеДни = ВыборкаДетальныеЗаписи.Регистратор.ПриемВВыходныеИПраздничные;
				Запись.Операция = ВыборкаДетальныеЗаписи.Регистратор.ХозОперация; 	
			КонецЦикла; 
			НаборЗаписей.Записать();	
		КонецЦикла;
		//rarus tenkam 07.02.2017 mantis 7750 ---
	КонецЕсли;
	
	//rarus tenkam 06.03.2017 mantis 6897 +++ (места хранения)
	//Если Движения.Scan_МестонахождениеИзделий.Количество() = 0 И Движения.Scan_МестонахождениеИзделий.Записывать Тогда
	//	Движения.Scan_МестонахождениеИзделий.Записывать = Ложь;
	//КонецЕсли;
	//rarus tenkam 06.03.2017 mantis 6897 ---
	
	
	
КонецПроцедуры

Функция ПроверитьИзделияПоЗаявкам()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ЗаявкаПеревозчику.Ссылка
	               |ИЗ
	               |	Документ.Scan_ЗаявкаПеревозчику КАК Scan_ЗаявкаПеревозчику
	               |ГДЕ
	               |	Scan_ЗаявкаПеревозчику.Сторнирован = ЛОЖЬ
	               |	И Scan_ЗаявкаПеревозчику.Ссылка <> &СсылкаДокумент
	               |	И Scan_ЗаявкаПеревозчику.ДатаДоставки > &ДатаОтгрузки
	               |	И Scan_ЗаявкаПеревозчику.СоставЗаявки.Изделие = &СсылкаИзделие
	               |	И Scan_ЗаявкаПеревозчику.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("СсылкаДокумент", Ссылка);
	Запрос.УстановитьПараметр("ДатаОтгрузки", Ссылка.ДатаПолучения);
	Для каждого строка Из ЭтотОбъект.СоставЗаявки Цикл
	
		Запрос.УстановитьПараметр("СсылкаИзделие", строка.Изделие);
		Результат = Запрос.Выполнить();
	    Если НЕ Результат.Пустой() Тогда
			ТЗ = Результат.Выгрузить();
			Сообщить("Документ Заявка перевозчику не может быть проведен, т.к. продукт "+строка.Изделие+ " уже указан в заявке перевозчику "+ТЗ[0].Ссылка+" и даты перевозки пересекаются");
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла; 
	Возврат Ложь;	
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	//регистр Scan_КорректировкаИнформацииПоЗаявкам

	Если  ПроверитьПоДокументамОснованиям() Тогда
		Для Каждого ТекСтрока Из СоставЗаявки Цикл
			//Справочники.Scan_Изделия.УстановитьСтатусИзделия(ТекСтрока.Изделие, Перечисления.Scan_СтатусыИзделий.Новая);
			
			НаборЗаписей = РегистрыСведений.Scan_КорректировкаИнформацииПоЗаявкам.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.Регистратор.Установить(ТекСтрока.ЗаявкаНаДействие); 
			НаборЗаписей.Прочитать(); 
			Для Каждого Запись Из НаборЗаписей Цикл 
				Если Запись.Изделие = ТекСтрока.Изделие Тогда
					Запись.Период = Дата;
					Запись.ЗаявкаПеревозчику = Документы.Scan_ЗаявкаПеревозчику.ПустаяСсылка();
					Запись.СтатусИзделия = Перечисления.Scan_СтатусыИзделий.Новая;
					Запись.ДатаПолученияПлан = "00010101000000";
					Запись.ДатаДоставкиПлан = ТекСтрока.ЗаявкаНаДействие.ДатаДоставкиПлановая;
					Запись.Перевозчик = Справочники.Scan_Контрагенты.ПустаяСсылка();
					Запись.Грузополучатель = ТекСтрока.ЗаявкаНаДействие.Грузополучатель;
					Запись.МестоДоставки = ТекСтрока.ЗаявкаНаДействие.МестоДоставки;
					Запись.СпособДоставки = ТекСтрока.ЗаявкаНаДействие.СпособДоставки;
					Запись.ПриемВВыходныеДни = ТекСтрока.ЗаявкаНаДействие.ПриемВВыходныеИПраздничные;
					Запись.GuidСтроки = Новый УникальныйИдентификатор(); //rarus sergei 19.09.2016 mantis 7167+
					//Запись.КонечныйКлиент =
					
					Запись.Операция = ТекСтрока.ЗаявкаНаДействие.ХозОперация;
					Прервать;
				КонецЕсли;
				
			КонецЦикла; 
			НаборЗаписей.Записать();
			Scan_ВспомогательныеФункцииСервер.НастроитьСтатусДокументаЗаявкаНаДействие(ТекСтрока.ЗаявкаНаДействие);
			
			КонецЦикла;
		Иначе
		Отказ = Истина;
		Сообщить("Нельзя установить пометку удаления Документу, который является документом основанием");
	КонецЕсли;	
КонецПроцедуры

Функция ПроверитьПоДокументамОснованиям()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ЗаявкаПеревозчикуДокументыОснования.Ссылка
	               |ИЗ
	               |	Документ.Scan_ЗаявкаПеревозчику.ДокументыОснования КАК Scan_ЗаявкаПеревозчикуДокументыОснования
	               |ГДЕ
	               |	Scan_ЗаявкаПеревозчикуДокументыОснования.Документ = &СсылкаДокумент";
	Запрос.УстановитьПараметр("СсылкаДокумент",Ссылка);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	
	КонецЕсли; 
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//rarus sergei 09.11.2016 mantis 7163 ++
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ?(ЭтотОбъект.ЭтоНовый(), ИСТИНА, ЛОЖЬ));
	//rarus sergei 09.11.2016 mantis 7163 --
	
	Отказ = ПроверитьДоговорСПеревозчиком(); //rarus sergei 21.11.2016 mantis 7121 +
	//rarus tenkam 24.10.2017 mantis 11439 +++ (эта проверка не дает провести старые документы)
	////rarus sergei 30.09.2016 mantis 7122 ++
	//Если НЕ ПривилегированныйРежим() Тогда //rarus sergei 11.10.2016 mantis 7162 + не отрабатывала кнопка исключения изделия из Заявки на дейсвтие 
	//	Если ЭтотОбъект.ПометкаУдаления = Ложь И ЭтотОбъект.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Аннулирована Тогда
	//		Сообщить("Нельзя снять пометку удаления у документа, статус которого аннулирован");
	//		Отказ = Истина;
	//	КонецЕсли; 	
	//КонецЕсли;
	////rarus sergei 30.09.2016 mantis 7122 --
	//rarus tenkam 24.10.2017 mantis 11439 ---
	
	//rarus tenkam 06.02.2017 mantis 7750 +++
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//rarus pechek 10.02.2020 mantis 15680 +++
		//запрет на проведение, если документ-основание заявка на действие аннулирован
		Если ДокументыОснования.Количество() <> 0 Тогда
			Если ТипЗнч(ДокументыОснования[0].Документ) = Тип("ДокументСсылка.Scan_ЗаявкаНаДействие") И ДокументыОснования[0].Документ.СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Аннулирована Тогда
				Сообщить("Документ основание аннулирован!");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;		
		//rarus pechek 10.02.2020 mantis 15680 ---
		
	//Это корректировка из "Распределения заявок"
		Если Корректировка И НЕ ДокументОснованиеКорректировки.Сторнирован Тогда
			// Старую заявку перевозчику сторнируем
			Scan_ВспомогательныеФункцииСервер.СторнироватьДокумент(ДокументОснованиеКорректировки);
			Scan_ВспомогательныеФункцииСервер.СформироватьНапоминаниеОбАннулировании(ДокументОснованиеКорректировки);	
			
		КонецЕсли;
		
		//rarus tenkam 01.08.2018 mantis 13375 +++
		////rarus tenkam 08.11.2017 mantis 11774 +++
		//Если НЕ Отказ Тогда
		//	Если СоставЗаявки.Количество() = Ссылка.СоставЗаявки.Количество() Тогда	
		//		МассивДоставленныхПродуктов = Новый Массив;
		//		Для Сч = 0 По СоставЗаявки.Количество()-1 Цикл
		//			ТекСтрока = СоставЗаявки.Получить(Сч);
		//			СтараяСтрока = Ссылка.СоставЗаявки.Получить(Сч);
		//			
		//			Если ЗначениеЗаполнено(ТекСтрока.ДатаДоставкиФакт) И
		//				НЕ ЗначениеЗаполнено(СтараяСтрока.ДатаДоставкиФакт) Тогда
		//				
		//				ТекПродукт = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьПродуктПоИзделию(ТекСтрока.Изделие);
		//			    
		//				СтруктураДанных = Новый Структура("Продукт", ТекПродукт);
		//				СтруктураДанных.Вставить("ДатаДоставкиФакт", ТекСтрока.ДатаДоставкиФакт);
		//				СтруктураДанных.Вставить("ЗаявкаНаДействие", ТекСтрока.ЗаявкаНаДействие);
		//				//МассивДоставленныхПродуктов.Добавить(ТекПродукт);
		//				МассивДоставленныхПродуктов.Добавить(СтруктураДанных);
		//			КонецЕсли;
		//		КонецЦикла;
		//	КонецЕсли;
		//КонецЕсли;
		////rarus tenkam 08.11.2017 mantis 11774 ---
		//rarus tenkam 01.08.2018 mantis 13375 ---
	КонецЕсли;
	//rarus tenkam 06.02.2017 mantis 7750 ---
	
	//rarus vikhle 01.12.2020 mt 16823 +++
	Если Не Отказ И СоставЗаявки.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СоставЗаявки.ЗаявкаНаДействие КАК ЗаявкаНаДействие,
		               |	ВЫРАЗИТЬ(СоставЗаявки.Изделие КАК Справочник.Scan_Изделия) КАК Изделие,
		               |	СоставЗаявки.Дилер КАК Дилер,
		               |	СоставЗаявки.ДатаУходаФакт КАК ДатаУходаФакт,
		               |	СоставЗаявки.ДатаДоставкиФакт КАК ДатаДоставкиФакт,
		               |	СоставЗаявки.ДатаДоставкиПлан КАК ДатаДоставкиПлан,
		               |	СоставЗаявки.КомментарииТК КАК КомментарииТК
		               |ПОМЕСТИТЬ СоставЗаявки
		               |ИЗ
		               |	&СоставЗаявки КАК СоставЗаявки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СоставЗаявки.ЗаявкаНаДействие КАК ЗаявкаНаДействие,
		               |	СоставЗаявки.Изделие КАК Изделие,
		               |	СоставЗаявки.Дилер КАК Дилер,
		               |	СоставЗаявки.ДатаУходаФакт КАК ДатаУходаФакт,
		               |	СоставЗаявки.ДатаДоставкиФакт КАК ДатаДоставкиФакт,
		               |	СоставЗаявки.ДатаДоставкиПлан КАК ДатаДоставкиПлан,
		               |	СоставЗаявки.КомментарииТК КАК КомментарииТК
		               |ИЗ
		               |	СоставЗаявки КАК СоставЗаявки
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	СоставЗаявки.Изделие.НомерИзделия";
		Запрос.УстановитьПараметр("СоставЗаявки",СоставЗаявки.Выгрузить());
		ОтсортированнаяТЗ = Запрос.Выполнить().Выгрузить();
		СоставЗаявки.Загрузить(ОтсортированнаяТЗ);
	КонецЕсли;	
	//rarus vikhle 01.12.2020 mt 16823 ---
	
КонецПроцедуры
//rarus sergei 09.09.2016 mantis 7167 --

//rarus tenkam 05.10.2016 mantis 7183 ++
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// Проверим заполненность реквизита "Маршрут"
	ТекМаршрут = ПроверяемыеРеквизиты.Найти("Маршрут");
	Если Не ЗначениеЗаполнено(Маршрут) Тогда
		
		// Если он не заполнен, сообщим об этом пользователю
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не указан маршрут! Создайте маршрут по кнопке ""Добавить"" справа от поля.";
		Сообщение.Поле = "Маршрут";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		
		Сообщение.Сообщить();
		
		// Сообщим платформе, что мы сами обработали проверку заполнения реквизита "Покупатель"
		ПроверяемыеРеквизиты.Удалить(ТекМаршрут);
		// Так как информация не консистентна, то продолжать работу дальше смысла нет
		Отказ = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаУходаФакт) Тогда
		//rarus tenkam 14.10.2016 mantis 7688 ++
		// Проверим, что фактическая дата ухода меньше текущей даты
		Если ДатаУходаФакт > ТекущаяДата() Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Фактическая дата ухода не может быть больше текущей даты!";
			Сообщение.Поле = "ДатаУходаФакт";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;	
		КонецЕсли;
		//rarus tenkam 14.10.2016 mantis 7688 --
		
		//rarus tenkam 03.11.2016 mantis 7183 ++
		//Для Индекс = 0 по СоставЗаявки.Количество()-1 Цикл
		//	СтрокаИзделия = СоставЗаявки.Получить(Индекс);
		//	МестонахождениеИзделия = РегистрыНакопления.Scan_МестонахождениеИзделий.ПолучитьМестонахождениеИДатуПриходаИзделия(СтрокаИзделия.Изделие, ДатаУходаФакт);
		//	Если ЗначениеЗаполнено(МестонахождениеИзделия) И МестонахождениеИзделия.МестоХранения <> МестоОтгрузки Тогда
		//		Сообщение = Новый СообщениеПользователю();
		//		Сообщение.Текст = "В строке " + (Индекс+1) + " нельзя установить дату ухода! " + "На дату " + ДатаУходаФакт + " изделие находится в " + МестонахождениеИзделия.МестоХранения;
		//		Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
		//		Сообщение.УстановитьДанные(ЭтотОбъект);
		//		Сообщение.Сообщить();
		//		Отказ = Истина;	
		//	//rarus tenkam 14.10.2016 mantis 7688 ++
		//	ИначеЕсли НЕ ЗначениеЗаполнено(МестонахождениеИзделия) Тогда
		//		Сообщение = Новый СообщениеПользователю();
		//		Сообщение.Текст = "В строке " + (Индекс+1) + " нельзя установить дату ухода! " + "На дату " + ДатаУходаФакт + " изделие не находится в месте отгрузки!";
		//		Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
		//		Сообщение.УстановитьДанные(ЭтотОбъект);
		//		Сообщение.Сообщить();
		//		Отказ = Истина;	
		//	//rarus tenkam 14.10.2016 mantis 7688 --
		//	КонецЕсли;
		//КонецЦикла;
		
		Для Индекс = 0 по СоставЗаявки.Количество()-1 Цикл
			СтрокаИзделия = СоставЗаявки.Получить(Индекс);
			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаУходаФакт) И СтрокаИзделия.ДатаУходаФакт > ТекущаяДата() Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " дата ухода (факт) больше текущей даты!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаДоставкиФакт) И СтрокаИзделия.ДатаДоставкиФакт > ТекущаяДата() Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " дата доставки (факт) больше текущей даты!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаДоставкиФакт) И НЕ ЗначениеЗаполнено(СтрокаИзделия.ДатаУходаФакт) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " дата ухода (факт) не указана!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаДоставкиФакт) И ЗначениеЗаполнено(СтрокаИзделия.ДатаУходаФакт) Тогда
				Если СтрокаИзделия.ДатаДоставкиФакт < СтрокаИзделия.ДатаУходаФакт Тогда  
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = "В строке " + (Индекс+1) + " дата ухода (факт) больше даты доставки (факт)!";
					Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
					Сообщение.УстановитьДанные(ЭтотОбъект);
					Сообщение.Сообщить();
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		//rarus tenkam 03.11.2016 mantis 7183 --
	Иначе
		//rarus tenkam 03.11.2016 mantis 7183 ++
		//Если в ТЧ где-то дата ухода (факт) заполнена,то общая тоже должна быть заполнена
		ВТЧЕстьДатаУходаФакт = Ложь;
		Для Каждого СтрокаИзделия Из СоставЗаявки Цикл
			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаУходаФакт) Тогда
				ВТЧЕстьДатаУходаФакт = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ВТЧЕстьДатаУходаФакт Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Дата ухода (факт) не заполнена!";
			Сообщение.Поле = "ДатаУходаФакт";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		//rarus tenkam 03.11.2016 mantis 7183 --
		
		//rarus tenkam 03.03.2017 TLMS 011 +++
		Для Индекс = 0 по СоставЗаявки.Количество()-1 Цикл
			СтрокаИзделия = СоставЗаявки.Получить(Индекс);
			Если ЗначениеЗаполнено(СтрокаИзделия.ДатаДоставкиФакт) И НЕ ЗначениеЗаполнено(СтрокаИзделия.ДатаУходаФакт) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " дата ухода (факт) не указана!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		//rarus tenkam 03.03.2017 TLMS 011 ---
	КонецЕсли;
	
	//rarus tenkam 13.06.2019 mantis 14412 +++
	Если Проведен И НЕ ПометкаУдаления И ПодтвержденаПеревозчиком И СтатусЗаявки <> ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаДействие.Аннулирована") Тогда
		Для Индекс = 0 по СоставЗаявки.Количество()-1 Цикл
			СтрокаИзделия = СоставЗаявки.Получить(Индекс);
			Если НЕ ЗначениеЗаполнено(СтрокаИзделия.ДатаДоставкиПлан) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "В строке " + (Индекс+1) + " дата доставки (план) не заполнена!";
				Сообщение.Поле = "СоставЗаявки[" + Индекс + "]";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//rarus tenkam 13.06.2019 mantis 14412 ---
	
КонецПроцедуры

// Функция проверяет у всех ли изделий в тч заполнена дата фактической доставки
Функция ВсеИзделияИсполнены(ЗаявкаСсылка) Экспорт
	ВсеИсполнены = Истина;
	Для Каждого СтрокаИзделия Из ЗаявкаСсылка.СоставЗаявки Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаИзделия.ДатаДоставкиФакт) Тогда
			ВсеИсполнены = Ложь;
			Возврат ВсеИсполнены;
		КонецЕсли;
	КонецЦикла;
	Возврат ВсеИсполнены;
КонецФункции
//rarus tenkam 05.10.2016 mantis 7183 --

//rarus sergei 21.11.2016 mantis 7121 ++
Функция ПроверитьДоговорСПеревозчиком()
	Если ЭтотОбъект.ДоговорСПеревозчиком.Бессрочный = Истина Тогда
		Если ЭтотОбъект.ДатаПолучения < НачалоДня(ЭтотОбъект.ДоговорСПеревозчиком.ДатаНачала) Тогда //rarus bonmak 29.08.2019 14817 было ЭтотОбъект.ДатаДоставки, установил начало дня 
			Сообщить("Документ "+ ЭтотОбъект.Ссылка+ " не проведен. Дата получения меньше даты начала действия договора с перевозчиком!");
			Возврат Истина;
		КонецЕсли; 
	Иначе
		Если ЭтотОбъект.ДатаПолучения < НачалоДня(ЭтотОбъект.ДоговорСПеревозчиком.ДатаНачала) ИЛИ ЭтотОбъект.ДатаПолучения > КонецДня(ЭтотОбъект.ДоговорСПеревозчиком.ДатаОкончания) Тогда //rarus bonmak 29.08.2019 14817 было ЭтотОбъект.ДатаДоставки установил начало дня и конец дня
			Сообщить("Документ "+ ЭтотОбъект.Ссылка +" не проведен. Проверьте сроки действия договора с перевозчиком!");
			Возврат Истина;
		КонецЕсли;	
	КонецЕсли;
	Возврат Ложь;
КонецФункции
//rarus sergei 21.11.2016 mantis 7121 --

//rarus tenkam 16.08.2017 mantis 10831 +++
Процедура ПриЗаписи(Отказ)
	Если НЕ Отказ И СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена Тогда
				
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить(Ссылка);

		// rarus tenkam 26.02.2018 mantis 12831 +++
		МассивИзделийДокумента = Новый Массив;
		Для Каждого ТекСтрока Из СоставЗаявки Цикл
			МассивИзделийДокумента.Добавить(ТекСтрока.Изделие);	
		КонецЦикла;
		ПараметрыФоновогоЗадания.Добавить(МассивИзделийДокумента);
		// rarus tenkam 26.02.2018 mantis 12831 ---

		ФоновыеЗадания.Выполнить("Scan_ВебСервисы.ОтправитьОтменуПлановыхДанныех1БД", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, "Отправка отмены плановых данных в 1БД");	
	КонецЕсли;
	
	//rarus tenkam 01.08.2018 mantis 13375 +++
	////rarus tenkam 08.11.2017 mantis 11774 +++
	//Если НЕ Отказ Тогда
	//	Если ЗначениеЗаполнено(МассивДоставленныхПродуктов) Тогда
	//		Для Каждого ТекПродукт Из МассивДоставленныхПродуктов Цикл
	//			//Scan_ВспомогательныеФункцииСервер.УстановитьДатуПередачиДилеру(ТекПродукт);
	//			ПараметрыФоновогоЗадания = Новый Массив;
	//			ПараметрыФоновогоЗадания.Добавить(ТекПродукт.Продукт);
	//			ПараметрыФоновогоЗадания.Добавить(ТекПродукт.ДатаДоставкиФакт);
	//			ПараметрыФоновогоЗадания.Добавить(ТекПродукт.ЗаявкаНаДействие);
	//			ФоновыеЗадания.Выполнить("Scan_ВспомогательныеФункцииСервер.УстановитьДатуПередачиДилеру", ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, "Установка даты передачи дилеру");	
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЕсли;
	////rarus tenkam 08.11.2017 mantis 11774 ---
	//rarus tenkam 01.08.2018 mantis 13375 ---
	
	// rarus tenkam 11.07.2018 mantis 13195 +++
	НаДату = ТекущаяДата();
	Для Каждого ТекСтрока Из СоставЗаявки Цикл
		РегистрыСведений.Scan_ИсторияИзмененияДанныхЗаявкиПеревозчику.ЗаписьЗначенияПоИсторииИзменений(Ссылка,ТекСтрока.Изделие, Перечисления.Scan_ДанныеЗаявкиПеревозчику.ТЧДатаДоставкиПлан, ТекСтрока.ДатаДоставкиПлан, НаДату);		
		
		// rarus tenkam 30.05.2019 mantis 14224 +++
		// Фиксирование ключевой даты ETA
		// rarus tenkam 05.08.2019 mantis 14427 +++
		//ТекЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийПродуктовИЗаказов.ПолучитьЗаказПоИзделию(ТекСтрока.Изделие);
		ТекЗаказНаЗавод = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(ТекСтрока.Изделие);
		// rarus tenkam 05.08.2019 mantis 14427 ---
		Если ЗначениеЗаполнено(ТекЗаказНаЗавод) Тогда
			Если НЕ ПодтвержденаПеревозчиком ИЛИ СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Исполнена ИЛИ СтатусЗаявки = Справочники.Scan_СтатусыЗаявокНаДействие.Аннулирована Тогда
				
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(ТекЗаказНаЗавод, 
				ПредопределенноеЗначение("Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод"), Дата(1,1,1), 
				ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ETA"), НаДату);
				
				// rarus tenkam 06.05.2021 mantis 17715 +++
				Если Scan_ПраваИНастройки.Scan_Право("ЗаполнятьРегистрСводнаяИнформацияПоПродукту") Тогда
					ВидЗначения = ПредопределенноеЗначение("Перечисление.Scan_ДополнительнаяИнформацияПоИзделиям.ETAСклад");
					РегистрыСведений.Scan_СводнаяИнформацияПоПродукту.ЗаписьЗначенияРегистраСводнаяИнформацияПоПродукту(ТекСтрока.Изделие,ТекЗаказНаЗавод,ВидЗначения,ПредопределенноеЗначение("Справочник.Scan_МестаХранения.ПустаяСсылка"));
				КонецЕсли;  				
				// rarus tenkam 06.05.2021 mantis 17715 ---
			ИначеЕсли ПодтвержденаПеревозчиком Тогда
				РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписьЗначенияРегистраСведения(ТекЗаказНаЗавод, 
				ПредопределенноеЗначение("Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод"), ТекСтрока.ДатаДоставкиПлан, 
				ПредопределенноеЗначение("Перечисление.Scan_КлючевыеДаты.ETA"), НаДату);	
				
				// rarus tenkam 06.05.2021 mantis 17715 +++
				Если Scan_ПраваИНастройки.Scan_Право("ЗаполнятьРегистрСводнаяИнформацияПоПродукту") Тогда
					ВидЗначения = ПредопределенноеЗначение("Перечисление.Scan_ДополнительнаяИнформацияПоИзделиям.ETAСклад");
					РегистрыСведений.Scan_СводнаяИнформацияПоПродукту.ЗаписьЗначенияРегистраСводнаяИнформацияПоПродукту(ТекСтрока.Изделие,ТекЗаказНаЗавод,ВидЗначения,МестоДоставки);
				КонецЕсли;  				
				// rarus tenkam 06.05.2021 mantis 17715 ---  			
			КонецЕсли;
		КонецЕсли;
		// rarus tenkam 30.05.2019 mantis 14224 --- 	
		
	КонецЦикла;
	// rarus tenkam 11.07.2018 mantis 13195 ---
	
	
КонецПроцедуры
//rarus tenkam 16.08.2017 mantis 10831 ---