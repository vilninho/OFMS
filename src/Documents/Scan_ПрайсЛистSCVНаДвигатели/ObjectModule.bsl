
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Проверка заполнения ссылок на опции в табличной части Опции оборудования
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение
		И Не ОпцииОборудованияЗаполнены() 
		Тогда
		// Сообщаем, но не запрещаем
		ВывестиСообщениеПол(Нстр("ru = 'Обратите внимание! 
								|Не по всем variant code из прайс-листа найдено соответствие в справочнике «Опции продуктов». 
								|Обновите справочник «Опции продуктов» из 1ДБ и повторно нажмите кнопку «Установить соответствия» в документе'"));
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// У проводимых документов проверка выполняется при проведении
	ПроверяемыеРеквизиты.Добавить("ПрайсЛистДействуетСДаты");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	// Все цены устанавливаются по новому типу цен
	ТипЦенПрайсЛиста = ПредопределенноеЗначение("Справочник.Scan_ТипыЦен.ЦенаDistrGross");
	
	// Валюты не предопределенные, получаем по коду
	ВалютаRUB = Справочники.Валюты.НайтиПоКоду("643");
	ВалютаEUR = Справочники.Валюты.НайтиПоКоду("978");
	
	Движения.Scan_ДанныеПрайсЛистаНаДвигатели.Записывать   = Истина;
	Движения.Scan_ЦеныДвигателейПоПрайсЛистуSCV.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("П1", Ссылка);
	Запрос.УстановитьПараметр("П2", ПрайсЛистДействуетСДаты);
	Запрос.УстановитьПараметр("П3", ТекущийПользователь);
	Запрос.УстановитьПараметр("П4", ТипЦенПрайсЛиста);
	Запрос.Текст = "ВЫБРАТЬ
	|	&П2 КАК Период,
	|	&П3 КАК Пользователь,
	|	&П4 КАК ТипЦен,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.ТипПродукта КАК ТипПродукта,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.Объем КАК Объем,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.Тип КАК Тип,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.VariantCode КАК КодОпции,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.RefCode КАК КодИсполнения,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.Цена КАК Цена,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.ЦенаEUR КАК ЦенаEUR,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КлассМощности КАК КлассМощности,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КлассЭкологический КАК КлассЭкологический,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КлассЭкологическийСпособПовышения КАК КлассЭкологическийСпособПовышения,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.СистемаВпрыска КАК СистемаВпрыска,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.СистемаОхлаждения КАК СистемаОхлаждения,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КрутящийМомент КАК КрутящийМомент,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КрутящийМоментОбороты КАК КрутящийМоментОбороты,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьКВТ КАК МощностьКВТ,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьЛС КАК МощностьЛС,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьОбороты КАК МощностьОбороты,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьКВТ1500 КАК МощностьКВТ1500,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьКВТ1800 КАК МощностьКВТ1800,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьКВА1500 КАК МощностьКВА1500,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьКВА1800 КАК МощностьКВА1800,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьКВЕ1500 КАК МощностьКВЕ1500,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.МощностьКВЕ1800 КАК МощностьКВЕ1800,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КоэффициентПроизводительностиКВТ1500 КАК КоэффициентПроизводительностиКВТ1500,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КоэффициентПроизводительностиКВТ1800 КАК КоэффициентПроизводительностиКВТ1800,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КоэффициентПроизводительностиКВА1500 КАК КоэффициентПроизводительностиКВА1500,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.КоэффициентПроизводительностиКВА1800 КАК КоэффициентПроизводительностиКВА1800,
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.ИсточникЗагрузки КАК ИсточникЗагрузки,
	|	Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия.Опция КАК Опция
	|ИЗ
	|	Документ.Scan_ПрайсЛистSCVНаДвигатели.ПрайсЛист КАК Scan_ПрайсЛистSCVНаДвигателиПрайсЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Scan_ПрайсЛистSCVНаДвигатели.ТаблицаСоответствия КАК Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия
	|		ПО Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.VariantCode = Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия.VariantCode
	|			И Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.RefCode = Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия.RefCode
	|			И (Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия.Ссылка = &П1)
	|ГДЕ
	|	Scan_ПрайсЛистSCVНаДвигателиПрайсЛист.Ссылка = &П1";
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		// Движение по регистру данных - всегда
		Движение = Движения.Scan_ДанныеПрайсЛистаНаДвигатели.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		
		// Движение по регистру цен только при наличии цены
		Если ЗначениеЗаполнено(Выборка.Цена) Тогда
			Движение = Движения.Scan_ЦеныДвигателейПоПрайсЛистуSCV.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			
			Движение.Валюта = ВалютаRUB;
			Движение.Цена   = Выборка.Цена;
		КонецЕсли;
		
		// На каждую валюту добавляется новая запись
		Если ЗначениеЗаполнено(Выборка.ЦенаEUR) Тогда
			Движение = Движения.Scan_ЦеныДвигателейПоПрайсЛистуSCV.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			
			Движение.Валюта = ВалютаEUR;
			Движение.Цена   = Выборка.ЦенаEUR;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("П1", Ссылка);
	Запрос.УстановитьПараметр("П2", ПрайсЛистДействуетСДаты);
	Запрос.УстановитьПараметр("П3", ТекущийПользователь);
	Запрос.УстановитьПараметр("П4", ТипЦенПрайсЛиста);
	Запрос.Текст = "ВЫБРАТЬ
	|	&П2 КАК Период,
	|	&П3 КАК Пользователь,
	|	&П4 КАК ТипЦен,
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.ТипПродукта КАК ТипПродукта,
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.RefCode КАК КодИсполнения,
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.VariantCode КАК КодОпции,
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.ОписаниеОпции КАК ОписаниеОпции,
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.Объем КАК Объем,
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.Применимость КАК Применимость,
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.Цена КАК Цена,
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.ЦенаEUR КАК ЦенаEUR,
	|	Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия.Опция КАК Опция
	|ИЗ
	|	Документ.Scan_ПрайсЛистSCVНаДвигатели.ОпцииОборудования КАК Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Scan_ПрайсЛистSCVНаДвигатели.ТаблицаСоответствия КАК Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия
	|		ПО Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.VariantCode = Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия.VariantCode
	|			И Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.RefCode = Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия.RefCode
	|			И (Scan_ПрайсЛистSCVНаДвигателиТаблицаСоответствия.Ссылка = &П1)
	|ГДЕ
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.Ссылка = &П1";
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаРезультатаЗапроса = РезультатЗапроса.Выгрузить();
	
	// Данные по опциям оборудования записываются в регистр данных прайс-листа
	// в разрезе типов продуктов и объемов
	Для Каждого СтрокаРезультата Из ТаблицаРезультатаЗапроса Цикл
		Движение = Движения.Scan_ДанныеПрайсЛистаНаДвигатели.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаРезультата);
	КонецЦикла;
	
	// В регистре цен Тип продукта и Объем отсутствуют
	// Цена опции по всем объемам и типам продуктов в одной валюте одинаковая
	ТаблицаРезультатаЗапроса.Свернуть("Период,ТипЦен,КодОпции,КодИсполнения,Опция,Цена,ЦенаEUR,Пользователь");
	Для Каждого СтрокаРезультата Из ТаблицаРезультатаЗапроса Цикл
		// Записываем только заполненные цены
		Если ЗначениеЗаполнено(СтрокаРезультата.Цена) Тогда
			Движение = Движения.Scan_ЦеныДвигателейПоПрайсЛистуSCV.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, СтрокаРезультата);
			
			Движение.Валюта = ВалютаRUB;
			Движение.Цена   = СтрокаРезультата.Цена;
		КонецЕсли;
		
		// Записываем только заполненные цены
		Если ЗначениеЗаполнено(СтрокаРезультата.ЦенаEUR) Тогда
			Движение = Движения.Scan_ЦеныДвигателейПоПрайсЛистуSCV.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, СтрокаРезультата);
			
			Движение.Валюта = ВалютаEUR;
			Движение.Цена   = СтрокаРезультата.ЦенаEUR;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет заполнение реквизита Опция в табличной части ОпцииОборудования
// Возвращает Истина, если во всех строках ТЧ реквизит заполнен. Иначе - Ложь.
//
Функция ОпцииОборудованияЗаполнены()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("П1", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.VariantCode КАК VariantCode
	|ИЗ
	|	Документ.Scan_ПрайсЛистSCVНаДвигатели.ОпцииОборудования КАК Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования
	|ГДЕ
	|	Scan_ПрайсЛистSCVНаДвигателиОпцииОборудования.Опция = ЗНАЧЕНИЕ(Справочник.Scan_ОпцииПродуктов.ПустаяСсылка)";
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

