
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	НастройкиОтчета       = КомпоновщикНастроек.ПолучитьНастройки();
	НаборыДанныхОтчета    = СхемаКомпоновкиДанных.НаборыДанных.Найти("ДанныеОтчета");
	
	#Область ЗаполнениеНастроекОтчета
	
	// Получение настроек из параметров 
	
	ПараметрНачалоПериода = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	НачалоПериода = ПараметрНачалоПериода.Значение;
	
	ПараметрОкончаниеПериода = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ОкончаниеПериода");
	ОкончаниеПериода = ПараметрОкончаниеПериода.Значение;
	
	ПараметрВидLeadTime = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВидLeadTime");
	ВидLeadTime = ПараметрВидLeadTime.Значение;
	
	ПараметрВыводитьСреднееЗначениеLeadTimeПоКонтрольнымТочкам = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВыводитьСреднееЗначениеLeadTimeПоКонтрольнымТочкам");
	ВыводитьСреднееЗначениеLeadTimeПоКонтрольнымТочкам = ПараметрВыводитьСреднееЗначениеLeadTimeПоКонтрольнымТочкам.Значение;
	
	ПараметрВыводитьМедиануLeadTimeПоКонтрольнымТочкам = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВыводитьМедиануLeadTimeПоКонтрольнымТочкам");
	ВыводитьМедиануLeadTimeПоКонтрольнымТочкам = ПараметрВыводитьМедиануLeadTimeПоКонтрольнымТочкам.Значение;
	
	ПараметрВыводитьТолькоРазницуВДняхМеждуКонтрольнымиТочкамиLeadTime = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВыводитьТолькоРазницуВДняхМеждуКонтрольнымиТочкамиLeadTime");
	ВыводитьТолькоРазницуВДняхМеждуКонтрольнымиТочкамиLeadTime = ПараметрВыводитьТолькоРазницуВДняхМеждуКонтрольнымиТочкамиLeadTime.Значение;
	
	ПараметрКонтрольныеТочки = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("КонтрольныеТочки");
	КонтрольныеТочки    = ПараметрКонтрольныеТочки.Значение;
	
	ПоляКонтрольныхТочек = ПодготовитьПоляКонтрольныхТочек(КонтрольныеТочки);
	КоличествоПолейКонтрольныхТочек = ПоляКонтрольныхТочек.Количество();
	
	ДобавитьКонтрольныеТочкиВОтчет(ПоляКонтрольныхТочек, СхемаКомпоновкиДанных, НаборыДанныхОтчета, НастройкиОтчета, ВыводитьТолькоРазницуВДняхМеждуКонтрольнымиТочкамиLeadTime);
	ДобавитьИтогиВОтчет(ПоляКонтрольныхТочек, СхемаКомпоновкиДанных, ВыводитьСреднееЗначениеLeadTimeПоКонтрольнымТочкам);
	
	ПараметрВыводитьДиаграмму1 = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВыводитьДиаграмму1");
	ВыводитьДиаграмму1 = ПараметрВыводитьДиаграмму1.Значение;
	
	ПараметрВыводитьДиаграмму2 = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВыводитьДиаграмму2");
	ВыводитьДиаграмму2 = ПараметрВыводитьДиаграмму2.Значение;
	
	ПараметрВыводитьДиаграмму3 = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВыводитьДиаграмму3");
	ВыводитьДиаграмму3 = ПараметрВыводитьДиаграмму3.Значение;
	
	ПараметрВыводитьДиаграмму4 = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВыводитьДиаграмму4");
	ВыводитьДиаграмму4 = ПараметрВыводитьДиаграмму4.Значение;
	
	ВнешниеНаборыДанных = ПолучитьВнешниеНаборыДанных(НастройкиОтчета);
	
	#КонецОбласти
	
	#Область ПерваяПоследняяКонтрольныеТочки
	
	// Первая контрольная точка
	ИндексПервойКонтрольнойТочки    = 0;
	ПерваяКонтрольнаяТочка          = КонтрольныеТочки[ИндексПервойКонтрольнойТочки].Значение;
	РеквизитыПервойКонтрольнойТочки = РеквизитыКонтрольнойТочки(ПерваяКонтрольнаяТочка);
	ПолеПервойКонтрольнойТочки      = ПоляКонтрольныхТочек.Найти(РеквизитыПервойКонтрольнойТочки.ИмяКлючевойДаты, "Поле");
	
	// Последняя контрольная точка
	ИндексПоследнейКонтрольнойТочки    = КонтрольныеТочки.Количество() - 1;
	ПоследняяКонтрольнаяТочка          = КонтрольныеТочки[ИндексПоследнейКонтрольнойТочки].Значение;
	РеквизитыПоследнейКонтрольнойТочки = РеквизитыКонтрольнойТочки(ПоследняяКонтрольнаяТочка);
	ПолеПоследнейКонтрольнойТочки      = ПоляКонтрольныхТочек.Найти(РеквизитыПоследнейКонтрольнойТочки.ИмяКлючевойДаты, "Поле");
	
	// Разность последней и первой контрольных точек
	ИмяПоляРазностиКонтрольныхТочек = РеквизитыПоследнейКонтрольнойТочки.ИмяКлючевойДаты + "_" + РеквизитыПервойКонтрольнойТочки.ИмяКлючевойДаты;
	ПолеРазностиКонтрольныхТочек    = ПоляКонтрольныхТочек.Найти(ИмяПоляРазностиКонтрольныхТочек, "Поле");
	
	#КонецОбласти
	
	#Область Отбор
	
	// Отбор по периоду по последней контрольной точке
	ОтборПоследняяКонтрольнаяТочка = НастройкиОтчета.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоследняяКонтрольнаяТочка.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ПолеПоследнейКонтрольнойТочки.Поле);
	ОтборПоследняяКонтрольнаяТочка.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборПоследняяКонтрольнаяТочка.ПравоеЗначение = НачалоПериода;
	
	ОтборПоследняяКонтрольнаяТочка = НастройкиОтчета.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоследняяКонтрольнаяТочка.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ПолеПоследнейКонтрольнойТочки.Поле);
	ОтборПоследняяКонтрольнаяТочка.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ОтборПоследняяКонтрольнаяТочка.ПравоеЗначение = ОкончаниеПериода;
	
	#КонецОбласти
	
	#Область ВыводВТаблицуЗначений
	
	// Таблица значений для получения среднего и медианы через анализ данных
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаЗначенийРезультат = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаЗначенийРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	#КонецОбласти
	
	#Область Диаграммы
	
	// "Lead Time Tractors/Rigids per year"
	Если ВыводитьДиаграмму1 Тогда
		// Последняя контрольная точка - группировка
		НовоеПоле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
		НовоеПоле.ПутьКДанным = "Период";
		НовоеПоле.Заголовок   = "Период";
		НовоеПоле.Выражение   = "КОНЕЦПЕРИОДА(" + ПолеПоследнейКонтрольнойТочки.Поле + ", ""МЕСЯЦ"")";
		НовоеПоле.Оформление.УстановитьЗначениеПараметра("Формат",                  ПолеПоследнейКонтрольнойТочки.Формат);
		НовоеПоле.Оформление.УстановитьЗначениеПараметра("ГоризонтальноеПоложение", ПолеПоследнейКонтрольнойТочки.ГоризонтальноеПоложение);
		НовоеПоле.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина",      ПолеПоследнейКонтрольнойТочки.МаксимальнаяШирина);
		
		// Разность контрольных точек
		Если СхемаКомпоновкиДанных.ПоляИтога.Найти(ПолеРазностиКонтрольныхТочек.Поле) = Неопределено Тогда
			ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			ПолеРесурса.Выражение   = "СРЕДНЕЕ(" + ПолеРазностиКонтрольныхТочек.Поле + ")";
			ПолеРесурса.ПутьКДанным = ПолеРазностиКонтрольныхТочек.ПутьКДанным;
		КонецЕсли;
		
		Диаграмма1 = НастройкиОтчета.Структура.Добавить(Тип("ДиаграммаКомпоновкиДанных"));
		
		// Параметры вывода диаграммы
		ПараметрВыводаЗаголовок = Диаграмма1.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок"));
		ПараметрВыводаЗаголовок.Значение      = "Lead Time Tractors/Rigids per year";
		ПараметрВыводаЗаголовок.Использование = Истина;
		
		ПараметрВыводаТипДиаграммы = Диаграмма1.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипДиаграммы"));
		ПараметрВыводаТипДиаграммы.Значение      = ТипДиаграммы.График;
		ПараметрВыводаТипДиаграммы.Использование = Истина;
		
		ПараметрВыводаРежимСглаживания = Диаграмма1.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипДиаграммы.РежимСглаживания"));
		ПараметрВыводаРежимСглаживания.Значение      = РежимСглаживанияДиаграммы.ГладкаяКривая;
		ПараметрВыводаРежимСглаживания.Использование = Истина;
		
		// Ресурс
		ВыбранноеПоле = Диаграмма1.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(ПолеРазностиКонтрольныхТочек.Поле);
		
		// Серия
		Диаграмма1.Серии.Очистить();
		
		Серия = Диаграмма1.Серии.Добавить();
		
		ПолеГруппировки = Серия.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("ТягачШасси");
		ПолеГруппировки.Использование = Истина;
		
		Серия.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ЭлементПорядка = Серия.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("ТягачШасси");
		
		Диаграмма1.Точки.Очистить();
		
		// Точка
		Точка = Диаграмма1.Точки.Добавить();
		
		ПолеГруппировки = Точка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("Период");
		ПолеГруппировки.Использование = Истина;
		
		Точка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ЭлементПорядка = Точка.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Период");
	КонецЕсли;
	
	// "Lead Time CBU/KD (STD/UO) monthly"
	Если ВыводитьДиаграмму2 Тогда
		// Последняя контрольная точка - группировка
		Если СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("Период") = Неопределено Тогда
			НовоеПоле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
			НовоеПоле.ПутьКДанным = "Период";
			НовоеПоле.Заголовок   = "Период";
			НовоеПоле.Выражение   = "КОНЕЦПЕРИОДА(" + ПолеПоследнейКонтрольнойТочки.Поле + ", ""МЕСЯЦ"")";
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("Формат",                  ПолеПоследнейКонтрольнойТочки.Формат);
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("ГоризонтальноеПоложение", ПолеПоследнейКонтрольнойТочки.ГоризонтальноеПоложение);
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина",      ПолеПоследнейКонтрольнойТочки.МаксимальнаяШирина);
		КонецЕсли;
		
		// Разность контрольных точек
		Если СхемаКомпоновкиДанных.ПоляИтога.Найти(ПолеРазностиКонтрольныхТочек.Поле) = Неопределено Тогда
			ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			ПолеРесурса.Выражение   = "СРЕДНЕЕ(" + ПолеРазностиКонтрольныхТочек.Поле + ")";
			ПолеРесурса.ПутьКДанным = ПолеРазностиКонтрольныхТочек.ПутьКДанным;
		КонецЕсли;
		
		Диаграмма2 = НастройкиОтчета.Структура.Добавить(Тип("ДиаграммаКомпоновкиДанных"));
		
		// Параметры вывода диаграммы
		ПараметрВыводаЗаголовок = Диаграмма2.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок"));
		ПараметрВыводаЗаголовок.Значение      = "Lead Time CBU/KD (STD/UO) monthly";
		ПараметрВыводаЗаголовок.Использование = Истина;
		
		ПараметрВыводаТипДиаграммы = Диаграмма2.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипДиаграммы"));
		ПараметрВыводаТипДиаграммы.Значение      = ТипДиаграммы.Гистограмма;
		ПараметрВыводаТипДиаграммы.Использование = Истина;
		
		// Ресурс
		ВыбранноеПоле = Диаграмма2.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(ПолеРазностиКонтрольныхТочек.Поле);
		
		// Серия
		Диаграмма2.Серии.Очистить();
		Серия = Диаграмма2.Серии.Добавить();
		
		ПолеГруппировки = Серия.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("КомплектностьТипСпецификации");
		ПолеГруппировки.Использование = Истина;
		
		Серия.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ЭлементПорядка = Серия.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Период");
		
		// Точка
		Диаграмма2.Точки.Очистить();
		Точка = Диаграмма2.Точки.Добавить();
		
		ПолеГруппировки = Точка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("Период");
		ПолеГруппировки.Использование = Истина;
		
		Точка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ЭлементПорядка = Точка.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Период");
	КонецЕсли;
	
	// "Lead Time CBU/KD (STD/UO) dealers"
	Если ВыводитьДиаграмму3 Тогда
		// Последняя контрольная точка - группировка
		Если СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("Период") = Неопределено Тогда
			НовоеПоле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
			НовоеПоле.ПутьКДанным = "Период";
			НовоеПоле.Заголовок   = "Период";
			НовоеПоле.Выражение   = "КОНЕЦПЕРИОДА(" + ПолеПоследнейКонтрольнойТочки.Поле + ", ""МЕСЯЦ"")";
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("Формат",                  ПолеПоследнейКонтрольнойТочки.Формат);
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("ГоризонтальноеПоложение", ПолеПоследнейКонтрольнойТочки.ГоризонтальноеПоложение);
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина",      ПолеПоследнейКонтрольнойТочки.МаксимальнаяШирина);
		КонецЕсли;
		
		// Разность контрольных точек
		Если СхемаКомпоновкиДанных.ПоляИтога.Найти(ПолеРазностиКонтрольныхТочек.Поле) = Неопределено Тогда
			ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			ПолеРесурса.Выражение   = "СРЕДНЕЕ(" + ПолеРазностиКонтрольныхТочек.Поле + ")";
			ПолеРесурса.ПутьКДанным = ПолеРазностиКонтрольныхТочек.ПутьКДанным;
		КонецЕсли;
		
		Диаграмма3 = НастройкиОтчета.Структура.Добавить(Тип("ДиаграммаКомпоновкиДанных"));
		
		// Параметры вывода диаграммы
		ПараметрВыводаЗаголовок = Диаграмма3.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок"));
		ПараметрВыводаЗаголовок.Значение      = "Lead Time CBU/KD (STD/UO) dealers";
		ПараметрВыводаЗаголовок.Использование = Истина;
		
		ПараметрВыводаТипДиаграммы = Диаграмма3.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипДиаграммы"));
		ПараметрВыводаТипДиаграммы.Значение      = ТипДиаграммы.Гистограмма;
		ПараметрВыводаТипДиаграммы.Использование = Истина;
		
		// Ресурс
		ВыбранноеПоле = Диаграмма3.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(ПолеРазностиКонтрольныхТочек.Поле);
		
		// Серия
		Диаграмма3.Серии.Очистить();
		Серия = Диаграмма3.Серии.Добавить();
		
		ПолеГруппировки = Серия.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("КомплектностьТипСпецификации");
		ПолеГруппировки.Использование = Истина;
		
		Серия.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ЭлементПорядка = Серия.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("КомплектностьТипСпецификации");
		
		// Точка
		Диаграмма3.Точки.Очистить();
		Точка = Диаграмма3.Точки.Добавить();
		
		ПолеГруппировки = Точка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("Дилер");
		ПолеГруппировки.Использование = Истина;
		
		Точка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ЭлементПорядка = Точка.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Дилер");
	КонецЕсли;
	
	// "Lead Time monthly"
	Если ВыводитьДиаграмму4 Тогда
		// Последняя контрольная точка - группировка
		Если СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("Период") = Неопределено Тогда
			НовоеПоле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
			НовоеПоле.ПутьКДанным = "Период";
			НовоеПоле.Заголовок   = "Период";
			НовоеПоле.Выражение   = "КОНЕЦПЕРИОДА(" + ПолеПоследнейКонтрольнойТочки.Поле + ", ""МЕСЯЦ"")";
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("Формат",                  ПолеПоследнейКонтрольнойТочки.Формат);
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("ГоризонтальноеПоложение", ПолеПоследнейКонтрольнойТочки.ГоризонтальноеПоложение);
			НовоеПоле.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина",      ПолеПоследнейКонтрольнойТочки.МаксимальнаяШирина);
		КонецЕсли;
		
		// Разность контрольных точек
		Если СхемаКомпоновкиДанных.ПоляИтога.Найти(ПолеРазностиКонтрольныхТочек.Поле) = Неопределено Тогда
			ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			ПолеРесурса.Выражение   = "СРЕДНЕЕ(" + ПолеРазностиКонтрольныхТочек.Поле + ")";
			ПолеРесурса.ПутьКДанным = ПолеРазностиКонтрольныхТочек.ПутьКДанным;
		КонецЕсли;
		
		Диаграмма4 = НастройкиОтчета.Структура.Добавить(Тип("ДиаграммаКомпоновкиДанных"));
		
		// Параметры вывода диаграммы
		ПараметрВыводаЗаголовок = Диаграмма4.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок"));
		ПараметрВыводаЗаголовок.Значение      = "Lead Time monthly";
		ПараметрВыводаЗаголовок.Использование = Истина;
		
		ПараметрВыводаТипДиаграммы = Диаграмма4.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипДиаграммы"));
		ПараметрВыводаТипДиаграммы.Значение      = ТипДиаграммы.График;
		ПараметрВыводаТипДиаграммы.Использование = Истина;
		
		ПараметрВыводаРежимСглаживания = Диаграмма4.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипДиаграммы.РежимСглаживания"));
		ПараметрВыводаРежимСглаживания.Значение      = РежимСглаживанияДиаграммы.ГладкаяКривая;
		ПараметрВыводаРежимСглаживания.Использование = Истина;
		
		// Ресурс
		ВыбранноеПоле = Диаграмма4.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(ПолеРазностиКонтрольныхТочек.Поле);
		
		// Серия
		Диаграмма4.Серии.Очистить();
		Серия = Диаграмма4.Серии.Добавить();
		
		ПолеГруппировки = Серия.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("ТипСпецификации");
		ПолеГруппировки.Использование = Истина;
		
		Серия.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ЭлементПорядка = Серия.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Период");
		
		// Точка
		Диаграмма4.Точки.Очистить();
		Точка = Диаграмма4.Точки.Добавить();
		
		ПолеГруппировки = Точка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("Период");
		ПолеГруппировки.Использование = Истина;
		
		Точка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ЭлементПорядка = Точка.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Период");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВыводВТабличныйДокумент
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновкиДанных, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	#КонецОбласти
	
	#Область КорректировкаСтрокиИтогов
	
	ВыводитьСреднее = ВыводитьСреднееЗначениеLeadTimeПоКонтрольнымТочкам;
	ВыводитьМедиану = ВыводитьМедиануLeadTimeПоКонтрольнымТочкам;
	
	Если    ВыводитьСреднее
		Или ВыводитьМедиану
		Тогда
		ЗаголовкиКолонокLeadTime = Новый Массив;
		НомераКолонокLeadTime    = Новый Соответствие;
		
		ВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
		
		АнализДанных = Новый АнализДанных;
		АнализДанных.ТипАнализа     = Тип("АнализДанныхОбщаяСтатистика");
		АнализДанных.ИсточникДанных = ТаблицаЗначенийРезультат;
		
		РезультатАнализа = АнализДанных.Выполнить();
		
		СтрокиИтого = Новый Массив;
		Если ВыводитьСреднее Тогда
			СтрокиИтого.Добавить("Среднее");
		КонецЕсли;
		Если ВыводитьМедиану Тогда
			СтрокиИтого.Добавить("Медиана");
		КонецЕсли;
		
		ОбластьИтого = ДокументРезультат.НайтиТекст("Итого");
		Если СтрокиИтого.Количество() = 1 Тогда
			ОбластьИтого.Текст = СтрокиИтого[0];
		ИначеЕсли СтрокиИтого.Количество() = 2 Тогда
			ОбластьИтого.Текст = СтрСоединить(СтрокиИтого, Символы.ПС);
		КонецЕсли;
		
		Для Каждого ПолеКонтрольнойТочки Из ПоляКонтрольныхТочек Цикл
			Если Не ПолеКонтрольнойТочки.ЭтоВычисляемоеПоле Тогда
				Продолжить;
			КонецЕсли;
			
			НомерКолонкиLeadTime = 0;
			
			ОбластьЗаголовка = ДокументРезультат.НайтиТекст(ПолеКонтрольнойТочки.Заголовок);
			Если ОбластьЗаголовка <> Неопределено Тогда
				НомерКолонкиLeadTime = ОбластьЗаголовка.Лево;
			КонецЕсли;
			
			ОбластьКолонкиИтогоLeadTime = ДокументРезультат.Область(ОбластьИтого.Верх, НомерКолонкиLeadTime, ОбластьИтого.Верх, НомерКолонкиLeadTime);
			
			СтрокиИтогоLeadTime = Новый Массив;
			Если ВыводитьСреднее Тогда
				СреднееLeadTime = РезультатАнализа.НепрерывныеПоля[ПолеКонтрольнойТочки.Поле].Среднее;
				Если ЗначениеЗаполнено(СреднееLeadTime) Тогда
					СтрокиИтогоLeadTime.Добавить(Формат(СреднееLeadTime, "ЧЦ=15; ЧДЦ=2"));
				КонецЕсли;
			КонецЕсли;
			Если ВыводитьМедиану Тогда
				МедианаLeadTime = РезультатАнализа.НепрерывныеПоля[ПолеКонтрольнойТочки.Поле].Медиана;
				Если ЗначениеЗаполнено(МедианаLeadTime) Тогда
					СтрокиИтогоLeadTime.Добавить(Формат(МедианаLeadTime, "ЧЦ=15; ЧДЦ=2"));
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокиИтогоLeadTime.Количество() = 1 Тогда
				ОбластьКолонкиИтогоLeadTime.Текст = СтрокиИтогоLeadTime[0];
			ИначеЕсли СтрокиИтогоLeadTime.Количество() = 2 Тогда
				ОбластьКолонкиИтогоLeadTime.Текст = СтрСоединить(СтрокиИтогоLeadTime, Символы.ПС);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ВидLeadTime      = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВидLeadTime").Значение;
	КонтрольныеТочки = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("КонтрольныеТочки").Значение;
	
	Если Не ЗначениеЗаполнено(ВидLeadTime) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Для формирования отчета необходимо в настройках указать вид Lead Time.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если КонтрольныеТочки.Количество() < 2 Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Для формирования отчета необходимо в настройках указать минимум две контрольные точки Lead Time.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьВнешниеНаборыДанных(НастройкиОтчета)
	
	ВнешниеНаборыДанных = Новый Структура;
	
	ПараметрВидLeadTime = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ВидLeadTime");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("П1", ПараметрВидLeadTime.Значение);
	Запрос.Текст = "ВЫБРАТЬ
	|	&П1 КАК ВидLeadTime,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт КАК Продукт,
	|	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод КАК ЗаказНаЗавод,
	|	Scan_СводнаяИнформацияПоПродукту.КомплектностьПоставки КАК КомплектностьПоставки,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.ТипСпецификации КАК ТипСпецификации,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.НомерИзделия КАК НомерШасси,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта КАК МодельПродукта,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МодельПродукта.ТягачШасси КАК ТягачШасси,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СтандартнаяСпецификация.НомерСпецификации КАК НомерСпецификации,
	|	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.МестоПроизводства.БуквенныйКод КАК Завод,
	|	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.КузовщикиПредставление КАК Кузовщик,
	|	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.ЗаказыНаЗакупкуПредставление КАК ЗаказНаЗакупку,
	|	Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод.ЗаказчикCOW КАК ДилерCOW,
	|	Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК КлиентCOW,
	|	Scan_СводнаяИнформацияПоПродукту.ТипПродукта.ВидПродукта КАК ВидПродукта,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.БУ КАК ПродуктБУ,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.МаркаПродукта КАК МаркаПродукта,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СоглашениеОПоставке.Дилер КАК Дилер,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.КлиентСоглашенияОПоставке КАК КлиентЗаявкиНаСОП,
	|	Scan_СводнаяИнформацияПоПродукту.Продукт.СОП.НомерДоговора КАК НомерСОП,
	|	ВЫБОР
	|		КОГДА Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту <> ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ Scan_СводнаяИнформацияПоПродукту.ДатаПродажиПродуктаКлиенту <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПродуктПродан,
	|	Scan_СводнаяИнформацияПоПродукту.DCD КАК DCD,
	|	Scan_СводнаяИнформацияПоПродукту.DDD КАК DDD,
	|	Scan_СводнаяИнформацияПоПродукту.PODOD КАК PODOD,
	|	Scan_СводнаяИнформацияПоПродукту.SDDate КАК SDDate,
	|	Scan_СводнаяИнформацияПоПродукту.PDD КАК PDD,
	|	Scan_СводнаяИнформацияПоПродукту.EDD КАК EDD,
	|	Scan_СводнаяИнформацияПоПродукту.CRD КАК CRD,
	|	Scan_СводнаяИнформацияПоПродукту.FinishDate КАК FinishDate,
	|	Scan_СводнаяИнформацияПоПродукту.CDD КАК CDD,
	|	Scan_СводнаяИнформацияПоПродукту.CDD2 КАК CDD2,
	|	Scan_СводнаяИнформацияПоПродукту.CDDПоставщик КАК CDDПоставщик,
	|	Scan_СводнаяИнформацияПоПродукту.CDDX КАК CDDX,
	|	Scan_СводнаяИнформацияПоПродукту.ПортСПБ КАК ПортСПБ,
	|	Scan_СводнаяИнформацияПоПродукту.ADD КАК ADD,
	|	Scan_СводнаяИнформацияПоПродукту.ETA КАК ETA,
	|	Scan_СводнаяИнформацияПоПродукту.ADDLBB КАК ADDLBB,
	|	Scan_СводнаяИнформацияПоПродукту.AN КАК AN,
	|	Scan_СводнаяИнформацияПоПродукту.PAD КАК PAD,
	|	Scan_СводнаяИнформацияПоПродукту.AAD КАК AAD,
	|	Scan_СводнаяИнформацияПоПродукту.PTSD КАК PTSD,
	|	Scan_СводнаяИнформацияПоПродукту.RFT КАК RFT,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПродажиИзделия КАК ДатаПродажиИзделия,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПередачиИзделияДилеру КАК ДатаПередачиИзделияДилеру,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПродажиКлиенту КАК ДатаПродажиКлиенту,
	|	Scan_СводнаяИнформацияПоПродукту.SoW КАК SoW,
	|	Scan_СводнаяИнформацияПоПродукту.WED КАК WED,
	|	Scan_СводнаяИнформацияПоПродукту.ПродуктВАрхиве КАК ПродуктВАрхиве,
	|	Scan_СводнаяИнформацияПоПродукту.DD КАК DD,
	|	Scan_СводнаяИнформацияПоПродукту.DD2 КАК DD2,
	|	Scan_СводнаяИнформацияПоПродукту.DDS КАК DDS,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаИнвойса КАК ДатаИнвойса,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПокупкиБУИзделия КАК ДатаПокупкиБУИзделия,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУДилеру КАК ДатаПродажиБУДилеру,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПродажиБУКлиенту КАК ДатаПродажиБУКлиенту,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаОтгрузкиСЗаводаПриEXW КАК ДатаОтгрузкиСЗаводаПриEXW,
	|	Scan_СводнаяИнформацияПоПродукту.БроньДилера КАК БроньДилера,
	|	Scan_СводнаяИнформацияПоПродукту.RDB КАК RDB,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПоступленияИнвойса1С КАК ДатаПоступленияИнвойса1С,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПередачиБУИзделияДилеру КАК ДатаПередачиБУИзделияДилеру,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПоступленияИзделияНаСклад КАК ДатаПоступленияИзделияНаСклад,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПоступленияИзделияБУНаСклад КАК ДатаПоступленияИзделияБУНаСклад,
	|	Scan_СводнаяИнформацияПоПродукту.ДатаПродажиПродуктаКлиенту КАК ДатаПродажиПродуктаКлиенту
	|ИЗ
	|	РегистрСведений.Scan_СводнаяИнформацияПоПродукту КАК Scan_СводнаяИнформацияПоПродукту
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
	|		ПО Scan_СводнаяИнформацияПоПродукту.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
	|			И (Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.Клиент))";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ВнешниеНаборыДанных.Вставить("ДанныеОтчета", РезультатЗапроса.Выгрузить());
	КонецЕсли;
	
	Возврат ВнешниеНаборыДанных;
	
КонецФункции

Функция ПодготовитьПоляКонтрольныхТочек(КонтрольныеТочки)
	
	ШаблонВыраженияВычисляемогоПоля = "ВЫБОР КОГДА ЗНАЧЕНИЕЗАПОЛНЕНО(%1) И ЗНАЧЕНИЕЗАПОЛНЕНО(%2) ТОГДА РАЗНОСТЬДАТ(%1,%2, ""ДЕНЬ"") КОНЕЦ";
	
	ТаблицаПолей = Новый ТаблицаЗначений;
	ТаблицаПолей.Колонки.Добавить("Поле");
	ТаблицаПолей.Колонки.Добавить("ПутьКДанным");
	ТаблицаПолей.Колонки.Добавить("Заголовок");
	ТаблицаПолей.Колонки.Добавить("ЭтоВычисляемоеПоле");
	ТаблицаПолей.Колонки.Добавить("Выражение");
	ТаблицаПолей.Колонки.Добавить("Формат");
	ТаблицаПолей.Колонки.Добавить("ГоризонтальноеПоложение");
	ТаблицаПолей.Колонки.Добавить("МаксимальнаяШирина");
	
	ПредыдущаяКонтрольнаяТочка          = Неопределено;
	РеквизитыПредыдущейКонтрольнойТочки = Неопределено;
	РеквизитыПервойКонтрольнойТочки     = Неопределено;
	
	Для Каждого КонтрольнаяТочка Из КонтрольныеТочки Цикл
		РеквизитыКонтрольнойТочки = РеквизитыКонтрольнойТочки(КонтрольнаяТочка.Значение);
		
		Если ПредыдущаяКонтрольнаяТочка = Неопределено Тогда
			РеквизитыПервойКонтрольнойТочки = РеквизитыКонтрольнойТочки;
		Иначе
			Если ТаблицаПолей.Найти(РеквизитыКонтрольнойТочки.ИмяКлючевойДаты + "_" + РеквизитыПредыдущейКонтрольнойТочки.ИмяКлючевойДаты, "Поле") = Неопределено Тогда
				НоваяСтрокаПоля = ТаблицаПолей.Добавить();
				НоваяСтрокаПоля.Поле                    = РеквизитыКонтрольнойТочки.ИмяКлючевойДаты+"_"+РеквизитыПредыдущейКонтрольнойТочки.ИмяКлючевойДаты;
				НоваяСтрокаПоля.ПутьКДанным             = РеквизитыКонтрольнойТочки.ИмяКлючевойДаты+"_"+РеквизитыПредыдущейКонтрольнойТочки.ИмяКлючевойДаты;
				НоваяСтрокаПоля.Заголовок               = РеквизитыПредыдущейКонтрольнойТочки.Наименование+"-"+РеквизитыКонтрольнойТочки.Наименование;
				НоваяСтрокаПоля.ЭтоВычисляемоеПоле      = Истина;
				НоваяСтрокаПоля.Выражение               = СтрШаблон(ШаблонВыраженияВычисляемогоПоля, РеквизитыПредыдущейКонтрольнойТочки.ИмяКлючевойДаты, РеквизитыКонтрольнойТочки.ИмяКлючевойДаты);
				НоваяСтрокаПоля.Формат                  = "ЧДЦ=0; ЧН=0";
				НоваяСтрокаПоля.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
				НоваяСтрокаПоля.МаксимальнаяШирина      = 10;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрокаПоля = ТаблицаПолей.Добавить();
		НоваяСтрокаПоля.Поле                    = РеквизитыКонтрольнойТочки.ИмяКлючевойДаты;
		НоваяСтрокаПоля.ПутьКДанным             = РеквизитыКонтрольнойТочки.ИмяКлючевойДаты;
		НоваяСтрокаПоля.Заголовок               = РеквизитыКонтрольнойТочки.Наименование;
		НоваяСтрокаПоля.ЭтоВычисляемоеПоле      = Ложь;
		НоваяСтрокаПоля.Формат                  = "ДЛФ=D";
		НоваяСтрокаПоля.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
		НоваяСтрокаПоля.МаксимальнаяШирина      = 10;
		
		Если  КонтрольныеТочки.Индекс(КонтрольнаяТочка) + 1 = КонтрольныеТочки.Количество() 
			И ТаблицаПолей.Найти(РеквизитыКонтрольнойТочки.ИмяКлючевойДаты + "_" + РеквизитыПервойКонтрольнойТочки.ИмяКлючевойДаты, "Поле") = Неопределено
			Тогда
			НоваяСтрокаПоля = ТаблицаПолей.Добавить();
			НоваяСтрокаПоля.Поле                    = РеквизитыКонтрольнойТочки.ИмяКлючевойДаты+"_"+РеквизитыПервойКонтрольнойТочки.ИмяКлючевойДаты;
			НоваяСтрокаПоля.ПутьКДанным             = РеквизитыКонтрольнойТочки.ИмяКлючевойДаты+"_"+РеквизитыПервойКонтрольнойТочки.ИмяКлючевойДаты;
			НоваяСтрокаПоля.Заголовок               = РеквизитыПервойКонтрольнойТочки.Наименование+"-"+РеквизитыКонтрольнойТочки.Наименование;
			НоваяСтрокаПоля.ЭтоВычисляемоеПоле      = Истина;
			НоваяСтрокаПоля.Выражение               = СтрШаблон(ШаблонВыраженияВычисляемогоПоля, РеквизитыПервойКонтрольнойТочки.ИмяКлючевойДаты, РеквизитыКонтрольнойТочки.ИмяКлючевойДаты);
			НоваяСтрокаПоля.Формат                  = "ЧДЦ=0; ЧН=0";
			НоваяСтрокаПоля.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
			НоваяСтрокаПоля.МаксимальнаяШирина      = 10;
		КонецЕсли;
		
		ПредыдущаяКонтрольнаяТочка          = КонтрольнаяТочка;
		РеквизитыПредыдущейКонтрольнойТочки = РеквизитыКонтрольнойТочки;
	КонецЦикла;
	
	Возврат ТаблицаПолей;
	
КонецФункции

Процедура ДобавитьКонтрольныеТочкиВОтчет(ПоляКонтрольныхТочек, СхемаКомпоновкиДанных, НаборыДанныхОтчета, НастройкиОтчета, ВыводитьТолькоРазницуВДняхМеждуКонтрольнымиТочкамиLeadTime)
	
	Для Каждого ПолеКонтрольнойТочки Из ПоляКонтрольныхТочек Цикл
		Если ПолеКонтрольнойТочки.ЭтоВычисляемоеПоле Тогда
			НовоеПоле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
		Иначе
			НовоеПоле = НаборыДанныхОтчета.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НовоеПоле, ПолеКонтрольнойТочки);
		НовоеПоле.Оформление.УстановитьЗначениеПараметра("Формат",                  ПолеКонтрольнойТочки.Формат);
		НовоеПоле.Оформление.УстановитьЗначениеПараметра("ГоризонтальноеПоложение", ПолеКонтрольнойТочки.ГоризонтальноеПоложение);
		НовоеПоле.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина",      ПолеКонтрольнойТочки.МаксимальнаяШирина);
		
		Если Не ПолеКонтрольнойТочки.ЭтоВычисляемоеПоле 
			И   ВыводитьТолькоРазницуВДняхМеждуКонтрольнымиТочкамиLeadTime 
			Тогда
			Продолжить;
		КонецЕсли;
		
		ВыбранноеПоле = НастройкиОтчета.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Использование = Истина;
		ВыбранноеПоле.Заголовок     = ПолеКонтрольнойТочки.Заголовок;
		ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных(ПолеКонтрольнойТочки.Поле);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьИтогиВОтчет(ПоляКонтрольныхТочек, СхемаКомпоновкиДанных, ВыводитьСреднееЗначениеLeadTimeПоКонтрольнымТочкам)
	
	Если ВыводитьСреднееЗначениеLeadTimeПоКонтрольнымТочкам Тогда
		Для Каждого ПолеКонтрольнойТочки Из ПоляКонтрольныхТочек Цикл
			Если ПолеКонтрольнойТочки.ЭтоВычисляемоеПоле Тогда
				ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
				ПолеРесурса.ПутьКДанным = ПолеКонтрольнойТочки.ПутьКДанным;
				ПолеРесурса.Выражение   = "Среднее("+ПолеКонтрольнойТочки.Поле+")";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция РеквизитыКонтрольнойТочки(КонтрольнаяТочка)
	
	СтруктураРеквизитов = Новый Структура;
	
	РеквизитыКонтрольнойТочки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КонтрольнаяТочка, "КонтрольнаяТочка,Наименование");
	
	ИндексЗначенияПеречисления = Перечисления["Scan_КлючевыеДаты"].Индекс(РеквизитыКонтрольнойТочки.КонтрольнаяТочка);
	ИмяКлючевойДаты            = Метаданные.Перечисления["Scan_КлючевыеДаты"].ЗначенияПеречисления[ИндексЗначенияПеречисления].Имя;
	
	СтруктураРеквизитов.Вставить("КлючеваяДата",    РеквизитыКонтрольнойТочки.КонтрольнаяТочка);
	СтруктураРеквизитов.Вставить("Наименование",    РеквизитыКонтрольнойТочки.Наименование);
	СтруктураРеквизитов.Вставить("ИмяКлючевойДаты", ИмяКлючевойДаты);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли