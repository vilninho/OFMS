//rarus tenkam 17.08.2017 mantis 10831 +++
Функция ЗаписатьСобытиеВРегистр(СтруктураПараметров, ТекстЗапроса, ТекстОтвета, GuidСобытия1БД) Экспорт
	Если НЕ СтруктураПараметров.Свойство("ДокументСсылка") Тогда
		Возврат Ложь;
	КонецЕсли;

	Если НЕ (СтруктураПараметров.Свойство("ВидСобытия") И СтруктураПараметров.Свойство("ДатаСобытия") И СтруктураПараметров.Свойство("GuidСобытияВВнешнейСистеме") И СтруктураПараметров.Свойство("ТСGUID")) Тогда
		ЗаписьЖурналаРегистрации("Обмен с 1БД. Запись события" , УровеньЖурналаРегистрации.Ошибка,, СтруктураПараметров.ДокументСсылка, "Ошибка записи события в регистр отправленных событий.");	
		Возврат Ложь;
	КонецЕсли;
	
	ВсеОк = Истина;
	Если СтруктураПараметров.Свойство("ПользовательСсылка") И ЗначениеЗаполнено(СтруктураПараметров.ПользовательСсылка) Тогда
		Пользователь = СтруктураПараметров.ПользовательСсылка; 	
	ИначеЕсли СтруктураПараметров.Свойство("Пользователь") И ЗначениеЗаполнено(СтруктураПараметров.Пользователь) Тогда
		Пользователь = Справочники.Пользователи.НайтиПоНаименованию(СтруктураПараметров.Пользователь,Истина);
		Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
			Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
		КонецЕсли;
	Иначе
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	ЗаписьРегСведений = РегистрыСведений.Scan_Обмен1БДОтправленныеСобытия.СоздатьМенеджерЗаписи();
	Если СтруктураПараметров.Свойство("Изделие") Тогда
		Изделие = СтруктураПараметров.Изделие;
	Иначе
		Изделие = Справочники.Scan_Изделия.НайтиПоРеквизиту("IDExternalSystem", СтруктураПараметров.ТСGUID); 
		Если НЕ ЗначениеЗаполнено(Изделие) Тогда
			ЗаписьЖурналаРегистрации("Обмен с 1БД. Запись события" , УровеньЖурналаРегистрации.Ошибка,, СтруктураПараметров.ДокументСсылка, "Ошибка записи события в регистр отправленных событий.");	
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	ЗаписьРегСведений.Изделие = Изделие;
	ЗаписьРегСведений.Пользователь = Пользователь;
	ЗаписьРегСведений.ВидСобытия = СтруктураПараметров.ВидСобытия;
	ЗаписьРегСведений.ДатаСобытия = СтруктураПараметров.ДатаСобытия;
	ЗаписьРегСведений.GuidСобытияВВнешнейСистеме = СтруктураПараметров.GuidСобытияВВнешнейСистеме;
	
	ЗаписьРегСведений.ТекстЗапроса = ТекстЗапроса;
	ЗаписьРегСведений.ТекстОтвета = ТекстОтвета;
	ЗаписьРегСведений.GuidСобытия1БД = GuidСобытия1БД;
	ЗаписьРегСведений.ДатаИзменения = ТекущаяДатаСеанса();		//16.11.2017 10831 +
	
	Если СтруктураПараметров.Свойство("ТекстСобытия") Тогда
		ЗаписьРегСведений.ТекстСобытия = СтруктураПараметров.ТекстСобытия;
	КонецЕсли;
	Если СтруктураПараметров.Свойство("ПричинаСобытия") Тогда
		ЗаписьРегСведений.ПричинаСобытия = СтруктураПараметров.ПричинаСобытия;
	КонецЕсли;
	  	
	Попытка
		ЗаписьРегСведений.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("Обмен с 1БД. Запись события" , УровеньЖурналаРегистрации.Ошибка,, СтруктураПараметров.ДокументСсылка, "Ошибка записи события в регистр отправленных событий.");	

		//rarus FominskiyAS 24.04.2019  mantis 14191 +++
		//Сообщить(НСтр("ru = 'Ошибка записи события в регистр отправленных событий.'"));
		Сообщить(НСтр("ru = 'Ошибка записи события в регистр отправленных событий.'; en = 'Action failed'"));
		//rarus FominskiyAS 24.04.2019  mantis 14191 ---  
		ВсеОк = Ложь;
	КонецПопытки; 

	Возврат ВсеОк;

КонецФункции

Функция ПлановыеДанныеОтправлены(ЗаявкаПеревозчикуСсылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_Обмен1БДОтправленныеСобытия.GuidСобытияВВнешнейСистеме
		|ИЗ
		|	РегистрСведений.Scan_Обмен1БДОтправленныеСобытия КАК Scan_Обмен1БДОтправленныеСобытия
		|ГДЕ
		|	Scan_Обмен1БДОтправленныеСобытия.GuidСобытияВВнешнейСистеме = &GuidСобытияВВнешнейСистеме
		|	И Scan_Обмен1БДОтправленныеСобытия.ВидСобытия = &ВидСобытия";
	
	Запрос.УстановитьПараметр("GuidСобытияВВнешнейСистеме", Строка(ЗаявкаПеревозчикуСсылка.УникальныйИдентификатор()));
	Запрос.УстановитьПараметр("ВидСобытия", "РегистрацияПлановойДатыПрихода");
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Функция ОтменаПлановыеДанныеОтправлена(GuidСобытияВВнешнейСистеме, GuidСобытия, Изделие) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Scan_Обмен1БДОтправленныеСобытия.GuidСобытияВВнешнейСистеме КАК GuidСобытияВВнешнейСистеме
		|ИЗ
		|	РегистрСведений.Scan_Обмен1БДОтправленныеСобытия КАК Scan_Обмен1БДОтправленныеСобытия
		|ГДЕ
		|	Scan_Обмен1БДОтправленныеСобытия.GuidСобытияВВнешнейСистеме = &GuidСобытияВВнешнейСистеме
		|	И Scan_Обмен1БДОтправленныеСобытия.ВидСобытия = &ВидСобытия
		|	И Scan_Обмен1БДОтправленныеСобытия.Изделие = &Изделие
		|	И Scan_Обмен1БДОтправленныеСобытия.GuidСобытия1БД = &GuidСобытия";
	
	Запрос.УстановитьПараметр("GuidСобытияВВнешнейСистеме", GuidСобытияВВнешнейСистеме);
	Запрос.УстановитьПараметр("GuidСобытия", GuidСобытия);
	Запрос.УстановитьПараметр("Изделие", Изделие);
	Запрос.УстановитьПараметр("ВидСобытия", "ОтменаИзменениеМестонахождения");
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

//rarus tenkam 17.08.2017 mantis 10831 ---