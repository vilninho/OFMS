//rarus ozhnik 14927 26.02.2020 + 
Процедура ПриЗаписи(Отказ, Замещение)
	
	//rarus vikhle 05.09.2021 mt 18212 +++
	ТаблицаЗаписей = ЭтотОбъект.Выгрузить();
	РегистрыСведений.Scan_КлючевыеДатыПроцессов.ОбработатьДанныеДляOrderIntake(ТаблицаЗаписей);
	//rarus vikhle 05.09.2021 mt 18212 ---

	#Область ЗакомментированоOI	
	//rarus vikhle 05.09.2021 mt 18212 +++
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТЗ.ОбъектКлючевойДаты КАК ОбъектКлючевойДаты,
	//	|	ВЫРАЗИТЬ(ТЗ.Объект КАК Справочник.Scan_ЗаказыНаЗавод) КАК Объект,
	//	|	ТЗ.видКлючевойДаты КАК ВидКлючевойДаты,
	//	|	ТЗ.Значение КАК Значение
	//	|ПОМЕСТИТЬ ВТ_ТЗ_Типизация
	//	|ИЗ
	//	|	&ТаблицаЗаписей КАК ТЗ
	//	|ГДЕ
	//	|	(ТЗ.видКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.ДатаПродажиИзделия)
	//	|			ИЛИ ТЗ.видКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.ДатаПродажиКлиенту))
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	// rarus vikhle 03.09.2021 mt 18212 +++
	//	|ВЫБРАТЬ
	//	|	ВТ_ТЗ_Типизация.ОбъектКлючевойДаты КАК ОбъектКлючевойДаты,
	//	|	ВТ_ТЗ_Типизация.Объект КАК Объект,
	//	|	ВТ_ТЗ_Типизация.ВидКлючевойДаты КАК ВидКлючевойДаты,
	//	|	ВТ_ТЗ_Типизация.Значение КАК Значение,
	//	|	ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) КАК ТипЗаказа
	//	|ПОМЕСТИТЬ ВТ_СТипомЗаказа
	//	|ИЗ
	//	|	ВТ_ТЗ_Типизация КАК ВТ_ТЗ_Типизация
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|						(ВЫБРАТЬ
	//	|							ВТ_ТЗ_Типизация.Объект КАК Объект
	//	|						ИЗ
	//	|							ВТ_ТЗ_Типизация КАК ВТ_ТЗ_Типизация)
	//	|					И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
	//	|		ПО ВТ_ТЗ_Типизация.Объект = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
	//	|ГДЕ
	//	|	ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) В (&ТипыЗаказаFirm)
	//	|;
	//	// rarus vikhle 03.09.2021 mt 18212 ---
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_СТипомЗаказа.ОбъектКлючевойДаты КАК ОбъектКлючевойДаты,
	//	|	ВЫБОР
	//	|		КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке ЕСТЬ NULL
	//	|				ИЛИ Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке = ЗНАЧЕНИЕ(Справочник.Scan_СоглашенияОПоставке.ПустаяСсылка)
	//	|			ТОГДА ВЫБОР
	//	|					КОГДА Scan_Изделия.СОП.Компания.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	//	|						ТОГДА ВТ_СТипомЗаказа.Объект
	//	|					ИНАЧЕ NULL
	//	|				КОНЕЦ
	//	|		ИНАЧЕ ВЫБОР
	//	|				КОГДА Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Дилер.ВидДилера = ЗНАЧЕНИЕ(Перечисление.Scan_ВидыДилеров.Собственный)
	//	|					ТОГДА ВТ_СТипомЗаказа.Объект
	//	|				ИНАЧЕ NULL
	//	|			КОНЕЦ
	//	|	КОНЕЦ КАК Объект,
	//	|	ВТ_СТипомЗаказа.ВидКлючевойДаты КАК ВидКлючевойДаты,
	//	|	ВТ_СТипомЗаказа.Значение КАК Значение
	//	|ПОМЕСТИТЬ ТаблицаДатаПродажиКлиенту
	//	|ИЗ
	//	|	ВТ_СТипомЗаказа КАК ВТ_СТипомЗаказа
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_Изделия КАК Scan_Изделия
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних(
	//	|					,
	//	|					Изделие.ЗаказНаЗавод В
	//	|						(ВЫБРАТЬ
	//	|							ВТ_СТипомЗаказа.Объект
	//	|						ИЗ
	//	|							ВТ_СТипомЗаказа КАК ВТ_СТипомЗаказа
	//	|						ГДЕ
	//	|							ВТ_СТипомЗаказа.ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.ДатаПродажиКлиенту))) КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	//	|			ПО Scan_Изделия.Ссылка = Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие
	//	|		ПО ВТ_СТипомЗаказа.Объект = Scan_Изделия.ЗаказНаЗавод
	//	|ГДЕ
	//	|	ВТ_СТипомЗаказа.ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.ДатаПродажиКлиенту)
	//	|	И НЕ Scan_Изделия.БУ
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_ТЗ.ОбъектКлючевойДаты КАК ОбъектКлючевойДаты,
	//	|	ВТ_ТЗ.Объект КАК Объект,
	//	|	ВТ_ТЗ.ВидКлючевойДаты КАК ВидКлючевойДаты,
	//	|	ВТ_ТЗ.Значение КАК Значение
	//	|ПОМЕСТИТЬ ВТ_ТЗ
	//	|ИЗ
	//	|	ВТ_СТипомЗаказа КАК ВТ_ТЗ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_Изделия КАК Scan_Изделия
	//	|		ПО ВТ_ТЗ.Объект = Scan_Изделия.ЗаказНаЗавод
	//	|ГДЕ
	//	|	(Scan_Изделия.Ссылка ЕСТЬ NULL
	//	|			ИЛИ Scan_Изделия.БУ = ЛОЖЬ)
	//	|	И ВТ_ТЗ.ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.ДатаПродажиИзделия)
	//	|
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|
	//	|ВЫБРАТЬ
	//	|	ТаблицаДатаПродажиКлиенту.ОбъектКлючевойДаты,
	//	|	ТаблицаДатаПродажиКлиенту.Объект,
	//	|	ТаблицаДатаПродажиКлиенту.ВидКлючевойДаты,
	//	|	ТаблицаДатаПродажиКлиенту.Значение
	//	|ИЗ
	//	|	ТаблицаДатаПродажиКлиенту КАК ТаблицаДатаПродажиКлиенту
	//	|ГДЕ
	//	|	ТаблицаДатаПродажиКлиенту.Объект ЕСТЬ НЕ NULL 
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_ТЗ.ОбъектКлючевойДаты КАК ОбъектКлючевойДаты,
	//	|	ВТ_ТЗ.Объект КАК Объект,
	//	|	ВТ_ТЗ.ВидКлючевойДаты КАК ВидКлючевойДаты,
	//	|	ВТ_ТЗ.Значение КАК Значение,
	//	|	Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод КАК ЗаказНаЗавод,
	//	|	Scan_OrderIntakeСрезПоследних1.ЗаказНаЗавод КАК ЗаказНаЗавод1
	//	|ИЗ
	//	|	ВТ_ТЗ КАК ВТ_ТЗ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ДатаОтгрузки)) КАК Scan_OrderIntakeСрезПоследних
	//	|		ПО ВТ_ТЗ.Объект = Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake)) КАК Scan_OrderIntakeСрезПоследних1
	//	|		ПО ВТ_ТЗ.Объект = Scan_OrderIntakeСрезПоследних1.ЗаказНаЗавод
	//	|ГДЕ
	//	|	Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод ЕСТЬ NULL";
	//
	//ТаблицаЗаписей = ЭтотОбъект.Выгрузить();//rarus vikhle 22.10.2020 mt 16328
	//Запрос.УстановитьПараметр("ТаблицаЗаписей",ТаблицаЗаписей);	
	////rarus vikhle 03.09.2021 mt 18212 +++
	//ТипыЗаказаFirm = Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm();
	//Запрос.УстановитьПараметр("ТипыЗаказаFirm", ТипыЗаказаFirm);
	////rarus vikhle 03.09.2021 mt 18212 ---
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//// rarus agar 20.04.2021 OI ++
	//АльтернативныйРасчет = Scan_ПраваИНастройки.Scan_Право("ИспользоватьАльтернативныйРасчетДатOrderIntake");
	//// rarus agar 20.04.2021 OI --
	//
	//Пока Выборка.Следующий() Цикл  

	//	Если не значениеЗаполнено(Выборка.ЗаказНаЗавод) Тогда // нет состояния "Дата отгрузки", надо добавить
	//		//rarus ozhnik 15907 30.03.2020 + 
	//		Если Выборка.Значение = Дата(1,1,1) Тогда
	//			//пришла пустая дата, необходимо очистить значение
	//			НаборЗаписейOrderIntake =  РегистрыСведений.Scan_OrderIntake.СоздатьНаборЗаписей();
	//			НаборЗаписейOrderIntake.Отбор.ЗаказНаЗавод.Установить(Выборка.Объект);
	//			НаборЗаписейOrderIntake.Отбор.ВидДаты.Установить(Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаОтгрузки);
	//			НаборЗаписейOrderIntake.Записать();        				
	//		Иначе
	//			// rarus agar 20.04.2021 OI ++
	//			Если Не АльтернативныйРасчет Тогда
	//			// rarus agar 20.04.2021 OI --
	//				
	//				// дата заполнена, выполняется штатный алгоритм
	//				//rarus ozhnik 15907 30.03.2020 -
	//				НоваяЗапись =  РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи();
	//				НоваяЗапись.Период = Выборка.Значение;
	//				НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаОтгрузки;
	//				НоваяЗапись.ЗаказНаЗавод = Выборка.Объект;
	//				НоваяЗапись.Прочитать();
	//				Если Не НоваяЗапись.Выбран() Тогда
	//					НоваяЗапись.Период = Выборка.Значение;
	//					НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаОтгрузки;
	//					НоваяЗапись.ЗаказНаЗавод = Выборка.Объект;
	//					НоваяЗапись.ИспользоватьВОтчетах = Истина; //rarus vikhle 21.03.2021 mt 17479
	//					НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
	//					НоваяЗапись.Записать();
	//				КонецЕсли;
	//				Если не значениеЗаполнено(Выборка.ЗаказНаЗавод1) Тогда // не было состояния "Order Intake", но есть Дата отгрузки, надо добавить статус Order Intake
	//					НоваяЗапись =  РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи();
	//					НоваяЗапись.Период = Выборка.Значение;
	//					НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake;
	//					НоваяЗапись.ЗаказНаЗавод = Выборка.Объект;
	//					НоваяЗапись.Прочитать();
	//					Если Не НоваяЗапись.Выбран() Тогда
	//						НоваяЗапись.Период = Выборка.Значение;
	//						НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake;
	//						НоваяЗапись.ЗаказНаЗавод = Выборка.Объект;
	//						НоваяЗапись.ИспользоватьВОтчетах = Истина; //rarus vikhle 21.03.2021 mt 17479
	//						НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	//						НоваяЗапись.Записать();
	//					КонецЕсли;
	//				КонецЕсли;
	//			// rarus agar 20.04.2021 OI ++
	//			Иначе
	//				МенеджерЗаписи = РегистрыСведений.Scan_РасчетOrderIntake.СоздатьМенеджерЗаписи();
	//				МенеджерЗаписи.Период       = ТекущаяДатаСеанса();
	//				МенеджерЗаписи.ЗаказНаЗавод = Выборка.Объект;
	//				МенеджерЗаписи.Событие      = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаОтгрузки;
	//				МенеджерЗаписи.ДатаСобытия  = Выборка.Значение;
	//				МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	//				УстановитьПривилегированныйРежим(Истина);
	//				МенеджерЗаписи.Записать();
	//				УстановитьПривилегированныйРежим(Ложь);
	//			КонецЕсли;
	//			// rarus agar 20.04.2021 OI --
	//		КонецЕсли; //rarus ozhnik 15907 30.03.2020 + 
	//	КонецЕсли; 	
	//	

	//КонецЦикла;
	//rarus vikhle 05.09.2021 mt 18212 ---
#КонецОбласти	

	//rarus vikhle 22.10.2020 mt 16328 +++	
	Для Каждого Запись Из ТаблицаЗаписей Цикл
		Если Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CDD
			ИЛИ Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CDD2
			ИЛИ Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.PDD
			ИЛИ Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.EDD Тогда 
			
			// Проверка на необходимость добавления в регистр Scan_ОчередьDD2DDSИнформера
			//rarus vikhle 07.09.2021 mt 17933 +++
			Если Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.PDD Тогда 
			
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	КОЛИЧЕСТВО(Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку) КАК КолВоЗаказовНаЗакупку
				               |ИЗ
				               |	Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
				               |ГДЕ
				               |	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка = &Ссылка";
				Запрос.УстановитьПараметр("Ссылка", Запись.Объект);
				РезультатЗапроса = Запрос.Выполнить();
				Выборка = РезультатЗапроса.Выбрать();
				
				Если Выборка.Следующий() И Выборка.КолВоЗаказовНаЗакупку > 0 Тогда
					
					//rarus vikhle 09.09.2021 mt 17933 +++
					// Получаем текущую RDB и предыдущую PDD
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ
					               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК ПредыдущаяPDD, //rarus vikhle 10.09.2021 mt 17933 + началопериода
					               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК ТекущаяRDB  //rarus vikhle 10.09.2021 mt 17933 + началопериода
					               |ИЗ
					               |	РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
					               |			&Период,
					               |			ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.PDD)
					               |				И Объект = &Заказ
					               |				И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихPDD
					               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
					               |				,
					               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.RDB)
					               |					И Объект = &Заказ
					               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихRDB
					               |		ПО Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Объект = Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Объект";
					Запрос.УстановитьПараметр("Период", Запись.Период - 1);
					Запрос.УстановитьПараметр("Заказ",  Запись.Объект);
					
					РезультатЗапроса = Запрос.Выполнить();
					Выборка = РезультатЗапроса.Выбрать();
					
					Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ТекущаяRDB) Тогда
						
						РазницаМеждуPDDИRDBВДнях	 = Scan_ПраваИНастройки.Scan_Право("МинимальнаяРазницаМеждуДатамиPDDИRDBПродуктовСНадстройкой");
						РазницаМеждуPDDИRDBВСекундах = РазницаМеждуPDDИRDBВДнях * 60 * 60 * 24;	
						
						// Учитываем только заполненные значения PDD и RDB
						Если ЗначениеЗаполнено(Выборка.ПредыдущаяPDD) Тогда
							ПредыдущаяРазница = Выборка.ПредыдущаяPDD - Выборка.ТекущаяRDB;
						Иначе
							ПредыдущаяРазница = 0;
						КонецЕсли;	
						
						Если ЗначениеЗаполнено(Запись.Значение) Тогда
							ТекущаяРазница = НачалоДня(Запись.Значение) - Выборка.ТекущаяRDB; //rarus vikhle 10.09.2021 mt 17933 + началодня 
						Иначе
							ТекущаяРазница = 0;
						КонецЕсли;	
						
						// Произошло изменение разницы между PDD и RDB, стало меньше значения из настройки.
						// Удаляем запись по заказу в регистре Scan_ОчередьDD2DDSИнформера, если там есть запись 
						// и не выполнены условия попадания в регистр. 
						Если ПредыдущаяРазница > РазницаМеждуPDDИRDBВСекундах
							И ТекущаяРазница < РазницаМеждуPDDИRDBВСекундах Тогда
							
							Если РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(Запись.Объект) Тогда
								Если НЕ РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(Запись.Объект) Тогда	
									РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(Запись.Объект);	
								КонецЕсли;	
							КонецЕсли;	
						// Произошло изменение разницы между PDD и RDB, стало больше значения из настройки.
						// Добавляем запись по заказу в регистре Scan_ОчередьDD2DDSИнформера, если там нет записи 
						// и выполнены условия попадания в регистр.	
						ИначеЕсли ПредыдущаяРазница < РазницаМеждуPDDИRDBВСекундах
							И ТекущаяРазница > РазницаМеждуPDDИRDBВСекундах Тогда 	
							
							Если НЕ РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(Запись.Объект) Тогда
								Если РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(Запись.Объект) Тогда	
									РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);	
								КонецЕсли;	
							КонецЕсли;
																	
						// До изменения PDD разница с RDB была больше значения из настройки,
						// при отсутствии в регистре Scan_ОчередьDD2DDSИнформера добавляем.
						ИначеЕсли ПредыдущаяРазница > РазницаМеждуPDDИRDBВСекундах
							И ТекущаяРазница > РазницаМеждуPDDИRDBВСекундах Тогда 
							
							Если НЕ РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(Запись.Объект) Тогда
								РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);		
							КонецЕсли;	
							
						КонецЕсли;	
					//rarus vikhle 09.09.2021 mt 17933 ---
					
					//rarus vikhle 09.09.2021 mt 17933 +++
					//ДатаRDB = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Запись.Объект, Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Перечисления.Scan_КлючевыеДаты.RDB);
					
					//Если Запись.Значение - ДатаRDB > РазницаМеждуPDDИRDBВСекундах Тогда
					//	РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);
					//КонецЕсли;
					//rarus vikhle 09.09.2021 mt 17933 ---
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
			//rarus vikhle 07.09.2021 mt 17933 ---
						
			ПродуктЗаказа = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьИзделиеПоЗаказу(Запись.Объект);
			//rarus vikhle 21.12.2020 mt 16328 +++
			ТипЗаказаНаЗавод = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(Запись.Объект, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод);
			
			//МассивТиповЗаказаFirm = Новый Массив;
			//МассивТиповЗаказаFirm.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderNormal);
			//МассивТиповЗаказаFirm.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderRefill);
			//МассивТиповЗаказаFirm.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderUrgent);
			//rarus vikhle 21.12.2020 mt 16328 ---
			МассивТиповЗаказаFirm = Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm(); //rarus vikhle 09.09.2021 mt 17933
			
			Если ПродуктЗаказа.Пустая() 
				ИЛИ ПродуктЗаказа.БУ
				ИЛИ ПродуктЗаказа.ГруппаИзделийOFMS = Перечисления.Scan_ГруппыИзделийOFMS.Услуга
				ИЛИ НЕ ПродуктЗаказа.МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania 
				ИЛИ МассивТиповЗаказаFirm.Найти(ТипЗаказаНаЗавод) = Неопределено //rarus vikhle 21.12.2020 16328 +-
				Тогда
				Продолжить;
			КонецЕсли;	
			
			ДатаПродажи = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(Запись.Объект,Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия);
			Если ЗначениеЗаполнено(ДатаПродажи)Тогда
				Продолжить;	
			КонецЕсли;	
			
			МенеджерЗаписи =  РегистрыСведений.Scan_ОчередьDDИнформера.СоздатьМенеджерЗаписи(); 
			МенеджерЗаписи.ЗаказНаЗавод = Запись.Объект;
			МенеджерЗаписи.Прочитать();
			Если МенеджерЗаписи.Выбран() Тогда
					МенеджерЗаписи.ИзмененаДатаCDD	= МенеджерЗаписи.ИзмененаДатаCDD  ИЛИ Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CDD;
					МенеджерЗаписи.ИзмененаДатаCDD2	= МенеджерЗаписи.ИзмененаДатаCDD2 ИЛИ Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CDD2;
					МенеджерЗаписи.ИзмененаДатаPDD	= МенеджерЗаписи.ИзмененаДатаPDD  ИЛИ Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.PDD;
					МенеджерЗаписи.ИзмененаДатаEDD	= МенеджерЗаписи.ИзмененаДатаEDD  ИЛИ Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.EDD;
			Иначе
				    МенеджерЗаписи.ЗаказНаЗавод 	= Запись.Объект;
					МенеджерЗаписи.ИзмененаДатаCDD	= Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CDD;
					МенеджерЗаписи.ИзмененаДатаCDD2	= Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.CDD2;
					МенеджерЗаписи.ИзмененаДатаPDD	= Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.PDD;
					МенеджерЗаписи.ИзмененаДатаEDD	= Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.EDD;
			КонецЕсли;
			МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь; 
			МенеджерЗаписи.Записать();
		//rarus vikhle 20.07.2021 m 17933 +++	
		ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.DD Тогда
			Если НЕ Запись.Значение = Дата(1,1,1) Тогда
				// Если это первая установка даты, либо первая установка после очистки, тогда
				// добавим запись по заказу в регистр "Очередь DD2/DDS информера"
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	Scan_ЗаказыНаЗавод.Ссылка КАК ЗаказНаЗавод
				               |ПОМЕСТИТЬ ЗаказыНаЗавод
				               |ИЗ
				               |	Справочник.Scan_ЗаказыНаЗавод КАК Scan_ЗаказыНаЗавод
				               |ГДЕ
				               |	Scan_ЗаказыНаЗавод.Ссылка = &ЗаказНаЗавод
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОчисткиDD,
				               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследних.ВидКлючевойДаты, ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.DD)) КАК ВидКлючевойДаты,
				               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследних.ОбъектКлючевойДаты, ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК ОбъектКлючевойДаты,
				               |	ЗаказыНаЗавод.ЗаказНаЗавод КАК ЗаказНаЗавод
				               |ПОМЕСТИТЬ ДатаПоследнейОчисткиDD
				               |ИЗ
				               |	ЗаказыНаЗавод КАК ЗаказыНаЗавод
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
				               |				,
				               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.DD)
				               |					И Объект = &ЗаказНаЗавод
				               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)
				               |					И Значение = ДАТАВРЕМЯ(1, 1, 1)) КАК Scan_КлючевыеДатыПроцессовСрезПоследних
				               |		ПО ЗаказыНаЗавод.ЗаказНаЗавод = Scan_КлючевыеДатыПроцессовСрезПоследних.Объект
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	Scan_КлючевыеДатыПроцессов.Период КАК ДатаУстановкиDD,
				               |	ДатаПоследнейОчисткиDD.ЗаказНаЗавод КАК ЗаказНаЗавод
				               |ИЗ
				               |	ДатаПоследнейОчисткиDD КАК ДатаПоследнейОчисткиDD
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов КАК Scan_КлючевыеДатыПроцессов
				               |		ПО ДатаПоследнейОчисткиDD.ВидКлючевойДаты = Scan_КлючевыеДатыПроцессов.ВидКлючевойДаты
				               |			И ДатаПоследнейОчисткиDD.ОбъектКлючевойДаты = Scan_КлючевыеДатыПроцессов.ОбъектКлючевойДаты
				               |			И ДатаПоследнейОчисткиDD.ДатаОчисткиDD < Scan_КлючевыеДатыПроцессов.Период
				               |			И ДатаПоследнейОчисткиDD.ЗаказНаЗавод = Scan_КлючевыеДатыПроцессов.Объект
				               |ГДЕ
				               |	Scan_КлючевыеДатыПроцессов.Период < &ПериодТекущейЗаписи";
				Запрос.УстановитьПараметр("ЗаказНаЗавод", 		 Запись.Объект);
				Запрос.УстановитьПараметр("ПериодТекущейЗаписи", Запись.Период);
				РезультатЗапроса = Запрос.Выполнить();
				Если РезультатЗапроса.Пустой() Тогда
					РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);	 
					
					//rarus vikhle 19.11.2021 m 18500 +++ закомментировал 
					//rarus vikhle 12.11.2021 m 18500 +++
					// Установка ключевой даты "Квота"
					//РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Запись.Объект, 
					//																		Перечисления.Scan_КлючевыеДаты.Квота, 
					//																		НачалоМесяца(Запись.Значение),
					//																		Запись.Период);
					//rarus vikhle 19.11.2021 m 18500 ---																		
					//rarus vikhle 12.11.2021 m 18500 ---
					
				КонецЕсли;	
				
				//rarus vikhle 19.11.2021 m 18500 +++
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	Scan_КлючевыеДатыПроцессов.Период КАК Период
				               |ИЗ
				               |	РегистрСведений.Scan_КлючевыеДатыПроцессов КАК Scan_КлючевыеДатыПроцессов
				               |ГДЕ
				               |	Scan_КлючевыеДатыПроцессов.Период < &ПериодЗаписи
				               |	И Scan_КлючевыеДатыПроцессов.ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)
				               |	И Scan_КлючевыеДатыПроцессов.Объект = &ЗаказНаЗавод
				               |	И Scan_КлючевыеДатыПроцессов.ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.DD)
				               |	И Scan_КлючевыеДатыПроцессов.Значение <> ДАТАВРЕМЯ(1, 1, 1)";
				Запрос.УстановитьПараметр("ПериодЗаписи", Запись.Период);
				Запрос.УстановитьПараметр("ЗаказНаЗавод", Запись.Объект);
				Результат = Запрос.Выполнить();
				Если Результат.Пустой() Тогда // это первая установка DD
					// Установка ключевой даты "Квота"
					РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Запись.Объект, 
																							Перечисления.Scan_КлючевыеДаты.Квота, 
																							НачалоМесяца(Запись.Значение),
																							Запись.Период);	
				КонецЕсли;	
				
				//rarus vikhle 19.11.2021 m 18500 ---
				
			//rarus vikhle 19.11.2021 m 18500 +++ закомментировал				
			//Иначе 
				//rarus vikhle 10.11.2021 m 18500 +++	
				
				//rarus vikhle 19.11.2021 m 18500 +++ закомментировал
				// Очистка ключевой даты "Квота"
				//РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЗаписатьКлючевуюДатуОбъекта(Запись.Объект, 
				//																		Перечисления.Scan_КлючевыеДаты.Квота, 
				//																		Запись.Значение,
				//																		Запись.Период);
				//rarus vikhle 19.11.2021 m 18500 ---
				
				//rarus vikhle 10.11.2021 m 18500 ---	
			
			КонецЕсли;	
			
		ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.DD2 Тогда 	
			//РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);//rarus vikhle 08.09.2021 m 17933 Откат, как было
			
			//rarus vikhle 08.09.2021 mt 17933 +++
			DDPriorityЗаполнено = ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Объект, "DDPriority"));
			Если DDPriorityЗаполнено Тогда
				РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);
				Продолжить;
			КонецЕсли;	
			//rarus vikhle 08.09.2021 mt 17933 ---
			
			//rarus vikhle 01.09.2021 mt 17933 +++
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихDDS.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК DDS, //rarus vikhle 10.09.2021 mt 17933 + начало периода 
			               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихБронь.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаБрони //rarus vikhle 10.09.2021 mt 17933 + начало периода
			               |ИЗ
			               |	РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
			               |			,
			               |			ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.DDS)
			               |				И Объект = &ЗаказНаЗавод
			               |				И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихDDS
			               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
			               |				,
			               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.БроньДилера)
			               |					И Объект В
			               |						(ВЫБРАТЬ ПЕРВЫЕ 1
			               |							Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие КАК Изделие
			               |						ИЗ
			               |							РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних
			               |						ГДЕ
			               |							Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.ЗаказНаЗавод = &ЗаказНаЗавод)
			               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.Изделие)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихБронь
			               |		ПО Scan_КлючевыеДатыПроцессовСрезПоследнихDDS.Объект = Scan_КлючевыеДатыПроцессовСрезПоследнихБронь.Объект.ЗаказНаЗавод"; 
			Запрос.УстановитьПараметр("ЗаказНаЗавод", Запись.Объект);
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
			
			Если Выборка.Следующий() Тогда
				Если (НачалоДня(Запись.Значение) > Выборка.DDS И ЗначениеЗаполнено(Выборка.DDS)) //rarus vikhle 09.09.2021 mt 17933 добавил условия на заполненние 10.09.2021 vikhle + начало дня
					ИЛИ (НачалоДня(Запись.Значение) > Выборка.ДатаБрони И ЗначениеЗаполнено(Выборка.ДатаБрони)) Тогда //10.09.2021 vikhle + начало дня
					РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);	
				КонецЕсли;	
			КонецЕсли;	
			//rarus vikhle 01.09.2021 mt 17933 ---
						
		ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.DDS Тогда
			РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(Запись.Объект);
		//rarus vikhle 20.07.2021 m 17933 ---
		//rarus vikhle 07.09.2021 mt 17933 +++
		//ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.PDD Тогда 	
		//	//rarus vikhle 01.09.2021 mt 17933 +++
		//	Запрос = Новый Запрос;
		//	Запрос.Текст = "ВЫБРАТЬ
		//	               |	КОЛИЧЕСТВО(Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку) КАК КолВоЗаказовНаЗакупку
		//	               |ИЗ
		//	               |	Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
		//	               |ГДЕ
		//	               |	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка = &Ссылка";
		//	Запрос.УстановитьПараметр("Ссылка", Запись.Объект);
		//	РезультатЗапроса = Запрос.Выполнить();
		//	Выборка = РезультатЗапроса.Выбрать();
		//	
		//	Если Выборка.Следующий() И Выборка.КолВоЗаказовНаЗакупку > 0 Тогда
		//		
		//		РазницаМеждуPDDИRDBВДнях	 = Scan_ПраваИНастройки.Scan_Право("МинимальнаяРазницаМеждуДатамиPDDИRDBПродуктовСНадстройкой");
		//		РазницаМеждуPDDИRDBВСекундах = РазницаМеждуPDDИRDBВДнях * 60 * 60 * 24;
		//		
		//		ДатаRDB = РегистрыСведений.Scan_КлючевыеДатыПроцессов.ЧтениеЗначенияРегистраСведения(Запись.Объект, Перечисления.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод, Перечисления.Scan_КлючевыеДаты.RDB);
		//		
		//		Если Запись.Значение - ДатаRDB > РазницаМеждуPDDИRDBВСекундах Тогда
		//			РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);
		//		КонецЕсли;
		//			
		//	КонецЕсли;	
		//	 //rarus vikhle 07.09.2021 mt 17933 ---
		ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия Тогда
			//удалим из очереди dd-информера при появлении даты продажи
			МенеджерЗаписи = РегистрыСведений.Scan_ОчередьDDИнформера.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ЗаказНаЗавод = Запись.Объект;
			МенеджерЗаписи.Прочитать();
			Если МенеджерЗаписи.Выбран() Тогда
				МенеджерЗаписи.Удалить();
			КонецЕсли;	
			
			//rarus vikhle 20.07.2021 m 17933 +++	
			ПродуктЗаказа	= РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьИзделиеПоЗаказу(Запись.Объект);
			Заявка 			= РегистрыСведений.Scan_СоставСоглашенийОПоставке.ПолучитьСоглашениеОПоставке(ПродуктЗаказа);
			Если ЗначениеЗаполнено(Заявка) Тогда
				ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заявка,"Дилер.ВидДилера");
				Если ВидДилера = Перечисления.Scan_ВидыДилеров.Независимый ИЛИ ВидДилера.Пустая() Тогда
					Если НЕ Запись.Значение = Дата(1,1,1) Тогда
						// Установлена дата продажи (Независимый дилер), нужно удалить запись из очереди DD2/DDS информера
						РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(Запись.Объект);
						//rarus vikhle 14.01.2021 m 18269 +++
						// rarus vikhle 27.12.2021 m 18269 +++
						//РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(ПродуктЗаказа, 
						//																				Справочники.Scan_СоглашенияОПоставке.СебестоимостьПродукта(ПродуктЗаказа, Заявка));
						// rarus vikhle 27.12.2021 m 18269 ---	
						//rarus vikhle 14.01.2021 m 18269 ---
					ИначеЕсли НЕ РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(Запись.Объект) // rarus vikhle 10.09.2021 mt 17933
						И РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(Запись.Объект) Тогда // Очищена дата продажи, нужно проверить на необходимость повторного добавления в очередь DD2/DDS информера
						РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);
					КонецЕсли;
					
					//rarus vikhle 14.01.2021 m 18269 +++
					// rarus vikhle 27.12.2021 m 18269 +++
					//Если Запись.Значение = Дата(1,1,1) Тогда
					//	РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.УдалитьЗаписьПоПродукту(ПродуктЗаказа);
					//КонецЕсли;	
					// rarus vikhle 27.12.2021 m 18269 ---
					//rarus vikhle 14.01.2021 m 18269 ---
					
				КонецЕсли;	
			КонецЕсли;	
		ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиКлиенту Тогда 	
			ПродуктЗаказа	= РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьИзделиеПоЗаказу(Запись.Объект);
			Заявка			= РегистрыСведений.Scan_СоставСоглашенийОПоставке.ПолучитьСоглашениеОПоставке(ПродуктЗаказа);
			Если ЗначениеЗаполнено(Заявка) Тогда
				ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заявка,"Дилер.ВидДилера");
				Если ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда
					Если НЕ Запись.Значение = Дата(1,1,1) Тогда
						// Установлена дата продажи от ОСП (Собственный дилер), нужно удалить запись из очереди DD2/DDS информера
						РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(Запись.Объект);
						//rarus vikhle 14.01.2021 m 18269 +++
						// rarus vikhle 27.12.2021 m 18269 +++
						//РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(ПродуктЗаказа, 
						//																				Справочники.Scan_СоглашенияОПоставке.СебестоимостьПродукта(ПродуктЗаказа, Заявка));
						// rarus vikhle 27.12.2021 m 18269 ---
						//rarus vikhle 14.01.2021 m 18269 ---
					ИначеЕсли НЕ РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(Запись.Объект) // rarus vikhle 10.09.2021 mt 17933
						И РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(Запись.Объект) Тогда // Очищена дата продажи, нужно проверить на необходимость повторного добавления в очередь DD2/DDS информера
						РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);
					КонецЕсли;	
					
					//rarus vikhle 14.01.2021 m 18269 +++
					// rarus vikhle 27.12.2021 m 18269 +++
					//Если Запись.Значение = Дата(1,1,1) Тогда
					//	РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.УдалитьЗаписьПоПродукту(ПродуктЗаказа);
					//КонецЕсли;	
					// rarus vikhle 27.12.2021 m 18269 ---
					//rarus vikhle 14.01.2021 m 18269 ---
					
				КонецЕсли;	
			КонецЕсли;
		//rarus vikhle 20.07.2021 m 17933 ---	
		//rarus vikhle 14.01.2021 m 18269 +++
		// rarus vikhle 27.12.2021 m 18269 +++
		//ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру Тогда
		//	Заявка	  = РегистрыСведений.Scan_СоставСоглашенийОПоставке.ПолучитьСоглашениеОПоставке(Запись.Объект);
		//	ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заявка,"Дилер.ВидДилера");
		//	
		//	Если ВидДилера = Перечисления.Scan_ВидыДилеров.Независимый ИЛИ ВидДилера.Пустая() Тогда //rarus vikhle 28.12.2021 m 18269
		//		
		//		Если НЕ Запись.Значение = Дата(1,1,1) Тогда
		//			РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(Запись.Объект, 
		//																								Справочники.Scan_СоглашенияОПоставке.СебестоимостьПродукта(Запись.Объект, Заявка));	
		//		Иначе 
		//			РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.УдалитьЗаписьПоПродукту(Запись.Объект);
		//		КонецЕсли;
		//		
		//	КонецЕсли;	
		//	
		//ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУКлиенту Тогда 
		//	Заявка	  = РегистрыСведений.Scan_СоставСоглашенийОПоставке.ПолучитьСоглашениеОПоставке(Запись.Объект);
		//	ВидДилера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заявка,"Дилер.ВидДилера"); 
		//	
		//	Если ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный Тогда //rarus vikhle 28.12.2021 m 18269
		//		
		//		Если НЕ Запись.Значение = Дата(1,1,1) Тогда
		//			РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.ДобавитьЗаписьПоПродукту(Запись.Объект, 
		//																								Справочники.Scan_СоглашенияОПоставке.СебестоимостьПродукта(Запись.Объект, Заявка));	
		//		Иначе 
		//			РегистрыСведений.Scan_ПлановаяСебестоимостьПродуктов.УдалитьЗаписьПоПродукту(Запись.Объект);
		//		КонецЕсли;
		//		
		//	КонецЕсли;
		// rarus vikhle 27.12.2021 m 18269 ---
		//rarus vikhle 14.01.2021 m 18269 ---
		
		//rarus vikhle 07.09.2021 mt 17933 +++
		ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.БроньДилера Тогда 
			
			Если НЕ ЗначениеЗаполнено(Запись.Значение) Тогда
				ЗаказНаЗавод			  = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Запись.Объект);
				ЗаказЕстьВDD2DDSИнформере = РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(ЗаказНаЗавод);
				
				Если ЗаказЕстьВDD2DDSИнформере И НЕ РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(ЗаказНаЗавод) Тогда
					РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(ЗаказНаЗавод);
				КонецЕсли;	
			Иначе
				//rarus vikhle 10.09.2021 mt 17933 +++
				ЗаказНаЗавод			  = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьЗаказПоИзделию(Запись.Объект);
				ЗаказЕстьВDD2DDSИнформере = РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(ЗаказНаЗавод);
				
				Если НЕ ЗаказЕстьВDD2DDSИнформере И РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(ЗаказНаЗавод) Тогда
					РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(ЗаказНаЗавод);
				КонецЕсли;
				//rarus vikhle 10.09.2021 mt 17933 ---
			КонецЕсли;	
			
		//rarus vikhle 07.09.2021 mt 17933 ---	
		//rarus vikhle 08.09.2021 mt 17933 +++
		ИначеЕсли Запись.ВидКлючевойДаты = Перечисления.Scan_КлючевыеДаты.RDB Тогда 
			
			// Проверяем, что по заказу есть заказы на закупку
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	КОЛИЧЕСТВО(Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку) КАК КолВоЗаказовНаЗакупку
			               |ИЗ
			               |	Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
			               |ГДЕ
			               |	Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Запись.Объект);
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();	
			
			Если Выборка.Следующий() И Выборка.КолВоЗаказовНаЗакупку > 0 Тогда
				
				РазницаМеждуPDDИRDBВДнях	 = Scan_ПраваИНастройки.Scan_Право("МинимальнаяРазницаМеждуДатамиPDDИRDBПродуктовСНадстройкой");
				РазницаМеждуPDDИRDBВСекундах = РазницаМеждуPDDИRDBВДнях * 60 * 60 * 24;	
				
				// Получаем текущую PDD и предыдущую RDB
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК ПредыдущаяRDB, //rarus vikhle 10.09.2021 mt 17933 + НачалоПериода
				               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК ТекущаяPDD //rarus vikhle 10.09.2021 mt 17933 + НачалоПериода
				               |ИЗ
				               |	РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
				               |			&Период,
				               |			ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.RDB)
				               |				И Объект = &Заказ
				               |				И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихRDB
				               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
				               |				,
				               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.PDD)
				               |					И Объект = &Заказ
				               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихPDD
				               |		ПО Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Объект = Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Объект";
				Запрос.УстановитьПараметр("Период", Запись.Период - 1);
				Запрос.УстановитьПараметр("Заказ",  Запись.Объект);
				
				РезультатЗапроса = Запрос.Выполнить();
				Выборка = РезультатЗапроса.Выбрать();
				Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ТекущаяPDD) Тогда
					
					// Учитываем только заполненные значения PDD и RDB
					Если ЗначениеЗаполнено(Выборка.ПредыдущаяRDB) Тогда
						ПредыдущаяРазница = Выборка.ТекущаяPDD - Выборка.ПредыдущаяRDB;
					Иначе
						ПредыдущаяРазница = 0;
					КонецЕсли;	
					
					Если ЗначениеЗаполнено(Запись.Значение) Тогда
						ТекущаяРазница = Выборка.ТекущаяPDD - НачалоДня(Запись.Значение); //rarus vikhle 10.09.2021 mt 17933 
					Иначе
						ТекущаяРазница = 0;
					КонецЕсли;	
					
					// Произошло изменение разницы между PDD и RDB, стало меньше значения из настройки.
					// Удаляем запись по заказу в регистре Scan_ОчередьDD2DDSИнформера, если там есть запись 
					// и не выполнены условия попадания в регистр. 
					Если ПредыдущаяРазница > РазницаМеждуPDDИRDBВСекундах
						И ТекущаяРазница < РазницаМеждуPDDИRDBВСекундах Тогда
						
						Если РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(Запись.Объект) Тогда
							Если НЕ РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(Запись.Объект) Тогда	
								РегистрыСведений.Scan_ОчередьDD2DDSИнформера.УдалитьЗаписьПоЗаказу(Запись.Объект);	
							КонецЕсли;	
						КонецЕсли;	
					// Произошло изменение разницы между PDD и RDB, стало больше значения из настройки.
					// Добавляем запись по заказу в регистре Scan_ОчередьDD2DDSИнформера, если там нет записи 
					// и выполнены условия попадания в регистр.	
					ИначеЕсли ПредыдущаяРазница < РазницаМеждуPDDИRDBВСекундах
						И ТекущаяРазница > РазницаМеждуPDDИRDBВСекундах Тогда 	
						
						Если НЕ РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ЕстьЗаписьПоЗаказу(Запись.Объект) Тогда
							Если РегистрыСведений.Scan_ОчередьDD2DDSИнформера.НужноДобавитьЗапись(Запись.Объект) Тогда	
								РегистрыСведений.Scan_ОчередьDD2DDSИнформера.ДобавитьЗаписьПоЗаказу(Запись.Объект);	
							КонецЕсли;	
						КонецЕсли;
						
					КонецЕсли;	
						
				КонецЕсли;	
				
		КонецЕсли;
		//rarus vikhle 08.09.2021 mt 17933 ---
		КонецЕсли;	
	КонецЦикла;	
	//rarus vikhle 22.10.2020 mt 16328 ---
	
КонецПроцедуры
//rarus ozhnik 14927 26.02.2020 + 

Процедура УстановитьСтатусПродуктаДляДатыПродажи() //rarus BProg_Dekin 19.05.2020 mantis 0015999 +-
	ВидКлючевойДаты_ДатаПродажиИзделия 		= Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия;
	ВидКлючевойДаты_ДатаПродажиБУИзделия 	= Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУДилеру;
	ВидКлючевойДаты_ДатаПродажиКлиенту		= Перечисления.Scan_КлючевыеДаты.ДатаПродажиКлиенту; //rarus vikhle 03.02.2021 mt 17173
	ВидКлючевойДаты_ДатаПродажиБУКлиенту	= Перечисления.Scan_КлючевыеДаты.ДатаПродажиБУКлиенту; //rarus vikhle 03.02.2021 mt 17173
	
	Для Каждого СтрокаДвижения Из ЭтотОбъект Цикл
		//Установка статуса для нового изделия 
		Если СтрокаДвижения.ВидКлючевойДаты = ВидКлючевойДаты_ДатаПродажиИзделия 
			ИЛИ СтрокаДвижения.ВидКлючевойДаты = ВидКлючевойДаты_ДатаПродажиКлиенту	Тогда //rarus vikhle 03.02.2021 mt 17173
			Период = Неопределено;//rarus vikhle 19.07.2021 17950
			ЕстьДатаПродажиПозднее = Ложь;//rarus vikhle 19.07.2021 17950
			Продукт = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьИзделиеПоЗаказу(СтрокаДвижения.Объект);
			Если НЕ ЗначениеЗаполнено(Продукт) ИЛИ Продукт.БУ Тогда
				Продолжить;
			КонецЕсли;
			
			//rarus vikhle 19.07.2021 17950 +++
			Если НЕ СтрокаДвижения.Значение = Дата(1,1,1) 
				ИЛИ СтрокаДвижения.ВидКлючевойДаты = ВидКлючевойДаты_ДатаПродажиКлиенту Тогда
				Период = СтрокаДвижения.Период;				
			КонецЕсли;	
			
			
			//ПоследнееЗначениеДатыПродажиИзделия = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(СтрокаДвижения.Объект, ВидКлючевойДаты_ДатаПродажиИзделия, СтрокаДвижения.Период);
						
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	Scan_КлючевыеДатыПроцессовСрезПоследних.Период КАК Период,
			               |	Scan_КлючевыеДатыПроцессовСрезПоследних.Значение КАК Значение
			               |ИЗ
			               |	РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
			               |			&Период,
			               |			ОбъектКлючевойДаты = &ОбъектКлючевойДаты
			               |				И Объект = &ТекСсылка
			               |				И ВидКлючевойДаты = &ВидКлючевойДаты) КАК Scan_КлючевыеДатыПроцессовСрезПоследних";
			Запрос.УстановитьПараметр("Период", Период);
			Запрос.УстановитьПараметр("ТекСсылка", СтрокаДвижения.Объект);
			Запрос.УстановитьПараметр("ОбъектКлючевойДаты", Перечисления.Scan_КлючевыеДаты.ПолучитьОбъектКлючевойДатыПоПеречислению(СтрокаДвижения.ВидКлючевойДаты));
			Запрос.УстановитьПараметр("ВидКлючевойДаты",СтрокаДвижения.ВидКлючевойДаты);
			
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.Следующий() Тогда
				
				ПоследнееЗначениеДатыПродажиИзделия = Выборка.Значение;
				
				Если СтрокаДвижения.ВидКлючевойДаты = ВидКлючевойДаты_ДатаПродажиИзделия //при очистке даты продажи при наличии более поздней будет установлен статус SOLD
					И Выборка.Период > СтрокаДвижения.Период 
					И НЕ Выборка.Значение = Дата(1,1,1)
					И СтрокаДвижения.Значение = Дата(1,1,1) Тогда
				 	ЕстьДатаПродажиПозднее = Истина;
				КонецЕсли;
			Иначе
				ПоследнееЗначениеДатыПродажиИзделия = Дата(1,1,1);	
			КонецЕсли;	
			//rarus vikhle 19.07.2021 17950 ---
			
			УстановитьСтатусПродуктаNewSold(Продукт, СтрокаДвижения.Значение, ПоследнееЗначениеДатыПродажиИзделия, ЕстьДатаПродажиПозднее);//rarus vikhle 19.07.2021 17950 + ЕстьДатаПродажиПозднее
			
			Возврат;
		КонецЕсли;
		
		//Установка статуса для БУ изделия 
		Если СтрокаДвижения.ВидКлючевойДаты = ВидКлючевойДаты_ДатаПродажиБУИзделия
			ИЛИ СтрокаДвижения.ВидКлючевойДаты = ВидКлючевойДаты_ДатаПродажиБУКлиенту	Тогда //rarus vikhle 03.02.2021 mt 17173
			
			Продукт = СтрокаДвижения.Объект;
			Если НЕ Продукт.БУ Тогда
				Продолжить;
			КонецЕсли;
			
			ПоследнееЗначениеДатыПродажиБУИзделия = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(СтрокаДвижения.Объект, ВидКлючевойДаты_ДатаПродажиБУИзделия, СтрокаДвижения.Период);
			УстановитьСтатусПродуктаNewSold(Продукт, СтрокаДвижения.Значение, ПоследнееЗначениеДатыПродажиБУИзделия);
			
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьСтатусПродуктаNewSold(Продукт, НовоеЗначениеДатыПродажи, ПоследнееЗначениеДатыПродажи, ЕстьДатаПродажиПозднее = Ложь) //rarus BProg_Dekin 19.05.2020 mantis 0015999 +- //rarus vikhle 19.07.2021 mt 17950 + ЕстьДатаПродажиПозднее
	УстановитьСтатусSOLD 	= (ЗначениеЗаполнено(НовоеЗначениеДатыПродажи) И НЕ ЗначениеЗаполнено(ПоследнееЗначениеДатыПродажи)) ИЛИ ЕстьДатаПродажиПозднее;
	УстановитьСтатусNEW		= НЕ ЗначениеЗаполнено(НовоеЗначениеДатыПродажи) И ЗначениеЗаполнено(ПоследнееЗначениеДатыПродажи) И НЕ ЕстьДатаПродажиПозднее; //rarus vikhle 27.07.2021 mt 17950
	//rarus bonmak 17516 29.03.2021 ++
	//статус OPEN
	УстановитьСтатусOPEN = Ложь;
	Если НЕ Продукт.БУ Тогда
		Если НЕ ЗначениеЗаполнено(НовоеЗначениеДатыПродажи) 
			И ЗначениеЗаполнено(ПоследнееЗначениеДатыПродажи) 
			И ЗначениеЗаполнено(Продукт.СоглашениеОПоставке) 
			И НЕ ЕстьДатаПродажиПозднее Тогда //rarus vikhle 19.07.2021 17950
			Если Продукт.СоглашениеОПоставке.Статус <> Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Отменен
				И Продукт.СоглашениеОПоставке.Статус <> Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.СОП_Расторгнут Тогда
				УстановитьСтатусOPEN = ИСТИНА;				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	//rarus bonmak 17516 29.03.2021 --
	Если НЕ УстановитьСтатусNEW 
		И НЕ УстановитьСтатусSOLD 
		И НЕ УстановитьСтатусOPEN Тогда //rarus bonmak 17516 29.03.2021 добавил третье условие
		Возврат;
	КонецЕсли;
	
	ЛокальныйСтатусПродукта = Неопределено;
	Если УстановитьСтатусOPEN Тогда //rarus bonmak 17516 29.03.2021 ++
		ЛокальныйСтатусПродукта = Справочники.Scan_ЛокальныеСтатусыПродуктов.OPEN;
		//rarus bonmak 17516 29.03.2021 --
	ИначеЕсли УстановитьСтатусNEW Тогда
		ЛокальныйСтатусПродукта = Справочники.Scan_ЛокальныеСтатусыПродуктов.NEW;
	ИначеЕсли УстановитьСтатусSOLD Тогда
		ЛокальныйСтатусПродукта = Справочники.Scan_ЛокальныеСтатусыПродуктов.SOLD;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Продукт.ЛокальныйСтатусПродукта = ЛокальныйСтатусПродукта Тогда
		Возврат;
	КонецЕсли;
	
	ПродуктОбъект = Продукт.ПолучитьОбъект();
	ПродуктОбъект.ЛокальныйСтатусПродукта = ЛокальныйСтатусПродукта;
	ПродуктОбъект.ОбменДанными.Загрузка = Истина;
	ПродуктОбъект.Записать();
КонецПроцедуры


Процедура ПередЗаписью(Отказ, Замещение)
	УстановитьСтатусПродуктаДляДатыПродажи(); //rarus BProg_Dekin 19.05.2020 mantis 0015999 +-
КонецПроцедуры
