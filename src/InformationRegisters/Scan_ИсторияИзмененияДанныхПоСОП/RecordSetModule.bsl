//rarus vikhle 13.09.2021 АПК
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий	

Процедура ПриЗаписи(Отказ, Замещение)	// rarus tenkam 09.11.2020 mantis 16759 +++
	
	Если НЕ Scan_ПраваИНастройки.Scan_Право("ИспользоватьНовыйАлгоритмСозданияДоговоров") Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.Scan_ИсторияИзмененияДанныхПоСОП.ОбработатьДанныеДляOrderIntake(ЭтотОбъект.Выгрузить()); //rarus vikhle 05.09.2021 mt 18212
	
	//rarus vikhle 05.09.2021 mt 18212 +++ Закомментировал
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	МАКСИМУМ(КалендарныеГрафики.ДатаГрафика) КАК ДатаГрафика
	//	|ИЗ
	//	|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	//	|ГДЕ
	//	|	КалендарныеГрафики.ДатаГрафика <= &ТекущаяДата
	//	|	И КалендарныеГрафики.Год = &Год
	//	|	И КалендарныеГрафики.ДеньВключенВГрафик = ИСТИНА";
	//
	//Запрос.УстановитьПараметр("Год", Год(ТекущаяДатаСеанса()));
	//Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//РабочаяДата = ТекущаяДатаСеанса();
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	РабочаяДата = ВыборкаДетальныеЗаписи.ДатаГрафика;
	//КонецЦикла;
	//РабочаяДата = НачалоДня(РабочаяДата);
	//                   	
	//Запрос = Новый Запрос;
	////rarus vikhle 25.03.2021 mt 17526 +++
	////Запрос.Текст = 
	////	"ВЫБРАТЬ
	////	|	ТЗ.Период КАК Период,
	////	|	ТЗ.Договор КАК Договор,
	////	|	ТЗ.Значение КАК Значение
	////	|ПОМЕСТИТЬ ВТ_ТЗ_Типизация
	////	|ИЗ
	////	|	&ТаблицаЗаписей КАК ТЗ
	////	|ГДЕ
	////	|	ТЗ.Значение В(&МассивЗначений)
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|ВЫБРАТЬ
	////	|	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка.Договор КАК Договор,
	////	|	ВЫРАЗИТЬ(Scan_СоглашенияОПоставкеСписокПродуктов.Продукт КАК Справочник.Scan_Изделия) КАК Продукт
	////	|ПОМЕСТИТЬ ПродуктыСОП
	////	|ИЗ
	////	|	Справочник.Scan_СоглашенияОПоставке.СписокПродуктов КАК Scan_СоглашенияОПоставкеСписокПродуктов
	////	|ГДЕ
	////	|	Scan_СоглашенияОПоставкеСписокПродуктов.Ссылка.Договор В
	////	|			(ВЫБРАТЬ
	////	|				ВТ_ТЗ_Типизация.Договор КАК Договор
	////	|			ИЗ
	////	|				ВТ_ТЗ_Типизация КАК ВТ_ТЗ_Типизация)
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|ВЫБРАТЬ
	////	|	ВТ_ТЗ_Типизация.Период КАК Период,
	////	|	ВТ_ТЗ_Типизация.Договор КАК Договор,
	////	|	ВТ_ТЗ_Типизация.Значение КАК Значение,
	////	|	ЕСТЬNULL(ПродуктыСОП.Продукт, ЗНАЧЕНИЕ(Справочник.Scan_Изделия.ПустаяСсылка)) КАК Продукт
	////	|ПОМЕСТИТЬ ТЗ_Продукты
	////	|ИЗ
	////	|	ВТ_ТЗ_Типизация КАК ВТ_ТЗ_Типизация
	////	|		ЛЕВОЕ СОЕДИНЕНИЕ ПродуктыСОП КАК ПродуктыСОП
	////	|		ПО ВТ_ТЗ_Типизация.Договор = ПродуктыСОП.Договор
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|ВЫБРАТЬ
	////	|	ТЗ_Продукты.Период КАК Период,
	////	|	ТЗ_Продукты.Договор КАК Договор,
	////	|	ТЗ_Продукты.Значение КАК Значение,
	////	|	ТЗ_Продукты.Продукт.ЗаказНаЗавод КАК ПродуктЗаказНаЗавод
	////	|ПОМЕСТИТЬ ВТ_ТЗ
	////	|ИЗ
	////	|	ТЗ_Продукты КАК ТЗ_Продукты
	////	|ГДЕ
	////	|	ТЗ_Продукты.Продукт.БУ = ЛОЖЬ
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|ВЫБРАТЬ
	////	|	ВТ_ТЗ.Договор КАК Договор,
	////	|	ВТ_ТЗ.Период КАК ПериодБазовый,
	////	|	ВТ_ТЗ.Значение КАК ЗначениеБазовое,
	////	|	ВТ_ТЗ.ПродуктЗаказНаЗавод КАК ПродуктЗаказНаЗавод,
	////	|	Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод КАК ЗаказНаЗавод,
	////	|	Scan_OrderIntakeСрезПоследних.Период КАК ПериодВнесенияОплаты,
	////	|	Scan_OrderIntakeСрезПоследних1.ЗаказНаЗавод КАК ЗаказНаЗавод1,
	////	|	Scan_OrderIntakeСрезПоследних1.Период КАК ПериодПодтверждениеЗавода,
	////	|	Scan_OrderIntakeСрезПоследних2.ЗаказНаЗавод КАК ЗаказНаЗавод2,
	////	|	Scan_OrderIntakeСрезПоследних2.Период КАК ПериодДатыРасторжения
	////	|ИЗ
	////	|	ВТ_ТЗ КАК ВТ_ТЗ
	////	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты)) КАК Scan_OrderIntakeСрезПоследних
	////	|		ПО ВТ_ТЗ.ПродуктЗаказНаЗавод = Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод
	////	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ПодтверждениеЗавода)) КАК Scan_OrderIntakeСрезПоследних1
	////	|		ПО ВТ_ТЗ.ПродуктЗаказНаЗавод = Scan_OrderIntakeСрезПоследних1.ЗаказНаЗавод
	////	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ДатаРасторжения)) КАК Scan_OrderIntakeСрезПоследних2
	////	|		ПО ВТ_ТЗ.ПродуктЗаказНаЗавод = Scan_OrderIntakeСрезПоследних2.ЗаказНаЗавод";
	//	
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТЗ.Период КАК Период,
	//	|	ТЗ.Договор КАК Договор,
	//	|	ТЗ.Значение КАК Значение
	//	|ПОМЕСТИТЬ ВТ_ТЗ_Типизация
	//	|ИЗ
	//	|	&ТаблицаЗаписей КАК ТЗ
	//	|ГДЕ
	//	|	ТЗ.Значение В(&МассивЗначений)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор КАК Договор,
	//	|	ВЫРАЗИТЬ(Scan_СоставСоглашенийОПоставкеСрезПоследних.Изделие КАК Справочник.Scan_Изделия) КАК Продукт
	//	|ПОМЕСТИТЬ ПродуктыСОП
	//	|ИЗ
	//	|	РегистрСведений.Scan_СоставСоглашенийОПоставке.СрезПоследних КАК Scan_СоставСоглашенийОПоставкеСрезПоследних
	//	|ГДЕ
	//	|	Scan_СоставСоглашенийОПоставкеСрезПоследних.СоглашениеОПоставке.Договор В
	//	|			(ВЫБРАТЬ
	//	|				ВТ_ТЗ_Типизация.Договор КАК Договор
	//	|			ИЗ
	//	|				ВТ_ТЗ_Типизация КАК ВТ_ТЗ_Типизация)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_ТЗ_Типизация.Период КАК Период,
	//	|	ВТ_ТЗ_Типизация.Договор КАК Договор,
	//	|	ВТ_ТЗ_Типизация.Значение КАК Значение,
	//	|	ЕСТЬNULL(ПродуктыСОП.Продукт, ЗНАЧЕНИЕ(Справочник.Scan_Изделия.ПустаяСсылка)) КАК Продукт
	//	|ПОМЕСТИТЬ ТЗ_Продукты
	//	|ИЗ
	//	|	ВТ_ТЗ_Типизация КАК ВТ_ТЗ_Типизация
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ ПродуктыСОП КАК ПродуктыСОП
	//	|		ПО ВТ_ТЗ_Типизация.Договор = ПродуктыСОП.Договор
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ТЗ_Продукты.Период КАК Период,
	//	|	ТЗ_Продукты.Договор КАК Договор,
	//	|	ТЗ_Продукты.Значение КАК Значение,
	//	|	ТЗ_Продукты.Продукт.ЗаказНаЗавод КАК ПродуктЗаказНаЗавод,
	//	//rarus vikhle 03.09.2021 mt 18212 +++
	//	|	ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) КАК ТипЗаказа
	//	//rarus vikhle 03.09.2021 mt 18212 ---
	//	|ПОМЕСТИТЬ ВТ_ТЗ
	//	|ИЗ
	//	|	ТЗ_Продукты КАК ТЗ_Продукты
	//	//rarus vikhle 03.09.2021 mt 18212 +++
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|						(ВЫБРАТЬ
	//	|							ТЗ_Продукты.Продукт.ЗаказНаЗавод КАК ПродуктЗаказНаЗавод
	//	|						ИЗ
	//	|							ТЗ_Продукты КАК ТЗ_Продукты)
	//	|					И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
	//	|		ПО ТЗ_Продукты.Продукт.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
	//	//rarus vikhle 03.09.2021 mt 18212 ---
	//	|ГДЕ
	//	|	ТЗ_Продукты.Продукт.БУ = ЛОЖЬ
	//	//rarus vikhle 03.09.2021 mt 18212 +++
	//	|	И ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) В (&ТипыЗаказаFirm)
	//	//rarus vikhle 03.09.2021 mt 18212 ---
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_ТЗ.Договор КАК Договор,
	//	|	ВТ_ТЗ.Период КАК ПериодБазовый,
	//	|	ВТ_ТЗ.Значение КАК ЗначениеБазовое,
	//	|	ВТ_ТЗ.ПродуктЗаказНаЗавод КАК ПродуктЗаказНаЗавод,
	//	|	Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод КАК ЗаказНаЗавод,
	//	|	Scan_OrderIntakeСрезПоследних.Период КАК ПериодВнесенияОплаты,
	//	|	Scan_OrderIntakeСрезПоследних1.ЗаказНаЗавод КАК ЗаказНаЗавод1,
	//	|	Scan_OrderIntakeСрезПоследних1.Период КАК ПериодПодтверждениеЗавода,
	//	|	Scan_OrderIntakeСрезПоследних2.ЗаказНаЗавод КАК ЗаказНаЗавод2,
	//	|	Scan_OrderIntakeСрезПоследних2.Период КАК ПериодДатыРасторжения
	//	|ИЗ
	//	|	ВТ_ТЗ КАК ВТ_ТЗ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты)) КАК Scan_OrderIntakeСрезПоследних
	//	|		ПО ВТ_ТЗ.ПродуктЗаказНаЗавод = Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ПодтверждениеЗавода)) КАК Scan_OrderIntakeСрезПоследних1
	//	|		ПО ВТ_ТЗ.ПродуктЗаказНаЗавод = Scan_OrderIntakeСрезПоследних1.ЗаказНаЗавод
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ДатаРасторжения)) КАК Scan_OrderIntakeСрезПоследних2
	//	|		ПО ВТ_ТЗ.ПродуктЗаказНаЗавод = Scan_OrderIntakeСрезПоследних2.ЗаказНаЗавод";
	////rarus vikhle 25.03.2021 mt 17526 ---
	//
	//Запрос.УстановитьПараметр("ТаблицаЗаписей",ЭтотОбъект.Выгрузить());
	//МассивЗначений = Новый Массив;
	//МассивЗначений.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.Оплачено);
	//МассивЗначений.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ОплаченоЧастично);	
	//МассивЗначений.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаНесоответствуетГрафику);	
	//МассивЗначений.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаПолученаСоответствуетГрафику);
	//МассивЗначений.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ПредоплатаВнесенаПолностью);
	//МассивЗначений.Добавить(Перечисления.Scan_СтатусыОплатПоСОП.ОплаченоПолностью);	  	
	//
	//Запрос.УстановитьПараметр("МассивЗначений", МассивЗначений);
	////rarus vikhle 03.09.2021 mt 18212 +++
	//ТипыЗаказаFirm = Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm();
	//Запрос.УстановитьПараметр("ТипыЗаказаFirm", ТипыЗаказаFirm);
	////rarus vikhle 03.09.2021 mt 18212 ---
	//
	// // rarus agar 20.04.2021 OI ++
	//АльтернативныйРасчет = Scan_ПраваИНастройки.Scan_Право("ИспользоватьАльтернативныйРасчетДатOrderIntake");
	//// rarus agar 20.04.2021 OI --
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	Если не значениеЗаполнено(Выборка.ЗаказНаЗавод) Тогда // нет состояния "внесение оплаты", надо добавить
	//		// rarus agar 20.04.2021 OI ++
	//		Если Не АльтернативныйРасчет Тогда
	//		// rarus agar 20.04.2021 OI --
	//			НоваяЗапись = РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи();  
	//			НоваяЗапись.Период = РабочаяДата;
	//			НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты;
	//			НоваяЗапись.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//			НоваяЗапись.Прочитать();
	//			Если не НоваяЗапись.Выбран() Тогда
	//				НоваяЗапись.Период = РабочаяДата;
	//				НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты;
	//				НоваяЗапись.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//				НоваяЗапись.ИспользоватьВОтчетах = Истина; //rarus vikhle 21.03.2021 mt 17479
	//				НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
	//				НоваяЗапись.Записать();
	//			КонецЕсли;
	//			
	//			Если значениеЗаполнено(Выборка.ЗаказНаЗавод1) Тогда // не было состояния "внесение оплаты", но было подтверждение завода, надо добавить статус Order Intake
	//				НоваяЗапись = РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи();  
	//				НоваяЗапись.Период = ?(РабочаяДата > Выборка.ПериодПодтверждениеЗавода,РабочаяДата, Выборка.ПериодПодтверждениеЗавода);
	//				НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake;
	//				НоваяЗапись.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//				НоваяЗапись.Прочитать();
	//				Если не НоваяЗапись.Выбран() Тогда
	//					НоваяЗапись.Период = ?(РабочаяДата > Выборка.ПериодПодтверждениеЗавода,РабочаяДата, Выборка.ПериодПодтверждениеЗавода);
	//					НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake;
	//					НоваяЗапись.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//					НоваяЗапись.ИспользоватьВОтчетах = Истина; //rarus vikhle 21.03.2021 mt 17479
	//					НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
	//					НоваяЗапись.Записать();
	//				КонецЕсли;
	//			КонецЕсли; 	
	//		// rarus agar 20.04.2021 OI ++
	//		Иначе
	//			МенеджерЗаписи = РегистрыСведений.Scan_РасчетOrderIntake.СоздатьМенеджерЗаписи();
	//			МенеджерЗаписи.Период       = ТекущаяДатаСеанса();
	//			МенеджерЗаписи.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//			МенеджерЗаписи.Событие      = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты;
	//			МенеджерЗаписи.ДатаСобытия  = РабочаяДата;
	//			МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	//			УстановитьПривилегированныйРежим(Истина);
	//			МенеджерЗаписи.Записать();
	//			УстановитьПривилегированныйРежим(Ложь);
	//		КонецЕсли;
	//		// rarus agar 20.04.2021 OI --
	//	Иначе	// было состояние "внесение оплаты"
	//		// проверим было ли расторжение этого состояния, если да, то зафиксируем новое "внесение оплаты"
	//		Если значениеЗаполнено(Выборка.ЗаказНаЗавод2) Тогда
	//			// rarus agar 20.04.2021 OI ++
	//			Если Не АльтернативныйРасчет Тогда
	//			// rarus agar 20.04.2021 OI --
	//				Если Выборка.ПериодДатыРасторжения >= Выборка.ПериодВнесенияОплаты И 
	//					Выборка.ПериодДатыРасторжения <= РабочаяДата Тогда
	//					
	//					НоваяЗапись = РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи();  
	//					НоваяЗапись.Период = РабочаяДата;
	//					НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты;
	//					НоваяЗапись.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//					НоваяЗапись.Прочитать();
	//					Если не НоваяЗапись.Выбран() Тогда
	//						НоваяЗапись.Период = РабочаяДата;
	//						НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты;
	//						НоваяЗапись.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//						НоваяЗапись.ИспользоватьВОтчетах = Истина; //rarus vikhle 21.03.2021 mt 17479
	//						НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
	//						НоваяЗапись.Записать();
	//					КонецЕсли;
	//					
	//					Если значениеЗаполнено(Выборка.ЗаказНаЗавод1) Тогда // зафиксировано "внесение оплаты", но ранее было подтверждение завода, надо добавить статус Order Intake
	//						НоваяЗапись = РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи(); 
	//						НоваяЗапись.Период = ?(РабочаяДата > Выборка.ПериодПодтверждениеЗавода,РабочаяДата, Выборка.ПериодПодтверждениеЗавода);
	//						НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake;
	//						НоваяЗапись.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//						НоваяЗапись.Прочитать();
	//						Если не НоваяЗапись.Выбран() Тогда
	//							НоваяЗапись.Период = ?(РабочаяДата > Выборка.ПериодПодтверждениеЗавода,РабочаяДата, Выборка.ПериодПодтверждениеЗавода);
	//							НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake;
	//							НоваяЗапись.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//							НоваяЗапись.ИспользоватьВОтчетах = Истина; //rarus vikhle 21.03.2021 mt 17479
	//							НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
	//							НоваяЗапись.Записать();
	//						КонецЕсли;
	//					КонецЕсли;
	//				КонецЕсли;
	//			// rarus agar 20.04.2021 OI ++
	//			Иначе
	//				МенеджерЗаписи = РегистрыСведений.Scan_РасчетOrderIntake.СоздатьМенеджерЗаписи();
	//				МенеджерЗаписи.Период       = ТекущаяДатаСеанса();
	//				МенеджерЗаписи.ЗаказНаЗавод = Выборка.ПродуктЗаказНаЗавод;
	//				МенеджерЗаписи.Событие      = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты;
	//				МенеджерЗаписи.ДатаСобытия  = РабочаяДата;
	//				МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	//				УстановитьПривилегированныйРежим(Истина);
	//				МенеджерЗаписи.Записать();
	//				УстановитьПривилегированныйРежим(Ложь);
	//			КонецЕсли;
	//			// rarus agar 20.04.2021 OI --
	//		КонецЕсли;
	//	КонецЕсли; 
	//КонецЦикла;
	//rarus vikhle 05.09.2021 mt 18212 ---
	
КонецПроцедуры	// rarus tenkam 09.11.2020 mantis 16759 ---

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
