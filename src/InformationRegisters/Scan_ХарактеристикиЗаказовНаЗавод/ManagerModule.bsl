//rarus vikhle 27.09.2021 АПК +- + инструкции и область
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ПрограммныйИнтерфейс
	
	// Определяет, является ли заказ FIRM
	//
	// Параметры:
	//  ЗаказНаЗавод - СправоникСсылка.Scan_ЗаказыНаЗавод	 - ссылка на заказ
	// 
	// Возвращаемое значение:
	//  Булево - Истина, если тип заказа FIRM, иначе Ложь
	//
	Функция ЭтоЗаказFirm(ЗаказНаЗавод) Экспорт //rarus vikhle 03.09.2021 mt 18212 +++
		
		ТипЗаказаНаЗавод = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод);
		ТипыЗаказаFirm = Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm();
		
		Возврат НЕ ТипыЗаказаFirm.Найти(ТипЗаказаНаЗавод) = Неопределено;
		
	КонецФункции //rarus vikhle 03.09.2021 mt 18212 ---	
	
	// Процедура - Обработать данные для order intake
	//
	// Параметры:
	//  ТаблицаЗаписей	 - ТаблицаЗначений	 - 
	//  Период			 - Дата	 - 
	//  ВосстановлениеЗаписей - Булево - Признак восстановления записей по стандартному OI
	//
	//Процедура ОбработатьДанныеДляOrderIntake(ТаблицаЗаписей, Период = Неопределено) Экспорт //rarus vikhle 05.09.2021 mt 18212
	Процедура ОбработатьДанныеДляOrderIntake(ТаблицаЗаписей, Период = Неопределено, ВосстановлениеЗаписей = Ложь) Экспорт // rarus agar 11.02.2022 17739
		
		Если Период = Неопределено Тогда
			Период = ТекущаяДатаСеанса();
		КонецЕсли;	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		//rarus bonmak 04.01.2021 17062 ++
		//|	МАКСИМУМ(КалендарныеГрафики.ДатаГрафика) КАК ДатаГрафика
		|ЕСТЬNULL(МАКСИМУМ(КалендарныеГрафики.ДатаГрафика), &ТекущаяДата) КАК ДатаГрафика
		//rarus bonmak 04.01.2021 17062 --
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|ГДЕ
		|	КалендарныеГрафики.ДатаГрафика <= &ТекущаяДата
		|	И КалендарныеГрафики.Год = &Год
		|	И КалендарныеГрафики.ДеньВключенВГрафик = ИСТИНА";
		
		Запрос.УстановитьПараметр("Год", 			Год(Период));
		Запрос.УстановитьПараметр("ТекущаяДата",	Период);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		РабочаяДата = ТекущаяДатаСеанса();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			РабочаяДата = ВыборкаДетальныеЗаписи.ДатаГрафика;
		КонецЦикла;
		РабочаяДата = НачалоДня(РабочаяДата);
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Период КАК Период,
		|	ВЫРАЗИТЬ(ТЗ.Значение КАК Справочник.Scan_ЗаводскиеСтатусыЗаказаНаЗавод) КАК Значение,
		|	ТЗ.Заказ КАК ЗаказНаЗавод
		|ПОМЕСТИТЬ ВТ_ТЗ_Типизация
		|ИЗ
		|	&ТаблицаЗаписей КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЗ.Период КАК Период,
		|	ВТ_ТЗ.Значение КАК Значение,
		|	ВТ_ТЗ.ЗаказНаЗавод КАК ЗаказНаЗавод,
		//rarus vikhle 03.09.2021 mt 18212 +++
		|	ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) КАК ТипЗаказаНаЗавод
		//rarus vikhle 03.09.2021 mt 18212 ---
		|ПОМЕСТИТЬ ВТ_ТЗ
		|ИЗ
		|	ВТ_ТЗ_Типизация КАК ВТ_ТЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_Изделия КАК Scan_Изделия
		|		ПО ВТ_ТЗ.ЗаказНаЗавод = Scan_Изделия.ЗаказНаЗавод
		//rarus vikhle 03.09.2021 mt 18212 +++
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
		|				,
		|				Заказ В
		|						(ВЫБРАТЬ
		|							ВТ_ТЗ_Типизация.ЗаказНаЗавод КАК ЗаказНаЗавод
		|						ИЗ
		|							ВТ_ТЗ_Типизация КАК ВТ_ТЗ_Типизация)
		|					И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
		|		ПО ВТ_ТЗ.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
		//rarus vikhle 03.09.2021 mt 18212 ---
		|ГДЕ
		|	ВТ_ТЗ.Значение.СтатусCOW >= 30
		|	И (Scan_Изделия.Ссылка ЕСТЬ NULL
		|			ИЛИ Scan_Изделия.БУ = ЛОЖЬ)
		//rarus vikhle 03.09.2021 mt 18212 +++
		|	И ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) В (&ТипыЗаказаFirm)
		//rarus vikhle 03.09.2021 mt 18212 ---
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЗ.Период КАК ПериодБазовый,
		|	ВТ_ТЗ.Значение КАК ЗначениеБазовое,
		|	ВТ_ТЗ.ЗаказНаЗавод КАК ЗаказНаЗавод,
		|	Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод КАК ЗаказНаЗаводПодтверждениеЗавода,
		|	Scan_OrderIntakeСрезПоследних1.ЗаказНаЗавод КАК ЗаказНаЗавод1,
		|	Scan_OrderIntakeСрезПоследних1.Период КАК ПериодВнесениеОплаты
		|ИЗ
		|	ВТ_ТЗ КАК ВТ_ТЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ПодтверждениеЗавода)) КАК Scan_OrderIntakeСрезПоследних
		|		ПО ВТ_ТЗ.ЗаказНаЗавод = Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_OrderIntake.СрезПоследних(, ВидДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ДатыДляФормированияОтчетаOI.ВнесениеОплаты)) КАК Scan_OrderIntakeСрезПоследних1
		|		ПО ВТ_ТЗ.ЗаказНаЗавод = Scan_OrderIntakeСрезПоследних1.ЗаказНаЗавод
		|ГДЕ
		|	Scan_OrderIntakeСрезПоследних.ЗаказНаЗавод ЕСТЬ NULL";
		
		
		Запрос.УстановитьПараметр("ТаблицаЗаписей", ТаблицаЗаписей);	
		//rarus vikhle 03.09.2021 mt 18212 +++
		ТипыЗаказаFirm = Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm();
		Запрос.УстановитьПараметр("ТипыЗаказаFirm", ТипыЗаказаFirm);
		//rarus vikhle 03.09.2021 mt 18212 ---
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		// rarus agar 10.01.2022 17739 ++
		// rarus agar 15.09.2021 17739 ++
		//АльтернативныйРасчет = Scan_ПраваИНастройки.Scan_Право("ИспользоватьАльтернативныйРасчетДатOrderIntake");
		// rarus agar 15.09.2021 17739 --
		// rarus agar 10.01.2022 17739 --
		
		//rarus ozhnik 14927 14.04.2020 + 
		//НаборЗаписейOrderIntake =  РегистрыСведений.Scan_OrderIntake.СоздатьНаборЗаписей();
		//НаборЗаписейOrderIntake.Отбор.Период.Установить(РабочаяДата);
		//НаборЗаписейOrderIntake.Прочитать();
		//rarus ozhnik 14927 14.04.2020 + 
		
		Пока Выборка.Следующий() Цикл
			// rarus agar 10.01.2022 17739 ++
			////rarus vikhle 27.09.2021 m 17739 +++
			//// Подтверждение завода всегда фиксируем в регистре РасчетOrderIntake
			//Если АльтернативныйРасчет Тогда
			//	МенеджерЗаписи = РегистрыСведений.Scan_РасчетOrderIntake.СоздатьМенеджерЗаписи();
			//	МенеджерЗаписи.Период       = Период;
			//	МенеджерЗаписи.ЗаказНаЗавод = Выборка.ЗаказНаЗавод;
			//	МенеджерЗаписи.Событие      = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ПодтверждениеЗавода;
			//	МенеджерЗаписи.ДатаСобытия  = РабочаяДата;
			//	МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			//	УстановитьПривилегированныйРежим(Истина);
			//	МенеджерЗаписи.Записать();
			//	УстановитьПривилегированныйРежим(Ложь);
			//КонецЕсли;
			////rarus vikhle 27.09.2021 m 17739 ---
			// rarus agar 10.01.2022 17739 --
			
			Если не значениеЗаполнено(Выборка.ЗаказНаЗаводПодтверждениеЗавода) Тогда // нет состояния "подтверждение завода", надо добавить
				НоваяЗапись = РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи(); //rarus ozhnik 14927 14.04.2020 + 
				НоваяЗапись.Период = РабочаяДата;
				НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ПодтверждениеЗавода;
				НоваяЗапись.ЗаказНаЗавод = Выборка.ЗаказНаЗавод;  			
				НоваяЗапись.Прочитать();
				
				Если Не НоваяЗапись.Выбран() Тогда
					НоваяЗапись.Период = РабочаяДата;
					НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ПодтверждениеЗавода;
					НоваяЗапись.ЗаказНаЗавод = Выборка.ЗаказНаЗавод;
					НоваяЗапись.ИспользоватьВОтчетах = Истина; //rarus vikhle 21.03.2021 mt 17479
					НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;	   
					НоваяЗапись.Записать();
				КонецЕсли;
				
				//rarus vikhle 27.09.2021 m 17739 +++
				// rarus agar 15.09.2021 17739 ++
				//Если АльтернативныйРасчет Тогда
				//	МенеджерЗаписи = РегистрыСведений.Scan_РасчетOrderIntake.СоздатьМенеджерЗаписи();
				//	//МенеджерЗаписи.Период       = ТекущаяДатаСеанса();
				//	МенеджерЗаписи.Период       = Период; //rarus vikhle 07.09.2021 mt 18212
				//	МенеджерЗаписи.ЗаказНаЗавод = Выборка.ЗаказНаЗавод;
				//	МенеджерЗаписи.Событие      = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ПодтверждениеЗавода;
				//	МенеджерЗаписи.ДатаСобытия  = РабочаяДата;
				//	МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
				//	УстановитьПривилегированныйРежим(Истина);
				//	МенеджерЗаписи.Записать();
				//	УстановитьПривилегированныйРежим(Ложь);
				//КонецЕсли;
				// rarus agar 15.09.2021 17739 --
				//rarus vikhle 27.09.2021 m 17739 ---
			КонецЕсли; 	
			Если не значениеЗаполнено(Выборка.ЗаказНаЗаводПодтверждениеЗавода) и значениеЗаполнено(Выборка.ЗаказНаЗавод1) Тогда // не было состояния "внесение оплаты", но было подтверждение завода, надо добавить статус Order Intake
				НоваяЗапись = РегистрыСведений.Scan_OrderIntake.СоздатьМенеджерЗаписи(); //rarus ozhnik 14927 14.04.2020 + 
				НоваяЗапись.Период = ?(РабочаяДата > Выборка.ПериодВнесениеОплаты,РабочаяДата, Выборка.ПериодВнесениеОплаты);
				НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake;
				НоваяЗапись.ЗаказНаЗавод = Выборка.ЗаказНаЗавод;
				НоваяЗапись.Прочитать();
				Если Не НоваяЗапись.Выбран() Тогда
					НоваяЗапись.Период = ?(РабочаяДата > Выборка.ПериодВнесениеОплаты,РабочаяДата, Выборка.ПериодВнесениеОплаты);
					НоваяЗапись.ВидДаты = Перечисления.Scan_ДатыДляФормированияОтчетаOI.ДатаOrderIntake;
					НоваяЗапись.ЗаказНаЗавод = Выборка.ЗаказНаЗавод;
					НоваяЗапись.ИспользоватьВОтчетах = Истина; //rarus vikhle 21.03.2021 mt 17479
					НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;	   
					НоваяЗапись.Записать();
				КонецЕсли;     
			КонецЕсли;
		КонецЦикла; 
		
		// rarus agar 20.09.2021 17739 ++
		//Если АльтернативныйРасчет Тогда
		//	Запрос = Новый Запрос;
		//	Запрос.УстановитьПараметр("ТаблицаЗаписей", ТаблицаЗаписей);
		//	Запрос.УстановитьПараметр("ТипыЗаказаFirm", ТипыЗаказаFirm);
		//	Запрос.Текст = "ВЫБРАТЬ
		//	|	ТЗ.Период КАК Период,
		//	|	ВЫРАЗИТЬ(ТЗ.Значение КАК Справочник.Scan_ЗаводскиеСтатусыЗаказаНаЗавод) КАК Значение,
		//	|	ТЗ.Заказ КАК ЗаказНаЗавод
		//	|ПОМЕСТИТЬ ВТ_ТЗ_Типизация
		//	|ИЗ
		//	|	&ТаблицаЗаписей КАК ТЗ
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ВТ_ТЗ.Период КАК Период,
		//	|	ВТ_ТЗ.Значение КАК Значение,
		//	|	ВТ_ТЗ.ЗаказНаЗавод КАК ЗаказНаЗавод,
		//	|	ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) КАК ТипЗаказаНаЗавод
		//	|ИЗ
		//	|	ВТ_ТЗ_Типизация КАК ВТ_ТЗ
		//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_Изделия КАК Scan_Изделия
		//	|		ПО ВТ_ТЗ.ЗаказНаЗавод = Scan_Изделия.ЗаказНаЗавод
		//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
		//	|				,
		//	|				Заказ В
		//	|						(ВЫБРАТЬ
		//	|							ВТ_ТЗ_Типизация.ЗаказНаЗавод КАК ЗаказНаЗавод
		//	|						ИЗ
		//	|							ВТ_ТЗ_Типизация КАК ВТ_ТЗ_Типизация)
		//	|					И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
		//	|		ПО ВТ_ТЗ.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
		//	|ГДЕ
		//	|	ВТ_ТЗ.Значение.СтатусCOW < 30
		//	|	И НЕ Scan_Изделия.БУ
		//	|	И ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) В (&ТипыЗаказаFirm)";
		//	РезультатЗапроса = Запрос.Выполнить();
		//	
		//	Выборка = РезультатЗапроса.Выбрать();
		//	Пока Выборка.Следующий() Цикл
		//		РегистрыСведений.Scan_РасчетOrderIntake.ЗаписатьОтменуПодтвержденияЗавода(Выборка.Период, Выборка.ЗаказНаЗавод);
		//	КонецЦикла;
		//КонецЕсли;
		// rarus agar 20.09.2021 17739 --
		
		// rarus agar 10.01.2022 17739 ++
		АльтернативныйРасчет = Scan_ПраваИНастройки.Scan_Право("ИспользоватьАльтернативныйРасчетДатOrderIntake");
		Если АльтернативныйРасчет И Не ВосстановлениеЗаписей Тогда // rarus agar 11.02.2022 17739
			ТипыЗаказаFirm = Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm();
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("П1", ТаблицаЗаписей);
			Запрос.УстановитьПараметр("П2", ТипыЗаказаFirm);
			Запрос.Текст = "ВЫБРАТЬ
			|	ТаблицаНабораЗаписей.Период КАК Период,
			|	ВЫРАЗИТЬ(ТаблицаНабораЗаписей.Значение КАК Справочник.Scan_ЗаводскиеСтатусыЗаказаНаЗавод) КАК СтатусЗаказа,
			|	ТаблицаНабораЗаписей.Заказ КАК ЗаказНаЗавод
			|ПОМЕСТИТЬ ВТ_СтатусЗаказа
			|ИЗ
			|	&П1 КАК ТаблицаНабораЗаписей
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_СтатусЗаказа.Период КАК Период,
			|	ВТ_СтатусЗаказа.ЗаказНаЗавод КАК ЗаказНаЗавод,
			|	ВЫРАЗИТЬ(Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Значение КАК Перечисление.Scan_ТипыЗаказовНаЗавод) КАК ТипЗаказа
			|ПОМЕСТИТЬ ВТ_ТипЗаказа
			|ИЗ
			|	ВТ_СтатусЗаказа КАК ВТ_СтатусЗаказа
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ХарактеристикиЗаказовНаЗавод.СрезПоследних(
			|				,
			|				Заказ В
			|						(ВЫБРАТЬ
			|							ВТ_СтатусЗаказа.ЗаказНаЗавод КАК ЗаказНаЗавод
			|						ИЗ
			|							ВТ_СтатусЗаказа КАК ВТ_СтатусЗаказа)
			|					И Реквизит = ЗНАЧЕНИЕ(Перечисление.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод)) КАК Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних
			|		ПО ВТ_СтатусЗаказа.ЗаказНаЗавод = Scan_ХарактеристикиЗаказовНаЗаводСрезПоследних.Заказ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_СтатусЗаказа.Период КАК Период,
			|	ВТ_СтатусЗаказа.СтатусЗаказа КАК СтатусЗаказа,
			|	ВТ_СтатусЗаказа.ЗаказНаЗавод КАК ЗаказНаЗавод
			|ИЗ
			|	ВТ_СтатусЗаказа КАК ВТ_СтатусЗаказа
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_Изделия КАК Scan_Изделия
			|		ПО ВТ_СтатусЗаказа.ЗаказНаЗавод = Scan_Изделия.ЗаказНаЗавод
			|ГДЕ
			|	ВТ_СтатусЗаказа.СтатусЗаказа.СтатусCOW >= 30
			|	И (Scan_Изделия.Ссылка ЕСТЬ NULL
			|			ИЛИ Scan_Изделия.БУ = ЛОЖЬ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ТипЗаказа.Период КАК Период,
			|	ВТ_ТипЗаказа.ТипЗаказа КАК ТипЗаказа,
			|	ВТ_ТипЗаказа.ЗаказНаЗавод КАК ЗаказНаЗавод
			|ИЗ
			|	ВТ_ТипЗаказа КАК ВТ_ТипЗаказа
			|ГДЕ
			|	ВТ_ТипЗаказа.ТипЗаказа В(&П2)";
			РезультатыЗапросов = Запрос.ВыполнитьПакет();
			
			ВыборкаСтатусЗаказа = РезультатыЗапросов[2].Выбрать();
			Если ВыборкаСтатусЗаказа.Следующий() Тогда
				Scan_OrderIntake.ЗарегистрироватьПодтверждениеЗавода(ВыборкаСтатусЗаказа.Период, ВыборкаСтатусЗаказа.ЗаказНаЗавод);
			КонецЕсли;
			
			ВыборкаТипЗаказа = РезультатыЗапросов[3].Выбрать();
			Если ВыборкаТипЗаказа.Следующий() Тогда
				Scan_OrderIntake.ЗарегистрироватьТипЗаказаНеOpen(ВыборкаТипЗаказа.Период, ВыборкаТипЗаказа.ЗаказНаЗавод);
			КонецЕсли;
		КонецЕсли;
		// rarus agar 10.01.2022 17739 --
		
	КонецПроцедуры	//rarus vikhle 05.09.2021 mt 18212 ---
	
	#КонецОбласти
	
#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли