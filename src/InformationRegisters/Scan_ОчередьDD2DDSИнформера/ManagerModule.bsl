//rarus vikhle 02.08.2021 +++ АПК
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
//rarus vikhle 02.08.2021 ---	
	
#Область ПрограммныйИнтерфейс

// Удаляет запись в регистре по переданному заказу на завод
//
// Параметры:
//  ЗаказНаЗавод - СправочникСсылка.Scan_ЗаказыНаЗавод	 - 
//
Процедура УдалитьЗаписьПоЗаказу(ЗаказНаЗавод) Экспорт //rarus vikhle 19.07.2021 m 17933 +++
	
	Если НЕ ЗначениеЗаполнено(ЗаказНаЗавод) Тогда
		Возврат;
	КонецЕсли;	
	
	НаборЗаписей = РегистрыСведений.Scan_ОчередьDD2DDSИнформера.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаказНаЗавод.Установить(ЗаказНаЗавод);
	//rarus vikhle 09.09.2021 mt 17933 +++ 
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Выбран() Тогда
		НаборЗаписей.Очистить();
		//rarus vikhle 09.09.2021 mt 17933 ---
		НаборЗаписей.Записать();
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 19.07.2021 m 17933 ---	

// Добавляет запись в регистр по переданному заказу на завод 
//
// Параметры:
//  ЗаказНаЗавод - СправочникСсылка.Scan_ЗаказыНаЗавод	 - 
//
Процедура ДобавитьЗаписьПоЗаказу(ЗаказНаЗавод) Экспорт //rarus vikhle 19.07.2021 m 17933 +++
	
	Если ЗаказУдовлетворяетУсловиям(ЗаказНаЗавод) Тогда
		МенеджерЗаписи = РегистрыСведений.Scan_ОчередьDD2DDSИнформера.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ЗаказНаЗавод = ЗаказНаЗавод;
		МенеджерЗаписи.Пользователь = Пользователи.ТекущийПользователь();
		МенеджерЗаписи.Записать();
	КонецЕсли;	
	
КонецПроцедуры //rarus vikhle 19.07.2021 m 17933 ---	

// Возвращает признак необходимости добавления записи по заказу в регистр 
// 
// Параметры:
//  ЗаказНаЗавод - СправочникСсылка.Scan_ЗаказыНаЗавод	- 
// 
// Возвращаемое значение:
//  Булево - 
//
Функция НужноДобавитьЗапись(ЗаказНаЗавод) Экспорт //rarus vikhle 19.07.2021 m 17933
	
	НужноДобавитьЗапись = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Scan_ЗаказыНаЗавод.Ссылка КАК Ссылка,
	               |	Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие КАК Продукт
	               |ПОМЕСТИТЬ ЗаказНаЗавод
	               |ИЗ
	               |	Справочник.Scan_ЗаказыНаЗавод КАК Scan_ЗаказыНаЗавод
				   //rarus vikhle 10.09.2021 mt 17933 +++
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних
	               |		ПО Scan_ЗаказыНаЗавод.Ссылка = Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.ЗаказНаЗавод
				   //rarus vikhle 10.09.2021 mt 17933 ---
	               |ГДЕ
	               |	Scan_ЗаказыНаЗавод.Ссылка = &ЗаказНаЗавод
	               |
				   //rarus vikhle 10.09.2021 mt 17933 +++
				   //|ИНДЕКСИРОВАТЬ ПО
				   //|	Ссылка
				   //rarus vikhle 10.09.2021 mt 17933 ---
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказНаЗавод.Ссылка КАК Ссылка,
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	               |	ЗаказНаЗавод.Продукт КАК Продукт //rarus vikhle 10.09.2021 mt 17933 +++
	               |ПОМЕСТИТЬ ДатаПоследнейОчисткиDD
	               |ИЗ
	               |	ЗаказНаЗавод КАК ЗаказНаЗавод
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
	               |				,
	               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.DD)
	               |					И Объект = &ЗаказНаЗавод
	               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)
	               |					И Значение = ДАТАВРЕМЯ(1, 1, 1)) КАК Scan_КлючевыеДатыПроцессовСрезПоследних
	               |		ПО ЗаказНаЗавод.Ссылка = Scan_КлючевыеДатыПроцессовСрезПоследних.Объект
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ДатаПоследнейОчисткиDD.Ссылка КАК Ссылка,
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовDD.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУстановкиDD,
	               |	ДатаПоследнейОчисткиDD.Продукт КАК Продукт //rarus vikhle 10.09.2021 mt 17933 +++
	               |ПОМЕСТИТЬ ДатыУстановкиDD
	               |ИЗ
	               |	ДатаПоследнейОчисткиDD КАК ДатаПоследнейОчисткиDD
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов КАК Scan_КлючевыеДатыПроцессовDD
	               |		ПО ДатаПоследнейОчисткиDD.Ссылка = Scan_КлючевыеДатыПроцессовDD.Объект
	               |			И (Scan_КлючевыеДатыПроцессовDD.ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод))
	               |			И (Scan_КлючевыеДатыПроцессовDD.ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.DD))
	               |			И (НЕ Scan_КлючевыеДатыПроцессовDD.Значение = ДАТАВРЕМЯ(1, 1, 1))
	               |			И ДатаПоследнейОчисткиDD.Период < Scan_КлючевыеДатыПроцессовDD.Период
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаУстановкиDD
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДатыУстановкиDD.Ссылка КАК ЗаказНаЗавод,
	               |	ДатыУстановкиDD.ДатаУстановкиDD КАК ДатаУстановкиDD,
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследнихDDS.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУстановкиDDS,
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихDDS.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК DDS,
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихБронь.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК БроньДилера,
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследнихDD2.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУстановкиDD2,
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихDD2.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК DD2,
	               |	ЕСТЬNULL(КОЛИЧЕСТВО(Scan_ЗаказыНаЗаводЗаказыНаЗакупку.ЗаказНаЗакупку), 0) КАК КоличествоЗаказовНаЗакупку,
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУстановкиPDD,
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК PDD,
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУстановкиRDB,
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК RDB,
	               |	ДатыУстановкиDD.Ссылка.DDPriority КАК DDPriority
	               |ИЗ
	               |	ДатыУстановкиDD КАК ДатыУстановкиDD
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
	               |				,
	               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.DDS)
	               |					И Объект = &ЗаказНаЗавод
	               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихDDS
	               |		ПО ДатыУстановкиDD.Ссылка = Scan_КлючевыеДатыПроцессовСрезПоследнихDDS.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
	               |				,
	               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.PDD)
	               |					И Объект = &ЗаказНаЗавод
	               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихPDD
	               |		ПО ДатыУстановкиDD.Ссылка = Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
	               |				,
	               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.RDB)
	               |					И Объект = &ЗаказНаЗавод
	               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихRDB
	               |		ПО ДатыУстановкиDD.Ссылка = Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Scan_ЗаказыНаЗавод.ЗаказыНаЗакупку КАК Scan_ЗаказыНаЗаводЗаказыНаЗакупку
	               |		ПО ДатыУстановкиDD.Ссылка = Scan_ЗаказыНаЗаводЗаказыНаЗакупку.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
	               |				,
	               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.DD2)
	               |					И Объект = &ЗаказНаЗавод
	               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.ЗаказНаЗавод)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихDD2
	               |		ПО ДатыУстановкиDD.Ссылка = Scan_КлючевыеДатыПроцессовСрезПоследнихDD2.Объект
				   //rarus vikhle 10.09.2021 mt 17933 +++ заменил сводную инфу-ию на ключевые даты
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_КлючевыеДатыПроцессов.СрезПоследних(
	               |				,
	               |				ВидКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_КлючевыеДаты.БроньДилера)
	               |					И Объект В
	               |						(ВЫБРАТЬ ПЕРВЫЕ 1
	               |							Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.Изделие КАК Изделие
	               |						ИЗ
	               |							РегистрСведений.Scan_ВзаимосвязьИзделийИЗаказов.СрезПоследних КАК Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних
	               |						ГДЕ
	               |							Scan_ВзаимосвязьИзделийИЗаказовСрезПоследних.ЗаказНаЗавод = &ЗаказНаЗавод)
	               |					И ОбъектКлючевойДаты = ЗНАЧЕНИЕ(Перечисление.Scan_ОбъектыКлючевыхДат.Изделие)) КАК Scan_КлючевыеДатыПроцессовСрезПоследнихБронь
	               |		ПО ДатыУстановкиDD.Продукт = Scan_КлючевыеДатыПроцессовСрезПоследнихБронь.Объект
				    //rarus vikhle 10.09.2021 mt 17933 ---
				   |
	               |СГРУППИРОВАТЬ ПО
	               |	ДатыУстановкиDD.Ссылка,
	               |	ДатыУстановкиDD.ДатаУстановкиDD,
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Период, ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Период, ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследнихDDS.Период, ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(Scan_КлючевыеДатыПроцессовСрезПоследнихDD2.Период, ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихDDS.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихDD2.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихPDD.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихRDB.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)),
	               |	ДатыУстановкиDD.Ссылка.DDPriority,
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(Scan_КлючевыеДатыПроцессовСрезПоследнихБронь.Значение, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1))";
	Запрос.УстановитьПараметр("ЗаказНаЗавод", ЗаказНаЗавод);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	РазницаМеждуPDDИRDBВДнях	 = Scan_ПраваИНастройки.Scan_Право("МинимальнаяРазницаМеждуДатамиPDDИRDBПродуктовСНадстройкой");//rarus vikhle 31.08.2021 mt 17933
	РазницаМеждуPDDИRDBВСекундах = РазницаМеждуPDDИRDBВДнях * 60 * 60 * 24;
		
	Пока Выборка.Следующий() Цикл
		//rarus vikhle 31.08.2021 mt 17933 +++
		//Если (НЕ Выборка.ДатаУстановкиDD2 = Дата(1,1,1) И Выборка.ДатаУстановкиDDS < Выборка.ДатаУстановкиDD2)
		//	ИЛИ (Выборка.ДатаУстановкиDD2 = Дата(1,1,1) И Выборка.ДатаУстановкиDDS < Выборка.ДатаУстановкиDD) Тогда
		//	НужноДобавитьЗапись = Истина;	
		//КонецЕсли;	
		
		Если Выборка.КоличествоЗаказовНаЗакупку > 0 Тогда
			
			Если ЗначениеЗаполнено(Выборка.PDD) //rarus vikhle 09.09.2021 mt 17933
				И ЗначениеЗаполнено(Выборка.RDB) //rarus vikhle 09.09.2021 mt 17933
				И Выборка.PDD - Выборка.RDB > РазницаМеждуPDDИRDBВСекундах Тогда
				
				Если Выборка.ДатаУстановкиPDD > Выборка.ДатаУстановкиDDS Тогда
					НужноДобавитьЗапись = Истина;
				КонецЕсли;	
				
			КонецЕсли;	
		КонецЕсли;	
		
		Если (Выборка.DD2 > Выборка.DDS И ЗначениеЗаполнено(Выборка.DDS)) //rarus vikhle 09.09.2021 mt 17933 + условия на заполненность 
			ИЛИ (Выборка.DD2 > Выборка.БроньДилера И ЗначениеЗаполнено(Выборка.БроньДилера)) //rarus vikhle 07.09.2021 mt 17933
			ИЛИ ЗначениеЗаполнено(Выборка.DDPriority) Тогда //rarus vikhle 08.09.2021 mt 17933
			
			Если Выборка.ДатаУстановкиDD2 > Выборка.ДатаУстановкиDDS Тогда
				НужноДобавитьЗапись = Истина;
			КонецЕсли;	
			
		КонецЕсли;	
				
		
		Если Выборка.ДатаУстановкиDD > Выборка.ДатаУстановкиDDS Тогда //rarus vikhle 10.09.2021 mt 17933 поменял местами и знак	
			
			НужноДобавитьЗапись = Истина;
			
		КонецЕсли;	
		
		
		//rarus vikhle 31.08.2021 mt 17933 ---
	КонецЦикла;	
	
	Возврат НужноДобавитьЗапись;
		
КонецФункции //rarus vikhle 19.07.2021 m 17933 ---	

// Возвращает признаки наличия записи в регистре по заказам на завод 
//
// Параметры:
//  ЗаказыНаЗавод	 - Массив	 - массив ссылок на заказы
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - Ключ - ссылка на заказ на завод, Значение - признак наличия записи по заказу 
//
Функция ПолучитьНаличиеЗаписейПоЗаказам(ЗаказыНаЗавод) Экспорт //rarus vikhle 31.08.2021 m 17933 +++ 
	
	НаличиеЗаписейПоЗаказам = Новый Соответствие;
	
	Для Каждого Заказ Из ЗаказыНаЗавод Цикл 
		НаличиеЗаписейПоЗаказам.Вставить(Заказ, Ложь);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ОчередьDD2DDSИнформера.ЗаказНаЗавод КАК ЗаказНаЗавод
	               |ИЗ
	               |	РегистрСведений.Scan_ОчередьDD2DDSИнформера КАК Scan_ОчередьDD2DDSИнформера
	               |ГДЕ
	               |	Scan_ОчередьDD2DDSИнформера.ЗаказНаЗавод В (&ЗаказыНаЗавод)";
	Запрос.УстановитьПараметр("ЗаказыНаЗавод", ЗаказыНаЗавод);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаличиеЗаписейПоЗаказам[Выборка.ЗаказНаЗавод] = Истина;
	КонецЦикла;
	
	Возврат НаличиеЗаписейПоЗаказам;
	
КонецФункции //rarus vikhle 31.08.2021 m 17933 ---	

//rarus vikhe 13.09.2021 АПК + описание 
// Возвращает признак наличия записи в регистре по заказу
//
// Параметры:
//  ЗаказНаЗавод - СправочникСсылка.Scan_ЗаказыНаЗавод	 - Ссылка на заказ на завод 
// 
// Возвращаемое значение:
//  Булево - Истина, когда есть запись по заказу, Ложь - нет записи 
//
Функция ЕстьЗаписьПоЗаказу(ЗаказНаЗавод) Экспорт //rarus vikhle 08.09.2021 mt 17933 +++
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ОчередьDD2DDSИнформера.ЗаказНаЗавод КАК ЗаказНаЗавод
	               |ИЗ
	               |	РегистрСведений.Scan_ОчередьDD2DDSИнформера КАК Scan_ОчередьDD2DDSИнформера
	               |ГДЕ
	               |	Scan_ОчередьDD2DDSИнформера.ЗаказНаЗавод = &ЗаказНаЗавод";
	Запрос.УстановитьПараметр("ЗаказНаЗавод", ЗаказНаЗавод);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции //rarus vikhle 08.09.2021 mt 17933 ---

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗаказУдовлетворяетУсловиям(ЗаказНаЗавод)//rarus vikhle 20.07.2021 m 17933 +++
	
	Если Не ЗначениеЗаполнено(ЗаказНаЗавод) Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	//rarus vikhle 08.09.2021 m 17933 Откат +++
	//rarus vikhle 01.09.2021 mt 17933 +++
	//DDPriority = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаказНаЗавод, "DDPriority");
	//Если Не ЗначениеЗаполнено(DDPriority) Тогда
	//	Возврат Ложь;
	//КонецЕсли;	
	//rarus vikhle 01.09.2021 mt 17933 ---	
	//rarus vikhle 08.09.2021 m 17933 ---
	
	ПродуктЗаказа	 = РегистрыСведений.Scan_ВзаимосвязьИзделийИЗаказов.ПолучитьИзделиеПоЗаказу(ЗаказНаЗавод);
	ТипЗаказаНаЗавод = Справочники.Scan_ЗаказыНаЗавод.ЧтениеЗначенияРегистраСведения(ЗаказНаЗавод, Перечисления.Scan_ДополнительнаяИнформацияПоЗаказамНаЗавод.ТипЗаказаНаЗавод);
	
	//МассивТиповЗаказаFirm = Новый Массив;
	//МассивТиповЗаказаFirm.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderNormal);
	//МассивТиповЗаказаFirm.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderRefill);
	//МассивТиповЗаказаFirm.Добавить(Перечисления.Scan_ТипыЗаказовНаЗавод.FirmOrderUrgent);
	МассивТиповЗаказаFirm = Перечисления.Scan_ТипыЗаказовНаЗавод.ТипыЗаказаFirm(); //rarus vikhle 09.09.2021 mt 17933
	
	Если ПродуктЗаказа.Пустая() 
		ИЛИ ПродуктЗаказа.БУ
		ИЛИ ПродуктЗаказа.ГруппаИзделийOFMS = Перечисления.Scan_ГруппыИзделийOFMS.Услуга
		ИЛИ НЕ ПродуктЗаказа.МаркаПродукта = Справочники.Scan_МаркиПродуктов.Scania 
		ИЛИ МассивТиповЗаказаFirm.Найти(ТипЗаказаНаЗавод) = Неопределено
		Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Заявка = РегистрыСведений.Scan_СоставСоглашенийОПоставке.ПолучитьСоглашениеОПоставке(ПродуктЗаказа);
	Если Не ЗначениеЗаполнено(Заявка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидДилера 		= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заявка,"Дилер.ВидДилера");
	ВидДатыПродажи	= ?(ВидДилера = Перечисления.Scan_ВидыДилеров.Собственный, Перечисления.Scan_КлючевыеДаты.ДатаПродажиКлиенту,Перечисления.Scan_КлючевыеДаты.ДатаПродажиИзделия);
	
	ДатаПродажи = РегистрыСведений.Scan_КлючевыеДатыПроцессов.КлючеваяДата(ЗаказНаЗавод,ВидДатыПродажи);
	Если ЗначениеЗаполнено(ДатаПродажи)Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции //rarus vikhle 20.07.2021 m 17933 ---	

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
