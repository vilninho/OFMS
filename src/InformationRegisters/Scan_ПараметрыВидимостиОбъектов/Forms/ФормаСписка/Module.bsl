//Rarus bonmak 28.07.2022 18726 добавил области

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектНастройки = ("Scan_СоглашенияОПоставке");
	Статус = Справочники.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПустаяСсылка();//rarus vikhle 23.06.2020 mt 15888
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаСервере
Процедура ВидимостьПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьПриИзменении(Элемент)
	
	ВидимостьПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступностьПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбъектНастройки1НачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ОбъектНастройки.Очистить();
	ОбъектНастройки.Добавить("Scan_СоглашенияОПоставке");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектНастройки1ПриИзменении(Элемент)
	Элементы.Статус1.ВыбиратьТип = Ложь;
	Если ЗначениеЗаполнено(ОбъектНастройки) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,"ОбъектНастройки",ОбъектНастройки,ВидСравненияКомпоновкиДанных.Равно,,Истина,,);
		Если (ОбъектНастройки = "Scan_СоглашенияОПоставке" 
			ИЛИ ОбъектНастройки = "Scan_СпециальныеУсловия") 
			И ТипЗнч(Статус) <> Тип("СправочникСсылка.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий") Тогда   
			Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыСоглашенийОПоставкеИСпециальныхУсловий.ПустаяСсылка");
		ИначеЕсли ОбъектНастройки = "Scan_ЗаявкаНаОтгрузку" И  ТипЗнч(Статус) <> Тип("СправочникСсылка.Scan_СтатусыЗаявокНаОтгрузку") Тогда
			Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыЗаявокНаОтгрузку.ПустаяСсылка");
		ИначеЕсли ОбъектНастройки = "Scan_Калькуляция" И ТипЗнч(Статус) <> Тип("СправочникСсылка.Scan_СтатусыКалькуляций") Тогда
			Статус = ПредопределенноеЗначение("Справочник.Scan_СтатусыКалькуляций.ПустаяСсылка");	
		КонецЕсли;		
		
		
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"ОбъектНастройки");
		Статус = Неопределено;
		Элементы.Статус1.ВыбиратьТип = Истина;
	КонецЕсли;
	
	//rarus agar 25.08.2020  16181 ++
	ЗаполнитьСписокИменЭлементов();
	//rarus agar 25.08.2020  16181 --
	
КонецПроцедуры

&НаКлиенте
Процедура Статус1ПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Статус) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,"Статус",Статус,ВидСравненияКомпоновкиДанных.Равно,,Истина,,);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"Статус");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РольИсполнителя1ПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(РольИсполнителя) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,"РольИсполнителя",РольИсполнителя,ВидСравненияКомпоновкиДанных.Равно,,Истина,,);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"РольИсполнителя");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСоглашенияОПоставке1ПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ТипСоглашенияОПоставке) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,"ТипСоглашенияОПоставке",ТипСоглашенияОПоставке,ВидСравненияКомпоновкиДанных.Равно,,Истина,,);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"ТипСоглашенияОПоставке");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Видимость" Или Поле.Имя = "Доступность" Тогда
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		//rarus agar 08.06.2020,13.07.2020  16123,16055 ++
		//СоздатьЗапись(Поле.Имя,ТекущиеДанные.ОбъектНастройки, ТекущиеДанные.РольИсполнителя, ТекущиеДанные.Статус,ТекущиеДанные.ТипСоглашенияОПоставке,ТекущиеДанные.ИмяЭлемента);
		СоздатьЗапись(Поле.Имя,ТекущиеДанные.ОбъектНастройки, ТекущиеДанные.РольИсполнителя, ТекущиеДанные.Статус,ТекущиеДанные.ТипСоглашенияОПоставке,ТекущиеДанные.ИмяЭлемента, ТекущиеДанные.ХозОперация, Истина);
		//rarus agar 08.06.2020,13.07.2020  16123,16055 --
		
		ОбновитьОтображениеДанных();
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

//rarus agar 08.06.2020  16123 ++
&НаКлиенте
Процедура ХозОперация1ПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ХозОперация) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,"ХозОперация",ХозОперация,ВидСравненияКомпоновкиДанных.Равно,,Истина,,);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"ХозОперация");
	КонецЕсли;
	
КонецПроцедуры
//rarus agar 08.06.2020  16123 --

&НаКлиенте
Процедура Статус1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//пустой массив для обнуления отборов
	МассивПараметров = Новый Массив();
	ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	Элемент.ПараметрыВыбора = ПараметрыВыбора;
	
	Если ОбъектНастройки = "Scan_СоглашенияОПоставке" Тогда   
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ИспользуетсяВСоглашенииОПоставке", Истина));
		Если ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСклад") Тогда
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ИспользуетсяВТипеЗаявкаНаСклад", Истина));
		ИначеЕсли ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОП") Тогда
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ИспользуетсяВТипеЗаявкаНаСОП", Истина));
		//rarus vikhle 05.08.2021 mt 17834 +++	
		ИначеЕсли ТипСоглашенияОПоставке = ПредопределенноеЗначение("Перечисление.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU") Тогда
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ИспользуетсяВТипеЗаявкаНаСОПSRU", Истина)); 	
		//rarus vikhle 05.08.2021 mt 17834 ---	
		КонецЕсли;	
		ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
		Элемент.ПараметрыВыбора = ПараметрыВыбора;	
	ИначеЕсли ОбъектНастройки = "Scan_СпециальныеУсловия"	Тогда
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ИспользуетсяВСпециальныхУсловиях", Истина));
		ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
		Элемент.ПараметрыВыбора = ПараметрыВыбора;		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяЭлемента1ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ИмяЭлемента) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,"ИмяЭлемента",ИмяЭлемента,ВидСравненияКомпоновкиДанных.Равно,,Истина,,);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"ИмяЭлемента");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

&НаКлиенте
Процедура СоздатьНабор(Команда)
	
	СоздатьНаборНаСервере();
	ОбновитьОтображениеДанных();
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНаборНаСервере()
	
	НаборЗаписей = РегистрыСведений.Scan_ПараметрыВидимостиОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Статус.Установить(Статус);
	НаборЗаписей.Отбор.РольИсполнителя.Установить(РольИсполнителя);
	НаборЗаписей.Отбор.ТипСоглашенияОПоставке.Установить(ТипСоглашенияОПоставке);
	НаборЗаписей.Отбор.ОбъектНастройки.Установить(ОбъектНастройки);
	//rarus agar 08.06.2020  16123 ++
	НаборЗаписей.Отбор.ХозОперация.Установить(ХозОперация);
	//rarus agar 08.06.2020  16123 --
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Если ОбъектНастройки = "Scan_СоглашенияОПоставке" Тогда
		//rarus vikhle 12.08.2021 mt 17834 +++
		Если ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU Тогда
			ТаблицаЭлементов = Справочники.Scan_СоглашенияОПоставке.ПолучитьСписокЭлементовДляНастройки(ТипСоглашенияОПоставке);
		Иначе
			ТаблицаЭлементов = Справочники.Scan_СоглашенияОПоставке.ПолучитьСписокЭлементовДляНастройки();	
		КонецЕсли;
		//rarus vikhle 12.08.2021 mt 17834 ---
	//rarus agar 04.06.2020  16123 ++
	ИначеЕсли ОбъектНастройки = "Scan_Калькуляция" Тогда
		ТаблицаЭлементов = Документы.Scan_Калькуляция.ПолучитьСписокЭлементовДляНастройки();
	ИначеЕсли ОбъектНастройки = "Scan_ЗаявкаНаОтгрузку" Тогда
		ТаблицаЭлементов = Документы.Scan_ЗаявкаНаОтгрузку.ПолучитьСписокЭлементовДляНастройки();
	//rarus agar 04.06.2020  16123 --
	//rarus agar 29.06.2020  16055 ++
	ИначеЕсли ОбъектНастройки = "Scan_МониторБронированияОтгрузок" Тогда
		ТаблицаЭлементов = Обработки.Scan_МониторБронированияОтгрузок.ПолучитьСписокЭлементовДляНастройки();
	//rarus agar 29.06.2020  16055 --
	Иначе
		ТаблицаЭлементов = Справочники.Scan_СпециальныеУсловия.ПолучитьСписокЭлементовДляНастройки();
	КонецЕсли;
	
	Для Каждого Элемент Из ТаблицаЭлементов Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ОбъектНастройки        = ОбъектНастройки;
		НоваяЗапись.РольИсполнителя        = РольИсполнителя;
		НоваяЗапись.Статус                 = Статус;
		НоваяЗапись.ТипСоглашенияОПоставке = ТипСоглашенияОПоставке;
		//rarus agar 08.06.2020  16123 ++
		НоваяЗапись.ХозОперация            = ХозОперация;
		//rarus agar 08.06.2020  16123 --
		НоваяЗапись.ИмяЭлемента            = Элемент.ИмяЭлемента;
		НоваяЗапись.Видимость              = Ложь;
		НоваяЗапись.Доступность            = Ложь;
		//rarus agar 15.07.2020  16055 ++
		НоваяЗапись.РучноеИзменение        = Истина;
		//rarus agar 15.07.2020  16055 --
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьЗапись(Имя,ОбъектНастройки,РольИсполнителя,Статус,ТипСоглашенияОПоставке,ИмяЭлемента,ХозОперация, РучноеИзменение = Ложь) //rarus agar 08.06.2020,13.07.2020  16123,16055 +-
	
	Если Имя = "Видимость" Тогда
		НоваяЗапись = РегистрыСведений.Scan_ПараметрыВидимостиОбъектов.СоздатьМенеджерЗаписи(); //rarus ozhnik 14927 14.04.2020 + 
		НоваяЗапись.ОбъектНастройки        = ОбъектНастройки;
		НоваяЗапись.РольИсполнителя        = РольИсполнителя;
		НоваяЗапись.Статус                 = Статус;
		НоваяЗапись.ТипСоглашенияОПоставке = ТипСоглашенияОПоставке;
		//rarus agar 08.06.2020  16123 ++
		НоваяЗапись.ХозОперация            = ХозОперация;
		//rarus agar 08.06.2020  16123 --
		НоваяЗапись.ИмяЭлемента            = ИмяЭлемента;
		НоваяЗапись.Прочитать();
		НоваяЗапись.Видимость              = Не НоваяЗапись.Видимость;
		//rarus agar 13.07.2020  16055 ++
		НоваяЗапись.РучноеИзменение        = Истина;
		//rarus agar 13.07.2020  16055 --
		НоваяЗапись.Записать();
	ИначеЕсли Имя = "Доступность" Тогда
		НоваяЗапись = РегистрыСведений.Scan_ПараметрыВидимостиОбъектов.СоздатьМенеджерЗаписи(); //rarus ozhnik 14927 14.04.2020 + 
		НоваяЗапись.ОбъектНастройки        = ОбъектНастройки;
		НоваяЗапись.РольИсполнителя        = РольИсполнителя;
		НоваяЗапись.Статус                 = Статус;
		НоваяЗапись.ТипСоглашенияОПоставке = ТипСоглашенияОПоставке;
		//rarus agar 08.06.2020  16123 ++
		НоваяЗапись.ХозОперация            = ХозОперация;
		//rarus agar 08.06.2020  16123 --
		НоваяЗапись.ИмяЭлемента            = ИмяЭлемента;
		НоваяЗапись.Прочитать();
		НоваяЗапись.Доступность            = Не НоваяЗапись.Доступность;
		//rarus agar 13.07.2020  16055 ++
		НоваяЗапись.РучноеИзменение        = Истина;
		//rarus agar 13.07.2020  16055 --
		НоваяЗапись.Записать();
	КонецЕсли;
	
КонецПроцедуры

//rarus vikhle 19.06.2020 mt 15888 +++
&НаКлиенте
Процедура СоздатьНаборКопированием(Команда)
	
	Если	ЗначениеЗаполнено(ОбъектНастройки) И ЗначениеЗаполнено(Статус) И ЗначениеЗаполнено(РольИсполнителя) 
		И 	((ОбъектНастройки = "Scan_СоглашенияОПоставке" И ЗначениеЗаполнено(ТипСоглашенияОПоставке))
		ИЛИ ОбъектНастройки = "Scan_СпециальныеУсловия" 
		ИЛИ ОбъектНастройки = "Scan_Калькуляция"
		ИЛИ ОбъектНастройки = "Scan_ЗаявкаНаОтгрузку") Тогда
			АдресВременногоХранилища = ВыгрузитьТаблицуПараметровЭлементов();
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("АдресВременногоХранилища",АдресВременногоХранилища);	
			ПараметрыФормы.Вставить("ОбъектНастройки",ОбъектНастройки);
			ПараметрыФормы.Вставить("ТипЗаявки",ТипСоглашенияОПоставке);//rarus vikhle 12.08.2021 mt 17834
			ОткрытьФорму("РегистрСведений.Scan_ПараметрыВидимостиОбъектов.Форма.ФормаПараметровКопированияНабора",ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);				
	Иначе
			Сообщить("Не заполнены все необходимые параметры отбора");			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьТаблицуПараметровЭлементов()
			
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ТаблицаПараметровЭлементов = ТаблицаРезультат.Скопировать(,"ИмяЭлемента,Видимость,Доступность");
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ТаблицаПараметровЭлементов,Новый УникальныйИдентификатор);
	Возврат АдресВременногоХранилища;
	
КонецФункции	

&НаКлиенте
Процедура ОбновитьНабор(Команда)
	Если	ЗначениеЗаполнено(ОбъектНастройки) И ЗначениеЗаполнено(Статус) И ЗначениеЗаполнено(РольИсполнителя) 
		И 	((ОбъектНастройки = "Scan_СоглашенияОПоставке" И ЗначениеЗаполнено(ТипСоглашенияОПоставке))
		ИЛИ ОбъектНастройки = "Scan_СпециальныеУсловия" 
		ИЛИ ОбъектНастройки = "Scan_Калькуляция"
		ИЛИ ОбъектНастройки = "Scan_ЗаявкаНаОтгрузку") Тогда
			ОбновитьНаборНаСервере();
			ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Scan_ПараметрыВидимостиОбъектов"));
	Иначе
		Сообщить("Не заполнены все необходимые параметры отбора");			
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаборНаСервере()
	
	Если ОбъектНастройки = "Scan_СоглашенияОПоставке" Тогда
		// rarus vikhle 12.08.2021 mt 17834 +++
		Если ТипСоглашенияОПоставке = Перечисления.Scan_ТипыСоглашенийОПоставке.ЗаявкаНаСОПSRU Тогда
			ТаблицаЭлементов = Справочники.Scan_СоглашенияОПоставке.ПолучитьСписокЭлементовДляНастройки(ТипСоглашенияОПоставке);
		Иначе
			ТаблицаЭлементов = Справочники.Scan_СоглашенияОПоставке.ПолучитьСписокЭлементовДляНастройки();	
		КонецЕсли;	
		// rarus vikhle 12.08.2021 mt 17834 ---
	ИначеЕсли ОбъектНастройки = "Scan_Калькуляция" Тогда
		ТаблицаЭлементов = Документы.Scan_Калькуляция.ПолучитьСписокЭлементовДляНастройки();
	ИначеЕсли ОбъектНастройки = "Scan_ЗаявкаНаОтгрузку" Тогда
		ТаблицаЭлементов = Документы.Scan_ЗаявкаНаОтгрузку.ПолучитьСписокЭлементовДляНастройки();
	Иначе
		ТаблицаЭлементов = Справочники.Scan_СпециальныеУсловия.ПолучитьСписокЭлементовДляНастройки();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаЭлементов.ИмяЭлемента КАК ИмяЭлемента
	               |ПОМЕСТИТЬ ТаблицаЭлементов
	               |ИЗ
	               |	&ТаблицаЭлементов КАК ТаблицаЭлементов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Scan_ПараметрыВидимостиОбъектов.ИмяЭлемента КАК ИмяЭлемента
	               |ПОМЕСТИТЬ ТекущиеЗаписи
	               |ИЗ
	               |	РегистрСведений.Scan_ПараметрыВидимостиОбъектов КАК Scan_ПараметрыВидимостиОбъектов
	               |ГДЕ
	               |	Scan_ПараметрыВидимостиОбъектов.ОбъектНастройки = &ОбъектНастройки
	               |	И Scan_ПараметрыВидимостиОбъектов.РольИсполнителя = &РольИсполнителя
	               |	И Scan_ПараметрыВидимостиОбъектов.ТипСоглашенияОПоставке = &ТипСоглашенияОПоставке
	               |	И Scan_ПараметрыВидимостиОбъектов.Статус = &Статус
	               |	И Scan_ПараметрыВидимостиОбъектов.ХозОперация = &ХозОперация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаЭлементов.ИмяЭлемента КАК ИмяЭлемента
	               |ИЗ
	               |	ТаблицаЭлементов КАК ТаблицаЭлементов
	               |ГДЕ
	               |	НЕ ТаблицаЭлементов.ИмяЭлемента В
	               |				(ВЫБРАТЬ
	               |					ТекущиеЗаписи.ИмяЭлемента
	               |				ИЗ
	               |					ТекущиеЗаписи)";
	Запрос.УстановитьПараметр("ТаблицаЭлементов",ТаблицаЭлементов);
	Запрос.УстановитьПараметр("ОбъектНастройки",ОбъектНастройки);
	Запрос.УстановитьПараметр("РольИсполнителя",РольИсполнителя);
	Запрос.УстановитьПараметр("ТипСоглашенияОПоставке",ТипСоглашенияОПоставке);
	Запрос.УстановитьПараметр("Статус",Статус);
	Запрос.УстановитьПараметр("ХозОперация",ХозОперация);

	ТаблицаНовыхЭлементов = Запрос.Выполнить().Выгрузить();
	Если НЕ ТаблицаНовыхЭлементов.Количество() = 0 Тогда 		
		Для Каждого СтрокаТаблицы Из ТаблицаНовыхЭлементов Цикл
			МенеджерЗаписи = РегистрыСведений.Scan_ПараметрыВидимостиОбъектов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ОбъектНастройки 			= ОбъектНастройки; 
			МенеджерЗаписи.РольИсполнителя 			= РольИсполнителя;
			МенеджерЗаписи.ТипСоглашенияОПоставке	= ТипСоглашенияОПоставке;
			МенеджерЗаписи.Статус					= Статус; 
			МенеджерЗаписи.ИмяЭлемента				= СтрокаТаблицы.ИмяЭлемента;
			МенеджерЗаписи.Видимость				= Ложь;
			МенеджерЗаписи.Доступность				= Ложь;
			МенеджерЗаписи.Записать();
		КонецЦикла;
		Сообщить("Набор обновлен");
	КонецЕсли;	
КонецПроцедуры

//rarus vikhle 19.06.2020 mt 15888 ---

//rarus agar 10.07.2020  16055 ++
&НаКлиенте
Процедура ВосстановитьПараметрыВидимости(Команда)
	
	Если ЕстьЗаписиВРегистре() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ВосстановитьПараметрыВидимостиЗавершение", ЭтотОбъект),
		//rarus agar 25.08.2020  16181 ++
		Нстр("ru = 'Внимание!!! 
		           |Регистр будет полностью обновлен из поставляемых данных!
				   |
				   |Обновлять записи, измененные вручную?
				   |""ДА"" - записи, измененные вручную, будут замещены из поставляемых данных.
				   |""НЕТ"" - записи, измененные вручную, будут сохранены и обновляться не будут.';
		     |en = 'Attention!!!
			       |Register will be updated default data. 
				   |
				   |Update manually edited records?
				   |""YES"" - manually edited records will be updated.
				   |""NO"" - manually edited records will not be updated.'"),
		//rarus agar 25.08.2020  16181 --
		РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ВыполнитьВосстановлениеПараметровВидимости();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьПараметрыВидимостиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если    РезультатВопроса = КодВозвратаДиалога.Да 
		Или РезультатВопроса = КодВозвратаДиалога.Нет 
		Тогда
		ВыполнитьВосстановлениеПараметровВидимости(РезультатВопроса = КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьВосстановлениеПараметровВидимости(ЗамещатьРучноеИзменение = Ложь)
	
	ВосстановитьПараметрыВидимостиНаСервере(ЗамещатьРучноеИзменение);
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьПараметрыВидимостиНаСервере(ЗамещатьРучноеИзменение = Ложь)
	
	ДвоичныеДанныеМакета = РегистрыСведений.Scan_ПараметрыВидимостиОбъектов.ПолучитьМакет("ПоставляемыеПараметры");
	АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеМакета, Новый УникальныйИдентификатор);
	
	ЗагрузкаВыполнена = Scan_ПараметрыВидимостиОбъектовСервер.ЗагрузитьПараметрыИзФайлаВХранилище(АдресФайлаВХранилище, ЗамещатьРучноеИзменение);
	Если ЗагрузкаВыполнена Тогда
		Сообщить(Нстр("ru = 'Восстановление параметров завершено успешно.'; en = 'Completed successfully.'"));
	Иначе
		Сообщить(Нстр("ru = 'Параметры видимости восстановить не удалось. Повторите попытку.'; en = 'Failed to complete. Try again.'"));
	КонецЕсли;
	
КонецПроцедуры

//rarus agar 25.08.2020  16181 ++
&НаКлиенте
Процедура СохранитьПараметрыВидимости(Команда)
	
	Если  ЕстьЗаписиВРегистре() 
		И  (ЗначениеЗаполнено(ТипСоглашенияОПоставке)
		Или ЗначениеЗаполнено(ОбъектНастройки)
		Или ЗначениеЗаполнено(Статус)
		Или ЗначениеЗаполнено(РольИсполнителя)
		Или ЗначениеЗаполнено(ХозОперация)
		Или ЗначениеЗаполнено(ИмяЭлемента))
		Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СохранитьПараметрыВидимостиЗавершение", ЭтотОбъект),
		
		Нстр("ru = 'Внимание!!! 
		           |Регистр будет выгружен в файл.
				   |
				   |Выгрузить записи по установленному отбору?
				   |""ДА"" - записи будут выгружены в файл в соответствии с установленным отбором.
				   |""НЕТ"" - в файл будут выгружены все записи регистра без отбора.';
		     |en = 'Attention!!!
			       |Register will be downloaded to the file. 
				   |
				   |Download records according to the filters?
				   |""YES"" - records will be downloaded to the file in accordance with the filters.
				   |""NO"" - all records will be downloaded to the file.'"),
		РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ВыполнитьСохранениеПараметровВидимости();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПараметрыВидимостиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если    РезультатВопроса = КодВозвратаДиалога.Да 
		Или РезультатВопроса = КодВозвратаДиалога.Нет 
		Тогда
		ВыполнитьСохранениеПараметровВидимости(РезультатВопроса = КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ВыполнитьСохранениеПараметровВидимости(СохранятьПоОтбору = Ложь)
	
	ПолноеИмяФайла = "ПараметрыВидимостиОбъектов_"+Формат(ТекущаяДата(), "ДФ=yyyyMMddHHmmss")+".xml";
	
	ПараметрыОтбора = Новый Структура;
	Если ЗначениеЗаполнено(ТипСоглашенияОПоставке) Тогда
		ПараметрыОтбора.Вставить("ТипСоглашенияОПоставке", ТипСоглашенияОПоставке);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОбъектНастройки) Тогда
		ПараметрыОтбора.Вставить("ОбъектНастройки",        ОбъектНастройки);
	КонецЕсли;
	Если ЗначениеЗаполнено(Статус) Тогда
		ПараметрыОтбора.Вставить("Статус",                 Статус);
	КонецЕсли;
	Если ЗначениеЗаполнено(РольИсполнителя) Тогда
		ПараметрыОтбора.Вставить("РольИсполнителя",        РольИсполнителя);
	КонецЕсли;
	Если ЗначениеЗаполнено(ХозОперация) Тогда
		ПараметрыОтбора.Вставить("ХозОперация",            ХозОперация);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИмяЭлемента) Тогда
		ПараметрыОтбора.Вставить("ИмяЭлемента",            ИмяЭлемента);
	КонецЕсли;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Заголовок = Нстр("ru = 'Укажите каталог и название файла для сохранения.'; en = 'Choose the directory and file name to save.'");
	ДиалогВыбораФайла.ПолноеИмяФайла = ПолноеИмяФайла;
	ДиалогВыбораФайла.Расширение     = "xml";
	ДиалогВыбораФайла.Фильтр         = "Файлы XML (*.xml)|*.xml";
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("СохранятьПоОтбору", СохранятьПоОтбору);
	ДополнительныеПараметры.Вставить("ПараметрыОтбора",   ПараметрыОтбора);
	
	#Если ВебКлиент Тогда
		ДополнительныеПараметры.Вставить("ДиалогВыбораФайла", ДиалогВыбораФайла);
		
		
		НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения(
		                           "СохранитьПараметрыВидимостиВебКлиентФрагмент", ЭтотОбъект, ДополнительныеПараметры));
	#Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьПараметрыВидимостиТонкийКлиентФрагмент", ЭтотОбъект, ДополнительныеПараметры);
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	#КонецЕсли
	
КонецПроцедуры
//rarus agar 25.08.2020  16181 --

&НаКлиенте
Процедура СохранитьПараметрыВидимостиВебКлиентФрагмент(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	
	Если РасширениеПодключено Тогда
		ДиалогВыбораФайла = ДополнительныеПараметры.ДиалогВыбораФайла;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьПараметрыВидимостиТонкийКлиентФрагмент", ЭтотОбъект, ДополнительныеПараметры); //rarus agar 25.08.2020  16181 ++
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	Иначе
		НачатьУстановкуРасширенияРаботыСФайлами(Новый ОписаниеОповещения("УстановкаРасширенияЗавершение", ЭтотОбъект));
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПараметрыВидимостиТонкийКлиентФрагмент(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если  ВыбранныеФайлы <> Неопределено 
		И ВыбранныеФайлы.Количество() > 0
		Тогда
		АдресФайлаВХранилище = СохранитьПараметрыВидимостиНаСервере(ДополнительныеПараметры.СохранятьПоОтбору, ДополнительныеПараметры.ПараметрыОтбора); //rarus agar 25.08.2020  16181 ++
		
		МассивПолучаемыхФайлов = Новый Массив;
		МассивПолучаемыхФайлов.Добавить(Новый ОписаниеПередаваемогоФайла(ВыбранныеФайлы[0], АдресФайлаВХранилище));
		
		НачатьПолучениеФайлов(Новый ОписаниеОповещения("СохранитьПараметрыВидимостиТонкийКлиентЗавершение", ЭтотОбъект), МассивПолучаемыхФайлов,, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СохранитьПараметрыВидимостиНаСервере(СохранятьПоОтбору, ПараметрыОтбора) //rarus agar 25.08.2020  16181 ++
	
	Возврат Scan_ПараметрыВидимостиОбъектовСервер.ПоместитьПараметрыВФайлВХранилище(СохранятьПоОтбору, ПараметрыОтбора); //rarus agar 25.08.2020  16181 ++
	
КонецФункции

&НаКлиенте
Процедура СохранитьПараметрыВидимостиТонкийКлиентЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПолученныеФайлы.Количество() > 0 Тогда
		Сообщить(Нстр("ru = 'Файл успешно сохранен.'; en = 'File saved successfully.'"));
	Иначе
		Сообщить(Нстр("ru = 'Не удалось сохранить файл. Повторите попытку.'; en = 'Failed to save file. Try again.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаРасширенияЗавершение(ДополнительныеПараметры) Экспорт
	
	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		Нстр("ru = 'Расширение успешно установлено. Повторите выгрузку.'; en = 'The extension has been successfully installed. Repeat upload.'");
	Иначе
		ВызватьИсключение Нстр("ru = 'Ошибка подключения расширения работы с файлами.'; en = 'Error connecting extension.'");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПараметрыВидимости(Команда)
	
	Если ЕстьЗаписиВРегистре() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьПараметрыВидимостиЗавершение", ЭтотОбъект),
		//rarus agar 25.08.2020  16181 ++
		Нстр("ru = 'Внимание!!! 
		           |Регистр будет полностью обновлён из файла. 
				   |
				   |Обновлять записи, измененные вручную?
				   |""ДА"" - записи, измененные вручную, будут замещены из загружаемых данных.
				   |""НЕТ"" - записи, измененные вручную, будут сохранены и обновляться не будут.';
		     |en = 'Attention!!!
			       |Register will be updated from the file. Update manually edited records?
				   |""YES"" - manually edited records will be updated.
				   |""NO"" - manually edited records will not be updated.'"), 
		РежимДиалогаВопрос.ДаНетОтмена);
		//rarus agar 25.08.2020  16181 --
	Иначе
		ВыполнитьЗагрузкуПараметровВидимостиИзФайла();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПараметрыВидимостиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если    РезультатВопроса = КодВозвратаДиалога.Да 
		Или РезультатВопроса = КодВозвратаДиалога.Нет 
		Тогда
		ВыполнитьЗагрузкуПараметровВидимостиИзФайла(РезультатВопроса = КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуПараметровВидимостиИзФайла(ЗамещатьРучноеИзменение = Ложь)
	
	Оповещение = Новый ОписаниеОповещения("ПослеПодключенияРасширения", ЭтотОбъект, Новый Структура("ЗамещатьРучноеИзменение", ЗамещатьРучноеИзменение));
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияРасширения(Результат, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоместитьФайлВХранилищеЗавершить", ЭтотОбъект, ДополнительныеПараметры);
	ПомещаемыеФайлы    = Новый Массив;
		
	НачатьПомещениеФайлов(ОписаниеОповещения, ПомещаемыеФайлы, , Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьФайлВХранилищеЗавершить(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	АдресФайлаВХранилище = "";
	Если ПомещенныеФайлы <> Неопределено Тогда
		АдресФайлаВХранилище = ПомещенныеФайлы[0].Хранение;
		ЗагрузитьПараметрыВидимостиОбъектовНаСервере(АдресФайлаВХранилище, ДополнительныеПараметры.ЗамещатьРучноеИзменение);
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПараметрыВидимостиОбъектовНаСервере(АдресФайлаВХранилище, ЗамещатьРучноеИзменение)
	
	ЗагрузкаВыполнена = Scan_ПараметрыВидимостиОбъектовСервер.ЗагрузитьПараметрыИзФайлаВХранилище(АдресФайлаВХранилище, ЗамещатьРучноеИзменение);
	Если ЗагрузкаВыполнена Тогда
		Сообщить(Нстр("ru = 'Файл успешно загружен.'; en = 'File uploaded successfully.'"));
	Иначе
		Сообщить(Нстр("ru = 'Не удалось загрузить файл. Повторите попытку.'; en = 'Failed to complete. Try again.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьЗаписиВРегистре()
	
	Возврат РегистрыСведений.Scan_ПараметрыВидимостиОбъектов.ЕстьЗаписиВРегистре();
	
КонецФункции
//rarus agar 10.07.2020  16055 --

//rarus agar 25.08.2020  16181 ++
&НаКлиенте
Процедура ЗагрузитьПараметрыВидимостиЧастично(Команда)
	
	Если ЕстьЗаписиВРегистре() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьПараметрыВидимостиЧастичноЗавершение", ЭтотОбъект),
		
		Нстр("ru = 'Внимание!!! 
		           |Регистр будет обновлён из файла без очистки, с замещением существующих записей. 
				   |
				   |Обновлять записи, измененные вручную?
				   |""ДА"" - записи, измененные вручную, будут замещены из загружаемых данных.
				   |""НЕТ"" - записи, измененные вручную, будут сохранены и обновляться не будут.';
		     |en = 'Attention!!!
			       |Register will be updated from the file. Update manually edited records?
				   |""YES"" - manually edited records will be updated.
				   |""NO"" - manually edited records will not be updated.'"), 
		РежимДиалогаВопрос.ДаНетОтмена);
		
	Иначе
		ВыполнитьЗагрузкуПараметровВидимостиЧастичноИзФайла();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПараметрыВидимостиЧастичноЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если    РезультатВопроса = КодВозвратаДиалога.Да 
		Или РезультатВопроса = КодВозвратаДиалога.Нет 
		Тогда
		ВыполнитьЗагрузкуПараметровВидимостиЧастичноИзФайла(РезультатВопроса = КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуПараметровВидимостиЧастичноИзФайла(ЗамещатьРучноеИзменение = Ложь)
	
	Оповещение = Новый ОписаниеОповещения("ПослеПодключенияРасширенияЧастично", ЭтотОбъект, Новый Структура("ЗамещатьРучноеИзменение", ЗамещатьРучноеИзменение));
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияРасширенияЧастично(Результат, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоместитьФайлВХранилищеЧастичноЗавершить", ЭтотОбъект, ДополнительныеПараметры);
	ПомещаемыеФайлы    = Новый Массив;
		
	НачатьПомещениеФайлов(ОписаниеОповещения, ПомещаемыеФайлы, , Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьФайлВХранилищеЧастичноЗавершить(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	АдресФайлаВХранилище = "";
	Если ПомещенныеФайлы <> Неопределено Тогда
		АдресФайлаВХранилище = ПомещенныеФайлы[0].Хранение;
		ЗагрузитьПараметрыВидимостиОбъектовЧастичноНаСервере(АдресФайлаВХранилище, ДополнительныеПараметры.ЗамещатьРучноеИзменение);
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПараметрыВидимостиОбъектовЧастичноНаСервере(АдресФайлаВХранилище, ЗамещатьРучноеИзменение)
	
	ЗагрузкаВыполнена = Scan_ПараметрыВидимостиОбъектовСервер.ЗагрузитьПараметрыЧастичноИзФайлаВХранилище(АдресФайлаВХранилище, ЗамещатьРучноеИзменение);
	Если ЗагрузкаВыполнена Тогда
		Сообщить(Нстр("ru = 'Файл успешно загружен.'; en = 'File uploaded successfully.'"));
	Иначе
		Сообщить(Нстр("ru = 'Файл загружен с ошибками. Повторите попытку.'; en = 'File uploaded with errors. Try again.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокИменЭлементов()
	
	Если ЗначениеЗаполнено(ОбъектНастройки) Тогда
		ТаблицаЭлементов = Новый ТаблицаЗначений;
		
		Если ОбъектНастройки = "Scan_СоглашенияОПоставке" Тогда
			ТаблицаЭлементов = Справочники.Scan_СоглашенияОПоставке.ПолучитьСписокЭлементовДляНастройки();
		ИначеЕсли ОбъектНастройки = "Scan_Калькуляция" Тогда
			ТаблицаЭлементов = Документы.Scan_Калькуляция.ПолучитьСписокЭлементовДляНастройки();
		ИначеЕсли ОбъектНастройки = "Scan_ЗаявкаНаОтгрузку" Тогда
			ТаблицаЭлементов = Документы.Scan_ЗаявкаНаОтгрузку.ПолучитьСписокЭлементовДляНастройки();
		ИначеЕсли ОбъектНастройки = "Scan_МониторБронированияОтгрузок" Тогда
			ТаблицаЭлементов = Обработки.Scan_МониторБронированияОтгрузок.ПолучитьСписокЭлементовДляНастройки();
		ИначеЕсли ОбъектНастройки = "Scan_СпециальныеУсловия" Тогда
			ТаблицаЭлементов = Справочники.Scan_СпециальныеУсловия.ПолучитьСписокЭлементовДляНастройки();
		КонецЕсли;
		
		Если ТаблицаЭлементов.Количество() > 0 Тогда
			Элементы.ИмяЭлемента1.СписокВыбора.ЗагрузитьЗначения(ТаблицаЭлементов.ВыгрузитьКолонку("ИмяЭлемента"));
		КонецЕсли;
	Иначе
		Элементы.ИмяЭлемента1.СписокВыбора.Очистить();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПараметрыВидимостиОтсутствующихЭлементов(Команда)
	
	Если ЕстьЗаписиВРегистре() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьПараметрыВидимостиОтсутствующихЭлементовЗавершение", ЭтотОбъект),
		Нстр("ru = 'Внимание!!! 
		           |Записи регистра по отсутствующим в настройках именам элементов будут удалены. 
				   |
				   |Продолжить?';
		     |en = 'Attention!!!
			       |Register records for the missing names of elements will be removed.
				   |
				   |Continue?'"), 
		РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПараметрыВидимостиОтсутствующихЭлементовЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВыполнитьУдалениеПараметровВидимостиОтсутствующихЭлементов();
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьУдалениеПараметровВидимостиОтсутствующихЭлементов()
	
	УдалениеВыполненоБезОшибок = Scan_ПараметрыВидимостиОбъектовСервер.УдалитьПараметрыВидимостиОтсутствующихЭлементов();
	
	Если УдалениеВыполненоБезОшибок Тогда
		Сообщить(Нстр("ru = 'Удаление успешно выполнено.'; en = 'Removing completed successfully.'"));
	Иначе
		Сообщить(Нстр("ru = 'Удаление выполнено с ошибками. Повторите попытку.'; en = 'Failed to delete. Try again.'"));
	КонецЕсли;
	
КонецПроцедуры	
//rarus agar 25.08.2020  16181 --

#КонецОбласти