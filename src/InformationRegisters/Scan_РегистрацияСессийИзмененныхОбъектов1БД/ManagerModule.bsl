Функция СоздатьНовуюСессию(ТаблВозврата, ТипИзменяемогоОбъекта1БД, СтрокаОбновления, ИмяСобытияЖурналаРегистрации = "") Экспорт //rarus bonmak 09.01.2020 15279 ++ 
	Отказ = Ложь;
	// создаем новую сессию
	SessionGUID = Строка(Новый УникальныйИдентификатор());
	SessionStartDate = ТекущаяДата();
	SessionAuthor = ПользователиКлиентСервер.ТекущийПользователь();
	
	МенеджерЗаписи = РегистрыСведений.Scan_РегистрацияСессийИзмененныхОбъектов1БД.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДата();
	МенеджерЗаписи.SessionGUID = SessionGUID; 
	МенеджерЗаписи.ТипСессии = Перечисления.Scan_ТипыСессии.СессияСоздана;
	МенеджерЗаписи.UpdateSubject = ТипИзменяемогоОбъекта1БД;
	МенеджерЗаписи.UpdateSubjectGUID = СтрокаОбновления.UpdateSubjectGUID;
	МенеджерЗаписи.SessionStartDate = SessionStartDate;
	МенеджерЗаписи.SessionAuthor = SessionAuthor;
	МенеджерЗаписи.SessionSize = 0;
	МенеджерЗаписи.PacketSize = 100;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		СообщениеОбОшибке = "Не удалось создать запись в регистре Регистрация сессий измененных объектов 1БД о новой сессии.";
        Scan_ВебСервисы.scЗафиксироватьОшибку(СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации);
		Отказ = Истина;
	КонецПопытки;
	
	НовСтрока = ТаблВозврата.Добавить();
	ЗаполнитьЗначенияСвойств(НовСтрока, МенеджерЗаписи); 

	Возврат Отказ;
КонецФункции //rarus bonmak 09.01.2020 15279 --

Процедура ДобавитьНовыйТипСессии(СтрокаСессии, НовыйТипСессии, ИмяСобытияЖурналаРегистрации = "", Отказ) Экспорт //rarus bonmak 09.01.2020 15279 ++ 
	МенеджерЗаписи = РегистрыСведений.Scan_РегистрацияСессийИзмененныхОбъектов1БД.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаСессии);
	ПериодЗаписи = ТекущаяДата(); 
	Если МенеджерЗаписи.Период = ПериодЗаписи Тогда
		ПериодЗаписи = ТекущаяДата() + 1;	
	КонецЕсли;
	МенеджерЗаписи.Период = ПериодЗаписи;
	МенеджерЗаписи.ТипСессии = НовыйТипСессии;
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		СообщениеОбОшибке = "Не удалось создать запись в регистре о новой сессии. ("+СтрокаСессии.SessionGUID+")";
		Scan_ВебСервисы.scЗафиксироватьОшибку(СообщениеОбОшибке, ИмяСобытияЖурналаРегистрации); 
		Отказ = Истина;
	КонецПопытки;
	
	СтрокаСессии.Период = МенеджерЗаписи.Период; 
	СтрокаСессии.ТипСессии = МенеджерЗаписи.ТипСессии;
КонецПроцедуры //rarus bonmak 09.01.2020 15279 --

//rarus bonmak 18.08.2020 14375 ++
Процедура УдалитьНеЗакрытуюСессию(СтрокаСессии) Экспорт
	НаборЗаписей = РегистрыСведений.Scan_РегистрацияСессийИзмененныхОбъектов1БД.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.SessionGUID.Установить(СтрокаСессии.SessionGUID);
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		СообщениеОбОшибке = "Не удалось очистить записи в регистре по сессии. ("+СтрокаСессии.SessionGUID+")";
		Scan_ВебСервисы.scЗафиксироватьОшибку(СообщениеОбОшибке, "Механизм получения задач"); 
		Отказ = Истина;
	КонецПопытки;
КонецПроцедуры
//rarus bonmak 18.08.2020 14375 --
//rarus bonmak 18.08.2020 14375 ++
//Функция ПолучитьОткрытыеСессии(ТипИзменяемогоОбъекта1БД) Экспорт //rarus bonmak 09.01.2020 15279 ++
//	Запрос = Новый Запрос;	
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.SessionGUID КАК SessionGUID,
//	               |	МАКСИМУМ(ВЫБОР
//	               |			КОГДА Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.ТипСессии = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСессии.СессияЗакрыта)
//	               |				ТОГДА ИСТИНА
//	               |			ИНАЧЕ ЛОЖЬ
//	               |		КОНЕЦ) КАК СессияЗакрыта,
//	               |	МАКСИМУМ(Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.Период) КАК Период
//	               |ПОМЕСТИТЬ ВсеСессии
//	               |ИЗ
//	               |	РегистрСведений.Scan_РегистрацияСессийИзмененныхОбъектов1БД.СрезПоследних(, UpdateSubject = &ТипИзменяемогоОбъекта1БД) КАК Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних
//	               |
//	               |СГРУППИРОВАТЬ ПО
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.SessionGUID
//	               |
//	               |ИМЕЮЩИЕ
//	               |	НЕ МАКСИМУМ(ВЫБОР
//	               |				КОГДА Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.ТипСессии = ЗНАЧЕНИЕ(Перечисление.Scan_ТипыСессии.СессияЗакрыта)
//	               |					ТОГДА ИСТИНА
//	               |				ИНАЧЕ ЛОЖЬ
//	               |			КОНЕЦ)
//	               |;
//	               |
//	               |////////////////////////////////////////////////////////////////////////////////
//	               |ВЫБРАТЬ
//	               |	ВсеСессии.SessionGUID КАК SessionGUID,
//	               |	ВсеСессии.Период КАК Период,
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.ТипСессии КАК ТипСессии,
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.UpdateSubjectGUID КАК UpdateSubjectGUID,
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.UpdateSubject КАК UpdateSubject,
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.SessionStartDate КАК SessionStartDate,
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.SessionAuthor КАК SessionAuthor,
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.SessionSize КАК SessionSize,
//	               |	Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.PacketSize КАК PacketSize
//	               |ИЗ
//	               |	ВсеСессии КАК ВсеСессии
//	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Scan_РегистрацияСессийИзмененныхОбъектов1БД.СрезПоследних(, UpdateSubject = &ТипИзменяемогоОбъекта1БД) КАК Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних
//	               |		ПО (Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.Период = ВсеСессии.Период)
//	               |			И (Scan_РегистрацияСессийИзмененныхОбъектов1БДСрезПоследних.SessionGUID = ВсеСессии.SessionGUID)
//	               |
//	               |УПОРЯДОЧИТЬ ПО
//	               |	Период";
//	Запрос.УстановитьПараметр("ТипИзменяемогоОбъекта1БД", ТипИзменяемогоОбъекта1БД);
//			
//	Возврат Запрос.Выполнить().Выгрузить();
//	
//КонецФункции //rarus bonmak 09.01.2020 15279 --
//rarus bonmak 18.08.2020 14375 --
