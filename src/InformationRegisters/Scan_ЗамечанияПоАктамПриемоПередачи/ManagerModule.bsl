
//rarus tenkam 28.07.2016 mantis 7219 ++
Функция ПолучитьЗамечанияПоИзделиюИзРегистра(Изделие) Экспорт
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//				//rarus tenkam 05.10.2017 mantis 9426 +++
	//			   //|	Scan_ЗамечанияПоАктамПриемоПередачи.МестоХранения КАК МестоХранения,
	//			   //|	Scan_ЗамечанияПоАктамПриемоПередачи.ДатаОбнаруженияНедостатка КАК ДатаОбнаруженияНедостатка
	//			   //|	Scan_ЗамечанияПоАктамПриемоПередачи.ТранспортнаяКомпания КАК ТранспортнаяКомпания,
	//			   |	Scan_ЗамечанияПоАктамПриемоПередачи.МестоХранения КАК МестоОбнаружения,
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.ДатаОбнаруженияНедостатка КАК ДатаОбнаружения,
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.ТранспортнаяКомпания КАК Контрагент,
	//			   //rarus tenkam 05.10.2017 mantis 9426 ---
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.Замечание КАК Замечание, 
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.Устранено КАК Устранено,
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.ПорядковыйНомер КАК ПорядковыйНомер,
	//			   //rarus tenkam 05.10.2017 mantis 9426 +++
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.КодНеисправнойДетали КАК КодНеисправнойДетали,
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.КодДефекта КАК КодДефекта,
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.Количество КАК Количество,
	//			   |	Scan_ЗамечанияПоАктамПриемоПередачи.ДатаУстранения КАК ДатаУстранения,
	//			   |	Scan_ЗамечанияПоАктамПриемоПередачи.КодНеисправнойДетали.КодДетали КАК КодНеисправностиКод,
	//			   |	Scan_ЗамечанияПоАктамПриемоПередачи.Пользователь КАК Пользователь,
	//			   |	Scan_ЗамечанияПоАктамПриемоПередачи.КодДефекта.КодДефекта КАК КодДефектаКод
	//			   //rarus tenkam 05.10.2017 mantis 9426 ---
	//               |ИЗ
	//               |	РегистрСведений.Scan_ЗамечанияПоАктамПриемоПередачи КАК Scan_ЗамечанияПоАктамПриемоПередачи
	//               |ГДЕ
	//               |	Scan_ЗамечанияПоАктамПриемоПередачи.Изделие = &Изделие
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ПорядковыйНомер" ;
	//Запрос.УстановитьПараметр("Изделие", Изделие);
	//Результат = Запрос.Выполнить().Выгрузить();
	//Возврат Результат;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.Период КАК ДатаОбнаружения,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.МестоОбнаружения КАК МестоОбнаружения,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.Контрагент КАК Контрагент,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.Замечание КАК Замечание,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.ПорядковыйНомер КАК ПорядковыйНомер,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.КодНеисправнойДетали КАК КодНеисправнойДетали,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.КодНеисправнойДетали.КодДетали КАК КодНеисправностиКод,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.КодДефекта КАК КодДефекта,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.КодДефекта.КодДефекта КАК КодДефектаКод,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.Устранено КАК Устранено,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.Количество КАК Количество,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.ДатаУстранения КАК ДатаУстранения,
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.Пользователь КАК Пользователь
	               |ИЗ
	               |	РегистрСведений.Scan_ЗамечанияПоАктамПриемоПередачи КАК Scan_ЗамечанияПоАктамПриемоПередачи
	               |ГДЕ
	               |	Scan_ЗамечанияПоАктамПриемоПередачи.Изделие = &Изделие
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПорядковыйНомер" ;
	Запрос.УстановитьПараметр("Изделие", Изделие);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

Процедура ЗаписатьЗамечанияПоИзделиюВРегистр(Изделие,ЗамечанияТЗ) Экспорт
	НаборЗаписей = РегистрыСведений.Scan_ЗамечанияПоАктамПриемоПередачи.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Изделие.Установить(Изделие);
		
	Для Каждого СтрокаЗамечаний Из ЗамечанияТЗ Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.Период = СтрокаЗамечаний.ДатаОбнаружения;
		НоваяЗапись.Изделие = Изделие;
		НоваяЗапись.Замечание = СтрокаЗамечаний.Замечание;
		НоваяЗапись.Устранено = СтрокаЗамечаний.Устранено;
		НоваяЗапись.ПорядковыйНомер = ЗамечанияТЗ.Индекс(СтрокаЗамечаний);
		НоваяЗапись.МестоОбнаружения = СтрокаЗамечаний.МестоОбнаружения;
		НоваяЗапись.Контрагент = СтрокаЗамечаний.Контрагент;
		НоваяЗапись.КодНеисправнойДетали = СтрокаЗамечаний.КодНеисправнойДетали;
		НоваяЗапись.КодДефекта = СтрокаЗамечаний.КодДефекта;
		НоваяЗапись.Количество = СтрокаЗамечаний.Количество;
		НоваяЗапись.ДатаУстранения = СтрокаЗамечаний.ДатаУстранения;
		НоваяЗапись.Пользователь    = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЦикла;
	НаборЗаписей.Записать();
	
КонецПроцедуры
//rarus tenkam 28.07.2016 mantis 7219 --

Процедура ДобавитьЗамечанияПоИзделиюВРегистр(Изделие,ЗамечанияТЗ) Экспорт
	
	НаборЗаписей = РегистрыСведений.Scan_ЗамечанияПоАктамПриемоПередачи.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Изделие.Установить(Изделие);
	
	ПоследнийПорядковыйНомер = Неопределено;
	
	// получим старые замечания
	ТабЗамечаний = ПолучитьЗамечанияПоИзделиюИзРегистра(Изделие);
	Для Каждого СтрокаЗамечаний Из ТабЗамечаний Цикл
		НоваяЗапись = НаборЗаписей.Добавить(); 	
		НоваяЗапись.Изделие = Изделие;
		НоваяЗапись.Замечание = СтрокаЗамечаний.Замечание;
		НоваяЗапись.Устранено = СтрокаЗамечаний.Устранено;
		НоваяЗапись.ПорядковыйНомер = СтрокаЗамечаний.ПорядковыйНомер;
		НоваяЗапись.МестоОбнаружения = СтрокаЗамечаний.МестоОбнаружения;
		НоваяЗапись.Контрагент = СтрокаЗамечаний.Контрагент;
		НоваяЗапись.Период = СтрокаЗамечаний.ДатаОбнаружения;
		НоваяЗапись.КодНеисправнойДетали = СтрокаЗамечаний.КодНеисправнойДетали;
		НоваяЗапись.КодДефекта = СтрокаЗамечаний.КодДефекта;
		НоваяЗапись.Количество = СтрокаЗамечаний.Количество;
		НоваяЗапись.ДатаУстранения = СтрокаЗамечаний.ДатаУстранения;
		НоваяЗапись.Пользователь = СтрокаЗамечаний.Пользователь;
		
		ПоследнийПорядковыйНомер = СтрокаЗамечаний.ПорядковыйНомер; 
	КонецЦикла;  
	
	ПоследнийПорядковыйНомер = ?(ПоследнийПорядковыйНомер = Неопределено, 0, ПоследнийПорядковыйНомер + 1);
	
	// запишем новые замечания
	Для Каждого СтрокаЗамечаний Из ЗамечанияТЗ Цикл
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Период = СтрокаЗамечаний.ДатаОбнаружения;
		НоваяЗапись.Изделие = Изделие;
		НоваяЗапись.Замечание = СтрокаЗамечаний.Замечание;
		НоваяЗапись.Устранено = СтрокаЗамечаний.Устранено;
		НоваяЗапись.ПорядковыйНомер = ПоследнийПорядковыйНомер;
		НоваяЗапись.МестоОбнаружения = СтрокаЗамечаний.МестоОбнаружения;
		НоваяЗапись.Контрагент = СтрокаЗамечаний.Контрагент;
		НоваяЗапись.КодНеисправнойДетали = СтрокаЗамечаний.КодНеисправнойДетали;
		НоваяЗапись.КодДефекта = СтрокаЗамечаний.КодДефекта;
		НоваяЗапись.Количество = СтрокаЗамечаний.Количество;
		НоваяЗапись.ДатаУстранения = СтрокаЗамечаний.ДатаУстранения;
		НоваяЗапись.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
		ПоследнийПорядковыйНомер = ПоследнийПорядковыйНомер + 1;
	КонецЦикла;
	НаборЗаписей.Записать();
	
КонецПроцедуры
